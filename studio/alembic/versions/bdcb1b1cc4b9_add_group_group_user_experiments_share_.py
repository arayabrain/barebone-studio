"""add group group_user experiments_share_groups table

Revision ID: bdcb1b1cc4b9
Revises: 84296a33ffd2
Create Date: 2023-10-19 09:48:28.346500

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = "bdcb1b1cc4b9"
down_revision = "84296a33ffd2"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "groups",
        sa.Column("id", mysql.BIGINT(unsigned=True), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "experiments_share_groups",
        sa.Column("id", mysql.BIGINT(unsigned=True), nullable=False),
        sa.Column("experiment_uid", mysql.BIGINT(unsigned=True), nullable=False),
        sa.Column("group_id", mysql.BIGINT(unsigned=True), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["experiment_uid"],
            ["experiments.id"],
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["groups.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "experiment_uid", "group_id", name="idx_experiment_uid_group_id"
        ),
    )
    op.create_table(
        "user_groups",
        sa.Column("id", mysql.BIGINT(unsigned=True), nullable=False),
        sa.Column("user_id", mysql.BIGINT(unsigned=True), nullable=False),
        sa.Column("group_id", mysql.BIGINT(unsigned=True), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["groups.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "group_id", name="idx_user_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_groups")
    op.drop_table("experiments_share_groups")
    op.drop_table("groups")
    # ### end Alembic commands ###
