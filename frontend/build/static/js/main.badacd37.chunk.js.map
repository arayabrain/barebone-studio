{"version":3,"sources":["utils/param/ParamUtils.ts","store/slice/AlgorithmNode/AlgorithmNodeSelectors.ts","store/slice/FlowElement/FlowElementType.ts","store/slice/FlowElement/FlowElementUtils.ts","store/slice/FlowElement/FlowElementSelectors.ts","store/slice/NWB/NWBSelectors.ts","store/slice/Pipeline/PipelineType.ts","store/slice/DisplayData/DisplayDataType.ts","store/slice/DisplayData/DisplayDataUtils.ts","store/slice/Pipeline/PipelineUtils.ts","store/slice/Pipeline/PipelineSelectors.ts","store/slice/Snakemake/SnakemakeSelectors.ts","store/slice/InputNode/InputNodeType.ts","store/slice/InputNode/InputNodeUtils.ts","store/slice/InputNode/InputNodeSelectors.ts","store/selectors/run/RunSelectors.ts","const/API.ts","api/run/Run.ts","store/slice/Pipeline/PipelineActions.ts","api/experiments/Experiments.ts","store/slice/Experiments/ExperimentsType.ts","store/slice/Experiments/ExperimentsActions.ts","store/slice/Pipeline/PipelineSlice.ts","store/slice/AlgorithmList/AlgorithmListUtils.ts","store/slice/AlgorithmList/AlgorithmListSelectors.ts","store/slice/AlgorithmList/AlgorithmListType.ts","api/algolist/AlgoList.ts","store/slice/AlgorithmList/AlgorithmListActions.ts","api/params/Params.ts","store/slice/FlowElement/FlowElementActions.ts","utils/nanoid/NanoIdUtils.ts","const/flowchart.ts","components/FlowChart/DnDItemType.ts","components/FlowChart/TreeView.tsx","store/slice/InputNode/InputNodeActions.ts","api/run/RunUtils.ts","api/files/Files.ts","store/slice/FileUploader/FileUploaderType.ts","store/slice/FileUploader/FileUploaderActions.ts","store/slice/FlowElement/FlowElementSlice.ts","api/nwb/NWB.ts","store/slice/NWB/NWBType.ts","store/slice/NWB/NWBAction.ts","store/slice/NWB/NWBSlice.ts","store/slice/RightDrawer/RightDrawerSlice.ts","utils/EqualityUtils.ts","components/common/Accordion.tsx","components/common/ParamFormItemCreator.tsx","components/FlowChart/NWB.tsx","api/snakemake/Snakemake.ts","store/slice/Snakemake/SnakemakeType.ts","store/slice/Snakemake/SnakemakeAction.ts","store/slice/Snakemake/SnakemakeSlice.ts","components/FlowChart/Snakemake.tsx","components/RunButtons.tsx","components/ToolBar.tsx","components/FlowChart/FlowChartNode/HandleColorHook.ts","store/slice/HandleTypeColor/HandleTypeColorSelectors.ts","components/FlowChart/FlowChartNode/LinerProgressWithLabel.tsx","store/slice/FileUploader/FileUploaderInitlalState.ts","store/slice/FileUploader/FileUploaderSelectors.ts","store/slice/FileUploader/FileUploaderHook.ts","components/Visualize/DialogContext.tsx","components/FlowChart/FlowChartNode/FileSelect.tsx","components/FlowChart/FlowChartNode/FlowChartUtils.ts","components/FlowChart/FlowChartNode/ImageFileNode.tsx","components/FlowChart/FlowChartNode/AlgorithmNode.tsx","store/slice/InputNode/InputNodeSlice.ts","store/slice/DisplayData/DisplayDataSelectors.ts","api/outputs/Outputs.ts","store/slice/DisplayData/DisplayDataActions.ts","components/Visualize/DataContext.tsx","store/slice/VisualizeItem/VisualizeItemType.ts","store/slice/VisualizeItem/VisualizeItemUtils.ts","store/slice/VisualizeItem/VisualizeItemSelectors.ts","components/Visualize/Plot/CsvPlot.tsx","components/FlowChart/FlowChartNode/CsvFileNode.tsx","store/slice/HDF5/HDF5Selectors.ts","api/hdf5/HDF5.ts","store/slice/HDF5/HDF5Type.ts","store/slice/HDF5/HDF5Action.ts","components/FlowChart/FlowChartNode/HDF5FileNode.tsx","components/FlowChart/FlowChartNode/FluoFileNode.tsx","components/FlowChart/FlowChartNode/BehaviorFileNode.tsx","components/FlowChart/FlowChartNode/ReactFlowNodeTypesConst.ts","components/FlowChart/CustomEdge.tsx","store/slice/VisualizeItem/VisualizeItemActions.ts","store/slice/VisualizeItem/VisualizeItemSlice.ts","components/Visualize/Plot/HeatMapPlot.tsx","components/Visualize/Plot/ImagePlot.tsx","components/Visualize/Plot/RoiPlot.tsx","components/Visualize/Plot/ScatterPlot.tsx","components/Visualize/Plot/TimeSeriesPlot.tsx","components/Visualize/Plot/BarPlot.tsx","components/Visualize/Plot/HTMLPlot.tsx","components/Visualize/DisplayDataItem.tsx","components/FlowChart/FlowChartNode/AlgorithmOutputDialog.tsx","store/slice/FilesTree/FilesTreeSelectors.ts","store/slice/FilesTree/FilesTreeType.ts","store/slice/FilesTree/FilesTreeAction.ts","store/slice/FilesTree/FilesTreeUtils.ts","components/common/FileSelectDialog.tsx","components/FlowChart/ReactFlowComponent.tsx","store/slice/RightDrawer/RightDrawerSelectors.ts","store/slice/AlgorithmNode/AlgorithmNodeType.ts","store/slice/AlgorithmNode/AlgorithmNodeActions.ts","store/slice/AlgorithmNode/AlgorithmNodeSlice.ts","components/FlowChart/AlgorithmParamForm.tsx","components/FlowChart/RightDrawer.tsx","components/FlowChart/FlowChart.tsx","components/Visualize/VisualizeItemAddButton.tsx","components/utils/MouseDragUtil.ts","components/Visualize/VisualizeItemLayoutMenuIcon.tsx","components/Visualize/FilePathSelect.tsx","components/Visualize/VisualizeItem.tsx","components/Visualize/FlexItemList.tsx","components/Visualize/Editor/GradientColorPicker.tsx","components/Visualize/Editor/SaveFig.tsx","components/Visualize/Editor/ImageItemEditor.tsx","components/Visualize/Editor/CsvItemEditor.tsx","components/Visualize/Editor/HeatmapItemEditor.tsx","components/Visualize/Editor/TimeSeriesItemEditor.tsx","components/Visualize/Editor/RoiItemEditor.tsx","components/Visualize/Editor/ScatterItemEditor.tsx","components/Visualize/Editor/BarItemEditor.tsx","components/Visualize/VisualizeItemEditor.tsx","components/Visualize/Visualize.tsx","store/slice/Experiments/ExperimentsSelectors.ts","components/Experiment/ExperimentStatusIcon.tsx","components/Experiment/Button/DownloadButton.tsx","components/Experiment/CollapsibleTable.tsx","components/Experiment/Button/DeleteButton.tsx","components/Experiment/Button/ImportButton.tsx","components/Experiment/ExperimentTable.tsx","components/utils/LocalStorageUtil.ts","components/Experiment/Experiment.tsx","components/optinist.png","components/Layout.tsx","store/slice/Pipeline/PipelineHook.ts","App.tsx","reportWebVitals.ts","store/slice/AlgorithmList/AlgorithmListSlice.ts","store/slice/DisplayData/DisplayDataSlice.ts","store/slice/FileUploader/FileUploaderSlice.ts","store/slice/FilesTree/FilesTreeSlice.ts","store/slice/HandleTypeColor/HandleTypeColorSlice.ts","store/slice/HDF5/HDF5Utils.ts","store/slice/HDF5/HDF5Slice.ts","store/slice/Experiments/ExperimentsUtils.ts","store/slice/Experiments/ExperimentsSlice.ts","store/store.ts","Theme.ts","index.tsx"],"names":["getChildParam","path","ParamMap","result","Object","values","node","isParamChild","children","param","type","convertToParamMap","dto","keyList","entries","forEach","name","value","kList","Array","isArray","isDictObject","concat","join","push","selectAlgorithmNodeById","nodeId","state","algorithmNode","selectAlgorithmName","selectAlgorithmParams","params","selectAlgorithmNodeNotExist","keys","selectAlgorithmNode","length","FLOW_ELEMENT_SLICE_NAME","NODE_TYPE_SET","isNodeData","isNode","data","isAlgorithmNodeData","getLabelByPath","filePath","getFileName","split","reverse","selectFlowElements","flowElement","flowElements","selectFlowPosition","flowPosition","selectNodeById","filter","find","id","selectNodeLabelById","label","selectNwb","nwb","selectNwbParamsKeyList","selectNwbParam","paramKey","selectNwbParamsValue","target","Error","PIPELINE_SLICE_NAME","RUN_STATUS","NODE_RESULT_STATUS","RUN_BTN_OPTIONS","RUN_NEW","RUN_ALREADY","RUN_BTN_LABELS","DISPLAY_DATA_SLICE_NAME","DATA_TYPE_SET","toDataType","isNodeResultPending","nodeResult","status","isNodeResultSuccess","isStartedPipeline","pipeline","getInitialRunResult","runPostData","initialResult","nodeDict","convertToOutputPath","functionPath","selectPipelineLatestUid","currentPipeline","uid","selectStartedPipeline","run","selectPipelineRunBtn","runBtn","selectRunResultPendingNodeIdList","runResult","map","isNodeResultPendingAndNodeId","arg","selectPipelineStatus","selectPipelineIsCanceled","selectPipelineIsStartedSuccess","isNodeResultSuccessAndNodeId","selectPipelineNodeResultStatus","includes","selectPipelineNodeResultOutputPaths","outputPaths","selectSnakemakeParams","snakemake","selectSnakemake","selectSnakemakeParamsKeyList","selectSnakemakeParam","selectSnakemakeParamsValue","INPUT_NODE_SLICE_NAME","FILE_TYPE_SET","isCsvInputNode","inputNode","fileType","isHDF5InputNode","selectInputNodeById","selectInputNodeDefined","selectCsvInputNodeSelectedFilePath","selectedFilePath","selectImageInputNodeSelectedFilePath","selectHDF5InputNodeSelectedFilePath","selectFilePathIsUndefined","hdf5Path","selectCsvInputNodeParam","selectInputNodeHDF5Path","item","selectRunPostData","nwbParam","selectNwbParams","snakemakeParam","edgeDict","selectEdgeDictForRun","selectNodeDictForRun","forceRunList","selectForceRunList","isUpdated","elements","algorithmNodePostData","selectInputNodeSelectedFilePath","selectInputNodeFileType","selectInputNodeParam","inputNodePosyData","isEdge","edge","HOST","process","PORT","BASE_URL","runApi","a","axios","post","response","runByUidApi","pendingNodeIdList","createAsyncThunk","thunkAPI","responseData","rejectWithValue","runByCurrentUid","currentUid","getState","pollRunResult","getExperimentsApi","get","deleteExperimentByUidApi","delete","deleteExperimentByListApi","uidList","importExperimentByUidApi","downloadExperimentNwbApi","responseType","downloadExperimentConfigApi","renameExperiment","unique_id","new_name","patch","EXPERIMENTS_SLICE_NAME","getExperiments","_","deleteExperimentByUid","deleteExperimentByList","importExperimentByUid","initialState","pipelineSlice","createSlice","reducers","cancelPipeline","setRunBtnOption","action","payload","runBtnOption","extraReducers","builder","addCase","fulfilled","nodeResultDto","outputPath","message","convertToRunResult","rejected","meta","addMatcher","isAnyOf","pending","actions","isAlgoChild","algoNode","getAlgoChild","algoList","algoName","convertToAlgoListType","prototype","hasOwnProperty","call","args","returns","selectAlgorithmList","algorithmList","selectAlgorithmListIsLated","isLatest","selectAlgorithmListTree","tree","ALGORITHM_LIST_SLICE_NAME","getAlgoListApi","getAlgoList","getAlgoParamsApi","addAlgorithmNode","addInputNode","createAction","nanoid","customAlphabet","getNanoId","INITIAL_IMAGE_ELEMENT_ID","INITIAL_ALGO_STYLE","width","height","padding","borderRadius","INITIAL_DATA_STYLE","border","REACT_FLOW_NODE_TYPE_KEY","DND_ITEM_TYPE_SET","AlgorithmTreeView","React","memo","dispatch","useDispatch","useSelector","useEffect","onAddAlgoNode","useCallback","nodeName","position","newNode","TreeView","sx","flexGrow","defaultCollapseIcon","defaultExpandIcon","TreeItem","InputNodeComponent","fileName","i","AlgoNodeComponentRecursive","toFixed","onAddDataNode","nodeType","reactFlowNodeType","useLeafItemDrag","isDragging","dragRef","LeafItem","ref","style","opacity","onFocusCapture","e","stopPropagation","AddButton","onClick","AlgoNodeComponent","IconButton","size","Typography","variant","textOverflow","overflow","display","styled","treeItemClasses","iconContainer","margin","onDragEnd","useDrag","end","monitor","getDropResult","didDrop","collect","setInputNodeFilePath","isInputNodePostData","isInputNodeData","isAlgorithmNodePostData","FILE_TREE_TYPE_SET","getFilesTreeApi","file_type","uploadFileApi","config","formData","FILE_UPLOADER_SLICE_NAME","setUploadProgress","uploadFile","requestId","getUploadConfig","percent","total","progess","resultPath","file_path","onUpdateProgressFn","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","initialFlowPosition","x","y","zoom","initialElementCoord","elementCoord","flowElementSlice","setFlowPosition","setFlowElements","deleteFlowElements","removeElements","deleteFlowElementsById","element","undefined","editFlowElementPositionById","coord","elementIdx","findIndex","ele","targetItem","targetPosition","Position","Left","sourcePosition","Right","updateElementCoord","targetNode","newNodeList","min","max","random","getNWBParamsApi","getNWBParams","nwbSlice","updateParam","newValue","RIGHT_DRAWER_MODE","open","mode","currendNodeId","rightDrawerSlice","openRightDrawer","closeRightDrawer","toggleParamForm","toggleNwb","toggleSnakemake","elm","arrayEqualityFn","b","every","v","twoDimarrayEqualityFn","Accordion","props","disableGutters","elevation","square","borderColor","theme","palette","divider","boxShadow","borderBottom","createParamFormItemComponent","paramSelector","paramValueSelector","paramUpdateActionCreator","useParamValueUpdate","ParamItemForString","updateParamAction","TextField","onChange","multiline","ParamItemForNumber","InputLabelProps","shrink","event","Number","ParamItemForBoolean","Switch","checked","ParamItemForValueType","ParamChildItem","Box","marginTop","spacing","marginBottom","alignItems","verticalAlign","ParamItem","AccordionSummary","expandIcon","AccordionDetails","NWBSettingButton","Button","endIcon","NWBSettingContents","paramKeyList","className","Component","getSnakemakeParamsApi","SNAKEMAKE_SLICE_NAME","getSnakemakeParams","SnakemakeSlice","SnakemakeButton","SnakemakeContents","RunButtons","isStartedSuccess","filePathIsUndefined","algorithmNodeNotExist","handleCancelPipeline","handleRunPipeline","handleRunPipelineByUid","useState","dialogOpen","setDialogOpen","enqueueSnackbar","useSnackbar","menuOpen","setMenuOpen","anchorRef","useRef","handleClose","current","contains","uidExists","ButtonGroup","disabled","errorMessage","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","option","MenuItem","selected","handleMenuItemClick","marginRight","RunDialog","handleRun","setName","error","setError","Dialog","onClose","DialogTitle","DialogContent","autoFocus","fullWidth","helperText","DialogActions","color","ToolBar","float","textAlign","top","right","zIndex","textTransform","useHandleColor","key","handleColor","colorMap","LinearProgressWithLabel","mr","LinearProgress","minWidth","inistialUploaderState","isUninitialized","uploadingProgress","selectFileUploader","fileUploader","useFileUploader","onUploadFile","uninitialized","selectFileUploadIsUninitialized","selectUploadFilePath","selectFileUploadIsPending","selectFileUploadIsFulfilled","progress","selectFileUploadProgress","selectFileUploadError","DialogContext","createContext","onOpen","onOpenDialogFile","FileSelect","multiSelect","onChangeFilePath","marginLeft","FileSelectImple","onSelectFile","fileTreeType","selectButtonLabel","uploadButtonLabel","useContext","inputRef","accept","getFileInputAccept","click","preventDefault","files","file","FormData","append","visibility","toHandleId","getHandleType","handleId","isValidConnection","connection","sourceHandle","targetHandle","sourceHandleStyle","ImageFileNode","ImageFileNodeImple","elementSelected","useTheme","returnType","imageColor","background","alpha","primary","light","leftHandleStyle","rightHandleStyle","AlgorithmNode","AlgorithmNodeImple","isConnectable","useStatus","tabIndex","AlgoName","mx","AlgoArgs","AlgoReturns","Message","pipelineStatus","paddingLeft","main","algoArgs","algoListChild","selectAlgoArgs","algoInfoListEqualtyFn","info","algoInfo","ArgHandle","algoReturns","selectAlgoReturns","ReturnHandle","isNone","hex_color","isHover","setHover","rgb_color","hex","exec","parseInt","hexToRgb","onMouseEnter","onMouseLeave","Tooltip","title","arrow","latestUid","errorMsg","selectPipelineNodeResultMessage","anchorElRef","setOpen","Popover","anchorOrigin","vertical","horizontal","FormHelperText","inputNodeSlice","deleteInputNode","setCsvInputNodeParam","setInputNodeHDF5Path","setHeader","setIndex","transpose","newState","selectDisplayData","displayData","selectTimeSeriesData","timeSeries","selectTimeSeriesDataIsInitialized","selectHeatMapDataIsInitialized","heatMap","selectImageData","image","selectImageDataIsInitialized","selectImageDataIsPending","selectCsvDataIsInitialized","csv","selectCsvDataError","selectCsvDataIsPending","selectCsvDataIsFulfilled","selectRoiData","roi","selectRoiDataIsInitialized","selectRoiDataIsFulfilled","selectScatterDataIsInitialized","scatter","selectBarDataIsInitialized","bar","selectHTMLDataIsInitialized","html","getTimeSeriesInitDataApi","getTimeSeriesDataByIdApi","index","getTimeSeriesAllDataApi","getHeatMapDataApi","getImageDataApi","start_index","startIndex","end_index","endIndex","getCsvDataApi","getRoiDataApi","getScatterDataApi","getBarDataApi","getHTMLDataApi","addRoiApi","mergeRoiApi","deleteRoiApi","getTimeSeriesInitData","getTimeSeriesDataById","getTimeSeriesAllData","getHeatMapData","getImageData","getCsvData","getRoiData","getScatterData","getBarData","getHTMLData","DisplayDataContext","dataType","itemId","NaN","VISUALIZE_ITEM_SLICE_NAME","VISUALIZE_ITEM_TYPE_SET","isDisplayDataItem","itemType","isImageItem","isTimeSeriesItem","isCsvItem","isHeatMapItem","isScatterItem","isBarItem","selectSelectedVisualizeItemId","visualaizeItem","selectedItemId","selectVisualizeImageItemIdList","items","selectVisualizeItemById","isWorkflowDialog","selectVisualizeItems","selectVisualizeItemLayout","layout","selectVisualizeItemWidth","selectVisualizeItemHeight","selectVisualizeDataType","selectVisualizeDataNodeId","selectVisualizeDataFilePath","selectVisualizeSaveFilename","saveFileName","selectVisualizeSaveFormat","saveFormat","selectImageItemFilePath","selectTimeSeriesItemFilePath","selectRoiItemFilePath","roiItem","selectImageItemShowticklabels","showticklabels","selectImageItemZsmooth","zsmooth","selectImageItemStartIndex","selectImageItemEndIndex","selectImageItemShowLine","showline","selectImageItemShowGrid","showgrid","selectImageItemShowScale","showscale","selectImageItemColors","colors","selectImageItemAlpha","selectImageItemRoiAlpha","roiAlpha","selectTimeSeriesItemOffset","offset","selectTimeSeriesItemSpan","span","selectTimeSeriesItemShowGrid","selectTimeSeriesItemShowLine","selectTimeSeriesItemShowTickLabels","selectTimeSeriesItemZeroLine","zeroline","selectTimeSeriesItemXrange","xrange","selectTimeSeriesItemDrawOrderList","drawOrderList","selectTimeSeriesItemRefRoiUniqueList","refImageItemId","imageItem","roiUniqueList","selectTimeSeriesItemKeys","dataKeys","selectRoiItemMaxNumber","roiFilePath","roiData","arr","selectHeatMapItemShowScale","selectHeatMapItemColors","selectCsvItemTranspose","selectCsvItemSetHeader","selectCsvItemSetIndex","selectBarItemIndex","selectScatterItemXIndex","xIndex","selectScatterItemYIndex","yIndex","selectDisplayDataIsSingle","targetFilePath","CsvPlot","isInitialized","isPending","isFulfilled","CsvPlotImple","PresentationalCsvPlot","csvData","useMemo","col","row","header","headerData","field","headerName","idx","rows","row_id","rowObj","fromEntries","columns","CsvFileNode","CsvFileNodeImple","ParamSettingDialog","selectCsvInputNodeParamSetHeader","setSetHeader","selectCsvInputNodeParamSetIndex","setSetIndex","selectCsvInputNodeParamTranspose","setTranspose","dividers","p","m","FormControlLabel","control","CsvPreview","otherProps","selectHDF5","hdf5","getHDF5TreeApi","HDF5_SLICE_NAME","getHDF5Tree","HDF5FileNode","HDF5FileNodeImple","ItemSelect","structureFileName","Structure","FileTreeView","isLoading","useHDF5Tree","TreeNode","isDir","icon","htmlColor","nodes","childNode","fontSize","shape","nbytes","FluoFileNode","FluoFileNodeImple","fluoColor","BehaviorFileNode","BehaviorFileNodeImple","behaviorColor","reactFlowNodeTypes","reactFlowEdgeTypes","buttonedge","sourceX","sourceY","targetX","targetY","arrowHeadType","markerEndId","edgePath","getBezierPath","markerEnd","getMarkerEnd","getEdgeCenter","edgeCenterX","edgeCenterY","d","foreignObjectSize","setImageItemClikedDataId","clickedDataId","selectingImageArea","range","x1","x2","y1","y2","selectedZList","z","zNum","String","selectedZ","deleteDisplayItem","setNewDisplayDataPath","displayDataCommonInitialValue","imageItemInitialValue","rgb","activeIndex","duration","timeSeriesItemInitialValue","left","maxIndex","heatMapItemInitialValue","csvItemInitialValue","roiItemInitialValue","scatterItemInitialValue","barItemInitialValue","hdf5ItemInitialValue","htmlItemInitialValue","fluoItemInitialValue","behaviorItemInitialValue","getDisplayDataItemInitialValue","visualaizeItemSlice","pushInitialItemToNewRow","newItemId","addInitialItemFn","insertInitialItemToNextColumn","targetItemId","targetRowIndex","targetColumnIndex","indexOf","splice","addItemForWorkflowDialog","maxId","getMaxItemId","deleteAllItemForWorkflowDialog","setItemSize","selectItem","reset","setRoiItemFilePath","outputKey","setFilePath","setSaveFormat","setSaveFileName","setImageItemFilePath","setTimeSeriesItemFilePath","setHeatMapItemFilePath","resetImageActiveIndex","resetImageActiveIndexFn","incrementImageActiveIndex","decrementImageActiveIndex","setImageActiveIndex","setImageItemShowticklabels","setImageItemZsmooth","setImageItemShowLine","setImageItemShowGrid","setImageItemShowScale","setImageItemColors","setImageItemStartIndex","setImageItemEndIndex","setImageItemAlpha","setImageItemRoiAlpha","setImageItemDuration","setTimeSeriesItemOffset","setTimeSeriesItemSpan","setTimeSeriesItemShowGrid","setTimeSeriesItemShowLine","setTimeSeriesItemShowTickLabels","setTimeSeriesItemZeroLine","setTimeSeriesItemXrangeLeft","setTimeSeriesItemXrangeRight","setTimeSeriesItemDrawOrderList","resetAllOrderList","setTimeSeriesItemMaxIndex","setTimeSeriesRefImageItemId","setHeatMapItemShowScale","setHeatMapItemColors","setCsvItemTranspose","setCsvItemSetHeader","setCsvItemSetIndex","setScatterItemXIndex","setScatterItemYIndex","setBarItemIndex","imageItemId","idList","reduce","nextId","HeatMapPlot","selectHeatMapDataError","selectHeatMapDataIsFulfilled","HeatMapImple","heatMapData","heatMapDataEqualtyFn","selectHeatMapColumns","selectHeatMapIndex","colorscale","parseFloat","offsets","hoverongaps","showlegend","dragmode","t","l","autosize","displayModeBar","responsive","toImageButtonOptions","format","filename","PositionDrag","initSizeDrag","floor","sChart","ImagePlot","selectImageDataError","ImagePlotImple","selectImageItemActiveIndex","ImagePlotChart","imageData","selectActiveImageData","imageDataEqualtyFn","isAddRoi","setIsAddRoi","roiDataState","setRoiDataState","pointClick","setPointClick","itemsVisual","timeDataMaxIndex","maxIdx","selectRoiItemIndex","sizeDrag","setSizeDrag","startDragAddRoi","setStartDragAddRoi","positionDrag","setChangeSize","refPageXSize","refPageYSize","colorscaleRoi","createColormap","colormap","nshades","onCancel","onCancelAdd","rgba2hex","replace","hoverinfo","new_i","zmin","zmax","selectMode","setSelectMode","onSelecting","callback","timeoutId","delay","clearTimeout","setTimeout","debounce","xaxis","autorange","autotick","ticks","yaxis","automargin","setSelectRoi","point","newPoints","newRoi","some","addRoi","onMouseUpDragAddRoi","onMouseDownSize","pageX","pageY","addRoiSubmit","sizeX","sizeY","xAdd","yAdd","pointCenter","posx","posy","sizex","sizey","resetTimeSeries","onMergeRoi","ids","onDeleteRoi","mt","PlayBack","ml","minHeight","BoxDiv","LinkDiv","points","curveNumber","toString","DivAddRoi","DivSvg","onMouseMove","newSizeDrag","currentTarget","getBoundingClientRect","newX","newY","ceil","window","scrollY","LEFT","newWidth","newLeft","RIGHT","BOTTOM","newHeight","TOP","newTop","onMouseUp","DivDrag","DragCenter","onMouseDown","cursor","DragSizeLeft","DragSizeRight","DragSizeTop","DragSizeBottom","maxSize","selectImageItemDuration","intervalRef","clearInterval","onPlayClick","setInterval","onDurationChange","inputProps","step","Slider","defaultValue","valueLabelDisplay","marks","activeThumb","newIndex","rgba","r","g","outParts","substring","part","listStyle","textDecoration","DragSize","bottom","RoiPlot","selectRoiDataError","RoiPlotImple","ScatterPlot","selectScatterDataError","selectScatterDataIsFulfilled","ScatterPlotImple","scatterData","scatterDataEqualityFn","text","textposition","textfont","family","marker","font","XIndex","YIndex","FormControl","InputLabel","Select","aArray","bArray","aKey","TimeSeriesPlot","selectTimeSeriesDataError","selectTimeSeriesDataIsFulfilled","TimeSeriesPlotImple","timeSeriesData","timeSeriesDataEqualityFn","dataXrange","dataStd","std","selectTimeSeriesStd","colorScale","activeIdx","mean","sqrt","pow","visible","line","error_y","array","annotations","xref","yref","arrowhead","ax","ay","onLegendClick","clickNumber","newDrawOrderList","aValue","bKey","bValue","nestEqualityFun","BarPlot","selectBarDataError","selectBarDataIsFulfilled","BarPlotImple","barData","barDataEqualityFn","selectBarIndex","SelectIndex","HTMLPlot","selectHTMLDataError","selectHTMLDataIsFulfilled","HTMLPlotImple","htmlData","dangerouslySetInnerHTML","__html","DisplayDataItem","Provider","DisplayPlot","AlgorithmOutputDialog","closeFn","TitleWithCloseButton","pt","px","OutputViewer","outputKeyList","selectPipelineNodeResultOutputKeyList","selectedOutoutKey","setSelectedOutputKey","OutputSelectTabs","onSelectOutput","DisplayDataView","Tabs","scrollButtons","tabsClasses","Tab","selectPipelineNodeResultOutputFilePath","selectPipelineNodeResultOutputFileDataType","selectVisualizeItemIdForWorkflowDialog","my","selectFilesTree","filesTree","FILES_TREE_SLICE_NAME","getFilesTree","convertToTreeNodeType","isdir","getNodeByPath","FileSelectDialog","initialFilePath","onClickCancel","onClickOk","setSelectedFilePath","FilePathSelectedListView","selectFilesTreeNodes","selectFilesIsLatest","selectFilesIsLoading","useFileTree","onCheckFile","selectedPath","onCheckDir","childrenFilePathList","from","Set","disableSelection","onNodeSelect","nodeIds","isDirNodeByPath","allChecked","allNotChecked","indeterminate","TreeItemLabel","checkboxProps","Checkbox","disableRipple","initDialogFile","ReactFlowComponent","dialogNodeId","setDialogNodeId","dialogFile","setDialogFile","reactFlowInstance","setReactFlowInstance","wrapparRef","useDrop","drop","monitorOffset","getClientOffset","project","offsetLeft","offsetTop","onElementsRemove","elementsToRemove","onConnect","addEdge","animated","onLoad","onDragOver","dataTransfer","dropEffect","onNodeDragStop","nodeTypes","edgeTypes","defaultPosition","defaultZoom","onMoveEnd","selectRightDrawerIsOpen","rightDrawer","selectRightDrawerMode","selectRightDrawerCurrentNodeId","ALGORITHM_NODE_SLICE_NAME","getAlgoParams","algorithmNodeSlice","AlgorithmParamForm","ParamFormContext","algoParamIsLoaded","selectAlgorithmParamsExit","selectAlgorithmParamsKeyList","selectAlgorithmParam","selectAlgorithmParamsValue","Contents","ParamFormConetent","StyledDrawer","Drawer","flexShrink","drawerClasses","paper","MainContents","RightDrawer","anchor","Toolbar","Divider","FlowChart","RootDiv","DndProvider","backend","HTML5Backend","DrawerContents","drawerWidth","flexDirection","transitions","create","easing","sharp","leavingScreen","easeOut","enteringScreen","VisualizeItemAddButton","StyledPaper","justifyContent","StyledButton","borderWidth","useMouseDragHandler","dependencies","document","addEventListener","removeEventListener","once","DisplayDataItemLayoutMenuIcon","isSingleData","PresentationalLayoutMenuIcon","onClickDeleteMenu","deleteData","onClickInsertMenu","Menu","ListItemIcon","ListItemText","FilePathSelect","selectedNodeId","onSelect","inputNodeFilePathInfoList","inputNodes","selectInputNode","toDataTypeFromFileType","inputNodeDataType","algorithmNodeOutputPathInfoList","selectPipelineNodeResultSuccessList","paths","onSelectHandle","menuItemList","pathInfo","pathElm","ListSubheader","maxWidth","VisualizeItem","isSelected","movingSize","setMovingSize","onCommitSize","onMouseDownX","downEvent","movingX","screenX","movingWidth","moveEvent","MIN_WIDTH","onMouseDownY","movingY","screenY","movingHeight","MIN_HEIFHT","onMouseDownXY","useItemDragResize","ItemHeader","itemDataType","FilePathSelectItem","RefImageItemIdSelect","RoiSelect","newFilePath","newDataType","basePayload","prevDataType","prevFilePath","itemIdList","selectedRefImageItemId","selectTimeSeriesItemRefImageItemId","isNaN","roiItemNodeId","selectRoiItemNodeId","roiItemFilePath","FlexItemList","flexWrap","GradientColorPicker","dispatchSetColor","maxStops","paletteHeight","onPaletteChange","colorCode","rgbStr","flatStyle","WrappedSketchPicker","c","SaveFig","SelectedItemIdContext","ImageItemEditor","newPath","onSelectImageFile","Showticklabels","ShowLine","ShowGrid","ShowScale","Zsmooth","Alpha","inputError","RoiAlpha","StartEndIndex","onChangeStartIndex","onChangeEndIndex","CsvItemEditor","Transpose","SetHeader","SetIndex","HeatmapItemEditor","TimeSeriesItemEditor","Offset","Span","ShowTickLabels","ZeroLine","Xrange","newRight","LegendSelect","handleChange","drawIndexMap","unmountOnExit","RoiItemEditor","ScatterItemEditor","BarItemEditor","VisualizeItemEditor","DisplayDataItemEditor","DisplayEditor","StyledDrawerContents","Visualize","selectExperiments","experiments","selectExperimentsSatusIsUninitialized","selectExperimentsSatusIsFulfilled","selectExperimentsSatusIsError","selectExperimentsErrorMessage","selectExperimentList","experimentList","selectExperiment","selectExperimentName","selectExperimentFunction","functions","ExperimentStatusIcon","NWBDownloadButton","hasNWB","ExperimentUidContext","url","setFileUrl","URL","createObjectURL","Blob","revokeObjectURL","href","download","ConfigDownloadButton","CollapsibleTable","TableRow","TableCell","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","gutterBottom","component","Table","Head","Body","TableHead","nodeIdList","selectExperimentFunctionNodeIdList","TableBody","TableRowOfFunction","selectExperimentFunctionName","selectExperimentFunctionStatus","selectExperimentFunctionHasNWB","scope","DeleteButton","isRunning","ImportButton","unwrap","then","ExperimentTable","isError","TableImple","ExperimentsErrorView","Alert","severity","AlertTitle","experimentListValues","experimentListKeys","order","setOrder","sortTarget","setSortTarget","checkedList","setCheckedList","onCheckBoxClick","recordsIsEmpty","page","setPage","storageKey","initialValue","parseFn","savedStr","localStorage","getItem","JSON","parse","setValue","setItem","stringify","useLocalStorage","valueNum","rowsPerPage","setRowsPerPage","emptyRows","flexGlow","TableContainer","HeadItem","sortHandler","property","allCheckIndeterminate","onChangeAllCheck","experiment","checkboxVisible","sort","getComparator","slice","expData","RowItem","secondary","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","TableSortLabel","active","direction","timestamp","selectExperimentTimeStamp","statusList","f","selectExperimentStatus","selectExperimentHasNWB","isEdit","setEdit","errorEdit","setErrorEdit","valueEdit","setValueEdit","onSaveNewName","Fragment","tableCellClasses","root","borderBottomWidth","Input","placeholder","trim","onBlur","TextError","outline","orderBy","descendingComparator","Experiment","backgroundColor","StyledAppBar","AppBar","drawer","TabPanel","other","hidden","a11yProps","Layout","runPipeline","isCanceled","intervalId","prevStatus","setPrevStatus","useRunPipeline","src","optinistLogo","alt","centered","textColor","SnackbarCloseButton","snackbarKey","closeSnackbar","App","maxSnack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","algorithmListSlice","deleteDisplayDataFn","displayDataSlice","roi1Ddata","flat","roiUniqueIdList","n1","n2","fileUploaderSlice","setFileUploaderStateById","currentState","filesTreeSlice","ImageData","MuiColors","IscellData","TimeSeriesData","Suite2pData","FluoData","BehaviorData","nextKey","handleTypeColorSlice","HDF5Slice","convertToExperimentType","function","convertToExperimentStatus","success","experimentsSlice","convertToExperimentListType","rootReducer","combineReducers","algorithmListReducer","algorithmNodeReducer","displayDataReducer","fileUploaderReducer","flowElementReducer","inputNodeReducer","handleTypeColorReducer","filesTreeReducer","nwbReducer","rightDrawerReducer","visualaizeItemReducer","snakemakeReducer","pipelineReducer","hdf5Reducer","experimentsReducer","store","configureStore","reducer","createTheme","components","MuiTextField","defaultProps","MuiSelect","MuiDialog","disableEscapeKeyDown","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.badacd37.chunk.js","sourcesContent":["import {\n  ParamDTO,\n  ParamChild,\n  ParamParent,\n  ParamType,\n  ParamMap,\n} from './ParamType'\n\nexport function getChildParam(\n  path: string,\n  ParamMap: ParamMap,\n): ParamChild | null {\n  let result: ParamChild | null = null\n  for (const node of Object.values(ParamMap)) {\n    if (isParamChild(node)) {\n      if (node.path === path) {\n        result = node\n      }\n    } else {\n      result = getChildParam(path, node.children)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function isParamChild(param: ParamType): param is ParamChild {\n  return param.type === 'child'\n}\n\nexport function isParamParent(param: ParamType): param is ParamParent {\n  return param.type === 'parent'\n}\n\nfunction isDictObject(value: unknown): value is { [key: string]: unknown } {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst PATH_SEPARATOR = '/'\n\nexport function convertToParamMap(dto: ParamDTO, keyList?: string[]): ParamMap {\n  const ParamMap: ParamMap = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    const kList = keyList ?? []\n    if (isDictObject(value)) {\n      kList.push(name)\n      ParamMap[name] = {\n        type: 'parent',\n        children: convertToParamMap(value, kList),\n      }\n    } else {\n      ParamMap[name] = {\n        type: 'child',\n        value,\n        path: kList.concat([name]).join(PATH_SEPARATOR),\n      }\n    }\n  })\n  return ParamMap\n}\n\nexport function equalsParamMap(a: ParamMap, b: ParamMap) {\n  if (a === b) {\n    return true\n  }\n  const aArray = Object.keys(a)\n  const bArray = Object.keys(b)\n  return (\n    aArray.length === bArray.length &&\n    aArray.every((aKey) => {\n      const aValue = a[aKey]\n      const bValue = b[aKey]\n      return equalsParam(aValue, bValue)\n    })\n  )\n}\n\nfunction equalsParam(a: ParamType, b: ParamType): boolean {\n  if (a === b) {\n    return true\n  }\n  if (isParamChild(a) && isParamChild(b)) {\n    return equalsParamChild(a, b)\n  } else if (isParamParent(a) && isParamParent(b)) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      aArray.length === bArray.length &&\n      aArray.every((aKey) => {\n        const aValue = a.children[aKey]\n        const bValue = b.children[aKey]\n        return equalsParam(aValue, bValue)\n      })\n    )\n  } else {\n    return false\n  }\n}\n\nfunction equalsParamChild(a: ParamChild, b: ParamChild) {\n  return a.path === b.path && a.value === b.value\n}\n","import { RootState } from 'store/store'\n\nimport { getChildParam } from 'utils/param/ParamUtils'\n\nexport const selectAlgorithmNode = (state: RootState) => state.algorithmNode\n\nexport const selectAlgorithmNodeById = (nodeId: string) => (state: RootState) =>\n  state.algorithmNode[nodeId]\n\nexport const selectAlgorithmNodeDefined =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(state.algorithmNode).includes(nodeId)\n\nexport const selectAlgorithmFunctionPath =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).functionPath\n\nexport const selectAlgorithmName = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).name\n\nexport const selectAlgorithmParams = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).params\n\nexport const selectAlgorithmIsUpdated =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).isUpdated\n\nexport const selectAlgorithmParamsExit =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).params !== null\n\nexport const selectAlgorithmParamsKeyList =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(selectAlgorithmNodeById(nodeId)(state)?.params ?? {})\n\nexport const selectAlgorithmParamsValue =\n  (nodeId: string, path: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmParam =\n  (nodeId: string, paramKey: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      return params[paramKey]\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmNodeNotExist = (state: RootState) =>\n  Object.keys(selectAlgorithmNode(state)).length === 0\n","import { Elements, FlowTransform } from 'react-flow-renderer'\n\nexport const FLOW_ELEMENT_SLICE_NAME = 'flowElement'\n\nexport const NODE_TYPE_SET = {\n  INPUT: 'input',\n  ALGORITHM: 'algorithm',\n} as const\n\nexport type NODE_TYPE = typeof NODE_TYPE_SET[keyof typeof NODE_TYPE_SET]\n\nexport type NodeData = AlgorithmNodeData | InputNodeData\n\ninterface NodeDataBaseType<T extends NODE_TYPE> {\n  label: string\n  type: T\n}\n\nexport interface InputNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.INPUT> {}\n\nexport interface AlgorithmNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.ALGORITHM> {}\n\nexport interface ElementCoord {\n  x: number\n  y: number\n}\n\nexport interface FlowElement {\n  flowElements: Elements<NodeData>\n  flowPosition: FlowTransform\n  elementCoord: ElementCoord\n}\n","import { FlowElement, isNode, Node } from 'react-flow-renderer'\nimport {\n  AlgorithmNodeData,\n  NodeData,\n  NODE_TYPE_SET,\n  InputNodeData,\n} from './FlowElementType'\n\nexport function isNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<NodeData> {\n  return node != null && isNode(node) && node.data != null\n}\n\nexport function isAlgorithmNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<AlgorithmNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.ALGORITHM\n}\n\nexport function isInputNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<InputNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.INPUT\n}\n\nexport function getLabelByPath(filePath: string | string[]) {\n  if (Array.isArray(filePath)) {\n    if (filePath.length === 0) {\n      return ''\n    } else if (filePath.length === 1) {\n      return getFileName(filePath[0])\n    } else {\n      return getFileName(filePath[0]) + ` ... and ${filePath.length - 1} files`\n    }\n  } else {\n    return getFileName(filePath)\n  }\n}\n\nexport function getFileName(filePath: string) {\n  return filePath.split('/').reverse()[0]\n}\n","import { RootState } from 'store/store'\nimport { isNodeData } from './FlowElementUtils'\n\nexport const selectFlowElements = (state: RootState) =>\n  state.flowElement.flowElements\n\nexport const selectFlowPosition = (state: RootState) =>\n  state.flowElement.flowPosition\n\nexport const selectElementCoord = (state: RootState) =>\n  state.flowElement.elementCoord\n\nexport const selectNodeById = (nodeId: string) => (state: RootState) =>\n  selectFlowElements(state)\n    .filter(isNodeData)\n    .find((node) => node.id === nodeId)\n\nexport const selectNodeTypeById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.type\n\nexport const selectNodeLabelById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.label\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nexport const selectNwb = (state: RootState) => state.nwb\n\nexport const selectNwbParams = (state: RootState) => selectNwb(state).params\n\nexport const selectNwbParamsKeyList = (state: RootState) =>\n  Object.keys(selectNwb(state).params)\n\nexport const selectNwbParam = (paramKey: string) => (state: RootState) =>\n  selectNwb(state).params[paramKey]\n\nexport const selectNwbParamsValue = (path: string) => (state: RootState) => {\n  const params = selectNwb(state).params\n  if (params != null) {\n    const target = getChildParam(path, params)\n    return target?.value\n  } else {\n    throw new Error('Param is null')\n  }\n}\n","import { RunPostData } from 'api/run/Run'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\n\nexport const PIPELINE_SLICE_NAME = 'pipeline'\n\nexport type Pipeline = {\n  run: PipelineType\n  currentPipeline?: {\n    uid: string\n  }\n  runBtn: RUN_BTN_TYPE\n}\n\nexport const RUN_STATUS = {\n  /**\n   * 未実行\n   */\n  START_UNINITIALIZED: 'StartUninitialized',\n  /**\n   * 開始リクエスト中\n   */\n  START_PENDING: 'StartPending',\n  /**\n   * 開始できなかった\n   */\n  START_ERROR: 'StartError',\n  /**\n   * 正常に開始した\n   */\n  START_SUCCESS: 'StartSuccess',\n  /**\n   * 全て終了\n   */\n  FINISHED: 'Finished',\n  /**\n   * 途中終了\n   */\n  ABORTED: 'Aborted',\n  /**\n   * キャンセルされた\n   */\n  CANCELED: 'Canceled',\n} as const\n\nexport type RUN_STATUS_TYPE = typeof RUN_STATUS[keyof typeof RUN_STATUS]\n\nexport type PipelineType =\n  | StartedPipeline\n  | {\n      status:\n        | typeof RUN_STATUS.START_ERROR\n        | typeof RUN_STATUS.START_PENDING\n        | typeof RUN_STATUS.START_UNINITIALIZED\n    }\n\nexport type StartedPipeline = {\n  uid: string\n  status:\n    | typeof RUN_STATUS.START_SUCCESS\n    | typeof RUN_STATUS.FINISHED\n    | typeof RUN_STATUS.ABORTED\n    | typeof RUN_STATUS.CANCELED\n  runPostData: RunPostData\n  runResult: RunResult\n}\n\nexport type RunResult = {\n  [nodeId: string]: NodeResult\n}\n\nexport type NodeResult = NodeResultPending | NodeResultSuccess | NodeResultError\n\nexport const NODE_RESULT_STATUS = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PENDING: 'pending',\n} as const\n\nexport type NODE_RESULT_STATUS_TYPE =\n  typeof NODE_RESULT_STATUS[keyof typeof NODE_RESULT_STATUS]\n\nexport interface NodeResultBaseType<T extends NODE_RESULT_STATUS_TYPE> {\n  status: T\n  message?: string\n  name: string\n}\n\nexport interface NodeResultPending\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.PENDING> {}\n\nexport interface NodeResultSuccess\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.SUCCESS> {\n  outputPaths: OutputPaths\n}\n\nexport type OutputPaths = {\n  [outputKey: string]: {\n    path: string\n    type: DATA_TYPE\n  }\n}\n\nexport interface NodeResultError\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.ERROR> {\n  message: string\n}\n\nexport const RUN_BTN_OPTIONS = {\n  RUN_NEW: 1,\n  RUN_ALREADY: 2,\n} as const\n\nexport type RUN_BTN_TYPE = typeof RUN_BTN_OPTIONS[keyof typeof RUN_BTN_OPTIONS]\n\nexport const RUN_BTN_LABELS = {\n  [RUN_BTN_OPTIONS.RUN_NEW]: 'RUN ALL',\n  [RUN_BTN_OPTIONS.RUN_ALREADY]: 'RUN',\n} as const\n","import {\n  HeatMapData,\n  TimeSeriesData,\n  BarData,\n  CsvData,\n  RoiData,\n  ImageData,\n  ScatterData,\n  HTMLData,\n} from 'api/outputs/Outputs'\n\nexport const DISPLAY_DATA_SLICE_NAME = 'displayData'\n\nexport type DisplayData = {\n  timeSeries: {\n    [filePath: string]: TimeSeriesDisplayData\n  }\n  heatMap: {\n    [filePath: string]: HeatMapDisplayData\n  }\n  image: {\n    [filePath: string]: ImageDisplayData\n  }\n  csv: {\n    [filePath: string]: CsvDisplayData\n  }\n  roi: {\n    [filePath: string]: RoiDisplayData\n  }\n  scatter: {\n    [filePath: string]: ScatterDisplayData\n  }\n  bar: {\n    [filePath: string]: BarDisplayData\n  }\n  // hdf5: {\n  //   [filePath: string]: HDF5DisplayData\n  // }\n  html: {\n    [filePath: string]: HTMLDisplayData\n  }\n}\n\nexport const DATA_TYPE_SET = {\n  TIME_SERIES: 'timeSeries',\n  HEAT_MAP: 'heatMap',\n  IMAGE: 'image',\n  CSV: 'csv',\n  ROI: 'roi',\n  SCATTER: 'scatter',\n  BAR: 'bar',\n  HDF5: 'hdf5',\n  HTML: 'html',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type DATA_TYPE = typeof DATA_TYPE_SET[keyof typeof DATA_TYPE_SET]\n\ninterface BaseDisplay<T extends DATA_TYPE, Data> {\n  type: T\n  data: Data\n  pending: boolean\n  error: string | null\n  fulfilled: boolean\n}\n\nexport interface TimeSeriesDisplayData\n  extends BaseDisplay<'timeSeries', TimeSeriesData> {\n  xrange: number[]\n  std: TimeSeriesData\n}\n\nexport interface HeatMapDisplayData\n  extends BaseDisplay<'heatMap', HeatMapData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface ImageDisplayData extends BaseDisplay<'image', ImageData> {}\n\nexport interface CsvDisplayData extends BaseDisplay<'csv', CsvData> {\n  // columns: string[]\n}\n\nexport interface RoiDisplayData extends BaseDisplay<'roi', RoiData> {\n  roiUniqueList: string[]\n}\n\nexport interface ScatterDisplayData\n  extends BaseDisplay<'scatter', ScatterData> {}\n\nexport interface BarDisplayData extends BaseDisplay<'bar', BarData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface HTMLDisplayData extends BaseDisplay<'html', HTMLData> {}\n","import { DATA_TYPE, DATA_TYPE_SET } from './DisplayDataType'\n\n/**\n * サーバーサイドの値をマッピング\n */\nexport function toDataType(value: string): DATA_TYPE {\n  switch (value) {\n    case 'images':\n      return DATA_TYPE_SET.IMAGE\n    case 'timeseries':\n      return DATA_TYPE_SET.TIME_SERIES\n    case 'heatmap':\n      return DATA_TYPE_SET.HEAT_MAP\n    case 'roi':\n      return DATA_TYPE_SET.ROI\n    case 'scatter':\n      return DATA_TYPE_SET.SCATTER\n    case 'bar':\n      return DATA_TYPE_SET.BAR\n    case 'html':\n      return DATA_TYPE_SET.HTML\n    default:\n      throw new Error(`failed to map dataType: ${value}`)\n  }\n}\n","import { RunPostData, RunResultDTO, OutputPathsDTO } from 'api/run/Run'\n\nimport { toDataType } from '../DisplayData/DisplayDataUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  RunResult,\n  OutputPaths,\n  NODE_RESULT_STATUS,\n  PipelineType,\n  RUN_STATUS,\n  StartedPipeline,\n  NodeResultPending,\n  NodeResultError,\n  NodeResultSuccess,\n  NodeResult,\n} from './PipelineType'\n\nexport function isNodeResultPending(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultPending {\n  return nodeResult.status === NODE_RESULT_STATUS.PENDING\n}\n\nexport function isNodeResultSuccess(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultSuccess {\n  return nodeResult.status === NODE_RESULT_STATUS.SUCCESS\n}\n\nexport function isNodeResultError(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultError {\n  return nodeResult.status === NODE_RESULT_STATUS.ERROR\n}\n\nexport function isStartedPipeline(\n  pipeline: PipelineType,\n): pipeline is StartedPipeline {\n  return (\n    pipeline.status === RUN_STATUS.START_SUCCESS ||\n    pipeline.status === RUN_STATUS.FINISHED ||\n    pipeline.status === RUN_STATUS.ABORTED\n  )\n}\n\nexport function getInitialRunResult(runPostData: RunPostData) {\n  const initialResult: RunResult = {}\n  Object.values(runPostData.nodeDict)\n    .filter(({ data }) => data?.type === NODE_TYPE_SET.ALGORITHM)\n    .forEach(({ id, data }) => {\n      initialResult[id] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: data?.label ?? '',\n      }\n    })\n  return initialResult\n}\n\nexport function convertToRunResult(dto: RunResultDTO) {\n  const result: RunResult = {}\n  Object.entries(dto).forEach(([nodeId, nodeResultDto]) => {\n    const outputPath = nodeResultDto.outputPaths\n    if (nodeResultDto.status === 'success' && outputPath != null) {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.SUCCESS,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n        outputPaths: convertToOutputPath(outputPath),\n      }\n    } else {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.ERROR,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n      }\n    }\n  })\n  return result\n}\n\nfunction convertToOutputPath(dto: OutputPathsDTO) {\n  const result: OutputPaths = {}\n  Object.entries(dto).forEach(([functionPath, value]) => {\n    result[functionPath] = {\n      path: value.path,\n      type: toDataType(value.type),\n    }\n  })\n  return result\n}\n","import { RootState } from 'store/store'\n\nimport {\n  NodeResult,\n  NodeResultPending,\n  NodeResultSuccess,\n  RUN_STATUS,\n} from './PipelineType'\nimport {\n  isNodeResultPending,\n  isStartedPipeline,\n  isNodeResultSuccess,\n} from './PipelineUtils'\n\nexport const selectPipelineLatestUid = (state: RootState) => {\n  return state.pipeline.currentPipeline?.uid\n}\n\nexport const selectStartedPipeline = (state: RootState) => {\n  return state.pipeline.run\n}\n\nexport const selectPipelineRunBtn = (state: RootState) => {\n  return state.pipeline.runBtn\n}\n\nexport const selectRunResultPendingList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.values(pipeline.runResult).filter(isNodeResultPending)\n  } else {\n    return []\n  }\n}\n\nexport const selectRunResultPendingNodeIdList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => ({ nodeId, nodeResult }))\n      .filter(isNodeResultPendingAndNodeId)\n      .map(({ nodeId }) => nodeId)\n  } else {\n    return []\n  }\n}\n\nfunction isNodeResultPendingAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultPending\n} {\n  return isNodeResultPending(arg.nodeResult)\n}\n\nexport const selectPipelineStatus = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status\n}\n\nexport const selectPipelineIsCanceled = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.CANCELED\n}\n\nexport const selectPipelineIsStartedSuccess = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.START_SUCCESS\n}\n\nexport const selectPipelineNodeResultSuccessList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => {\n        return {\n          nodeId,\n          nodeResult,\n        }\n      })\n      .filter(isNodeResultSuccessAndNodeId)\n  } else {\n    return []\n  }\n}\n\n// selectPipelineNodeResultSuccessListの返り値の型を正しく認識させるためだけに作った\nfunction isNodeResultSuccessAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultSuccess\n} {\n  return isNodeResultSuccess(arg.nodeResult)\n}\n\nexport const selectPipelineNodeResultStatus =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].status\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultMessage =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].message\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultOutputKeyList =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return Object.keys(nodeResult.outputPaths)\n      }\n    }\n    return []\n  }\n\nconst selectPipelineNodeResultOutputPaths =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return nodeResult.outputPaths\n      }\n    }\n    throw new Error(`key error. nodeId:${nodeId}`)\n  }\n\nexport const selectPipelineNodeResultOutputFilePath =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].path\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n\nexport const selectPipelineNodeResultOutputFileDataType =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].type\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nconst selectSnakemake = (state: RootState) => state.snakemake\nexport const selectSnakemakeParams = (state: RootState) =>\n  selectSnakemake(state).params\n\nexport const selectSnakemakeParamsKeyList = (state: RootState) =>\n  Object.keys(selectSnakemakeParams(state))\n\nexport const selectSnakemakeParam = (paramKey: string) => (state: RootState) =>\n  selectSnakemakeParams(state)[paramKey]\n\nexport const selectSnakemakeParamsValue =\n  (path: string) => (state: RootState) => {\n    const params = selectSnakemakeParams(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('Param is null')\n    }\n  }\n","export const INPUT_NODE_SLICE_NAME = 'inputNode'\n\nexport const FILE_TYPE_SET = {\n  CSV: 'csv',\n  IMAGE: 'image',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type FILE_TYPE = typeof FILE_TYPE_SET[keyof typeof FILE_TYPE_SET]\n\nexport type InputNode = {\n  [nodeId: string]: InputNodeType\n}\n\nexport type InputNodeType = CsvInputNode | ImageInputNode | HDF5InputNode\n\ninterface InputNodeBaseType<\n  T extends FILE_TYPE,\n  P extends { [key: string]: unknown },\n> {\n  fileType: T\n  selectedFilePath?: string | string[]\n  param: P\n}\n\nexport type CsvInputParamType = {\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\n\nexport interface CsvInputNode\n  extends InputNodeBaseType<'csv', CsvInputParamType> {\n  selectedFilePath?: string\n}\n\nexport interface ImageInputNode extends InputNodeBaseType<'image', {}> {\n  selectedFilePath?: string[]\n}\n\nexport interface HDF5InputNode extends InputNodeBaseType<'hdf5', {}> {\n  selectedFilePath?: string\n  hdf5Path?: string\n}\n","import {\n  CsvInputNode,\n  ImageInputNode,\n  HDF5InputNode,\n  InputNodeType,\n  FILE_TYPE_SET,\n} from './InputNodeType'\n\nexport function isImageInputNode(\n  inputNode: InputNodeType,\n): inputNode is ImageInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.IMAGE\n}\n\nexport function isCsvInputNode(\n  inputNode: InputNodeType,\n): inputNode is CsvInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.CSV\n}\n\nexport function isHDF5InputNode(\n  inputNode: InputNodeType,\n): inputNode is HDF5InputNode {\n  return inputNode.fileType === FILE_TYPE_SET.HDF5\n}\n","import { RootState } from 'store/store'\nimport {\n  isHDF5InputNode,\n  isCsvInputNode,\n  isImageInputNode,\n} from './InputNodeUtils'\n\nexport const selectInputNode = (state: RootState) => state.inputNode\n\nexport const selectInputNodeById = (nodeId: string) => (state: RootState) =>\n  state.inputNode[nodeId]\n\nexport const selectInputNodeDefined = (nodeId: string) => (state: RootState) =>\n  Object.keys(state.inputNode).includes(nodeId)\n\nexport const selectInputNodeFileType = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).fileType\n\nexport const selectInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) =>\n    selectInputNodeById(nodeId)(state).selectedFilePath\n\nexport const selectCsvInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isCsvInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectImageInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isImageInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectHDF5InputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectFilePathIsUndefined = (state: RootState) =>\n  Object.keys(state.inputNode).length === 0 ||\n  Object.values(state.inputNode).filter((inputNode) => {\n    if (isHDF5InputNode(inputNode)) {\n      return inputNode.selectedFilePath == null || inputNode.hdf5Path == null\n    } else {\n      const filePath = inputNode.selectedFilePath\n      if (Array.isArray(filePath)) {\n        return filePath.length === 0\n      } else {\n        return filePath == null\n      }\n    }\n  }).length > 0\n\nexport const selectInputNodeParam = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).param\n\nconst selectCsvInputNodeParam = (nodeId: string) => (state: RootState) => {\n  const inputNode = selectInputNodeById(nodeId)(state)\n  if (isCsvInputNode(inputNode)) {\n    return inputNode.param\n  } else {\n    throw new Error(`The InputNode is not CsvInputNode. (nodeId: ${nodeId})`)\n  }\n}\n\nexport const selectCsvInputNodeParamSetHeader =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setHeader\n\nexport const selectCsvInputNodeParamSetIndex =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setIndex\n\nexport const selectCsvInputNodeParamTranspose =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).transpose\n\nexport const selectInputNodeHDF5Path =\n  (nodeId: string) => (state: RootState) => {\n    const item = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(item)) {\n      return item.hdf5Path\n    } else {\n      return undefined\n    }\n  }\n","import { isEdge, Node } from 'react-flow-renderer'\n\nimport {\n  AlgorithmNodePostData,\n  EdgeDict,\n  InputNodePostData,\n  NodeDict,\n  RunPostData,\n} from 'api/run/Run'\n\nimport { RootState } from 'store/store'\n\nimport {\n  selectAlgorithmFunctionPath,\n  selectAlgorithmIsUpdated,\n  selectAlgorithmName,\n  selectAlgorithmParams,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { selectFlowElements } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  isAlgorithmNodeData,\n  isNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport { selectNwbParams } from 'store/slice/NWB/NWBSelectors'\nimport { selectPipelineNodeResultStatus } from 'store/slice/Pipeline/PipelineSelectors'\nimport { NODE_RESULT_STATUS } from 'store/slice/Pipeline/PipelineType'\nimport { selectSnakemakeParams } from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { NODE_TYPE_SET } from 'store/slice/FlowElement/FlowElementType'\nimport {\n  selectInputNodeFileType,\n  selectInputNodeHDF5Path,\n  selectInputNodeParam,\n  selectInputNodeSelectedFilePath,\n} from 'store/slice/InputNode/InputNodeSelectors'\n\nexport const selectRunPostData = (state: RootState) => {\n  const nwbParam = selectNwbParams(state)\n  const snakemakeParam = selectSnakemakeParams(state)\n  const edgeDictForRun = selectEdgeDictForRun(state)\n  const nodeDictForRun = selectNodeDictForRun(state)\n  const forceRunList = selectForceRunList(state)\n  const runPostData: Omit<RunPostData, 'name'> = {\n    nwbParam,\n    snakemakeParam,\n    edgeDict: edgeDictForRun,\n    nodeDict: nodeDictForRun,\n    forceRunList,\n  }\n  return runPostData\n}\n\n/**\n * 前回の結果で、エラーまたはParamに変更があるnodeのリストを返す\n */\nconst selectForceRunList = (state: RootState) => {\n  const elements = selectFlowElements(state)\n  return elements\n    .filter(isAlgorithmNodeData)\n    .filter((node) => {\n      const isUpdated = selectAlgorithmIsUpdated(node.id)(state)\n      const status = selectPipelineNodeResultStatus(node.id)(state)\n      return isUpdated || status === NODE_RESULT_STATUS.ERROR\n    })\n    .map((node) => ({\n      nodeId: node.id,\n      name: selectAlgorithmName(node.id)(state),\n    }))\n}\n\nconst selectNodeDictForRun = (state: RootState): NodeDict => {\n  const elements = selectFlowElements(state)\n  const nodeDict: NodeDict = {}\n  elements.filter(isNodeData).forEach((node) => {\n    if (isAlgorithmNodeData(node)) {\n      const param = selectAlgorithmParams(node.id)(state) ?? {}\n      const functionPath = selectAlgorithmFunctionPath(node.id)(state)\n      const algorithmNodePostData: Node<AlgorithmNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.ALGORITHM,\n          path: functionPath,\n          param,\n        },\n      }\n      nodeDict[node.id] = algorithmNodePostData\n    } else {\n      const filePath = selectInputNodeSelectedFilePath(node.id)(state)\n      const fileType = selectInputNodeFileType(node.id)(state)\n      const param = selectInputNodeParam(node.id)(state)\n      const hdf5Path = selectInputNodeHDF5Path(node.id)(state)\n      const inputNodePosyData: Node<InputNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.INPUT,\n          path: filePath ?? '',\n          param,\n          hdf5Path: hdf5Path,\n          fileType,\n        },\n      }\n      nodeDict[node.id] = inputNodePosyData\n    }\n  })\n  return nodeDict\n}\n\nconst selectEdgeDictForRun = (state: RootState) => {\n  const edgeDict: EdgeDict = {}\n  selectFlowElements(state)\n    .filter(isEdge)\n    .forEach((edge) => {\n      edgeDict[edge.id] = edge\n    })\n  return edgeDict\n}\n","const HOST = process.env.REACT_APP_SERVER_HOST\nconst PORT = process.env.REACT_APP_SERVER_PORT\n\nexport const BASE_URL = `http://${HOST}:${PORT}`\nexport const WS_BASE_URL = `ws://${HOST}:${PORT}`\n","import axios from 'axios'\nimport type { Edge, Node } from 'react-flow-renderer'\n\nimport { BASE_URL } from 'const/API'\nimport type {\n  AlgorithmNodeData,\n  InputNodeData,\n} from 'store/slice/FlowElement/FlowElementType'\nimport type { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport type { ParamMap } from 'utils/param/ParamType'\n\nexport type RunPostData = {\n  name: string\n  nodeDict: NodeDict\n  edgeDict: EdgeDict\n  nwbParam: ParamMap\n  snakemakeParam: ParamMap\n  forceRunList: { nodeId: string; name: string }[]\n}\n\nexport type NodeDict = {\n  [nodeId: string]: Node<NodePostDataType>\n}\n\nexport type EdgeDict = {\n  [nodeId: string]: Edge\n}\n\nexport type NodePostDataType = AlgorithmNodePostData | InputNodePostData\n\nexport interface InputNodePostData extends InputNodeData {\n  path: string | string[]\n  fileType: FILE_TYPE\n  param?: {\n    [key: string]: unknown\n  }\n  hdf5Path?: string\n}\n\nexport interface AlgorithmNodePostData extends AlgorithmNodeData {\n  path: string\n  param: ParamMap\n}\n\nexport async function runApi(data: RunPostData): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run`, data)\n  return response.data\n}\n\nexport async function runByUidApi(\n  uid: string,\n  data: Omit<RunPostData, 'name'>,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${uid}`, data)\n  return response.data\n}\n\nexport type RunResultDTO = {\n  [nodeId: string]: {\n    status: string\n    message: string\n    name: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type OutputPathsDTO = {\n  [outputKey: string]: {\n    path: string\n    type: string\n  }\n}\n\nexport async function runResult(data: {\n  uid: string\n  pendingNodeIdList: string[]\n}): Promise<RunResultDTO> {\n  const { uid, pendingNodeIdList } = data\n  const response = await axios.post(`${BASE_URL}/run/result/${uid}`, {\n    pendingNodeIdList,\n  })\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { ThunkApiConfig } from 'store/store'\nimport { PIPELINE_SLICE_NAME } from './PipelineType'\nimport {\n  runApi,\n  runByUidApi,\n  runResult,\n  RunResultDTO,\n  RunPostData,\n} from 'api/run/Run'\nimport {\n  selectPipelineLatestUid,\n  selectRunResultPendingNodeIdList,\n} from './PipelineSelectors'\n\nexport const run = createAsyncThunk<\n  string,\n  { runPostData: RunPostData },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/run`, async ({ runPostData }, thunkAPI) => {\n  try {\n    const responseData = await runApi(runPostData)\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const runByCurrentUid = createAsyncThunk<\n  string,\n  { runPostData: Omit<RunPostData, 'name'> },\n  ThunkApiConfig\n>(\n  `${PIPELINE_SLICE_NAME}/runByCurrentUid`,\n  async ({ runPostData }, thunkAPI) => {\n    const currentUid = selectPipelineLatestUid(thunkAPI.getState())\n    if (currentUid != null) {\n      try {\n        const responseData = await runByUidApi(currentUid, runPostData)\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    } else {\n      return thunkAPI.rejectWithValue('currentUid dose not exist.')\n    }\n  },\n)\n\nexport const pollRunResult = createAsyncThunk<\n  RunResultDTO,\n  {\n    uid: string\n  },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/pollRunResult`, async ({ uid }, thunkAPI) => {\n  const pendingNodeIdList = selectRunResultPendingNodeIdList(\n    thunkAPI.getState(),\n  )\n  try {\n    const responseData = await runResult({ uid, pendingNodeIdList })\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { RunPostData } from 'api/run/Run'\n\nexport type ExperimentsDTO = {\n  [uid: string]: ExperimentDTO\n}\n\nexport type ExperimentDTO = {\n  function: {\n    [uid: string]: {\n      name: string\n      success: string\n      unique_id: string\n      hasNWB: boolean\n    }\n  }\n  name: string\n  success: string\n  timestamp: string\n  unique_id: string\n  hasNWB: boolean\n}\n\nexport async function getExperimentsApi(): Promise<ExperimentsDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments`)\n  return response.data\n}\n\nexport async function deleteExperimentByUidApi(uid: string): Promise<boolean> {\n  const response = await axios.delete(`${BASE_URL}/experiments/${uid}`)\n  return response.data\n}\n\nexport async function deleteExperimentByListApi(\n  uidList: Array<string>,\n): Promise<boolean> {\n  const response = await axios.post(`${BASE_URL}/experiments/delete`, {\n    uidList,\n  })\n  return response.data\n}\n\nexport async function importExperimentByUidApi(\n  uid: string,\n): Promise<RunPostData> {\n  const response = await axios.get(`${BASE_URL}/experiments/import/${uid}`)\n  return response.data\n}\n\nexport async function downloadExperimentNwbApi(uid: string, nodeId?: string) {\n  const path =\n    nodeId != null\n      ? `${BASE_URL}/experiments/download/nwb/${uid}/${nodeId}`\n      : `${BASE_URL}/experiments/download/nwb/${uid}`\n  const response = await axios.get(path, {\n    responseType: 'blob',\n  })\n  return response.data\n}\n\nexport async function downloadExperimentConfigApi(uid: string) {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/download/config/${uid}`,\n    {\n      responseType: 'blob',\n    },\n  )\n  return response.data\n}\n\nexport async function renameExperiment(unique_id: string, new_name: string) {\n  const response = await axios.patch(\n    `${BASE_URL}/experiments/${unique_id}/rename`,\n    {\n      new_name,\n    },\n  )\n  return response.data\n}\n","export const EXPERIMENTS_SLICE_NAME = 'experiments'\n\nexport type Experiments =\n  | {\n      status: 'fulfilled'\n      experimentList: ExperimentListType\n    }\n  | {\n      status: 'uninitialized'\n    }\n  | {\n      status: 'pending'\n    }\n  | {\n      status: 'error'\n      message?: string\n    }\n\nexport type ExperimentListType = {\n  [uid: string]: ExperimentType\n}\n\nexport type ExperimentType = {\n  uid: string\n  functions: {\n    [nodeId: string]: ExperimentFunction\n  }\n  name: string\n  timestamp: string\n  hasNWB: boolean\n}\n\nexport type ExperimentFunction = {\n  name: string\n  nodeId: string\n  status: EXPERIMENTS_STATUS\n  hasNWB: boolean\n}\n\nexport type EXPERIMENTS_STATUS = 'success' | 'error' | 'running'\n\nexport interface Experiment {\n  uid: string\n  name: string\n  timestamp: string\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  ExperimentsDTO,\n  getExperimentsApi,\n  deleteExperimentByUidApi,\n  importExperimentByUidApi,\n  deleteExperimentByListApi,\n} from 'api/experiments/Experiments'\nimport { RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_SLICE_NAME } from './ExperimentsType'\n\nexport const getExperiments = createAsyncThunk<ExperimentsDTO, undefined>(\n  `${EXPERIMENTS_SLICE_NAME}/getExperiments`,\n  async (_, thunkAPI) => {\n    try {\n      const response = await getExperimentsApi()\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByUid = createAsyncThunk<boolean, string>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByList = createAsyncThunk<boolean, string[]>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByList`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByListApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const importExperimentByUid = createAsyncThunk<RunPostData, string>(\n  `${EXPERIMENTS_SLICE_NAME}/importExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await importExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { pollRunResult, run, runByCurrentUid } from './PipelineActions'\nimport {\n  Pipeline,\n  PIPELINE_SLICE_NAME,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n  RUN_STATUS,\n} from './PipelineType'\n\nimport {\n  getInitialRunResult,\n  convertToRunResult,\n  isNodeResultPending,\n} from './PipelineUtils'\n\nconst initialState: Pipeline = {\n  run: {\n    status: RUN_STATUS.START_UNINITIALIZED,\n  },\n  runBtn: RUN_BTN_OPTIONS.RUN_NEW,\n}\n\nexport const pipelineSlice = createSlice({\n  name: PIPELINE_SLICE_NAME,\n  initialState,\n  reducers: {\n    cancelPipeline(state) {\n      state.run.status = RUN_STATUS.CANCELED\n    },\n    setRunBtnOption: (\n      state,\n      action: PayloadAction<{\n        runBtnOption: RUN_BTN_TYPE\n      }>,\n    ) => {\n      state.runBtn = action.payload.runBtnOption\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.run.status === RUN_STATUS.START_SUCCESS) {\n          state.run.runResult = {\n            ...state.run.runResult, // pendingのNodeResultはそのままでsuccessもしくはerrorのみ上書き\n            ...convertToRunResult(action.payload),\n          }\n          const runResultPendingList = Object.values(\n            state.run.runResult,\n          ).filter(isNodeResultPending)\n          if (runResultPendingList.length === 0) {\n            // 終了\n            state.run.status = RUN_STATUS.FINISHED\n          }\n        }\n      })\n      .addCase(pollRunResult.rejected, (state, action) => {\n        state.run.status = RUN_STATUS.ABORTED\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.meta.arg,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addMatcher(\n        isAnyOf(run.pending, runByCurrentUid.pending),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_PENDING,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          const uid = action.payload\n          state.run = {\n            uid,\n            status: RUN_STATUS.START_SUCCESS,\n            runResult: getInitialRunResult({ name: '', ...runPostData }),\n            runPostData: { name: '', ...runPostData },\n          }\n          state.currentPipeline = {\n            uid: action.payload,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.rejected, runByCurrentUid.rejected),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_ERROR,\n          }\n        },\n      )\n  },\n})\n\nexport const { cancelPipeline, setRunBtnOption } = pipelineSlice.actions\n\nexport default pipelineSlice.reducer\n","import { AlgoListDTO, AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  AlgorithmNodeType,\n  AlgorithmChild,\n  AlgorithmParent,\n  AlgorithmListTree,\n} from './AlgorithmListType'\n\nexport function isAlgoChild(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmChild {\n  return algoNode.type === 'child'\n}\n\nexport function isAlgoParent(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmParent {\n  return algoNode.type === 'parent'\n}\n\nexport function getAlgoChild(\n  algoList: AlgorithmListTree,\n  algoName: string,\n): AlgorithmChild | null {\n  let result: AlgorithmChild | null = null\n  for (const [name, node] of Object.entries(algoList)) {\n    if (isAlgoChild(node)) {\n      if (name === algoName) {\n        result = node\n      }\n    } else {\n      result = getAlgoChild(node.children, algoName)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function convertToAlgoListType(dto: AlgoListDTO) {\n  const algoList: AlgorithmListTree = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    if (Object.prototype.hasOwnProperty.call(value, 'children')) {\n      algoList[name] = {\n        type: 'parent',\n        children: convertToAlgoListType(\n          (\n            value as {\n              children: AlgoListDTO\n            }\n          ).children as AlgoListDTO,\n        ),\n      }\n    } else {\n      const dto = value as {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n      algoList[name] = {\n        type: 'child',\n        functionPath: dto.path,\n        args: dto.args,\n        returns: dto.returns,\n      }\n    }\n  })\n  return algoList\n}\n","import { RootState } from 'store/store'\nimport { selectAlgorithmName } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { getAlgoChild } from './AlgorithmListUtils'\n\nexport const selectAlgorithmList = (state: RootState) => state.algorithmList\n\nexport const selectAlgorithmListIsLated = (state: RootState) =>\n  selectAlgorithmList(state).isLatest\n\nexport const selectAlgorithmListTree = (state: RootState) =>\n  selectAlgorithmList(state).tree\n\nexport const selectAlgoArgs = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.args\n  } else {\n    return undefined\n  }\n}\n\nexport const selectAlgoReturns = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.returns\n  } else {\n    return undefined\n  }\n}\n","import { AlgorithmInfo } from 'api/algolist/AlgoList'\n\nexport const ALGORITHM_LIST_SLICE_NAME = 'algorithmList'\n\nexport type AlgorithmListType = {\n  isLatest: boolean\n  tree: AlgorithmListTree\n}\n\nexport type AlgorithmListTree = {\n  [algoName: string]: AlgorithmNodeType\n}\n\nexport type AlgorithmNodeType = AlgorithmChild | AlgorithmParent\nexport type AlgorithmChild = {\n  type: 'child'\n  args: AlgorithmInfo[]\n  returns: AlgorithmInfo[]\n  functionPath: string\n}\nexport type AlgorithmParent = {\n  type: 'parent'\n  children: {\n    [name: string]: AlgorithmNodeType\n  }\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type AlgoListDTO = {\n  [name: string]:\n    | {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n    | { children: AlgoListDTO }\n}\n\nexport type AlgorithmInfo = {\n  name: string\n  type: string\n  isNone?: boolean\n}\n\nexport async function getAlgoListApi(): Promise<AlgoListDTO> {\n  const response = await axios.get(`${BASE_URL}/algolist`)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { ALGORITHM_LIST_SLICE_NAME } from './AlgorithmListType'\nimport { AlgoListDTO, getAlgoListApi } from 'api/algolist/AlgoList'\n\nexport const getAlgoList = createAsyncThunk<AlgoListDTO, void>(\n  `${ALGORITHM_LIST_SLICE_NAME}/getAlgoList`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoListApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getAlgoParamsApi(algoName: string): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/params/${algoName}`)\n  return response.data\n}\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Node } from 'react-flow-renderer'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { FLOW_ELEMENT_SLICE_NAME, NodeData } from './FlowElementType'\nimport { getAlgoParamsApi } from 'api/params/Params'\n\nexport type AddingNodeData = Omit<Node<NodeData>, 'position'> &\n  Partial<Pick<Node<NodeData>, 'position'>>\n\nexport const addAlgorithmNode = createAsyncThunk<\n  ParamDTO,\n  {\n    node: AddingNodeData\n    functionPath: string\n    name: string\n  }\n>(`${FLOW_ELEMENT_SLICE_NAME}/addAlgorithmNode`, async ({ name }, thunkAPI) => {\n  try {\n    const response = await getAlgoParamsApi(name)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const addInputNode = createAction<{\n  node: AddingNodeData\n  fileType: FILE_TYPE\n}>(`${FLOW_ELEMENT_SLICE_NAME}/addInputNode`)\n","import { customAlphabet } from 'nanoid/non-secure'\n\nconst nanoid = customAlphabet('0123456789abcdefghijklmnopqrstuvwxyz', 10)\n\nexport const getNanoId = () => {\n  return nanoid()\n}\n","export const INITIAL_IMAGE_ELEMENT_ID = 'input_0'\nexport const INITIAL_IMAGE_ELEMENT_NAME = 'NoName'\n\nexport const INITIAL_ALGO_STYLE: React.CSSProperties = {\n  width: 180,\n  height: 100,\n  padding: 0,\n  borderRadius: 0,\n} as const\n\nexport const INITIAL_DATA_STYLE: React.CSSProperties = {\n  border: '1px solid #777',\n  height: 120,\n} as const\n\nexport const REACT_FLOW_NODE_TYPE_KEY = {\n  ImageFileNode: 'ImageFileNode',\n  CsvFileNode: 'CsvFileNode',\n  HDF5FileNode: 'HDF5FileNode',\n  FluoFileNode: 'FluoFileNode',\n  AlgorithmNode: 'AlgorithmNode',\n  BehaviorFileNode: 'BehaviorFileNode',\n} as const\n\nexport type REACT_FLOW_NODE_TYPE =\n  typeof REACT_FLOW_NODE_TYPE_KEY[keyof typeof REACT_FLOW_NODE_TYPE_KEY]\n","export const DND_ITEM_TYPE_SET = {\n  TREE_ITEM: 'TREE_ITEM',\n} as const\n\nexport type DND_ITEM_TYPE =\n  typeof DND_ITEM_TYPE_SET[keyof typeof DND_ITEM_TYPE_SET]\n\nexport type TreeItemDragObject = {}\n\nexport type TreeItemDropResult = {\n  position?: { x: number; y: number }\n}\n\nexport type TreeItemCollectedProps = {\n  isDragging: boolean\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem'\nimport { styled, Typography } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport IconButton from '@mui/material/IconButton'\nimport AddIcon from '@mui/icons-material/Add'\nimport { useDrag } from 'react-dnd'\n\nimport {\n  selectAlgorithmListIsLated,\n  selectAlgorithmListTree,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport {\n  AlgorithmChild,\n  AlgorithmNodeType,\n} from 'store/slice/AlgorithmList/AlgorithmListType'\nimport { isAlgoChild } from 'store/slice/AlgorithmList/AlgorithmListUtils'\nimport { getAlgoList } from 'store/slice/AlgorithmList/AlgorithmListActions'\nimport { FILE_TYPE, FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  NODE_TYPE,\n  NODE_TYPE_SET,\n} from 'store/slice/FlowElement/FlowElementType'\nimport {\n  addAlgorithmNode,\n  addInputNode,\n} from 'store/slice/FlowElement/FlowElementActions'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport { REACT_FLOW_NODE_TYPE, REACT_FLOW_NODE_TYPE_KEY } from 'const/flowchart'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\n\nexport const AlgorithmTreeView = React.memo(() => {\n  const dispatch = useDispatch()\n  const algoList = useSelector(selectAlgorithmListTree)\n  const isLatest = useSelector(selectAlgorithmListIsLated)\n\n  useEffect(() => {\n    if (!isLatest) {\n      dispatch(getAlgoList())\n    }\n  }, [dispatch, isLatest])\n\n  const onAddAlgoNode = React.useCallback(\n    (\n      nodeName: string,\n      functionPath: string,\n      position?: { x: number; y: number },\n    ) => {\n      const name = nodeName\n      const newNode = {\n        id: `${name}_${getNanoId()}`,\n        type: REACT_FLOW_NODE_TYPE_KEY.AlgorithmNode,\n        data: { label: name, type: NODE_TYPE_SET.ALGORITHM },\n        position,\n      }\n      dispatch(\n        addAlgorithmNode({\n          node: newNode,\n          name,\n          functionPath,\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  return (\n    <TreeView\n      sx={{\n        flexGrow: 1,\n        height: '100%',\n      }}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId=\"Data\" label=\"Data\">\n        <InputNodeComponent\n          fileName={'image'}\n          nodeName={'imageData'}\n          fileType={FILE_TYPE_SET.IMAGE}\n        />\n        <InputNodeComponent\n          fileName={'csv'}\n          nodeName={'csvData'}\n          fileType={FILE_TYPE_SET.CSV}\n        />\n        <InputNodeComponent\n          fileName={'hdf5'}\n          nodeName={'hdf5Data'}\n          fileType={FILE_TYPE_SET.HDF5}\n        />\n        <InputNodeComponent\n          fileName={'fluo'}\n          nodeName={'fluoData'}\n          fileType={FILE_TYPE_SET.FLUO}\n        />\n        <InputNodeComponent\n          fileName={'behavior'}\n          nodeName={'behaviorData'}\n          fileType={FILE_TYPE_SET.BEHAVIOR}\n        />\n      </TreeItem>\n      <TreeItem nodeId=\"Algorithm\" label=\"Algorithm\">\n        {Object.entries(algoList).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            onAddAlgoNode={onAddAlgoNode}\n            key={i.toFixed()}\n          />\n        ))}\n      </TreeItem>\n    </TreeView>\n  )\n})\n\nconst InputNodeComponent = React.memo<{\n  fileName: string\n  nodeName: string\n  fileType: FILE_TYPE\n}>(({ fileName, nodeName, fileType }) => {\n  const dispatch = useDispatch()\n\n  const onAddDataNode = React.useCallback(\n    (\n      nodeType: NODE_TYPE,\n      nodeName: string,\n      fileType: FILE_TYPE,\n      position?: { x: number; y: number },\n    ) => {\n      let reactFlowNodeType: REACT_FLOW_NODE_TYPE | '' = ''\n      switch (fileType) {\n        case FILE_TYPE_SET.CSV:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.CsvFileNode\n          break\n        case FILE_TYPE_SET.IMAGE:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.ImageFileNode\n          fileType = FILE_TYPE_SET.IMAGE\n          break\n        case FILE_TYPE_SET.HDF5:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.HDF5FileNode\n          fileType = FILE_TYPE_SET.HDF5\n          break\n        case FILE_TYPE_SET.FLUO:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.FluoFileNode\n          fileType = FILE_TYPE_SET.FLUO\n          break\n        case FILE_TYPE_SET.BEHAVIOR:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.BehaviorFileNode\n          fileType = FILE_TYPE_SET.BEHAVIOR\n          break\n      }\n      const newNode = {\n        id: `input_${getNanoId()}`,\n        type: reactFlowNodeType,\n        data: { label: nodeName, type: nodeType },\n        position,\n      }\n      dispatch(addInputNode({ node: newNode, fileType }))\n    },\n    [dispatch],\n  )\n\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType, position)\n      },\n      [onAddDataNode, nodeName, fileType],\n    ),\n  )\n\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={fileName}\n      label={\n        <AddButton\n          name={fileName}\n          onClick={() => onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType)}\n        />\n      }\n    />\n  )\n})\n\nconst AlgoNodeComponentRecursive = React.memo<{\n  name: string\n  node: AlgorithmNodeType\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  if (isAlgoChild(node)) {\n    return (\n      <AlgoNodeComponent\n        name={name}\n        node={node}\n        onAddAlgoNode={onAddAlgoNode}\n      />\n    )\n  } else {\n    return (\n      <TreeItem nodeId={name} label={name}>\n        {Object.entries(node.children).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            key={i.toFixed()}\n            onAddAlgoNode={onAddAlgoNode}\n          />\n        ))}\n      </TreeItem>\n    )\n  }\n})\n\nconst AlgoNodeComponent = React.memo<{\n  name: string\n  node: AlgorithmChild\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddAlgoNode(name, node.functionPath, position)\n      },\n      [onAddAlgoNode, name, node],\n    ),\n  )\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={name}\n      label={\n        <AddButton\n          name={name}\n          onClick={() => onAddAlgoNode(name, node.functionPath)}\n        />\n      }\n    />\n  )\n})\n\nconst AddButton = React.memo<{\n  name: string\n  onClick: () => void\n}>(({ name, onClick }) => {\n  return (\n    <>\n      <IconButton aria-label=\"add\" style={{ padding: 2 }} size=\"large\">\n        <AddIcon onClick={() => onClick()} />\n      </IconButton>\n      <Typography\n        variant=\"inherit\"\n        style={{\n          textOverflow: 'ellipsis',\n          overflow: 'visible',\n          width: '8rem',\n          display: 'inline-block',\n        }}\n      >\n        {name}\n      </Typography>\n    </>\n  )\n})\n\n// 未使用icon分の幅を消す\nconst LeafItem = styled(TreeItem)({\n  // background: 'red',\n  [`& .${treeItemClasses.iconContainer}`]: {\n    margin: 0,\n    width: 0,\n  },\n})\n\nfunction useLeafItemDrag(\n  onDragEnd: (positon: { x: number; y: number }) => void,\n) {\n  const [{ isDragging }, dragRef] = useDrag<\n    TreeItemDragObject,\n    TreeItemDropResult,\n    TreeItemCollectedProps\n  >(\n    () => ({\n      type: DND_ITEM_TYPE_SET.TREE_ITEM,\n      end: (_, monitor) => {\n        const position = monitor.getDropResult()?.position\n        if (monitor.didDrop() && position != null) {\n          onDragEnd(position)\n        }\n      },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [onDragEnd],\n  )\n  return { isDragging, dragRef }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nimport { INPUT_NODE_SLICE_NAME } from './InputNodeType'\n\nexport const setInputNodeFilePath = createAction<{\n  nodeId: string\n  filePath: string | string[]\n}>(`${INPUT_NODE_SLICE_NAME}/setInputNodeFilePath`)\n","import type { Node } from 'react-flow-renderer'\nimport {\n  isInputNodeData,\n  isAlgorithmNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport type {\n  NodePostDataType,\n  InputNodePostData,\n  AlgorithmNodePostData,\n} from './Run'\n\nexport function isInputNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<InputNodePostData> {\n  return isInputNodeData(node)\n}\n\nexport function isAlgorithmNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<AlgorithmNodePostData> {\n  return isAlgorithmNodeData(node)\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport const FILE_TREE_TYPE_SET = {\n  IMAGE: 'image',\n  CSV: 'csv',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  ALL: 'all',\n} as const\n\nexport type FILE_TREE_TYPE =\n  typeof FILE_TREE_TYPE_SET[keyof typeof FILE_TREE_TYPE_SET]\n\nexport type TreeNodeTypeDTO = DirNodeDTO | FileNodeDTO\n\nexport interface NodeBaseDTO {\n  path: string\n  name: string\n  isdir: boolean\n}\n\nexport interface DirNodeDTO extends NodeBaseDTO {\n  isdir: true\n  nodes: TreeNodeTypeDTO[]\n}\n\nexport interface FileNodeDTO extends NodeBaseDTO {\n  isdir: false\n}\n\nexport async function getFilesTreeApi(\n  fileType: FILE_TREE_TYPE,\n): Promise<TreeNodeTypeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/files`, {\n    params: {\n      file_type: fileType,\n    },\n  })\n  return response.data\n}\n\nexport async function uploadFileApi(\n  fileName: string,\n  config: {\n    onUploadProgress: (progressEvent: any) => void\n  },\n  formData: FormData,\n): Promise<{ file_path: string }> {\n  const response = await axios.post(\n    `${BASE_URL}/files/upload/${fileName}`,\n    formData,\n    config,\n  )\n  return response.data\n}\n","export const FILE_UPLOADER_SLICE_NAME = 'fileUploader'\n\nexport type FileUploader = {\n  [id: string]: FileUploaderType\n}\n\nexport type FileUploaderType = {\n  path?: string\n  fileName?: string\n  isUninitialized: boolean\n  pending: boolean\n  fulfilled: boolean\n  uploadingProgress?: number\n  error?: string\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { uploadFileApi } from 'api/files/Files'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\nimport { FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\n\nexport const setUploadProgress = createAction<{\n  requestId: string\n  progess: number\n  total: number\n}>(`${FILE_UPLOADER_SLICE_NAME}/setUploadProgress`)\n\nexport const uploadFile = createAsyncThunk<\n  {\n    resultPath: string\n  },\n  {\n    requestId: string\n    nodeId?: string\n    fileName: string\n    formData: FormData\n    fileType?: FILE_TYPE\n  }\n>(\n  `${FILE_UPLOADER_SLICE_NAME}/uploadFile`,\n  async ({ requestId, fileName, formData }, thunkAPI) => {\n    try {\n      const config = getUploadConfig((percent, total) => {\n        thunkAPI.dispatch(\n          setUploadProgress({\n            requestId,\n            progess: percent,\n            total,\n          }),\n        )\n      })\n      const response = await uploadFileApi(fileName, config, formData)\n      return {\n        resultPath: response.file_path,\n      }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nfunction getUploadConfig(\n  onUpdateProgressFn: (percent: number, totalSize: number) => void,\n) {\n  return {\n    onUploadProgress: function (progressEvent: any) {\n      const percentCompleted = Math.round(\n        (progressEvent.loaded * 100) / progressEvent.total,\n      )\n      onUpdateProgressFn(percentCompleted, progressEvent.total)\n    },\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  Elements,\n  removeElements,\n  Position,\n  isNode,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport {\n  FLOW_ELEMENT_SLICE_NAME,\n  FlowElement,\n  NODE_TYPE_SET,\n  NodeData,\n  ElementCoord,\n} from './FlowElementType'\nimport {\n  INITIAL_ALGO_STYLE,\n  INITIAL_DATA_STYLE,\n  INITIAL_IMAGE_ELEMENT_ID,\n  INITIAL_IMAGE_ELEMENT_NAME,\n  REACT_FLOW_NODE_TYPE_KEY,\n} from 'const/flowchart'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { addAlgorithmNode, addInputNode } from './FlowElementActions'\nimport { getLabelByPath } from './FlowElementUtils'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\n\nconst initialElements: Elements<NodeData> = [\n  {\n    id: INITIAL_IMAGE_ELEMENT_ID,\n    type: REACT_FLOW_NODE_TYPE_KEY.ImageFileNode,\n    data: {\n      type: NODE_TYPE_SET.INPUT,\n      label: INITIAL_IMAGE_ELEMENT_NAME,\n    },\n    style: INITIAL_DATA_STYLE,\n    position: { x: 50, y: 150 },\n  },\n]\n\nconst initialFlowPosition: FlowTransform = {\n  x: 0,\n  y: 0,\n  zoom: 0.7,\n}\n\nconst initialElementCoord: ElementCoord = {\n  x: 100,\n  y: 150,\n}\n\nconst initialState: FlowElement = {\n  flowElements: initialElements,\n  flowPosition: initialFlowPosition,\n  elementCoord: initialElementCoord,\n}\n\nexport const flowElementSlice = createSlice({\n  name: FLOW_ELEMENT_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFlowPosition: (state, action: PayloadAction<FlowTransform>) => {\n      state.flowPosition = action.payload\n    },\n    setFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = action.payload\n    },\n    deleteFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = removeElements(action.payload, state.flowElements)\n    },\n    deleteFlowElementsById: (state, action: PayloadAction<string>) => {\n      const element = state.flowElements.find(\n        (edge) => edge.id === action.payload,\n      )\n      if (element !== undefined) {\n        state.flowElements = removeElements([element], state.flowElements)\n      }\n    },\n    editFlowElementPositionById: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        coord: {\n          x: number\n          y: number\n        }\n      }>,\n    ) => {\n      let { nodeId, coord } = action.payload\n      const elementIdx = state.flowElements.findIndex(\n        (ele) => ele.id === nodeId,\n      )\n      const targetItem = state.flowElements[elementIdx]\n      if (isNode(targetItem)) {\n        targetItem.position = coord\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        let { node } = action.meta.arg\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_ALGO_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        let { node } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_DATA_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(setInputNodeFilePath, (state, action) => {\n        let { nodeId, filePath } = action.payload\n        const label = getLabelByPath(filePath)\n        const elementIdx = state.flowElements.findIndex(\n          (ele) => ele.id === nodeId,\n        )\n        const targetNode = state.flowElements[elementIdx]\n        if (targetNode.data != null) {\n          targetNode.data.label = label\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const elementIdx = state.flowElements.findIndex(\n            (ele) => ele.id === nodeId,\n          )\n          const targetNode = state.flowElements[elementIdx]\n          if (targetNode.data != null) {\n            targetNode.data.label = getLabelByPath(action.payload.resultPath)\n          }\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.flowPosition = initialFlowPosition\n        state.elementCoord = initialElementCoord\n        const newNodeList: Elements<NodeData> = Object.values(\n          action.payload.nodeDict,\n        ).map((node) => {\n          if (isInputNodePostData(node)) {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'input',\n              },\n            }\n          } else {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'algorithm',\n              },\n            }\n          }\n        })\n        state.flowElements = newNodeList.concat(\n          Object.values(action.payload.edgeDict),\n        )\n      }),\n})\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nfunction updateElementCoord(state: FlowElement) {\n  const { x } = state.elementCoord\n  if (x > 800) {\n    state.elementCoord.x = 300\n    state.elementCoord.y += 100\n  } else {\n    state.elementCoord.x += 250\n    state.elementCoord.y += getRandomArbitrary(-20, 20)\n  }\n}\n\nexport const {\n  setFlowPosition,\n  setFlowElements,\n  deleteFlowElements,\n  deleteFlowElementsById,\n  editFlowElementPositionById,\n} = flowElementSlice.actions\n\nexport default flowElementSlice.reducer\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getNWBParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/nwb`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const NWB_SLICE_NAME = 'NWB'\n\nexport type NWBType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getNWBParamsApi } from 'api/nwb/NWB'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { NWB_SLICE_NAME } from './NWBType'\n\nexport const getNWBParams = createAsyncThunk<ParamDTO, void>(\n  `${NWB_SLICE_NAME}/getNWBParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getNWBParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getNWBParams } from './NWBAction'\nimport { NWBType, NWB_SLICE_NAME } from './NWBType'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\n\nconst initialState: NWBType = {\n  params: {},\n}\n\nexport const nwbSlice = createSlice({\n  name: NWB_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const targetNode = getChildParam(path, state.params)\n      if (targetNode != null) {\n        targetNode.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNWBParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = nwbSlice.actions\n\nexport default nwbSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\n\ntype RightDrawer = {\n  open: boolean\n  mode: RIGHT_DRAWER_MODE_TYPE\n  currendNodeId: string | null\n}\n\nexport const RIGHT_DRAWER_MODE = {\n  NONE: 'none',\n  NWB: 'nwb',\n  PARAM_FORM: 'paramForm',\n  SNAKEMAKE: 'snakemake',\n} as const\n\nexport type RIGHT_DRAWER_MODE_TYPE =\n  typeof RIGHT_DRAWER_MODE[keyof typeof RIGHT_DRAWER_MODE]\n\nconst initialState: RightDrawer = {\n  open: false,\n  mode: RIGHT_DRAWER_MODE.NONE,\n  currendNodeId: null,\n}\nexport const rightDrawerSlice = createSlice({\n  name: 'rightDrawer',\n  initialState,\n  reducers: {\n    openRightDrawer: (state, action: PayloadAction<RIGHT_DRAWER_MODE_TYPE>) => {\n      state.open = true\n      state.mode = action.payload\n    },\n    closeRightDrawer: (state) => {\n      state.open = false\n      state.mode = RIGHT_DRAWER_MODE.NONE\n    },\n    toggleParamForm: (state, action: PayloadAction<string>) => {\n      if (\n        state.open &&\n        state.mode === RIGHT_DRAWER_MODE.PARAM_FORM &&\n        state.currendNodeId === action.payload\n      ) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n        state.currendNodeId = null\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.PARAM_FORM\n        state.currendNodeId = action.payload\n      }\n    },\n    toggleNwb: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.NWB) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.NWB\n      }\n      state.currendNodeId = null\n    },\n    toggleSnakemake: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.SNAKEMAKE) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.SNAKEMAKE\n      }\n      state.currendNodeId = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteFlowElements, (state, action) => {\n        if (\n          action.payload.findIndex((elm) => elm.id === state.currendNodeId) > 0\n        ) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (action.payload === state.currendNodeId) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, () => {\n        return initialState\n      })\n  },\n})\n\nexport const {\n  toggleParamForm,\n  toggleNwb,\n  toggleSnakemake,\n  openRightDrawer,\n  closeRightDrawer,\n} = rightDrawerSlice.actions\n\nexport default rightDrawerSlice.reducer\n","export function arrayEqualityFn<T>(a: T[], b: T[]) {\n  return a === b || (a.length === b.length && a.every((v, i) => v === b[i]))\n}\n\nexport function twoDimarrayEqualityFn<T>(a: T[][], b: T[][]) {\n  return (\n    a === b ||\n    (a.length === b.length && a.every((v, i) => arrayEqualityFn(v, b[i])))\n  )\n}\n","import MuiAccordion, { AccordionProps } from '@mui/material/Accordion'\nimport { styled } from '@mui/material/styles'\n\nexport const Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: '1px solid',\n  borderColor: theme.palette.divider,\n  boxShadow: 'none',\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}))\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport Switch from '@mui/material/Switch'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport Typography from '@mui/material/Typography'\n\nimport { isParamChild } from 'utils/param/ParamUtils'\nimport { ParamType } from 'utils/param/ParamType'\nimport { RootState } from 'store/store'\nimport { Accordion } from 'components/common/Accordion'\n\ntype ParamSelectorType = (paramKey: string) => (state: RootState) => ParamType\ntype ParamValueSelectorType = (path: string) => (state: RootState) => unknown\ntype ParamUpdateActionCreatorType = (\n  path: string,\n  newValue: unknown,\n) => AnyAction\n\nexport type CreateParamFormItemComponentProps = {\n  paramSelector: ParamSelectorType\n  paramValueSelector: ParamValueSelectorType\n  paramUpdateActionCreator: ParamUpdateActionCreatorType\n}\n\nexport function createParamFormItemComponent({\n  paramSelector,\n  paramValueSelector,\n  paramUpdateActionCreator,\n}: CreateParamFormItemComponentProps): React.FC<{ paramKey: string }> {\n  function useParamValueUpdate(\n    path: string,\n  ): [unknown, (newValue: unknown) => AnyAction] {\n    const value = useSelector(paramValueSelector(path))\n    const updateParamAction = (newValue: unknown) => {\n      return paramUpdateActionCreator(path, newValue)\n    }\n    return [value, updateParamAction]\n  }\n  const ParamItemForString = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    const onChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(updateParamAction(newValue))\n    }\n    return <TextField value={value} onChange={onChange} multiline />\n  })\n  const ParamItemForNumber = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue =\n          event.target.value === '' ? '' : Number(event.target.value)\n        if (typeof newValue === 'number') {\n          dispatch(updateParamAction(newValue))\n        }\n      }\n      return (\n        <TextField\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={value}\n          onChange={onChange}\n        />\n      )\n    } else {\n      return null\n    }\n  })\n  const ParamItemForBoolean = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'boolean') {\n      const onChange = () => {\n        dispatch(updateParamAction(!value))\n      }\n      return <Switch checked={value} onChange={onChange} />\n    } else {\n      return null\n    }\n  })\n  const ParamItemForValueType = React.memo<ParamChildItemProps>(({ path }) => {\n    const [value] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      return <ParamItemForNumber path={path} />\n    } else if (typeof value === 'string') {\n      return <ParamItemForString path={path} />\n    } else if (typeof value === 'boolean') {\n      return <ParamItemForBoolean path={path} />\n    } else {\n      return <ParamItemForString path={path} />\n    }\n  })\n  const ParamChildItem = React.memo<ParamChildItemProps & { name: string }>(\n    ({ path, name }) => {\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            marginTop: (theme) => theme.spacing(2),\n            marginBottom: (theme) => theme.spacing(2),\n            alignItems: 'center',\n            overflow: 'scroll',\n          }}\n        >\n          <Box\n            style={{ verticalAlign: 'middle' }}\n            sx={{\n              flexGrow: 1,\n              width: '50%',\n            }}\n          >\n            <Typography style={{ overflow: 'scroll' }}>{name}</Typography>\n          </Box>\n          <Box sx={{ width: '50%' }}>\n            <ParamItemForValueType path={path} />\n          </Box>\n        </Box>\n      )\n    },\n  )\n  const ParamItem = React.memo<ParamItemProps>(({ paramKey, param }) => {\n    if (isParamChild(param)) {\n      return <ParamChildItem path={param.path} name={paramKey} />\n    } else {\n      return (\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            {paramKey}\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              {Object.entries(param.children).map(([paramKey, param], i) => (\n                <ParamItem param={param} paramKey={paramKey} />\n              ))}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      )\n    }\n  })\n  return React.memo<{ paramKey: string }>(({ paramKey }) => {\n    const param = useSelector(paramSelector(paramKey)) // 一階層目\n    return <ParamItem paramKey={paramKey} param={param} />\n  })\n}\n\ntype ParamItemProps = {\n  paramKey: string\n  param: ParamType\n}\n\ntype ParamChildItemProps = {\n  path: string\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\nimport { updateParam } from 'store/slice/NWB/NWBSlice'\nimport { getNWBParams } from 'store/slice/NWB/NWBAction'\nimport { toggleNwb } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectNwbParam,\n  selectNwbParamsKeyList,\n  selectNwbParamsValue,\n} from 'store/slice/NWB/NWBSelectors'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const NWBSettingButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleNwb())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      NWB setting\n    </Button>\n  )\n})\n\nexport const NWBSettingContents = React.memo(() => {\n  const dispatch = useDispatch()\n\n  const paramKeyList = useSelector(selectNwbParamsKeyList, arrayEqualityFn)\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getNWBParams())\n    }\n  })\n\n  return (\n    <div className=\"nwbParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectNwbParam,\n    paramValueSelector: selectNwbParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getSnakemakeParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/snakemake`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const SNAKEMAKE_SLICE_NAME = 'Snakemake'\n\nexport type SnakemakeType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getSnakemakeParamsApi } from 'api/snakemake/Snakemake'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nexport const getSnakemakeParams = createAsyncThunk<ParamDTO, void>(\n  `${SNAKEMAKE_SLICE_NAME}/getSnakemakeParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = getSnakemakeParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport { getSnakemakeParams } from './SnakemakeAction'\nimport { SnakemakeType, SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nconst initialState: SnakemakeType = {\n  params: {},\n}\n\nexport const SnakemakeSlice = createSlice({\n  name: SNAKEMAKE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const target = getChildParam(path, state.params)\n      if (target != null) {\n        target.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getSnakemakeParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = SnakemakeSlice.actions\n\nexport default SnakemakeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\n\nimport { updateParam } from 'store/slice/Snakemake/SnakemakeSlice'\nimport { getSnakemakeParams } from 'store/slice/Snakemake/SnakemakeAction'\nimport { toggleSnakemake } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport {\n  selectSnakemakeParam,\n  selectSnakemakeParamsKeyList,\n  selectSnakemakeParamsValue,\n} from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const SnakemakeButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleSnakemake())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      Snakemake\n    </Button>\n  )\n})\n\nexport const SnakemakeContents = React.memo(() => {\n  const dispatch = useDispatch()\n  const paramKeyList = useSelector(\n    selectSnakemakeParamsKeyList,\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getSnakemakeParams())\n    }\n  })\n  return (\n    <div className=\"SnakemakeParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectSnakemakeParam,\n    paramValueSelector: selectSnakemakeParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\nimport Grow from '@mui/material/Grow'\nimport Paper from '@mui/material/Paper'\nimport Popper from '@mui/material/Popper'\nimport MenuItem from '@mui/material/MenuItem'\nimport MenuList from '@mui/material/MenuList'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nimport { useSnackbar } from 'notistack'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport {\n  RUN_BTN_LABELS,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n} from 'store/slice/Pipeline/PipelineType'\nimport { selectPipelineRunBtn } from 'store/slice/Pipeline/PipelineSelectors'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\n\nexport const RunButtons = React.memo<UseRunPipelineReturnType>((props) => {\n  const {\n    uid,\n    isStartedSuccess,\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    handleCancelPipeline,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const runBtnOption = useSelector(selectPipelineRunBtn)\n\n  const [dialogOpen, setDialogOpen] = React.useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n  const handleClick = () => {\n    let errorMessage: string | null = null\n    if (algorithmNodeNotExist) {\n      errorMessage = 'please add some algorithm nodes to the flowchart'\n    }\n    if (filePathIsUndefined) {\n      errorMessage = 'please select input file'\n    }\n    if (errorMessage != null) {\n      enqueueSnackbar(errorMessage, {\n        variant: 'error',\n      })\n    } else {\n      if (runBtnOption === RUN_BTN_OPTIONS.RUN_NEW) {\n        setDialogOpen(true)\n      } else {\n        handleRunPipelineByUid()\n      }\n    }\n  }\n  const onClickDialogRun = (name: string) => {\n    handleRunPipeline(name)\n    setDialogOpen(false)\n  }\n  const onClickCancel = () => {\n    handleCancelPipeline()\n  }\n  const [menuOpen, setMenuOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLDivElement>(null)\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    option: RUN_BTN_TYPE,\n  ) => {\n    dispatch(setRunBtnOption({ runBtnOption: option }))\n    setMenuOpen(false)\n  }\n  const handleToggle = () => {\n    setMenuOpen((prevOpen) => !prevOpen)\n  }\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n    setMenuOpen(false)\n  }\n  const uidExists = uid != null\n  return (\n    <>\n      <ButtonGroup\n        sx={{\n          margin: 1,\n        }}\n        variant=\"contained\"\n        ref={anchorRef}\n        disabled={isStartedSuccess}\n      >\n        <Button onClick={handleClick}>{RUN_BTN_LABELS[runBtnOption]}</Button>\n        <Button size=\"small\" onClick={handleToggle}>\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={menuOpen}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList>\n                  {Object.values(RUN_BTN_OPTIONS).map((option) => (\n                    <MenuItem\n                      key={option}\n                      disabled={\n                        !uidExists && option === RUN_BTN_OPTIONS.RUN_ALREADY\n                      }\n                      selected={option === runBtnOption}\n                      onClick={(event) => handleMenuItemClick(event, option)}\n                    >\n                      {RUN_BTN_LABELS[option]}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n      <Button\n        variant=\"outlined\"\n        endIcon={<CloseIcon />}\n        onClick={onClickCancel}\n        sx={{\n          margin: 1,\n          marginRight: 4,\n        }}\n      >\n        Cancel\n      </Button>\n      <RunDialog\n        open={dialogOpen}\n        handleRun={onClickDialogRun}\n        handleClose={() => setDialogOpen(false)}\n      />\n    </>\n  )\n})\n\nconst RunDialog = React.memo<{\n  open: boolean\n  handleRun: (name: string) => void\n  handleClose: () => void\n}>(({ open, handleClose, handleRun }) => {\n  const [name, setName] = React.useState('New flow')\n  const [error, setError] = React.useState<string | null>(null)\n  const onClickRun = () => {\n    if (name !== '') {\n      handleRun(name)\n    } else {\n      setError('name is empty')\n    }\n  }\n  const onChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    if (event.target.value !== '') {\n      setError(null)\n    }\n  }\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Name and run flowchart</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"name\"\n          autoFocus\n          margin=\"dense\"\n          fullWidth\n          variant=\"standard\"\n          onChange={onChangeName}\n          error={error != null}\n          helperText={error}\n          value={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"inherit\" variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button onClick={onClickRun} color=\"primary\" variant=\"outlined\">\n          Run\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","import React from 'react'\nimport Box from '@mui/material/Box'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { NWBSettingButton } from './FlowChart/NWB'\nimport { SnakemakeButton } from './FlowChart/Snakemake'\nimport { RunButtons } from './RunButtons'\n\nexport const ToolBar = React.memo<UseRunPipelineReturnType>((props) => (\n  <Box\n    style={{\n      position: 'absolute',\n      float: 'right',\n      textAlign: 'right',\n      top: -7,\n      right: 10,\n      zIndex: 4,\n      textTransform: 'none',\n    }}\n  >\n    <SnakemakeButton />\n    <NWBSettingButton />\n    <RunButtons {...props} />\n  </Box>\n))\n","import { useSelector } from 'react-redux'\nimport { selectHandleTypeColor } from 'store/slice/HandleTypeColor/HandleTypeColorSelectors'\n\nexport function useHandleColor(type: string) {\n  const color = useSelector(selectHandleTypeColor(type))\n  return color\n}\n","import { RootState } from '../../store'\n\nexport const selectHandleTypeColor = (key: string) => (state: RootState) => {\n  if (state.handleColor.colorMap[key] != null) {\n    return state.handleColor.colorMap[key]\n  } else {\n    return undefined\n  }\n}\n","import React from 'react'\nimport LinearProgress, {\n  LinearProgressProps,\n} from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\n\nexport const LinearProgressWithLabel = React.memo<\n  LinearProgressProps & { value: number }\n>((props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  )\n})\n","import { FileUploaderType } from './FileUploaderType'\n\nexport const inistialUploaderState: FileUploaderType = {\n  path: undefined,\n  fileName: undefined,\n  isUninitialized: true,\n  pending: false,\n  fulfilled: false,\n  uploadingProgress: undefined,\n  error: undefined,\n}\n","import { RootState } from 'store/store'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nexport const selectFileUploader = (id: string) => (state: RootState) => {\n  if (Object.keys(state.fileUploader).includes(id)) {\n    return state.fileUploader[id]\n  } else {\n    return inistialUploaderState\n  }\n}\n\nexport const selectUploadFilePath = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).path\n\nexport const selectUploadFileName = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fileName\n\nexport const selectFileUploadIsUninitialized =\n  (id: string) => (state: RootState) =>\n    selectFileUploader(id)(state).isUninitialized\n\nexport const selectFileUploadIsPending = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).pending\n\nexport const selectFileUploadIsFulfilled = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fulfilled\n\nexport const selectFileUploadProgress = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).uploadingProgress\n\nexport const selectFileUploadError = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).error\n","import { nanoid } from '@reduxjs/toolkit'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uploadFile } from './FileUploaderActions'\nimport {\n  selectFileUploadIsPending,\n  selectUploadFilePath,\n  selectFileUploadIsFulfilled,\n  selectFileUploadProgress,\n  selectFileUploadIsUninitialized,\n  selectFileUploadError,\n} from './FileUploaderSelectors'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\ntype UseFileUploaderProps = {\n  fileType?: FILE_TYPE\n  nodeId?: string\n}\n\nexport function useFileUploader({ fileType, nodeId }: UseFileUploaderProps) {\n  const dispatch = useDispatch()\n  const id = React.useRef(nanoid())\n  const onUploadFile = React.useCallback(\n    (formData: FormData, fileName: string) => {\n      dispatch(\n        uploadFile({\n          requestId: id.current,\n          nodeId,\n          fileName,\n          formData,\n          fileType,\n        }),\n      )\n    },\n    [dispatch, fileType, nodeId],\n  )\n  const uninitialized = useSelector(selectFileUploadIsUninitialized(id.current))\n  const filePath = useSelector(selectUploadFilePath(id.current))\n  const pending = useSelector(selectFileUploadIsPending(id.current))\n  const fulfilled = useSelector(selectFileUploadIsFulfilled(id.current))\n  const progress = useSelector(selectFileUploadProgress(id.current))\n  const error = useSelector(selectFileUploadError(id.current))\n  return {\n    filePath,\n    uninitialized,\n    pending,\n    fulfilled,\n    progress,\n    error,\n    onUploadFile,\n  }\n}\n","import { createContext } from 'react'\n\nexport const DialogContext = createContext<{\n  onOpen: (nodeId: string) => any\n  onOpenDialogFile: (value: {\n    filePath: string | string[]\n    open: boolean\n    fileTreeType?: string\n    multiSelect: boolean\n    onSelectFile: (v: any) => any\n  }) => any\n}>({\n  onOpen: () => null,\n  onOpenDialogFile: () => null,\n})\n","import React, { useContext } from 'react'\nimport { Button, Typography } from '@mui/material'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { LinearProgressWithLabel } from './LinerProgressWithLabel'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { getLabelByPath } from 'store/slice/FlowElement/FlowElementUtils'\nimport { DialogContext } from 'components/Visualize/DialogContext'\n\nexport const FileSelect = React.memo<{\n  multiSelect?: boolean\n  filePath: string | string[]\n  fileType: FILE_TYPE\n  nodeId?: string\n  onChangeFilePath: (path: string | string[]) => void\n}>(({ multiSelect = false, filePath, nodeId, fileType, onChangeFilePath }) => {\n  const {\n    // filePath: uploadedFilePath,\n    onUploadFile,\n    pending,\n    uninitialized,\n    progress,\n    error,\n  } = useFileUploader({ fileType, nodeId })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n  return (\n    <>\n      {!uninitialized && pending && progress != null && (\n        <div style={{ marginLeft: 2, marginRight: 2 }}>\n          <LinearProgressWithLabel value={progress} />\n        </div>\n      )}\n      <FileSelectImple\n        multiSelect={multiSelect}\n        filePath={filePath}\n        onSelectFile={onChangeFilePath}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={fileType}\n        selectButtonLabel={`Select ${fileType}`}\n      />\n      {error != null && (\n        <Typography variant=\"caption\" color=\"error\">\n          {error}\n        </Typography>\n      )}\n    </>\n  )\n})\n\ntype FileSelectImpleProps = {\n  multiSelect?: boolean\n  filePath: string | string[]\n  onUploadFile: (formData: FormData, fileName: string) => void\n  onSelectFile: (path: string | string[]) => void\n  fileTreeType?: FILE_TREE_TYPE\n  selectButtonLabel?: string\n  uploadButtonLabel?: string\n}\n\nexport const FileSelectImple = React.memo<FileSelectImpleProps>(\n  ({\n    multiSelect = false,\n    filePath,\n    onSelectFile,\n    onUploadFile,\n    fileTreeType,\n    selectButtonLabel,\n    uploadButtonLabel,\n  }) => {\n    const { onOpenDialogFile } = useContext(DialogContext)\n\n    const onFileInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.preventDefault()\n      if (event.target.files != null && event.target.files[0] != null) {\n        const file = event.target.files[0]\n        const formData = new FormData()\n        formData.append('file', file)\n        const fileName = file.name\n        onUploadFile(formData, fileName)\n      }\n    }\n    const inputRef = React.useRef<HTMLInputElement>(null)\n    const onClick = () => {\n      if (inputRef.current != null) {\n        inputRef.current.click()\n      }\n    }\n    const accept = getFileInputAccept(fileTreeType)\n    const fileName = getLabelByPath(filePath)\n    return (\n      <div\n        style={{\n          padding: 5,\n        }}\n      >\n        <ButtonGroup size=\"small\" style={{ marginRight: 4 }}>\n          <Button\n            variant=\"outlined\"\n            onClick={() => {\n              onOpenDialogFile({\n                open: true,\n                multiSelect,\n                filePath,\n                fileTreeType: fileTreeType as any,\n                onSelectFile,\n              })\n            }}\n          >\n            {!!selectButtonLabel ? selectButtonLabel : 'Select File'}\n          </Button>\n          <Button onClick={onClick} variant=\"outlined\">\n            {!!uploadButtonLabel ? uploadButtonLabel : 'Load'}\n          </Button>\n        </ButtonGroup>\n        <div>\n          <input\n            ref={inputRef}\n            type=\"file\"\n            onChange={onFileInputChange}\n            accept={accept}\n            style={{\n              visibility: 'hidden',\n              width: 0,\n              height: 0,\n            }}\n          />\n          <Typography className=\"selectFilePath\" variant=\"caption\">\n            {!!fileName ? fileName : 'No file is selected.'}\n          </Typography>\n        </div>\n      </div>\n    )\n  },\n)\n\nfunction getFileInputAccept(fileType: FILE_TREE_TYPE | undefined) {\n  switch (fileType) {\n    case FILE_TREE_TYPE_SET.IMAGE:\n      return '.tif,.tiff'\n    case FILE_TREE_TYPE_SET.CSV:\n      return '.csv'\n    case FILE_TREE_TYPE_SET.HDF5:\n      return '.hdf5,.nwb'\n    default:\n      return undefined\n  }\n}\n","import { Connection } from 'react-flow-renderer'\n\nexport function toHandleId(nodeId: string, name: string, type: string) {\n  return `${nodeId}--${name}--${type}`\n}\n\nexport function getHandleType(handleId: string) {\n  return handleId.split('--')[2]\n}\n\nexport function isValidConnection(connection: Connection) {\n  if (connection.sourceHandle != null && connection.targetHandle != null) {\n    return (\n      getHandleType(connection.sourceHandle) ===\n      getHandleType(connection.targetHandle)\n    )\n  } else {\n    return true\n  }\n}\n","import React, { CSSProperties } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport {\n  selectImageInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { FileSelect } from './FileSelect'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\n// Connection部分のレイアウト\nconst sourceHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  top: 15,\n  border: '1px solid',\n  // borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const ImageFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <ImageFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst ImageFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected: elementSelected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectImageInputNodeSelectedFilePath(nodeId),\n      (a, b) => (a != null && b != null ? arrayEqualityFn(a, b) : a === b),\n    )\n    const onChangeFilePath = (path: string[]) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n\n    const theme = useTheme()\n    const returnType = 'ImageData'\n    const imageColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '250px',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          multiSelect\n          onChangeFilePath={(path) => {\n            if (Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.IMAGE}\n          filePath={filePath ?? []}\n        />\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'image', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: imageColor,\n          }}\n          isValidConnection={isValidConnection}\n        />\n      </div>\n    )\n  },\n)\n","import React, { CSSProperties, useContext } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport {\n  alpha,\n  Typography,\n  useTheme,\n  Tooltip,\n  FormHelperText,\n  IconButton,\n  Button,\n  LinearProgress,\n  ButtonGroup,\n} from '@mui/material'\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded'\nimport ErrorIcon from '@mui/icons-material/Error'\nimport Popover from '@mui/material/Popover'\n\nimport { AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  selectAlgoArgs,\n  selectAlgoReturns,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { selectAlgorithmNodeDefined } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { toggleParamForm } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultMessage,\n  selectPipelineNodeResultStatus,\n  selectPipelineStatus,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\nimport {\n  NODE_RESULT_STATUS,\n  RUN_STATUS,\n} from 'store/slice/Pipeline/PipelineType'\nimport { DialogContext } from 'components/Visualize/DialogContext'\n\nconst leftHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\nconst rightHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\n\nexport const AlgorithmNode = React.memo<NodeProps<NodeData>>((element) => {\n  const defined = useSelector(selectAlgorithmNodeDefined(element.id))\n  if (defined) {\n    return <AlgorithmNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst AlgorithmNodeImple = React.memo<NodeProps<NodeData>>(\n  ({ id: nodeId, selected: elementSelected, isConnectable, data }) => {\n    const { onOpen } = useContext(DialogContext)\n    const theme = useTheme()\n    const dispatch = useDispatch()\n\n    const onClickParamButton = () => {\n      dispatch(toggleParamForm(nodeId))\n    }\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    const onClickOutputButton = () => {\n      onOpen(nodeId)\n    }\n\n    const status = useStatus(nodeId)\n\n    return (\n      <div\n        tabIndex={0}\n        style={{\n          width: '100%',\n          height: '110%',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.15)\n            : undefined,\n          border: '1px solid',\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <AlgoName nodeId={nodeId} data={data} />\n        <ButtonGroup sx={{ mx: 1 }}>\n          <Button size=\"small\" onClick={onClickParamButton}>\n            Param\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={onClickOutputButton}\n            disabled={status !== NODE_RESULT_STATUS.SUCCESS}\n          >\n            Output\n          </Button>\n        </ButtonGroup>\n        <AlgoArgs nodeId={nodeId} />\n        <AlgoReturns nodeId={nodeId} isConnectable={isConnectable} />\n        <Message nodeId={nodeId} />\n      </div>\n    )\n  },\n)\n\nconst AlgoName = React.memo<{\n  nodeId: string\n  data: NodeData\n}>(({ nodeId, data }) => {\n  const theme = useTheme()\n  const status = useStatus(nodeId)\n  const pipelineStatus = useSelector(selectPipelineStatus)\n  return (\n    <div\n      style={{\n        padding: 8,\n        paddingLeft: 8,\n        width: '100%',\n      }}\n      className=\"algoName\"\n    >\n      {pipelineStatus === RUN_STATUS.START_SUCCESS &&\n        status === NODE_RESULT_STATUS.PENDING && <LinearProgress />}\n      <Typography\n        style={{\n          textAlign: 'left',\n          color:\n            status === NODE_RESULT_STATUS.ERROR\n              ? theme.palette.error.main\n              : undefined,\n        }}\n      >\n        {data.label}\n      </Typography>\n    </div>\n  )\n})\n\nconst AlgoArgs = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const algoArgs = useSelector(selectAlgoArgs(nodeId), algoInfoListEqualtyFn)\n\n  return (\n    <>\n      {algoArgs != null\n        ? algoArgs\n            .filter((info) => info.type !== 'params')\n            .map((algoInfo, i) => {\n              return <ArgHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n            })\n        : null}\n    </>\n  )\n})\n\nconst AlgoReturns = React.memo<{\n  nodeId: string\n  isConnectable: boolean\n}>(({ nodeId, isConnectable }) => {\n  const algoReturns = useSelector(\n    selectAlgoReturns(nodeId),\n    algoInfoListEqualtyFn,\n  )\n  return (\n    <>\n      {algoReturns != null ? (\n        algoReturns?.map((algoInfo, i) => {\n          return <ReturnHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n        })\n      ) : (\n        // algoReturns.lengthが0の場合の応急処置\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={`${nodeId}`}\n          style={{\n            ...rightHandleStyle,\n            top: 15,\n          }}\n          isConnectable={isConnectable}\n        />\n      )}\n    </>\n  )\n})\n\ntype HandleProps = {\n  algoInfo: AlgorithmInfo\n  nodeId: string\n  i: number\n}\n\nfunction hexToRgb(hex: string | undefined, isNone: boolean | undefined) {\n  if (hex !== undefined) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n    if (result !== null) {\n      if (isNone) {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 0.55)`\n      } else {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 1)`\n      }\n    } else {\n      return undefined\n    }\n  } else {\n    return undefined\n  }\n}\n\nconst ArgHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type, isNone }, nodeId, i }) => {\n    const hex_color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    const rgb_color = hexToRgb(hex_color, isNone)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"target\"\n        position={Position.Left}\n        id={id}\n        style={{\n          ...leftHandleStyle,\n          background: rgb_color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"left-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst ReturnHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type }, nodeId, i }) => {\n    const color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"source\"\n        position={Position.Right}\n        id={id}\n        style={{\n          ...rightHandleStyle,\n          background: color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"right-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst Message = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const status = useStatus(nodeId)\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const errorMsg = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultMessage(nodeId)(state) ?? null\n      : null,\n  )\n\n  const anchorElRef = React.useRef<HTMLButtonElement | null>(null)\n  const [open, setOpen] = React.useState(false)\n  const theme = useTheme()\n\n  if (status === NODE_RESULT_STATUS.ERROR) {\n    return (\n      <>\n        <IconButton\n          ref={anchorElRef}\n          onClick={() => setOpen((prevOpen) => !prevOpen)}\n          size=\"small\"\n          style={{ color: theme.palette.error.main, float: 'right' }}\n        >\n          <ErrorIcon />\n        </IconButton>\n        <Popover\n          open={open}\n          anchorEl={anchorElRef.current}\n          onClose={() => setOpen(false)}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n        >\n          <div style={{ margin: 8 }}>\n            <FormHelperText error={true}>{errorMsg}</FormHelperText>\n          </div>\n        </Popover>\n      </>\n    )\n  } else if (status === NODE_RESULT_STATUS.SUCCESS) {\n    return <CheckCircleRoundedIcon color=\"success\" sx={{ float: 'right' }} />\n  } else {\n    return null\n  }\n})\n\nfunction algoInfoListEqualtyFn(\n  a: AlgorithmInfo[] | undefined,\n  b: AlgorithmInfo[] | undefined,\n) {\n  if (a != null && b != null) {\n    return (\n      a === b ||\n      (a.length === b.length &&\n        a.every((v, i) => v.type === b[i].type && v.name === b[i].name))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction useStatus(nodeId: string) {\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const status = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultStatus(nodeId)(state)\n      : 'uninitialized',\n  )\n  return status\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { INITIAL_IMAGE_ELEMENT_ID } from 'const/flowchart'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\nimport { addInputNode } from '../FlowElement/FlowElementActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { setInputNodeFilePath } from './InputNodeActions'\nimport {\n  CsvInputParamType,\n  FILE_TYPE_SET,\n  InputNode,\n  INPUT_NODE_SLICE_NAME,\n} from './InputNodeType'\nimport { isCsvInputNode, isHDF5InputNode } from './InputNodeUtils'\n\nconst initialState: InputNode = {\n  [INITIAL_IMAGE_ELEMENT_ID]: {\n    fileType: FILE_TYPE_SET.IMAGE,\n    param: {},\n  },\n}\n\nexport const inputNodeSlice = createSlice({\n  name: INPUT_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    deleteInputNode(state, action: PayloadAction<string>) {\n      delete state[action.payload]\n    },\n    setCsvInputNodeParam(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: CsvInputParamType\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId]\n      if (isCsvInputNode(inputNode)) {\n        inputNode.param = param\n      }\n    },\n    setInputNodeHDF5Path(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n      }>,\n    ) {\n      const { nodeId, path } = action.payload\n      const item = state[nodeId]\n      if (isHDF5InputNode(item)) {\n        item.hdf5Path = path\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(setInputNodeFilePath, (state, action) => {\n        const { nodeId, filePath } = action.payload\n        const targetNode = state[nodeId]\n        targetNode.selectedFilePath = filePath\n        if (isHDF5InputNode(targetNode)) {\n          targetNode.hdf5Path = undefined\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        const { node, fileType } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          switch (fileType) {\n            case FILE_TYPE_SET.CSV:\n              state[node.id] = {\n                fileType,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.IMAGE:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.HDF5:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.FLUO:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.BEHAVIOR:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.INPUT) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isInputNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.IMAGE,\n                  selectedFilePath: node.data.path as string[],\n                  param: {},\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.CSV,\n                  selectedFilePath: node.data.path as string,\n                  param: node.data.param as CsvInputParamType,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.HDF5,\n                  hdf5Path: node.data.hdf5Path,\n                  selectedFilePath: node.data.path as string,\n                  param: {},\n                }\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const { resultPath } = action.payload\n          const target = state[nodeId]\n          if (target.fileType === FILE_TYPE_SET.IMAGE) {\n            target.selectedFilePath = [resultPath]\n          } else {\n            target.selectedFilePath = resultPath\n          }\n        }\n      }),\n})\n\nexport const { setCsvInputNodeParam, setInputNodeHDF5Path } =\n  inputNodeSlice.actions\n\nexport default inputNodeSlice.reducer\n","import { RootState } from 'store/store'\n\nconst selectDisplayData = (state: RootState) => state.displayData\n\nexport const selectTimeSeriesData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].data\n\nexport const selectTimeSeriesXrange =\n  (filePath: string) => (state: RootState) =>\n    selectDisplayData(state).timeSeries[filePath].xrange\n\nexport const selectTimeSeriesStd = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].std\n\nexport const selectTimeSeriesDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).timeSeries).includes(filePath)\n\nexport const selectTimeSeriesDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].pending\n\nexport const selectTimeSeriesDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].fulfilled\n\nexport const selectTimeSeriesDataError =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).timeSeries[filePath].error\n      : null\n\nexport const selectHeatMapData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].data\n\nexport const selectHeatMapColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].columns\n\nexport const selectHeatMapIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].index\n\nexport const selectHeatMapDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).heatMap).includes(filePath)\n\nexport const selectHeatMapDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].pending\n\nexport const selectHeatMapDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].fulfilled\n\nexport const selectHeatMapDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).heatMap[filePath].error\n      : null\n\nexport const selectImageData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).image[filePath]\n\nexport const selectImageDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).image).includes(filePath)\n\nexport const selectImageDataError = (filePath: string) => (state: RootState) =>\n  selectImageDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).image[filePath].error\n    : null\n\nexport const selectImageDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].pending\n\nexport const selectImageDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].fulfilled\n\nexport const selectImageDataMaxSize =\n  (filePath: string) => (state: RootState) => {\n    if (!selectImageDataIsPending(filePath)(state)) {\n      return selectImageData(filePath)(state).data.length - 1\n    } else {\n      return 0\n    }\n  }\n\nexport const selectActiveImageData =\n  (filePath: string, activeIndex: number) => (state: RootState) => {\n    return selectImageData(filePath)(state).data[activeIndex]\n  }\n\nexport const selectCsvData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).csv[filePath].data\n\nexport const selectCsvDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).csv).includes(filePath)\n\nexport const selectCsvDataError = (filePath: string) => (state: RootState) =>\n  selectCsvDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).csv[filePath].error\n    : null\n\nexport const selectCsvDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].pending\n\nexport const selectCsvDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].fulfilled\n\nexport const selectRoiData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).roi[filePath]?.data[0] ?? []\n\nexport const selectRoiDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).roi).includes(filePath)\n\nexport const selectRoiDataError = (filePath: string) => (state: RootState) =>\n  selectRoiDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).roi[filePath].error\n    : null\n\nexport const selectRoiDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].pending\n\nexport const selectRoiDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].fulfilled\n\nexport const selectRoiUniqueList = (filePath: string) => (state: RootState) => {\n  if (selectRoiDataIsFulfilled(filePath)(state)) {\n    return selectDisplayData(state).roi[filePath].roiUniqueList\n  }\n  return null\n}\n\nexport const selectScatterData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).scatter[filePath]?.data ?? []\n\nexport const selectScatterDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).scatter).includes(filePath)\n\nexport const selectScatterDataError =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).scatter[filePath].error\n      : null\n\nexport const selectScatterDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].pending\n\nexport const selectScatterDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].fulfilled\n\nexport const selectBarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.data ?? []\n\nexport const selectBarIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.index ?? []\n\nexport const selectBarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).bar).includes(filePath)\n\nexport const selectBarDataError = (filePath: string) => (state: RootState) =>\n  selectBarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).bar[filePath].error\n    : null\n\nexport const selectBarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].pending\n\nexport const selectBarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].fulfilled\n\nexport const selectHTMLData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).html[filePath]?.data ?? ''\n\nexport const selectHTMLDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).html).includes(filePath)\n\nexport const selectHTMLDataError = (filePath: string) => (state: RootState) =>\n  selectHTMLDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).html[filePath].error\n    : null\n\nexport const selectHTMLDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].pending\n\nexport const selectHTMLDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].fulfilled\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type TimeSeriesData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getTimeSeriesInitDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/inittimedata/${path}`)\n  return response.data\n}\n\nexport async function getTimeSeriesDataByIdApi(\n  path: string,\n  index: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/timedata/${path}`, {\n    params: {\n      index: index,\n    },\n  })\n  return response.data\n}\n\nexport async function getTimeSeriesAllDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/alltimedata/${path}`)\n  return response.data\n}\n\nexport type HeatMapData = number[][]\n\nexport async function getHeatMapDataApi(\n  path: string,\n): Promise<{ data: HeatMapData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`)\n  return response.data\n}\n\nexport type ImageData = number[][][]\n\nexport async function getImageDataApi(\n  path: string,\n  params: {\n    startIndex?: number\n    endIndex?: number\n  },\n): Promise<{ data: ImageData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n    params: {\n      start_index: params.startIndex,\n      end_index: params.endIndex,\n    },\n  })\n  return response.data\n}\n\nexport type CsvData = number[][]\n\nexport async function getCsvDataApi(path: string): Promise<{ data: CsvData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/csv/${path}`)\n  return response.data\n}\n\nexport type RoiData = number[][][]\n\nexport async function getRoiDataApi(path: string): Promise<{ data: RoiData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {})\n  return response.data\n}\n\nexport type ScatterData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getScatterDataApi(\n  path: string,\n): Promise<{ data: ScatterData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type BarData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getBarDataApi(\n  path: string,\n): Promise<{ data: BarData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type HTMLData = string\n\nexport async function getHTMLDataApi(\n  path: string,\n): Promise<{ data: HTMLData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/html/${path}`, {})\n  return response.data\n}\n\nexport async function addRoiApi(\n  path: string,\n  data: { posx: number; posy: number; sizex: number; sizey: number },\n): Promise<{ data: HTMLData }> {\n  const response = await axios.post(\n    `${BASE_URL}/outputs/image/${path}/add_roi`,\n    data,\n  )\n  return response.data\n}\n\nexport async function mergeRoiApi(\n  path: string,\n  data: { ids: number[] },\n): Promise<{ data: HTMLData }> {\n  const response = await axios.post(\n    `${BASE_URL}/outputs/image/${path}/merge_roi`,\n    data,\n  )\n  return response.data\n}\n\nexport async function deleteRoiApi(\n  path: string,\n  data: { ids: number[] },\n): Promise<{ data: HTMLData }> {\n  const response = await axios.post(\n    `${BASE_URL}/outputs/image/${path}/delete_roi`,\n    data,\n  )\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  TimeSeriesData,\n  CsvData,\n  RoiData,\n  ScatterData,\n  BarData,\n  HTMLData,\n  ImageData,\n  HeatMapData,\n  getTimeSeriesInitDataApi,\n  getTimeSeriesDataByIdApi,\n  getTimeSeriesAllDataApi,\n  getHeatMapDataApi,\n  getImageDataApi,\n  getCsvDataApi,\n  getRoiDataApi,\n  getScatterDataApi,\n  getBarDataApi,\n  getHTMLDataApi,\n} from 'api/outputs/Outputs'\nimport { DISPLAY_DATA_SLICE_NAME } from './DisplayDataType'\n\nexport const getTimeSeriesInitData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; itemId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesInitData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesInitDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesDataById = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; index: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesDataById`,\n  async ({ path, index }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesDataByIdApi(path, index)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesAllData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesAllData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesAllDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHeatMapData = createAsyncThunk<\n  { data: HeatMapData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHeatMapData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHeatMapDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getImageData = createAsyncThunk<\n  { data: ImageData },\n  { path: string; startIndex?: number; endIndex?: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getImageData`,\n  async ({ path, startIndex, endIndex }, thunkAPI) => {\n    try {\n      const response = await getImageDataApi(path, { startIndex, endIndex })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getCsvData = createAsyncThunk<\n  {\n    data: CsvData\n  },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getCsvData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getCsvDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getRoiData = createAsyncThunk<{ data: RoiData }, { path: string }>(\n  `${DISPLAY_DATA_SLICE_NAME}/getRoiData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getRoiDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getScatterData = createAsyncThunk<\n  { data: ScatterData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getScatterData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getScatterDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getBarData = createAsyncThunk<\n  { data: BarData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getBarData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getBarDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getHTMLData = createAsyncThunk<\n  { data: HTMLData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHTMLData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHTMLDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import React from 'react'\nimport { DATA_TYPE } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const DisplayDataContext = React.createContext<{\n  nodeId: string | null\n  filePath: string\n  dataType: DATA_TYPE\n  itemId: number\n}>({ nodeId: '', filePath: '', dataType: 'csv', itemId: NaN })\n","import { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\n\nexport const VISUALIZE_ITEM_SLICE_NAME = 'visualaizeItem'\n\nexport type VisualaizeItem = {\n  selectedItemId: number | null\n  items: {\n    [itemId: number]: VisualaizeItemType\n  }\n  layout: ItemLayout\n}\n\nexport type ItemLayout = number[][] // itemIdをrow,columnで並べる\n\nexport type VisualaizeItemType = DisplayDataItem\n\nexport interface ItemBaseType<T extends VISUALIZE_ITEM_TYPE> {\n  itemType: T\n  width: number\n  height: number\n}\n\nexport type ColorType = {\n  rgb: string\n  offset: string\n}\n\nexport const VISUALIZE_ITEM_TYPE_SET = {\n  DISPLAY_DATA: 'displayData',\n} as const\n\nexport type VISUALIZE_ITEM_TYPE =\n  typeof VISUALIZE_ITEM_TYPE_SET[keyof typeof VISUALIZE_ITEM_TYPE_SET]\n\nexport type DisplayDataItem =\n  | ImageItem\n  | TimeSeriesItem\n  | HeatMapItem\n  | CsvItem\n  | RoiItem\n  | ScatterItem\n  | BarItem\n  | HDF5Item\n  | HTMLItem\n  | FluoItem\n  | BehaviorItem\n\nexport interface DisplayDataItemBaseType extends ItemBaseType<'displayData'> {\n  filePath: string | null\n  nodeId: string | null\n  dataType: DATA_TYPE | null\n  isWorkflowDialog: boolean\n  saveFileName: string\n  saveFormat: string\n}\n\nexport interface ImageItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.IMAGE\n  activeIndex: number\n  startIndex: number\n  endIndex: number\n  showticklabels: boolean\n  zsmooth: string | boolean\n  showline: boolean\n  showgrid: boolean\n  showscale: boolean\n  colors: ColorType[]\n  alpha: number\n  roiItem: RoiItem | null\n  roiAlpha: number\n  duration: number\n  clickedDataId?: string\n}\n\nexport interface TimeSeriesItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.TIME_SERIES\n  offset: boolean\n  span: number\n  showgrid: boolean\n  showline: boolean\n  showticklabels: boolean\n  zeroline: boolean\n  xrange: {\n    left: number | undefined\n    right: number | undefined\n  }\n  maxIndex: number\n  refImageItemId: number | null\n  drawOrderList: string[]\n}\n\nexport interface HeatMapItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HEAT_MAP\n  showscale: boolean\n  colors: ColorType[]\n}\nexport interface CsvItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.CSV\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\nexport interface RoiItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.ROI\n  outputKey?: string\n  // colors: ColorType[]\n}\n\nexport interface ScatterItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.SCATTER\n  xIndex: string\n  yIndex: string\n}\n\nexport interface BarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BAR\n  index: string\n}\n\nexport interface HDF5Item extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HDF5\n}\n\nexport interface HTMLItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HTML\n}\n\nexport interface FluoItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.FLUO\n}\n\nexport interface BehaviorItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BEHAVIOR\n}\n","import { DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  VisualaizeItemType,\n  DisplayDataItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  ImageItem,\n  TimeSeriesItem,\n  HeatMapItem,\n  RoiItem,\n  ScatterItem,\n  CsvItem,\n  BarItem,\n} from './VisualizeItemType'\n\nexport function isDisplayDataItem(\n  item: VisualaizeItemType,\n): item is DisplayDataItem {\n  return item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA\n}\n\nexport function isImageItem(item: VisualaizeItemType): item is ImageItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.IMAGE\n  )\n}\n\nexport function isTimeSeriesItem(\n  item: VisualaizeItemType,\n): item is TimeSeriesItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.TIME_SERIES\n  )\n}\n\nexport function isCsvItem(item: VisualaizeItemType): item is CsvItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.CSV\n  )\n}\n\nexport function isHeatMapItem(item: VisualaizeItemType): item is HeatMapItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HEAT_MAP\n  )\n}\n\nexport function isRoiItem(item: VisualaizeItemType): item is RoiItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.ROI\n  )\n}\n\nexport function isScatterItem(item: VisualaizeItemType): item is ScatterItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.SCATTER\n  )\n}\n\nexport function isBarItem(item: VisualaizeItemType): item is BarItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.BAR\n  )\n}\n","import { RootState } from 'store/store'\nimport {\n  selectRoiData,\n  selectRoiUniqueList,\n  selectTimeSeriesData,\n  selectTimeSeriesDataIsInitialized,\n} from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport {\n  isDisplayDataItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isHeatMapItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const selectSelectedVisualizeItemId = (state: RootState) =>\n  state.visualaizeItem.selectedItemId\n\nexport const selectVisualizeImageItemIdList = (state: RootState) =>\n  Object.keys(state.visualaizeItem.items)\n    .map(Number)\n    .filter((itemId) => {\n      const item = selectVisualizeItemById(itemId)(state)\n      return isImageItem(item) && !item.isWorkflowDialog\n    })\n\nexport const selectVisualizeItems = (state: RootState) =>\n  state.visualaizeItem.items\n\nexport const selectVisualizeItemById = (itemId: number) => (state: RootState) =>\n  state.visualaizeItem.items[itemId]\n\nexport const selectVisualizeItemLayout = (state: RootState) =>\n  state.visualaizeItem.layout\n\nexport const selectVisualizeItemIsWorkflowDialog =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).isWorkflowDialog\n  }\n\nexport const selectVisualizeItemIdForWorkflowDialog =\n  (nodeId: string, filePath: string, dataType: DATA_TYPE) =>\n  (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    let targetItemId: null | number = null\n    for (const [itemId, value] of Object.entries(items)) {\n      if (\n        value.nodeId === nodeId &&\n        value.filePath === filePath &&\n        value.dataType === dataType &&\n        value.isWorkflowDialog\n      ) {\n        targetItemId = Number(itemId)\n      }\n    }\n    return targetItemId\n  }\n\nexport const selectVisualizeItemWidth =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).width\n  }\n\nexport const selectVisualizeItemHeight =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).height\n  }\n\nexport const selectVisualizeItemType = (itemId: number) => (state: RootState) =>\n  selectVisualizeItemById(itemId)(state).itemType\n\nexport const selectVisualizeDataType =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.dataType\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataNodeId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.nodeId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeSaveFilename =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFileName\n  }\n\nexport const selectVisualizeSaveFormat =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFormat\n  }\n\nexport const selectImageItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemNodeId = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.nodeId ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemFilePath = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.filePath ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemShowticklabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemZsmooth =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.zsmooth\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemStartIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.startIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemEndIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.endIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemColors = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.colors\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemActiveIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.activeIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemAlpha = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.alpha\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemRoiAlpha =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.roiAlpha\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemRoiFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      if (item.roiItem) {\n        return item.roiItem.filePath\n      } else {\n        return null\n      }\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemDuration =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.duration\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemOffset =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.offset\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemSpan =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.span\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowTickLabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemZeroLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.zeroline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemXrange =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.xrange\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemDrawOrderList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.drawOrderList\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectTimeSeriesItemRefImageItemId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.refImageItemId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemRefRoiUniqueList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      if (item.refImageItemId != null) {\n        const imageItem = selectVisualizeItems(state)[item.refImageItemId]\n        if (isImageItem(imageItem) && imageItem.roiItem?.filePath != null) {\n          return selectRoiUniqueList(imageItem.roiItem.filePath)(state)\n        }\n      }\n      return null\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemKeys =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const path = selectTimeSeriesItemFilePath(itemId)(state)\n      if (path != null && selectTimeSeriesDataIsInitialized(path)(state)) {\n        const dataKeys = Object.keys(selectTimeSeriesData(path)(state))\n        const roiUniqueList =\n          selectTimeSeriesItemRefRoiUniqueList(itemId)(state)\n        if (roiUniqueList != null) {\n          return dataKeys.filter((key) => roiUniqueList.includes(key))\n        } else {\n          return dataKeys\n        }\n      } else {\n        return []\n      }\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectRoiItemIndex =\n  (itemId: number, roiFilePath: string | null) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const maxIdx = item.maxIndex\n      if (maxIdx !== 0) {\n        return maxIdx\n      }\n    }\n\n    if (roiFilePath !== null) {\n      return selectRoiItemMaxNumber(roiFilePath)(state)\n    } else {\n      return 0\n    }\n  }\n\nexport const selectRoiItemMaxNumber =\n  (roiFilePath: string) => (state: RootState) => {\n    const roiData = selectRoiData(roiFilePath)(state)\n    if (roiData.length !== 0) {\n      return Math.max(...roiData.map((arr) => Math.max(...arr)))\n    } else {\n      return 0\n    }\n  }\n\nexport const selectHeatMapItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectHeatMapItemColors =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.colors\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemTranspose =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.transpose\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetHeader =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.setHeader\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isCsvItem(item)) {\n    return item.setIndex\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectBarItemIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isBarItem(item)) {\n    return item.index\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectScatterItemXIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.xIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectScatterItemYIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.yIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectDisplayDataIsSingle =\n  (itemId: number) => (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    const item = items[itemId]\n    const targetFilePath = item.filePath\n    return (\n      Object.values(items).filter((value) => value.filePath === targetFilePath)\n        .length === 1\n    )\n  }\n","import React from 'react'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectCsvData,\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { CsvData } from 'api/outputs/Outputs'\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const CsvPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <CsvPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst CsvPlotImple = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  return (\n    <PresentationalCsvPlot\n      path={path}\n      transpose={transpose}\n      setHeader={setHeader}\n      setIndex={setIndex}\n    />\n  )\n})\n\n/**\n * CsvFileNodeの設定時に表示するプレビューでも使用することを想定\n *\n * DisplayDataContextに依存しない\n */\nexport const PresentationalCsvPlot = React.memo<{\n  path: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ path, transpose, setIndex, setHeader }) => {\n  const data = useSelector(\n    selectCsvData(path),\n    (a: CsvData | undefined, b: CsvData | undefined) => {\n      if (a != null && b != null) {\n        return twoDimarrayEqualityFn(a, b)\n      } else {\n        return a === undefined && b === undefined\n      }\n    },\n  )\n\n  const csvData = React.useMemo(() => {\n    if (transpose) {\n      return data[0].map((col, i) => data.map((row) => row[i]))\n    }\n    return data\n  }, [data, transpose])\n\n  const header: GridColDef[] = React.useMemo(() => {\n    const headerData = () => {\n      if (setHeader === null) {\n        return csvData[0]\n      } else {\n        if (setHeader >= csvData.length) {\n          return csvData[csvData.length - 1]\n        } else {\n          return csvData[setHeader]\n        }\n      }\n    }\n\n    if (setIndex) {\n      return [\n        { field: 'col0', headerName: 'index', width: 150 },\n        ...headerData().map((value, idx) => {\n          return {\n            field: `col${idx + 1}`,\n            headerName: `${setHeader === null ? idx : value}`,\n            width: 150,\n          }\n        }),\n      ]\n    } else {\n      return headerData().map((value, idx) => {\n        return {\n          field: `col${idx + 1}`,\n          headerName: `${setHeader === null ? idx : value}`,\n          width: 150,\n        }\n      })\n    }\n  }, [csvData, setHeader, setIndex])\n  const rows = csvData\n    .map((row, row_id) => {\n      let rowObj = Object.fromEntries(\n        [row_id, ...row].map((value, index) => {\n          return [`col${index}`, value]\n        }),\n      )\n      rowObj['id'] = row_id\n      return rowObj\n    })\n    .filter(\n      (value, idx) =>\n        setHeader === null || (setHeader !== null && idx > setHeader),\n    )\n\n  return (\n    <div style={{ height: 300, width: '100%' }}>\n      <DataGrid rows={rows} columns={header} />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Switch,\n  FormControlLabel,\n  TextField,\n  Box,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeParamSetHeader,\n  selectCsvInputNodeParamSetIndex,\n  selectCsvInputNodeParamTranspose,\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setCsvInputNodeParam } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { PresentationalCsvPlot } from 'components/Visualize/Plot/CsvPlot'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const CsvFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <CsvFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst CsvFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'csv', 'CsvData')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nexport const ParamSettingDialog = React.memo<{\n  nodeId: string\n  filePath: string\n}>(({ nodeId, filePath }) => {\n  const [open, setOpen] = React.useState(false)\n  // OK時のみStoreに反映させるため一時的な値をuseStateで保持しておく。\n  // useStateの初期値はselectorで取得。\n  const [setHeader, setSetHeader] = React.useState(\n    useSelector(selectCsvInputNodeParamSetHeader(nodeId)),\n  )\n  const [setIndex, setSetIndex] = React.useState(\n    useSelector(selectCsvInputNodeParamSetIndex(nodeId)),\n  )\n  const [transpose, setTranspose] = React.useState(\n    useSelector(selectCsvInputNodeParamTranspose(nodeId)),\n  )\n  const dispatch = useDispatch()\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(\n      setCsvInputNodeParam({\n        nodeId,\n        param: { setHeader, setIndex, transpose },\n      }),\n    )\n  }\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>Settings</Button>\n      <Dialog open={open}>\n        <DialogTitle>Csv Setting</DialogTitle>\n        <DialogContent dividers>\n          <Box sx={{ display: 'flex', p: 1, m: 1, alignItems: 'flex-start' }}>\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={transpose}\n                  onChange={(event) => setTranspose(event.target.checked)}\n                />\n              }\n              label=\"Transpose\"\n            />\n            <TextField\n              label=\"header\"\n              sx={{\n                width: 100,\n                margin: (theme) => theme.spacing(0, 1, 0, 1),\n              }}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(event) => {\n                const value = Number(event.target.value)\n                if (value >= 0) {\n                  setSetHeader(value)\n                }\n              }}\n              value={setHeader}\n            />\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={setIndex}\n                  onChange={(event) => setSetIndex(event.target.checked)}\n                />\n              }\n              label=\"Set Index\"\n            />\n          </Box>\n          <Typography variant=\"h6\">Preview</Typography>\n          <CsvPreview\n            filePath={filePath}\n            transpose={transpose}\n            setHeader={setHeader}\n            setIndex={setIndex}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onClickOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst CsvPreview = React.memo<{\n  filePath: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ filePath: path, ...otherProps }) => {\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PresentationalCsvPlot path={path} {...otherProps} />\n  } else {\n    return null\n  }\n})\n","import { RootState } from '../../store'\n\nexport const selectHDF5 = (state: RootState) => {\n  if (state.hdf5 != null) {\n    return state.hdf5\n  } else {\n    return undefined\n  }\n}\n\nexport const selectHDF5Nodes = () => (state: RootState) =>\n  selectHDF5(state)?.tree\n\nexport const selectHDF5IsLoading = () => (state: RootState) =>\n  selectHDF5(state)?.isLoading ?? false\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type HDF5TreeDTO = HDF5DirDTO | HDF5FileDTO\n\nexport interface HDF5DirDTO {\n  isDir: true\n  name: string\n  nodes: HDF5TreeDTO[]\n  path: string\n}\n\nexport interface HDF5FileDTO {\n  isDir: false\n  name: string\n  shape: [number]\n  path: string\n  nbytes: string\n}\n\nexport async function getHDF5TreeApi(path: string): Promise<HDF5TreeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/hdf5/${path}`)\n  return response.data\n}\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nexport const HDF5_SLICE_NAME = 'hdf5'\n\nexport interface HDF5Tree {\n  isLoading: boolean\n  tree: HDF5TreeNodeType[]\n}\n\nexport type HDF5TreeNodeType = HDF5TreeDTO\n\nexport const HDF5_TYPE_SET = {\n  ALL: 'all',\n} as const\n\nexport type HDF5_TYPE = typeof HDF5_TYPE_SET[keyof typeof HDF5_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getHDF5TreeApi, HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nimport { HDF5_SLICE_NAME } from './HDF5Type'\n\nexport const getHDF5Tree = createAsyncThunk<HDF5TreeDTO[], { path: string }>(\n  `${HDF5_SLICE_NAME}/getHDF5Tree`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getHDF5TreeApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\n\nimport { alpha, useTheme } from '@mui/material/styles'\nimport Dialog from '@mui/material/Dialog'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectHDF5InputNodeSelectedFilePath,\n  selectInputNodeDefined,\n  selectInputNodeHDF5Path,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeHDF5Path } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectHDF5IsLoading,\n  selectHDF5Nodes,\n} from 'store/slice/HDF5/HDF5Selectors'\nimport { getHDF5Tree } from 'store/slice/HDF5/HDF5Action'\nimport { HDF5TreeNodeType } from 'store/slice/HDF5/HDF5Type'\nimport { Typography } from '@mui/material'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const HDF5FileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <HDF5FileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst HDF5FileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.HDF5}\n        filePath={filePath ?? ''}\n      />\n      {filePath !== undefined && <ItemSelect nodeId={nodeId} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'hdf5', 'HDF5Data')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nconst ItemSelect = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [open, setOpen] = React.useState(false)\n\n  const structureFileName = useSelector(selectInputNodeHDF5Path(nodeId))\n\n  return (\n    <>\n      <Button variant=\"outlined\" size=\"small\" onClick={() => setOpen(true)}>\n        {'Structure'}\n      </Button>\n      <Typography className=\"selectFilePath\" variant=\"caption\">\n        {!!structureFileName ? structureFileName : 'No structure is selected.'}\n      </Typography>\n\n      <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\n        <DialogTitle>{'Select File'}</DialogTitle>\n        <Structure nodeId={nodeId} />\n        <DialogActions>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"inherit\"\n            variant=\"outlined\"\n          >\n            cancel\n          </Button>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"primary\"\n            variant=\"outlined\"\n            autoFocus\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst Structure = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const theme = useTheme()\n  return (\n    <DialogContent dividers>\n      <div\n        style={{\n          height: 300,\n          overflow: 'auto',\n          marginBottom: theme.spacing(1),\n          border: '1px solid',\n          padding: theme.spacing(1),\n          borderColor: theme.palette.divider,\n        }}\n      >\n        <FileTreeView nodeId={nodeId} />\n      </div>\n    </DialogContent>\n  )\n})\n\nconst FileTreeView = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [tree, isLoading] = useHDF5Tree(nodeId)\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView>\n        {tree?.map((node) => (\n          <TreeNode node={node} nodeId={nodeId} />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: HDF5TreeNodeType\n  nodeId: string\n}>(({ node, nodeId }) => {\n  const dispatch = useDispatch()\n\n  const onClickFile = (path: string) => {\n    dispatch(setInputNodeHDF5Path({ nodeId, path }))\n  }\n\n  if (node.isDir) {\n    // Directory\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={node.name}\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode node={childNode} key={i} nodeId={nodeId} />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    // File\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={node.name + `   (shape=${node.shape}, nbytes=${node.nbytes})`}\n        onClick={() => onClickFile(node.path)}\n      />\n    )\n  }\n})\n\nfunction useHDF5Tree(\n  nodeId: string,\n): [HDF5TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectHDF5Nodes())\n  const isLoading = useSelector(selectHDF5IsLoading())\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  React.useEffect(() => {\n    if (!isLoading && filePath) {\n      dispatch(getHDF5Tree({ path: filePath }))\n    }\n  }, [isLoading, filePath, dispatch])\n  return [tree, isLoading]\n}\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const FluoFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <FluoFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst FluoFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n  const returnType = 'FluoData'\n  const fluoColor = useHandleColor(returnType)\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'fluo', returnType)}\n        style={{\n          ...sourceHandleStyle,\n          background: fluoColor,\n        }}\n      />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const BehaviorFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <BehaviorFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst BehaviorFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n    const onChangeFilePath = (path: string) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n    const theme = useTheme()\n    const returnType = 'BehaviorData'\n    const behaviorColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '230px',\n          background: selected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          onChangeFilePath={(path) => {\n            if (!Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.CSV}\n          filePath={filePath ?? ''}\n        />\n        {!!filePath && (\n          <ParamSettingDialog nodeId={nodeId} filePath={filePath} />\n        )}\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'behavior', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: behaviorColor,\n          }}\n        />\n      </div>\n    )\n  },\n)\n","import { ImageFileNode } from 'components/FlowChart/FlowChartNode/ImageFileNode'\nimport { AlgorithmNode } from 'components/FlowChart/FlowChartNode/AlgorithmNode'\nimport { CsvFileNode } from 'components/FlowChart/FlowChartNode/CsvFileNode'\nimport { HDF5FileNode } from 'components/FlowChart/FlowChartNode/HDF5FileNode'\nimport { FluoFileNode } from 'components/FlowChart/FlowChartNode/FluoFileNode'\nimport { BehaviorFileNode } from 'components/FlowChart/FlowChartNode/BehaviorFileNode'\n\nimport { CustomEdge } from 'components/FlowChart/CustomEdge'\n\nexport const reactFlowNodeTypes = {\n  ImageFileNode,\n  CsvFileNode,\n  HDF5FileNode,\n  AlgorithmNode,\n  FluoFileNode,\n  BehaviorFileNode,\n} as const\n\nexport const reactFlowEdgeTypes = {\n  buttonedge: CustomEdge,\n} as const\n","import { useDispatch } from 'react-redux'\nimport {\n  EdgeProps,\n  getBezierPath,\n  getMarkerEnd,\n  getEdgeCenter,\n} from 'react-flow-renderer'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport 'style/flowbutton.css'\n\nconst foreignObjectSize = 40\n\nexport const CustomEdge: React.FC<EdgeProps> = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  arrowHeadType,\n  markerEndId,\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  })\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId)\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  })\n\n  const dispatch = useDispatch()\n\n  const onEdgeClick = () => {\n    dispatch(deleteFlowElementsById(id))\n  }\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <foreignObject\n        width={foreignObjectSize}\n        height={foreignObjectSize}\n        x={edgeCenterX - foreignObjectSize / 2}\n        y={edgeCenterY - foreignObjectSize / 2}\n        className=\"edgebutton-foreignobject\"\n      >\n        <button className=\"flowbutton\" onClick={onEdgeClick}>\n          ×\n        </button>\n      </foreignObject>\n    </>\n  )\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { ThunkApiConfig } from 'store/store'\nimport { getTimeSeriesDataById } from '../DisplayData/DisplayDataActions'\nimport { selectRoiData } from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport { selectVisualizeItems } from './VisualizeItemSelectors'\nimport { VISUALIZE_ITEM_SLICE_NAME } from './VisualizeItemType'\nimport { isImageItem, isTimeSeriesItem } from './VisualizeItemUtils'\n\nexport const setImageItemClikedDataId = createAsyncThunk<\n  void,\n  { itemId: number; clickedDataId: string },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setImageItemClikedDataId`,\n  ({ itemId, clickedDataId }, thunkAPI) => {\n    const items = selectVisualizeItems(thunkAPI.getState())\n    Object.values(items).forEach((item) => {\n      if (\n        isTimeSeriesItem(item) &&\n        item.filePath != null &&\n        item.refImageItemId === itemId &&\n        !item.drawOrderList.includes(clickedDataId)\n      ) {\n        thunkAPI.dispatch(\n          getTimeSeriesDataById({ path: item.filePath, index: clickedDataId }),\n        )\n      }\n    })\n  },\n)\n\nexport const selectingImageArea = createAsyncThunk<\n  string[],\n  {\n    itemId: number\n    range: {\n      x: number[]\n      y: number[]\n    }\n  },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/selectingImageArea`,\n  ({ itemId, range }, thunkAPI) => {\n    const { x, y } = range\n    const [x1, x2] = x.map(Math.round)\n    const [y1, y2] = y.map(Math.round)\n    const selectedZList: string[] = []\n    const items = selectVisualizeItems(thunkAPI.getState())\n    const imageItem = items[itemId]\n    if (isImageItem(imageItem) && imageItem.roiItem != null) {\n      const roiFilePath = imageItem.roiItem.filePath\n      if (roiFilePath != null) {\n        const roiData = selectRoiData(roiFilePath)(thunkAPI.getState())\n        for (let x = x1; x <= x2; x++) {\n          for (let y = y1; y <= y2; y++) {\n            const z = roiData[y][x]\n            if (z != null) {\n              const zNum = String(z) // indexとidのずれを回避\n              if (!selectedZList.includes(zNum)) {\n                selectedZList.push(zNum)\n              }\n            }\n          }\n        }\n        Object.values(items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            const path = item.filePath\n            selectedZList.forEach((selectedZ) => {\n              thunkAPI.dispatch(\n                getTimeSeriesDataById({\n                  path,\n                  index: String(selectedZ),\n                }),\n              )\n            })\n          }\n        })\n      }\n    }\n    return selectedZList\n  },\n)\n\ntype DeleteOption =\n  | {\n      deleteData: true\n      dataType: DATA_TYPE\n      filePath: string\n    }\n  | { deleteData: false }\n\ntype DeleteDisplayItemArgs = {\n  itemId: number\n} & DeleteOption\n\nexport const deleteDisplayItem = createAction<DeleteDisplayItemArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/deleteDisplayItem`,\n)\n\ntype SetNewDisplayDataPathArgs = {\n  itemId: number\n  filePath: string\n  nodeId: string | null\n  dataType?: DATA_TYPE\n} & (\n  | {\n      deleteData: true\n      prevFilePath: string\n      prevDataType: DATA_TYPE\n    }\n  | { deleteData: false }\n)\n\nexport const setNewDisplayDataPath = createAction<SetNewDisplayDataPathArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setNewDisplayDataPath`,\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  deleteDisplayItem,\n  selectingImageArea,\n  setImageItemClikedDataId,\n  setNewDisplayDataPath,\n} from './VisualizeItemActions'\n\nimport {\n  HeatMapItem,\n  ImageItem,\n  CsvItem,\n  TimeSeriesItem,\n  RoiItem,\n  ScatterItem,\n  VisualaizeItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  BarItem,\n  HDF5Item,\n  HTMLItem,\n  FluoItem,\n  BehaviorItem,\n  VISUALIZE_ITEM_SLICE_NAME,\n} from './VisualizeItemType'\nimport {\n  isDisplayDataItem,\n  isHeatMapItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const initialState: VisualaizeItem = {\n  items: {},\n  selectedItemId: null,\n  layout: [],\n}\nconst displayDataCommonInitialValue = {\n  itemType: VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA,\n  filePath: null,\n  nodeId: null,\n  width: 500,\n  height: 500,\n  isWorkflowDialog: false,\n  saveFileName: 'newPlot',\n  saveFormat: 'png',\n}\nconst imageItemInitialValue: ImageItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.IMAGE,\n  startIndex: 1,\n  endIndex: 10,\n  showticklabels: false,\n  showline: true,\n  zsmooth: 'best',\n  showgrid: false,\n  showscale: false,\n  colors: [\n    { rgb: `rgb(0, 0, 0)`, offset: '0' },\n    { rgb: `rgb(255, 255, 255)`, offset: '1.0' },\n  ],\n  activeIndex: 0,\n  alpha: 1.0,\n  roiItem: null,\n  roiAlpha: 1.0,\n  duration: 500,\n}\nconst timeSeriesItemInitialValue: TimeSeriesItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.TIME_SERIES,\n  offset: true,\n  span: 5,\n  showgrid: true,\n  showline: true,\n  showticklabels: true,\n  zeroline: false,\n  xrange: {\n    left: undefined,\n    right: undefined,\n  },\n  maxIndex: 0,\n  drawOrderList: [],\n  refImageItemId: null,\n}\nconst heatMapItemInitialValue: HeatMapItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HEAT_MAP,\n  showscale: true,\n  colors: [\n    { rgb: `rgb(0, 0, 255)`, offset: '0' },\n    { rgb: `rgb(200, 200, 200)`, offset: '0.5' },\n    { rgb: `rgb(255, 0, 0)`, offset: '1.0' },\n  ],\n}\nconst csvItemInitialValue: CsvItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.CSV,\n  setHeader: null,\n  setIndex: false,\n  transpose: false,\n}\nconst roiItemInitialValue: RoiItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.ROI,\n}\nconst scatterItemInitialValue: ScatterItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.SCATTER,\n  xIndex: '0',\n  yIndex: '1',\n}\nconst barItemInitialValue: BarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BAR,\n  index: '0',\n}\nconst hdf5ItemInitialValue: HDF5Item = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HDF5,\n}\nconst htmlItemInitialValue: HTMLItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HTML,\n}\nconst fluoItemInitialValue: FluoItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.FLUO,\n}\nconst behaviorItemInitialValue: BehaviorItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BEHAVIOR,\n}\n\nfunction getDisplayDataItemInitialValue(dataType: DATA_TYPE) {\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return imageItemInitialValue\n    case DATA_TYPE_SET.HEAT_MAP:\n      return heatMapItemInitialValue\n    case DATA_TYPE_SET.TIME_SERIES:\n      return timeSeriesItemInitialValue\n    case DATA_TYPE_SET.CSV:\n      return csvItemInitialValue\n    case DATA_TYPE_SET.ROI:\n      return roiItemInitialValue\n    case DATA_TYPE_SET.SCATTER:\n      return scatterItemInitialValue\n    case DATA_TYPE_SET.BAR:\n      return barItemInitialValue\n    case DATA_TYPE_SET.HDF5:\n      return hdf5ItemInitialValue\n    case DATA_TYPE_SET.HTML:\n      return htmlItemInitialValue\n    case DATA_TYPE_SET.FLUO:\n      return fluoItemInitialValue\n    case DATA_TYPE_SET.BEHAVIOR:\n      return behaviorItemInitialValue\n  }\n}\n\nexport const visualaizeItemSlice = createSlice({\n  name: VISUALIZE_ITEM_SLICE_NAME,\n  initialState,\n  reducers: {\n    pushInitialItemToNewRow: (state) => {\n      const newItemId = addInitialItemFn(state)\n      state.layout.push([newItemId])\n    },\n    insertInitialItemToNextColumn: (state, action: PayloadAction<number>) => {\n      const newItemId = addInitialItemFn(state)\n      const targetItemId = action.payload\n      const targetRowIndex = state.layout.findIndex((row) =>\n        row.includes(targetItemId),\n      )\n      const targetColumnIndex =\n        state.layout[targetRowIndex].indexOf(targetItemId)\n      state.layout[targetRowIndex].splice(targetColumnIndex + 1, 0, newItemId)\n    },\n    addItemForWorkflowDialog: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        filePath: string\n        dataType: DATA_TYPE\n      }>,\n    ) => {\n      const { nodeId, filePath, dataType } = action.payload\n      const maxId = getMaxItemId(state)\n      const newItemId = maxId != null ? maxId + 1 : 0\n      state.items[newItemId] = {\n        ...getDisplayDataItemInitialValue(dataType),\n        isWorkflowDialog: true,\n        nodeId,\n        filePath,\n      }\n    },\n    deleteAllItemForWorkflowDialog: (state) => {\n      const targetItemIdList = Object.entries(state.items)\n        .filter(([itemId, value]) => value.isWorkflowDialog)\n        .map(([itemId, value]) => Number(itemId))\n      targetItemIdList.forEach(\n        (targetItemId) => delete state.items[targetItemId],\n      )\n    },\n    setItemSize: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        width: number\n        height: number\n      }>,\n    ) => {\n      const { itemId, width, height } = action.payload\n      const targetItem = state.items[itemId]\n      targetItem.width = width\n      targetItem.height = height\n    },\n    selectItem: (state, action: PayloadAction<number>) => {\n      state.selectedItemId = action.payload\n    },\n    reset: (state) => {\n      state.items = initialState.items\n      state.layout = initialState.layout\n      state.selectedItemId = initialState.selectedItemId\n    },\n    setRoiItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n        outputKey?: string\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId, outputKey } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        Object.values(state.items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            item.drawOrderList = []\n          }\n        })\n\n        if (targetItem.roiItem != null) {\n          targetItem.roiItem.filePath = filePath\n          targetItem.roiItem.nodeId = nodeId\n          targetItem.roiItem.outputKey = outputKey\n        } else {\n          targetItem.roiItem = {\n            ...roiItemInitialValue,\n            filePath,\n            nodeId,\n            outputKey,\n          }\n        }\n      }\n    },\n    setFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isDisplayDataItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      } else {\n        throw new Error('error')\n      }\n    },\n    setSaveFormat: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFormat: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFormat = action.payload.saveFormat\n    },\n    setSaveFileName: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFileName: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFileName = action.payload.saveFileName\n    },\n    setImageItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setTimeSeriesItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setHeatMapItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    resetImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex?: number\n        endIndex?: number\n      }>,\n    ) => {\n      resetImageActiveIndexFn(state, action.payload)\n    },\n    incrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex++\n      }\n    },\n    decrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex--\n      }\n    },\n    setImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        activeIndex: number\n      }>,\n    ) => {\n      const { itemId, activeIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex = activeIndex\n      }\n    },\n    setImageItemShowticklabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setImageItemZsmooth: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zsmooth: string | boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.zsmooth = action.payload.zsmooth\n      }\n    },\n    setImageItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setImageItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setImageItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setImageItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setImageItemStartIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.startIndex = action.payload.startIndex\n      }\n    },\n    setImageItemEndIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        endIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.endIndex = action.payload.endIndex\n      }\n    },\n    setImageItemAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        alpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.alpha = action.payload.alpha\n      }\n    },\n    setImageItemRoiAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        roiAlpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.roiAlpha = action.payload.roiAlpha\n      }\n    },\n    setImageItemDuration: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        duration: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.duration = action.payload.duration\n      }\n    },\n    setTimeSeriesItemOffset: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        offset: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.offset = action.payload.offset\n      }\n    },\n    setTimeSeriesItemSpan: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        span: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.span = action.payload.span\n      }\n    },\n    setTimeSeriesItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setTimeSeriesItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setTimeSeriesItemShowTickLabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setTimeSeriesItemZeroLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zeroline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.zeroline = action.payload.zeroline\n      }\n    },\n    setTimeSeriesItemXrangeLeft: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        left: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.left = action.payload.left\n      }\n    },\n    setTimeSeriesItemXrangeRight: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        right: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.right = action.payload.right\n      }\n    },\n    setTimeSeriesItemDrawOrderList: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        drawOrderList: string[]\n      }>,\n    ) => {\n      const { itemId, drawOrderList } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.drawOrderList = drawOrderList\n      }\n    },\n    resetAllOrderList: (state) => {\n      Object.keys(state.items).forEach((id: any) => {\n        const targetItem = state.items[id]\n        if (isTimeSeriesItem(targetItem)) {\n          targetItem.drawOrderList = []\n        }\n      })\n    },\n    setTimeSeriesItemMaxIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        maxIndex: number\n      }>,\n    ) => {\n      const { itemId, maxIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.maxIndex = maxIndex\n      }\n    },\n    setTimeSeriesRefImageItemId: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        refImageItemId: number | null\n      }>,\n    ) => {\n      const { itemId, refImageItemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.refImageItemId = refImageItemId ?? null\n        targetItem.drawOrderList = []\n      }\n    },\n    setHeatMapItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setHeatMapItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setCsvItemTranspose: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        transpose: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.transpose = action.payload.transpose\n      }\n    },\n    setCsvItemSetHeader: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setHeader: number | null\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setHeader = action.payload.setHeader\n      }\n    },\n    setCsvItemSetIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setIndex: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setIndex = action.payload.setIndex\n      }\n    },\n    setScatterItemXIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        xIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.xIndex = action.payload.xIndex\n      }\n    },\n    setScatterItemYIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        yIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.yIndex = action.payload.yIndex\n      }\n    },\n    setBarItemIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        index: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isBarItem(targetItem)) {\n        targetItem.index = action.payload.index\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        const itemId = action.payload.itemId\n\n        if (isImageItem(state.items[itemId])) {\n          Object.values(state.items).forEach((item) => {\n            if (isTimeSeriesItem(item) && item.refImageItemId === itemId) {\n              item.refImageItemId = null\n            }\n          })\n        }\n\n        delete state.items[itemId]\n        if (itemId === state.selectedItemId) {\n          state.selectedItemId = null\n        }\n        state.layout.forEach((row, i) => {\n          const index = row.indexOf(itemId)\n          if (index !== -1) {\n            row.splice(index, 1)\n          }\n          if (row.length === 0) {\n            state.layout.splice(i, 1)\n          }\n        })\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        const { itemId, filePath, nodeId, dataType } = action.payload\n        const targetItem = state.items[itemId]\n        if (isDisplayDataItem(targetItem)) {\n          if (dataType != null) {\n            state.items[itemId] = {\n              ...getDisplayDataItemInitialValue(dataType),\n              width: targetItem.width,\n              height: targetItem.height,\n              filePath,\n              nodeId,\n            }\n          } else {\n            targetItem.filePath = filePath\n            targetItem.nodeId = nodeId\n          }\n        } else {\n          throw new Error('invalid VisualaizeItemType')\n        }\n        resetImageActiveIndexFn(state, { itemId })\n      })\n      .addCase(setImageItemClikedDataId.fulfilled, (state, action) => {\n        const { itemId: imageItemId, clickedDataId } = action.meta.arg\n        const targetItem = state.items[imageItemId]\n        if (isImageItem(targetItem)) {\n          targetItem.clickedDataId = clickedDataId\n        }\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId &&\n              !item.drawOrderList.includes(clickedDataId)\n            ) {\n              item.drawOrderList.push(clickedDataId)\n            }\n          }\n        })\n      })\n      .addCase(selectingImageArea.fulfilled, (state, action) => {\n        const { itemId: imageItemId } = action.meta.arg\n        const selectedZList = action.payload\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId\n            ) {\n              item.drawOrderList = selectedZList\n            }\n          }\n        })\n      })\n  },\n})\n\nfunction getMaxItemId(state: VisualaizeItem) {\n  const idList = Object.keys(state.items).map((key) => Number(key))\n  const maxId =\n    idList.length > 0 ? idList.reduce((a, b) => Math.max(a, b)) : null\n  return maxId\n}\n\nfunction addInitialItemFn(state: VisualaizeItem) {\n  const maxId = getMaxItemId(state)\n  const nextId = maxId != null ? maxId + 1 : 0\n  state.items[nextId] = getDisplayDataItemInitialValue(DATA_TYPE_SET.IMAGE)\n  state.selectedItemId = nextId\n  return nextId\n}\n\nfunction resetImageActiveIndexFn(\n  state: VisualaizeItem,\n  args: {\n    itemId: number\n  },\n) {\n  const { itemId } = args\n  const targetItem = state.items[itemId]\n  if (isImageItem(targetItem)) {\n    targetItem.activeIndex = 0\n  }\n}\n\nexport const {\n  pushInitialItemToNewRow,\n  insertInitialItemToNextColumn,\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n  setItemSize,\n  selectItem,\n  setFilePath,\n  setSaveFormat,\n  setSaveFileName,\n  setHeatMapItemFilePath,\n  setImageItemFilePath,\n  setTimeSeriesItemFilePath,\n  setRoiItemFilePath,\n  resetImageActiveIndex,\n  incrementImageActiveIndex,\n  decrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowLine,\n  setImageItemShowGrid,\n  setImageItemShowScale,\n  setImageItemColors,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemAlpha,\n  setImageItemRoiAlpha,\n  setImageItemDuration,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemDrawOrderList,\n  setTimeSeriesItemMaxIndex,\n  setTimeSeriesRefImageItemId,\n  setHeatMapItemShowScale,\n  setHeatMapItemColors,\n  setCsvItemTranspose,\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n  setBarItemIndex,\n  resetAllOrderList,\n  reset,\n} = visualaizeItemSlice.actions\n\nexport default visualaizeItemSlice.reducer\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectHeatMapColumns,\n  selectHeatMapData,\n  selectHeatMapDataError,\n  selectHeatMapDataIsFulfilled,\n  selectHeatMapDataIsInitialized,\n  selectHeatMapDataIsPending,\n  selectHeatMapIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHeatMapData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const HeatMapPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHeatMapDataIsPending(path))\n  const isInitialized = useSelector(selectHeatMapDataIsInitialized(path))\n  const error = useSelector(selectHeatMapDataError(path))\n  const isFulfilled = useSelector(selectHeatMapDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHeatMapData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HeatMapImple />\n  } else {\n    return null\n  }\n})\n\nconst HeatMapImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const heatMapData = useSelector(selectHeatMapData(path), heatMapDataEqualtyFn)\n  const columns = useSelector(selectHeatMapColumns(path))\n  const index = useSelector(selectHeatMapIndex(path))\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const colorscale = useSelector(selectHeatMapItemColors(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      heatMapData != null\n        ? [\n            {\n              z: heatMapData,\n              x: columns,\n              y: index,\n              type: 'heatmap',\n              name: 'heatmap',\n              colorscale: colorscale.map((value) => {\n                let offset: number = parseFloat(value.offset)\n                const offsets: number[] = colorscale.map((v) => {\n                  return parseFloat(v.offset)\n                })\n                // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n                if (offset === Math.max(...offsets)) {\n                  offset = 1.0\n                }\n                if (offset === Math.min(...offsets)) {\n                  offset = 0.0\n                }\n                return [offset, value.rgb]\n              }),\n              hoverongaps: false,\n              showlegend: true,\n              showscale: showscale,\n            },\n          ]\n        : [],\n    [heatMapData, showscale, colorscale, columns, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction heatMapDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, {\n  useCallback,\n  useEffect,\n  useState,\n  MouseEvent,\n  useRef,\n} from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from 'store/store'\nimport { Datum, LayoutAxis, PlotData, PlotSelectionEvent } from 'plotly.js'\nimport createColormap from 'colormap'\nimport { Button, LinearProgress, TextField, Typography } from '@mui/material'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport Slider from '@mui/material/Slider'\nimport Box from '@mui/material/Box'\nimport { styled } from '@mui/material/styles'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport { DisplayDataContext } from '../DataContext'\n\nimport {\n  selectImageDataError,\n  selectImageDataIsInitialized,\n  selectImageDataIsPending,\n  selectImageDataIsFulfilled,\n  selectActiveImageData,\n  selectRoiData,\n  selectImageDataMaxSize,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getImageData,\n  getRoiData,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowLine,\n  selectImageItemShowGrid,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemActiveIndex,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectRoiItemFilePath,\n  selectRoiItemIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemDuration,\n  selectVisualizeItemWidth,\n  selectVisualizeItemHeight,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  incrementImageActiveIndex,\n  resetAllOrderList,\n  setImageActiveIndex,\n  setImageItemDuration,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  selectingImageArea,\n  setImageItemClikedDataId,\n} from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { addRoiApi, deleteRoiApi, mergeRoiApi } from 'api/outputs/Outputs'\nimport { isTimeSeriesItem } from 'store/slice/VisualizeItem/VisualizeItemUtils'\n\ninterface PointClick {\n  x: number\n  y: number\n  z: number\n}\n\nconst WIDTH_CHARTJS = 321\nconst INIT_WIDTH_ROI = 30\n\nconst initSizeDrag = {\n  width: INIT_WIDTH_ROI,\n  height: INIT_WIDTH_ROI,\n  left: Math.floor((WIDTH_CHARTJS - INIT_WIDTH_ROI) / 2),\n  top: Math.floor((WIDTH_CHARTJS - INIT_WIDTH_ROI) / 2),\n}\n\nenum PositionDrag {\n  'LEFT' = 'LEFT',\n  'RIGHT' = 'RIGHT',\n  'BOTTOM' = 'BOTTOM',\n  'TOP' = 'TOP',\n}\n\nconst sChart = 320\n\nexport const ImagePlot = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const isPending = useSelector(selectImageDataIsPending(path))\n  const isInitialized = useSelector(selectImageDataIsInitialized(path))\n  const isFulfilled = useSelector(selectImageDataIsFulfilled(path))\n  const error = useSelector(selectImageDataError(path))\n\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(\n        getImageData({\n          path,\n          startIndex: startIndex ?? 1,\n          endIndex: endIndex ?? 10,\n        }),\n      )\n    }\n    if (roiFilePath != null) {\n      dispatch(getRoiData({ path: roiFilePath }))\n    }\n  }, [dispatch, isInitialized, path, startIndex, endIndex, roiFilePath])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ImagePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ImagePlotImple = React.memo(() => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const activeIndex = useSelector(selectImageItemActiveIndex(itemId))\n  return <ImagePlotChart activeIndex={activeIndex} />\n})\n\nconst ImagePlotChart = React.memo<{\n  activeIndex: number\n}>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(\n    selectActiveImageData(path, activeIndex),\n    imageDataEqualtyFn,\n  )\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const roiData = useSelector(\n    (state: RootState) =>\n      roiFilePath != null ? selectRoiData(roiFilePath)(state) : [],\n    imageDataEqualtyFn,\n  )\n\n  const [isAddRoi, setIsAddRoi] = useState(false)\n\n  const [roiDataState, setRoiDataState] = useState(roiData)\n\n  const [pointClick, setPointClick] = useState<PointClick[]>([])\n\n  const itemsVisual = useSelector((state: any) => state.visualaizeItem?.items)\n\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const colorscale = useSelector(selectImageItemColors(itemId))\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const timeDataMaxIndex = useSelector(selectRoiItemIndex(itemId, roiFilePath))\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const [sizeDrag, setSizeDrag] = useState(initSizeDrag)\n\n  const [startDragAddRoi, setStartDragAddRoi] = useState(false)\n  const [positionDrag, setChangeSize] = useState<PositionDrag | undefined>()\n\n  const outputKey: string = useSelector(\n    (state: any) => state.visualaizeItem?.items[itemId]?.roiItem?.outputKey,\n  )\n\n  const refPageXSize = useRef(0)\n  const refPageYSize = useRef(0)\n\n  const colorscaleRoi = createColormap({\n    colormap: 'jet',\n    nshades: 100, //timeDataMaxIndex >= 6 ? timeDataMaxIndex : 6,\n    format: 'rgba',\n    alpha: 1.0,\n  })\n\n  useEffect(() => {\n    setRoiDataState(roiData)\n  }, [roiData])\n\n  useEffect(() => {\n    onCancel()\n    onCancelAdd()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [outputKey])\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'images',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          const rgb = value.rgb\n            .replace(/[^0-9,]/g, '')\n            .split(',')\n            .map((x) => Number(x))\n          const hex = rgba2hex(rgb, alpha)\n          return [offset, hex]\n        }),\n        hoverinfo: 'none',\n        hoverongaps: false,\n        showscale: showscale,\n        zsmooth: zsmooth, // ['best', 'fast', false]\n      },\n      {\n        z: roiDataState,\n        type: 'heatmap',\n        name: 'roi',\n        hoverinfo: 'none',\n        colorscale: [...Array(timeDataMaxIndex)].map((_, i) => {\n          const new_i = Math.floor(((i % 10) * 10 + i / 10) % 100)\n          const offset: number = i / (timeDataMaxIndex - 1)\n          const rgba = colorscaleRoi[new_i]\n          const hex = rgba2hex(rgba, roiAlpha)\n          return [offset, hex]\n        }),\n        zmin: 0,\n        zmax: timeDataMaxIndex,\n        hoverongaps: false,\n        zsmooth: false,\n        showscale: false,\n      },\n    ],\n    [\n      imageData,\n      roiDataState,\n      zsmooth,\n      showscale,\n      colorscale,\n      colorscaleRoi,\n      timeDataMaxIndex,\n      roiAlpha,\n      alpha,\n    ],\n  )\n\n  const [selectMode, setSelectMode] = React.useState(false)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectMode(event.target.checked)\n  }\n  // debounceでイベントを間引きする。onSelectedはそれっぽい名前だが動かなかった。\n  const onSelecting = debounce((event: PlotSelectionEvent) => {\n    if (event.range != null) {\n      dispatch(selectingImageArea({ itemId, range: event.range }))\n    }\n  })\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 130,\n      margin: {\n        t: 30, // top\n        l: 100, // left\n        b: 20, // bottom\n      },\n      dragmode: selectMode ? 'select' : 'pan',\n      xaxis: {\n        autorange: true,\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n        showticklabels: showticklabels,\n      },\n      yaxis: {\n        automargin: true,\n        autorange: 'reversed',\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n        showticklabels: showticklabels, // todo\n      },\n    }),\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n    [showgrid, showline, showticklabels, width, height, selectMode, isAddRoi],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n      // scale: number;\n      // format: 'png' | 'svg' | 'jpeg' | 'webp';\n      // height: number;\n      // width: number;\n    },\n  }\n\n  const onClick = (event: any) => {\n    const point: PlotDatum = event.points[0]\n    if (point.curveNumber >= 1 && outputKey === 'cell_roi') {\n      setSelectRoi({\n        x: Number(point.x),\n        y: Number(point.y),\n        z: Number(point.z),\n      })\n    }\n    if (point.curveNumber >= 1 && point.z > 0) {\n      dispatch(\n        setImageItemClikedDataId({\n          itemId,\n          clickedDataId: point.z.toString(),\n        }),\n      )\n    }\n  }\n\n  const setSelectRoi = (point: PointClick) => {\n    if (!point.z) return\n    const newPoints = [...pointClick, point]\n    const newRoi = roiDataState.map((roi) => {\n      return roi.map((element) => {\n        if (newPoints.some((p) => p.z === element)) {\n          return 0\n        }\n        return element\n      })\n    })\n    setPointClick([...pointClick, point])\n    setRoiDataState(newRoi)\n  }\n\n  const onCancel = () => {\n    setPointClick([])\n    setRoiDataState(roiData)\n  }\n\n  const addRoi = () => {\n    setIsAddRoi(true)\n  }\n\n  const onCancelAdd = () => {\n    setIsAddRoi(false)\n    setSizeDrag(initSizeDrag)\n    setChangeSize(undefined)\n  }\n\n  const onMouseDownDragAddRoi = () => {\n    setStartDragAddRoi(true)\n  }\n\n  const onMouseUpDragAddRoi = () => {\n    setStartDragAddRoi(false)\n    setChangeSize(undefined)\n  }\n\n  const onMouseDownSize = (position: PositionDrag, event: MouseEvent) => {\n    setChangeSize(position)\n    refPageXSize.current = event.pageX\n    refPageYSize.current = event.pageY\n  }\n\n  const onMouseMoveAddRoi = (event: MouseEvent<HTMLDivElement>) => {\n    const { pageX, pageY } = event\n    let newSizeDrag\n    if (startDragAddRoi) {\n      const { y } = (event.currentTarget as any).getBoundingClientRect()\n      let newX = sizeDrag.left + (pageX - refPageXSize.current)\n      let newY = Math.ceil(pageY - y - 15) - window.scrollY\n\n      if (newX < 0) newX = 0\n      else if (newX + sizeDrag.width > sChart) newX = sChart - sizeDrag.width\n      if (newY < 0) newY = 0\n      else if (newY + sizeDrag.height > sChart) newY = sChart - sizeDrag.height\n      newSizeDrag = { ...sizeDrag, left: newX, top: newY }\n    } else if (positionDrag === PositionDrag.LEFT) {\n      const newWidth = sizeDrag.width - (pageX - refPageXSize.current)\n      const newLeft = sizeDrag.left + (pageX - refPageXSize.current)\n      if (newWidth < 10 || newLeft < 1) return\n      newSizeDrag = { ...sizeDrag, width: newWidth, left: newLeft }\n    } else if (positionDrag === PositionDrag.RIGHT) {\n      const newWidth = sizeDrag.width + (pageX - refPageXSize.current)\n      if (newWidth < 10 || newWidth > sChart - sizeDrag.left) return\n      newSizeDrag = { ...sizeDrag, width: newWidth }\n    } else if (positionDrag === PositionDrag.BOTTOM) {\n      const newHeight = sizeDrag.height + (pageY - refPageYSize.current)\n      if (newHeight < 10 || newHeight > sChart - sizeDrag.top) return\n      newSizeDrag = { ...sizeDrag, height: newHeight }\n    } else if (positionDrag === PositionDrag.TOP) {\n      const newHeight = sizeDrag.height - (pageY - refPageYSize.current)\n      const newTop = sizeDrag.top + (pageY - refPageYSize.current)\n      if (newHeight < 10 || newTop < 1) return\n      newSizeDrag = { ...sizeDrag, height: newHeight, top: newTop }\n    }\n    if (newSizeDrag) setSizeDrag({ ...sizeDrag, ...newSizeDrag })\n    refPageXSize.current = pageX\n    refPageYSize.current = pageY\n  }\n\n  const addRoiSubmit = async () => {\n    if (!roiFilePath) return\n    const sizeX = roiDataState[0].length - 1\n    const sizeY = roiDataState.length - 1\n    const xAdd = Number(((sizeDrag.width + 2) / (sChart / sizeX)).toFixed(1))\n    const yAdd = Number(((sizeDrag.height + 2) / (sChart / sizeY)).toFixed(1))\n    const x = Number((sizeDrag.left / (sChart / sizeX)).toFixed(1))\n    const y = Number((sizeDrag.top / (sChart / sizeY)).toFixed(1))\n\n    const pointCenter = {\n      posx: x + Math.floor(xAdd / 2),\n      posy: y + Math.floor(yAdd / 2),\n      sizex: xAdd,\n      sizey: yAdd,\n    }\n    dispatch(resetAllOrderList())\n    try {\n      await addRoiApi(roiFilePath, pointCenter)\n    } catch {}\n    onCancelAdd()\n    dispatch(getRoiData({ path: roiFilePath }))\n    resetTimeSeries()\n  }\n\n  const onMergeRoi = async () => {\n    if (!roiFilePath) return\n    dispatch(resetAllOrderList())\n    try {\n      await mergeRoiApi(roiFilePath, {\n        ids: pointClick.map((point) => point.z - 1),\n      })\n    } catch {}\n    onCancel()\n    dispatch(getRoiData({ path: roiFilePath }))\n    resetTimeSeries()\n  }\n\n  const onDeleteRoi = async () => {\n    if (!roiFilePath) return\n    dispatch(resetAllOrderList())\n    try {\n      await deleteRoiApi(roiFilePath, {\n        ids: pointClick.map((point) => point.z - 1),\n      })\n    } catch {}\n    onCancel()\n    dispatch(getRoiData({ path: roiFilePath }))\n    resetTimeSeries()\n  }\n\n  const resetTimeSeries = () => {\n    if (itemsVisual) {\n      Object.keys(itemsVisual).forEach((item) => {\n        if (isTimeSeriesItem(itemsVisual[item])) {\n          dispatch(\n            getTimeSeriesInitData({\n              path: itemsVisual[item].filePath,\n              itemId: Number(item),\n            }),\n          )\n        }\n      })\n    }\n  }\n\n  const renderActionRoi = () => {\n    if (!roiDataState?.length || outputKey !== 'cell_roi') return null\n    if (!isAddRoi) {\n      return <LinkDiv onClick={addRoi}>Add ROI</LinkDiv>\n    }\n    return (\n      <BoxDiv>\n        <LinkDiv onClick={addRoiSubmit}>OK</LinkDiv>\n        <LinkDiv onClick={onCancelAdd}>Cancel</LinkDiv>\n      </BoxDiv>\n    )\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, mt: 1 }}>\n          <PlayBack activeIndex={activeIndex} />\n        </Box>\n        <FormControlLabel\n          sx={{ ml: 1 }}\n          control={<Switch checked={selectMode} onChange={handleChange} />}\n          label=\"drag select\"\n        />\n      </Box>\n      <Box sx={{ minHeight: 5.5 }}>\n        {pointClick.length ? (\n          <>\n            <BoxDiv>\n              <span>ROI Selecteds: [{String(pointClick.map((e) => e.z))}]</span>\n            </BoxDiv>\n            <BoxDiv>\n              {pointClick.length >= 2 ? (\n                <LinkDiv sx={{ ml: 0 }} onClick={onMergeRoi}>\n                  Merge ROI\n                </LinkDiv>\n              ) : null}\n              <LinkDiv sx={{ color: '#F84E1B' }} onClick={onDeleteRoi}>\n                Delete ROI\n              </LinkDiv>\n              <LinkDiv onClick={onCancel}>Cancel</LinkDiv>\n            </BoxDiv>\n          </>\n        ) : (\n          renderActionRoi()\n        )}\n      </Box>\n      <div style={{ position: 'relative' }}>\n        <PlotlyChart\n          data={data}\n          layout={layout}\n          config={config}\n          onClick={onClick}\n          onSelecting={onSelecting}\n        />\n        {isAddRoi ? (\n          <DivAddRoi>\n            <DivSvg\n              onMouseLeave={onMouseUpDragAddRoi}\n              onMouseMove={onMouseMoveAddRoi}\n              onMouseUp={onMouseUpDragAddRoi}\n            >\n              <DivDrag style={sizeDrag}>\n                <DragCenter\n                  onMouseDown={onMouseDownDragAddRoi}\n                  style={{\n                    width: sizeDrag.width - 1,\n                    height: sizeDrag.height - 1,\n                    cursor: !startDragAddRoi ? 'grab' : 'grabbing',\n                  }}\n                />\n                <DragSizeLeft\n                  onMouseDown={(event) =>\n                    onMouseDownSize(PositionDrag.LEFT, event)\n                  }\n                />\n                <DragSizeRight\n                  onMouseDown={(event) => {\n                    onMouseDownSize(PositionDrag.RIGHT, event)\n                  }}\n                />\n                <DragSizeTop\n                  onMouseDown={(event) => {\n                    onMouseDownSize(PositionDrag.TOP, event)\n                  }}\n                />\n                <DragSizeBottom\n                  onMouseDown={(event) => {\n                    onMouseDownSize(PositionDrag.BOTTOM, event)\n                  }}\n                />\n              </DivDrag>\n            </DivSvg>\n          </DivAddRoi>\n        ) : null}\n      </div>\n    </div>\n  )\n})\n\nconst PlayBack = React.memo<{ activeIndex: number }>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const maxSize = useSelector(selectImageDataMaxSize(path))\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const duration = useSelector(selectImageItemDuration(itemId))\n\n  const onSliderChange = (\n    event: Event,\n    value: number | number[],\n    activeThumb: number,\n  ) => {\n    if (typeof value === 'number') {\n      const newIndex = value - startIndex\n      if (newIndex >= 0 && newIndex !== activeIndex) {\n        dispatch(setImageActiveIndex({ itemId, activeIndex: newIndex }))\n      }\n    }\n  }\n\n  const intervalRef = React.useRef<null | NodeJS.Timeout>(null)\n\n  useEffect(() => {\n    if (intervalRef.current !== null) {\n      if (activeIndex >= maxSize) {\n        clearInterval(intervalRef.current)\n        intervalRef.current = null\n      }\n    }\n  }, [activeIndex, maxSize])\n\n  const onPlayClick = useCallback(() => {\n    if (activeIndex >= maxSize) {\n      dispatch(setImageActiveIndex({ itemId, activeIndex: 0 }))\n    }\n    if (maxSize > 1 && intervalRef.current === null) {\n      intervalRef.current = setInterval(() => {\n        dispatch(incrementImageActiveIndex({ itemId }))\n      }, duration)\n    }\n  }, [activeIndex, maxSize, dispatch, duration, itemId])\n\n  const onPauseClick = () => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current)\n      intervalRef.current = null\n    }\n  }\n\n  const onDurationChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue =\n        event.target.value === '' ? '' : Number(event.target.value)\n      if (typeof newValue === 'number') {\n        dispatch(setImageItemDuration({ itemId, duration: newValue }))\n      }\n    },\n    [dispatch, itemId],\n  )\n  return (\n    <>\n      <Button sx={{ mt: 1.5 }} variant=\"outlined\" onClick={onPlayClick}>\n        Play\n      </Button>\n      <Button sx={{ mt: 1.5, ml: 1 }} variant=\"outlined\" onClick={onPauseClick}>\n        Pause\n      </Button>\n      <TextField\n        sx={{ width: 100, ml: 2 }}\n        label=\"Duration [msec]\"\n        type=\"number\"\n        inputProps={{\n          step: 100,\n          min: 0,\n          max: 1000,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onDurationChange}\n        value={duration}\n      />\n      <Slider\n        aria-label=\"Custom marks\"\n        defaultValue={20}\n        value={startIndex + activeIndex}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        marks\n        min={startIndex}\n        max={maxSize === 0 ? 0 : endIndex}\n        onChange={onSliderChange}\n      />\n    </>\n  )\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\ninterface PlotDatum {\n  curveNumber: number\n  data: PlotData\n  customdata: Datum\n  pointIndex: number\n  pointNumber: number\n  x: Datum\n  xaxis: LayoutAxis\n  y: Datum\n  yaxis: LayoutAxis\n  z: number\n}\n\nfunction rgba2hex(rgba: number[], alpha: number) {\n  const r = rgba[0]\n  const g = rgba[1]\n  const b = rgba[2]\n  const a = alpha\n\n  var outParts = [\n    r.toString(16),\n    g.toString(16),\n    b.toString(16),\n    Math.round(a * 255)\n      .toString(16)\n      .substring(0, 2),\n  ]\n\n  // Pad single-digit output values\n  outParts.forEach(function (part, i) {\n    if (part.length === 1) {\n      outParts[i] = '0' + part\n    }\n  })\n\n  return `#${outParts.join('')}`\n}\n\nfunction debounce<T extends (...args: any[]) => unknown>(\n  callback: T,\n  delay = 500,\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout\n  return (...args) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => callback(...args), delay)\n  }\n}\n\nconst BoxDiv = styled('div')({\n  mt: 1,\n  display: 'flex',\n  alignItems: 'center',\n  listStyle: 'none',\n  padding: 0,\n  margin: 0,\n})\n\nconst LinkDiv = styled('div')({\n  marginLeft: 16,\n  textDecoration: 'underline',\n  cursor: 'pointer',\n  color: '#1155cc',\n  zIndex: 999,\n  position: 'relative',\n})\n\nconst DivAddRoi = styled('div')({\n  width: '100%',\n  height: '100%',\n  position: 'absolute',\n  left: 0,\n  top: 0,\n  borderRadius: 100,\n})\n\nconst DivSvg = styled('div')({\n  width: 321,\n  height: 321,\n  marginTop: 30,\n  marginLeft: 99,\n  position: 'relative',\n})\n\nconst DivDrag = styled('div')({\n  border: '1px solid #ffffff',\n  position: 'absolute',\n  borderRadius: 100,\n})\n\nconst DragCenter = styled('div')({\n  borderRadius: 100,\n  cursor: 'grab',\n})\n\nconst DragSize = styled('div')({\n  width: 3,\n  height: 3,\n  borderRadius: 100,\n  position: 'absolute',\n  background: '#fff',\n})\n\nconst DragSizeLeft = styled(DragSize)({\n  top: `calc(50% - 1px)`,\n  left: -2,\n  cursor: 'ew-resize',\n})\n\nconst DragSizeRight = styled(DragSize)({\n  top: `calc(50% - 1px)`,\n  right: -2,\n  cursor: 'ew-resize',\n})\n\nconst DragSizeTop = styled(DragSize)({\n  top: -2,\n  right: `calc(50% - 1px)`,\n  cursor: 'ns-resize',\n})\n\nconst DragSizeBottom = styled(DragSize)({\n  bottom: -2,\n  right: `calc(50% - 1px)`,\n  cursor: 'ns-resize',\n})\n","import React from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectRoiData,\n  selectRoiDataError,\n  selectRoiDataIsFulfilled,\n  selectRoiDataIsInitialized,\n  selectRoiDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { getRoiData } from 'store/slice/DisplayData/DisplayDataActions'\nimport createColormap from 'colormap'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const RoiPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isPending = useSelector(selectRoiDataIsPending(path))\n  const isInitialized = useSelector(selectRoiDataIsInitialized(path))\n  const isFulfilled = useSelector(selectRoiDataIsFulfilled(path))\n  const error = useSelector(selectRoiDataError(path))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getRoiData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <RoiPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst RoiPlotImple = React.memo<{}>(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(selectRoiData(path), imageDataEqualtyFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscale: ColorType[] = createColormap({\n    colormap: 'jet',\n    nshades: 10,\n    format: 'hex',\n    alpha: 1,\n  }).map((v, idx) => {\n    return { rgb: v, offset: String(idx / 9) }\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'roi',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          return [offset, value.rgb]\n        }),\n        hoverongaps: false,\n        // zsmooth: zsmooth, // ['best', 'fast', false]\n        zsmooth: false,\n        showlegend: true,\n      },\n    ],\n    [imageData, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      xaxis: {\n        autorange: true,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n      },\n      yaxis: {\n        autorange: 'reversed',\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n      },\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectScatterData,\n  selectScatterDataError,\n  selectScatterDataIsFulfilled,\n  selectScatterDataIsInitialized,\n  selectScatterDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getScatterData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { ScatterData } from 'api/outputs/Outputs'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const ScatterPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectScatterDataIsPending(path))\n  const isInitialized = useSelector(selectScatterDataIsInitialized(path))\n  const error = useSelector(selectScatterDataError(path))\n  const isFulfilled = useSelector(selectScatterDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getScatterData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ScatterPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ScatterPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const scatterData = useSelector(\n    selectScatterData(path),\n    scatterDataEqualityFn,\n  )\n\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: scatterData[xIndex],\n        y: scatterData[yIndex],\n        type: 'scatter',\n        mode: 'markers', //'markers+text',\n        text: Object.keys(scatterData[xIndex]),\n        textposition: 'top center',\n        textfont: {\n          family: 'Raleway, sans-serif',\n        },\n        marker: {\n          size: 5,\n          color: Object.keys(scatterData[xIndex]),\n        },\n      },\n    ],\n    [scatterData, xIndex, yIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      xaxis: {\n        title: {\n          text: `x: ${xIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: `y: ${yIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n    }),\n    [xIndex, yIndex, width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <XIndex dataKeys={Object.keys(scatterData)} />\n          <YIndex dataKeys={Object.keys(scatterData)} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst XIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemXIndex({\n        itemId,\n        xIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>xIndex</InputLabel>\n      <Select label=\"smooth\" value={xIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst YIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemYIndex({\n        itemId,\n        yIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>yIndex</InputLabel>\n      <Select label=\"smooth\" value={yIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction scatterDataEqualityFn(\n  a: ScatterData | undefined,\n  b: ScatterData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LegendClickEvent } from 'plotly.js'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectTimeSeriesData,\n  selectTimeSeriesDataError,\n  selectTimeSeriesDataIsFulfilled,\n  selectTimeSeriesDataIsInitialized,\n  selectTimeSeriesDataIsPending,\n  selectTimeSeriesStd,\n  selectTimeSeriesXrange,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getTimeSeriesDataById,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { TimeSeriesData } from 'api/outputs/Outputs'\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectTimeSeriesItemKeys,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport createColormap from 'colormap'\nimport { setTimeSeriesItemDrawOrderList } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const TimeSeriesPlot = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectTimeSeriesDataIsPending(path))\n  const isInitialized = useSelector(selectTimeSeriesDataIsInitialized(path))\n  const error = useSelector(selectTimeSeriesDataError(path))\n  const isFulfilled = useSelector(selectTimeSeriesDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getTimeSeriesInitData({ path, itemId }))\n    }\n  }, [dispatch, isInitialized, path, itemId])\n\n  if (!isInitialized) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isPending || isFulfilled) {\n    return <TimeSeriesPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst TimeSeriesPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  // 0番のデータとkeysだけをとってくる\n  const dispatch = useDispatch()\n  const timeSeriesData = useSelector(\n    selectTimeSeriesData(path),\n    timeSeriesDataEqualityFn,\n  )\n\n  const dataXrange = useSelector(selectTimeSeriesXrange(path))\n  const dataStd = useSelector(selectTimeSeriesStd(path))\n\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n  const drawOrderList = useSelector(selectTimeSeriesItemDrawOrderList(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const dataKeys = useSelector(selectTimeSeriesItemKeys(itemId))\n\n  const colorScale = createColormap({\n    colormap: 'jet',\n    nshades: 100, //maxIndex >= 6 ? maxIndex : 6,\n    format: 'hex',\n    alpha: 1,\n  })\n\n  const data = React.useMemo(() => {\n    return Object.fromEntries(\n      dataKeys.map((key) => {\n        let y = dataXrange.map((x) => timeSeriesData[key][x])\n        const i = Number(key) - 1\n        const new_i = Math.floor((i % 10) * 10 + i / 10) % 100\n        if (drawOrderList.includes(key) && offset) {\n          const activeIdx: number = drawOrderList.findIndex((v) => v === key)\n          const mean: number = y.reduce((a, b) => a + b) / y.length\n          const std: number =\n            span *\n            Math.sqrt(y.reduce((a, b) => a + Math.pow(b - mean, 2)) / y.length)\n          y = y.map((value) => (value - mean) / (std + 1e-10) + activeIdx)\n        }\n\n        return [\n          key,\n          {\n            name: key,\n            x: dataXrange,\n            y: y,\n            visible: drawOrderList.includes(key) ? true : 'legendonly',\n            line: { color: colorScale[new_i] },\n            error_y: {\n              type: 'data',\n              array:\n                !offset && Object.keys(dataStd).includes(key)\n                  ? Object.values(dataStd[key])\n                  : null,\n              visible: true,\n            },\n          },\n        ]\n      }),\n    )\n  }, [\n    timeSeriesData,\n    drawOrderList,\n    offset,\n    span,\n    colorScale,\n    dataStd,\n    dataXrange,\n    dataKeys,\n  ])\n\n  const annotations = React.useMemo(() => {\n    return drawOrderList.map((value) => {\n      return {\n        x: Number(dataXrange[dataXrange.length - 1]) + dataXrange.length / 10,\n        y: data[value].y[dataXrange.length - 1],\n        xref: 'x',\n        yref: 'y',\n        text: `cell: ${value}`,\n        arrowhead: 1,\n        ax: 0,\n        ay: -10,\n      }\n    })\n  }, [data, drawOrderList, dataXrange])\n\n  const layout = React.useMemo(\n    () => ({\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      width: width,\n      height: height - 50,\n      xaxis: {\n        range: [xrange.left, xrange.right],\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      yaxis: {\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      annotations: annotations,\n    }),\n    [\n      xrange,\n      showgrid,\n      showline,\n      showticklabels,\n      zeroline,\n      annotations,\n      width,\n      height,\n    ],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  const onLegendClick = (event: LegendClickEvent) => {\n    const clickNumber = dataKeys[event.curveNumber]\n\n    const newDrawOrderList = drawOrderList.includes(clickNumber)\n      ? drawOrderList.filter((value) => value !== clickNumber)\n      : [...drawOrderList, clickNumber]\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    // set DisplayNumbers\n    if (!drawOrderList.includes(clickNumber)) {\n      dispatch(getTimeSeriesDataById({ path, index: clickNumber }))\n    }\n\n    return false\n  }\n\n  return (\n    <PlotlyChart\n      data={Object.values(data)}\n      layout={layout}\n      config={config}\n      onLegendClick={onLegendClick}\n    />\n  )\n})\n\nfunction timeSeriesDataEqualityFn(\n  a: TimeSeriesData | undefined,\n  b: TimeSeriesData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.entries(a)\n    const bArray = Object.entries(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every(([aKey, aValue], i) => {\n          const [bKey, bValue] = bArray[i]\n          return bKey === aKey && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction nestEqualityFun(\n  a: {\n    [key: number]: number\n  },\n  b: {\n    [key: number]: number\n  },\n) {\n  const aArray = Object.entries(a)\n  const bArray = Object.entries(b)\n  return (\n    a === b ||\n    (aArray.length === bArray.length &&\n      aArray.every(([aKey, aValue], i) => {\n        const [bKey, bValue] = bArray[i]\n        return bKey === aKey && bValue === aValue\n      }))\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectBarData,\n  selectBarDataError,\n  selectBarDataIsFulfilled,\n  selectBarDataIsInitialized,\n  selectBarDataIsPending,\n  selectBarIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getBarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { BarData } from 'api/outputs/Outputs'\nimport {\n  selectBarItemIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setBarItemIndex } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const BarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectBarDataIsPending(path))\n  const isInitialized = useSelector(selectBarDataIsInitialized(path))\n  const error = useSelector(selectBarDataError(path))\n  const isFulfilled = useSelector(selectBarDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getBarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <BarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst BarPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const barData = useSelector(selectBarData(path), barDataEqualityFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const index = useSelector(selectBarItemIndex(itemId))\n  const dataKeys = useSelector(selectBarIndex(path))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: Object.keys(barData[index]),\n        y: Object.values(barData[index]),\n        type: 'bar',\n      },\n    ],\n    [barData, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <SelectIndex dataKeys={dataKeys} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst SelectIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const index = useSelector(selectBarItemIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setBarItemIndex({\n        itemId,\n        index: event.target.value,\n      }),\n    )\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>index</InputLabel>\n      <Select label=\"smooth\" value={`${index}`} onChange={handleChange}>\n        {dataKeys.map((v, i) => (\n          <MenuItem value={i}>{v}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction barDataEqualityFn(a: BarData | undefined, b: BarData | undefined) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHTMLData,\n  selectHTMLDataError,\n  selectHTMLDataIsFulfilled,\n  selectHTMLDataIsInitialized,\n  selectHTMLDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHTMLData } from 'store/slice/DisplayData/DisplayDataActions'\n\nexport const HTMLPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHTMLDataIsPending(path))\n  const isInitialized = useSelector(selectHTMLDataIsInitialized(path))\n  const error = useSelector(selectHTMLDataError(path))\n  const isFulfilled = useSelector(selectHTMLDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHTMLData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HTMLPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HTMLPlotImple = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const htmlData = useSelector(selectHTMLData(path))\n\n  return (\n    <div\n      dangerouslySetInnerHTML={{ __html: htmlData }}\n      style={{\n        overflow: 'scroll',\n        display: 'flex',\n        height: '90%',\n      }}\n    />\n  )\n})\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectVisualizeDataFilePath,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { DisplayDataContext } from './DataContext'\nimport { HeatMapPlot } from './Plot/HeatMapPlot'\nimport { ImagePlot } from './Plot/ImagePlot'\nimport { RoiPlot } from './Plot/RoiPlot'\nimport { ScatterPlot } from './Plot/ScatterPlot'\nimport { CsvPlot } from './Plot/CsvPlot'\nimport { TimeSeriesPlot } from './Plot/TimeSeriesPlot'\nimport { BarPlot } from './Plot/BarPlot'\nimport { HTMLPlot } from './Plot/HTMLPlot'\n\nexport const DisplayDataItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const nodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  if (filePath != null && dataType != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{ nodeId, filePath, dataType, itemId }}\n      >\n        <DisplayPlot dataType={dataType} />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n\nconst DisplayPlot = React.memo<{\n  dataType: DATA_TYPE\n}>(({ dataType }) => {\n  switch (dataType) {\n    case DATA_TYPE_SET.CSV:\n      return <CsvPlot />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesPlot />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatMapPlot />\n    case DATA_TYPE_SET.IMAGE:\n      return <ImagePlot />\n    case DATA_TYPE_SET.ROI:\n      return <RoiPlot />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterPlot />\n    case DATA_TYPE_SET.BAR:\n      return <BarPlot />\n    case DATA_TYPE_SET.HTML:\n      return <HTMLPlot />\n    default:\n      return null\n  }\n})\n","import { useDispatch, useSelector } from 'react-redux'\nimport Tabs, { tabsClasses } from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box'\nimport React from 'react'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { selectAlgorithmName } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectPipelineNodeResultOutputKeyList,\n  selectPipelineNodeResultOutputFileDataType,\n  selectPipelineNodeResultOutputFilePath,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { selectVisualizeItemIdForWorkflowDialog } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { DisplayDataItem } from 'components/Visualize/DisplayDataItem'\n\nexport const AlgorithmOutputDialog = React.memo<{\n  open: boolean\n  onClose: () => void\n  nodeId: string\n}>(({ open, onClose, nodeId }) => {\n  const dispatch = useDispatch()\n  const closeFn = () => {\n    onClose()\n    dispatch(deleteAllItemForWorkflowDialog())\n  }\n  return (\n    <Dialog open={open} onClose={closeFn} fullWidth>\n      <TitleWithCloseButton onClose={closeFn} nodeId={nodeId} />\n      <DialogContent\n        dividers\n        sx={{\n          pt: 1,\n          px: 2,\n        }}\n      >\n        {open && <OutputViewer nodeId={nodeId} />}\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nconst TitleWithCloseButton = React.memo<{\n  onClose: () => void\n  nodeId: string\n}>(({ nodeId, onClose }) => {\n  const nodeName = useSelector(selectAlgorithmName(nodeId))\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }}>\n      Output of {nodeName}\n      <IconButton\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 10,\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </DialogTitle>\n  )\n})\n\nconst OutputViewer = React.memo<{ nodeId: string }>(({ nodeId }) => {\n  const outputKeyList = useSelector(\n    selectPipelineNodeResultOutputKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  const [selectedOutoutKey, setSelectedOutputKey] = React.useState(\n    outputKeyList[0],\n  )\n  return (\n    <>\n      <OutputSelectTabs\n        outputKeyList={outputKeyList}\n        selectedOutoutKey={selectedOutoutKey}\n        onSelectOutput={setSelectedOutputKey}\n      />\n      <DisplayDataView nodeId={nodeId} outputKey={selectedOutoutKey} />\n    </>\n  )\n})\n\nconst OutputSelectTabs = React.memo<{\n  selectedOutoutKey: string\n  outputKeyList: string[]\n  onSelectOutput: (selectedKey: string) => void\n}>(({ selectedOutoutKey, outputKeyList, onSelectOutput }) => {\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    onSelectOutput(newValue)\n  }\n  return (\n    <Tabs\n      value={selectedOutoutKey}\n      onChange={handleChange}\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n      sx={{\n        [`& .${tabsClasses.scrollButtons}`]: {\n          '&.Mui-disabled': { opacity: 0.3 },\n        },\n      }}\n    >\n      {outputKeyList.map((outputKey) => (\n        <Tab\n          value={outputKey}\n          label={outputKey}\n          sx={{\n            textTransform: 'none',\n          }}\n        />\n      ))}\n    </Tabs>\n  )\n})\n\nconst DisplayDataView = React.memo<{ nodeId: string; outputKey: string }>(\n  ({ nodeId, outputKey }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectPipelineNodeResultOutputFilePath(nodeId, outputKey),\n    )\n    const dataType = useSelector(\n      selectPipelineNodeResultOutputFileDataType(nodeId, outputKey),\n    )\n    const itemId = useSelector(\n      selectVisualizeItemIdForWorkflowDialog(nodeId, filePath, dataType),\n    )\n    React.useEffect(() => {\n      if (itemId === null) {\n        dispatch(addItemForWorkflowDialog({ nodeId, filePath, dataType }))\n      }\n    }, [dispatch, nodeId, filePath, dataType, itemId])\n    return (\n      <Box\n        sx={{\n          mx: 1,\n          my: 2,\n        }}\n      >\n        {itemId != null && <DisplayDataItem itemId={itemId} />}\n      </Box>\n    )\n  },\n)\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { RootState } from '../../store'\n\nexport const selectFilesTree =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) => {\n    if (state.filesTree[fileType] != null) {\n      return state.filesTree[fileType]\n    } else {\n      return undefined\n    }\n  }\n\nexport const selectFilesTreeNodes =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.tree\n\nexport const selectFilesIsLatest =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLatest ?? false\n\nexport const selectFilesIsLoading =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLoading ?? false\n","export const FILES_TREE_SLICE_NAME = 'filesTree'\n\nexport type TreeNodeType = DirNode | FileNode\n\nexport interface NodeBase {\n  path: string\n  name: string\n  isDir: boolean\n}\n\nexport interface DirNode extends NodeBase {\n  isDir: true\n  nodes: TreeNodeType[]\n}\n\nexport interface FileNode extends NodeBase {\n  isDir: false\n}\n\nexport interface FilesTree {\n  [fileType: string]: {\n    isLatest: boolean\n    isLoading: boolean\n    tree: TreeNodeType[]\n  }\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  FILE_TREE_TYPE,\n  getFilesTreeApi,\n  TreeNodeTypeDTO,\n} from 'api/files/Files'\n\nimport { FILES_TREE_SLICE_NAME } from './FilesTreeType'\n\nexport const getFilesTree = createAsyncThunk<TreeNodeTypeDTO[], FILE_TREE_TYPE>(\n  `${FILES_TREE_SLICE_NAME}/getFilesTree`,\n  async (fileType, thunkAPI) => {\n    try {\n      const response = await getFilesTreeApi(fileType)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { TreeNodeTypeDTO } from 'api/files/Files'\nimport { TreeNodeType } from './FilesTreeType'\n\nexport function convertToTreeNodeType(dto: TreeNodeTypeDTO[]): TreeNodeType[] {\n  return dto.map((node) =>\n    node.isdir\n      ? {\n          path: node.path,\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n        }\n      : {\n          path: node.path,\n          name: node.name,\n          isDir: false,\n        },\n  )\n}\n\nexport function isDirNodeByPath(path: string, tree: TreeNodeType[]): boolean {\n  const node = getNodeByPath(path, tree)\n  if (node != null) {\n    return node.isDir\n  } else {\n    throw new Error(`failed to get node: ${path}`)\n  }\n}\n\nexport function getNodeByPath(\n  path: string,\n  tree: TreeNodeType[],\n): TreeNodeType | null {\n  let targetNode: TreeNodeType | null = null\n  for (const node of tree) {\n    if (path === node.path) {\n      targetNode = node\n      break\n    } else {\n      if (node.isDir) {\n        targetNode = getNodeByPath(path, node.nodes)\n        if (targetNode != null) {\n          break\n        }\n      }\n    }\n  }\n  return targetNode\n}\n","import Dialog from '@mui/material/Dialog'\nimport { useDispatch, useSelector } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\nimport Checkbox, { CheckboxProps } from '@mui/material/Checkbox'\n\nimport Box from '@mui/material/Box'\nimport { useTheme } from '@mui/material/styles'\nimport React from 'react'\n\nimport {\n  selectFilesIsLatest,\n  selectFilesIsLoading,\n  selectFilesTreeNodes,\n} from 'store/slice/FilesTree/FilesTreeSelectors'\nimport { getFilesTree } from 'store/slice/FilesTree/FilesTreeAction'\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { TreeNodeType } from 'store/slice/FilesTree/FilesTreeType'\nimport {\n  getNodeByPath,\n  isDirNodeByPath,\n} from 'store/slice/FilesTree/FilesTreeUtils'\n\ntype FileSelectDialogProps = {\n  initialFilePath: string[] | string\n  onClickOk: (path: string[] | string) => void\n  fileType?: FILE_TREE_TYPE\n  title?: string\n  open: boolean\n  onClickCancel: () => void\n  multiSelect: boolean\n}\n\nexport const FileSelectDialog = React.memo<FileSelectDialogProps>(\n  function FileSelectDialog({\n    open,\n    initialFilePath,\n    onClickCancel,\n    onClickOk,\n    title,\n    fileType = FILE_TREE_TYPE_SET.ALL,\n    multiSelect,\n  }) {\n    React.useEffect(() => {\n      setSelectedFilePath(initialFilePath)\n    }, [initialFilePath])\n    const [selectedFilePath, setSelectedFilePath] =\n      React.useState(initialFilePath)\n    const onCancel = () => {\n      setSelectedFilePath(initialFilePath) // 選択内容を反映させない\n      onClickCancel()\n    }\n    const onOk = () => {\n      onClickOk(selectedFilePath)\n    }\n    const theme = useTheme()\n    return (\n      <Dialog open={open} fullWidth>\n        <DialogTitle>{title ?? 'Select File'}</DialogTitle>\n        <DialogContent dividers>\n          <div\n            style={{\n              height: 300,\n              overflow: 'auto',\n              marginBottom: theme.spacing(1),\n              border: '1px solid',\n              padding: theme.spacing(1),\n              borderColor: theme.palette.divider,\n            }}\n          >\n            <FileTreeView\n              setSelectedFilePath={setSelectedFilePath}\n              multiSelect={multiSelect}\n              fileType={fileType}\n              selectedFilePath={selectedFilePath}\n            />\n          </div>\n          <Typography variant=\"subtitle1\">Select File</Typography>\n          <FilePathSelectedListView path={selectedFilePath} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  },\n)\n\nconst FileTreeView = React.memo<{\n  setSelectedFilePath: (path: string[] | string) => void\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  fileType: FILE_TREE_TYPE\n}>(({ setSelectedFilePath, selectedFilePath, fileType, multiSelect }) => {\n  const [tree, isLoading] = useFileTree(fileType)\n  const onNodeSelectHandler = (\n    event: React.SyntheticEvent,\n    nodeIds: Array<string> | string,\n  ) => {\n    if (!multiSelect && tree != null) {\n      // multiSelectがfalseの場合、ディレクトリは選択しない\n      const path = nodeIds as string\n      if (!isDirNodeByPath(path, tree)) {\n        setSelectedFilePath(path)\n      }\n    }\n  }\n  // multiSelectでチェックボックスを使用する時用のハンドラ\n  const onCheckFile = (path: string) => {\n    if (Array.isArray(selectedFilePath)) {\n      if (selectedFilePath.includes(path)) {\n        setSelectedFilePath(\n          selectedFilePath.filter((selectedPath) => path !== selectedPath),\n        )\n      } else {\n        setSelectedFilePath(selectedFilePath.concat(path))\n      }\n    }\n  }\n  const onCheckDir = (path: string, checked: boolean) => {\n    if (tree != null && Array.isArray(selectedFilePath)) {\n      const node = getNodeByPath(path, tree)\n      if (node != null && node.isDir) {\n        const childrenFilePathList = node.nodes\n          .filter((node) => !node.isDir)\n          .map((node) => node.path)\n        if (checked) {\n          setSelectedFilePath(\n            // concat時の重複を削除\n            Array.from(new Set(selectedFilePath.concat(childrenFilePathList))),\n          )\n        } else {\n          setSelectedFilePath(\n            selectedFilePath.filter(\n              (selectedPath) => !childrenFilePathList.includes(selectedPath),\n            ),\n          )\n        }\n      }\n    }\n  }\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView\n        disableSelection={multiSelect}\n        multiSelect={multiSelect}\n        onNodeSelect={onNodeSelectHandler}\n      >\n        {tree?.map((node) => (\n          <TreeNode\n            node={node}\n            selectedFilePath={selectedFilePath}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: TreeNodeType\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  onCheckFile: (path: string) => void\n  onCheckDir: (path: string, checked: boolean) => void\n}>(({ node, selectedFilePath, multiSelect, onCheckDir, onCheckFile }) => {\n  if (node.isDir) {\n    const allChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => selectedFilePath.includes(filePath))\n    const allNotChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => !selectedFilePath.includes(filePath))\n    const indeterminate = !(allChecked || allNotChecked)\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={\n          multiSelect && node.nodes.filter((node) => !node.isDir).length > 0 ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                indeterminate,\n                checked: allChecked,\n                onClick: (e) => {\n                  e.stopPropagation() // on/offのクリックにつられてTreeを開閉させないようにする\n                },\n                onChange: (e) => onCheckDir(node.path, e.target.checked),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode\n            node={childNode}\n            selectedFilePath={selectedFilePath}\n            key={i}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={\n          multiSelect ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                checked:\n                  Array.isArray(selectedFilePath) &&\n                  selectedFilePath.includes(node.path),\n                onChange: () => onCheckFile(node.path),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n        onClick={() => onCheckFile(node.path)}\n      />\n    )\n  }\n})\n\nconst TreeItemLabel = React.memo<{\n  label: string\n  checkboxProps: CheckboxProps\n}>(({ label, checkboxProps }) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box flexGrow={1}>{label}</Box>\n      <Box>\n        <Checkbox\n          {...checkboxProps}\n          disableRipple\n          size=\"small\"\n          sx={{\n            marginRight: '4px',\n            padding: '2px',\n          }}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectedListView = React.memo<{ path: string | string[] }>(\n  ({ path }) => {\n    return (\n      <Typography variant=\"subtitle2\">\n        {!!path\n          ? Array.isArray(path)\n            ? path.map((text) => <li>{text}</li>)\n            : path\n          : '---'}\n      </Typography>\n    )\n  },\n)\n\nfunction useFileTree(\n  fileType: FILE_TREE_TYPE,\n): [TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectFilesTreeNodes(fileType))\n  const isLatest = useSelector(selectFilesIsLatest(fileType))\n  const isLoading = useSelector(selectFilesIsLoading(fileType))\n  React.useEffect(() => {\n    if (!isLatest && !isLoading) {\n      dispatch(getFilesTree(fileType))\n    }\n  }, [isLatest, isLoading, fileType, dispatch])\n  return [tree, isLoading]\n}\n","import React, { DragEvent, MouseEvent, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  Controls,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  OnLoadParams,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport { useDrop } from 'react-dnd'\n\nimport 'style/flow.css'\nimport {\n  deleteFlowElements,\n  editFlowElementPositionById,\n  setFlowElements,\n  setFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectFlowElements,\n  selectFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { ToolBar } from 'components/ToolBar'\nimport {\n  reactFlowEdgeTypes,\n  reactFlowNodeTypes,\n} from './FlowChartNode/ReactFlowNodeTypesConst'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\nimport { AlgorithmOutputDialog } from './FlowChartNode/AlgorithmOutputDialog'\nimport { DialogContext } from 'components/Visualize/DialogContext'\nimport { FileSelectDialog } from 'components/common/FileSelectDialog'\n\nconst initDialogFile = {\n  filePath: '',\n  open: false,\n  fileTreeType: '',\n  multiSelect: false,\n  onSelectFile: (_: any) => null,\n}\n\nexport const ReactFlowComponent = React.memo<UseRunPipelineReturnType>(\n  (props) => {\n    const flowElements = useSelector(selectFlowElements)\n    const dispatch = useDispatch()\n    const [dialogNodeId, setDialogNodeId] = useState('')\n    const [dialogFile, setDialogFile] = useState(initDialogFile)\n\n    const onConnect = (params: Connection | Edge) => {\n      dispatch(\n        setFlowElements(\n          addEdge(\n            {\n              ...params,\n              animated: false,\n              style: { width: 5 },\n              type: 'buttonedge',\n            },\n            flowElements,\n          ),\n        ),\n      )\n    }\n\n    const onElementsRemove = (elementsToRemove: Elements) => {\n      dispatch(deleteFlowElements(elementsToRemove))\n    }\n\n    const onDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    const onNodeDragStop = (event: MouseEvent, node: Node) => {\n      dispatch(\n        editFlowElementPositionById({\n          nodeId: node.id,\n          coord: { x: node.position.x, y: node.position.y },\n        }),\n      )\n    }\n\n    const flowPosition = useSelector(selectFlowPosition)\n\n    const onMoveEnd = (event: FlowTransform | undefined) => {\n      if (event !== undefined) {\n        dispatch(setFlowPosition(event))\n      }\n    }\n\n    const [reactFlowInstance, setReactFlowInstance] =\n      React.useState<OnLoadParams>()\n\n    const onLoad = (reactFlowInstance: OnLoadParams) =>\n      setReactFlowInstance(reactFlowInstance)\n    const wrapparRef = React.useRef<HTMLDivElement>(null)\n    const [, drop] = useDrop<\n      TreeItemDragObject,\n      TreeItemDropResult,\n      TreeItemCollectedProps\n    >(\n      () => ({\n        accept: DND_ITEM_TYPE_SET.TREE_ITEM,\n        drop: (_, monitor) => {\n          let position: TreeItemDropResult['position'] = undefined\n          const monitorOffset = monitor.getClientOffset()\n          if (\n            wrapparRef.current != null &&\n            monitorOffset != null &&\n            reactFlowInstance != null\n          ) {\n            position = reactFlowInstance.project({\n              x: monitorOffset.x - wrapparRef.current.offsetLeft - 40,\n              y: monitorOffset.y - wrapparRef.current.offsetTop - 40,\n            })\n          }\n          return { position }\n        },\n      }),\n      [reactFlowInstance],\n    )\n    return (\n      <div className=\"flow\">\n        <DialogContext.Provider\n          value={{\n            onOpen: setDialogNodeId,\n            onOpenDialogFile: setDialogFile as any,\n          }}\n        >\n          <ReactFlowProvider>\n            <div className=\"reactflow-wrapper\" ref={wrapparRef}>\n              <ReactFlow\n                ref={drop}\n                elements={flowElements}\n                onElementsRemove={onElementsRemove}\n                onConnect={onConnect}\n                onLoad={onLoad}\n                onDragOver={onDragOver}\n                onNodeDragStop={onNodeDragStop}\n                nodeTypes={reactFlowNodeTypes}\n                edgeTypes={reactFlowEdgeTypes}\n                defaultPosition={[flowPosition.x, flowPosition.y]}\n                defaultZoom={flowPosition.zoom}\n                onMoveEnd={onMoveEnd}\n              >\n                <ToolBar {...props} />\n                <Controls />\n              </ReactFlow>\n            </div>\n          </ReactFlowProvider>\n          {dialogNodeId && (\n            <AlgorithmOutputDialog\n              nodeId={dialogNodeId}\n              open\n              onClose={() => setDialogNodeId('')}\n            />\n          )}\n          {dialogFile.open && (\n            <FileSelectDialog\n              multiSelect={dialogFile.multiSelect}\n              initialFilePath={dialogFile.filePath}\n              open={dialogFile.open}\n              onClickOk={(path) => {\n                dialogFile.onSelectFile(path)\n                setDialogFile(initDialogFile)\n              }}\n              onClickCancel={() => {\n                setDialogFile(initDialogFile)\n              }}\n              fileType={dialogFile.fileTreeType as any}\n            />\n          )}\n        </DialogContext.Provider>\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nexport const selectRightDrawerIsOpen = (state: RootState) =>\n  state.rightDrawer.open\n\nexport const selectRightDrawerMode = (state: RootState) =>\n  state.rightDrawer.mode\n\nexport const selectRightDrawerCurrentNodeId = (state: RootState) =>\n  state.rightDrawer.currendNodeId\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const ALGORITHM_NODE_SLICE_NAME = 'algorithmNode'\n\nexport type AlgorithmNode = {\n  [nodeId: string]: AlgrithmNodeType\n}\n\ntype AlgrithmNodeType = {\n  functionPath: string\n  name: string\n  params: ParamMap | null\n  isUpdated: boolean\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getAlgoParamsApi } from 'api/params/Params'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { ALGORITHM_NODE_SLICE_NAME } from './AlgorithmNodeType'\n\nexport const getAlgoParams = createAsyncThunk<\n  ParamDTO,\n  { nodeId: string; algoName: string }\n>(\n  `${ALGORITHM_NODE_SLICE_NAME}/getAlgoParams`,\n  async ({ algoName }, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoParamsApi(algoName)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\n\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { getAlgoParams } from './AlgorithmNodeActions'\nimport { ALGORITHM_NODE_SLICE_NAME, AlgorithmNode } from './AlgorithmNodeType'\nimport { isAlgorithmNodePostData } from 'api/run/RunUtils'\nimport { run, runByCurrentUid } from '../Pipeline/PipelineActions'\nimport { addAlgorithmNode } from '../FlowElement/FlowElementActions'\n\nconst initialState: AlgorithmNode = {}\n\nexport const algorithmNodeSlice = createSlice({\n  name: ALGORITHM_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { nodeId, path, newValue } = action.payload\n      const param = state[nodeId].params\n      if (param != null) {\n        const target = getChildParam(path, param)\n        if (target != null) {\n          target.value = newValue\n          state[nodeId].isUpdated = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAlgoParams.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        state[nodeId].params = convertToParamMap(action.payload)\n      })\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        const { node, functionPath, name } = action.meta.arg\n        const params = action.payload\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          state[node.id] = {\n            functionPath,\n            name,\n            params: convertToParamMap(params),\n            isUpdated: false,\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: AlgorithmNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isAlgorithmNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              newState[node.id] = {\n                name: node.data.label,\n                functionPath: node.data.path,\n                params: node.data.param,\n                isUpdated: false,\n              }\n            }\n          })\n        return newState\n      })\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          Object.values(runPostData.nodeDict)\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              state[node.id].isUpdated = false\n            })\n        },\n      )\n  },\n})\n\nexport const { updateParam } = algorithmNodeSlice.actions\nexport default algorithmNodeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Typography from '@mui/material/Typography'\n\nimport {\n  selectAlgorithmName,\n  selectAlgorithmParamsExit,\n  selectAlgorithmParamsKeyList,\n  selectAlgorithmParamsValue,\n  selectAlgorithmParam,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { updateParam } from 'store/slice/AlgorithmNode/AlgorithmNodeSlice'\nimport { getAlgoParams } from 'store/slice/AlgorithmNode/AlgorithmNodeActions'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { ParamFormContext } from './RightDrawer'\n\nexport const AlgorithmParamForm = React.memo(() => {\n  const nodeId = React.useContext(ParamFormContext)\n  const dispatch = useDispatch()\n  const algoName = useSelector(selectAlgorithmName(nodeId))\n  const algoParamIsLoaded = useSelector(selectAlgorithmParamsExit(nodeId))\n  const paramKeyList = useSelector(\n    selectAlgorithmParamsKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (!algoParamIsLoaded) {\n      dispatch(getAlgoParams({ nodeId, algoName }))\n    }\n  }, [dispatch, nodeId, algoName, algoParamIsLoaded])\n  return (\n    <div style={{ padding: 8 }}>\n      <Typography variant=\"h5\">{algoName}</Typography>\n      <div style={{ paddingLeft: 8 }}>\n        {paramKeyList.map((paramKey) => (\n          <ParamItem key={paramKey} paramKey={paramKey} />\n        ))}\n      </div>\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const nodeId = React.useContext(ParamFormContext)\n  const Component = createParamFormItemComponent({\n    paramSelector: (paramKey) => selectAlgorithmParam(nodeId, paramKey),\n    paramValueSelector: (path) => selectAlgorithmParamsValue(nodeId, path),\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ nodeId, path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Divider from '@mui/material/Divider'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport Box from '@mui/material/Box'\nimport {\n  selectRightDrawerCurrentNodeId,\n  selectRightDrawerIsOpen,\n  selectRightDrawerMode,\n} from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport {\n  closeRightDrawer,\n  RIGHT_DRAWER_MODE,\n} from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { NWBSettingContents } from './NWB'\nimport { RootState } from 'store/store'\nimport { AlgorithmParamForm } from './AlgorithmParamForm'\nimport { SnakemakeContents } from './Snakemake'\n\nconst RightDrawer: React.FC = () => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(closeRightDrawer())\n  const title = useSelector((state: RootState) => {\n    const mode = selectRightDrawerMode(state)\n    switch (mode) {\n      case RIGHT_DRAWER_MODE.NWB:\n        return 'NWB Setting'\n      case RIGHT_DRAWER_MODE.PARAM_FORM:\n        return 'Param From'\n      case RIGHT_DRAWER_MODE.SNAKEMAKE:\n        return 'Snakemake'\n      default:\n        return 'none'\n    }\n  })\n  return (\n    <StyledDrawer open={open} anchor=\"right\" variant=\"persistent\">\n      <Toolbar />\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton color=\"inherit\" onClick={onClick} size=\"large\">\n          <ChevronRightIcon />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Box>\n      <Divider />\n      <MainContents>\n        <Contents />\n      </MainContents>\n    </StyledDrawer>\n  )\n}\n\nconst Contents: React.FC = () => {\n  const mode = useSelector(selectRightDrawerMode)\n  switch (mode) {\n    case RIGHT_DRAWER_MODE.NWB:\n      return <NWBSettingContents />\n    case RIGHT_DRAWER_MODE.PARAM_FORM:\n      return <ParamFormConetent />\n    case RIGHT_DRAWER_MODE.SNAKEMAKE:\n      return <SnakemakeContents />\n    default:\n      return null\n  }\n}\n\n/**\n * nodeId\n */\nexport const ParamFormContext = React.createContext<string>('')\n\nconst ParamFormConetent: React.FC = () => {\n  const nodeId = useSelector(selectRightDrawerCurrentNodeId)\n  if (nodeId != null) {\n    return (\n      <ParamFormContext.Provider value={nodeId}>\n        <AlgorithmParamForm />\n      </ParamFormContext.Provider>\n    )\n  } else {\n    return null\n  }\n}\n\nexport const rightDrawerWidth = 320\n\nconst StyledDrawer = styled(Drawer)({\n  width: rightDrawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: rightDrawerWidth,\n  },\n})\n\nconst MainContents = styled('main')({\n  height: '100%',\n})\n\nexport default RightDrawer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport { default as MuiToolbar } from '@mui/material/Toolbar'\nimport { styled } from '@mui/material/styles'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport { AlgorithmTreeView } from './TreeView'\nimport { ReactFlowComponent } from './ReactFlowComponent'\nimport RightDrawer, { rightDrawerWidth } from './RightDrawer'\nimport { selectRightDrawerIsOpen } from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\n\nconst FlowChart = React.memo<UseRunPipelineReturnType>((props) => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  return (\n    <RootDiv>\n      <DndProvider backend={HTML5Backend}>\n        <StyledDrawer variant=\"permanent\">\n          <MuiToolbar />\n          <DrawerContents>\n            <AlgorithmTreeView />\n          </DrawerContents>\n        </StyledDrawer>\n\n        <MainContents open={open}>\n          <MuiToolbar />\n          <ReactFlowComponent {...props} />\n        </MainContents>\n      </DndProvider>\n      <RightDrawer />\n    </RootDiv>\n  )\n})\n\nexport const drawerWidth = 240\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n})\n\nconst StyledDrawer = styled(Drawer)({\n  width: drawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n})\n\nconst DrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')<{ open: boolean }>(\n  ({ theme }) => ({\n    flexDirection: 'column',\n    flexGrow: 1,\n    height: '90vh',\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -rightDrawerWidth,\n  }),\n  ({ open, theme }) =>\n    open\n      ? {\n          transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n          marginRight: 0,\n        }\n      : undefined,\n)\n\nexport default FlowChart\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport AddIcon from '@mui/icons-material/Add'\nimport Button from '@mui/material/Button'\nimport { pushInitialItemToNewRow } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const VisualizeItemAddButton: React.FC = () => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(pushInitialItemToNewRow())\n  }\n  return (\n    <StyledPaper elevation={1} variant=\"outlined\">\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height=\"100%\"\n      >\n        <StyledButton onClick={onClick}>\n          <AddIcon fontSize=\"large\" color=\"primary\" />\n        </StyledButton>\n      </Box>\n    </StyledPaper>\n  )\n}\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  width: 260,\n  height: 255,\n  border: 'dashed',\n  borderWidth: 2,\n  borderColor: theme.palette.divider,\n  margin: theme.spacing(1),\n}))\n\nconst StyledButton = styled(Button)({\n  width: '100%',\n  height: '100%',\n})\n","import React from 'react'\n\nexport function useMouseDragHandler(\n  onMouseDown: (event: React.MouseEvent) => {\n    onMouseMove: (this: Document, event: MouseEvent) => void\n    onMouseUp: (this: Document, event: MouseEvent) => void\n  },\n  dependencies: React.DependencyList,\n) {\n  return React.useCallback(\n    (event: React.MouseEvent) => {\n      const { onMouseMove, onMouseUp } = onMouseDown(event)\n      document.addEventListener('mousemove', onMouseMove)\n      document.addEventListener(\n        'mouseup',\n        (event) => {\n          document.removeEventListener('mousemove', onMouseMove)\n          onMouseUp.call(document, event)\n        },\n        { once: true },\n      )\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dependencies],\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport Menu from '@mui/material/Menu'\nimport MenuItem from '@mui/material/MenuItem'\nimport ListItemText from '@mui/material/ListItemText'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport AddIcon from '@mui/icons-material/Add'\nimport {\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { insertInitialItemToNextColumn } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { deleteDisplayItem } from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const DisplayDataItemLayoutMenuIcon = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onClickDeleteMenu = () => {\n    // visualize Itemで同じpathのデータ個数を調べて、1だったら、displayも削除\n    dispatch(\n      deleteDisplayItem(\n        isSingleData && filePath != null && dataType != null\n          ? { itemId, deleteData: true, filePath, dataType }\n          : { itemId, deleteData: false },\n      ),\n    )\n  }\n  const onClickInsertMenu = () => {\n    dispatch(insertInitialItemToNextColumn(itemId))\n  }\n  return (\n    <PresentationalLayoutMenuIcon\n      onClickDeleteMenu={onClickDeleteMenu}\n      onClickInsertMenu={onClickInsertMenu}\n    />\n  )\n})\n\nconst PresentationalLayoutMenuIcon = React.memo<{\n  onClickDeleteMenu: () => void\n  onClickInsertMenu: () => void\n}>(({ onClickDeleteMenu, onClickInsertMenu }) => {\n  const [open, setOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLButtonElement>(null)\n  const onClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.stopPropagation() // 親divのonClickを反応させないため\n    setOpen((prevOpen) => !prevOpen)\n  }\n  const onClose = () => {\n    setOpen(false)\n  }\n  const onClickDeleteMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickDeleteMenu()\n    setOpen(false)\n  }\n  const onClickInsertMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickInsertMenu()\n    setOpen(false)\n  }\n  return (\n    <>\n      <IconButton ref={anchorRef} onClick={onClick}>\n        <MoreVertIcon />\n      </IconButton>\n      <Menu anchorEl={anchorRef.current} open={open} onClose={onClose}>\n        <MenuItem onClick={onClickInsertMenuFn}>\n          <ListItemIcon>\n            <AddIcon />\n          </ListItemIcon>\n          <ListItemText>Insert into next column</ListItemText>\n        </MenuItem>\n        <MenuItem onClick={onClickDeleteMenuFn}>\n          <ListItemIcon>\n            <DeleteIcon />\n          </ListItemIcon>\n          <ListItemText>Delete</ListItemText>\n        </MenuItem>\n      </Menu>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport FormControl from '@mui/material/FormControl'\nimport MenuItem from '@mui/material/MenuItem'\nimport InputLabel from '@mui/material/InputLabel'\nimport FormHelperText from '@mui/material/FormHelperText'\nimport Select from '@mui/material/Select'\nimport ListSubheader from '@mui/material/ListSubheader'\n\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { RootState } from 'store/store'\nimport { selectInputNode } from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { selectNodeLabelById } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultSuccessList,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { getFileName } from 'store/slice/FlowElement/FlowElementUtils'\n\nexport const FilePathSelect: React.FC<{\n  dataType?: DATA_TYPE\n  selectedNodeId: string | null\n  selectedFilePath: string | null\n  onSelect: (nodeId: string, filePath: string, dataType: DATA_TYPE, outputKey?: string) => void\n  label?: string\n}> = ({ dataType, selectedNodeId, selectedFilePath, onSelect, label }) => {\n  const inputNodeFilePathInfoList = useSelector(\n    (state: RootState) => {\n      const inputNodes = selectInputNode(state)\n      return Object.entries(inputNodes)\n        .map(([nodeId, inputNode]) => ({\n          nodeId,\n          filePath: inputNode.selectedFilePath,\n          fileType: inputNode.fileType,\n          dataType: toDataTypeFromFileType(inputNode.fileType),\n          nodeName: selectNodeLabelById(nodeId)(state),\n        }))\n        .filter(({ filePath }) => filePath != null)\n        .filter(({ dataType: inputNodeDataType }) =>\n          dataType != null ? inputNodeDataType === dataType : true,\n        )\n    },\n    // todo 比較関数\n  )\n\n  const latestUid = useSelector(selectPipelineLatestUid)\n\n  const algorithmNodeOutputPathInfoList = useSelector((state: RootState) => {\n    if (latestUid != null) {\n      const runResult = selectPipelineNodeResultSuccessList(state)\n      return runResult.map(({ nodeId, nodeResult }) => {\n        return {\n          nodeId,\n          nodeName: selectNodeLabelById(nodeId)(state),\n          paths: Object.entries(nodeResult.outputPaths)\n            .map(([outputKey, value]) => {\n              return {\n                outputKey,\n                filePath: value.path,\n                type: value.type,\n              }\n            })\n            .filter(({ type }) =>\n              dataType != null ? type === dataType : true,\n            ),\n        }\n      })\n    } else {\n      return []\n    }\n  })\n\n  const [open, setOpen] = React.useState(false)\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const onSelectHandle = (\n    nodeId: string,\n    filePath: string,\n    dataType: DATA_TYPE,\n    outputKey?: string\n  ) => {\n    onSelect(nodeId, filePath, dataType, outputKey)\n    handleClose()\n  }\n\n  const menuItemList: React.ReactElement[] = []\n  inputNodeFilePathInfoList.forEach((pathInfo) => {\n    const filePath = pathInfo.filePath\n    if (Array.isArray(filePath)) {\n      filePath.forEach((pathElm) => {\n        menuItemList.push(\n          <MenuItem\n            value={`${pathInfo.nodeId}/${pathElm}`}\n            onClick={() =>\n              onSelectHandle(pathInfo.nodeId, pathElm ?? '', pathInfo.dataType)\n            }\n            key={pathInfo.nodeId}\n          >\n            {getFileName(pathElm)}\n          </MenuItem>,\n        )\n      })\n    } else {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${pathInfo.filePath}`}\n          onClick={() =>\n            onSelectHandle(pathInfo.nodeId, filePath ?? '', pathInfo.dataType)\n          }\n          key={pathInfo.nodeId}\n        >\n          {pathInfo.nodeName}\n        </MenuItem>,\n      )\n    }\n  })\n  algorithmNodeOutputPathInfoList.forEach((pathInfo) => {\n    menuItemList.push(<ListSubheader>{pathInfo.nodeName}</ListSubheader>)\n    pathInfo.paths.forEach((outputPath, i) => {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${outputPath.filePath}`}\n          onClick={() =>\n            onSelectHandle(\n              pathInfo.nodeId,\n              outputPath.filePath,\n              outputPath.type,\n              outputPath.outputKey\n            )\n          }\n          key={`${pathInfo.nodeId}/${outputPath.filePath}`}\n        >\n          {outputPath.outputKey}\n        </MenuItem>,\n      )\n    })\n  })\n\n  return (\n    <FormControl style={{ minWidth: 150, maxWidth: 220 }} variant=\"standard\">\n      <InputLabel>{!!label ? label : 'Select Item'}</InputLabel>\n      <Select\n        value={`${selectedNodeId}/${selectedFilePath}`}\n        open={open}\n        onClose={handleClose}\n        onOpen={handleOpen}\n      >\n        {menuItemList}\n      </Select>\n      {inputNodeFilePathInfoList.length +\n        algorithmNodeOutputPathInfoList.length ===\n        0 && <FormHelperText error={true}>no data</FormHelperText>}\n    </FormControl>\n  )\n}\n\nfunction toDataTypeFromFileType(fileType: FILE_TYPE) {\n  switch (fileType) {\n    case FILE_TYPE_SET.IMAGE:\n      return DATA_TYPE_SET.IMAGE\n    case FILE_TYPE_SET.CSV:\n      return DATA_TYPE_SET.CSV\n    case FILE_TYPE_SET.HDF5:\n      return DATA_TYPE_SET.HDF5\n    case FILE_TYPE_SET.FLUO:\n      return DATA_TYPE_SET.FLUO\n    case FILE_TYPE_SET.BEHAVIOR:\n      return DATA_TYPE_SET.BEHAVIOR\n  }\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport FormControl from '@mui/material/FormControl'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { RootState } from 'store/store'\nimport {\n  selectDisplayDataIsSingle,\n  selectImageItemFilePath,\n  selectRoiItemFilePath,\n  selectRoiItemNodeId,\n  selectSelectedVisualizeItemId,\n  selectTimeSeriesItemRefImageItemId,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n  selectVisualizeImageItemIdList,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  selectItem,\n  setItemSize,\n  setRoiItemFilePath,\n  setTimeSeriesRefImageItemId,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { useMouseDragHandler } from 'components/utils/MouseDragUtil'\nimport { DisplayDataItemLayoutMenuIcon } from './VisualizeItemLayoutMenuIcon'\nimport { DisplayDataItem } from './DisplayDataItem'\nimport { FilePathSelect } from './FilePathSelect'\n\nexport const VisualizeItem = React.memo<{ itemId: number }>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(selectItem(itemId))\n  }\n  const isSelected = useSelector(\n    (state: RootState) => selectSelectedVisualizeItemId(state) === itemId,\n  )\n  const { size, onMouseDownX, onMouseDownY, onMouseDownXY } =\n    useItemDragResize(itemId)\n  return (\n    <Box sx={{ m: 1, display: 'flex', flexDirection: 'row' }}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Paper\n          variant=\"outlined\"\n          key={itemId}\n          onClick={onClick}\n          sx={{\n            width: `${size.width}px`,\n            minHeight: `${size.height}px`,\n            p: 1,\n            borderColor: (theme) =>\n              isSelected ? theme.palette.primary.light : undefined,\n          }}\n        >\n          <ItemHeader itemId={itemId} />\n          <DisplayDataItem itemId={itemId} />\n        </Paper>\n        <Box\n          sx={{\n            display: 'flex',\n          }}\n        >\n          <Box\n            sx={{\n              flexGrow: 1,\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              cursor: 'row-resize',\n            }}\n            onMouseDown={onMouseDownY}\n          />\n          <Box\n            sx={{\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              width: '12px',\n              cursor: 'nwse-resize',\n            }}\n            onMouseDown={onMouseDownXY}\n          />\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Box\n          sx={{\n            flexGrow: 1,\n            position: 'relative',\n            left: '-2px',\n            width: '4px',\n            cursor: 'col-resize',\n          }}\n          onMouseDown={onMouseDownX}\n        />\n        <Box\n          sx={{\n            position: 'relative',\n            height: '12px',\n            width: '4px',\n            left: '-2px',\n            cursor: 'nwse-resize',\n          }}\n          onMouseDown={onMouseDownXY}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst ItemHeader = React.memo<{ itemId: number }>(({ itemId }) => {\n  const itemDataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <Box display=\"flex\" justifyContent=\"flex-end\">\n      <Box flexGrow={1}>\n        <>ID: {itemId}</>\n        <FilePathSelectItem itemId={itemId} />\n      </Box>\n      {itemDataType === DATA_TYPE_SET.TIME_SERIES && (\n        <Box flexGrow={1}>\n          <RefImageItemIdSelect itemId={itemId} />\n        </Box>\n      )}\n      {itemDataType === DATA_TYPE_SET.IMAGE && (\n        <Box flexGrow={1}>\n          <RoiSelect itemId={itemId} />\n        </Box>\n      )}\n      <Box>\n        <DisplayDataItemLayoutMenuIcon itemId={itemId} />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const selectedNodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const selectedFilePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFilePath = (\n    nodeId: string,\n    newFilePath: string,\n    newDataType: DATA_TYPE,\n  ) => {\n    const basePayload = {\n      itemId,\n      nodeId,\n      filePath: newFilePath,\n      dataType: newDataType,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && selectedFilePath != null\n          ? {\n            ...basePayload,\n            deleteData: true,\n            prevDataType: dataType,\n            prevFilePath: selectedFilePath,\n          }\n          : {\n            ...basePayload,\n            deleteData: false,\n          },\n      ),\n    )\n  }\n\n  return (\n    <FilePathSelect\n      selectedNodeId={selectedNodeId}\n      selectedFilePath={selectedFilePath}\n      onSelect={onSelectFilePath}\n    />\n  )\n})\n\nconst RefImageItemIdSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const itemIdList = useSelector(\n    selectVisualizeImageItemIdList,\n    arrayEqualityFn,\n  )\n  const onChangeRefImageItemId = (event: SelectChangeEvent) => {\n    const value = Number(event.target.value)\n    dispatch(\n      setTimeSeriesRefImageItemId({\n        itemId,\n        refImageItemId: isNaN(value) ? null : value,\n      }),\n    )\n  }\n  const selectedRefImageItemId = useSelector(\n    selectTimeSeriesItemRefImageItemId(itemId),\n  )\n  return (\n    <FormControl fullWidth variant=\"standard\">\n      <InputLabel>ref image</InputLabel>\n      <Select\n        value={String(selectedRefImageItemId)}\n        onChange={onChangeRefImageItemId}\n      >\n        <MenuItem value={undefined}>{'None'}</MenuItem>\n        {itemIdList.map((value) => (\n          <MenuItem value={value}>{value}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst MIN_WIDTH = 200\nconst MIN_HEIFHT = 150\n\nfunction useItemDragResize(itemId: number) {\n  const dispatch = useDispatch()\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const [movingSize, setMovingSize] = React.useState({ width, height })\n  const onCommitSize = React.useCallback(\n    (size: { width: number; height: number }) =>\n      dispatch(setItemSize({ itemId, ...size })),\n    [dispatch, itemId],\n  )\n  const onMouseDownX = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          setMovingSize((size) => ({ ...size, width: movingWidth }))\n          movingX = moveEvent.screenX\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, width: movingWidth })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownY = useMouseDragHandler(\n    (downEvent) => {\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize((size) => ({ ...size, height: movingHeight }))\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownXY = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize({ width: movingWidth, height: movingHeight })\n          movingX = moveEvent.screenX\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ width: movingWidth, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  return {\n    size: movingSize,\n    onMouseDownX,\n    onMouseDownY,\n    onMouseDownXY,\n  }\n}\n\nconst RoiSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const roiItemNodeId = useSelector(selectRoiItemNodeId(itemId))\n  const roiItemFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const onSelectRoiFilePath = (nodeId: string, filePath: string, dataType: string, outputKey?: string) => {\n    dispatch(setRoiItemFilePath({ itemId, nodeId, filePath, outputKey }))\n  }\n  return (\n    <FilePathSelect\n      selectedFilePath={roiItemFilePath}\n      selectedNodeId={roiItemNodeId}\n      onSelect={onSelectRoiFilePath}\n      dataType={DATA_TYPE_SET.ROI}\n      label={'Select Roi'}\n    />\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { selectVisualizeItemLayout } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nimport { VisualizeItemAddButton } from './VisualizeItemAddButton'\nimport { VisualizeItem } from './VisualizeItem'\n\nexport const FlexItemList: React.FC = () => {\n  const layout = useSelector(selectVisualizeItemLayout, twoDimarrayEqualityFn)\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"column\" p={1} m={1}>\n      {layout.map((row) => (\n        <Box display=\"flex\" flexDirection=\"row\">\n          {row.map((itemId) => (\n            <VisualizeItem itemId={itemId} key={itemId} />\n          ))}\n        </Box>\n      ))}\n      <VisualizeItemAddButton />\n    </Box>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { GradientPickerPopover } from 'react-linear-gradient-picker'\nimport { SketchPicker } from 'react-color'\nimport { PALETTE_COLOR_SHAPE_TYPE } from 'react-linear-gradient-picker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const GradientColorPicker = React.memo<{\n  colors: { rgb: string; offset: string }[]\n  dispatchSetColor: (colorCode: ColorType[]) => void\n}>(({ colors, dispatchSetColor }) => {\n  const palette: PALETTE_COLOR_SHAPE_TYPE[] = colors.map((value) => {\n    return {\n      offset: value.offset,\n      color: value.rgb,\n    }\n  })\n\n  const onPaletteChange = (palette: PALETTE_COLOR_SHAPE_TYPE[]) => {\n    const colorCode = palette.map((value) => {\n      const color = value.color\n      const rgbStr = color.replace(/[^0-9,]/g, '').split(',')\n      const rgb = {\n        r: Number(rgbStr[0]),\n        g: Number(rgbStr[1]),\n        b: Number(rgbStr[2]),\n      }\n      return {\n        rgb: `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`,\n        offset: value.offset,\n      }\n    })\n    dispatchSetColor(colorCode)\n  }\n\n  const [open, setOpen] = useState(false)\n\n  return (\n    <GradientPickerPopover\n      open={open}\n      setOpen={() => setOpen(!open)}\n      // showAnglePicker={true}\n      width={150}\n      maxStops={10}\n      paletteHeight={25}\n      palette={palette}\n      onPaletteChange={onPaletteChange}\n      flatStyle={true}\n    >\n      <WrappedSketchPicker />\n    </GradientPickerPopover>\n  )\n})\n\ntype WrapperPropTypes = {\n  onSelect?: (color: string, opacity?: number) => void\n  color?: string\n}\n\nconst WrappedSketchPicker: React.FC<WrapperPropTypes> = ({\n  onSelect,\n  color,\n}) => {\n  return (\n    <SketchPicker\n      color={color}\n      width=\"150px\"\n      // styles={{width: \"10px\"}}\n      onChange={(c) => {\n        const { r, g, b, a } = c.rgb\n        onSelect?.(`rgb(${r}, ${g}, ${b})`, a)\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport TextField from '@mui/material/TextField'\n\nimport {\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setSaveFileName,\n  setSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\n\nexport const SaveFig: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(setSaveFormat({ itemId, saveFormat: event.target.value }))\n  }\n  const onChangeFileName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setSaveFileName({ itemId, saveFileName: event.target.value }))\n  }\n\n  return (\n    <>\n      <h3>SaveFig</h3>\n      <FormControl\n        variant=\"standard\"\n        sx={{ minWidth: 120, width: '100%', marginBottom: 1 }}\n      >\n        <InputLabel>format</InputLabel>\n        <Select label=\"smooth\" value={saveFormat} onChange={handleChange}>\n          <MenuItem value={'svg'}>svg</MenuItem>\n          <MenuItem value={'png'}>png</MenuItem>\n          <MenuItem value={'jpeg'}>jpeg</MenuItem>\n          <MenuItem value={'webp'}>webp</MenuItem>\n        </Select>\n      </FormControl>\n      <TextField\n        style={{ width: '100%' }}\n        label={'Filename'}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeFileName}\n        value={saveFileName}\n      />\n    </>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Switch from '@mui/material/Switch'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\n\nimport {\n  selectImageItemShowGrid,\n  selectImageItemShowLine,\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemFilePath,\n  selectDisplayDataIsSingle,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setImageItemShowGrid,\n  setImageItemShowLine,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowScale,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemColors,\n  resetImageActiveIndex,\n  setImageItemRoiAlpha,\n  setImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\nimport { FileSelectImple } from 'components/FlowChart/FlowChartNode/FileSelect'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { Box, TextField } from '@mui/material'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\nimport Button from '@mui/material/Button'\nimport { getImageData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { SaveFig } from './SaveFig'\n\nexport const ImageItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectImageFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.IMAGE,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.IMAGE })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  const colors = useSelector(selectImageItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setImageItemColors({ itemId, colors: colorCode }))\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectImageFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.IMAGE}\n        selectButtonLabel=\"Select Image\"\n      />\n      <StartEndIndex />\n      <Showticklabels />\n      <ShowLine />\n      <ShowGrid />\n      <ShowScale />\n      <Zsmooth />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <Alpha />\n      <RoiAlpha />\n      <SaveFig />\n    </div>\n  )\n}\n\nconst Showticklabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setImageItemShowticklabels({ itemId, showticklabels: !showticklabels }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"Showticklabels\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"ShowLine\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"ShowGrid\"\n    />\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"ShowScale\"\n    />\n  )\n}\n\nconst Zsmooth: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string | boolean>) => {\n    dispatch(setImageItemZsmooth({ itemId, zsmooth: event.target.value }))\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>smooth</InputLabel>\n      <Select label=\"smooth\" value={zsmooth} onChange={handleChange}>\n        <MenuItem value={'best'}>best</MenuItem>\n        <MenuItem value={'fast'}>fast</MenuItem>\n        <MenuItem value={'false'}>False</MenuItem>\n      </Select>\n    </FormControl>\n  )\n}\n\nconst Alpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const inputError = !(alpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemAlpha({ itemId, alpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        style={{ width: '100%' }}\n        label={'image alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={alpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst RoiAlpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const inputError = !(roiAlpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemRoiAlpha({ itemId, roiAlpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        style={{ width: '100%' }}\n        label={'roi alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={roiAlpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst StartEndIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const [startIndex, onChangeStartIndex] = React.useState(\n    useSelector(selectImageItemStartIndex(itemId)),\n  )\n  const [endIndex, onChangeEndIndex] = React.useState(\n    useSelector(selectImageItemEndIndex(itemId)),\n  )\n  const inputError = !(startIndex > 0)\n  const dispatch = useDispatch()\n  const onStartChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeStartIndex(newValue)\n    }\n  }\n  const onEndChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeEndIndex(newValue)\n    }\n  }\n\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n  const onClickButton = () => {\n    if (startIndex > 0) {\n      dispatch(setImageItemStartIndex({ itemId, startIndex }))\n      dispatch(setImageItemEndIndex({ itemId, endIndex }))\n      dispatch(resetImageActiveIndex({ itemId, startIndex, endIndex }))\n      if (filePath !== null) {\n        dispatch(\n          getImageData({\n            path: filePath,\n            startIndex: startIndex ?? 1,\n            endIndex: endIndex ?? 10,\n          }),\n        )\n      }\n    }\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>\n      <TextField\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 1,\n          min: 0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onStartChange}\n        value={startIndex}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n      ~\n      <TextField\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onEndChange}\n        value={endIndex}\n      />\n      <Button\n        size=\"small\"\n        className=\"ctrl_btn\"\n        variant=\"contained\"\n        onClick={onClickButton}\n      >\n        load\n      </Button>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FileSelectImple } from 'components/FlowChart/FlowChartNode/FileSelect'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { FormControlLabel, Switch, TextField } from '@mui/material'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const CsvItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const dispatch = useDispatch()\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.CSV,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.CSV })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.CSV}\n        selectButtonLabel=\"Select CSV\"\n      />\n      <Transpose />\n      <SetHeader />\n      <SetIndex />\n    </div>\n  )\n}\n\nconst Transpose: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemTranspose({ itemId, transpose: !transpose }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={transpose} onChange={toggleChecked} />}\n      label=\"transpose\"\n    />\n  )\n}\n\nconst SetHeader: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeSetHeader = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value === '' ? null : Number(event.target.value)\n    if (newValue === null || newValue >= 0) {\n      dispatch(setCsvItemSetHeader({ itemId, setHeader: newValue }))\n    }\n  }\n\n  return (\n    <>\n      <TextField\n        label=\"header\"\n        sx={{\n          width: 100,\n          margin: (theme) => theme.spacing(0, 1, 0, 1),\n        }}\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeSetHeader}\n        value={setHeader}\n      />\n    </>\n  )\n}\n\nconst SetIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemSetIndex({ itemId, setIndex: !setIndex }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={setIndex} onChange={toggleChecked} />}\n      label=\"setIndex\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FormControlLabel, Switch } from '@mui/material'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setHeatMapItemColors,\n  setHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { SaveFig } from './SaveFig'\n\nexport const HeatmapItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const colors = useSelector(selectHeatMapItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setHeatMapItemColors({ itemId, colors: colorCode }))\n  }\n  return (\n    <>\n      <ShowScale />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <SaveFig />\n    </>\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setHeatMapItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"showscale\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  AccordionDetails,\n  AccordionSummary,\n  FormControlLabel,\n  Switch,\n  TextField,\n} from '@mui/material'\nimport Box from '@mui/material/Box'\nimport Checkbox from '@mui/material/Checkbox'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectTimeSeriesItemFilePath,\n  selectTimeSeriesItemKeys,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemDrawOrderList,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  getTimeSeriesAllData,\n  getTimeSeriesDataById,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { Accordion } from 'components/common/Accordion'\n\nimport { SaveFig } from './SaveFig'\n\nexport const TimeSeriesItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <Offset />\n      <Span />\n      <ShowGrid />\n      <ShowLine />\n      <ShowTickLabels />\n      <ZeroLine />\n      <Xrange />\n      <LegendSelect />\n      <SaveFig />\n    </div>\n  )\n}\n\nconst Offset: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemOffset({ itemId, offset: !offset }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={offset} onChange={toggleChecked} />}\n      label=\"offset\"\n    />\n  )\n}\n\nconst Span: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n\n  const dispatch = useDispatch()\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number' && newValue > 0) {\n      dispatch(setTimeSeriesItemSpan({ itemId, span: newValue }))\n    }\n  }\n  return (\n    <FormControlLabel\n      control={\n        <TextField\n          type=\"number\"\n          style={{ width: '6vw' }}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={onChange}\n          defaultValue={span}\n        />\n      }\n      label=\"offset std\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"showgrid\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"showline\"\n    />\n  )\n}\n\nconst ShowTickLabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setTimeSeriesItemShowTickLabels({\n        itemId,\n        showticklabels: !showticklabels,\n      }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"showticklabels\"\n    />\n  )\n}\n\nconst ZeroLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemZeroLine({ itemId, zeroline: !zeroline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={zeroline} onChange={toggleChecked} />}\n      label=\"zeroline\"\n    />\n  )\n}\n\nconst Xrange: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeLeft = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newLeft = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newLeft === 'number') {\n      dispatch(setTimeSeriesItemXrangeLeft({ itemId, left: newLeft }))\n    }\n  }\n  const onChangeRight = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newRight = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newRight === 'number') {\n      dispatch(setTimeSeriesItemXrangeRight({ itemId, right: newRight }))\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <>\n          <TextField\n            label=\"left\"\n            style={{ width: 50 }}\n            type=\"number\"\n            inputProps={{\n              step: 1,\n              min: 0,\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeLeft}\n            defaultValue={xrange.left}\n          />\n          <TextField\n            label=\"right\"\n            style={{ width: 50 }}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeRight}\n            defaultValue={xrange.right}\n          />\n        </>\n      }\n      label=\"\"\n    />\n  )\n}\n\nconst LegendSelect: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  // const drawIndexMap = useSelector(selectTimeSeriesItemDrawIndexMap(itemId))\n  const dataKeys = useSelector(\n    selectTimeSeriesItemKeys(itemId),\n    arrayEqualityFn,\n  )\n  const drawOrderList = useSelector(\n    selectTimeSeriesItemDrawOrderList(itemId),\n    arrayEqualityFn,\n  )\n  const filePath = useSelector(selectTimeSeriesItemFilePath(itemId))\n\n  const allHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: event.target.checked ? dataKeys : [],\n      }),\n    )\n\n    if (event.target.checked && filePath !== null) {\n      dispatch(getTimeSeriesAllData({ path: filePath }))\n    }\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const index = event.target.value\n    const newDrawOrderList = event.target.checked\n      ? [...drawOrderList, index]\n      : drawOrderList.filter((value) => value !== index)\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    if (filePath !== null) {\n      dispatch(getTimeSeriesDataById({ path: filePath, index: index }))\n    }\n  }\n\n  const drawIndexMap = Object.fromEntries(\n    dataKeys.map((v) => {\n      if (drawOrderList.includes(v)) {\n        return [v, true]\n      } else {\n        return [v, false]\n      }\n    }),\n  )\n\n  const children = (\n    <Box sx={{ display: 'flex', flexDirection: 'column', ml: 3 }}>\n      {dataKeys.map((key) => (\n        <FormControlLabel\n          key={`${key}`}\n          label={`Index ${key}`}\n          control={\n            <Checkbox\n              checked={drawIndexMap[key]}\n              onChange={handleChange}\n              value={key}\n            />\n          }\n        />\n      ))}\n    </Box>\n  )\n\n  return (\n    <Accordion sx={{ mt: 2 }} TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        Legend select\n      </AccordionSummary>\n      <AccordionDetails>\n        <>\n          <FormControlLabel\n            label=\"All Check\"\n            control={\n              <Checkbox\n                checked={Object.values(drawIndexMap).every((v) => {\n                  return v\n                })}\n                onChange={allHandleChange}\n              />\n            }\n          />\n          {children}\n        </>\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","import React from 'react'\n// import { useSelector, useDispatch } from 'react-redux'\n// import { SelectedItemIdContext } from '../VisualizeItemEditor'\n// import { selectRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n// import { setRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n// import { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\n// import { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n// import { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const RoiItemEditor: React.FC = () => {\n  // const itemId = React.useContext(SelectedItemIdContext)\n  // const dispatch = useDispatch()\n  // const { onUploadFile } = useFileUploader(FILE_TYPE_SET.CSV)\n  // const onUploadFileHandle = (formData: FormData, fileName: string) => {\n  //   onUploadFile(formData, fileName)\n  // }\n\n  // const colors = useSelector(selectRoiItemColors(itemId))\n  // const dispathSetColor = (colorCode: ColorType[]) => {\n  //   dispatch(setRoiItemColors({ itemId, colors: colorCode }))\n  // }\n\n  return (\n    <>\n      {/* <GradientColorPicker /> */}\n      {/* <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} /> */}\n    </>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const ScatterItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const BarItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport {\n  selectSelectedVisualizeItemId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { ImageItemEditor } from './Editor/ImageItemEditor'\nimport { CsvItemEditor } from './Editor/CsvItemEditor'\nimport { HeatmapItemEditor } from './Editor/HeatmapItemEditor'\nimport { TimeSeriesItemEditor } from './Editor/TimeSeriesItemEditor'\nimport { RoiItemEditor } from './Editor/RoiItemEditor'\nimport { ScatterItemEditor } from './Editor/ScatterItemEditor'\nimport { BarItemEditor } from './Editor/BarItemEditor'\n\nexport const VisualizeItemEditor = () => {\n  const selectedItemId = useSelector(selectSelectedVisualizeItemId)\n  return (\n    <>\n      {selectedItemId != null ? (\n        <SelectedItemIdContext.Provider value={selectedItemId}>\n          <Box m={1}>\n            <DisplayDataItemEditor />\n          </Box>\n        </SelectedItemIdContext.Provider>\n      ) : (\n        'Please select item...'\n      )}\n    </>\n  )\n}\n\nexport const SelectedItemIdContext = React.createContext<number>(NaN)\n\nconst DisplayDataItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <div style={{ marginTop: 8 }}>\n      <DisplayEditor dataType={dataType} />\n    </div>\n  )\n}\n\nconst DisplayEditor: React.FC<{\n  dataType: DATA_TYPE | null\n}> = ({ dataType }) => {\n  /* 他のtypeのEditorも必要になったら追加する */\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return <ImageItemEditor />\n    case DATA_TYPE_SET.CSV:\n      return <CsvItemEditor />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatmapItemEditor />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesItemEditor />\n    case DATA_TYPE_SET.ROI:\n      return <RoiItemEditor />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterItemEditor />\n    case DATA_TYPE_SET.BAR:\n      return <BarItemEditor />\n    case DATA_TYPE_SET.HTML:\n      return <div>html editor</div>\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport { default as MuiToolbar } from '@mui/material/Toolbar'\nimport { styled } from '@mui/material/styles'\nimport { drawerWidth } from 'components/FlowChart/FlowChart'\nimport { FlexItemList } from './FlexItemList'\nimport { VisualizeItemEditor } from './VisualizeItemEditor'\n\nconst Visualize: React.FC = () => {\n  return (\n    <RootDiv>\n      <StyledDrawer variant=\"permanent\">\n        <MuiToolbar />\n        <StyledDrawerContents>\n          <VisualizeItemEditor />\n        </StyledDrawerContents>\n      </StyledDrawer>\n      <MainContents>\n        <MuiToolbar />\n        <FlexItemList />\n      </MainContents>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n})\n\nconst StyledDrawer = styled(Drawer)({\n  width: drawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n})\n\nconst StyledDrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')({\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n  height: '100vh',\n})\n\nexport default Visualize\n","import { RootState } from 'store/store'\nimport { EXPERIMENTS_STATUS } from './ExperimentsType'\n\nconst selectExperiments = (state: RootState) => state.experiments\n\nexport const selectExperimentsSatusIsUninitialized = (state: RootState) =>\n  selectExperiments(state).status === 'uninitialized'\n\nexport const selectExperimentsSatusIsPending = (state: RootState) =>\n  selectExperiments(state).status === 'pending'\n\nexport const selectExperimentsSatusIsFulfilled = (state: RootState) =>\n  selectExperiments(state).status === 'fulfilled'\n\nexport const selectExperimentsSatusIsError = (state: RootState) =>\n  selectExperiments(state).status === 'error'\n\nexport const selectExperimentsErrorMessage = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'error') {\n    return experiments.message\n  } else {\n    throw new Error('experiments status is not error')\n  }\n}\n\nexport const selectExperimentList = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'fulfilled') {\n    return experiments.experimentList\n  } else {\n    throw new Error('experiments status is not fulfilled')\n  }\n}\n\nexport const selectExperimentUidList = (state: RootState) =>\n  Object.keys(selectExperimentList(state))\n\nexport const selectExperiment = (uid: string) => (state: RootState) =>\n  selectExperimentList(state)[uid]\n\nexport const selectExperimentTimeStamp = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).timestamp\n\nexport const selectExperimentName = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).name\n\nexport const selectExperimentHasNWB = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).hasNWB\n\nexport const selectExperimentStatus =\n  (uid: string) =>\n  (state: RootState): EXPERIMENTS_STATUS => {\n    const functions = selectExperimentList(state)[uid].functions\n    const statusList = Object.values(functions).map((f) => f.status)\n    if (statusList.findIndex((status) => status === 'error') >= 0) {\n      return 'error'\n    } else if (statusList.findIndex((status) => status === 'running') >= 0) {\n      return 'running'\n    } else {\n      return 'success'\n    }\n  }\n\nexport const selectExperimentCheckList =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionNodeIdList =\n  (uid: string) => (state: RootState) =>\n    Object.keys(selectExperimentList(state)[uid].functions)\n\nexport const selectExperimentFunction =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentList(state)[uid].functions[nodeId]\n\nexport const selectExperimentFunctionName =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).name\n\nexport const selectExperimentFunctionStatus =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionHasNWB =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).hasNWB\n","import React from 'react'\nimport DoneIcon from '@mui/icons-material/Done'\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline'\nimport HorizontalRuleIcon from '@mui/icons-material/HorizontalRule'\n\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport const ExperimentStatusIcon = React.memo<{ status: EXPERIMENTS_STATUS }>(\n  ({ status }) => {\n    switch (status) {\n      case 'error':\n        return <ErrorOutlineIcon color=\"error\" />\n      case 'success':\n        return <DoneIcon color=\"success\" />\n      case 'running':\n        return <HorizontalRuleIcon color=\"inherit\" />\n    }\n  },\n)\n","import React, { useState, useRef } from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport GetAppIcon from '@mui/icons-material/GetApp'\n\nimport {\n  downloadExperimentConfigApi,\n  downloadExperimentNwbApi,\n} from 'api/experiments/Experiments'\n\nimport { ExperimentUidContext } from '../ExperimentTable'\n\nexport const NWBDownloadButton = React.memo<{\n  name: string\n  nodeId?: string\n  hasNWB: boolean\n}>(({ name, nodeId, hasNWB }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n\n  const onClick = async () => {\n    try {\n      const responseData = await downloadExperimentNwbApi(uid, nodeId)\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      throw new Error('Download Error')\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick} color=\"primary\" disabled={!hasNWB}>\n        <GetAppIcon />\n      </IconButton>\n      <a href={url} download={`${name}.nwb`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n\nexport const ConfigDownloadButton = React.memo(() => {\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n\n  const onClick = async () => {\n    try {\n      const responseData = await downloadExperimentConfigApi(uid)\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      throw new Error('Download Error')\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick}>\n        <GetAppIcon color=\"primary\" />\n      </IconButton>\n      <a href={url} download={`config.yaml`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport Collapse from '@mui/material/Collapse'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Typography from '@mui/material/Typography'\n\nimport { ExperimentUidContext } from './ExperimentTable'\nimport {\n  selectExperimentFunctionHasNWB,\n  selectExperimentFunctionName,\n  selectExperimentFunctionNodeIdList,\n  selectExperimentFunctionStatus,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { NWBDownloadButton } from './Button/DownloadButton'\n\nexport const CollapsibleTable = React.memo<{\n  open: boolean\n}>(({ open }) => {\n  return (\n    <TableRow>\n      <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={10}>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Box margin={1}>\n            <Typography variant=\"h6\" gutterBottom component=\"div\">\n              Details\n            </Typography>\n            <Table size=\"small\" aria-label=\"purchases\">\n              <Head />\n              <Body />\n            </Table>\n          </Box>\n        </Collapse>\n      </TableCell>\n    </TableRow>\n  )\n})\n\nconst Head = React.memo(() => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>Function</TableCell>\n        <TableCell>nodeID</TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>NWB</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst Body = React.memo(() => {\n  const uid = React.useContext(ExperimentUidContext)\n  const nodeIdList = useSelector(\n    selectExperimentFunctionNodeIdList(uid),\n    arrayEqualityFn,\n  )\n  return (\n    <TableBody>\n      {nodeIdList.map((nodeId) => (\n        <TableRowOfFunction nodeId={nodeId} />\n      ))}\n    </TableBody>\n  )\n})\n\nconst TableRowOfFunction = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const name = useSelector(selectExperimentFunctionName(uid, nodeId))\n  const status = useSelector(selectExperimentFunctionStatus(uid, nodeId))\n  const hasNWB = useSelector(selectExperimentFunctionHasNWB(uid, nodeId))\n\n  return (\n    <TableRow key={nodeId}>\n      <TableCell component=\"th\" scope=\"row\">\n        {name}\n      </TableCell>\n      <TableCell>{nodeId}</TableCell>\n      <TableCell>\n        <ExperimentStatusIcon status={status} />\n      </TableCell>\n      <TableCell>\n        <NWBDownloadButton name={name} nodeId={nodeId} hasNWB={hasNWB} />\n      </TableCell>\n    </TableRow>\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport IconButton from '@mui/material/IconButton'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline'\nimport { selectExperimentName } from 'store/slice/Experiments/ExperimentsSelectors'\nimport { deleteExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineIsStartedSuccess,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\n\nexport const DeleteButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const uid = React.useContext(ExperimentUidContext)\n  const isRunning = useSelector((state: RootState) => {\n    const currentUid = selectPipelineLatestUid(state)\n    const isPending = selectPipelineIsStartedSuccess(state)\n    return uid === currentUid && isPending\n  })\n  const name = useSelector(selectExperimentName(uid))\n  const [open, setOpen] = React.useState(false)\n\n  const onClickOpen = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(deleteExperimentByUid(uid))\n  }\n  return (\n    <>\n      <IconButton onClick={onClickOpen} disabled={isRunning} color=\"error\">\n        <DeleteOutlineIcon />\n      </IconButton>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete {name}?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport { useSnackbar } from 'notistack'\nimport { importExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { AppDispatch } from 'store/store'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport ReplyIcon from '@mui/icons-material/Reply'\nimport { reset } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const ImportButton = React.memo(() => {\n  const dispatch: AppDispatch = useDispatch()\n  const uid = React.useContext(ExperimentUidContext)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = () => {\n    dispatch(importExperimentByUid(uid))\n      .unwrap()\n      .then(() => {\n        enqueueSnackbar('Successfully imported.', { variant: 'success' })\n        dispatch(reset())\n      })\n  }\n  return (\n    <IconButton onClick={onClick}>\n      <ReplyIcon />\n    </IconButton>\n  )\n})\n","import React, { ChangeEvent, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\nimport Alert from '@mui/material/Alert'\nimport AlertTitle from '@mui/material/AlertTitle'\nimport IconButton from '@mui/material/IconButton'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport TablePagination from '@mui/material/TablePagination'\nimport Paper from '@mui/material/Paper'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport ReplayIcon from '@mui/icons-material/Replay'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport Checkbox from '@mui/material/Checkbox'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport TableSortLabel from '@mui/material/TableSortLabel'\nimport Typography from '@mui/material/Typography'\n\nimport { CollapsibleTable } from './CollapsibleTable'\nimport {\n  selectExperimentsSatusIsUninitialized,\n  selectExperimentsSatusIsFulfilled,\n  selectExperimentTimeStamp,\n  selectExperimentName,\n  selectExperimentStatus,\n  selectExperimentsSatusIsError,\n  selectExperimentsErrorMessage,\n  selectExperimentList,\n  selectExperimentHasNWB,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport {\n  deleteExperimentByList,\n  getExperiments,\n} from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { Experiment } from 'store/slice/Experiments/ExperimentsType'\nimport { DeleteButton } from './Button/DeleteButton'\nimport {\n  NWBDownloadButton,\n  ConfigDownloadButton,\n} from './Button/DownloadButton'\nimport { ImportButton } from './Button/ImportButton'\nimport { useLocalStorage } from 'components/utils/LocalStorageUtil'\nimport { styled } from '@mui/material/styles'\nimport { renameExperiment } from 'api/experiments/Experiments'\n\nexport const ExperimentUidContext = React.createContext<string>('')\n\nexport const ExperimentTable: React.FC = () => {\n  const isUninitialized = useSelector(selectExperimentsSatusIsUninitialized)\n  const isFulfilled = useSelector(selectExperimentsSatusIsFulfilled)\n  const isError = useSelector(selectExperimentsSatusIsError)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (isUninitialized) {\n      dispatch(getExperiments())\n    }\n  }, [dispatch, isUninitialized])\n\n  if (isFulfilled) {\n    return <TableImple />\n  } else if (isError) {\n    return <ExperimentsErrorView />\n  } else {\n    return null\n  }\n}\n\nconst ExperimentsErrorView: React.FC = () => {\n  const message = useSelector(selectExperimentsErrorMessage)\n  return (\n    <Alert severity=\"error\">\n      <AlertTitle>failed to get experiments...</AlertTitle>\n      {message}\n    </Alert>\n  )\n}\n\nconst LOCAL_STORAGE_KEY_PER_PAGE = 'optinist_experiment_table_per_page'\n\nconst TableImple = React.memo(() => {\n  const experimentList = useSelector(selectExperimentList)\n  const experimentListValues = Object.values(experimentList)\n  const experimentListKeys = Object.keys(experimentList)\n  const dispatch = useDispatch()\n  const onClickReload = () => {\n    dispatch(getExperiments())\n  }\n  const [order, setOrder] = React.useState<Order>('asc')\n  const [sortTarget, setSortTarget] =\n    React.useState<keyof Experiment>('timestamp')\n  const sortHandler =\n    (property: keyof Experiment) => (event: React.MouseEvent<unknown>) => {\n      const isAsc = sortTarget === property && order === 'asc'\n      setOrder(isAsc ? 'desc' : 'asc')\n      setSortTarget(property)\n    }\n\n  const [checkedList, setCheckedList] = useState<string[]>([])\n  const [open, setOpen] = React.useState(false)\n\n  const onCheckBoxClick = (uid: string) => {\n    if (checkedList.includes(uid)) {\n      setCheckedList(checkedList.filter((v) => v !== uid))\n    } else {\n      setCheckedList([...checkedList, uid])\n    }\n  }\n\n  const onChangeAllCheck = (checked: boolean) => {\n    if (checked) {\n      setCheckedList(experimentListValues.map((experiment) => experiment.uid))\n    } else {\n      setCheckedList([])\n    }\n  }\n\n  const recordsIsEmpty = experimentListKeys.length === 0\n\n  const onClickDelete = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    dispatch(deleteExperimentByList(checkedList))\n    setCheckedList([])\n    setOpen(false)\n  }\n\n  const [page, setPage] = React.useState(0)\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage)\n  }\n\n  const [rowsPerPage, setRowsPerPage] = useLocalStorage(\n    LOCAL_STORAGE_KEY_PER_PAGE,\n    10,\n    (value) => {\n      const valueNum = Number(value)\n      return isNaN(valueNum) ? 10 : valueNum\n    },\n  )\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const newValue = parseInt(event.target.value, 10)\n    setRowsPerPage(newValue)\n    setPage(0)\n  }\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0\n      ? Math.max(0, (1 + page) * rowsPerPage - experimentListKeys.length)\n      : 0\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          alignItems: 'center',\n        }}\n      >\n        {!recordsIsEmpty && (\n          <Typography sx={{ flexGrow: 1, m: 1 }}>\n            {checkedList.length} selected\n          </Typography>\n        )}\n        <Button\n          sx={{\n            margin: (theme) => theme.spacing(0, 1, 1, 0),\n          }}\n          variant=\"outlined\"\n          endIcon={<ReplayIcon />}\n          onClick={onClickReload}\n        >\n          Reload\n        </Button>\n        <Button\n          sx={{\n            marginBottom: (theme) => theme.spacing(1),\n          }}\n          variant=\"outlined\"\n          color=\"error\"\n          endIcon={<DeleteIcon />}\n          onClick={onClickDelete}\n          disabled={checkedList.length === 0}\n        >\n          Delete\n        </Button>\n      </Box>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Paper\n        elevation={0}\n        variant=\"outlined\"\n        sx={{\n          flexGlow: 1,\n          height: '100%',\n        }}\n      >\n        <TableContainer component={Paper} elevation={0}>\n          <Table aria-label=\"collapsible table\">\n            <HeadItem\n              order={order}\n              sortHandler={sortHandler}\n              allCheckIndeterminate={\n                checkedList.length !== 0 &&\n                checkedList.length !== Object.keys(experimentList).length\n              }\n              allChecked={\n                checkedList.length === Object.keys(experimentList).length\n              }\n              onChangeAllCheck={onChangeAllCheck}\n              checkboxVisible={!recordsIsEmpty}\n            />\n            <TableBody>\n              {experimentListValues\n                .sort(getComparator(order, sortTarget))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((expData) => (\n                  <ExperimentUidContext.Provider\n                    value={expData.uid}\n                    key={expData.uid}\n                  >\n                    <RowItem\n                      onCheckBoxClick={onCheckBoxClick}\n                      checked={checkedList.includes(expData.uid)}\n                    />\n                  </ExperimentUidContext.Provider>\n                ))}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: 53 * emptyRows,\n                  }}\n                >\n                  <TableCell colSpan={10} />\n                </TableRow>\n              )}\n              {recordsIsEmpty && (\n                <TableRow>\n                  <TableCell colSpan={10}>\n                    <Typography\n                      sx={{\n                        color: (theme) => theme.palette.text.secondary,\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        height: '300px',\n                        textAlign: 'center',\n                      }}\n                      variant=\"h6\"\n                    >\n                      No Rows...\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={experimentListKeys.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Box>\n  )\n})\n\nconst HeadItem = React.memo<{\n  order: Order\n  sortHandler: any\n  allChecked: boolean\n  onChangeAllCheck: (checked: boolean) => void\n  allCheckIndeterminate: boolean\n  checkboxVisible: boolean\n}>(\n  ({\n    order,\n    sortHandler,\n    allChecked,\n    onChangeAllCheck,\n    allCheckIndeterminate,\n    checkboxVisible,\n  }) => {\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              sx={{ visibility: checkboxVisible ? 'visible' : 'hidden' }}\n              checked={allChecked}\n              indeterminate={allCheckIndeterminate}\n              onChange={(e) => onChangeAllCheck(e.target.checked)}\n            />\n          </TableCell>\n          <TableCell />\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('timestamp')}\n            >\n              Timestamp\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('uid')}\n            >\n              ID\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('name')}\n            >\n              Name\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>Success</TableCell>\n          <TableCell>Reproduce</TableCell>\n          <TableCell>SnakeFile</TableCell>\n          <TableCell>NWB</TableCell>\n          <TableCell>Delete</TableCell>\n        </TableRow>\n      </TableHead>\n    )\n  },\n)\n\nconst RowItem = React.memo<{\n  onCheckBoxClick: (uid: string) => void\n  checked: boolean\n}>(({ onCheckBoxClick, checked }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const timestamp = useSelector(selectExperimentTimeStamp(uid))\n  const status = useSelector(selectExperimentStatus(uid))\n  const name = useSelector(selectExperimentName(uid))\n  const hasNWB = useSelector(selectExperimentHasNWB(uid))\n  const [open, setOpen] = React.useState(false)\n  const [isEdit, setEdit] = useState(false)\n  const [errorEdit, setErrorEdit] = useState('')\n  const [valueEdit, setValueEdit] = useState(name)\n  const dispatch = useDispatch()\n\n  const onBlurEdit = (event: any) => {\n    event.preventDefault()\n    if (errorEdit) return\n    setTimeout(() => {\n      setEdit(false)\n      onSaveNewName()\n    }, 300)\n  }\n\n  const onEdit = (event: any) => {\n    if (isEdit || errorEdit) return\n    event.preventDefault()\n    setEdit(true)\n  }\n\n  const onChangeName = (event: ChangeEvent<HTMLInputElement>) => {\n    let errorEdit = ''\n    if (!event.target.value.trim()) {\n      errorEdit = 'Name is empty'\n    }\n    setErrorEdit(errorEdit)\n    setValueEdit(event.target.value)\n  }\n\n  const onSaveNewName = async () => {\n    if (valueEdit === name) return\n    await renameExperiment(uid, valueEdit)\n    dispatch(getExperiments())\n  }\n\n  return (\n    <React.Fragment>\n      <TableRow\n        sx={{\n          '& > *': {\n            borderBottom: 'unset',\n          },\n          [`& .${tableCellClasses.root}`]: {\n            borderBottomWidth: 0,\n          },\n        }}\n      >\n        <TableCell padding=\"checkbox\">\n          <Checkbox onChange={() => onCheckBoxClick(uid)} checked={checked} />\n        </TableCell>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {timestamp}\n        </TableCell>\n        <TableCell>{uid}</TableCell>\n        <TableCell sx={{ width: 160, position: 'relative' }} onClick={onEdit}>\n          {!isEdit ? (\n            valueEdit\n          ) : (\n            <>\n              <Input\n                placeholder=\"Name\"\n                error={!!errorEdit}\n                onChange={onChangeName}\n                autoFocus\n                onBlur={onBlurEdit}\n                value={valueEdit}\n              />\n              {errorEdit ? <TextError>{errorEdit}</TextError> : null}\n            </>\n          )}\n        </TableCell>\n        <TableCell>\n          <ExperimentStatusIcon status={status} />\n        </TableCell>\n        <TableCell>\n          <ImportButton />\n        </TableCell>\n        <TableCell>\n          <ConfigDownloadButton />\n        </TableCell>\n        <TableCell>\n          <NWBDownloadButton name={uid} hasNWB={hasNWB} />\n        </TableCell>\n        <TableCell>\n          <DeleteButton />\n        </TableCell>\n      </TableRow>\n      <CollapsibleTable open={open} />\n    </React.Fragment>\n  )\n})\n\nconst Input = styled('input')<{ error: boolean }>(({ error }) => ({\n  width: '100%',\n  border: 'none',\n  borderBottom: '1px solid',\n  outline: 'none',\n  color: error ? '#d32f2f' : '',\n  borderColor: error ? '#d32f2f' : '',\n}))\n\nconst TextError = styled(Typography)(() => ({\n  color: '#d32f2f',\n  fontSize: 12,\n  height: 12,\n  position: 'absolute',\n  bottom: 12,\n}))\n\ntype Order = 'asc' | 'desc'\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string },\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n","import React from 'react'\n\nexport function useLocalStorage<T>(\n  storageKey: string,\n  initialValue: T,\n  parseFn: (value: any) => T,\n): [T, React.Dispatch<React.SetStateAction<T>>] {\n  const [value, setValue] = React.useState(() => {\n    const savedStr = localStorage.getItem(storageKey)\n    if (savedStr != null) {\n      return parseFn(JSON.parse(savedStr))\n    }\n    return initialValue\n  })\n  React.useEffect(() => {\n    localStorage.setItem(storageKey, JSON.stringify(value))\n  }, [value, storageKey])\n  return [value, setValue]\n}\n","import React from 'react'\nimport { default as MuiToolbar } from '@mui/material/Toolbar'\nimport { ExperimentTable } from './ExperimentTable'\n\nconst Experiment = React.memo(() => {\n  return (\n    <div style={{ display: 'flex' }}>\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1,\n          height: '100vh',\n          padding: 16,\n        }}\n      >\n        <MuiToolbar />\n        <ExperimentTable />\n      </main>\n    </div>\n  )\n})\n\nexport default Experiment\n","export default __webpack_public_path__ + \"static/media/optinist.e44efe32.png\";","import React from 'react'\nimport AppBar from '@mui/material/AppBar'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Typography from '@mui/material/Typography'\nimport Toolbar from '@mui/material/Toolbar'\nimport IconButton from '@mui/material/IconButton'\nimport Tooltip from '@mui/material/Tooltip'\nimport { styled } from '@mui/material/styles'\nimport GitHubIcon from '@mui/icons-material/GitHub'\nimport MenuBookIcon from '@mui/icons-material/MenuBook'\n\nimport { useRunPipeline } from 'store/slice/Pipeline/PipelineHook'\nimport FlowChart from './FlowChart/FlowChart'\nimport Visualize from './Visualize/Visualize'\nimport Experiment from './Experiment/Experiment'\nimport optinistLogo from './optinist.png'\n\nconst Layout: React.FC = () => {\n  const [value, setValue] = React.useState(0)\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue)\n  }\n\n  const runPipeline = useRunPipeline() // タブ切り替えによって結果取得処理が止まってしまうのを回避するため、タブの親レイヤーで呼び出している\n\n  return (\n    <RootDiv>\n      <StyledAppBar position=\"fixed\" color=\"inherit\">\n        <Toolbar variant=\"dense\">\n          <img src={optinistLogo} alt=\"optinist\" width={75} height={50} />\n          <Tabs\n            sx={{ width: '100%' }}\n            value={value}\n            onChange={handleChange}\n            centered\n            textColor=\"primary\"\n          >\n            <Tab label=\"Workflow\" {...a11yProps(0)} />\n            <Tab label=\"Visualize\" {...a11yProps(1)} />\n            <Tab label=\"Record\" {...a11yProps(2)} />\n          </Tabs>\n          <Tooltip title=\"GitHub repository\">\n            <IconButton\n              sx={{ mr: 1 }}\n              href=\"https://github.com/oist/optinist\"\n              target=\"_blank\"\n            >\n              <GitHubIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Documentation\">\n            <IconButton\n              href=\"https://optinist.readthedocs.io/en/latest/\"\n              target=\"_blank\"\n            >\n              <MenuBookIcon />\n            </IconButton>\n          </Tooltip>\n        </Toolbar>\n      </StyledAppBar>\n      <TabPanel value={value} index={0}>\n        <FlowChart {...runPipeline} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Visualize />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Experiment />\n      </TabPanel>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  backgroundColor: theme.palette.background.paper,\n}))\n\nconst StyledAppBar = styled(AppBar)(({ theme }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  backgroundColor: '#E1DEDB',\n}))\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: any\n  value: any\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Typography>{children}</Typography>}\n    </div>\n  )\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { selectRunPostData } from 'store/selectors/run/RunSelectors'\nimport {\n  selectPipelineIsCanceled,\n  selectPipelineIsStartedSuccess,\n  selectPipelineLatestUid,\n  selectPipelineStatus,\n} from './PipelineSelectors'\nimport { run, pollRunResult, runByCurrentUid } from './PipelineActions'\nimport { cancelPipeline } from './PipelineSlice'\nimport { selectFilePathIsUndefined } from '../InputNode/InputNodeSelectors'\nimport { selectAlgorithmNodeNotExist } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { useSnackbar } from 'notistack'\nimport { RUN_STATUS } from './PipelineType'\n\nconst POLLING_INTERVAL = 5000\n\nexport type UseRunPipelineReturnType = ReturnType<typeof useRunPipeline>\n\nexport function useRunPipeline() {\n  const dispatch = useDispatch()\n  const uid = useSelector(selectPipelineLatestUid)\n  const isCanceled = useSelector(selectPipelineIsCanceled)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n  const filePathIsUndefined = useSelector(selectFilePathIsUndefined)\n  const algorithmNodeNotExist = useSelector(selectAlgorithmNodeNotExist)\n  const runPostData = useSelector(selectRunPostData)\n  const handleRunPipeline = React.useCallback(\n    (name: string) => {\n      dispatch(run({ runPostData: { name, ...runPostData, forceRunList: [] } }))\n    },\n    [dispatch, runPostData],\n  )\n  const handleRunPipelineByUid = React.useCallback(() => {\n    dispatch(runByCurrentUid({ runPostData }))\n  }, [dispatch, runPostData])\n  const handleCancelPipeline = React.useCallback(() => {\n    if (uid != null) {\n      dispatch(cancelPipeline())\n    }\n  }, [dispatch, uid])\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isStartedSuccess && !isCanceled && uid != null) {\n        dispatch(pollRunResult({ uid: uid }))\n      }\n    }, POLLING_INTERVAL)\n    return () => {\n      clearInterval(intervalId)\n    }\n  }, [dispatch, uid, isCanceled, isStartedSuccess])\n  const status = useSelector(selectPipelineStatus)\n  const { enqueueSnackbar } = useSnackbar()\n  // タブ移動による再レンダリングするたびにスナックバーが実行されてしまう挙動を回避するために前回の値を保持\n  const [prevStatus, setPrevStatus] = React.useState(status)\n  React.useEffect(() => {\n    if (prevStatus !== status) {\n      if (status === RUN_STATUS.FINISHED) {\n        enqueueSnackbar('Finished', { variant: 'success' })\n      } else if (status === RUN_STATUS.ABORTED) {\n        enqueueSnackbar('Aborted', { variant: 'error' })\n      } else if (status === RUN_STATUS.CANCELED) {\n        enqueueSnackbar('Canceled', { variant: 'info' })\n      }\n      setPrevStatus(status)\n    }\n  }, [status, prevStatus, enqueueSnackbar])\n  return {\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    uid,\n    status,\n    isStartedSuccess,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n    handleCancelPipeline,\n  }\n}\n","import React from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport Close from '@mui/icons-material/Close'\nimport { SnackbarProvider, SnackbarKey, useSnackbar } from 'notistack'\n\nimport AppLayout from './components/Layout'\n\nconst App: React.FC = () => {\n  return (\n    <SnackbarProvider\n      maxSnack={5}\n      action={(snackbarKey) => (\n        <SnackbarCloseButton snackbarKey={snackbarKey} />\n      )}\n    >\n      <AppLayout />\n    </SnackbarProvider>\n  )\n}\n\nconst SnackbarCloseButton: React.FC<{ snackbarKey: SnackbarKey }> = ({\n  snackbarKey,\n}) => {\n  const { closeSnackbar } = useSnackbar()\n  return (\n    <IconButton onClick={() => closeSnackbar(snackbarKey)} size=\"large\">\n      <Close style={{ color: 'white' }} />\n    </IconButton>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  ALGORITHM_LIST_SLICE_NAME,\n  AlgorithmListType,\n} from './AlgorithmListType'\nimport { getAlgoList } from './AlgorithmListActions'\nimport { convertToAlgoListType } from './AlgorithmListUtils'\n\nexport const initialState: AlgorithmListType = {\n  isLatest: false,\n  tree: {},\n}\n\nexport const algorithmListSlice = createSlice({\n  name: ALGORITHM_LIST_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlgoList.fulfilled, (state, action) => {\n      state.tree = convertToAlgoListType(action.payload)\n      state.isLatest = true\n    })\n  },\n})\n\nexport default algorithmListSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n  DisplayData,\n  DISPLAY_DATA_SLICE_NAME,\n} from './DisplayDataType'\nimport {\n  getCsvData,\n  getHeatMapData,\n  getImageData,\n  getTimeSeriesDataById,\n  getTimeSeriesAllData,\n  getRoiData,\n  getScatterData,\n  getBarData,\n  getHTMLData,\n  getTimeSeriesInitData,\n} from './DisplayDataActions'\nimport {\n  deleteDisplayItem,\n  setNewDisplayDataPath,\n} from '../VisualizeItem/VisualizeItemActions'\n\nconst initialState: DisplayData = {\n  timeSeries: {},\n  heatMap: {},\n  image: {},\n  csv: {},\n  roi: {},\n  scatter: {},\n  bar: {},\n  html: {},\n}\n\nexport const displayDataSlice = createSlice({\n  name: DISPLAY_DATA_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        if (action.payload.deleteData) {\n          const { filePath, dataType } = action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        if (action.payload.deleteData) {\n          const { prevDataType: dataType, prevFilePath: filePath } =\n            action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(getTimeSeriesDataById.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesDataById.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesDataById.fulfilled, (state, action) => {\n        const { path, index } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].data[index] = action.payload.data[index]\n        if (action.payload.std[index] !== undefined) {\n          state.timeSeries[path].std[index] = action.payload.std[index]\n        }\n      })\n      .addCase(getTimeSeriesAllData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesAllData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesAllData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        if (action.payload.std !== undefined) {\n          state.timeSeries[path].std = action.payload.std\n        }\n      })\n      .addCase(getTimeSeriesInitData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesInitData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesInitData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        state.timeSeries[path].std = action.payload.std\n      })\n      .addCase(getHeatMapData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHeatMapData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getImageData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getCsvData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getRoiData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getRoiData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        const { data } = action.payload\n\n        // 計算\n        const roi1Ddata: number[] = data[0]\n          .map((row) =>\n            Array.from(new Set(row.filter((value) => value != null))),\n          )\n          .flat()\n        const roiUniqueIdList = Array.from(new Set(roi1Ddata))\n          .sort((n1, n2) => n1 - n2)\n          .map(String)\n\n        state.roi[path] = {\n          type: 'roi',\n          data: data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n          roiUniqueList: roiUniqueIdList,\n        }\n      })\n      .addCase(getRoiData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getScatterData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getBarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n  },\n})\n\nfunction deleteDisplayDataFn(\n  state: DisplayData,\n  filePath: string,\n  dataType: DATA_TYPE,\n) {\n  if (dataType === DATA_TYPE_SET.IMAGE) {\n    delete state.image[filePath]\n  } else if (dataType === DATA_TYPE_SET.TIME_SERIES) {\n    delete state.timeSeries[filePath]\n  } else if (dataType === DATA_TYPE_SET.CSV) {\n    delete state.csv[filePath]\n  } else if (dataType === DATA_TYPE_SET.HEAT_MAP) {\n    delete state.heatMap[filePath]\n    // } else if (dataType === DATA_TYPE_SET.ROI) {\n    //   delete state.roi[filePath]\n  } else if (dataType === DATA_TYPE_SET.SCATTER) {\n    delete state.scatter[filePath]\n  } else if (dataType === DATA_TYPE_SET.BAR) {\n    delete state.bar[filePath]\n  } else if (dataType === DATA_TYPE_SET.HTML) {\n    delete state.html[filePath]\n  }\n}\n\nexport default displayDataSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { FileUploader, FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\nimport { setUploadProgress, uploadFile } from './FileUploaderActions'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nconst initialState: FileUploader = {}\n\nexport const fileUploaderSlice = createSlice({\n  name: FILE_UPLOADER_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFileUploaderStateById(state, action: PayloadAction<string>) {\n      state[action.payload] = inistialUploaderState\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(setUploadProgress, (state, action) => {\n        const { progess, requestId } = action.payload\n        state[requestId].uploadingProgress = progess\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileName, requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          fileName,\n          isUninitialized: false,\n          pending: true,\n          fulfilled: false,\n          uploadingProgress: 0,\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { requestId } = action.meta.arg\n        const { resultPath } = action.payload\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          path: resultPath,\n          pending: false,\n          fulfilled: true,\n        }\n      })\n      .addCase(uploadFile.rejected, (state, action) => {\n        const { requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          pending: false,\n          fulfilled: false,\n          error: action.error.message,\n        }\n      })\n  },\n})\n\nexport const { setFileUploaderStateById } = fileUploaderSlice.actions\n\nexport default fileUploaderSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { uploadFile } from 'store/slice/FileUploader/FileUploaderActions'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { getFilesTree } from './FilesTreeAction'\nimport { FilesTree, FILES_TREE_SLICE_NAME } from './FilesTreeType'\nimport { convertToTreeNodeType } from './FilesTreeUtils'\n\nexport const initialState: FilesTree = {}\nexport const filesTreeSlice = createSlice({\n  name: FILES_TREE_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getFilesTree.pending, (state, action) => {\n        const fileType = action.meta.arg\n        state[fileType] = {\n          isLoading: true,\n          isLatest: false,\n          tree: [],\n        }\n      })\n      .addCase(getFilesTree.fulfilled, (state, action) => {\n        const fileTreeType = action.meta.arg\n        state[fileTreeType].tree = convertToTreeNodeType(action.payload)\n        state[fileTreeType].isLatest = true\n        state[fileTreeType].isLoading = false\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          if (state[FILE_TREE_TYPE_SET.IMAGE] != null) {\n            state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.IMAGE] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          if (state[FILE_TREE_TYPE_SET.CSV] != null) {\n            state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.CSV] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          if (state[FILE_TREE_TYPE_SET.HDF5] != null) {\n            state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.HDF5] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else {\n          if (state[FILE_TREE_TYPE_SET.ALL] != null) {\n            state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.ALL] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n        } else {\n          state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n        }\n      })\n  },\n})\n\nexport default filesTreeSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as MuiColors from '@mui/material/colors'\n\nexport type HandleTypeColor = {\n  colorMap: { [type: string]: string }\n  /**\n   * HANDLE_COLOR_PRESET_MAPのkey\n   */\n  nextKey: number\n}\n\nconst initialState: HandleTypeColor = {\n  colorMap: {\n    ImageData: MuiColors.red[500],\n    IscellData: MuiColors.indigo[500],\n    TimeSeriesData: MuiColors.yellow[500],\n    Suite2pData: MuiColors.green[500],\n    FluoData: MuiColors.orange[500],\n    BehaviorData: MuiColors.yellow[500],\n  },\n  nextKey: 0,\n}\n\nconst SLICE_NAME = 'handleTypeColor'\n\nexport const handleTypeColorSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {},\n})\n\nexport default handleTypeColorSlice.reducer\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\nimport { HDF5TreeNodeType } from './HDF5Type'\n\nexport function convertToTreeNodeType(dto: HDF5TreeDTO[]): HDF5TreeNodeType[] {\n  return dto.map((node) =>\n    node.isDir\n      ? {\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n          path: node.path,\n        }\n      : {\n          name: node.name,\n          isDir: false,\n          shape: node.shape,\n          path: node.path,\n          nbytes: node.nbytes,\n        },\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { getHDF5Tree } from './HDF5Action'\nimport { HDF5Tree, HDF5_SLICE_NAME } from './HDF5Type'\nimport { convertToTreeNodeType } from './HDF5Utils'\n\nconst initialState: HDF5Tree = {\n  isLoading: false,\n  tree: [],\n}\nexport const HDF5Slice = createSlice({\n  name: HDF5_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHDF5Tree.pending, (state, action) => {\n        state = {\n          isLoading: true,\n          tree: [],\n        }\n      })\n      .addCase(getHDF5Tree.fulfilled, (state, action) => {\n        state.tree = convertToTreeNodeType(action.payload)\n        state.isLoading = false\n      })\n  },\n})\n\nexport default HDF5Slice.reducer\n","import type { ExperimentDTO, ExperimentsDTO } from 'api/experiments/Experiments'\nimport type {\n  ExperimentListType,\n  ExperimentType,\n  ExperimentFunction,\n  EXPERIMENTS_STATUS,\n} from './ExperimentsType'\n\nexport function convertToExperimentListType(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n\nexport function convertToExperimentType(dto: ExperimentDTO): ExperimentType {\n  const functions: { [nodeId: string]: ExperimentFunction } = {}\n  Object.entries(dto.function).forEach(([_, value]) => {\n    functions[value.unique_id] = {\n      name: value.name,\n      nodeId: value.unique_id,\n      status: convertToExperimentStatus(value.success),\n      hasNWB: value.hasNWB,\n    }\n  })\n  return {\n    uid: dto.unique_id,\n    timestamp: dto.timestamp,\n    name: dto.name,\n    hasNWB: dto.hasNWB,\n    functions,\n  }\n}\n\nfunction convertToExperimentStatus(dto: string): EXPERIMENTS_STATUS {\n  switch (dto) {\n    case 'running':\n      return 'running'\n    case 'success':\n      return 'success'\n    case 'error':\n      return 'error'\n    default:\n      throw new Error('failed to convert to EXPERIMENTS_STATUS')\n  }\n}\n\nexport function convertToFlowChartList(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { EXPERIMENTS_SLICE_NAME, Experiments } from './ExperimentsType'\nimport {\n  getExperiments,\n  deleteExperimentByUid,\n  deleteExperimentByList,\n} from './ExperimentsActions'\nimport { convertToExperimentListType } from './ExperimentsUtils'\nimport {\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from '../Pipeline/PipelineActions'\n\nexport const initialState: Experiments = {\n  status: 'uninitialized',\n}\n\nexport const experimentsSlice = createSlice({\n  name: EXPERIMENTS_SLICE_NAME,\n  initialState: initialState as Experiments,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getExperiments.pending, () => {\n        return {\n          status: 'pending',\n        }\n      })\n      .addCase(getExperiments.fulfilled, (state, action) => {\n        const experimentList = convertToExperimentListType(action.payload)\n        return {\n          status: 'fulfilled',\n          experimentList,\n        }\n      })\n      .addCase(getExperiments.rejected, (state, action) => {\n        return {\n          status: 'error',\n          message: action.error.message,\n        }\n      })\n      .addCase(deleteExperimentByUid.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          delete state.experimentList[action.meta.arg]\n        }\n      })\n      .addCase(deleteExperimentByList.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          action.meta.arg.map((v) => delete state.experimentList[v])\n        }\n      })\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          const uid = action.meta.arg.uid\n          const target = state.experimentList[uid]\n          Object.entries(action.payload).forEach(([nodeId, value]) => {\n            if (value.status === 'success') {\n              target.functions[nodeId].status = 'success'\n            } else if (value.status === 'error') {\n              target.functions[nodeId].status = 'error'\n            }\n          })\n        }\n      })\n      .addMatcher(isAnyOf(run.fulfilled, runByCurrentUid.fulfilled), () => {\n        return {\n          status: 'uninitialized',\n        }\n      })\n  },\n})\n\nexport default experimentsSlice.reducer\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit'\nimport {\n  algorithmListReducer,\n  algorithmNodeReducer,\n  displayDataReducer,\n  fileUploaderReducer,\n  flowElementReducer,\n  inputNodeReducer,\n  nwbReducer,\n  filesTreeReducer,\n  handleTypeColorReducer,\n  rightDrawerReducer,\n  visualaizeItemReducer,\n  snakemakeReducer,\n  pipelineReducer,\n  hdf5Reducer,\n  experimentsReducer,\n} from './slice'\n\nexport const rootReducer = combineReducers({\n  algorithmList: algorithmListReducer,\n  algorithmNode: algorithmNodeReducer,\n  displayData: displayDataReducer,\n  fileUploader: fileUploaderReducer,\n  flowElement: flowElementReducer,\n  inputNode: inputNodeReducer,\n  handleColor: handleTypeColorReducer,\n  filesTree: filesTreeReducer,\n  nwb: nwbReducer,\n  rightDrawer: rightDrawerReducer,\n  visualaizeItem: visualaizeItemReducer,\n  snakemake: snakemakeReducer,\n  pipeline: pipelineReducer,\n  hdf5: hdf5Reducer,\n  experiments: experimentsReducer,\n})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\nexport type ThunkApiConfig<T = unknown, PendingMeta = unknown> = {\n  state: RootState\n  dispatch: AppDispatch\n  rejectValue: T\n  penfingMeta: PendingMeta\n}\n","import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme({\n  components: {\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiSelect: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiDialog: {\n      defaultProps: {\n        disableEscapeKeyDown: true,\n      },\n    },\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from 'store/store'\n\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './Theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}