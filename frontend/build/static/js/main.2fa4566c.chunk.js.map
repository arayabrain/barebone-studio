{"version":3,"sources":["pages/Dashboard/index.tsx","components/common/Loading.tsx","const/Auth.ts","components/common/Input.tsx","components/Account/InputPassword.tsx","components/Account/ChangePasswordModal.tsx","components/common/DeleteConfirmModal.tsx","utils/auth/AuthUtils.ts","api/auth/Auth.ts","const/API.ts","utils/axios.ts","api/users/UsersMe.ts","store/slice/User/UserType.ts","store/slice/User/UserActions.ts","store/slice/User/UserSelector.ts","pages/Account/index.tsx","pages/AccountDelete/index.tsx","pages/Login/index.tsx","pages/ResetPassword/index.tsx","store/slice/Workspace/WorkspaceSelector.ts","pages/Workspace/index.tsx","utils/param/ParamUtils.ts","store/slice/AlgorithmNode/AlgorithmNodeSelectors.ts","store/slice/FlowElement/FlowElementType.ts","store/slice/FlowElement/FlowElementUtils.ts","store/slice/FlowElement/FlowElementSelectors.ts","store/slice/NWB/NWBSelectors.ts","store/slice/Pipeline/PipelineType.ts","store/slice/DisplayData/DisplayDataType.ts","store/slice/DisplayData/DisplayDataUtils.ts","store/slice/Pipeline/PipelineUtils.ts","store/slice/Pipeline/PipelineSelectors.ts","store/slice/Snakemake/SnakemakeSelectors.ts","store/slice/InputNode/InputNodeType.ts","store/slice/InputNode/InputNodeUtils.ts","store/slice/InputNode/InputNodeSelectors.ts","store/slice/Run/RunSelectors.ts","api/run/Run.ts","store/slice/Pipeline/PipelineActions.ts","api/experiments/Experiments.ts","store/slice/Experiments/ExperimentsType.ts","store/slice/Experiments/ExperimentsActions.ts","store/slice/Pipeline/PipelineSlice.ts","store/slice/Experiments/ExperimentsSelectors.ts","components/Workspace/Experiment/ExperimentStatusIcon.tsx","utils/EqualityUtils.ts","components/Workspace/Experiment/Button/DownloadButton.tsx","components/Workspace/Experiment/CollapsibleTable.tsx","components/Workspace/Experiment/Button/DeleteButton.tsx","api/outputs/Outputs.ts","store/slice/DisplayData/DisplayDataActions.ts","store/slice/DisplayData/DisplayDataSelectors.ts","store/slice/VisualizeItem/VisualizeItemType.ts","store/slice/VisualizeItem/VisualizeItemUtils.ts","store/slice/VisualizeItem/VisualizeItemSelectors.ts","store/slice/VisualizeItem/VisualizeItemActions.ts","store/slice/VisualizeItem/VisualizeItemSlice.ts","components/Workspace/Experiment/Button/ImportButton.tsx","components/Workspace/Experiment/ExperimentTable.tsx","components/utils/LocalStorageUtil.ts","components/Workspace/Experiment/Experiment.tsx","store/slice/AlgorithmList/AlgorithmListUtils.ts","store/slice/AlgorithmList/AlgorithmListSelectors.ts","store/slice/AlgorithmList/AlgorithmListType.ts","api/algolist/AlgoList.ts","store/slice/AlgorithmList/AlgorithmListActions.ts","api/params/Params.ts","store/slice/FlowElement/FlowElementActions.ts","utils/nanoid/NanoIdUtils.ts","const/flowchart.ts","components/Workspace/FlowChart/DnDItemType.ts","components/Workspace/FlowChart/TreeView.tsx","store/slice/InputNode/InputNodeActions.ts","api/run/RunUtils.ts","api/files/Files.ts","store/slice/FileUploader/FileUploaderType.ts","store/slice/FileUploader/FileUploaderActions.ts","store/slice/FlowElement/FlowElementSlice.ts","api/nwb/NWB.ts","store/slice/NWB/NWBType.ts","store/slice/NWB/NWBAction.ts","store/slice/NWB/NWBSlice.ts","store/slice/RightDrawer/RightDrawerSlice.ts","components/common/Accordion.tsx","components/common/ParamFormItemCreator.tsx","components/Workspace/FlowChart/NWB.tsx","api/snakemake/Snakemake.ts","store/slice/Snakemake/SnakemakeType.ts","store/slice/Snakemake/SnakemakeAction.ts","store/slice/Snakemake/SnakemakeSlice.ts","components/Workspace/FlowChart/Snakemake.tsx","components/Workspace/RunButtons.tsx","components/Workspace/ToolBar.tsx","components/Workspace/FlowChart/FlowChartNode/HandleColorHook.ts","store/slice/HandleTypeColor/HandleTypeColorSelectors.ts","components/Workspace/FlowChart/FlowChartNode/LinerProgressWithLabel.tsx","store/slice/FileUploader/FileUploaderInitlalState.ts","store/slice/FileUploader/FileUploaderSelectors.ts","store/slice/FileUploader/FileUploaderHook.ts","components/Workspace/FlowChart/DialogContext.tsx","components/Workspace/FlowChart/FlowChartNode/FileSelect.tsx","components/Workspace/FlowChart/FlowChartNode/FlowChartUtils.ts","components/Workspace/FlowChart/FlowChartNode/ImageFileNode.tsx","components/Workspace/FlowChart/FlowChartNode/AlgorithmNode.tsx","store/slice/InputNode/InputNodeSlice.ts","components/Workspace/Visualize/DataContext.tsx","components/Workspace/Visualize/Plot/CsvPlot.tsx","components/Workspace/FlowChart/FlowChartNode/CsvFileNode.tsx","store/slice/HDF5/HDF5Selectors.ts","api/hdf5/HDF5.ts","store/slice/HDF5/HDF5Type.ts","store/slice/HDF5/HDF5Action.ts","components/Workspace/FlowChart/FlowChartNode/HDF5FileNode.tsx","components/Workspace/FlowChart/FlowChartNode/FluoFileNode.tsx","components/Workspace/FlowChart/FlowChartNode/BehaviorFileNode.tsx","components/Workspace/FlowChart/FlowChartNode/ReactFlowNodeTypesConst.ts","components/Workspace/FlowChart/CustomEdge.tsx","components/Workspace/Visualize/Plot/HeatMapPlot.tsx","components/Workspace/Visualize/Plot/ImagePlot.tsx","components/Workspace/Visualize/Plot/RoiPlot.tsx","components/Workspace/Visualize/Plot/ScatterPlot.tsx","components/Workspace/Visualize/Plot/TimeSeriesPlot.tsx","components/Workspace/Visualize/Plot/BarPlot.tsx","components/Workspace/Visualize/Plot/HTMLPlot.tsx","components/Workspace/Visualize/DisplayDataItem.tsx","components/Workspace/FlowChart/FlowChartNode/AlgorithmOutputDialog.tsx","store/slice/FilesTree/FilesTreeSelectors.ts","store/slice/FilesTree/FilesTreeType.ts","store/slice/FilesTree/FilesTreeAction.ts","store/slice/FilesTree/FilesTreeUtils.ts","components/common/FileSelectDialog.tsx","components/Workspace/FlowChart/ReactFlowComponent.tsx","store/slice/RightDrawer/RightDrawerSelectors.ts","store/slice/AlgorithmNode/AlgorithmNodeType.ts","store/slice/AlgorithmNode/AlgorithmNodeActions.ts","store/slice/AlgorithmNode/AlgorithmNodeSlice.ts","components/Workspace/FlowChart/AlgorithmParamForm.tsx","components/Workspace/FlowChart/RightDrawer.tsx","const/Layout.ts","components/common/CurrentPipelineInfo.tsx","components/Workspace/FlowChart/FlowChart.tsx","components/Workspace/Visualize/VisualizeItemAddButton.tsx","components/utils/MouseDragUtil.ts","components/Workspace/Visualize/VisualizeItemLayoutMenuIcon.tsx","components/Workspace/Visualize/FilePathSelect.tsx","components/Workspace/Visualize/VisualizeItem.tsx","components/Workspace/Visualize/FlexItemList.tsx","components/Workspace/Visualize/Editor/GradientColorPicker.tsx","components/Workspace/Visualize/Editor/SaveFig.tsx","components/Workspace/Visualize/Editor/ImageItemEditor.tsx","components/Workspace/Visualize/Editor/CsvItemEditor.tsx","components/Workspace/Visualize/Editor/HeatmapItemEditor.tsx","components/Workspace/Visualize/Editor/TimeSeriesItemEditor.tsx","components/Workspace/Visualize/Editor/RoiItemEditor.tsx","components/Workspace/Visualize/Editor/ScatterItemEditor.tsx","components/Workspace/Visualize/Editor/BarItemEditor.tsx","components/Workspace/Visualize/VisualizeItemEditor.tsx","components/Workspace/Visualize/Visualize.tsx","store/slice/Workspace/WorkspaceSlice.ts","store/slice/Workspace/WorkspaceType.ts","pages/Workspace/Workspace.tsx","store/slice/Pipeline/PipelineHook.ts","components/logo.png","components/Workspace/WorkspaceTabs.tsx","store/slice/User/UserSlice.ts","components/Layout/Profile.tsx","components/Layout/Header.tsx","components/Layout/LeftMenu.tsx","components/Layout/index.tsx","components/common/ImageChart.tsx","components/common/DialogImage.tsx","components/DatabaseCells.tsx","components/DatabaseExperiments.tsx","components/DatabasePublic.tsx","App.tsx","reportWebVitals.ts","store/slice/AlgorithmList/AlgorithmListSlice.ts","store/slice/DisplayData/DisplayDataSlice.ts","store/slice/FileUploader/FileUploaderSlice.ts","store/slice/FilesTree/FilesTreeSlice.ts","store/slice/HandleTypeColor/HandleTypeColorSlice.ts","store/slice/HDF5/HDF5Utils.ts","store/slice/HDF5/HDF5Slice.ts","store/slice/Experiments/ExperimentsUtils.ts","store/slice/Experiments/ExperimentsSlice.ts","store/store.ts","Theme.ts","index.tsx"],"names":["BoxWrapper","styled","Box","width","height","LinkWrapper","Link","textDecoration","DashboardWrapper","display","alignItems","justifyContent","DashboardContent","padding","flexWrap","gap","BoxMenu","backgroundColor","borderRadius","color","textAlign","fontSize","transition","transform","TitleMenu","Typography","marginTop","Dashboard","style","paddingLeft","to","LoaderWrapper","theme","top","bottom","left","right","position","zIndex","rotate","keyframes","prixClipFix","Loader","animation","content","boxSizing","inset","border","Loading","regexPassword","regexEmail","regexIgnoreS","Input","shouldForwardProp","props","borderColor","error","marginBottom","outline","cursor","TextError","minHeight","lineHeight","wordBreak","InputPassword","p","useState","type","setType","sx","onClick","BoxTitle","ContentDelete","BoxConfirm","margin","FormInline","Label","ButtonConfirm","Button","ChangePasswordModal","onClose","open","onSubmit","errors","setErrors","values","setValues","onChangeValue","event","validate","target","name","value","confirm_password","validatePassword","length","test","validateReEnter","new_password","onChangePass","newErrors","password","onCloseModal","Modal","fontWeight","onChange","e","onBlur","placeholder","reEnter","pre","textTransform","marginLeft","DeleteConfirmModal","isLoading","titleSubmit","description","textDelete","setTextDelete","whiteSpace","saveToken","access_token","localStorage","setItem","removeToken","removeItem","removeExToken","loginApi","data","a","axios","post","response","refreshTokenApi","refresh_token","getItem","sendResetPasswordMailApi","email","HOST","process","PORT","BASE_URL","axiosLibrary","create","baseURL","timeout","interceptors","request","use","config","headers","Authorization","ExToken","Promise","reject","res","status","getMeApi","get","updateMeApi","put","updateMePasswordApi","deleteMeApi","delete","USER_SLICE_NAME","login","createAsyncThunk","thunkAPI","responseData","rejectWithValue","getMe","_","updateMe","deleteMe","selectCurrentUser","state","user","currentUser","AccountWrapper","BoxFlex","maxWidth","Title","BoxData","minWidth","TitleData","ButtonSubmit","Account","useSelector","dispatch","useDispatch","navigate","useNavigate","isDeleteConfirmModalOpen","setIsDeleteConfirmModalOpen","isChangePwModalOpen","setIsChangePwModalOpen","setIsLoading","handleCloseDeleteComfirmModal","onConfirmDelete","handleCloseChangePw","onConfirmChangePw","oldPass","newPass","old_password","alert","uid","mt","AccountDelete","LoginWrapper","LoginContent","boxShadow","FormSignUp","LabelField","LableRequired","Description","spacing","LinkWrappper","ButtonLogin","Login","preventDefault","validateSubmit","unwrap","then","catch","finally","autoComplete","Stack","flexDirection","Heading","ButtonSignIn","ResetPassword","onReset","errorCheck","setTimeout","validateEmail","selectActiveTab","workspace","currentWorkspace","selectedTab","selectCurrentWorkspaceId","workspaceId","selectWorkspaceList","workspaces","selectIsLoadingWorkspaceList","loading","columns","field","headerName","renderCell","params","WorkspacesWrapper","overflow","WorkspacesTitle","Workspaces","autoHeight","checkboxSelection","rows","map","ws","id","workspace_id","getChildParam","path","ParamMap","result","Object","node","isParamChild","children","param","convertToParamMap","dto","keyList","entries","forEach","kList","Array","isArray","isDictObject","concat","join","push","selectAlgorithmNodeById","nodeId","algorithmNode","selectAlgorithmName","selectAlgorithmParams","selectAlgorithmNodeNotExist","keys","selectAlgorithmNode","FLOW_ELEMENT_SLICE_NAME","NODE_TYPE_SET","isNodeData","isNode","isAlgorithmNodeData","getLabelByPath","filePath","getFileName","split","reverse","selectFlowElements","flowElement","flowElements","selectFlowPosition","flowPosition","selectNodeById","filter","find","selectNodeLabelById","label","selectNwb","nwb","selectNwbParamsKeyList","selectNwbParam","paramKey","selectNwbParamsValue","Error","PIPELINE_SLICE_NAME","RUN_STATUS","NODE_RESULT_STATUS","RUN_BTN_OPTIONS","RUN_NEW","RUN_ALREADY","RUN_BTN_LABELS","DISPLAY_DATA_SLICE_NAME","DATA_TYPE_SET","toDataType","isNodeResultPending","nodeResult","isNodeResultSuccess","isStartedPipeline","pipeline","getInitialRunResult","runPostData","initialResult","nodeDict","convertToOutputPath","functionPath","selectPipelineLatestUid","currentPipeline","selectStartedPipeline","run","selectPipelineRunBtn","runBtn","selectRunResultPendingNodeIdList","runResult","isNodeResultPendingAndNodeId","arg","selectPipelineStatus","selectPipelineIsCanceled","selectPipelineIsStartedSuccess","isNodeResultSuccessAndNodeId","selectPipelineNodeResultStatus","includes","selectPipelineNodeResultOutputPaths","outputPaths","selectSnakemakeParams","snakemake","selectSnakemake","selectSnakemakeParamsKeyList","selectSnakemakeParam","selectSnakemakeParamsValue","INPUT_NODE_SLICE_NAME","FILE_TYPE_SET","isCsvInputNode","inputNode","fileType","isHDF5InputNode","selectInputNodeById","selectInputNodeDefined","selectCsvInputNodeSelectedFilePath","selectedFilePath","selectImageInputNodeSelectedFilePath","selectHDF5InputNodeSelectedFilePath","selectFilePathIsUndefined","hdf5Path","selectCsvInputNodeParam","selectInputNodeHDF5Path","item","selectRunPostData","nwbParam","selectNwbParams","snakemakeParam","edgeDict","selectEdgeDictForRun","selectNodeDictForRun","forceRunList","selectForceRunList","isUpdated","elements","algorithmNodePostData","selectInputNodeSelectedFilePath","selectInputNodeFileType","selectInputNodeParam","inputNodePosyData","isEdge","edge","runApi","runByUidApi","pendingNodeIdList","getState","runByCurrentUid","currentUid","pollRunResult","getExperimentsApi","deleteExperimentByUidApi","deleteExperimentByListApi","uidList","importExperimentByUidApi","downloadExperimentNwbApi","responseType","downloadExperimentConfigApi","renameExperiment","new_name","patch","EXPERIMENTS_SLICE_NAME","getExperiments","deleteExperimentByUid","deleteExperimentByList","importExperimentByUid","initialState","pipelineSlice","createSlice","reducers","cancelPipeline","setRunBtnOption","action","payload","runBtnOption","clearCurrentPipeline","extraReducers","builder","addCase","fulfilled","nodeResultDto","outputPath","message","convertToRunResult","rejected","meta","addMatcher","isAnyOf","pending","actions","selectExperiments","experiments","selectExperimentsStatusIsUninitialized","selectExperimentsStatusIsFulfilled","selectExperimentsStatusIsError","selectExperimentsErrorMessage","selectExperimentList","experimentList","selectExperiment","selectExperimentName","selectExperimentFunction","functions","ExperimentStatusIcon","React","memo","arrayEqualityFn","b","every","v","i","twoDimarrayEqualityFn","NWBDownloadButton","hasNWB","useContext","ExperimentUidContext","ref","useRef","url","setFileUrl","URL","createObjectURL","Blob","current","click","revokeObjectURL","IconButton","disabled","href","download","className","ConfigDownloadButton","CollapsibleTable","TableRow","TableCell","paddingBottom","paddingTop","colSpan","Collapse","in","unmountOnExit","variant","gutterBottom","component","Table","size","Head","Body","TableHead","nodeIdList","selectExperimentFunctionNodeIdList","TableBody","TableRowOfFunction","selectExperimentFunctionName","selectExperimentFunctionStatus","selectExperimentFunctionHasNWB","scope","DeleteButton","currentPipelineUid","isRunning","isPending","setOpen","Dialog","DialogTitle","DialogActions","autoFocus","getTimeSeriesInitDataApi","getTimeSeriesDataByIdApi","index","getTimeSeriesAllDataApi","getHeatMapDataApi","getImageDataApi","start_index","startIndex","end_index","endIndex","getCsvDataApi","getRoiDataApi","getScatterDataApi","getBarDataApi","getHTMLDataApi","addRoiApi","mergeRoiApi","deleteRoiApi","getTimeSeriesInitData","getTimeSeriesDataById","getTimeSeriesAllData","getHeatMapData","getImageData","getCsvData","getRoiData","getScatterData","getBarData","getHTMLData","selectDisplayData","displayData","selectTimeSeriesData","timeSeries","selectTimeSeriesDataIsInitialized","selectHeatMapDataIsInitialized","heatMap","selectImageData","image","selectImageDataIsInitialized","selectImageDataIsPending","selectCsvDataIsInitialized","csv","selectCsvDataError","selectCsvDataIsPending","selectCsvDataIsFulfilled","selectRoiData","roi","selectRoiDataIsInitialized","selectRoiDataIsFulfilled","selectScatterDataIsInitialized","scatter","selectBarDataIsInitialized","bar","selectHTMLDataIsInitialized","html","VISUALIZE_ITEM_SLICE_NAME","VISUALIZE_ITEM_TYPE_SET","isDisplayDataItem","itemType","isImageItem","dataType","isTimeSeriesItem","isCsvItem","isHeatMapItem","isScatterItem","isBarItem","selectSelectedVisualizeItemId","visualaizeItem","selectedItemId","selectVisualizeImageItemIdList","items","Number","itemId","selectVisualizeItemById","isWorkflowDialog","selectVisualizeItems","selectVisualizeItemLayout","layout","selectVisualizeItemWidth","selectVisualizeItemHeight","selectVisualizeDataType","selectVisualizeDataNodeId","selectVisualizeDataFilePath","selectVisualizeSaveFilename","saveFileName","selectVisualizeSaveFormat","saveFormat","selectImageItemFilePath","selectTimeSeriesItemFilePath","selectRoiItemFilePath","roiItem","selectImageItemShowticklabels","showticklabels","selectImageItemZsmooth","zsmooth","selectImageItemStartIndex","selectImageItemEndIndex","selectImageItemShowLine","showline","selectImageItemShowGrid","showgrid","selectImageItemShowScale","showscale","selectImageItemColors","colors","selectImageItemAlpha","alpha","selectImageItemRoiAlpha","roiAlpha","selectTimeSeriesItemOffset","offset","selectTimeSeriesItemSpan","span","selectTimeSeriesItemShowGrid","selectTimeSeriesItemShowLine","selectTimeSeriesItemShowTickLabels","selectTimeSeriesItemZeroLine","zeroline","selectTimeSeriesItemXrange","xrange","selectTimeSeriesItemDrawOrderList","drawOrderList","selectTimeSeriesItemRefRoiUniqueList","refImageItemId","imageItem","roiUniqueList","selectTimeSeriesItemKeys","dataKeys","key","selectRoiItemMaxNumber","roiFilePath","roiData","Math","max","arr","selectHeatMapItemShowScale","selectHeatMapItemColors","selectCsvItemTranspose","transpose","selectCsvItemSetHeader","setHeader","selectCsvItemSetIndex","setIndex","selectBarItemIndex","selectScatterItemXIndex","xIndex","selectScatterItemYIndex","yIndex","selectDisplayDataIsSingle","targetFilePath","setImageItemClikedDataId","clickedDataId","selectingImageArea","range","x","y","round","x1","x2","y1","y2","selectedZList","z","zNum","String","selectedZ","deleteDisplayItem","createAction","setNewDisplayDataPath","displayDataCommonInitialValue","imageItemInitialValue","rgb","activeIndex","duration","timeSeriesItemInitialValue","undefined","maxIndex","heatMapItemInitialValue","csvItemInitialValue","roiItemInitialValue","scatterItemInitialValue","barItemInitialValue","hdf5ItemInitialValue","htmlItemInitialValue","fluoItemInitialValue","behaviorItemInitialValue","getDisplayDataItemInitialValue","visualaizeItemSlice","pushInitialItemToNewRow","newItemId","addInitialItemFn","insertInitialItemToNextColumn","targetItemId","targetRowIndex","findIndex","row","targetColumnIndex","indexOf","splice","addItemForWorkflowDialog","maxId","getMaxItemId","deleteAllItemForWorkflowDialog","setItemSize","targetItem","selectItem","reset","setRoiItemFilePath","outputKey","setFilePath","setSaveFormat","setSaveFileName","setImageItemFilePath","setTimeSeriesItemFilePath","setHeatMapItemFilePath","resetImageActiveIndex","resetImageActiveIndexFn","incrementImageActiveIndex","decrementImageActiveIndex","setImageActiveIndex","setImageItemShowticklabels","setImageItemZsmooth","setImageItemShowLine","setImageItemShowGrid","setImageItemShowScale","setImageItemColors","setImageItemStartIndex","setImageItemEndIndex","setImageItemAlpha","setImageItemRoiAlpha","setImageItemDuration","setTimeSeriesItemOffset","setTimeSeriesItemSpan","setTimeSeriesItemShowGrid","setTimeSeriesItemShowLine","setTimeSeriesItemShowTickLabels","setTimeSeriesItemZeroLine","setTimeSeriesItemXrangeLeft","setTimeSeriesItemXrangeRight","setTimeSeriesItemDrawOrderList","resetAllOrderList","setTimeSeriesItemMaxIndex","setTimeSeriesRefImageItemId","setHeatMapItemShowScale","setHeatMapItemColors","setCsvItemTranspose","setCsvItemSetHeader","setCsvItemSetIndex","setScatterItemXIndex","setScatterItemYIndex","setBarItemIndex","imageItemId","idList","reduce","nextId","args","ImportButton","enqueueSnackbar","useSnackbar","createContext","ExperimentTable","isUninitialized","isFulfilled","isError","useEffect","TableImple","ExperimentsErrorView","Alert","severity","AlertTitle","experimentListValues","experimentListKeys","order","setOrder","sortTarget","setSortTarget","checkedList","setCheckedList","onCheckBoxClick","recordsIsEmpty","page","setPage","storageKey","initialValue","parseFn","savedStr","JSON","parse","setValue","stringify","useLocalStorage","valueNum","isNaN","rowsPerPage","setRowsPerPage","emptyRows","flexGrow","m","endIcon","Paper","elevation","flexGlow","TableContainer","HeadItem","sortHandler","property","allCheckIndeterminate","allChecked","onChangeAllCheck","checked","experiment","checkboxVisible","sort","getComparator","slice","expData","Provider","RowItem","palette","text","secondary","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","newValue","parseInt","Checkbox","visibility","indeterminate","TableSortLabel","active","direction","timestamp","selectExperimentTimeStamp","statusList","f","selectExperimentStatus","selectExperimentHasNWB","isEdit","setEdit","errorEdit","setErrorEdit","valueEdit","setValueEdit","onSaveNewName","Fragment","borderBottom","tableCellClasses","root","borderBottomWidth","prevOpen","trim","orderBy","descendingComparator","Experiment","isAlgoChild","algoNode","getAlgoChild","algoList","algoName","convertToAlgoListType","prototype","hasOwnProperty","call","returns","selectAlgorithmList","algorithmList","selectAlgorithmListIsLated","isLatest","selectAlgorithmListTree","tree","ALGORITHM_LIST_SLICE_NAME","getAlgoListApi","getAlgoList","getAlgoParamsApi","addAlgorithmNode","addInputNode","nanoid","customAlphabet","getNanoId","INITIAL_IMAGE_ELEMENT_ID","INITIAL_ALGO_STYLE","INITIAL_DATA_STYLE","REACT_FLOW_NODE_TYPE_KEY","DND_ITEM_TYPE_SET","AlgorithmTreeView","onAddAlgoNode","useCallback","nodeName","newNode","TreeView","defaultCollapseIcon","defaultExpandIcon","TreeItem","InputNodeComponent","fileName","AlgoNodeComponentRecursive","toFixed","onAddDataNode","nodeType","reactFlowNodeType","useLeafItemDrag","isDragging","dragRef","LeafItem","opacity","onFocusCapture","stopPropagation","AddButton","AlgoNodeComponent","textOverflow","treeItemClasses","iconContainer","onDragEnd","useDrag","end","monitor","getDropResult","didDrop","collect","setInputNodeFilePath","isInputNodePostData","isInputNodeData","isAlgorithmNodePostData","FILE_TREE_TYPE_SET","getFilesTreeApi","file_type","uploadFileApi","formData","FILE_UPLOADER_SLICE_NAME","setUploadProgress","uploadFile","requestId","getUploadConfig","percent","total","progess","resultPath","file_path","onUpdateProgressFn","onUploadProgress","progressEvent","percentCompleted","loaded","initialFlowPosition","zoom","initialElementCoord","elementCoord","flowElementSlice","setFlowPosition","setFlowElements","deleteFlowElements","removeElements","deleteFlowElementsById","element","editFlowElementPositionById","coord","elementIdx","ele","targetPosition","Position","Left","sourcePosition","Right","updateElementCoord","targetNode","newNodeList","min","random","getNWBParamsApi","getNWBParams","nwbSlice","updateParam","RIGHT_DRAWER_MODE","mode","currendNodeId","rightDrawerSlice","openRightDrawer","closeRightDrawer","toggleParamForm","toggleNwb","toggleSnakemake","elm","Accordion","disableGutters","square","divider","createParamFormItemComponent","paramSelector","paramValueSelector","paramUpdateActionCreator","useParamValueUpdate","ParamItemForString","updateParamAction","TextField","multiline","Boolean","ParamItemForNumber","InputLabelProps","shrink","ParamItemForBoolean","Switch","ParamItemForValueType","ParamChildItem","verticalAlign","ParamItem","AccordionSummary","expandIcon","AccordionDetails","NWBSettingButton","NWBSettingContents","paramKeyList","Component","getSnakemakeParamsApi","SNAKEMAKE_SLICE_NAME","getSnakemakeParams","SnakemakeSlice","SnakemakeButton","SnakemakeContents","RunButtons","isStartedSuccess","filePathIsUndefined","algorithmNodeNotExist","handleCancelPipeline","handleRunPipeline","handleRunPipelineByUid","dialogOpen","setDialogOpen","menuOpen","setMenuOpen","anchorRef","handleClose","contains","uidExists","ButtonGroup","errorMessage","Popper","anchorEl","role","disablePortal","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","option","MenuItem","selected","handleMenuItemClick","marginRight","RunDialog","handleRun","setName","setError","DialogContent","fullWidth","helperText","ToolBar","float","useHandleColor","handleColor","colorMap","LinearProgressWithLabel","mr","LinearProgress","inistialUploaderState","uploadingProgress","selectFileUploader","fileUploader","useFileUploader","onUploadFile","uninitialized","selectFileUploadIsUninitialized","selectUploadFilePath","selectFileUploadIsPending","selectFileUploadIsFulfilled","progress","selectFileUploadProgress","selectFileUploadError","DialogContext","onOpen","onOpenDialogFile","onMessageError","FileSelect","multiSelect","onChangeFilePath","FileSelectImple","onSelectFile","fileTreeType","selectButtonLabel","uploadButtonLabel","inputRef","accept","getFileInputAccept","files","file","FormData","append","toHandleId","getHandleType","handleId","isValidConnection","connection","sourceHandle","targetHandle","sourceHandleStyle","ImageFileNode","ImageFileNodeImple","elementSelected","useTheme","returnType","imageColor","background","primary","light","leftHandleStyle","rightHandleStyle","AlgorithmNode","AlgorithmNodeImple","isConnectable","useStatus","tabIndex","AlgoName","mx","AlgoArgs","AlgoReturns","Message","pipelineStatus","main","algoArgs","algoListChild","selectAlgoArgs","algoInfoListEqualtyFn","info","algoInfo","ArgHandle","algoReturns","selectAlgoReturns","ReturnHandle","isNone","hex_color","isHover","setHover","rgb_color","hex","exec","hexToRgb","onMouseEnter","onMouseLeave","Tooltip","title","arrow","latestUid","errorMsg","selectPipelineNodeResultMessage","anchorElRef","inputNodeSlice","deleteInputNode","setCsvInputNodeParam","setInputNodeHDF5Path","newState","DisplayDataContext","NaN","CsvPlot","isInitialized","CsvPlotImple","PresentationalCsvPlot","csvData","useMemo","col","header","headerData","idx","row_id","rowObj","fromEntries","CsvFileNode","CsvFileNodeImple","ParamSettingDialog","selectCsvInputNodeParamSetHeader","setSetHeader","selectCsvInputNodeParamSetIndex","setSetIndex","selectCsvInputNodeParamTranspose","setTranspose","dividers","FormControlLabel","control","CsvPreview","otherProps","selectHDF5","hdf5","getHDF5TreeApi","HDF5_SLICE_NAME","getHDF5Tree","HDF5FileNode","HDF5FileNodeImple","ItemSelect","structureFileName","Structure","FileTreeView","useHDF5Tree","TreeNode","isDir","icon","htmlColor","nodes","childNode","shape","nbytes","FluoFileNode","FluoFileNodeImple","fluoColor","BehaviorFileNode","BehaviorFileNodeImple","behaviorColor","reactFlowNodeTypes","reactFlowEdgeTypes","buttonedge","sourceX","sourceY","targetX","targetY","arrowHeadType","markerEndId","edgePath","getBezierPath","markerEnd","getMarkerEnd","getEdgeCenter","edgeCenterX","edgeCenterY","d","foreignObjectSize","HeatMapPlot","selectHeatMapDataError","selectHeatMapDataIsFulfilled","HeatMapImple","heatMapData","heatMapDataEqualtyFn","selectHeatMapColumns","selectHeatMapIndex","colorscale","parseFloat","offsets","hoverongaps","showlegend","dragmode","t","l","autosize","displayModeBar","responsive","toImageButtonOptions","format","filename","PositionDrag","initSizeDrag","floor","sChart","ImagePlot","selectImageDataError","ImagePlotImple","selectImageItemActiveIndex","ImagePlotChart","imageData","selectActiveImageData","imageDataEqualtyFn","isAddRoi","setIsAddRoi","loadingApi","setLoadingApi","roiDataState","setRoiDataState","pointClick","setPointClick","itemsVisual","timeDataMaxIndex","maxIdx","selectRoiItemIndex","sizeDrag","setSizeDrag","startDragAddRoi","setStartDragAddRoi","positionDrag","setChangeSize","selectRoiItemOutputKeys","refPageXSize","refPageYSize","colorscaleRoi","createColormap","colormap","nshades","onCancel","onCancelAdd","rgba2hex","replace","hovertemplate","new_i","zmin","zmax","selectMode","setSelectMode","onSelecting","callback","timeoutId","delay","clearTimeout","debounce","xaxis","autorange","autotick","ticks","yaxis","automargin","setSelectRoi","point","newPoints","newRoi","some","addRoi","onMouseUpDragAddRoi","onMouseDownSize","pageX","pageY","addRoiSubmit","sizeX","sizeY","xAdd","yAdd","pointCenter","posx","posy","sizex","sizey","resetTimeSeries","onMergeRoi","ids","onDeleteRoi","PlayBack","ml","BoxDiv","LinkDiv","points","curveNumber","toString","DivAddRoi","DivSvg","onMouseMove","newSizeDrag","currentTarget","getBoundingClientRect","newX","newY","ceil","window","scrollY","LEFT","newWidth","newLeft","RIGHT","BOTTOM","newHeight","TOP","newTop","onMouseUp","DivDrag","DragCenter","onMouseDown","DragSizeLeft","DragSizeRight","DragSizeTop","DragSizeBottom","maxSize","selectImageItemDuration","intervalRef","clearInterval","onPlayClick","setInterval","onDurationChange","inputProps","step","Slider","defaultValue","valueLabelDisplay","marks","activeThumb","newIndex","rgba","r","g","outParts","substring","part","listStyle","DragSize","RoiPlot","selectRoiDataError","RoiPlotImple","ScatterPlot","selectScatterDataError","selectScatterDataIsFulfilled","ScatterPlotImple","scatterData","scatterDataEqualityFn","textposition","textfont","family","marker","font","XIndex","YIndex","FormControl","InputLabel","Select","aArray","bArray","aKey","TimeSeriesPlot","selectTimeSeriesDataError","selectTimeSeriesDataIsFulfilled","TimeSeriesPlotImple","timeSeriesData","timeSeriesDataEqualityFn","dataXrange","dataStd","std","selectTimeSeriesStd","colorScale","activeIdx","mean","sqrt","pow","visible","line","error_y","array","annotations","xref","yref","arrowhead","ax","ay","onLegendClick","clickNumber","newDrawOrderList","aValue","bKey","bValue","nestEqualityFun","BarPlot","selectBarDataError","selectBarDataIsFulfilled","BarPlotImple","barData","barDataEqualityFn","selectBarIndex","SelectIndex","HTMLPlot","selectHTMLDataError","selectHTMLDataIsFulfilled","HTMLPlotImple","htmlData","dangerouslySetInnerHTML","__html","DisplayDataItem","DisplayPlot","AlgorithmOutputDialog","closeFn","TitleWithCloseButton","pt","px","OutputViewer","outputKeyList","selectPipelineNodeResultOutputKeyList","selectedOutoutKey","setSelectedOutputKey","OutputSelectTabs","onSelectOutput","DisplayDataView","Tabs","scrollButtons","tabsClasses","Tab","selectPipelineNodeResultOutputFilePath","selectPipelineNodeResultOutputFileDataType","selectVisualizeItemIdForWorkflowDialog","my","selectFilesTree","filesTree","FILES_TREE_SLICE_NAME","getFilesTree","convertToTreeNodeType","isdir","getNodeByPath","FileSelectDialog","initialFilePath","onClickCancel","onClickOk","setSelectedFilePath","FilePathSelectedListView","selectFilesTreeNodes","selectFilesIsLatest","selectFilesIsLoading","useFileTree","onCheckFile","selectedPath","onCheckDir","childrenFilePathList","from","Set","disableSelection","onNodeSelect","nodeIds","isDirNodeByPath","allNotChecked","TreeItemLabel","checkboxProps","disableRipple","initDialogFile","ReactFlowComponent","dialogNodeId","setDialogNodeId","dialogFile","setDialogFile","messageError","setMessageError","reactFlowInstance","setReactFlowInstance","wrapparRef","useDrop","drop","monitorOffset","getClientOffset","project","offsetLeft","offsetTop","onElementsRemove","elementsToRemove","onConnect","addEdge","animated","onLoad","onDragOver","dataTransfer","dropEffect","onNodeDragStop","nodeTypes","edgeTypes","defaultPosition","defaultZoom","onMoveEnd","Popover","anchorOrigin","vertical","horizontal","FormHelperText","selectRightDrawerIsOpen","rightDrawer","selectRightDrawerMode","selectRightDrawerCurrentNodeId","ALGORITHM_NODE_SLICE_NAME","getAlgoParams","algorithmNodeSlice","AlgorithmParamForm","ParamFormContext","algoParamIsLoaded","selectAlgorithmParamsExit","selectAlgorithmParamsKeyList","selectAlgorithmParam","selectAlgorithmParamsValue","Contents","ParamFormConetent","StyledDrawer","Drawer","flexShrink","drawerClasses","paper","MainContents","RightDrawer","anchor","Toolbar","Divider","CurrentPipelineInfo","isFulFilled","Grid","container","paddingX","ExperimentUidInfo","ExperimentNameInfo","LabelValueGridRow","xs","FlowChart","RootDiv","DndProvider","backend","HTML5Backend","borderRight","grey","DrawerContents","transitions","easing","sharp","leavingScreen","easeOut","enteringScreen","VisualizeItemAddButton","StyledPaper","StyledButton","borderWidth","useMouseDragHandler","dependencies","document","addEventListener","removeEventListener","once","DisplayDataItemLayoutMenuIcon","isSingleData","PresentationalLayoutMenuIcon","onClickDeleteMenu","deleteData","onClickInsertMenu","Menu","ListItemIcon","ListItemText","FilePathSelect","selectedNodeId","onSelect","inputNodeFilePathInfoList","inputNodes","selectInputNode","toDataTypeFromFileType","inputNodeDataType","algorithmNodeOutputPathInfoList","selectPipelineNodeResultSuccessList","paths","onSelectHandle","menuItemList","pathInfo","pathElm","ListSubheader","VisualizeItem","isSelected","movingSize","setMovingSize","onCommitSize","onMouseDownX","downEvent","movingX","screenX","movingWidth","moveEvent","MIN_WIDTH","onMouseDownY","movingY","screenY","movingHeight","MIN_HEIFHT","onMouseDownXY","useItemDragResize","ItemHeader","itemDataType","FilePathSelectItem","RefImageItemIdSelect","RoiSelect","newFilePath","newDataType","basePayload","prevDataType","prevFilePath","itemIdList","selectedRefImageItemId","selectTimeSeriesItemRefImageItemId","roiItemNodeId","selectRoiItemNodeId","roiItemFilePath","FlexItemList","GradientColorPicker","dispatchSetColor","maxStops","paletteHeight","onPaletteChange","colorCode","rgbStr","flatStyle","WrappedSketchPicker","c","SaveFig","SelectedItemIdContext","ImageItemEditor","newPath","onSelectImageFile","Showticklabels","ShowLine","ShowGrid","ShowScale","Zsmooth","Alpha","inputError","RoiAlpha","StartEndIndex","onChangeStartIndex","onChangeEndIndex","CsvItemEditor","Transpose","SetHeader","SetIndex","HeatmapItemEditor","TimeSeriesItemEditor","Offset","Span","ShowTickLabels","ZeroLine","Xrange","newRight","LegendSelect","handleChange","drawIndexMap","RoiItemEditor","ScatterItemEditor","BarItemEditor","VisualizeItemEditor","DisplayDataItemEditor","DisplayEditor","StyledDrawerContents","Visualize","workspaceSlice","setActiveTab","setCurrentWorkspace","clearCurrentWorkspace","TabPanel","other","hidden","Workspace","runPipeline","isCanceled","intervalId","prevStatus","setPrevStatus","useRunPipeline","useParams","activeTab","a11yProps","WorkspaceTabs","centered","textColor","userSlice","logout","ex_token","Profile","setAnchorEl","keepMounted","MultiUserHeader","handleDrawerOpen","location","useLocation","StyledAppBar","TitleLogo","pathname","MuiAppBar","Header","LeftMenu","handleDrawerClose","List","ListItem","disablePadding","ListItemButton","ignorePaths","LayoutWrapper","ContentBodyWrapper","paddingRight","ChildrenWrapper","prop","Layout","checkAuth","ImageChart","src","alt","DialogImageWrapper","DialogImageContentWrapper","DialogImageContent","ButtonClose","DialogImage","handleCloseDialog","graphsTitle","datas","fields","brain_area","cre_driver","reporter_line","imaging_depth","cell_image_urls","graph_urls","created_time","updated_time","TableHeaderCells","TableCellCustom","checkHead","toLowerCase","TableBodyDataBaseCells","handleOpenDialog","column","record","DatabaseCellsWrapper","borderLeft","DatabaseCells","openDialog","setOpenDialog","dataDialog","setDataDialog","getColumns","graphTitle","newData","dataPlot","graph_url","experiment_id","attributes","PopupAttributes","DialogContentText","TableHeader","TableBodyDataBase","handleOpenAttributes","setTypeTable","handleClick","DataBaseExperimentsWrapper","DataBaseExperimentsTableWrapper","DatabaseExperiments","dataTable","setDataTable","setCount","openAttributes","setOpenAttributes","refTable","onScroll","scrollTop","clientHeight","DataBasePublicWrapper","ButtonExperiments","ButtonCells","DataBasePublicContent","DatabasePublic","typeTable","handleTypeTable","SnackbarCloseButton","snackbarKey","closeSnackbar","App","maxSnack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","algorithmListSlice","deleteDisplayDataFn","displayDataSlice","roi1Ddata","flat","roiUniqueIdList","n1","n2","fileUploaderSlice","setFileUploaderStateById","currentState","filesTreeSlice","ImageData","MuiColors","IscellData","TimeSeriesData","Suite2pData","FluoData","BehaviorData","nextKey","handleTypeColorSlice","HDF5Slice","convertToExperimentType","function","unique_id","convertToExperimentStatus","success","started_at","experimentsSlice","convertToExperimentListType","rootReducer","combineReducers","algorithmListReducer","algorithmNodeReducer","displayDataReducer","fileUploaderReducer","flowElementReducer","inputNodeReducer","handleTypeColorReducer","filesTreeReducer","nwbReducer","rightDrawerReducer","visualaizeItemReducer","snakemakeReducer","pipelineReducer","hdf5Reducer","experimentsReducer","workspaceReducer","userReducer","store","configureStore","reducer","createTheme","components","MuiTextField","defaultProps","MuiSelect","MuiDialog","disableEscapeKeyDown","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.2fa4566c.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\nimport { Box, styled, Typography } from '@mui/material'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\n\nconst Dashboard = () => {\n  return (\n    <BoxWrapper>\n      <h1 style={{ paddingLeft: 16 }}>Dashboard</h1>\n      <DashboardWrapper>\n        <DashboardContent>\n          <LinkWrapper to=\"/workspaces\">\n            <BoxMenu>\n              <Box>\n                <StorageIcon fontSize=\"large\" />\n                <TitleMenu>Workspaces</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          <LinkWrapper to=\"/account\">\n            <BoxMenu>\n              <Box>\n                <AccountCircleIcon fontSize=\"large\" />\n                <TitleMenu>Account</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n        </DashboardContent>\n      </DashboardWrapper>\n    </BoxWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n})\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst DashboardWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 'calc(100% - 90px)',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst DashboardContent = styled(Box)(() => ({\n  padding: 30,\n  display: 'flex',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  gap: 32,\n}))\n\nconst BoxMenu = styled(Box)(() => ({\n  width: 170,\n  height: 150,\n  backgroundColor: '#283237',\n  borderRadius: 4,\n  padding: '40px 30px',\n  color: '#fff',\n  textAlign: 'center',\n  fontSize: 24,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.1)',\n    backgroundColor: 'rgba(40,50,55,0.9)',\n  },\n}))\n\nconst TitleMenu = styled(Typography)(() => ({\n  fontSize: 24,\n  marginTop: 30,\n}))\n\nexport default Dashboard\n","import { Box, keyframes, styled } from '@mui/material'\n\nconst Loading = () => {\n  return (\n    <LoaderWrapper>\n      <Loader />\n    </LoaderWrapper>\n  )\n}\n\nconst LoaderWrapper = styled(Box)(({ theme }) => ({\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  position: 'fixed',\n  backgroundColor: 'rgba(255,255,255,0.6)',\n  zIndex: 100000,\n}))\n\nconst rotate = keyframes`\n  100%   {transform: rotate(360deg)}\n`\n\nconst prixClipFix = keyframes`\n  0%   {clip-path:polygon(50% 50%,0 0,0 0,0 0,0 0,0 0)}\n  25%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 0,100% 0,100% 0)}\n  50%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,100% 100%,100% 100%)}\n  75%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 100%)}\n  100% {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 0)}\n`\n\nconst Loader = styled('span')(({ theme }) => ({\n  display: 'block',\n  width: 48,\n  height: 48,\n  borderRadius: '50%',\n  position: 'relative',\n  zIndex: 100,\n  top: 'calc(50% - 24px)',\n  left: 'calc(50% - 24px)',\n  animation: `${rotate} 1s linear infinite`,\n  '&:before': {\n    content: \"''\",\n    boxSizing: 'border-box',\n    position: 'absolute',\n    inset: 0,\n    borderRadius: '50%',\n    border: '3px solid rgba(0,0,0,0.8)',\n    animation: `${prixClipFix} 2s linear infinite`,\n  },\n}))\n\nexport default Loading\n","export const regexPassword =\n  /^(?=.*\\d)(?=.*[!#$%&()*+,-./@_|])(?=.*[a-zA-Z]).{6,255}$/\n\nexport const regexEmail =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nexport const regexIgnoreS = /[^!#$%&()*+,-./@_|a-zA-Z0-9]/\n","import { styled } from '@mui/material'\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error?: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nexport default Input\n","import { ChangeEvent, FC, FocusEvent, useState } from 'react'\nimport { Box, styled, Typography } from '@mui/material'\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\nimport Input from 'components/common/Input'\n\nconst style: object = {\n  position: 'absolute',\n  right: 5,\n  top: 8,\n  fontSize: 20,\n  cursor: 'pointer',\n  color: 'rgba(0,0,0,0.6)',\n}\n\ntype InputPasswordProps = {\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void\n  error?: string\n  name?: string\n  placeholder?: string\n  onBlur?:  (event: FocusEvent<HTMLInputElement>) => void\n}\n\nconst InputPassword: FC<InputPasswordProps> = ({ error, ...p }) => {\n  const [type, setType] = useState('password')\n\n  const onShow = () => {\n    setType('text')\n  }\n\n  const onHidden = () => {\n    setType('password')\n  }\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <Input {...p} type={type} />\n      {type === 'password' ? (\n        <VisibilityIcon style={style} onClick={onShow} />\n      ) : (\n        <VisibilityOffIcon style={style} onClick={onHidden} />\n      )}\n      <TextError>{error}</TextError>\n    </Box>\n  )\n}\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  marginTop: -14,\n  wordBreak: 'break-word',\n})\n\nexport default InputPassword\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport { ChangeEvent, FC, useState } from 'react'\nimport { regexIgnoreS, regexPassword } from 'const/Auth'\nimport InputPassword from 'components/Account/InputPassword'\n\ntype ChangePasswordModalProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: (oldPass: string, newPass: string) => void\n}\n\nconst ChangePasswordModal: FC<ChangePasswordModalProps> = ({\n  onClose,\n  open,\n  onSubmit,\n}) => {\n  const [errors, setErrors] = useState<{ [key: string]: string }>({})\n  const [values, setValues] = useState<{ [key: string]: string }>({})\n  const onChangeValue = (\n    event: ChangeEvent<HTMLInputElement>,\n    validate?: Function,\n  ) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    if(name === 'new_password' && values.confirm_password) {\n      if(!validate?.(value)) {\n        setErrors({ ...errors, [name]: validate?.(value), confirm_password: value !== values.confirm_password ? 'Passwords do not match' : ''})\n        return\n      }\n        setErrors({ ...errors, [name]: validate?.(value), confirm_password: ''})\n        return\n    }\n    setErrors({ ...errors, [name]: validate?.(value) })\n  }\n\n  const validatePassword = (value: string): string => {\n    if (!value) return 'This field is required'\n    if(value.length > 255) return 'The text may not be longer than 255 characters'\n    if (!regexPassword.test(value)) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    if(regexIgnoreS.test(value)) {\n      return 'Allowed special characters (!#$%&()*+,-./@_|)'\n    }\n    return ''\n  }\n\n  const validateReEnter = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (value !== values.new_password) {\n      return 'Passwords do not match'\n    }\n    return ''\n  }\n\n  const validateReEnterWhenInputPassword = () => {\n    const { reEnter, new_password } = values\n    if (!new_password) setErrors((pre) => ({ ...pre, new_password: 'This field is required' }))\n    if (reEnter && reEnter !== new_password) {\n      setErrors((pre) => ({ ...pre, reEnter: 'Passwords do not match' }))\n    }\n  }\n\n  const validateForm = () => {\n    const errorNewPass = validatePassword(values.new_password)\n    const errorConfirmPass = validatePassword(values.confirm_password)\n    return {\n      new_password: errorNewPass,\n      confirm_password: errorConfirmPass\n    }\n  }\n\n  const onChangePass = () => {\n    const newErrors: { [key: string]: string } = validateForm()\n    if(errors.new_password || errors.confirm_password) return\n    if(newErrors.new_password || newErrors.confirm_password) {\n      setErrors(newErrors)\n      return\n    }\n    onSubmit(values.password, values.new_password)\n  }\n\n  const onCloseModal = () => {\n    setErrors({})\n    setValues({})\n    onClose()\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <ContentDelete>\n        <BoxTitle>\n          <Typography sx={{ fontWeight: 600, fontSize: 18 }}>\n            Change Password\n          </Typography>\n          <Typography style={{ fontSize: 13 }}>\n            <span style={{ color: 'red' }}>*</span> is required\n          </Typography>\n        </BoxTitle>\n        <BoxConfirm>\n          <FormInline>\n            <Label>\n              Old Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e)}\n              name=\"password\"\n              error={errors.password}\n              onBlur={(e) => onChangeValue(e)}\n              placeholder=\"Old Password\"\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              New Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validatePassword)}\n              name=\"new_password\"\n              error={errors.new_password}\n              placeholder=\"New Password\"\n              onBlur={validateReEnterWhenInputPassword}\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              Confirm Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validateReEnter)}\n              name=\"confirm_password\"\n              error={errors.confirm_password}\n              placeholder=\"Confirm Password\"\n              onBlur={(e) => onChangeValue(e, validateReEnter)}\n            />\n          </FormInline>\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <ButtonConfirm onClick={() => onChangePass()}>UPDATE</ButtonConfirm>\n          </Box>\n        </BoxConfirm>\n        <Button onClick={onCloseModal}>\n          <Typography\n            sx={{\n              textDecoration: 'underline',\n              textTransform: 'none',\n              lineHeight: '17px',\n            }}\n          >\n            Close\n          </Typography>\n        </Button>\n      </ContentDelete>\n    </Modal>\n  )\n}\n\nconst BoxTitle = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n})\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 450px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0',\n})\n\nconst FormInline = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: 10,\n})\n\nconst Label = styled(Typography)({\n  fontSize: 14,\n  marginTop: 7,\n  width: '100%',\n})\n\nconst ButtonConfirm = styled(Button)({\n  height: 36,\n  color: '#ffffff',\n  marginTop: -1,\n  width: 90,\n  backgroundColor: '#283237 !important',\n  \"&:hover\": {\n    backgroundColor: '#283237',\n  }\n})\n\nexport default ChangePasswordModal\n","import { FC, useState } from 'react'\nimport { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport Input  from 'components/common/Input'\nimport Loading from \"../common/Loading\";\n\ntype DeleteConfirmModalProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: () => void\n  titleSubmit: string\n  description: string\n  isLoading?: boolean\n}\nconst DeleteConfirmModal: FC<DeleteConfirmModalProps> = ({\n  onClose,\n  open,\n  onSubmit,\n  isLoading,\n  titleSubmit,\n  description,\n}) => {\n  const [textDelete, setTextDelete] = useState('')\n\n  const onConfirm = () => {\n    if (textDelete !== 'DELETE') return\n    onSubmit?.()\n    setTextDelete('')\n  }\n\n  return (\n    <>\n      <Modal\n          open={open}\n          onClose={onClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n      >\n        <ContentDelete>\n          <Typography style={{ whiteSpace: 'pre-wrap' }}>\n            {description}\n            This operation cannot be undone.\n            To continue, type \"<span style={{ fontWeight: 600 }}>DELETE</span>\" in the box below:\n          </Typography>\n          <BoxConfirm>\n            <Input\n                placeholder=\"DELETE\"\n                value={textDelete}\n                onChange={(e) => setTextDelete(e.target.value)}\n            />\n            <ButtonConfirm onClick={onConfirm} sx={{ backgroundColor: 'red !important' }}>{titleSubmit}</ButtonConfirm>\n          </BoxConfirm>\n          <Button onClick={onClose}>\n            <Typography\n                sx={{\n                  textDecoration: 'underline',\n                  textTransform: 'none',\n                  lineHeight: '17px',\n                }}\n            >\n              Close\n            </Typography>\n          </Button>\n        </ContentDelete>\n      </Modal>\n      {\n        isLoading ? <Loading /> : null\n      }\n    </>\n  )\n}\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 500px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst ButtonConfirm = styled(Button)({\n  backgroundColor: '#283237 !important',\n  height: 36,\n  marginLeft: 10,\n  color: '#ffffff',\n  marginTop: -1,\n})\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0 0',\n})\n\nexport default DeleteConfirmModal\n","export const saveToken = (access_token: string) => {\n  localStorage.setItem('access_token', access_token)\n}\n\nexport const getToken = () => {\n  return localStorage.getItem('access_token')\n}\n\nexport const saveRefreshToken = (refresh_token: string) => {\n  localStorage.setItem('refresh_token', refresh_token)\n}\n\nexport const getRefreshToken = () => {\n  return localStorage.getItem('refresh_token')\n}\n\nexport const removeToken = () => {\n  return localStorage.removeItem('access_token')\n}\n\nexport const saveExToken = (ExToken: string) => {\n  localStorage.setItem('ExToken', ExToken)\n}\n\nexport const getExToken = () => {\n  return localStorage.getItem('ExToken')\n}\n\nexport const removeExToken = () => {\n  return localStorage.removeItem('ExToken')\n}\n","import axios from 'utils/axios'\nimport { getRefreshToken } from 'utils/auth/AuthUtils'\n\nexport type LoginDTO = {\n  email: string\n  password: string\n}\n\nexport type TokenDTO = {\n  access_token: string\n  token_type: string\n  refresh_token: string\n  ex_token: string\n}\nexport type AccessTokenDTO = {\n  access_token: string\n}\n\nexport const loginApi = async (data: LoginDTO): Promise<TokenDTO> => {\n  const response = await axios.post('/auth/login', data)\n  return response.data\n}\n\nexport const refreshTokenApi = async (): Promise<AccessTokenDTO> => {\n  const response = await axios.post('/auth/refresh', {\n    refresh_token: getRefreshToken(),\n  })\n  return response.data\n}\n\nexport const sendResetPasswordMailApi = async (\n  email: string,\n): Promise<string> => {\n  const response = await axios.post(\n    `/auth/send_reset_password_mail?email=${email}`,\n  )\n  return response.data\n}\n","const HOST = process.env.REACT_APP_SERVER_HOST\nconst PORT = process.env.REACT_APP_SERVER_PORT\n\nexport const BASE_URL = `http://${HOST}:${PORT}`\nexport const WS_BASE_URL = `ws://${HOST}:${PORT}`\n","import axiosLibrary from 'axios'\nimport { refreshTokenApi } from 'api/auth/Auth'\nimport { BASE_URL } from 'const/API'\nimport { getExToken, getToken, saveToken } from 'utils/auth/AuthUtils'\n\nconst axios = axiosLibrary.create({\n  baseURL: BASE_URL,\n  timeout: 600000,\n})\n\naxios.interceptors.request.use(\n  async (config) => {\n    config.headers.Authorization = `Bearer ${getToken()}`\n    config.headers.ExToken = getExToken()\n    return config\n  },\n  (error) => Promise.reject(error),\n)\n\naxios.interceptors.response.use(\n  async (res) => res,\n  async (error) => {\n    if (error?.response?.status === 401) {\n      const { access_token } = await refreshTokenApi()\n      saveToken(access_token)\n      error.config.headers.Authorization = `Bearer ${access_token}`\n      return axiosLibrary(error.config)\n    }\n    return Promise.reject(error)\n  },\n)\n\nexport default axios\n","import axios from 'utils/axios'\nimport { UserDTO, UpdateUserDTO, UpdateUserPasswordDTO } from './UsersApiDTO'\n\nexport const getMeApi = async (): Promise<UserDTO> => {\n  const response = await axios.get('/users/me')\n  return response.data\n}\n\nexport const updateMeApi = async (data: UpdateUserDTO): Promise<UserDTO> => {\n  const response = await axios.put('/users/me', data)\n  return response.data\n}\n\nexport const updateMePasswordApi = async (\n  data: UpdateUserPasswordDTO,\n): Promise<UserDTO> => {\n  const response = await axios.put('/users/me/password', data)\n  return response.data\n}\n\nexport const deleteMeApi = async (): Promise<string> => {\n  const response = await axios.delete('/users/me')\n  return response.data\n}\n","import { UserDTO } from 'api/users/UsersApiDTO'\n\nexport const USER_SLICE_NAME = 'user'\n\nexport type User = {\n  currentUser?: UserDTO\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { USER_SLICE_NAME } from './UserType'\nimport { deleteMeApi, getMeApi, updateMeApi } from 'api/users/UsersMe'\nimport { UpdateUserDTO } from 'api/users/UsersApiDTO'\nimport { LoginDTO, loginApi } from 'api/auth/Auth'\n\nexport const login = createAsyncThunk(\n  `${USER_SLICE_NAME}/login`,\n  async (data: LoginDTO, thunkAPI) => {\n    try {\n      const responseData = await loginApi(data)\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getMe = createAsyncThunk(\n  `${USER_SLICE_NAME}/getMe`,\n  async (_, thunkAPI) => {\n    try {\n      const responseData = await getMeApi()\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const updateMe = createAsyncThunk(\n  `${USER_SLICE_NAME}/updateMe`,\n  async (data: UpdateUserDTO, thunkAPI) => {\n    try {\n      const responseData = await updateMeApi(data)\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteMe = createAsyncThunk(\n  `${USER_SLICE_NAME}/deleteMe`,\n  async (_, thunkAPI) => {\n    try {\n      const responseData = await deleteMeApi()\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { RootState } from 'store/store'\n\nexport const selectCurrentUser = (state: RootState) => state.user.currentUser\nexport const selectCurrentUserUid = (state: RootState) =>\n  selectCurrentUser(state)?.uid\nexport const selectCurrentUserEmail = (state: RootState) =>\n  selectCurrentUser(state)?.email\n","import { useSelector, useDispatch } from 'react-redux'\nimport { Box, styled, Typography } from '@mui/material'\nimport Loading from \"components/common/Loading\"\nimport ChangePasswordModal from 'components/Account/ChangePasswordModal'\nimport DeleteConfirmModal from 'components/common/DeleteConfirmModal'\nimport { useState } from 'react'\nimport { useNavigate } from \"react-router-dom\";\nimport { updateMePasswordApi } from 'api/users/UsersMe'\nimport { deleteMe } from 'store/slice/User/UserActions'\nimport { selectCurrentUser } from 'store/slice/User/UserSelector'\nconst Account = () => {\n  const user = useSelector(selectCurrentUser)\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const [isDeleteConfirmModalOpen, setIsDeleteConfirmModalOpen] = useState(false)\n  const [isChangePwModalOpen, setIsChangePwModalOpen] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleCloseDeleteComfirmModal = () => {\n    setIsDeleteConfirmModalOpen(false)\n  }\n\n  const onDeleteAccountClick = () => {\n    setIsDeleteConfirmModalOpen(true)\n  }\n\n  const onConfirmDelete = async () => {\n    if(!user) return\n    setIsLoading(true)\n    try {\n      dispatch(deleteMe())\n      navigate('/login')\n    }\n    catch {}\n    finally {\n      setIsLoading(false)\n    }\n    handleCloseDeleteComfirmModal()\n  }\n\n  const handleCloseChangePw = () => {\n    setIsChangePwModalOpen(false)\n  }\n\n  const onChangePwClick = () => {\n    setIsChangePwModalOpen(true)\n  }\n\n  const onConfirmChangePw = async (oldPass: string, newPass: string) => {\n    setIsLoading(true)\n    try {\n      await updateMePasswordApi({old_password: oldPass, new_password: newPass})\n      alert('Your password has been successfully changed.')\n      handleCloseChangePw()\n    }\n    catch {\n      alert('Failed to Change Password!')\n    }\n    finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <AccountWrapper>\n      <DeleteConfirmModal\n        titleSubmit=\"Delete My Account\"\n        onClose={handleCloseDeleteComfirmModal}\n        open={isDeleteConfirmModalOpen}\n        onSubmit={onConfirmDelete}\n        description='Delete account will erase all of your data.'\n      />\n      <ChangePasswordModal\n        onSubmit={onConfirmChangePw}\n        open={isChangePwModalOpen}\n        onClose={handleCloseChangePw}\n      />\n      <Title>Account Profile</Title>\n      <BoxFlex>\n        <TitleData>Account ID</TitleData>\n        <BoxData>{user?.uid}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Email</TitleData>\n        <BoxData>{user?.email}</BoxData>\n      </BoxFlex>\n      <BoxFlex sx={{ justifyContent: 'space-between', mt: 10 }}>\n        <ButtonSubmit onClick={onChangePwClick}>Change Password</ButtonSubmit>\n        <ButtonSubmit onClick={onDeleteAccountClick}>Delete Account</ButtonSubmit>\n      </BoxFlex>\n      {\n        isLoading && <Loading />\n      }\n    </AccountWrapper>\n  )\n}\n\nconst AccountWrapper = styled(Box)({\n  padding: '0 20px',\n})\n\nconst BoxFlex = styled(Box)({\n  display: 'flex',\n  margin: '20px 0 10px 0',\n  alignItems: 'center',\n  maxWidth: 1000,\n})\n\nconst Title = styled('h2')({\n  marginBottom: 40,\n})\n\nconst BoxData = styled(Typography)({\n  fontWeight: 700,\n  minWidth: 272,\n})\n\nconst TitleData = styled(Typography)({\n  width: 250,\n})\n\nconst ButtonSubmit = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nexport default Account\n","import { Box } from '@mui/material'\n\nconst AccountDelete = () => {\n  return (\n    <Box sx={{ fontWeight: 600, fontSize: 18, mt: 4 }}>\n      You account has been deleted.\n    </Box>\n  )\n}\n\nexport default AccountDelete\n","import { Box, Stack, styled, Typography } from '@mui/material'\nimport { useDispatch } from 'react-redux'\nimport { getMe, login } from 'store/slice/User/UserActions'\nimport { AppDispatch } from 'store/store'\nimport { ChangeEvent, FormEvent, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport Loading from 'components/common/Loading'\n\nconst Login = () => {\n  const navigate = useNavigate()\n  const dispatch: AppDispatch = useDispatch()\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>({\n    email: '',\n    password: '',\n  })\n  const [values, setValues] = useState<{ email: string; password: string }>({\n    email: '',\n    password: '',\n  })\n\n  const onSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    const errorCheck = validateSubmit()\n    if (errorCheck) return\n    setIsLoading(true)\n\n    dispatch(login(values))\n      .unwrap()\n      .then((_) => {\n        dispatch(getMe())\n          .unwrap()\n          .then((_) => {\n            navigate('/')\n          })\n      })\n      .catch((_) => {\n        setErrors({ email: 'Email or password is wrong', password: '' })\n      })\n      .finally(() => {\n        setIsLoading(false)\n      })\n  }\n\n  const validateSubmit = () => {\n    let errors = { email: '', password: '' }\n    if (!values.email) {\n      errors.email = 'This field is required'\n    }\n    if (!values.password) {\n      errors.password = 'This field is required'\n    }\n    setErrors(errors)\n    return errors.password || errors.email\n  }\n\n  const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    setErrors({ ...errors, [name]: !value ? 'This field is required' : '' })\n  }\n\n  return (\n    <LoginWrapper>\n      <LoginContent>\n        <Title data-testid=\"title\">Sign in to your account</Title>\n        <FormSignUp autoComplete=\"off\" onSubmit={onSubmit}>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Email<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"email\"\n              autoComplete=\"off\"\n              error={!!errors.email}\n              name=\"email\"\n              onChange={onChangeValue}\n              value={values.email}\n              placeholder=\"Enter your email\"\n            />\n            <TextError data-testid=\"error-email\">{errors.email}</TextError>\n          </Box>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Password<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"password\"\n              autoComplete=\"off\"\n              error={!!errors.password}\n              onChange={onChangeValue}\n              name=\"password\"\n              type=\"password\"\n              value={values.password}\n              placeholder=\"Enter your password\"\n            />\n            <TextError data-testid=\"error-password\">\n              {errors.password}\n            </TextError>\n          </Box>\n          <Description>\n            Forgot your password?\n            <LinkWrappper to=\"/reset-password\">Reset password</LinkWrappper>\n          </Description>\n          <Stack\n            flexDirection=\"row\"\n            gap={2}\n            mt={3}\n            alignItems=\"center\"\n            justifyContent=\"flex-end\"\n          >\n            <ButtonLogin data-testid=\"button-submit\" type=\"submit\">\n              SIGN IN\n            </ButtonLogin>\n          </Stack>\n        </FormSignUp>\n      </LoginContent>\n      {isLoading && <Loading />}\n    </LoginWrapper>\n  )\n}\n\nconst LoginWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n  padding: 30,\n  boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n  borderRadius: 4,\n})\n\nconst Title = styled(Typography)({\n  fontSize: 15,\n  fontWeight: 600,\n  marginBottom: 24,\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n  fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n  color: 'red',\n  fontSize: 14,\n  marginLeft: 2,\n})\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 22,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst Description = styled(Typography)(({ theme }) => ({\n  fontSize: 12,\n  color: 'rgba(0, 0, 0, 0.65)',\n  marginTop: theme.spacing(1),\n}))\n\nconst LinkWrappper = styled(Link)({\n  marginLeft: 6,\n  color: '#1892d1',\n})\n\nconst ButtonLogin = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  color: 'red',\n  position: 'absolute',\n  bottom: 4,\n})\n\nexport default Login\n","import { ChangeEvent, FormEvent, useState } from 'react'\nimport { useNavigate } from \"react-router-dom\"\nimport { Box, Stack, styled, Typography, Link } from '@mui/material'\nimport { sendResetPasswordMailApi } from 'api/auth/Auth'\nimport Loading from \"components/common/Loading\"\nimport { regexEmail } from 'const/Auth'\n\nconst ResetPassword = () => {\n    const navigate = useNavigate()\n    const [isLoading, setIsLoading] = useState(false)\n    const [errors, setErrors] = useState<{ [key: string]: string }>({\n        email: '',\n    })\n    const [values, setValues] = useState<{ email: string }>({\n        email: '',\n    })\n\n    const onReset = async (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n\n        const errorCheck = validateSubmit()\n        if (errors.email || errorCheck) return\n        setIsLoading(true)\n        try {\n            await sendResetPasswordMailApi(values.email)\n            setTimeout(()=>{\n                alert(` You'll receive a link to reset your password at ${values.email}. Please check your mail!`)\n            },300)\n        }\n        catch {\n            setTimeout(()=>{\n                alert('Email does not exists!')\n            },300)\n        }\n        finally {\n            setIsLoading(false)\n        }\n    }\n\n    const validateEmail = (value: string): string => {\n        if(!value) return 'This field is required'\n        if(value.length > 255) return 'The text may not be longer than 255 characters'\n        if(!regexEmail.test(value)) return 'The email is invalid'\n        return ''\n    }\n\n    const validateSubmit = () => {\n        let errors = { email: '' }\n        errors.email = validateEmail(values.email)\n        setErrors(errors)\n        return errors.email\n    }\n\n    const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target\n        const error = validateEmail(value)\n        setValues({ ...values, [name]: value })\n        setErrors({ ...errors, [name]: error })\n    }\n\n    return (\n        <LoginWrapper>\n            <LoginContent>\n                <Heading>Forgot password?</Heading>\n                <Title>No worries, we'll send you reset instructions.</Title>\n                <FormSignUp autoComplete=\"off\" onSubmit={onReset}>\n                    <Box sx={{ position: 'relative' }}>\n                        <LabelField>\n                            Email<LableRequired>*</LableRequired>\n                        </LabelField>\n                        <Input\n                            autoComplete=\"off\"\n                            error={!!errors.email}\n                            name=\"email\"\n                            onChange={onChangeValue}\n                            value={values.email}\n                            placeholder=\"Enter your email\"\n                        />\n                        <TextError>{errors.email}</TextError>\n                    </Box>\n                    <Stack\n                        flexDirection=\"row\"\n                        gap={2}\n                        mt={3}\n                        alignItems=\"center\"\n                        justifyContent=\"space-between\"\n                    >\n                        <ButtonSignIn onClick={() => navigate('/login')}>Back to SIGN IN</ButtonSignIn>\n                        <ButtonLogin type=\"submit\">Reset Password</ButtonLogin>\n                    </Stack>\n                </FormSignUp>\n            </LoginContent>\n            {\n                isLoading && <Loading />\n            }\n        </LoginWrapper>\n    )\n}\n\nconst LoginWrapper = styled(Box)({\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n    padding: 30,\n    boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n    borderRadius: 4,\n})\n\nconst Heading = styled(Typography)({\n    fontSize: 22,\n    textAlign: 'center',\n    fontWeight: 600,\n})\n\nconst Title = styled(Typography)({\n    textAlign: 'center',\n    marginBottom: 24,\n    fontSize: 12,\n    color: 'rgba(0, 0, 0, 0.65)',\n})\n\nconst ButtonSignIn = styled(Link)({\n    fontSize: 12,\n    '&:hover': {\n        cursor: 'pointer'\n    }\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n    fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n    color: 'red',\n    fontSize: 14,\n    marginLeft: 2,\n})\n\nconst Input = styled('input', {\n    shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n    return {\n        width: 250,\n        height: 24,\n        borderRadius: 4,\n        border: '1px solid',\n        borderColor: error ? 'red' : '#d9d9d9',\n        padding: '5px 10px',\n        marginBottom: 22,\n        transition: 'all 0.3s',\n        outline: 'none',\n        ':focus, :hover': {\n            borderColor: '#1677ff',\n        },\n    }\n})\n\n\nconst ButtonLogin = styled('button')({\n    backgroundColor: '#283237',\n    color: '#ffffff',\n    borderRadius: 4,\n    border: 'none',\n    outline: 'none',\n    padding: '10px 20px',\n    cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n    fontSize: 12,\n    color: 'red',\n    position: 'absolute',\n    bottom: 4,\n})\n\nexport default ResetPassword\n","import { RootState } from 'store/store'\n\nexport const selectWorkspace = (state: RootState) => state.workspace\n\nexport const selectActiveTab = (state: RootState) =>\n  state.workspace.currentWorkspace.selectedTab\n\nexport const selectCurrentWorkspaceId = (state: RootState) =>\n  state.workspace.currentWorkspace.workspaceId\n\nexport const selectWorkspaceList = (state: RootState) =>\n  state.workspace.workspaces\n\nexport const selectIsLoadingWorkspaceList = (state: RootState) =>\n  state.workspace.loading\n","// import { useEffect } from 'react'\nimport { useSelector /*, useDispatch */ } from 'react-redux'\nimport { Box, styled } from '@mui/material'\nimport {\n  DataGrid,\n  GridColDef,\n  GridRenderCellParams,\n} from '@mui/x-data-grid'\nimport { Link } from 'react-router-dom'\nimport Loading from '../../components/common/Loading'\nimport {\n  selectIsLoadingWorkspaceList,\n  selectWorkspaceList,\n} from 'store/slice/Workspace/WorkspaceSelector'\n\nconst columns: GridColDef[] = [\n  {\n    field: 'workspace_id',\n    headerName: 'ID',\n    renderCell: (params: GridRenderCellParams<string>) => (\n      <Link to={`/workspaces/${params.value}`}>{params.value}</Link>\n    ),\n  },\n]\n\nconst Workspaces = () => {\n  // const dispatch = useDispatch()\n  const workspaces = useSelector(selectWorkspaceList)\n  const loading = useSelector(selectIsLoadingWorkspaceList)\n\n  /* TODO: Add get workspace apis and actions\n  useEffect(() => {\n    dispatch(getWorkspaceList())\n    //eslint-disable-next-line\n  }, [])\n  */\n\n  return (\n    <WorkspacesWrapper>\n      <WorkspacesTitle>Workspaces</WorkspacesTitle>\n      <DataGrid\n        autoHeight\n        checkboxSelection\n        rows={workspaces.map((ws) => ({\n          id: ws.workspace_id,\n          workspace_id: ws.workspace_id,\n        }))}\n        columns={columns}\n      />\n      {loading ? <Loading /> : null}\n    </WorkspacesWrapper>\n  )\n}\n\nconst WorkspacesWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  padding: theme.spacing(2),\n  overflow: 'auto',\n}))\n\nconst WorkspacesTitle = styled('h1')(({ theme }) => ({}))\n\nexport default Workspaces\n","import {\n  ParamDTO,\n  ParamChild,\n  ParamParent,\n  ParamType,\n  ParamMap,\n} from './ParamType'\n\nexport function getChildParam(\n  path: string,\n  ParamMap: ParamMap,\n): ParamChild | null {\n  let result: ParamChild | null = null\n  for (const node of Object.values(ParamMap)) {\n    if (isParamChild(node)) {\n      if (node.path === path) {\n        result = node\n      }\n    } else {\n      result = getChildParam(path, node.children)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function isParamChild(param: ParamType): param is ParamChild {\n  return param.type === 'child'\n}\n\nexport function isParamParent(param: ParamType): param is ParamParent {\n  return param.type === 'parent'\n}\n\nfunction isDictObject(value: unknown): value is { [key: string]: unknown } {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst PATH_SEPARATOR = '/'\n\nexport function convertToParamMap(dto: ParamDTO, keyList?: string[]): ParamMap {\n  const ParamMap: ParamMap = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    const kList = keyList ?? []\n    if (isDictObject(value)) {\n      kList.push(name)\n      ParamMap[name] = {\n        type: 'parent',\n        children: convertToParamMap(value, kList),\n      }\n    } else {\n      ParamMap[name] = {\n        type: 'child',\n        value,\n        path: kList.concat([name]).join(PATH_SEPARATOR),\n      }\n    }\n  })\n  return ParamMap\n}\n\nexport function equalsParamMap(a: ParamMap, b: ParamMap) {\n  if (a === b) {\n    return true\n  }\n  const aArray = Object.keys(a)\n  const bArray = Object.keys(b)\n  return (\n    aArray.length === bArray.length &&\n    aArray.every((aKey) => {\n      const aValue = a[aKey]\n      const bValue = b[aKey]\n      return equalsParam(aValue, bValue)\n    })\n  )\n}\n\nfunction equalsParam(a: ParamType, b: ParamType): boolean {\n  if (a === b) {\n    return true\n  }\n  if (isParamChild(a) && isParamChild(b)) {\n    return equalsParamChild(a, b)\n  } else if (isParamParent(a) && isParamParent(b)) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      aArray.length === bArray.length &&\n      aArray.every((aKey) => {\n        const aValue = a.children[aKey]\n        const bValue = b.children[aKey]\n        return equalsParam(aValue, bValue)\n      })\n    )\n  } else {\n    return false\n  }\n}\n\nfunction equalsParamChild(a: ParamChild, b: ParamChild) {\n  return a.path === b.path && a.value === b.value\n}\n","import { RootState } from 'store/store'\n\nimport { getChildParam } from 'utils/param/ParamUtils'\n\nexport const selectAlgorithmNode = (state: RootState) => state.algorithmNode\n\nexport const selectAlgorithmNodeById = (nodeId: string) => (state: RootState) =>\n  state.algorithmNode[nodeId]\n\nexport const selectAlgorithmNodeDefined =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(state.algorithmNode).includes(nodeId)\n\nexport const selectAlgorithmFunctionPath =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).functionPath\n\nexport const selectAlgorithmName = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).name\n\nexport const selectAlgorithmParams = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).params\n\nexport const selectAlgorithmIsUpdated =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).isUpdated\n\nexport const selectAlgorithmParamsExit =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).params !== null\n\nexport const selectAlgorithmParamsKeyList =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(selectAlgorithmNodeById(nodeId)(state)?.params ?? {})\n\nexport const selectAlgorithmParamsValue =\n  (nodeId: string, path: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmParam =\n  (nodeId: string, paramKey: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      return params[paramKey]\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmNodeNotExist = (state: RootState) =>\n  Object.keys(selectAlgorithmNode(state)).length === 0\n","import { Elements, FlowTransform } from 'react-flow-renderer'\n\nexport const FLOW_ELEMENT_SLICE_NAME = 'flowElement'\n\nexport const NODE_TYPE_SET = {\n  INPUT: 'input',\n  ALGORITHM: 'algorithm',\n} as const\n\nexport type NODE_TYPE = typeof NODE_TYPE_SET[keyof typeof NODE_TYPE_SET]\n\nexport type NodeData = AlgorithmNodeData | InputNodeData\n\ninterface NodeDataBaseType<T extends NODE_TYPE> {\n  label: string\n  type: T\n}\n\nexport interface InputNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.INPUT> {}\n\nexport interface AlgorithmNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.ALGORITHM> {}\n\nexport interface ElementCoord {\n  x: number\n  y: number\n}\n\nexport interface FlowElement {\n  flowElements: Elements<NodeData>\n  flowPosition: FlowTransform\n  elementCoord: ElementCoord\n}\n","import { FlowElement, isNode, Node } from 'react-flow-renderer'\nimport {\n  AlgorithmNodeData,\n  NodeData,\n  NODE_TYPE_SET,\n  InputNodeData,\n} from './FlowElementType'\n\nexport function isNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<NodeData> {\n  return node != null && isNode(node) && node.data != null\n}\n\nexport function isAlgorithmNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<AlgorithmNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.ALGORITHM\n}\n\nexport function isInputNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<InputNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.INPUT\n}\n\nexport function getLabelByPath(filePath: string | string[]) {\n  if (Array.isArray(filePath)) {\n    if (filePath.length === 0) {\n      return ''\n    } else if (filePath.length === 1) {\n      return getFileName(filePath[0])\n    } else {\n      return getFileName(filePath[0]) + ` ... and ${filePath.length - 1} files`\n    }\n  } else {\n    return getFileName(filePath)\n  }\n}\n\nexport function getFileName(filePath: string) {\n  return filePath.split('/').reverse()[0]\n}\n","import { RootState } from 'store/store'\nimport { isNodeData } from './FlowElementUtils'\n\nexport const selectFlowElements = (state: RootState) =>\n  state.flowElement.flowElements\n\nexport const selectFlowPosition = (state: RootState) =>\n  state.flowElement.flowPosition\n\nexport const selectElementCoord = (state: RootState) =>\n  state.flowElement.elementCoord\n\nexport const selectNodeById = (nodeId: string) => (state: RootState) =>\n  selectFlowElements(state)\n    .filter(isNodeData)\n    .find((node) => node.id === nodeId)\n\nexport const selectNodeTypeById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.type\n\nexport const selectNodeLabelById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.label\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nexport const selectNwb = (state: RootState) => state.nwb\n\nexport const selectNwbParams = (state: RootState) => selectNwb(state).params\n\nexport const selectNwbParamsKeyList = (state: RootState) =>\n  Object.keys(selectNwb(state).params)\n\nexport const selectNwbParam = (paramKey: string) => (state: RootState) =>\n  selectNwb(state).params[paramKey]\n\nexport const selectNwbParamsValue = (path: string) => (state: RootState) => {\n  const params = selectNwb(state).params\n  if (params != null) {\n    const target = getChildParam(path, params)\n    return target?.value\n  } else {\n    throw new Error('Param is null')\n  }\n}\n","import { RunPostData } from 'api/run/Run'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\n\nexport const PIPELINE_SLICE_NAME = 'pipeline'\n\nexport type Pipeline = {\n  run: PipelineType\n  currentPipeline?: {\n    uid: string\n  }\n  runBtn: RUN_BTN_TYPE\n}\n\nexport const RUN_STATUS = {\n  /**\n   * 未実行\n   */\n  START_UNINITIALIZED: 'StartUninitialized',\n  /**\n   * 開始リクエスト中\n   */\n  START_PENDING: 'StartPending',\n  /**\n   * 開始できなかった\n   */\n  START_ERROR: 'StartError',\n  /**\n   * 正常に開始した\n   */\n  START_SUCCESS: 'StartSuccess',\n  /**\n   * 全て終了\n   */\n  FINISHED: 'Finished',\n  /**\n   * 途中終了\n   */\n  ABORTED: 'Aborted',\n  /**\n   * キャンセルされた\n   */\n  CANCELED: 'Canceled',\n} as const\n\nexport type RUN_STATUS_TYPE = typeof RUN_STATUS[keyof typeof RUN_STATUS]\n\nexport type PipelineType =\n  | StartedPipeline\n  | {\n      status:\n        | typeof RUN_STATUS.START_ERROR\n        | typeof RUN_STATUS.START_PENDING\n        | typeof RUN_STATUS.START_UNINITIALIZED\n    }\n\nexport type StartedPipeline = {\n  uid: string\n  status:\n    | typeof RUN_STATUS.START_SUCCESS\n    | typeof RUN_STATUS.FINISHED\n    | typeof RUN_STATUS.ABORTED\n    | typeof RUN_STATUS.CANCELED\n  runPostData: RunPostData\n  runResult: RunResult\n}\n\nexport type RunResult = {\n  [nodeId: string]: NodeResult\n}\n\nexport type NodeResult = NodeResultPending | NodeResultSuccess | NodeResultError\n\nexport const NODE_RESULT_STATUS = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PENDING: 'pending',\n} as const\n\nexport type NODE_RESULT_STATUS_TYPE =\n  typeof NODE_RESULT_STATUS[keyof typeof NODE_RESULT_STATUS]\n\nexport interface NodeResultBaseType<T extends NODE_RESULT_STATUS_TYPE> {\n  status: T\n  message?: string\n  name: string\n}\n\nexport interface NodeResultPending\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.PENDING> {}\n\nexport interface NodeResultSuccess\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.SUCCESS> {\n  outputPaths: OutputPaths\n}\n\nexport type OutputPaths = {\n  [outputKey: string]: {\n    path: string\n    type: DATA_TYPE\n  }\n}\n\nexport interface NodeResultError\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.ERROR> {\n  message: string\n}\n\nexport const RUN_BTN_OPTIONS = {\n  RUN_NEW: 1,\n  RUN_ALREADY: 2,\n} as const\n\nexport type RUN_BTN_TYPE = typeof RUN_BTN_OPTIONS[keyof typeof RUN_BTN_OPTIONS]\n\nexport const RUN_BTN_LABELS = {\n  [RUN_BTN_OPTIONS.RUN_NEW]: 'RUN ALL',\n  [RUN_BTN_OPTIONS.RUN_ALREADY]: 'RUN',\n} as const\n","import {\n  HeatMapData,\n  TimeSeriesData,\n  BarData,\n  CsvData,\n  RoiData,\n  ImageData,\n  ScatterData,\n  HTMLData,\n} from 'api/outputs/Outputs'\n\nexport const DISPLAY_DATA_SLICE_NAME = 'displayData'\n\nexport type DisplayData = {\n  timeSeries: {\n    [filePath: string]: TimeSeriesDisplayData\n  }\n  heatMap: {\n    [filePath: string]: HeatMapDisplayData\n  }\n  image: {\n    [filePath: string]: ImageDisplayData\n  }\n  csv: {\n    [filePath: string]: CsvDisplayData\n  }\n  roi: {\n    [filePath: string]: RoiDisplayData\n  }\n  scatter: {\n    [filePath: string]: ScatterDisplayData\n  }\n  bar: {\n    [filePath: string]: BarDisplayData\n  }\n  // hdf5: {\n  //   [filePath: string]: HDF5DisplayData\n  // }\n  html: {\n    [filePath: string]: HTMLDisplayData\n  }\n}\n\nexport const DATA_TYPE_SET = {\n  TIME_SERIES: 'timeSeries',\n  HEAT_MAP: 'heatMap',\n  IMAGE: 'image',\n  CSV: 'csv',\n  ROI: 'roi',\n  SCATTER: 'scatter',\n  BAR: 'bar',\n  HDF5: 'hdf5',\n  HTML: 'html',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type DATA_TYPE = typeof DATA_TYPE_SET[keyof typeof DATA_TYPE_SET]\n\ninterface BaseDisplay<T extends DATA_TYPE, Data> {\n  type: T\n  data: Data\n  pending: boolean\n  error: string | null\n  fulfilled: boolean\n}\n\nexport interface TimeSeriesDisplayData\n  extends BaseDisplay<'timeSeries', TimeSeriesData> {\n  xrange: number[]\n  std: TimeSeriesData\n}\n\nexport interface HeatMapDisplayData\n  extends BaseDisplay<'heatMap', HeatMapData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface ImageDisplayData extends BaseDisplay<'image', ImageData> {}\n\nexport interface CsvDisplayData extends BaseDisplay<'csv', CsvData> {\n  // columns: string[]\n}\n\nexport interface RoiDisplayData extends BaseDisplay<'roi', RoiData> {\n  roiUniqueList: string[]\n}\n\nexport interface ScatterDisplayData\n  extends BaseDisplay<'scatter', ScatterData> {}\n\nexport interface BarDisplayData extends BaseDisplay<'bar', BarData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface HTMLDisplayData extends BaseDisplay<'html', HTMLData> {}\n","import { DATA_TYPE, DATA_TYPE_SET } from './DisplayDataType'\n\n/**\n * サーバーサイドの値をマッピング\n */\nexport function toDataType(value: string): DATA_TYPE {\n  switch (value) {\n    case 'images':\n      return DATA_TYPE_SET.IMAGE\n    case 'timeseries':\n      return DATA_TYPE_SET.TIME_SERIES\n    case 'heatmap':\n      return DATA_TYPE_SET.HEAT_MAP\n    case 'roi':\n      return DATA_TYPE_SET.ROI\n    case 'scatter':\n      return DATA_TYPE_SET.SCATTER\n    case 'bar':\n      return DATA_TYPE_SET.BAR\n    case 'html':\n      return DATA_TYPE_SET.HTML\n    default:\n      throw new Error(`failed to map dataType: ${value}`)\n  }\n}\n","import { RunPostData, RunResultDTO, OutputPathsDTO } from 'api/run/Run'\n\nimport { toDataType } from '../DisplayData/DisplayDataUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  RunResult,\n  OutputPaths,\n  NODE_RESULT_STATUS,\n  PipelineType,\n  RUN_STATUS,\n  StartedPipeline,\n  NodeResultPending,\n  NodeResultError,\n  NodeResultSuccess,\n  NodeResult,\n} from './PipelineType'\n\nexport function isNodeResultPending(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultPending {\n  return nodeResult.status === NODE_RESULT_STATUS.PENDING\n}\n\nexport function isNodeResultSuccess(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultSuccess {\n  return nodeResult.status === NODE_RESULT_STATUS.SUCCESS\n}\n\nexport function isNodeResultError(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultError {\n  return nodeResult.status === NODE_RESULT_STATUS.ERROR\n}\n\nexport function isStartedPipeline(\n  pipeline: PipelineType,\n): pipeline is StartedPipeline {\n  return (\n    pipeline.status === RUN_STATUS.START_SUCCESS ||\n    pipeline.status === RUN_STATUS.FINISHED ||\n    pipeline.status === RUN_STATUS.ABORTED\n  )\n}\n\nexport function getInitialRunResult(runPostData: RunPostData) {\n  const initialResult: RunResult = {}\n  Object.values(runPostData.nodeDict)\n    .filter(({ data }) => data?.type === NODE_TYPE_SET.ALGORITHM)\n    .forEach(({ id, data }) => {\n      initialResult[id] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: data?.label ?? '',\n      }\n    })\n  return initialResult\n}\n\nexport function convertToRunResult(dto: RunResultDTO) {\n  const result: RunResult = {}\n  Object.entries(dto).forEach(([nodeId, nodeResultDto]) => {\n    const outputPath = nodeResultDto.outputPaths\n    if (nodeResultDto.status === 'success' && outputPath != null) {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.SUCCESS,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n        outputPaths: convertToOutputPath(outputPath),\n      }\n    } else {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.ERROR,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n      }\n    }\n  })\n  return result\n}\n\nfunction convertToOutputPath(dto: OutputPathsDTO) {\n  const result: OutputPaths = {}\n  Object.entries(dto).forEach(([functionPath, value]) => {\n    result[functionPath] = {\n      path: value.path,\n      type: toDataType(value.type),\n    }\n  })\n  return result\n}\n","import { RootState } from 'store/store'\n\nimport {\n  NodeResult,\n  NodeResultPending,\n  NodeResultSuccess,\n  RUN_STATUS,\n} from './PipelineType'\nimport {\n  isNodeResultPending,\n  isStartedPipeline,\n  isNodeResultSuccess,\n} from './PipelineUtils'\n\nexport const selectPipelineLatestUid = (state: RootState) => {\n  return state.pipeline.currentPipeline?.uid\n}\n\nexport const selectStartedPipeline = (state: RootState) => {\n  return state.pipeline.run\n}\n\nexport const selectPipelineRunBtn = (state: RootState) => {\n  return state.pipeline.runBtn\n}\n\nexport const selectRunResultPendingList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.values(pipeline.runResult).filter(isNodeResultPending)\n  } else {\n    return []\n  }\n}\n\nexport const selectRunResultPendingNodeIdList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => ({ nodeId, nodeResult }))\n      .filter(isNodeResultPendingAndNodeId)\n      .map(({ nodeId }) => nodeId)\n  } else {\n    return []\n  }\n}\n\nfunction isNodeResultPendingAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultPending\n} {\n  return isNodeResultPending(arg.nodeResult)\n}\n\nexport const selectPipelineStatus = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status\n}\n\nexport const selectPipelineIsCanceled = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.CANCELED\n}\n\nexport const selectPipelineIsStartedSuccess = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.START_SUCCESS\n}\n\nexport const selectPipelineNodeResultSuccessList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => {\n        return {\n          nodeId,\n          nodeResult,\n        }\n      })\n      .filter(isNodeResultSuccessAndNodeId)\n  } else {\n    return []\n  }\n}\n\n// selectPipelineNodeResultSuccessListの返り値の型を正しく認識させるためだけに作った\nfunction isNodeResultSuccessAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultSuccess\n} {\n  return isNodeResultSuccess(arg.nodeResult)\n}\n\nexport const selectPipelineNodeResultStatus =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].status\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultMessage =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].message\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultOutputKeyList =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return Object.keys(nodeResult.outputPaths)\n      }\n    }\n    return []\n  }\n\nconst selectPipelineNodeResultOutputPaths =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return nodeResult.outputPaths\n      }\n    }\n    throw new Error(`key error. nodeId:${nodeId}`)\n  }\n\nexport const selectPipelineNodeResultOutputFilePath =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].path\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n\nexport const selectPipelineNodeResultOutputFileDataType =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].type\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nconst selectSnakemake = (state: RootState) => state.snakemake\nexport const selectSnakemakeParams = (state: RootState) =>\n  selectSnakemake(state).params\n\nexport const selectSnakemakeParamsKeyList = (state: RootState) =>\n  Object.keys(selectSnakemakeParams(state))\n\nexport const selectSnakemakeParam = (paramKey: string) => (state: RootState) =>\n  selectSnakemakeParams(state)[paramKey]\n\nexport const selectSnakemakeParamsValue =\n  (path: string) => (state: RootState) => {\n    const params = selectSnakemakeParams(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('Param is null')\n    }\n  }\n","export const INPUT_NODE_SLICE_NAME = 'inputNode'\n\nexport const FILE_TYPE_SET = {\n  CSV: 'csv',\n  IMAGE: 'image',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type FILE_TYPE = typeof FILE_TYPE_SET[keyof typeof FILE_TYPE_SET]\n\nexport type InputNode = {\n  [nodeId: string]: InputNodeType\n}\n\nexport type InputNodeType = CsvInputNode | ImageInputNode | HDF5InputNode\n\ninterface InputNodeBaseType<\n  T extends FILE_TYPE,\n  P extends { [key: string]: unknown },\n> {\n  fileType: T\n  selectedFilePath?: string | string[]\n  param: P\n}\n\nexport type CsvInputParamType = {\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\n\nexport interface CsvInputNode\n  extends InputNodeBaseType<'csv', CsvInputParamType> {\n  selectedFilePath?: string\n}\n\nexport interface ImageInputNode extends InputNodeBaseType<'image', {}> {\n  selectedFilePath?: string[]\n}\n\nexport interface HDF5InputNode extends InputNodeBaseType<'hdf5', {}> {\n  selectedFilePath?: string\n  hdf5Path?: string\n}\n","import {\n  CsvInputNode,\n  ImageInputNode,\n  HDF5InputNode,\n  InputNodeType,\n  FILE_TYPE_SET,\n} from './InputNodeType'\n\nexport function isImageInputNode(\n  inputNode: InputNodeType,\n): inputNode is ImageInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.IMAGE\n}\n\nexport function isCsvInputNode(\n  inputNode: InputNodeType,\n): inputNode is CsvInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.CSV\n}\n\nexport function isHDF5InputNode(\n  inputNode: InputNodeType,\n): inputNode is HDF5InputNode {\n  return inputNode.fileType === FILE_TYPE_SET.HDF5\n}\n","import { RootState } from 'store/store'\nimport {\n  isHDF5InputNode,\n  isCsvInputNode,\n  isImageInputNode,\n} from './InputNodeUtils'\n\nexport const selectInputNode = (state: RootState) => state.inputNode\n\nexport const selectInputNodeById = (nodeId: string) => (state: RootState) =>\n  state.inputNode[nodeId]\n\nexport const selectInputNodeDefined = (nodeId: string) => (state: RootState) =>\n  Object.keys(state.inputNode).includes(nodeId)\n\nexport const selectInputNodeFileType = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).fileType\n\nexport const selectInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) =>\n    selectInputNodeById(nodeId)(state).selectedFilePath\n\nexport const selectCsvInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isCsvInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectImageInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isImageInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectHDF5InputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectFilePathIsUndefined = (state: RootState) =>\n  Object.keys(state.inputNode).length === 0 ||\n  Object.values(state.inputNode).filter((inputNode) => {\n    if (isHDF5InputNode(inputNode)) {\n      return inputNode.selectedFilePath == null || inputNode.hdf5Path == null\n    } else {\n      const filePath = inputNode.selectedFilePath\n      if (Array.isArray(filePath)) {\n        return filePath.length === 0\n      } else {\n        return filePath == null\n      }\n    }\n  }).length > 0\n\nexport const selectInputNodeParam = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).param\n\nconst selectCsvInputNodeParam = (nodeId: string) => (state: RootState) => {\n  const inputNode = selectInputNodeById(nodeId)(state)\n  if (isCsvInputNode(inputNode)) {\n    return inputNode.param\n  } else {\n    throw new Error(`The InputNode is not CsvInputNode. (nodeId: ${nodeId})`)\n  }\n}\n\nexport const selectCsvInputNodeParamSetHeader =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setHeader\n\nexport const selectCsvInputNodeParamSetIndex =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setIndex\n\nexport const selectCsvInputNodeParamTranspose =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).transpose\n\nexport const selectInputNodeHDF5Path =\n  (nodeId: string) => (state: RootState) => {\n    const item = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(item)) {\n      return item.hdf5Path\n    } else {\n      return undefined\n    }\n  }\n","import { isEdge, Node } from 'react-flow-renderer'\n\nimport {\n  AlgorithmNodePostData,\n  EdgeDict,\n  InputNodePostData,\n  NodeDict,\n  RunPostData,\n} from 'api/run/Run'\n\nimport { RootState } from 'store/store'\n\nimport {\n  selectAlgorithmFunctionPath,\n  selectAlgorithmIsUpdated,\n  selectAlgorithmName,\n  selectAlgorithmParams,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { selectFlowElements } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  isAlgorithmNodeData,\n  isNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport { selectNwbParams } from 'store/slice/NWB/NWBSelectors'\nimport { selectPipelineNodeResultStatus } from 'store/slice/Pipeline/PipelineSelectors'\nimport { NODE_RESULT_STATUS } from 'store/slice/Pipeline/PipelineType'\nimport { selectSnakemakeParams } from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { NODE_TYPE_SET } from 'store/slice/FlowElement/FlowElementType'\nimport {\n  selectInputNodeFileType,\n  selectInputNodeHDF5Path,\n  selectInputNodeParam,\n  selectInputNodeSelectedFilePath,\n} from 'store/slice/InputNode/InputNodeSelectors'\n\nexport const selectRunPostData = (state: RootState) => {\n  const nwbParam = selectNwbParams(state)\n  const snakemakeParam = selectSnakemakeParams(state)\n  const edgeDictForRun = selectEdgeDictForRun(state)\n  const nodeDictForRun = selectNodeDictForRun(state)\n  const forceRunList = selectForceRunList(state)\n  const runPostData: Omit<RunPostData, 'name'> = {\n    nwbParam,\n    snakemakeParam,\n    edgeDict: edgeDictForRun,\n    nodeDict: nodeDictForRun,\n    forceRunList,\n  }\n  return runPostData\n}\n\n/**\n * 前回の結果で、エラーまたはParamに変更があるnodeのリストを返す\n */\nconst selectForceRunList = (state: RootState) => {\n  const elements = selectFlowElements(state)\n  return elements\n    .filter(isAlgorithmNodeData)\n    .filter((node) => {\n      const isUpdated = selectAlgorithmIsUpdated(node.id)(state)\n      const status = selectPipelineNodeResultStatus(node.id)(state)\n      return isUpdated || status === NODE_RESULT_STATUS.ERROR\n    })\n    .map((node) => ({\n      nodeId: node.id,\n      name: selectAlgorithmName(node.id)(state),\n    }))\n}\n\nconst selectNodeDictForRun = (state: RootState): NodeDict => {\n  const elements = selectFlowElements(state)\n  const nodeDict: NodeDict = {}\n  elements.filter(isNodeData).forEach((node) => {\n    if (isAlgorithmNodeData(node)) {\n      const param = selectAlgorithmParams(node.id)(state) ?? {}\n      const functionPath = selectAlgorithmFunctionPath(node.id)(state)\n      const algorithmNodePostData: Node<AlgorithmNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.ALGORITHM,\n          path: functionPath,\n          param,\n        },\n      }\n      nodeDict[node.id] = algorithmNodePostData\n    } else {\n      const filePath = selectInputNodeSelectedFilePath(node.id)(state)\n      const fileType = selectInputNodeFileType(node.id)(state)\n      const param = selectInputNodeParam(node.id)(state)\n      const hdf5Path = selectInputNodeHDF5Path(node.id)(state)\n      const inputNodePosyData: Node<InputNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.INPUT,\n          path: filePath ?? '',\n          param,\n          hdf5Path: hdf5Path,\n          fileType,\n        },\n      }\n      nodeDict[node.id] = inputNodePosyData\n    }\n  })\n  return nodeDict\n}\n\nconst selectEdgeDictForRun = (state: RootState) => {\n  const edgeDict: EdgeDict = {}\n  selectFlowElements(state)\n    .filter(isEdge)\n    .forEach((edge) => {\n      edgeDict[edge.id] = edge\n    })\n  return edgeDict\n}\n","import axios from 'utils/axios'\nimport type { Edge, Node } from 'react-flow-renderer'\n\nimport { BASE_URL } from 'const/API'\nimport type {\n  AlgorithmNodeData,\n  InputNodeData,\n} from 'store/slice/FlowElement/FlowElementType'\nimport type { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport type { ParamMap } from 'utils/param/ParamType'\n\nexport type RunPostData = {\n  name: string\n  nodeDict: NodeDict\n  edgeDict: EdgeDict\n  nwbParam: ParamMap\n  snakemakeParam: ParamMap\n  forceRunList: { nodeId: string; name: string }[]\n}\n\nexport type NodeDict = {\n  [nodeId: string]: Node<NodePostDataType>\n}\n\nexport type EdgeDict = {\n  [nodeId: string]: Edge\n}\n\nexport type NodePostDataType = AlgorithmNodePostData | InputNodePostData\n\nexport interface InputNodePostData extends InputNodeData {\n  path: string | string[]\n  fileType: FILE_TYPE\n  param?: {\n    [key: string]: unknown\n  }\n  hdf5Path?: string\n}\n\nexport interface AlgorithmNodePostData extends AlgorithmNodeData {\n  path: string\n  param: ParamMap\n}\n\nexport async function runApi(\n  workspaceId: string,\n  data: RunPostData,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${workspaceId}`, data)\n  return response.data\n}\n\nexport async function runByUidApi(\n  workspaceId: string,\n  uid: string,\n  data: Omit<RunPostData, 'name'>,\n): Promise<string> {\n  const response = await axios.post(\n    `${BASE_URL}/run/${workspaceId}/${uid}`,\n    data,\n  )\n  return response.data\n}\n\nexport type RunResultDTO = {\n  [nodeId: string]: {\n    status: string\n    message: string\n    name: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type OutputPathsDTO = {\n  [outputKey: string]: {\n    path: string\n    type: string\n  }\n}\n\nexport async function runResult(data: {\n  workspaceId: string\n  uid: string\n  pendingNodeIdList: string[]\n}): Promise<RunResultDTO> {\n  const { workspaceId, uid, pendingNodeIdList } = data\n  const response = await axios.post(\n    `${BASE_URL}/run/result/${workspaceId}/${uid}`,\n    {\n      pendingNodeIdList,\n    },\n  )\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { ThunkApiConfig } from 'store/store'\nimport { PIPELINE_SLICE_NAME } from './PipelineType'\nimport {\n  runApi,\n  runByUidApi,\n  runResult,\n  RunResultDTO,\n  RunPostData,\n} from 'api/run/Run'\nimport {\n  selectPipelineLatestUid,\n  selectRunResultPendingNodeIdList,\n} from './PipelineSelectors'\nimport { selectCurrentWorkspaceId } from '../Workspace/WorkspaceSelector'\n\nexport const run = createAsyncThunk<\n  string,\n  { runPostData: RunPostData },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/run`, async ({ runPostData }, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const responseData = await runApi(workspaceId, runPostData)\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist.')\n  }\n})\n\nexport const runByCurrentUid = createAsyncThunk<\n  string,\n  { runPostData: Omit<RunPostData, 'name'> },\n  ThunkApiConfig\n>(\n  `${PIPELINE_SLICE_NAME}/runByCurrentUid`,\n  async ({ runPostData }, thunkAPI) => {\n    const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n    const currentUid = selectPipelineLatestUid(thunkAPI.getState())\n    if (workspaceId && currentUid != null) {\n      try {\n        const responseData = await runByUidApi(\n          workspaceId,\n          currentUid,\n          runPostData,\n        )\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    } else {\n      return thunkAPI.rejectWithValue(\n        'workspaceId or currentUid dose not exist.',\n      )\n    }\n  },\n)\n\nexport const pollRunResult = createAsyncThunk<\n  RunResultDTO,\n  {\n    uid: string\n  },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/pollRunResult`, async ({ uid }, thunkAPI) => {\n  const pendingNodeIdList = selectRunResultPendingNodeIdList(\n    thunkAPI.getState(),\n  )\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const responseData = await runResult({\n        workspaceId,\n        uid,\n        pendingNodeIdList,\n      })\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist')\n  }\n})\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\nimport { EdgeDict, NodeDict, OutputPathsDTO, RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport type ExperimentsDTO = {\n  [uid: string]: ExperimentDTO\n}\n\nexport type FunctionsDTO = {\n  [nodeId: string]: {\n    name: string\n    success: string\n    unique_id: string\n    hasNWB: boolean\n    message?: string\n    started_at?: string\n    finished_at?: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type ExperimentDTO = {\n  function: FunctionsDTO\n  name: string\n  success?: EXPERIMENTS_STATUS\n  started_at: string\n  finished_at?: string\n  workspace_id: string\n  unique_id: string\n  hasNWB: boolean\n  edgeDict: EdgeDict\n  nodeDict: NodeDict\n}\n\nexport async function getExperimentsApi(\n  workspaceId: string,\n): Promise<ExperimentsDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments/${workspaceId}`)\n  return response.data\n}\n\nexport async function deleteExperimentByUidApi(\n  workspaceId: string,\n  uid: string,\n): Promise<boolean> {\n  const response = await axios.delete(\n    `${BASE_URL}/experiments/${workspaceId}/${uid}`,\n  )\n  return response.data\n}\n\nexport async function deleteExperimentByListApi(\n  workspaceId: string,\n  uidList: Array<string>,\n): Promise<boolean> {\n  const response = await axios.post(\n    `${BASE_URL}/experiments/delete/${workspaceId}`,\n    {\n      uidList,\n    },\n  )\n  return response.data\n}\n\nexport async function importExperimentByUidApi(\n  workspaceId: string,\n  uid: string,\n): Promise<RunPostData> {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/import/${workspaceId}/${uid}`,\n  )\n  return response.data\n}\n\nexport async function downloadExperimentNwbApi(\n  workspaceId: string,\n  uid: string,\n  nodeId?: string,\n) {\n  const path =\n    nodeId != null\n      ? `${BASE_URL}/experiments/download/nwb/${workspaceId}/${uid}/${nodeId}`\n      : `${BASE_URL}/experiments/download/nwb/${workspaceId}/${uid}`\n  const response = await axios.get(path, {\n    responseType: 'blob',\n  })\n  return response.data\n}\n\nexport async function downloadExperimentConfigApi(\n  workspaceId: string,\n  uid: string,\n) {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/download/config/${workspaceId}/${uid}`,\n    {\n      responseType: 'blob',\n    },\n  )\n  return response.data\n}\n\nexport async function renameExperiment(\n  workspaceId: string,\n  uid: string,\n  new_name: string,\n) {\n  const response = await axios.patch(\n    `${BASE_URL}/experiments/${workspaceId}/${uid}/rename`,\n    {\n      new_name,\n    },\n  )\n  return response.data\n}\n","export const EXPERIMENTS_SLICE_NAME = 'experiments'\n\nexport type Experiments =\n  | {\n      status: 'fulfilled'\n      experimentList: ExperimentListType\n    }\n  | {\n      status: 'uninitialized'\n    }\n  | {\n      status: 'pending'\n    }\n  | {\n      status: 'error'\n      message?: string\n    }\n\nexport type ExperimentListType = {\n  [uid: string]: ExperimentType\n}\n\nexport type ExperimentType = {\n  uid: string\n  functions: {\n    [nodeId: string]: ExperimentFunction\n  }\n  status?: EXPERIMENTS_STATUS\n  name: string\n  timestamp: string\n  hasNWB: boolean\n}\n\nexport type ExperimentFunction = {\n  name: string\n  nodeId: string\n  status: EXPERIMENTS_STATUS\n  hasNWB: boolean\n}\n\nexport type EXPERIMENTS_STATUS = 'success' | 'error' | 'running'\n\nexport interface Experiment {\n  uid: string\n  name: string\n  timestamp: string\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  ExperimentsDTO,\n  getExperimentsApi,\n  deleteExperimentByUidApi,\n  importExperimentByUidApi,\n  deleteExperimentByListApi,\n} from 'api/experiments/Experiments'\nimport { RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_SLICE_NAME } from './ExperimentsType'\nimport { selectCurrentWorkspaceId } from '../Workspace/WorkspaceSelector'\nimport { ThunkApiConfig } from 'store/store'\n\nexport const getExperiments = createAsyncThunk<\n  ExperimentsDTO,\n  undefined,\n  ThunkApiConfig\n>(`${EXPERIMENTS_SLICE_NAME}/getExperiments`, async (_, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const response = await getExperimentsApi(workspaceId)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist.')\n  }\n})\n\nexport const deleteExperimentByUid = createAsyncThunk<\n  boolean,\n  string,\n  ThunkApiConfig\n>(`${EXPERIMENTS_SLICE_NAME}/deleteExperimentByUid`, async (uid, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const response = await deleteExperimentByUidApi(workspaceId, uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist.')\n  }\n})\n\nexport const deleteExperimentByList = createAsyncThunk<\n  boolean,\n  string[],\n  ThunkApiConfig\n>(`${EXPERIMENTS_SLICE_NAME}/deleteExperimentByList`, async (uid, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const response = await deleteExperimentByListApi(workspaceId, uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist.')\n  }\n})\n\nexport const importExperimentByUid = createAsyncThunk<\n  RunPostData,\n  { workspaceId: string; uid: string }\n>(\n  `${EXPERIMENTS_SLICE_NAME}/importExperimentByUid`,\n  async ({ workspaceId, uid }, thunkAPI) => {\n    try {\n      const response = await importExperimentByUidApi(workspaceId, uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { pollRunResult, run, runByCurrentUid } from './PipelineActions'\nimport {\n  Pipeline,\n  PIPELINE_SLICE_NAME,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n  RUN_STATUS,\n} from './PipelineType'\n\nimport {\n  getInitialRunResult,\n  convertToRunResult,\n  isNodeResultPending,\n} from './PipelineUtils'\n\nconst initialState: Pipeline = {\n  run: {\n    status: RUN_STATUS.START_UNINITIALIZED,\n  },\n  runBtn: RUN_BTN_OPTIONS.RUN_NEW,\n}\n\nexport const pipelineSlice = createSlice({\n  name: PIPELINE_SLICE_NAME,\n  initialState,\n  reducers: {\n    cancelPipeline(state) {\n      state.run.status = RUN_STATUS.CANCELED\n    },\n    setRunBtnOption: (\n      state,\n      action: PayloadAction<{\n        runBtnOption: RUN_BTN_TYPE\n      }>,\n    ) => {\n      state.runBtn = action.payload.runBtnOption\n    },\n    clearCurrentPipeline: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.run.status === RUN_STATUS.START_SUCCESS) {\n          state.run.runResult = {\n            ...state.run.runResult, // pendingのNodeResultはそのままでsuccessもしくはerrorのみ上書き\n            ...convertToRunResult(action.payload),\n          }\n          const runResultPendingList = Object.values(\n            state.run.runResult,\n          ).filter(isNodeResultPending)\n          if (runResultPendingList.length === 0) {\n            // 終了\n            state.run.status = RUN_STATUS.FINISHED\n          }\n        }\n      })\n      .addCase(pollRunResult.rejected, (state, action) => {\n        state.run.status = RUN_STATUS.ABORTED\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.meta.arg.uid,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addMatcher(\n        isAnyOf(run.pending, runByCurrentUid.pending),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_PENDING,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          const uid = action.payload\n          state.run = {\n            uid,\n            status: RUN_STATUS.START_SUCCESS,\n            runResult: getInitialRunResult({ name: '', ...runPostData }),\n            runPostData: { name: '', ...runPostData },\n          }\n          state.currentPipeline = {\n            uid: action.payload,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.rejected, runByCurrentUid.rejected),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_ERROR,\n          }\n        },\n      )\n  },\n})\n\nexport const { cancelPipeline, setRunBtnOption, clearCurrentPipeline } =\n  pipelineSlice.actions\n\nexport default pipelineSlice.reducer\n","import { RootState } from 'store/store'\nimport { EXPERIMENTS_STATUS } from './ExperimentsType'\n\nconst selectExperiments = (state: RootState) => state.experiments\n\nexport const selectExperimentsStatusIsUninitialized = (state: RootState) =>\n  selectExperiments(state).status === 'uninitialized'\n\nexport const selectExperimentsStatusIsPending = (state: RootState) =>\n  selectExperiments(state).status === 'pending'\n\nexport const selectExperimentsStatusIsFulfilled = (state: RootState) =>\n  selectExperiments(state).status === 'fulfilled'\n\nexport const selectExperimentsStatusIsError = (state: RootState) =>\n  selectExperiments(state).status === 'error'\n\nexport const selectExperimentsErrorMessage = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'error') {\n    return experiments.message\n  } else {\n    throw new Error('experiments status is not error')\n  }\n}\n\nexport const selectExperimentList = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'fulfilled') {\n    return experiments.experimentList\n  } else {\n    throw new Error('experiments status is not fulfilled')\n  }\n}\n\nexport const selectExperimentUidList = (state: RootState) =>\n  Object.keys(selectExperimentList(state))\n\nexport const selectExperiment = (uid: string) => (state: RootState) =>\n  selectExperimentList(state)[uid]\n\nexport const selectExperimentTimeStamp = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).timestamp\n\nexport const selectExperimentName = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).name\n\nexport const selectExperimentHasNWB = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).hasNWB\n\nexport const selectExperimentStatus =\n  (uid: string) =>\n  (state: RootState): EXPERIMENTS_STATUS => {\n    const experiment = selectExperimentList(state)[uid]\n    if (experiment.status) {\n      return experiment.status\n    }\n\n    const functions = selectExperimentList(state)[uid].functions\n    const statusList = Object.values(functions).map((f) => f.status)\n    if (statusList.findIndex((status) => status === 'error') >= 0) {\n      return 'error'\n    } else if (statusList.findIndex((status) => status === 'running') >= 0) {\n      return 'running'\n    } else {\n      return 'success'\n    }\n  }\n\nexport const selectExperimentCheckList =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionNodeIdList =\n  (uid: string) => (state: RootState) =>\n    Object.keys(selectExperimentList(state)[uid].functions)\n\nexport const selectExperimentFunction =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentList(state)[uid].functions[nodeId]\n\nexport const selectExperimentFunctionName =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).name\n\nexport const selectExperimentFunctionStatus =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionHasNWB =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).hasNWB\n","import React from 'react'\nimport DoneIcon from '@mui/icons-material/Done'\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline'\nimport HorizontalRuleIcon from '@mui/icons-material/HorizontalRule'\n\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport const ExperimentStatusIcon = React.memo<{ status: EXPERIMENTS_STATUS }>(\n  ({ status }) => {\n    switch (status) {\n      case 'error':\n        return <ErrorOutlineIcon color=\"error\" />\n      case 'success':\n        return <DoneIcon color=\"success\" />\n      case 'running':\n        return <HorizontalRuleIcon color=\"inherit\" />\n    }\n  },\n)\n","export function arrayEqualityFn<T>(a: T[], b: T[]) {\n  return a === b || (a.length === b.length && a.every((v, i) => v === b[i]))\n}\n\nexport function twoDimarrayEqualityFn<T>(a: T[][], b: T[][]) {\n  return (\n    a === b ||\n    (a.length === b.length && a.every((v, i) => arrayEqualityFn(v, b[i])))\n  )\n}\n","import React, { useState, useRef } from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport GetAppIcon from '@mui/icons-material/GetApp'\nimport { useSelector } from 'react-redux'\nimport {\n  downloadExperimentConfigApi,\n  downloadExperimentNwbApi,\n} from 'api/experiments/Experiments'\n\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const NWBDownloadButton = React.memo<{\n  name: string\n  nodeId?: string\n  hasNWB: boolean\n}>(({ name, nodeId, hasNWB }) => {\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n\n  const onClick = async () => {\n    if(!workspaceId) return;\n    try {\n      const responseData = await downloadExperimentNwbApi(workspaceId!, uid, nodeId)\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      throw new Error('Download Error')\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick} color=\"primary\" disabled={!hasNWB}>\n        <GetAppIcon />\n      </IconButton>\n      <a href={url} download={`${name}.nwb`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n\nexport const ConfigDownloadButton = React.memo(() => {\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n\n  const onClick = async () => {\n    try {\n      const responseData = await downloadExperimentConfigApi(workspaceId!, uid)\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      throw new Error('Download Error')\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick}>\n        <GetAppIcon color=\"primary\" />\n      </IconButton>\n      <a href={url} download={`config.yaml`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport Collapse from '@mui/material/Collapse'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Typography from '@mui/material/Typography'\n\nimport { ExperimentUidContext } from './ExperimentTable'\nimport {\n  selectExperimentFunctionHasNWB,\n  selectExperimentFunctionName,\n  selectExperimentFunctionNodeIdList,\n  selectExperimentFunctionStatus,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { NWBDownloadButton } from './Button/DownloadButton'\n\nexport const CollapsibleTable = React.memo<{\n  open: boolean\n}>(({ open }) => {\n  return (\n    <TableRow>\n      <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={10}>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Box margin={1}>\n            <Typography variant=\"h6\" gutterBottom component=\"div\">\n              Details\n            </Typography>\n            <Table size=\"small\" aria-label=\"purchases\">\n              <Head />\n              <Body />\n            </Table>\n          </Box>\n        </Collapse>\n      </TableCell>\n    </TableRow>\n  )\n})\n\nconst Head = React.memo(() => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>Function</TableCell>\n        <TableCell>nodeID</TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>NWB</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst Body = React.memo(() => {\n  const uid = React.useContext(ExperimentUidContext)\n  const nodeIdList = useSelector(\n    selectExperimentFunctionNodeIdList(uid),\n    arrayEqualityFn,\n  )\n  return (\n    <TableBody>\n      {nodeIdList.map((nodeId) => (\n        <TableRowOfFunction nodeId={nodeId} />\n      ))}\n    </TableBody>\n  )\n})\n\nconst TableRowOfFunction = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const name = useSelector(selectExperimentFunctionName(uid, nodeId))\n  const status = useSelector(selectExperimentFunctionStatus(uid, nodeId))\n  const hasNWB = useSelector(selectExperimentFunctionHasNWB(uid, nodeId))\n\n  return (\n    <TableRow key={nodeId}>\n      <TableCell component=\"th\" scope=\"row\">\n        {name}\n      </TableCell>\n      <TableCell>{nodeId}</TableCell>\n      <TableCell>\n        <ExperimentStatusIcon status={status} />\n      </TableCell>\n      <TableCell>\n        <NWBDownloadButton name={name} nodeId={nodeId} hasNWB={hasNWB} />\n      </TableCell>\n    </TableRow>\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport IconButton from '@mui/material/IconButton'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline'\nimport { selectExperimentName } from 'store/slice/Experiments/ExperimentsSelectors'\nimport { deleteExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { clearCurrentPipeline } from 'store/slice/Pipeline/PipelineSlice'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineIsStartedSuccess,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\n\nexport const DeleteButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const currentPipelineUid = useSelector(selectPipelineLatestUid)\n  const uid = React.useContext(ExperimentUidContext)\n  const isRunning = useSelector((state: RootState) => {\n    const currentUid = selectPipelineLatestUid(state)\n    const isPending = selectPipelineIsStartedSuccess(state)\n    return uid === currentUid && isPending\n  })\n  const name = useSelector(selectExperimentName(uid))\n  const [open, setOpen] = React.useState(false)\n\n  const onClickOpen = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(deleteExperimentByUid(uid))\n    uid === currentPipelineUid && dispatch(clearCurrentPipeline())\n  }\n  return (\n    <>\n      <IconButton onClick={onClickOpen} disabled={isRunning} color=\"error\">\n        <DeleteOutlineIcon />\n      </IconButton>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete {name}?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type TimeSeriesData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getTimeSeriesInitDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/inittimedata/${path}`)\n  return response.data\n}\n\nexport async function getTimeSeriesDataByIdApi(\n  path: string,\n  index: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/timedata/${path}`, {\n    params: {\n      index: index,\n    },\n  })\n  return response.data\n}\n\nexport async function getTimeSeriesAllDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/alltimedata/${path}`)\n  return response.data\n}\n\nexport type HeatMapData = number[][]\n\nexport async function getHeatMapDataApi(\n  path: string,\n): Promise<{ data: HeatMapData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`)\n  return response.data\n}\n\nexport type ImageData = number[][][]\n\nexport async function getImageDataApi(\n  path: string,\n  params: {\n    startIndex?: number\n    endIndex?: number\n  },\n): Promise<{ data: ImageData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n    params: {\n      start_index: params.startIndex,\n      end_index: params.endIndex,\n    },\n  })\n  return response.data\n}\n\nexport type CsvData = number[][]\n\nexport async function getCsvDataApi(path: string): Promise<{ data: CsvData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/csv/${path}`)\n  return response.data\n}\n\nexport type RoiData = number[][][]\n\nexport async function getRoiDataApi(path: string): Promise<{ data: RoiData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {})\n  return response.data\n}\n\nexport type ScatterData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getScatterDataApi(\n  path: string,\n): Promise<{ data: ScatterData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type BarData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getBarDataApi(\n  path: string,\n): Promise<{ data: BarData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type HTMLData = string\n\nexport async function getHTMLDataApi(\n  path: string,\n): Promise<{ data: HTMLData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/html/${path}`, {})\n  return response.data\n}\n\nexport async function addRoiApi(\n  path: string,\n  data: { posx: number; posy: number; sizex: number; sizey: number },\n): Promise<{ data: HTMLData }> {\n  const response = await axios.post(\n    `${BASE_URL}/outputs/image/${path}/add_roi`,\n    data,\n  )\n  return response.data\n}\n\nexport async function mergeRoiApi(\n  path: string,\n  data: { ids: number[] },\n): Promise<{ data: HTMLData }> {\n  const response = await axios.post(\n    `${BASE_URL}/outputs/image/${path}/merge_roi`,\n    data,\n  )\n  return response.data\n}\n\nexport async function deleteRoiApi(\n  path: string,\n  data: { ids: number[] },\n): Promise<{ data: HTMLData }> {\n  const response = await axios.post(\n    `${BASE_URL}/outputs/image/${path}/delete_roi`,\n    data,\n  )\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  TimeSeriesData,\n  CsvData,\n  RoiData,\n  ScatterData,\n  BarData,\n  HTMLData,\n  ImageData,\n  HeatMapData,\n  getTimeSeriesInitDataApi,\n  getTimeSeriesDataByIdApi,\n  getTimeSeriesAllDataApi,\n  getHeatMapDataApi,\n  getImageDataApi,\n  getCsvDataApi,\n  getRoiDataApi,\n  getScatterDataApi,\n  getBarDataApi,\n  getHTMLDataApi,\n} from 'api/outputs/Outputs'\nimport { DISPLAY_DATA_SLICE_NAME } from './DisplayDataType'\n\nexport const getTimeSeriesInitData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; itemId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesInitData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesInitDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesDataById = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; index: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesDataById`,\n  async ({ path, index }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesDataByIdApi(path, index)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesAllData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesAllData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesAllDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHeatMapData = createAsyncThunk<\n  { data: HeatMapData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHeatMapData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHeatMapDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getImageData = createAsyncThunk<\n  { data: ImageData },\n  { path: string; startIndex?: number; endIndex?: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getImageData`,\n  async ({ path, startIndex, endIndex }, thunkAPI) => {\n    try {\n      const response = await getImageDataApi(path, { startIndex, endIndex })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getCsvData = createAsyncThunk<\n  {\n    data: CsvData\n  },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getCsvData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getCsvDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getRoiData = createAsyncThunk<{ data: RoiData }, { path: string }>(\n  `${DISPLAY_DATA_SLICE_NAME}/getRoiData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getRoiDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getScatterData = createAsyncThunk<\n  { data: ScatterData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getScatterData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getScatterDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getBarData = createAsyncThunk<\n  { data: BarData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getBarData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getBarDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getHTMLData = createAsyncThunk<\n  { data: HTMLData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHTMLData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHTMLDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import { RootState } from 'store/store'\n\nconst selectDisplayData = (state: RootState) => state.displayData\n\nexport const selectTimeSeriesData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].data\n\nexport const selectTimeSeriesXrange =\n  (filePath: string) => (state: RootState) =>\n    selectDisplayData(state).timeSeries[filePath].xrange\n\nexport const selectTimeSeriesStd = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].std\n\nexport const selectTimeSeriesDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).timeSeries).includes(filePath)\n\nexport const selectTimeSeriesDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].pending\n\nexport const selectTimeSeriesDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].fulfilled\n\nexport const selectTimeSeriesDataError =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).timeSeries[filePath].error\n      : null\n\nexport const selectHeatMapData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].data\n\nexport const selectHeatMapColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].columns\n\nexport const selectHeatMapIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].index\n\nexport const selectHeatMapDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).heatMap).includes(filePath)\n\nexport const selectHeatMapDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].pending\n\nexport const selectHeatMapDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].fulfilled\n\nexport const selectHeatMapDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).heatMap[filePath].error\n      : null\n\nexport const selectImageData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).image[filePath]\n\nexport const selectImageDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).image).includes(filePath)\n\nexport const selectImageDataError = (filePath: string) => (state: RootState) =>\n  selectImageDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).image[filePath].error\n    : null\n\nexport const selectImageDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].pending\n\nexport const selectImageDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].fulfilled\n\nexport const selectImageDataMaxSize =\n  (filePath: string) => (state: RootState) => {\n    if (!selectImageDataIsPending(filePath)(state)) {\n      return selectImageData(filePath)(state).data.length - 1\n    } else {\n      return 0\n    }\n  }\n\nexport const selectActiveImageData =\n  (filePath: string, activeIndex: number) => (state: RootState) => {\n    return selectImageData(filePath)(state).data[activeIndex]\n  }\n\nexport const selectCsvData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).csv[filePath].data\n\nexport const selectCsvDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).csv).includes(filePath)\n\nexport const selectCsvDataError = (filePath: string) => (state: RootState) =>\n  selectCsvDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).csv[filePath].error\n    : null\n\nexport const selectCsvDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].pending\n\nexport const selectCsvDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].fulfilled\n\nexport const selectRoiData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).roi[filePath]?.data[0] ?? []\n\nexport const selectRoiDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).roi).includes(filePath)\n\nexport const selectRoiDataError = (filePath: string) => (state: RootState) =>\n  selectRoiDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).roi[filePath].error\n    : null\n\nexport const selectRoiDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].pending\n\nexport const selectRoiDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].fulfilled\n\nexport const selectRoiUniqueList = (filePath: string) => (state: RootState) => {\n  if (selectRoiDataIsFulfilled(filePath)(state)) {\n    return selectDisplayData(state).roi[filePath].roiUniqueList\n  }\n  return null\n}\n\nexport const selectScatterData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).scatter[filePath]?.data ?? []\n\nexport const selectScatterDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).scatter).includes(filePath)\n\nexport const selectScatterDataError =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).scatter[filePath].error\n      : null\n\nexport const selectScatterDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].pending\n\nexport const selectScatterDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].fulfilled\n\nexport const selectBarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.data ?? []\n\nexport const selectBarIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.index ?? []\n\nexport const selectBarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).bar).includes(filePath)\n\nexport const selectBarDataError = (filePath: string) => (state: RootState) =>\n  selectBarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).bar[filePath].error\n    : null\n\nexport const selectBarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].pending\n\nexport const selectBarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].fulfilled\n\nexport const selectHTMLData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).html[filePath]?.data ?? ''\n\nexport const selectHTMLDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).html).includes(filePath)\n\nexport const selectHTMLDataError = (filePath: string) => (state: RootState) =>\n  selectHTMLDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).html[filePath].error\n    : null\n\nexport const selectHTMLDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].pending\n\nexport const selectHTMLDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].fulfilled\n","import { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\n\nexport const VISUALIZE_ITEM_SLICE_NAME = 'visualaizeItem'\n\nexport type VisualaizeItem = {\n  selectedItemId: number | null\n  items: {\n    [itemId: number | string]: VisualaizeItemType\n  }\n  layout: ItemLayout\n}\n\nexport type ItemLayout = number[][] // itemIdをrow,columnで並べる\n\nexport type VisualaizeItemType = DisplayDataItem\n\nexport interface ItemBaseType<T extends VISUALIZE_ITEM_TYPE> {\n  itemType: T\n  width: number\n  height: number\n}\n\nexport type ColorType = {\n  rgb: string\n  offset: string\n}\n\nexport const VISUALIZE_ITEM_TYPE_SET = {\n  DISPLAY_DATA: 'displayData',\n} as const\n\nexport type VISUALIZE_ITEM_TYPE =\n  typeof VISUALIZE_ITEM_TYPE_SET[keyof typeof VISUALIZE_ITEM_TYPE_SET]\n\nexport type DisplayDataItem =\n  | ImageItem\n  | TimeSeriesItem\n  | HeatMapItem\n  | CsvItem\n  | RoiItem\n  | ScatterItem\n  | BarItem\n  | HDF5Item\n  | HTMLItem\n  | FluoItem\n  | BehaviorItem\n\nexport interface DisplayDataItemBaseType extends ItemBaseType<'displayData'> {\n  filePath: string | null\n  nodeId: string | null\n  dataType: DATA_TYPE | null\n  isWorkflowDialog: boolean\n  saveFileName: string\n  saveFormat: string\n}\n\nexport interface ImageItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.IMAGE\n  activeIndex: number\n  startIndex: number\n  endIndex: number\n  showticklabels: boolean\n  zsmooth: string | boolean\n  showline: boolean\n  showgrid: boolean\n  showscale: boolean\n  colors: ColorType[]\n  alpha: number\n  roiItem: RoiItem | null\n  roiAlpha: number\n  duration: number\n  clickedDataId?: string\n}\n\nexport interface TimeSeriesItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.TIME_SERIES\n  offset: boolean\n  span: number\n  showgrid: boolean\n  showline: boolean\n  showticklabels: boolean\n  zeroline: boolean\n  xrange: {\n    left: number | undefined\n    right: number | undefined\n  }\n  maxIndex: number\n  refImageItemId: number | null\n  drawOrderList: string[]\n}\n\nexport interface HeatMapItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HEAT_MAP\n  showscale: boolean\n  colors: ColorType[]\n}\nexport interface CsvItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.CSV\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\nexport interface RoiItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.ROI\n  outputKey?: string\n  // colors: ColorType[]\n}\n\nexport interface ScatterItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.SCATTER\n  xIndex: string\n  yIndex: string\n}\n\nexport interface BarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BAR\n  index: string\n}\n\nexport interface HDF5Item extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HDF5\n}\n\nexport interface HTMLItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HTML\n}\n\nexport interface FluoItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.FLUO\n}\n\nexport interface BehaviorItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BEHAVIOR\n}\n","import { DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  VisualaizeItemType,\n  DisplayDataItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  ImageItem,\n  TimeSeriesItem,\n  HeatMapItem,\n  RoiItem,\n  ScatterItem,\n  CsvItem,\n  BarItem,\n} from './VisualizeItemType'\n\nexport function isDisplayDataItem(\n  item: VisualaizeItemType,\n): item is DisplayDataItem {\n  return item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA\n}\n\nexport function isImageItem(item: VisualaizeItemType): item is ImageItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.IMAGE\n  )\n}\n\nexport function isTimeSeriesItem(\n  item: VisualaizeItemType,\n): item is TimeSeriesItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.TIME_SERIES\n  )\n}\n\nexport function isCsvItem(item: VisualaizeItemType): item is CsvItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.CSV\n  )\n}\n\nexport function isHeatMapItem(item: VisualaizeItemType): item is HeatMapItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HEAT_MAP\n  )\n}\n\nexport function isRoiItem(item: VisualaizeItemType): item is RoiItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.ROI\n  )\n}\n\nexport function isScatterItem(item: VisualaizeItemType): item is ScatterItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.SCATTER\n  )\n}\n\nexport function isBarItem(item: VisualaizeItemType): item is BarItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.BAR\n  )\n}\n","import { RootState } from 'store/store'\nimport {\n  selectRoiData,\n  selectRoiUniqueList,\n  selectTimeSeriesData,\n  selectTimeSeriesDataIsInitialized,\n} from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport {\n  isDisplayDataItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isHeatMapItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const selectSelectedVisualizeItemId = (state: RootState) =>\n  state.visualaizeItem.selectedItemId\n\nexport const selectVisualizeImageItemIdList = (state: RootState) =>\n  Object.keys(state.visualaizeItem.items)\n    .map(Number)\n    .filter((itemId) => {\n      const item = selectVisualizeItemById(itemId)(state)\n      return isImageItem(item) && !item.isWorkflowDialog\n    })\n\nexport const selectVisualizeItems = (state: RootState) =>\n  state.visualaizeItem.items\n\nexport const selectVisualizeItemById = (itemId: number) => (state: RootState) =>\n  state.visualaizeItem.items[itemId]\n\nexport const selectVisualizeItemLayout = (state: RootState) =>\n  state.visualaizeItem.layout\n\nexport const selectVisualizeItemIsWorkflowDialog =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).isWorkflowDialog\n  }\n\nexport const selectVisualizeItemIdForWorkflowDialog =\n  (nodeId: string, filePath: string, dataType: DATA_TYPE) =>\n  (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    let targetItemId: null | number = null\n    for (const [itemId, value] of Object.entries(items)) {\n      if (\n        value.nodeId === nodeId &&\n        value.filePath === filePath &&\n        value.dataType === dataType &&\n        value.isWorkflowDialog\n      ) {\n        targetItemId = Number(itemId)\n      }\n    }\n    return targetItemId\n  }\n\nexport const selectVisualizeItemWidth =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).width\n  }\n\nexport const selectVisualizeItemHeight =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).height\n  }\n\nexport const selectVisualizeItemType = (itemId: number) => (state: RootState) =>\n  selectVisualizeItemById(itemId)(state).itemType\n\nexport const selectVisualizeDataType =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.dataType\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataNodeId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.nodeId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeSaveFilename =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFileName\n  }\n\nexport const selectVisualizeSaveFormat =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFormat\n  }\n\nexport const selectImageItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemNodeId = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.nodeId ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemFilePath = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.filePath ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemOutputKeys = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.outputKey ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemShowticklabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemZsmooth =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.zsmooth\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemStartIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.startIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemEndIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.endIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemColors = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.colors\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemActiveIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.activeIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemAlpha = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.alpha\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemRoiAlpha =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.roiAlpha\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemRoiFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      if (item.roiItem) {\n        return item.roiItem.filePath\n      } else {\n        return null\n      }\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemDuration =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.duration\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemOffset =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.offset\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemSpan =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.span\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowTickLabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemZeroLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.zeroline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemXrange =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.xrange\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemDrawOrderList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.drawOrderList\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectTimeSeriesItemRefImageItemId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.refImageItemId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemRefRoiUniqueList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      if (item.refImageItemId != null) {\n        const imageItem = selectVisualizeItems(state)[item.refImageItemId]\n        if (isImageItem(imageItem) && imageItem.roiItem?.filePath != null) {\n          return selectRoiUniqueList(imageItem.roiItem.filePath)(state)\n        }\n      }\n      return null\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemKeys =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const path = selectTimeSeriesItemFilePath(itemId)(state)\n      if (path != null && selectTimeSeriesDataIsInitialized(path)(state)) {\n        const dataKeys = Object.keys(selectTimeSeriesData(path)(state))\n        const roiUniqueList =\n          selectTimeSeriesItemRefRoiUniqueList(itemId)(state)\n        if (roiUniqueList != null) {\n          return dataKeys.filter((key) => roiUniqueList.includes(key))\n        } else {\n          return dataKeys\n        }\n      } else {\n        return []\n      }\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectRoiItemIndex =\n  (itemId: number, roiFilePath: string | null) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const maxIdx = item.maxIndex\n      if (maxIdx !== 0) {\n        return maxIdx\n      }\n    }\n\n    if (roiFilePath !== null) {\n      return selectRoiItemMaxNumber(roiFilePath)(state)\n    } else {\n      return 0\n    }\n  }\n\nexport const selectRoiItemMaxNumber =\n  (roiFilePath: string) => (state: RootState) => {\n    const roiData = selectRoiData(roiFilePath)(state)\n    if (roiData.length !== 0) {\n      return Math.max(...roiData.map((arr) => Math.max(...arr)))\n    } else {\n      return 0\n    }\n  }\n\nexport const selectHeatMapItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectHeatMapItemColors =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.colors\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemTranspose =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.transpose\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetHeader =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.setHeader\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isCsvItem(item)) {\n    return item.setIndex\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectBarItemIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isBarItem(item)) {\n    return item.index\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectScatterItemXIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.xIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectScatterItemYIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.yIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectDisplayDataIsSingle =\n  (itemId: number) => (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    const item = items[itemId]\n    const targetFilePath = item.filePath\n    return (\n      Object.values(items).filter((value) => value.filePath === targetFilePath)\n        .length === 1\n    )\n  }\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { ThunkApiConfig } from 'store/store'\nimport { getTimeSeriesDataById } from '../DisplayData/DisplayDataActions'\nimport { selectRoiData } from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport { selectVisualizeItems } from './VisualizeItemSelectors'\nimport { VISUALIZE_ITEM_SLICE_NAME } from './VisualizeItemType'\nimport { isImageItem, isTimeSeriesItem } from './VisualizeItemUtils'\n\nexport const setImageItemClikedDataId = createAsyncThunk<\n  void,\n  { itemId: number; clickedDataId: string },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setImageItemClikedDataId`,\n  ({ itemId, clickedDataId }, thunkAPI) => {\n    const items = selectVisualizeItems(thunkAPI.getState())\n    Object.values(items).forEach((item) => {\n      if (\n        isTimeSeriesItem(item) &&\n        item.filePath != null &&\n        item.refImageItemId === itemId &&\n        !item.drawOrderList.includes(clickedDataId)\n      ) {\n        thunkAPI.dispatch(\n          getTimeSeriesDataById({ path: item.filePath, index: clickedDataId }),\n        )\n      }\n    })\n  },\n)\n\nexport const selectingImageArea = createAsyncThunk<\n  string[],\n  {\n    itemId: number\n    range: {\n      x: number[]\n      y: number[]\n    }\n  },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/selectingImageArea`,\n  ({ itemId, range }, thunkAPI) => {\n    const { x, y } = range\n    const [x1, x2] = x.map(Math.round)\n    const [y1, y2] = y.map(Math.round)\n    const selectedZList: string[] = []\n    const items = selectVisualizeItems(thunkAPI.getState())\n    const imageItem = items[itemId]\n    if (isImageItem(imageItem) && imageItem.roiItem != null) {\n      const roiFilePath = imageItem.roiItem.filePath\n      if (roiFilePath != null) {\n        const roiData = selectRoiData(roiFilePath)(thunkAPI.getState())\n        for (let x = x1; x <= x2; x++) {\n          for (let y = y1; y <= y2; y++) {\n            const z = roiData[y][x]\n            if (z != null) {\n              const zNum = String(z) // indexとidのずれを回避\n              if (!selectedZList.includes(zNum)) {\n                selectedZList.push(zNum)\n              }\n            }\n          }\n        }\n        Object.values(items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            const path = item.filePath\n            selectedZList.forEach((selectedZ) => {\n              thunkAPI.dispatch(\n                getTimeSeriesDataById({\n                  path,\n                  index: String(selectedZ),\n                }),\n              )\n            })\n          }\n        })\n      }\n    }\n    return selectedZList\n  },\n)\n\ntype DeleteOption =\n  | {\n      deleteData: true\n      dataType: DATA_TYPE\n      filePath: string\n    }\n  | { deleteData: false }\n\ntype DeleteDisplayItemArgs = {\n  itemId: number\n} & DeleteOption\n\nexport const deleteDisplayItem = createAction<DeleteDisplayItemArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/deleteDisplayItem`,\n)\n\ntype SetNewDisplayDataPathArgs = {\n  itemId: number\n  filePath: string\n  nodeId: string | null\n  dataType?: DATA_TYPE\n} & (\n  | {\n      deleteData: true\n      prevFilePath: string\n      prevDataType: DATA_TYPE\n    }\n  | { deleteData: false }\n)\n\nexport const setNewDisplayDataPath = createAction<SetNewDisplayDataPathArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setNewDisplayDataPath`,\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  deleteDisplayItem,\n  selectingImageArea,\n  setImageItemClikedDataId,\n  setNewDisplayDataPath,\n} from './VisualizeItemActions'\n\nimport {\n  HeatMapItem,\n  ImageItem,\n  CsvItem,\n  TimeSeriesItem,\n  RoiItem,\n  ScatterItem,\n  VisualaizeItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  BarItem,\n  HDF5Item,\n  HTMLItem,\n  FluoItem,\n  BehaviorItem,\n  VISUALIZE_ITEM_SLICE_NAME,\n} from './VisualizeItemType'\nimport {\n  isDisplayDataItem,\n  isHeatMapItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const initialState: VisualaizeItem = {\n  items: {},\n  selectedItemId: null,\n  layout: [],\n}\nconst displayDataCommonInitialValue = {\n  itemType: VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA,\n  filePath: null,\n  nodeId: null,\n  width: 500,\n  height: 500,\n  isWorkflowDialog: false,\n  saveFileName: 'newPlot',\n  saveFormat: 'png',\n}\nconst imageItemInitialValue: ImageItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.IMAGE,\n  startIndex: 1,\n  endIndex: 10,\n  showticklabels: false,\n  showline: true,\n  zsmooth: 'best',\n  showgrid: false,\n  showscale: false,\n  colors: [\n    { rgb: `rgb(0, 0, 0)`, offset: '0' },\n    { rgb: `rgb(255, 255, 255)`, offset: '1.0' },\n  ],\n  activeIndex: 0,\n  alpha: 1.0,\n  roiItem: null,\n  roiAlpha: 1.0,\n  duration: 500,\n}\nconst timeSeriesItemInitialValue: TimeSeriesItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.TIME_SERIES,\n  offset: true,\n  span: 5,\n  showgrid: true,\n  showline: true,\n  showticklabels: true,\n  zeroline: false,\n  xrange: {\n    left: undefined,\n    right: undefined,\n  },\n  maxIndex: 0,\n  drawOrderList: [],\n  refImageItemId: null,\n}\nconst heatMapItemInitialValue: HeatMapItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HEAT_MAP,\n  showscale: true,\n  colors: [\n    { rgb: `rgb(0, 0, 255)`, offset: '0' },\n    { rgb: `rgb(200, 200, 200)`, offset: '0.5' },\n    { rgb: `rgb(255, 0, 0)`, offset: '1.0' },\n  ],\n}\nconst csvItemInitialValue: CsvItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.CSV,\n  setHeader: null,\n  setIndex: false,\n  transpose: false,\n}\nconst roiItemInitialValue: RoiItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.ROI,\n}\nconst scatterItemInitialValue: ScatterItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.SCATTER,\n  xIndex: '0',\n  yIndex: '1',\n}\nconst barItemInitialValue: BarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BAR,\n  index: '0',\n}\nconst hdf5ItemInitialValue: HDF5Item = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HDF5,\n}\nconst htmlItemInitialValue: HTMLItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HTML,\n}\nconst fluoItemInitialValue: FluoItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.FLUO,\n}\nconst behaviorItemInitialValue: BehaviorItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BEHAVIOR,\n}\n\nfunction getDisplayDataItemInitialValue(dataType: DATA_TYPE) {\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return imageItemInitialValue\n    case DATA_TYPE_SET.HEAT_MAP:\n      return heatMapItemInitialValue\n    case DATA_TYPE_SET.TIME_SERIES:\n      return timeSeriesItemInitialValue\n    case DATA_TYPE_SET.CSV:\n      return csvItemInitialValue\n    case DATA_TYPE_SET.ROI:\n      return roiItemInitialValue\n    case DATA_TYPE_SET.SCATTER:\n      return scatterItemInitialValue\n    case DATA_TYPE_SET.BAR:\n      return barItemInitialValue\n    case DATA_TYPE_SET.HDF5:\n      return hdf5ItemInitialValue\n    case DATA_TYPE_SET.HTML:\n      return htmlItemInitialValue\n    case DATA_TYPE_SET.FLUO:\n      return fluoItemInitialValue\n    case DATA_TYPE_SET.BEHAVIOR:\n      return behaviorItemInitialValue\n  }\n}\n\nexport const visualaizeItemSlice = createSlice({\n  name: VISUALIZE_ITEM_SLICE_NAME,\n  initialState,\n  reducers: {\n    pushInitialItemToNewRow: (state) => {\n      const newItemId = addInitialItemFn(state)\n      state.layout.push([newItemId])\n    },\n    insertInitialItemToNextColumn: (state, action: PayloadAction<number>) => {\n      const newItemId = addInitialItemFn(state)\n      const targetItemId = action.payload\n      const targetRowIndex = state.layout.findIndex((row) =>\n        row.includes(targetItemId),\n      )\n      const targetColumnIndex =\n        state.layout[targetRowIndex].indexOf(targetItemId)\n      state.layout[targetRowIndex].splice(targetColumnIndex + 1, 0, newItemId)\n    },\n    addItemForWorkflowDialog: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        filePath: string\n        dataType: DATA_TYPE\n      }>,\n    ) => {\n      const { nodeId, filePath, dataType } = action.payload\n      const maxId = getMaxItemId(state)\n      const newItemId = maxId != null ? maxId + 1 : 0\n      state.items[newItemId] = {\n        ...getDisplayDataItemInitialValue(dataType),\n        isWorkflowDialog: true,\n        nodeId,\n        filePath,\n      }\n    },\n    deleteAllItemForWorkflowDialog: (state) => {\n      const targetItemIdList = Object.entries(state.items)\n        .filter(([itemId, value]) => value.isWorkflowDialog)\n        .map(([itemId, value]) => Number(itemId))\n      targetItemIdList.forEach(\n        (targetItemId) => delete state.items[targetItemId],\n      )\n    },\n    setItemSize: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        width: number\n        height: number\n      }>,\n    ) => {\n      const { itemId, width, height } = action.payload\n      const targetItem = state.items[itemId]\n      targetItem.width = width\n      targetItem.height = height\n    },\n    selectItem: (state, action: PayloadAction<number>) => {\n      state.selectedItemId = action.payload\n    },\n    reset: (state) => {\n      state.items = initialState.items\n      state.layout = initialState.layout\n      state.selectedItemId = initialState.selectedItemId\n    },\n    setRoiItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n        outputKey?: string\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId, outputKey } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        Object.values(state.items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            item.drawOrderList = []\n          }\n        })\n\n        if (targetItem.roiItem != null) {\n          targetItem.roiItem.filePath = filePath\n          targetItem.roiItem.nodeId = nodeId\n          targetItem.roiItem.outputKey = outputKey\n        } else {\n          targetItem.roiItem = {\n            ...roiItemInitialValue,\n            filePath,\n            nodeId,\n            outputKey,\n          }\n        }\n      }\n    },\n    setFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isDisplayDataItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      } else {\n        throw new Error('error')\n      }\n    },\n    setSaveFormat: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFormat: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFormat = action.payload.saveFormat\n    },\n    setSaveFileName: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFileName: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFileName = action.payload.saveFileName\n    },\n    setImageItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setTimeSeriesItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setHeatMapItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    resetImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex?: number\n        endIndex?: number\n      }>,\n    ) => {\n      resetImageActiveIndexFn(state, action.payload)\n    },\n    incrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex++\n      }\n    },\n    decrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex--\n      }\n    },\n    setImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        activeIndex: number\n      }>,\n    ) => {\n      const { itemId, activeIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex = activeIndex\n      }\n    },\n    setImageItemShowticklabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setImageItemZsmooth: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zsmooth: string | boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.zsmooth = action.payload.zsmooth\n      }\n    },\n    setImageItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setImageItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setImageItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setImageItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setImageItemStartIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.startIndex = action.payload.startIndex\n      }\n    },\n    setImageItemEndIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        endIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.endIndex = action.payload.endIndex\n      }\n    },\n    setImageItemAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        alpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.alpha = action.payload.alpha\n      }\n    },\n    setImageItemRoiAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        roiAlpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.roiAlpha = action.payload.roiAlpha\n      }\n    },\n    setImageItemDuration: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        duration: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.duration = action.payload.duration\n      }\n    },\n    setTimeSeriesItemOffset: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        offset: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.offset = action.payload.offset\n      }\n    },\n    setTimeSeriesItemSpan: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        span: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.span = action.payload.span\n      }\n    },\n    setTimeSeriesItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setTimeSeriesItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setTimeSeriesItemShowTickLabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setTimeSeriesItemZeroLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zeroline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.zeroline = action.payload.zeroline\n      }\n    },\n    setTimeSeriesItemXrangeLeft: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        left: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.left = action.payload.left\n      }\n    },\n    setTimeSeriesItemXrangeRight: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        right: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.right = action.payload.right\n      }\n    },\n    setTimeSeriesItemDrawOrderList: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        drawOrderList: string[]\n      }>,\n    ) => {\n      const { itemId, drawOrderList } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.drawOrderList = drawOrderList\n      }\n    },\n    resetAllOrderList: (state) => {\n      Object.keys(state.items).forEach((id: any) => {\n        const targetItem = state.items[id]\n        if (isTimeSeriesItem(targetItem)) {\n          targetItem.drawOrderList = []\n        }\n      })\n    },\n    setTimeSeriesItemMaxIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        maxIndex: number\n      }>,\n    ) => {\n      const { itemId, maxIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.maxIndex = maxIndex\n      }\n    },\n    setTimeSeriesRefImageItemId: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        refImageItemId: number | null\n      }>,\n    ) => {\n      const { itemId, refImageItemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.refImageItemId = refImageItemId ?? null\n        targetItem.drawOrderList = []\n      }\n    },\n    setHeatMapItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setHeatMapItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setCsvItemTranspose: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        transpose: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.transpose = action.payload.transpose\n      }\n    },\n    setCsvItemSetHeader: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setHeader: number | null\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setHeader = action.payload.setHeader\n      }\n    },\n    setCsvItemSetIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setIndex: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setIndex = action.payload.setIndex\n      }\n    },\n    setScatterItemXIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        xIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.xIndex = action.payload.xIndex\n      }\n    },\n    setScatterItemYIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        yIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.yIndex = action.payload.yIndex\n      }\n    },\n    setBarItemIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        index: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isBarItem(targetItem)) {\n        targetItem.index = action.payload.index\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        const itemId = action.payload.itemId\n\n        if (isImageItem(state.items[itemId])) {\n          Object.values(state.items).forEach((item) => {\n            if (isTimeSeriesItem(item) && item.refImageItemId === itemId) {\n              item.refImageItemId = null\n            }\n          })\n        }\n\n        delete state.items[itemId]\n        if (itemId === state.selectedItemId) {\n          state.selectedItemId = null\n        }\n        state.layout.forEach((row, i) => {\n          const index = row.indexOf(itemId)\n          if (index !== -1) {\n            row.splice(index, 1)\n          }\n          if (row.length === 0) {\n            state.layout.splice(i, 1)\n          }\n        })\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        const { itemId, filePath, nodeId, dataType } = action.payload\n        const targetItem = state.items[itemId]\n        if (isDisplayDataItem(targetItem)) {\n          if (dataType != null) {\n            state.items[itemId] = {\n              ...getDisplayDataItemInitialValue(dataType),\n              width: targetItem.width,\n              height: targetItem.height,\n              filePath,\n              nodeId,\n            }\n          } else {\n            targetItem.filePath = filePath\n            targetItem.nodeId = nodeId\n          }\n        } else {\n          throw new Error('invalid VisualaizeItemType')\n        }\n        resetImageActiveIndexFn(state, { itemId })\n      })\n      .addCase(setImageItemClikedDataId.fulfilled, (state, action) => {\n        const { itemId: imageItemId, clickedDataId } = action.meta.arg\n        const targetItem = state.items[imageItemId]\n        if (isImageItem(targetItem)) {\n          targetItem.clickedDataId = clickedDataId\n        }\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId &&\n              !item.drawOrderList.includes(clickedDataId)\n            ) {\n              item.drawOrderList.push(clickedDataId)\n            }\n          }\n        })\n      })\n      .addCase(selectingImageArea.fulfilled, (state, action) => {\n        const { itemId: imageItemId } = action.meta.arg\n        const selectedZList = action.payload\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId\n            ) {\n              item.drawOrderList = selectedZList\n            }\n          }\n        })\n      })\n  },\n})\n\nfunction getMaxItemId(state: VisualaizeItem) {\n  const idList = Object.keys(state.items).map((key) => Number(key))\n  const maxId =\n    idList.length > 0 ? idList.reduce((a, b) => Math.max(a, b)) : null\n  return maxId\n}\n\nfunction addInitialItemFn(state: VisualaizeItem) {\n  const maxId = getMaxItemId(state)\n  const nextId = maxId != null ? maxId + 1 : 0\n  state.items[nextId] = getDisplayDataItemInitialValue(DATA_TYPE_SET.IMAGE)\n  state.selectedItemId = nextId\n  return nextId\n}\n\nfunction resetImageActiveIndexFn(\n  state: VisualaizeItem,\n  args: {\n    itemId: number\n  },\n) {\n  const { itemId } = args\n  const targetItem = state.items[itemId]\n  if (isImageItem(targetItem)) {\n    targetItem.activeIndex = 0\n  }\n}\n\nexport const {\n  pushInitialItemToNewRow,\n  insertInitialItemToNextColumn,\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n  setItemSize,\n  selectItem,\n  setFilePath,\n  setSaveFormat,\n  setSaveFileName,\n  setHeatMapItemFilePath,\n  setImageItemFilePath,\n  setTimeSeriesItemFilePath,\n  setRoiItemFilePath,\n  resetImageActiveIndex,\n  incrementImageActiveIndex,\n  decrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowLine,\n  setImageItemShowGrid,\n  setImageItemShowScale,\n  setImageItemColors,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemAlpha,\n  setImageItemRoiAlpha,\n  setImageItemDuration,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemDrawOrderList,\n  setTimeSeriesItemMaxIndex,\n  setTimeSeriesRefImageItemId,\n  setHeatMapItemShowScale,\n  setHeatMapItemColors,\n  setCsvItemTranspose,\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n  setBarItemIndex,\n  resetAllOrderList,\n  reset,\n} = visualaizeItemSlice.actions\n\nexport default visualaizeItemSlice.reducer\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport { useSnackbar } from 'notistack'\nimport { importExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { AppDispatch } from 'store/store'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport ReplyIcon from '@mui/icons-material/Reply'\nimport { reset } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const ImportButton = React.memo(() => {\n  const dispatch: AppDispatch = useDispatch()\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = () => {\n    if (workspaceId) {\n      dispatch(importExperimentByUid({workspaceId, uid}))\n      .unwrap()\n      .then(() => {\n        enqueueSnackbar('Successfully imported.', { variant: 'success' })\n        dispatch(reset())\n      })\n    } else {\n      throw new Error('Workspace ID is missing.')\n    }\n  }\n  return (\n    <IconButton onClick={onClick}>\n      <ReplyIcon />\n    </IconButton>\n  )\n})\n","import React, { ChangeEvent, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\nimport Alert from '@mui/material/Alert'\nimport AlertTitle from '@mui/material/AlertTitle'\nimport IconButton from '@mui/material/IconButton'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport TablePagination from '@mui/material/TablePagination'\nimport Paper from '@mui/material/Paper'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport ReplayIcon from '@mui/icons-material/Replay'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport Checkbox from '@mui/material/Checkbox'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport TableSortLabel from '@mui/material/TableSortLabel'\nimport Typography from '@mui/material/Typography'\n\nimport { CollapsibleTable } from './CollapsibleTable'\nimport {\n  selectExperimentsStatusIsUninitialized,\n  selectExperimentsStatusIsFulfilled,\n  selectExperimentTimeStamp,\n  selectExperimentName,\n  selectExperimentStatus,\n  selectExperimentsStatusIsError,\n  selectExperimentsErrorMessage,\n  selectExperimentList,\n  selectExperimentHasNWB,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport {\n  deleteExperimentByList,\n  getExperiments,\n} from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { Experiment } from 'store/slice/Experiments/ExperimentsType'\nimport { DeleteButton } from './Button/DeleteButton'\nimport {\n  NWBDownloadButton,\n  ConfigDownloadButton,\n} from './Button/DownloadButton'\nimport { ImportButton } from './Button/ImportButton'\nimport { useLocalStorage } from 'components/utils/LocalStorageUtil'\nimport { styled } from '@mui/material/styles'\nimport { renameExperiment } from 'api/experiments/Experiments'\nimport { selectPipelineLatestUid } from 'store/slice/Pipeline/PipelineSelectors'\nimport { clearCurrentPipeline } from 'store/slice/Pipeline/PipelineSlice'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const ExperimentUidContext = React.createContext<string>('')\n\nexport const ExperimentTable: React.FC = () => {\n  const isUninitialized = useSelector(selectExperimentsStatusIsUninitialized)\n  const isFulfilled = useSelector(selectExperimentsStatusIsFulfilled)\n  const isError = useSelector(selectExperimentsStatusIsError)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (isUninitialized) {\n      dispatch(getExperiments())\n    }\n  }, [dispatch, isUninitialized])\n\n  if (isFulfilled) {\n    return <TableImple />\n  } else if (isError) {\n    return <ExperimentsErrorView />\n  } else {\n    return null\n  }\n}\n\nconst ExperimentsErrorView: React.FC = () => {\n  const message = useSelector(selectExperimentsErrorMessage)\n  return (\n    <Alert severity=\"error\">\n      <AlertTitle>failed to get experiments...</AlertTitle>\n      {message}\n    </Alert>\n  )\n}\n\nconst LOCAL_STORAGE_KEY_PER_PAGE = 'optinist_experiment_table_per_page'\n\nconst TableImple = React.memo(() => {\n  const currentPipelineUid = useSelector(selectPipelineLatestUid)\n  const experimentList = useSelector(selectExperimentList)\n  const experimentListValues = Object.values(experimentList)\n  const experimentListKeys = Object.keys(experimentList)\n  const dispatch = useDispatch()\n  const onClickReload = () => {\n    dispatch(getExperiments())\n  }\n  const [order, setOrder] = React.useState<Order>('asc')\n  const [sortTarget, setSortTarget] =\n    React.useState<keyof Experiment>('timestamp')\n  const sortHandler =\n    (property: keyof Experiment) => (event: React.MouseEvent<unknown>) => {\n      const isAsc = sortTarget === property && order === 'asc'\n      setOrder(isAsc ? 'desc' : 'asc')\n      setSortTarget(property)\n    }\n\n  const [checkedList, setCheckedList] = useState<string[]>([])\n  const [open, setOpen] = React.useState(false)\n\n  const onCheckBoxClick = (uid: string) => {\n    if (checkedList.includes(uid)) {\n      setCheckedList(checkedList.filter((v) => v !== uid))\n    } else {\n      setCheckedList([...checkedList, uid])\n    }\n  }\n\n  const onChangeAllCheck = (checked: boolean) => {\n    if (checked) {\n      setCheckedList(experimentListValues.map((experiment) => experiment.uid))\n    } else {\n      setCheckedList([])\n    }\n  }\n\n  const recordsIsEmpty = experimentListKeys.length === 0\n\n  const onClickDelete = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    dispatch(deleteExperimentByList(checkedList))\n    checkedList.filter((v) => v === currentPipelineUid).length > 0 &&\n      dispatch(clearCurrentPipeline())\n    setCheckedList([])\n    setOpen(false)\n  }\n\n  const [page, setPage] = React.useState(0)\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage)\n  }\n\n  const [rowsPerPage, setRowsPerPage] = useLocalStorage(\n    LOCAL_STORAGE_KEY_PER_PAGE,\n    10,\n    (value) => {\n      const valueNum = Number(value)\n      return isNaN(valueNum) ? 10 : valueNum\n    },\n  )\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const newValue = parseInt(event.target.value, 10)\n    setRowsPerPage(newValue)\n    setPage(0)\n  }\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0\n      ? Math.max(0, (1 + page) * rowsPerPage - experimentListKeys.length)\n      : 0\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          alignItems: 'center',\n        }}\n      >\n        {!recordsIsEmpty && (\n          <Typography sx={{ flexGrow: 1, m: 1 }}>\n            {checkedList.length} selected\n          </Typography>\n        )}\n        <Button\n          sx={{\n            margin: (theme) => theme.spacing(0, 1, 1, 0),\n          }}\n          variant=\"outlined\"\n          endIcon={<ReplayIcon />}\n          onClick={onClickReload}\n        >\n          Reload\n        </Button>\n        <Button\n          sx={{\n            marginBottom: (theme) => theme.spacing(1),\n          }}\n          variant=\"outlined\"\n          color=\"error\"\n          endIcon={<DeleteIcon />}\n          onClick={onClickDelete}\n          disabled={checkedList.length === 0}\n        >\n          Delete\n        </Button>\n      </Box>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Paper\n        elevation={0}\n        variant=\"outlined\"\n        sx={{\n          flexGlow: 1,\n          height: '100%',\n        }}\n      >\n        <TableContainer component={Paper} elevation={0}>\n          <Table aria-label=\"collapsible table\">\n            <HeadItem\n              order={order}\n              sortHandler={sortHandler}\n              allCheckIndeterminate={\n                checkedList.length !== 0 &&\n                checkedList.length !== Object.keys(experimentList).length\n              }\n              allChecked={\n                checkedList.length === Object.keys(experimentList).length\n              }\n              onChangeAllCheck={onChangeAllCheck}\n              checkboxVisible={!recordsIsEmpty}\n            />\n            <TableBody>\n              {experimentListValues\n                .sort(getComparator(order, sortTarget))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((expData) => (\n                  <ExperimentUidContext.Provider\n                    value={expData.uid}\n                    key={expData.uid}\n                  >\n                    <RowItem\n                      onCheckBoxClick={onCheckBoxClick}\n                      checked={checkedList.includes(expData.uid)}\n                    />\n                  </ExperimentUidContext.Provider>\n                ))}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: 53 * emptyRows,\n                  }}\n                >\n                  <TableCell colSpan={10} />\n                </TableRow>\n              )}\n              {recordsIsEmpty && (\n                <TableRow>\n                  <TableCell colSpan={10}>\n                    <Typography\n                      sx={{\n                        color: (theme) => theme.palette.text.secondary,\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        height: '300px',\n                        textAlign: 'center',\n                      }}\n                      variant=\"h6\"\n                    >\n                      No Rows...\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={experimentListKeys.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Box>\n  )\n})\n\nconst HeadItem = React.memo<{\n  order: Order\n  sortHandler: any\n  allChecked: boolean\n  onChangeAllCheck: (checked: boolean) => void\n  allCheckIndeterminate: boolean\n  checkboxVisible: boolean\n}>(\n  ({\n    order,\n    sortHandler,\n    allChecked,\n    onChangeAllCheck,\n    allCheckIndeterminate,\n    checkboxVisible,\n  }) => {\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              sx={{ visibility: checkboxVisible ? 'visible' : 'hidden' }}\n              checked={allChecked}\n              indeterminate={allCheckIndeterminate}\n              onChange={(e) => onChangeAllCheck(e.target.checked)}\n            />\n          </TableCell>\n          <TableCell />\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('timestamp')}\n            >\n              Timestamp\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('uid')}\n            >\n              ID\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('name')}\n            >\n              Name\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>Success</TableCell>\n          <TableCell>Reproduce</TableCell>\n          <TableCell>SnakeFile</TableCell>\n          <TableCell>NWB</TableCell>\n          <TableCell>Delete</TableCell>\n        </TableRow>\n      </TableHead>\n    )\n  },\n)\n\nconst RowItem = React.memo<{\n  onCheckBoxClick: (uid: string) => void\n  checked: boolean\n}>(({ onCheckBoxClick, checked }) => {\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const timestamp = useSelector(selectExperimentTimeStamp(uid))\n  const status = useSelector(selectExperimentStatus(uid))\n  const name = useSelector(selectExperimentName(uid))\n  const hasNWB = useSelector(selectExperimentHasNWB(uid))\n  const [open, setOpen] = React.useState(false)\n  const [isEdit, setEdit] = useState(false)\n  const [errorEdit, setErrorEdit] = useState('')\n  const [valueEdit, setValueEdit] = useState(name)\n  const dispatch = useDispatch()\n\n  const onBlurEdit = (event: any) => {\n    event.preventDefault()\n    if (errorEdit) return\n    setTimeout(() => {\n      setEdit(false)\n      onSaveNewName()\n    }, 300)\n  }\n\n  const onEdit = (event: any) => {\n    if (isEdit || errorEdit) return\n    event.preventDefault()\n    setEdit(true)\n  }\n\n  const onChangeName = (event: ChangeEvent<HTMLInputElement>) => {\n    let errorEdit = ''\n    if (!event.target.value.trim()) {\n      errorEdit = 'Name is empty'\n    }\n    setErrorEdit(errorEdit)\n    setValueEdit(event.target.value)\n  }\n\n  const onSaveNewName = async () => {\n    if (valueEdit === name || workspaceId === void 0) return\n    await renameExperiment(workspaceId, uid, valueEdit)\n    dispatch(getExperiments())\n  }\n\n  return (\n    <React.Fragment>\n      <TableRow\n        sx={{\n          '& > *': {\n            borderBottom: 'unset',\n          },\n          [`& .${tableCellClasses.root}`]: {\n            borderBottomWidth: 0,\n          },\n        }}\n      >\n        <TableCell padding=\"checkbox\">\n          <Checkbox onChange={() => onCheckBoxClick(uid)} checked={checked} />\n        </TableCell>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {timestamp}\n        </TableCell>\n        <TableCell>{uid}</TableCell>\n        <TableCell sx={{ width: 160, position: 'relative' }} onClick={onEdit}>\n          {!isEdit ? (\n            valueEdit\n          ) : (\n            <>\n              <Input\n                placeholder=\"Name\"\n                error={!!errorEdit}\n                onChange={onChangeName}\n                autoFocus\n                onBlur={onBlurEdit}\n                value={valueEdit}\n              />\n              {errorEdit ? <TextError>{errorEdit}</TextError> : null}\n            </>\n          )}\n        </TableCell>\n        <TableCell>\n          <ExperimentStatusIcon status={status} />\n        </TableCell>\n        <TableCell>\n          <ImportButton />\n        </TableCell>\n        <TableCell>\n          <ConfigDownloadButton />\n        </TableCell>\n        <TableCell>\n          <NWBDownloadButton name={uid} hasNWB={hasNWB} />\n        </TableCell>\n        <TableCell>\n          <DeleteButton />\n        </TableCell>\n      </TableRow>\n      <CollapsibleTable open={open} />\n    </React.Fragment>\n  )\n})\n\nconst Input = styled('input')<{ error: boolean }>(({ error }) => ({\n  width: '100%',\n  border: 'none',\n  borderBottom: '1px solid',\n  outline: 'none',\n  color: error ? '#d32f2f' : '',\n  borderColor: error ? '#d32f2f' : '',\n}))\n\nconst TextError = styled(Typography)(() => ({\n  color: '#d32f2f',\n  fontSize: 12,\n  height: 12,\n  position: 'absolute',\n  bottom: 12,\n}))\n\ntype Order = 'asc' | 'desc'\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string },\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n","import React from 'react'\n\nexport function useLocalStorage<T>(\n  storageKey: string,\n  initialValue: T,\n  parseFn: (value: any) => T,\n): [T, React.Dispatch<React.SetStateAction<T>>] {\n  const [value, setValue] = React.useState(() => {\n    const savedStr = localStorage.getItem(storageKey)\n    if (savedStr != null) {\n      return parseFn(JSON.parse(savedStr))\n    }\n    return initialValue\n  })\n  React.useEffect(() => {\n    localStorage.setItem(storageKey, JSON.stringify(value))\n  }, [value, storageKey])\n  return [value, setValue]\n}\n","import React from 'react'\nimport { ExperimentTable } from './ExperimentTable'\n\nconst Experiment = React.memo(() => {\n  return (\n    <div style={{ display: 'flex' }}>\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1,\n          height: '100vh',\n          padding: 16,\n        }}\n      >\n        <ExperimentTable />\n      </main>\n    </div>\n  )\n})\n\nexport default Experiment\n","import { AlgoListDTO, AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  AlgorithmNodeType,\n  AlgorithmChild,\n  AlgorithmParent,\n  AlgorithmListTree,\n} from './AlgorithmListType'\n\nexport function isAlgoChild(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmChild {\n  return algoNode.type === 'child'\n}\n\nexport function isAlgoParent(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmParent {\n  return algoNode.type === 'parent'\n}\n\nexport function getAlgoChild(\n  algoList: AlgorithmListTree,\n  algoName: string,\n): AlgorithmChild | null {\n  let result: AlgorithmChild | null = null\n  for (const [name, node] of Object.entries(algoList)) {\n    if (isAlgoChild(node)) {\n      if (name === algoName) {\n        result = node\n      }\n    } else {\n      result = getAlgoChild(node.children, algoName)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function convertToAlgoListType(dto: AlgoListDTO) {\n  const algoList: AlgorithmListTree = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    if (Object.prototype.hasOwnProperty.call(value, 'children')) {\n      algoList[name] = {\n        type: 'parent',\n        children: convertToAlgoListType(\n          (\n            value as {\n              children: AlgoListDTO\n            }\n          ).children as AlgoListDTO,\n        ),\n      }\n    } else {\n      const dto = value as {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n      algoList[name] = {\n        type: 'child',\n        functionPath: dto.path,\n        args: dto.args,\n        returns: dto.returns,\n      }\n    }\n  })\n  return algoList\n}\n","import { RootState } from 'store/store'\nimport { selectAlgorithmName } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { getAlgoChild } from './AlgorithmListUtils'\n\nexport const selectAlgorithmList = (state: RootState) => state.algorithmList\n\nexport const selectAlgorithmListIsLated = (state: RootState) =>\n  selectAlgorithmList(state).isLatest\n\nexport const selectAlgorithmListTree = (state: RootState) =>\n  selectAlgorithmList(state).tree\n\nexport const selectAlgoArgs = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.args\n  } else {\n    return undefined\n  }\n}\n\nexport const selectAlgoReturns = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.returns\n  } else {\n    return undefined\n  }\n}\n","import { AlgorithmInfo } from 'api/algolist/AlgoList'\n\nexport const ALGORITHM_LIST_SLICE_NAME = 'algorithmList'\n\nexport type AlgorithmListType = {\n  isLatest: boolean\n  tree: AlgorithmListTree\n}\n\nexport type AlgorithmListTree = {\n  [algoName: string]: AlgorithmNodeType\n}\n\nexport type AlgorithmNodeType = AlgorithmChild | AlgorithmParent\nexport type AlgorithmChild = {\n  type: 'child'\n  args: AlgorithmInfo[]\n  returns: AlgorithmInfo[]\n  functionPath: string\n}\nexport type AlgorithmParent = {\n  type: 'parent'\n  children: {\n    [name: string]: AlgorithmNodeType\n  }\n}\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type AlgoListDTO = {\n  [name: string]:\n    | {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n    | { children: AlgoListDTO }\n}\n\nexport type AlgorithmInfo = {\n  name: string\n  type: string\n  isNone?: boolean\n}\n\nexport async function getAlgoListApi(): Promise<AlgoListDTO> {\n  const response = await axios.get(`${BASE_URL}/algolist`)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { ALGORITHM_LIST_SLICE_NAME } from './AlgorithmListType'\nimport { AlgoListDTO, getAlgoListApi } from 'api/algolist/AlgoList'\n\nexport const getAlgoList = createAsyncThunk<AlgoListDTO, void>(\n  `${ALGORITHM_LIST_SLICE_NAME}/getAlgoList`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoListApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getAlgoParamsApi(algoName: string): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/params/${algoName}`)\n  return response.data\n}\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Node } from 'react-flow-renderer'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { FLOW_ELEMENT_SLICE_NAME, NodeData } from './FlowElementType'\nimport { getAlgoParamsApi } from 'api/params/Params'\n\nexport type AddingNodeData = Omit<Node<NodeData>, 'position'> &\n  Partial<Pick<Node<NodeData>, 'position'>>\n\nexport const addAlgorithmNode = createAsyncThunk<\n  ParamDTO,\n  {\n    node: AddingNodeData\n    functionPath: string\n    name: string\n  }\n>(`${FLOW_ELEMENT_SLICE_NAME}/addAlgorithmNode`, async ({ name }, thunkAPI) => {\n  try {\n    const response = await getAlgoParamsApi(name)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const addInputNode = createAction<{\n  node: AddingNodeData\n  fileType: FILE_TYPE\n}>(`${FLOW_ELEMENT_SLICE_NAME}/addInputNode`)\n","import { customAlphabet } from 'nanoid/non-secure'\n\nconst nanoid = customAlphabet('0123456789abcdefghijklmnopqrstuvwxyz', 10)\n\nexport const getNanoId = () => {\n  return nanoid()\n}\n","export const INITIAL_IMAGE_ELEMENT_ID = 'input_0'\nexport const INITIAL_IMAGE_ELEMENT_NAME = 'NoName'\n\nexport const INITIAL_ALGO_STYLE: React.CSSProperties = {\n  width: 180,\n  height: 100,\n  padding: 0,\n  borderRadius: 0,\n} as const\n\nexport const INITIAL_DATA_STYLE: React.CSSProperties = {\n  border: '1px solid #777',\n  height: 120,\n} as const\n\nexport const REACT_FLOW_NODE_TYPE_KEY = {\n  ImageFileNode: 'ImageFileNode',\n  CsvFileNode: 'CsvFileNode',\n  HDF5FileNode: 'HDF5FileNode',\n  FluoFileNode: 'FluoFileNode',\n  AlgorithmNode: 'AlgorithmNode',\n  BehaviorFileNode: 'BehaviorFileNode',\n} as const\n\nexport type REACT_FLOW_NODE_TYPE =\n  typeof REACT_FLOW_NODE_TYPE_KEY[keyof typeof REACT_FLOW_NODE_TYPE_KEY]\n","export const DND_ITEM_TYPE_SET = {\n  TREE_ITEM: 'TREE_ITEM',\n} as const\n\nexport type DND_ITEM_TYPE =\n  typeof DND_ITEM_TYPE_SET[keyof typeof DND_ITEM_TYPE_SET]\n\nexport type TreeItemDragObject = {}\n\nexport type TreeItemDropResult = {\n  position?: { x: number; y: number }\n}\n\nexport type TreeItemCollectedProps = {\n  isDragging: boolean\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem'\nimport { styled, Typography } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport IconButton from '@mui/material/IconButton'\nimport AddIcon from '@mui/icons-material/Add'\nimport { useDrag } from 'react-dnd'\n\nimport {\n  selectAlgorithmListIsLated,\n  selectAlgorithmListTree,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport {\n  AlgorithmChild,\n  AlgorithmNodeType,\n} from 'store/slice/AlgorithmList/AlgorithmListType'\nimport { isAlgoChild } from 'store/slice/AlgorithmList/AlgorithmListUtils'\nimport { getAlgoList } from 'store/slice/AlgorithmList/AlgorithmListActions'\nimport { FILE_TYPE, FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  NODE_TYPE,\n  NODE_TYPE_SET,\n} from 'store/slice/FlowElement/FlowElementType'\nimport {\n  addAlgorithmNode,\n  addInputNode,\n} from 'store/slice/FlowElement/FlowElementActions'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport { REACT_FLOW_NODE_TYPE, REACT_FLOW_NODE_TYPE_KEY } from 'const/flowchart'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\n\nexport const AlgorithmTreeView = React.memo(() => {\n  const dispatch = useDispatch()\n  const algoList = useSelector(selectAlgorithmListTree)\n  const isLatest = useSelector(selectAlgorithmListIsLated)\n\n  useEffect(() => {\n    if (!isLatest) {\n      dispatch(getAlgoList())\n    }\n  }, [dispatch, isLatest])\n\n  const onAddAlgoNode = React.useCallback(\n    (\n      nodeName: string,\n      functionPath: string,\n      position?: { x: number; y: number },\n    ) => {\n      const name = nodeName\n      const newNode = {\n        id: `${name}_${getNanoId()}`,\n        type: REACT_FLOW_NODE_TYPE_KEY.AlgorithmNode,\n        data: { label: name, type: NODE_TYPE_SET.ALGORITHM },\n        position,\n      }\n      dispatch(\n        addAlgorithmNode({\n          node: newNode,\n          name,\n          functionPath,\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  return (\n    <TreeView\n      sx={{\n        flexGrow: 1,\n        height: '100%',\n      }}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId=\"Data\" label=\"Data\">\n        <InputNodeComponent\n          fileName={'image'}\n          nodeName={'imageData'}\n          fileType={FILE_TYPE_SET.IMAGE}\n        />\n        <InputNodeComponent\n          fileName={'csv'}\n          nodeName={'csvData'}\n          fileType={FILE_TYPE_SET.CSV}\n        />\n        <InputNodeComponent\n          fileName={'hdf5'}\n          nodeName={'hdf5Data'}\n          fileType={FILE_TYPE_SET.HDF5}\n        />\n        <InputNodeComponent\n          fileName={'fluo'}\n          nodeName={'fluoData'}\n          fileType={FILE_TYPE_SET.FLUO}\n        />\n        <InputNodeComponent\n          fileName={'behavior'}\n          nodeName={'behaviorData'}\n          fileType={FILE_TYPE_SET.BEHAVIOR}\n        />\n      </TreeItem>\n      <TreeItem nodeId=\"Algorithm\" label=\"Algorithm\">\n        {Object.entries(algoList).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            onAddAlgoNode={onAddAlgoNode}\n            key={i.toFixed()}\n          />\n        ))}\n      </TreeItem>\n    </TreeView>\n  )\n})\n\nconst InputNodeComponent = React.memo<{\n  fileName: string\n  nodeName: string\n  fileType: FILE_TYPE\n}>(({ fileName, nodeName, fileType }) => {\n  const dispatch = useDispatch()\n\n  const onAddDataNode = React.useCallback(\n    (\n      nodeType: NODE_TYPE,\n      nodeName: string,\n      fileType: FILE_TYPE,\n      position?: { x: number; y: number },\n    ) => {\n      let reactFlowNodeType: REACT_FLOW_NODE_TYPE | '' = ''\n      switch (fileType) {\n        case FILE_TYPE_SET.CSV:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.CsvFileNode\n          break\n        case FILE_TYPE_SET.IMAGE:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.ImageFileNode\n          fileType = FILE_TYPE_SET.IMAGE\n          break\n        case FILE_TYPE_SET.HDF5:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.HDF5FileNode\n          fileType = FILE_TYPE_SET.HDF5\n          break\n        case FILE_TYPE_SET.FLUO:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.FluoFileNode\n          fileType = FILE_TYPE_SET.FLUO\n          break\n        case FILE_TYPE_SET.BEHAVIOR:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.BehaviorFileNode\n          fileType = FILE_TYPE_SET.BEHAVIOR\n          break\n      }\n      const newNode = {\n        id: `input_${getNanoId()}`,\n        type: reactFlowNodeType,\n        data: { label: nodeName, type: nodeType },\n        position,\n      }\n      dispatch(addInputNode({ node: newNode, fileType }))\n    },\n    [dispatch],\n  )\n\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType, position)\n      },\n      [onAddDataNode, nodeName, fileType],\n    ),\n  )\n\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={fileName}\n      label={\n        <AddButton\n          name={fileName}\n          onClick={() => onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType)}\n        />\n      }\n    />\n  )\n})\n\nconst AlgoNodeComponentRecursive = React.memo<{\n  name: string\n  node: AlgorithmNodeType\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  if (isAlgoChild(node)) {\n    return (\n      <AlgoNodeComponent\n        name={name}\n        node={node}\n        onAddAlgoNode={onAddAlgoNode}\n      />\n    )\n  } else {\n    return (\n      <TreeItem nodeId={name} label={name}>\n        {Object.entries(node.children).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            key={i.toFixed()}\n            onAddAlgoNode={onAddAlgoNode}\n          />\n        ))}\n      </TreeItem>\n    )\n  }\n})\n\nconst AlgoNodeComponent = React.memo<{\n  name: string\n  node: AlgorithmChild\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddAlgoNode(name, node.functionPath, position)\n      },\n      [onAddAlgoNode, name, node],\n    ),\n  )\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={name}\n      label={\n        <AddButton\n          name={name}\n          onClick={() => onAddAlgoNode(name, node.functionPath)}\n        />\n      }\n    />\n  )\n})\n\nconst AddButton = React.memo<{\n  name: string\n  onClick: () => void\n}>(({ name, onClick }) => {\n  return (\n    <>\n      <IconButton aria-label=\"add\" style={{ padding: 2 }} size=\"large\">\n        <AddIcon onClick={() => onClick()} />\n      </IconButton>\n      <Typography\n        variant=\"inherit\"\n        style={{\n          textOverflow: 'ellipsis',\n          overflow: 'visible',\n          width: '8rem',\n          display: 'inline-block',\n        }}\n      >\n        {name}\n      </Typography>\n    </>\n  )\n})\n\n// 未使用icon分の幅を消す\nconst LeafItem = styled(TreeItem)({\n  // background: 'red',\n  [`& .${treeItemClasses.iconContainer}`]: {\n    margin: 0,\n    width: 0,\n  },\n})\n\nfunction useLeafItemDrag(\n  onDragEnd: (positon: { x: number; y: number }) => void,\n) {\n  const [{ isDragging }, dragRef] = useDrag<\n    TreeItemDragObject,\n    TreeItemDropResult,\n    TreeItemCollectedProps\n  >(\n    () => ({\n      type: DND_ITEM_TYPE_SET.TREE_ITEM,\n      end: (_, monitor) => {\n        const position = monitor.getDropResult()?.position\n        if (monitor.didDrop() && position != null) {\n          onDragEnd(position)\n        }\n      },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [onDragEnd],\n  )\n  return { isDragging, dragRef }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nimport { INPUT_NODE_SLICE_NAME } from './InputNodeType'\n\nexport const setInputNodeFilePath = createAction<{\n  nodeId: string\n  filePath: string | string[]\n}>(`${INPUT_NODE_SLICE_NAME}/setInputNodeFilePath`)\n","import type { Node } from 'react-flow-renderer'\nimport {\n  isInputNodeData,\n  isAlgorithmNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport type {\n  NodePostDataType,\n  InputNodePostData,\n  AlgorithmNodePostData,\n} from './Run'\n\nexport function isInputNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<InputNodePostData> {\n  return isInputNodeData(node)\n}\n\nexport function isAlgorithmNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<AlgorithmNodePostData> {\n  return isAlgorithmNodeData(node)\n}\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport const FILE_TREE_TYPE_SET = {\n  IMAGE: 'image',\n  CSV: 'csv',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  ALL: 'all',\n} as const\n\nexport type FILE_TREE_TYPE =\n  typeof FILE_TREE_TYPE_SET[keyof typeof FILE_TREE_TYPE_SET]\n\nexport type TreeNodeTypeDTO = DirNodeDTO | FileNodeDTO\n\nexport interface NodeBaseDTO {\n  path: string\n  name: string\n  isdir: boolean\n}\n\nexport interface DirNodeDTO extends NodeBaseDTO {\n  isdir: true\n  nodes: TreeNodeTypeDTO[]\n}\n\nexport interface FileNodeDTO extends NodeBaseDTO {\n  isdir: false\n}\n\nexport async function getFilesTreeApi(\n  fileType: FILE_TREE_TYPE,\n): Promise<TreeNodeTypeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/files`, {\n    params: {\n      file_type: fileType,\n    },\n  })\n  return response.data\n}\n\nexport async function uploadFileApi(\n  fileName: string,\n  config: {\n    onUploadProgress: (progressEvent: any) => void\n  },\n  formData: FormData,\n): Promise<{ file_path: string }> {\n  const response = await axios.post(\n    `${BASE_URL}/files/upload/${fileName}`,\n    formData,\n    config,\n  )\n  return response.data\n}\n","export const FILE_UPLOADER_SLICE_NAME = 'fileUploader'\n\nexport type FileUploader = {\n  [id: string]: FileUploaderType\n}\n\nexport type FileUploaderType = {\n  path?: string\n  fileName?: string\n  isUninitialized: boolean\n  pending: boolean\n  fulfilled: boolean\n  uploadingProgress?: number\n  error?: string\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { uploadFileApi } from 'api/files/Files'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\nimport { FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\n\nexport const setUploadProgress = createAction<{\n  requestId: string\n  progess: number\n  total: number\n}>(`${FILE_UPLOADER_SLICE_NAME}/setUploadProgress`)\n\nexport const uploadFile = createAsyncThunk<\n  {\n    resultPath: string\n  },\n  {\n    requestId: string\n    nodeId?: string\n    fileName: string\n    formData: FormData\n    fileType?: FILE_TYPE\n  }\n>(\n  `${FILE_UPLOADER_SLICE_NAME}/uploadFile`,\n  async ({ requestId, fileName, formData }, thunkAPI) => {\n    try {\n      const config = getUploadConfig((percent, total) => {\n        thunkAPI.dispatch(\n          setUploadProgress({\n            requestId,\n            progess: percent,\n            total,\n          }),\n        )\n      })\n      const response = await uploadFileApi(fileName, config, formData)\n      return {\n        resultPath: response.file_path,\n      }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nfunction getUploadConfig(\n  onUpdateProgressFn: (percent: number, totalSize: number) => void,\n) {\n  return {\n    onUploadProgress: function (progressEvent: any) {\n      const percentCompleted = Math.round(\n        (progressEvent.loaded * 100) / progressEvent.total,\n      )\n      onUpdateProgressFn(percentCompleted, progressEvent.total)\n    },\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  Elements,\n  removeElements,\n  Position,\n  isNode,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport {\n  FLOW_ELEMENT_SLICE_NAME,\n  FlowElement,\n  NODE_TYPE_SET,\n  NodeData,\n  ElementCoord,\n} from './FlowElementType'\nimport {\n  INITIAL_ALGO_STYLE,\n  INITIAL_DATA_STYLE,\n  INITIAL_IMAGE_ELEMENT_ID,\n  INITIAL_IMAGE_ELEMENT_NAME,\n  REACT_FLOW_NODE_TYPE_KEY,\n} from 'const/flowchart'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { addAlgorithmNode, addInputNode } from './FlowElementActions'\nimport { getLabelByPath } from './FlowElementUtils'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\n\nconst initialElements: Elements<NodeData> = [\n  {\n    id: INITIAL_IMAGE_ELEMENT_ID,\n    type: REACT_FLOW_NODE_TYPE_KEY.ImageFileNode,\n    data: {\n      type: NODE_TYPE_SET.INPUT,\n      label: INITIAL_IMAGE_ELEMENT_NAME,\n    },\n    style: INITIAL_DATA_STYLE,\n    position: { x: 50, y: 150 },\n  },\n]\n\nconst initialFlowPosition: FlowTransform = {\n  x: 0,\n  y: 0,\n  zoom: 0.7,\n}\n\nconst initialElementCoord: ElementCoord = {\n  x: 100,\n  y: 150,\n}\n\nconst initialState: FlowElement = {\n  flowElements: initialElements,\n  flowPosition: initialFlowPosition,\n  elementCoord: initialElementCoord,\n}\n\nexport const flowElementSlice = createSlice({\n  name: FLOW_ELEMENT_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFlowPosition: (state, action: PayloadAction<FlowTransform>) => {\n      state.flowPosition = action.payload\n    },\n    setFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = action.payload\n    },\n    deleteFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = removeElements(action.payload, state.flowElements)\n    },\n    deleteFlowElementsById: (state, action: PayloadAction<string>) => {\n      const element = state.flowElements.find(\n        (edge) => edge.id === action.payload,\n      )\n      if (element !== undefined) {\n        state.flowElements = removeElements([element], state.flowElements)\n      }\n    },\n    editFlowElementPositionById: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        coord: {\n          x: number\n          y: number\n        }\n      }>,\n    ) => {\n      let { nodeId, coord } = action.payload\n      const elementIdx = state.flowElements.findIndex(\n        (ele) => ele.id === nodeId,\n      )\n      const targetItem = state.flowElements[elementIdx]\n      if (isNode(targetItem)) {\n        targetItem.position = coord\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        let { node } = action.meta.arg\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_ALGO_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        let { node } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_DATA_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(setInputNodeFilePath, (state, action) => {\n        let { nodeId, filePath } = action.payload\n        const label = getLabelByPath(filePath)\n        const elementIdx = state.flowElements.findIndex(\n          (ele) => ele.id === nodeId,\n        )\n        const targetNode = state.flowElements[elementIdx]\n        if (targetNode.data != null) {\n          targetNode.data.label = label\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const elementIdx = state.flowElements.findIndex(\n            (ele) => ele.id === nodeId,\n          )\n          const targetNode = state.flowElements[elementIdx]\n          if (targetNode.data != null) {\n            targetNode.data.label = getLabelByPath(action.payload.resultPath)\n          }\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.flowPosition = initialFlowPosition\n        state.elementCoord = initialElementCoord\n        const newNodeList: Elements<NodeData> = Object.values(\n          action.payload.nodeDict,\n        ).map((node) => {\n          if (isInputNodePostData(node)) {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'input',\n              },\n            }\n          } else {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'algorithm',\n              },\n            }\n          }\n        })\n        state.flowElements = newNodeList.concat(\n          Object.values(action.payload.edgeDict),\n        )\n      }),\n})\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nfunction updateElementCoord(state: FlowElement) {\n  const { x } = state.elementCoord\n  if (x > 800) {\n    state.elementCoord.x = 300\n    state.elementCoord.y += 100\n  } else {\n    state.elementCoord.x += 250\n    state.elementCoord.y += getRandomArbitrary(-20, 20)\n  }\n}\n\nexport const {\n  setFlowPosition,\n  setFlowElements,\n  deleteFlowElements,\n  deleteFlowElementsById,\n  editFlowElementPositionById,\n} = flowElementSlice.actions\n\nexport default flowElementSlice.reducer\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getNWBParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/nwb`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const NWB_SLICE_NAME = 'NWB'\n\nexport type NWBType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getNWBParamsApi } from 'api/nwb/NWB'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { NWB_SLICE_NAME } from './NWBType'\n\nexport const getNWBParams = createAsyncThunk<ParamDTO, void>(\n  `${NWB_SLICE_NAME}/getNWBParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getNWBParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getNWBParams } from './NWBAction'\nimport { NWBType, NWB_SLICE_NAME } from './NWBType'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\n\nconst initialState: NWBType = {\n  params: {},\n}\n\nexport const nwbSlice = createSlice({\n  name: NWB_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const targetNode = getChildParam(path, state.params)\n      if (targetNode != null) {\n        targetNode.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNWBParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = nwbSlice.actions\n\nexport default nwbSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\n\ntype RightDrawer = {\n  open: boolean\n  mode: RIGHT_DRAWER_MODE_TYPE\n  currendNodeId: string | null\n}\n\nexport const RIGHT_DRAWER_MODE = {\n  NONE: 'none',\n  NWB: 'nwb',\n  PARAM_FORM: 'paramForm',\n  SNAKEMAKE: 'snakemake',\n} as const\n\nexport type RIGHT_DRAWER_MODE_TYPE =\n  typeof RIGHT_DRAWER_MODE[keyof typeof RIGHT_DRAWER_MODE]\n\nconst initialState: RightDrawer = {\n  open: false,\n  mode: RIGHT_DRAWER_MODE.NONE,\n  currendNodeId: null,\n}\nexport const rightDrawerSlice = createSlice({\n  name: 'rightDrawer',\n  initialState,\n  reducers: {\n    openRightDrawer: (state, action: PayloadAction<RIGHT_DRAWER_MODE_TYPE>) => {\n      state.open = true\n      state.mode = action.payload\n    },\n    closeRightDrawer: (state) => {\n      state.open = false\n      state.mode = RIGHT_DRAWER_MODE.NONE\n    },\n    toggleParamForm: (state, action: PayloadAction<string>) => {\n      if (\n        state.open &&\n        state.mode === RIGHT_DRAWER_MODE.PARAM_FORM &&\n        state.currendNodeId === action.payload\n      ) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n        state.currendNodeId = null\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.PARAM_FORM\n        state.currendNodeId = action.payload\n      }\n    },\n    toggleNwb: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.NWB) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.NWB\n      }\n      state.currendNodeId = null\n    },\n    toggleSnakemake: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.SNAKEMAKE) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.SNAKEMAKE\n      }\n      state.currendNodeId = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteFlowElements, (state, action) => {\n        if (\n          action.payload.findIndex((elm) => elm.id === state.currendNodeId) > 0\n        ) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (action.payload === state.currendNodeId) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, () => {\n        return initialState\n      })\n  },\n})\n\nexport const {\n  toggleParamForm,\n  toggleNwb,\n  toggleSnakemake,\n  openRightDrawer,\n  closeRightDrawer,\n} = rightDrawerSlice.actions\n\nexport default rightDrawerSlice.reducer\n","import MuiAccordion, { AccordionProps } from '@mui/material/Accordion'\nimport { styled } from '@mui/material/styles'\n\nexport const Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: '1px solid',\n  borderColor: theme.palette.divider,\n  boxShadow: 'none',\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}))\n","import React, { useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport Switch from '@mui/material/Switch'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport Typography from '@mui/material/Typography'\n\nimport { isParamChild } from 'utils/param/ParamUtils'\nimport { ParamType } from 'utils/param/ParamType'\nimport { RootState } from 'store/store'\nimport { Accordion } from 'components/common/Accordion'\n\ntype ParamSelectorType = (paramKey: string) => (state: RootState) => ParamType\ntype ParamValueSelectorType = (path: string) => (state: RootState) => unknown\ntype ParamUpdateActionCreatorType = (\n  path: string,\n  newValue: unknown,\n) => AnyAction\n\nexport type CreateParamFormItemComponentProps = {\n  paramSelector: ParamSelectorType\n  paramValueSelector: ParamValueSelectorType\n  paramUpdateActionCreator: ParamUpdateActionCreatorType\n}\n\nexport function createParamFormItemComponent({\n  paramSelector,\n  paramValueSelector,\n  paramUpdateActionCreator,\n}: CreateParamFormItemComponentProps): React.FC<{ paramKey: string }> {\n  function useParamValueUpdate(\n    path: string,\n  ): [unknown, (newValue: unknown) => AnyAction] {\n    const value = useSelector(paramValueSelector(path))\n    const updateParamAction = (newValue: unknown) => {\n      return paramUpdateActionCreator(path, newValue)\n    }\n    return [value, updateParamAction]\n  }\n  const ParamItemForString = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    const isArray = useRef(Array.isArray(value))\n    const onChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(updateParamAction(newValue))\n    }\n\n    const onBlur = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(\n        updateParamAction(\n          newValue\n            .split(',')\n            .filter(Boolean)\n            .map((e) => Number(e)),\n        ),\n      )\n    }\n    return (\n      <TextField\n        value={value}\n        onChange={onChange}\n        multiline\n        onBlur={isArray ? onBlur : undefined}\n      />\n    )\n  })\n  const ParamItemForNumber = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue =\n          event.target.value === '' ? '' : Number(event.target.value)\n        if (typeof newValue === 'number') {\n          dispatch(updateParamAction(newValue))\n        }\n      }\n      return (\n        <TextField\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={value}\n          onChange={onChange}\n        />\n      )\n    } else {\n      return null\n    }\n  })\n  const ParamItemForBoolean = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'boolean') {\n      const onChange = () => {\n        dispatch(updateParamAction(!value))\n      }\n      return <Switch checked={value} onChange={onChange} />\n    } else {\n      return null\n    }\n  })\n  const ParamItemForValueType = React.memo<ParamChildItemProps>(({ path }) => {\n    const [value] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      return <ParamItemForNumber path={path} />\n    } else if (typeof value === 'string') {\n      return <ParamItemForString path={path} />\n    } else if (typeof value === 'boolean') {\n      return <ParamItemForBoolean path={path} />\n    } else {\n      return <ParamItemForString path={path} />\n    }\n  })\n  const ParamChildItem = React.memo<ParamChildItemProps & { name: string }>(\n    ({ path, name }) => {\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            marginTop: (theme) => theme.spacing(2),\n            marginBottom: (theme) => theme.spacing(2),\n            alignItems: 'center',\n            overflow: 'scroll',\n          }}\n        >\n          <Box\n            style={{ verticalAlign: 'middle' }}\n            sx={{\n              flexGrow: 1,\n              width: '50%',\n            }}\n          >\n            <Typography style={{ overflow: 'scroll' }}>{name}</Typography>\n          </Box>\n          <Box sx={{ width: '50%' }}>\n            <ParamItemForValueType path={path} />\n          </Box>\n        </Box>\n      )\n    },\n  )\n  const ParamItem = React.memo<ParamItemProps>(({ paramKey, param }) => {\n    if (isParamChild(param)) {\n      return <ParamChildItem path={param.path} name={paramKey} />\n    } else {\n      return (\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            {paramKey}\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              {Object.entries(param.children).map(([paramKey, param], i) => (\n                <ParamItem param={param} paramKey={paramKey} />\n              ))}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      )\n    }\n  })\n  return React.memo<{ paramKey: string }>(({ paramKey }) => {\n    const param = useSelector(paramSelector(paramKey)) // 一階層目\n    return <ParamItem paramKey={paramKey} param={param} />\n  })\n}\n\ntype ParamItemProps = {\n  paramKey: string\n  param: ParamType\n}\n\ntype ParamChildItemProps = {\n  path: string\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\nimport { updateParam } from 'store/slice/NWB/NWBSlice'\nimport { getNWBParams } from 'store/slice/NWB/NWBAction'\nimport { toggleNwb } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectNwbParam,\n  selectNwbParamsKeyList,\n  selectNwbParamsValue,\n} from 'store/slice/NWB/NWBSelectors'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const NWBSettingButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleNwb())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      NWB setting\n    </Button>\n  )\n})\n\nexport const NWBSettingContents = React.memo(() => {\n  const dispatch = useDispatch()\n\n  const paramKeyList = useSelector(selectNwbParamsKeyList, arrayEqualityFn)\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getNWBParams())\n    }\n  })\n\n  return (\n    <div className=\"nwbParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectNwbParam,\n    paramValueSelector: selectNwbParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getSnakemakeParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/snakemake`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const SNAKEMAKE_SLICE_NAME = 'Snakemake'\n\nexport type SnakemakeType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getSnakemakeParamsApi } from 'api/snakemake/Snakemake'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nexport const getSnakemakeParams = createAsyncThunk<ParamDTO, void>(\n  `${SNAKEMAKE_SLICE_NAME}/getSnakemakeParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = getSnakemakeParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport { getSnakemakeParams } from './SnakemakeAction'\nimport { SnakemakeType, SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nconst initialState: SnakemakeType = {\n  params: {},\n}\n\nexport const SnakemakeSlice = createSlice({\n  name: SNAKEMAKE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const target = getChildParam(path, state.params)\n      if (target != null) {\n        target.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getSnakemakeParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = SnakemakeSlice.actions\n\nexport default SnakemakeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\n\nimport { updateParam } from 'store/slice/Snakemake/SnakemakeSlice'\nimport { getSnakemakeParams } from 'store/slice/Snakemake/SnakemakeAction'\nimport { toggleSnakemake } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport {\n  selectSnakemakeParam,\n  selectSnakemakeParamsKeyList,\n  selectSnakemakeParamsValue,\n} from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const SnakemakeButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleSnakemake())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      Snakemake\n    </Button>\n  )\n})\n\nexport const SnakemakeContents = React.memo(() => {\n  const dispatch = useDispatch()\n  const paramKeyList = useSelector(\n    selectSnakemakeParamsKeyList,\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getSnakemakeParams())\n    }\n  })\n  return (\n    <div className=\"SnakemakeParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectSnakemakeParam,\n    paramValueSelector: selectSnakemakeParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\nimport Grow from '@mui/material/Grow'\nimport Paper from '@mui/material/Paper'\nimport Popper from '@mui/material/Popper'\nimport MenuItem from '@mui/material/MenuItem'\nimport MenuList from '@mui/material/MenuList'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nimport { useSnackbar } from 'notistack'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport {\n  RUN_BTN_LABELS,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n} from 'store/slice/Pipeline/PipelineType'\nimport { selectPipelineRunBtn } from 'store/slice/Pipeline/PipelineSelectors'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\n\nexport const RunButtons = React.memo<UseRunPipelineReturnType>((props) => {\n  const {\n    uid,\n    isStartedSuccess,\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    handleCancelPipeline,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const runBtnOption = useSelector(selectPipelineRunBtn)\n\n  const [dialogOpen, setDialogOpen] = React.useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n  const handleClick = () => {\n    let errorMessage: string | null = null\n    if (algorithmNodeNotExist) {\n      errorMessage = 'please add some algorithm nodes to the flowchart'\n    }\n    if (filePathIsUndefined) {\n      errorMessage = 'please select input file'\n    }\n    if (errorMessage != null) {\n      enqueueSnackbar(errorMessage, {\n        variant: 'error',\n      })\n    } else {\n      if (runBtnOption === RUN_BTN_OPTIONS.RUN_NEW) {\n        setDialogOpen(true)\n      } else {\n        handleRunPipelineByUid()\n      }\n    }\n  }\n  const onClickDialogRun = (name: string) => {\n    handleRunPipeline(name)\n    setDialogOpen(false)\n  }\n  const onClickCancel = () => {\n    handleCancelPipeline()\n  }\n  const [menuOpen, setMenuOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLDivElement>(null)\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    option: RUN_BTN_TYPE,\n  ) => {\n    dispatch(setRunBtnOption({ runBtnOption: option }))\n    setMenuOpen(false)\n  }\n  const handleToggle = () => {\n    setMenuOpen((prevOpen) => !prevOpen)\n  }\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n    setMenuOpen(false)\n  }\n  const uidExists = uid != null\n  return (\n    <>\n      <ButtonGroup\n        sx={{\n          margin: 1,\n        }}\n        variant=\"contained\"\n        ref={anchorRef}\n        disabled={isStartedSuccess}\n      >\n        <Button onClick={handleClick}>{RUN_BTN_LABELS[runBtnOption]}</Button>\n        <Button size=\"small\" onClick={handleToggle}>\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={menuOpen}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList>\n                  {Object.values(RUN_BTN_OPTIONS).map((option) => (\n                    <MenuItem\n                      key={option}\n                      disabled={\n                        !uidExists && option === RUN_BTN_OPTIONS.RUN_ALREADY\n                      }\n                      selected={option === runBtnOption}\n                      onClick={(event) => handleMenuItemClick(event, option)}\n                    >\n                      {RUN_BTN_LABELS[option]}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n      <Button\n        variant=\"outlined\"\n        endIcon={<CloseIcon />}\n        onClick={onClickCancel}\n        sx={{\n          margin: 1,\n          marginRight: 4,\n        }}\n      >\n        Cancel\n      </Button>\n      <RunDialog\n        open={dialogOpen}\n        handleRun={onClickDialogRun}\n        handleClose={() => setDialogOpen(false)}\n      />\n    </>\n  )\n})\n\nconst RunDialog = React.memo<{\n  open: boolean\n  handleRun: (name: string) => void\n  handleClose: () => void\n}>(({ open, handleClose, handleRun }) => {\n  const [name, setName] = React.useState('New flow')\n  const [error, setError] = React.useState<string | null>(null)\n  const onClickRun = () => {\n    if (name !== '') {\n      handleRun(name)\n    } else {\n      setError('name is empty')\n    }\n  }\n  const onChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    if (event.target.value !== '') {\n      setError(null)\n    }\n  }\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Name and run flowchart</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"name\"\n          autoFocus\n          margin=\"dense\"\n          fullWidth\n          variant=\"standard\"\n          onChange={onChangeName}\n          error={error != null}\n          helperText={error}\n          value={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"inherit\" variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button onClick={onClickRun} color=\"primary\" variant=\"outlined\">\n          Run\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","import React from 'react'\nimport Box from '@mui/material/Box'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { NWBSettingButton } from './FlowChart/NWB'\nimport { SnakemakeButton } from './FlowChart/Snakemake'\nimport { RunButtons } from './RunButtons'\n\nexport const ToolBar = React.memo<UseRunPipelineReturnType>((props) => (\n  <Box\n    style={{\n      position: 'absolute',\n      float: 'right',\n      textAlign: 'right',\n      top: -7,\n      right: 10,\n      zIndex: 4,\n      textTransform: 'none',\n    }}\n  >\n    <SnakemakeButton />\n    <NWBSettingButton />\n    <RunButtons {...props} />\n  </Box>\n))\n","import { useSelector } from 'react-redux'\nimport { selectHandleTypeColor } from 'store/slice/HandleTypeColor/HandleTypeColorSelectors'\n\nexport function useHandleColor(type: string) {\n  const color = useSelector(selectHandleTypeColor(type))\n  return color\n}\n","import { RootState } from '../../store'\n\nexport const selectHandleTypeColor = (key: string) => (state: RootState) => {\n  if (state.handleColor.colorMap[key] != null) {\n    return state.handleColor.colorMap[key]\n  } else {\n    return undefined\n  }\n}\n","import React from 'react'\nimport LinearProgress, {\n  LinearProgressProps,\n} from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\n\nexport const LinearProgressWithLabel = React.memo<\n  LinearProgressProps & { value: number }\n>((props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  )\n})\n","import { FileUploaderType } from './FileUploaderType'\n\nexport const inistialUploaderState: FileUploaderType = {\n  path: undefined,\n  fileName: undefined,\n  isUninitialized: true,\n  pending: false,\n  fulfilled: false,\n  uploadingProgress: undefined,\n  error: undefined,\n}\n","import { RootState } from 'store/store'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nexport const selectFileUploader = (id: string) => (state: RootState) => {\n  if (Object.keys(state.fileUploader).includes(id)) {\n    return state.fileUploader[id]\n  } else {\n    return inistialUploaderState\n  }\n}\n\nexport const selectUploadFilePath = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).path\n\nexport const selectUploadFileName = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fileName\n\nexport const selectFileUploadIsUninitialized =\n  (id: string) => (state: RootState) =>\n    selectFileUploader(id)(state).isUninitialized\n\nexport const selectFileUploadIsPending = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).pending\n\nexport const selectFileUploadIsFulfilled = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fulfilled\n\nexport const selectFileUploadProgress = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).uploadingProgress\n\nexport const selectFileUploadError = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).error\n","import { nanoid } from '@reduxjs/toolkit'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uploadFile } from './FileUploaderActions'\nimport {\n  selectFileUploadIsPending,\n  selectUploadFilePath,\n  selectFileUploadIsFulfilled,\n  selectFileUploadProgress,\n  selectFileUploadIsUninitialized,\n  selectFileUploadError,\n} from './FileUploaderSelectors'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\ntype UseFileUploaderProps = {\n  fileType?: FILE_TYPE\n  nodeId?: string\n}\n\nexport function useFileUploader({ fileType, nodeId }: UseFileUploaderProps) {\n  const dispatch = useDispatch()\n  const id = React.useRef(nanoid())\n  const onUploadFile = React.useCallback(\n    (formData: FormData, fileName: string) => {\n      dispatch(\n        uploadFile({\n          requestId: id.current,\n          nodeId,\n          fileName,\n          formData,\n          fileType,\n        }),\n      )\n    },\n    [dispatch, fileType, nodeId],\n  )\n  const uninitialized = useSelector(selectFileUploadIsUninitialized(id.current))\n  const filePath = useSelector(selectUploadFilePath(id.current))\n  const pending = useSelector(selectFileUploadIsPending(id.current))\n  const fulfilled = useSelector(selectFileUploadIsFulfilled(id.current))\n  const progress = useSelector(selectFileUploadProgress(id.current))\n  const error = useSelector(selectFileUploadError(id.current))\n  return {\n    filePath,\n    uninitialized,\n    pending,\n    fulfilled,\n    progress,\n    error,\n    onUploadFile,\n  }\n}\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { createContext } from 'react'\n\nexport declare type OpenDialogValue = {\n  filePath: string | string[]\n  open: boolean\n  fileTreeType?: FILE_TREE_TYPE\n  multiSelect: boolean\n  onSelectFile: (path: string | string[]) => void\n}\n\nexport declare type ErrorDialogValue = {\n  anchorElRef: { current: Element | null }\n  message: string\n}\n\nexport const DialogContext = createContext<{\n  onOpen: (nodeId: string) => void\n  onOpenDialogFile: (value: OpenDialogValue) => void\n  onMessageError: (value: ErrorDialogValue) => void\n}>({\n  onOpen: () => null,\n  onOpenDialogFile: () => null,\n  onMessageError: () => null,\n})\n","import React, { useContext } from 'react'\nimport { Button, Typography } from '@mui/material'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { LinearProgressWithLabel } from './LinerProgressWithLabel'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { getLabelByPath } from 'store/slice/FlowElement/FlowElementUtils'\nimport { DialogContext } from 'components/Workspace/FlowChart/DialogContext'\n\nexport const FileSelect = React.memo<{\n  multiSelect?: boolean\n  filePath: string | string[]\n  fileType: FILE_TYPE\n  nodeId?: string\n  onChangeFilePath: (path: string | string[]) => void\n}>(({ multiSelect = false, filePath, nodeId, fileType, onChangeFilePath }) => {\n  const {\n    // filePath: uploadedFilePath,\n    onUploadFile,\n    pending,\n    uninitialized,\n    progress,\n    error,\n  } = useFileUploader({ fileType, nodeId })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n  return (\n    <>\n      {!uninitialized && pending && progress != null && (\n        <div style={{ marginLeft: 2, marginRight: 2 }}>\n          <LinearProgressWithLabel value={progress} />\n        </div>\n      )}\n      <FileSelectImple\n        multiSelect={multiSelect}\n        filePath={filePath}\n        onSelectFile={onChangeFilePath}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={fileType}\n        selectButtonLabel={`Select ${fileType}`}\n      />\n      {error != null && (\n        <Typography variant=\"caption\" color=\"error\">\n          {error}\n        </Typography>\n      )}\n    </>\n  )\n})\n\ntype FileSelectImpleProps = {\n  multiSelect?: boolean\n  filePath: string | string[]\n  onUploadFile: (formData: FormData, fileName: string) => void\n  onSelectFile: (path: string | string[]) => void\n  fileTreeType?: FILE_TREE_TYPE\n  selectButtonLabel?: string\n  uploadButtonLabel?: string\n}\n\nexport const FileSelectImple = React.memo<FileSelectImpleProps>(\n  ({\n    multiSelect = false,\n    filePath,\n    onSelectFile,\n    onUploadFile,\n    fileTreeType,\n    selectButtonLabel,\n    uploadButtonLabel,\n  }) => {\n    const { onOpenDialogFile } = useContext(DialogContext)\n\n    const onFileInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.preventDefault()\n      if (event.target.files != null && event.target.files[0] != null) {\n        const file = event.target.files[0]\n        const formData = new FormData()\n        formData.append('file', file)\n        const fileName = file.name\n        onUploadFile(formData, fileName)\n      }\n    }\n    const inputRef = React.useRef<HTMLInputElement>(null)\n    const onClick = () => {\n      if (inputRef.current != null) {\n        inputRef.current.click()\n      }\n    }\n    const accept = getFileInputAccept(fileTreeType)\n    const fileName = getLabelByPath(filePath)\n    return (\n      <div\n        style={{\n          padding: 5,\n        }}\n      >\n        <ButtonGroup size=\"small\" style={{ marginRight: 4 }}>\n          <Button\n            variant=\"outlined\"\n            onClick={() => {\n              onOpenDialogFile({\n                open: true,\n                multiSelect,\n                filePath,\n                fileTreeType,\n                onSelectFile,\n              })\n            }}\n          >\n            {!!selectButtonLabel ? selectButtonLabel : 'Select File'}\n          </Button>\n          <Button onClick={onClick} variant=\"outlined\">\n            {!!uploadButtonLabel ? uploadButtonLabel : 'Load'}\n          </Button>\n        </ButtonGroup>\n        <div>\n          <input\n            ref={inputRef}\n            type=\"file\"\n            onChange={onFileInputChange}\n            accept={accept}\n            style={{\n              visibility: 'hidden',\n              width: 0,\n              height: 0,\n            }}\n          />\n          <Typography className=\"selectFilePath\" variant=\"caption\">\n            {!!fileName ? fileName : 'No file is selected.'}\n          </Typography>\n        </div>\n      </div>\n    )\n  },\n)\n\nfunction getFileInputAccept(fileType: FILE_TREE_TYPE | undefined) {\n  switch (fileType) {\n    case FILE_TREE_TYPE_SET.IMAGE:\n      return '.tif,.tiff'\n    case FILE_TREE_TYPE_SET.CSV:\n      return '.csv'\n    case FILE_TREE_TYPE_SET.HDF5:\n      return '.hdf5,.nwb'\n    default:\n      return undefined\n  }\n}\n","import { Connection } from 'react-flow-renderer'\n\nexport function toHandleId(nodeId: string, name: string, type: string) {\n  return `${nodeId}--${name}--${type}`\n}\n\nexport function getHandleType(handleId: string) {\n  return handleId.split('--')[2]\n}\n\nexport function isValidConnection(connection: Connection) {\n  if (connection.sourceHandle != null && connection.targetHandle != null) {\n    return (\n      getHandleType(connection.sourceHandle) ===\n      getHandleType(connection.targetHandle)\n    )\n  } else {\n    return true\n  }\n}\n","import React, { CSSProperties } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport {\n  selectImageInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { FileSelect } from './FileSelect'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\n// Connection部分のレイアウト\nconst sourceHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  top: 15,\n  border: '1px solid',\n  // borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const ImageFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <ImageFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst ImageFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected: elementSelected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectImageInputNodeSelectedFilePath(nodeId),\n      (a, b) => (a != null && b != null ? arrayEqualityFn(a, b) : a === b),\n    )\n    const onChangeFilePath = (path: string[]) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n\n    const theme = useTheme()\n    const returnType = 'ImageData'\n    const imageColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '250px',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          multiSelect\n          onChangeFilePath={(path) => {\n            if (Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.IMAGE}\n          filePath={filePath ?? []}\n        />\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'image', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: imageColor,\n          }}\n          isValidConnection={isValidConnection}\n        />\n      </div>\n    )\n  },\n)\n","import React, { CSSProperties, useContext } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport {\n  alpha,\n  Typography,\n  useTheme,\n  Tooltip,\n  IconButton,\n  Button,\n  LinearProgress,\n  ButtonGroup,\n} from '@mui/material'\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded'\nimport ErrorIcon from '@mui/icons-material/Error'\n\nimport { AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  selectAlgoArgs,\n  selectAlgoReturns,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { selectAlgorithmNodeDefined } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { toggleParamForm } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultMessage,\n  selectPipelineNodeResultStatus,\n  selectPipelineStatus,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\nimport {\n  NODE_RESULT_STATUS,\n  RUN_STATUS,\n} from 'store/slice/Pipeline/PipelineType'\nimport { DialogContext } from 'components/Workspace/FlowChart/DialogContext'\n\nconst leftHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\nconst rightHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\n\nexport const AlgorithmNode = React.memo<NodeProps<NodeData>>((element) => {\n  const defined = useSelector(selectAlgorithmNodeDefined(element.id))\n  if (defined) {\n    return <AlgorithmNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst AlgorithmNodeImple = React.memo<NodeProps<NodeData>>(\n  ({ id: nodeId, selected: elementSelected, isConnectable, data }) => {\n    const { onOpen } = useContext(DialogContext)\n    const theme = useTheme()\n    const dispatch = useDispatch()\n\n    const onClickParamButton = () => {\n      dispatch(toggleParamForm(nodeId))\n    }\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    const onClickOutputButton = () => {\n      onOpen(nodeId)\n    }\n\n    const status = useStatus(nodeId)\n\n    return (\n      <div\n        tabIndex={0}\n        style={{\n          width: '100%',\n          height: '110%',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.15)\n            : undefined,\n          border: '1px solid',\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <AlgoName nodeId={nodeId} data={data} />\n        <ButtonGroup sx={{ mx: 1 }}>\n          <Button size=\"small\" onClick={onClickParamButton}>\n            Param\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={onClickOutputButton}\n            disabled={status !== NODE_RESULT_STATUS.SUCCESS}\n          >\n            Output\n          </Button>\n        </ButtonGroup>\n        <AlgoArgs nodeId={nodeId} />\n        <AlgoReturns nodeId={nodeId} isConnectable={isConnectable} />\n        <Message nodeId={nodeId} />\n      </div>\n    )\n  },\n)\n\nconst AlgoName = React.memo<{\n  nodeId: string\n  data: NodeData\n}>(({ nodeId, data }) => {\n  const theme = useTheme()\n  const status = useStatus(nodeId)\n  const pipelineStatus = useSelector(selectPipelineStatus)\n  return (\n    <div\n      style={{\n        padding: 8,\n        paddingLeft: 8,\n        width: '100%',\n      }}\n      className=\"algoName\"\n    >\n      {pipelineStatus === RUN_STATUS.START_SUCCESS &&\n        status === NODE_RESULT_STATUS.PENDING && <LinearProgress />}\n      <Typography\n        style={{\n          textAlign: 'left',\n          color:\n            status === NODE_RESULT_STATUS.ERROR\n              ? theme.palette.error.main\n              : undefined,\n        }}\n      >\n        {data.label}\n      </Typography>\n    </div>\n  )\n})\n\nconst AlgoArgs = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const algoArgs = useSelector(selectAlgoArgs(nodeId), algoInfoListEqualtyFn)\n\n  return (\n    <>\n      {algoArgs != null\n        ? algoArgs\n            .filter((info) => info.type !== 'params')\n            .map((algoInfo, i) => {\n              return <ArgHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n            })\n        : null}\n    </>\n  )\n})\n\nconst AlgoReturns = React.memo<{\n  nodeId: string\n  isConnectable: boolean\n}>(({ nodeId, isConnectable }) => {\n  const algoReturns = useSelector(\n    selectAlgoReturns(nodeId),\n    algoInfoListEqualtyFn,\n  )\n  return (\n    <>\n      {algoReturns != null ? (\n        algoReturns?.map((algoInfo, i) => {\n          return <ReturnHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n        })\n      ) : (\n        // algoReturns.lengthが0の場合の応急処置\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={`${nodeId}`}\n          style={{\n            ...rightHandleStyle,\n            top: 15,\n          }}\n          isConnectable={isConnectable}\n        />\n      )}\n    </>\n  )\n})\n\ntype HandleProps = {\n  algoInfo: AlgorithmInfo\n  nodeId: string\n  i: number\n}\n\nfunction hexToRgb(hex: string | undefined, isNone: boolean | undefined) {\n  if (hex !== undefined) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n    if (result !== null) {\n      if (isNone) {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 0.55)`\n      } else {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 1)`\n      }\n    } else {\n      return undefined\n    }\n  } else {\n    return undefined\n  }\n}\n\nconst ArgHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type, isNone }, nodeId, i }) => {\n    const hex_color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    const rgb_color = hexToRgb(hex_color, isNone)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"target\"\n        position={Position.Left}\n        id={id}\n        style={{\n          ...leftHandleStyle,\n          background: rgb_color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"left-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst ReturnHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type }, nodeId, i }) => {\n    const color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"source\"\n        position={Position.Right}\n        id={id}\n        style={{\n          ...rightHandleStyle,\n          background: color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"right-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst Message = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const status = useStatus(nodeId)\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const errorMsg = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultMessage(nodeId)(state) ?? null\n      : null,\n  )\n\n  const anchorElRef = React.useRef<HTMLButtonElement | null>(null)\n  const theme = useTheme()\n  const { onMessageError } = useContext(DialogContext)\n\n  if (status === NODE_RESULT_STATUS.ERROR) {\n    return (\n      <IconButton\n        ref={anchorElRef}\n        onClick={() => {\n          onMessageError({ anchorElRef, message: errorMsg as string })\n        }}\n        size=\"small\"\n        style={{ color: theme.palette.error.main, float: 'right' }}\n      >\n        <ErrorIcon />\n      </IconButton>\n    )\n  } else if (status === NODE_RESULT_STATUS.SUCCESS) {\n    return <CheckCircleRoundedIcon color=\"success\" sx={{ float: 'right' }} />\n  } else {\n    return null\n  }\n})\n\nfunction algoInfoListEqualtyFn(\n  a: AlgorithmInfo[] | undefined,\n  b: AlgorithmInfo[] | undefined,\n) {\n  if (a != null && b != null) {\n    return (\n      a === b ||\n      (a.length === b.length &&\n        a.every((v, i) => v.type === b[i].type && v.name === b[i].name))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction useStatus(nodeId: string) {\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const status = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultStatus(nodeId)(state)\n      : 'uninitialized',\n  )\n  return status\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { INITIAL_IMAGE_ELEMENT_ID } from 'const/flowchart'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\nimport { addInputNode } from '../FlowElement/FlowElementActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { setInputNodeFilePath } from './InputNodeActions'\nimport {\n  CsvInputParamType,\n  FILE_TYPE_SET,\n  InputNode,\n  INPUT_NODE_SLICE_NAME,\n} from './InputNodeType'\nimport { isCsvInputNode, isHDF5InputNode } from './InputNodeUtils'\n\nconst initialState: InputNode = {\n  [INITIAL_IMAGE_ELEMENT_ID]: {\n    fileType: FILE_TYPE_SET.IMAGE,\n    param: {},\n  },\n}\n\nexport const inputNodeSlice = createSlice({\n  name: INPUT_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    deleteInputNode(state, action: PayloadAction<string>) {\n      delete state[action.payload]\n    },\n    setCsvInputNodeParam(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: CsvInputParamType\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId]\n      if (isCsvInputNode(inputNode)) {\n        inputNode.param = param\n      }\n    },\n    setInputNodeHDF5Path(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n      }>,\n    ) {\n      const { nodeId, path } = action.payload\n      const item = state[nodeId]\n      if (isHDF5InputNode(item)) {\n        item.hdf5Path = path\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(setInputNodeFilePath, (state, action) => {\n        const { nodeId, filePath } = action.payload\n        const targetNode = state[nodeId]\n        targetNode.selectedFilePath = filePath\n        if (isHDF5InputNode(targetNode)) {\n          targetNode.hdf5Path = undefined\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        const { node, fileType } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          switch (fileType) {\n            case FILE_TYPE_SET.CSV:\n              state[node.id] = {\n                fileType,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.IMAGE:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.HDF5:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.FLUO:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.BEHAVIOR:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.INPUT) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isInputNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.IMAGE,\n                  selectedFilePath: node.data.path as string[],\n                  param: {},\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.CSV,\n                  selectedFilePath: node.data.path as string,\n                  param: node.data.param as CsvInputParamType,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.HDF5,\n                  hdf5Path: node.data.hdf5Path,\n                  selectedFilePath: node.data.path as string,\n                  param: {},\n                }\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const { resultPath } = action.payload\n          const target = state[nodeId]\n          if (target.fileType === FILE_TYPE_SET.IMAGE) {\n            target.selectedFilePath = [resultPath]\n          } else {\n            target.selectedFilePath = resultPath\n          }\n        }\n      }),\n})\n\nexport const { setCsvInputNodeParam, setInputNodeHDF5Path } =\n  inputNodeSlice.actions\n\nexport default inputNodeSlice.reducer\n","import React from 'react'\nimport { DATA_TYPE } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const DisplayDataContext = React.createContext<{\n  nodeId: string | null\n  filePath: string\n  dataType: DATA_TYPE\n  itemId: number\n}>({ nodeId: '', filePath: '', dataType: 'csv', itemId: NaN })\n","import React from 'react'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectCsvData,\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { CsvData } from 'api/outputs/Outputs'\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const CsvPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <CsvPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst CsvPlotImple = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  return (\n    <PresentationalCsvPlot\n      path={path}\n      transpose={transpose}\n      setHeader={setHeader}\n      setIndex={setIndex}\n    />\n  )\n})\n\n/**\n * CsvFileNodeの設定時に表示するプレビューでも使用することを想定\n *\n * DisplayDataContextに依存しない\n */\nexport const PresentationalCsvPlot = React.memo<{\n  path: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ path, transpose, setIndex, setHeader }) => {\n  const data = useSelector(\n    selectCsvData(path),\n    (a: CsvData | undefined, b: CsvData | undefined) => {\n      if (a != null && b != null) {\n        return twoDimarrayEqualityFn(a, b)\n      } else {\n        return a === undefined && b === undefined\n      }\n    },\n  )\n\n  const csvData = React.useMemo(() => {\n    if (transpose) {\n      return data[0].map((col, i) => data.map((row) => row[i]))\n    }\n    return data\n  }, [data, transpose])\n\n  const header: GridColDef[] = React.useMemo(() => {\n    const headerData = () => {\n      if (setHeader === null) {\n        return csvData[0]\n      } else {\n        if (setHeader >= csvData.length) {\n          return csvData[csvData.length - 1]\n        } else {\n          return csvData[setHeader]\n        }\n      }\n    }\n\n    if (setIndex) {\n      return [\n        { field: 'col0', headerName: 'index', width: 150 },\n        ...headerData().map((value, idx) => {\n          return {\n            field: `col${idx + 1}`,\n            headerName: `${setHeader === null ? idx : value}`,\n            width: 150,\n          }\n        }),\n      ]\n    } else {\n      return headerData().map((value, idx) => {\n        return {\n          field: `col${idx + 1}`,\n          headerName: `${setHeader === null ? idx : value}`,\n          width: 150,\n        }\n      })\n    }\n  }, [csvData, setHeader, setIndex])\n  const rows = csvData\n    .map((row, row_id) => {\n      let rowObj = Object.fromEntries(\n        [row_id, ...row].map((value, index) => {\n          return [`col${index}`, value]\n        }),\n      )\n      rowObj['id'] = row_id\n      return rowObj\n    })\n    .filter(\n      (value, idx) =>\n        setHeader === null || (setHeader !== null && idx > setHeader),\n    )\n\n  return (\n    <div style={{ height: 300, width: '100%' }}>\n      <DataGrid rows={rows} columns={header} />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Switch,\n  FormControlLabel,\n  TextField,\n  Box,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeParamSetHeader,\n  selectCsvInputNodeParamSetIndex,\n  selectCsvInputNodeParamTranspose,\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setCsvInputNodeParam } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { PresentationalCsvPlot } from 'components/Workspace/Visualize/Plot/CsvPlot'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const CsvFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <CsvFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst CsvFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'csv', 'CsvData')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nexport const ParamSettingDialog = React.memo<{\n  nodeId: string\n  filePath: string\n}>(({ nodeId, filePath }) => {\n  const [open, setOpen] = React.useState(false)\n  // OK時のみStoreに反映させるため一時的な値をuseStateで保持しておく。\n  // useStateの初期値はselectorで取得。\n  const [setHeader, setSetHeader] = React.useState(\n    useSelector(selectCsvInputNodeParamSetHeader(nodeId)),\n  )\n  const [setIndex, setSetIndex] = React.useState(\n    useSelector(selectCsvInputNodeParamSetIndex(nodeId)),\n  )\n  const [transpose, setTranspose] = React.useState(\n    useSelector(selectCsvInputNodeParamTranspose(nodeId)),\n  )\n  const dispatch = useDispatch()\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(\n      setCsvInputNodeParam({\n        nodeId,\n        param: { setHeader, setIndex, transpose },\n      }),\n    )\n  }\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>Settings</Button>\n      <Dialog open={open}>\n        <DialogTitle>Csv Setting</DialogTitle>\n        <DialogContent dividers>\n          <Box sx={{ display: 'flex', p: 1, m: 1, alignItems: 'flex-start' }}>\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={transpose}\n                  onChange={(event) => setTranspose(event.target.checked)}\n                />\n              }\n              label=\"Transpose\"\n            />\n            <TextField\n              label=\"header\"\n              sx={{\n                width: 100,\n                margin: (theme) => theme.spacing(0, 1, 0, 1),\n              }}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(event) => {\n                const value = Number(event.target.value)\n                if (value >= 0) {\n                  setSetHeader(value)\n                }\n              }}\n              value={setHeader}\n            />\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={setIndex}\n                  onChange={(event) => setSetIndex(event.target.checked)}\n                />\n              }\n              label=\"Set Index\"\n            />\n          </Box>\n          <Typography variant=\"h6\">Preview</Typography>\n          <CsvPreview\n            filePath={filePath}\n            transpose={transpose}\n            setHeader={setHeader}\n            setIndex={setIndex}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onClickOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst CsvPreview = React.memo<{\n  filePath: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ filePath: path, ...otherProps }) => {\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PresentationalCsvPlot path={path} {...otherProps} />\n  } else {\n    return null\n  }\n})\n","import { RootState } from '../../store'\n\nexport const selectHDF5 = (state: RootState) => {\n  if (state.hdf5 != null) {\n    return state.hdf5\n  } else {\n    return undefined\n  }\n}\n\nexport const selectHDF5Nodes = () => (state: RootState) =>\n  selectHDF5(state)?.tree\n\nexport const selectHDF5IsLoading = () => (state: RootState) =>\n  selectHDF5(state)?.isLoading ?? false\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type HDF5TreeDTO = HDF5DirDTO | HDF5FileDTO\n\nexport interface HDF5DirDTO {\n  isDir: true\n  name: string\n  nodes: HDF5TreeDTO[]\n  path: string\n}\n\nexport interface HDF5FileDTO {\n  isDir: false\n  name: string\n  shape: [number]\n  path: string\n  nbytes: string\n}\n\nexport async function getHDF5TreeApi(path: string): Promise<HDF5TreeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/hdf5/${path}`)\n  return response.data\n}\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nexport const HDF5_SLICE_NAME = 'hdf5'\n\nexport interface HDF5Tree {\n  isLoading: boolean\n  tree: HDF5TreeNodeType[]\n}\n\nexport type HDF5TreeNodeType = HDF5TreeDTO\n\nexport const HDF5_TYPE_SET = {\n  ALL: 'all',\n} as const\n\nexport type HDF5_TYPE = typeof HDF5_TYPE_SET[keyof typeof HDF5_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getHDF5TreeApi, HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nimport { HDF5_SLICE_NAME } from './HDF5Type'\n\nexport const getHDF5Tree = createAsyncThunk<HDF5TreeDTO[], { path: string }>(\n  `${HDF5_SLICE_NAME}/getHDF5Tree`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getHDF5TreeApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\n\nimport { alpha, useTheme } from '@mui/material/styles'\nimport Dialog from '@mui/material/Dialog'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectHDF5InputNodeSelectedFilePath,\n  selectInputNodeDefined,\n  selectInputNodeHDF5Path,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeHDF5Path } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectHDF5IsLoading,\n  selectHDF5Nodes,\n} from 'store/slice/HDF5/HDF5Selectors'\nimport { getHDF5Tree } from 'store/slice/HDF5/HDF5Action'\nimport { HDF5TreeNodeType } from 'store/slice/HDF5/HDF5Type'\nimport { Typography } from '@mui/material'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const HDF5FileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <HDF5FileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst HDF5FileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.HDF5}\n        filePath={filePath ?? ''}\n      />\n      {filePath !== undefined && <ItemSelect nodeId={nodeId} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'hdf5', 'HDF5Data')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nconst ItemSelect = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [open, setOpen] = React.useState(false)\n\n  const structureFileName = useSelector(selectInputNodeHDF5Path(nodeId))\n\n  return (\n    <>\n      <Button variant=\"outlined\" size=\"small\" onClick={() => setOpen(true)}>\n        {'Structure'}\n      </Button>\n      <Typography className=\"selectFilePath\" variant=\"caption\">\n        {!!structureFileName ? structureFileName : 'No structure is selected.'}\n      </Typography>\n\n      <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\n        <DialogTitle>{'Select File'}</DialogTitle>\n        <Structure nodeId={nodeId} />\n        <DialogActions>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"inherit\"\n            variant=\"outlined\"\n          >\n            cancel\n          </Button>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"primary\"\n            variant=\"outlined\"\n            autoFocus\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst Structure = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const theme = useTheme()\n  return (\n    <DialogContent dividers>\n      <div\n        style={{\n          height: 300,\n          overflow: 'auto',\n          marginBottom: theme.spacing(1),\n          border: '1px solid',\n          padding: theme.spacing(1),\n          borderColor: theme.palette.divider,\n        }}\n      >\n        <FileTreeView nodeId={nodeId} />\n      </div>\n    </DialogContent>\n  )\n})\n\nconst FileTreeView = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [tree, isLoading] = useHDF5Tree(nodeId)\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView>\n        {tree?.map((node) => (\n          <TreeNode node={node} nodeId={nodeId} />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: HDF5TreeNodeType\n  nodeId: string\n}>(({ node, nodeId }) => {\n  const dispatch = useDispatch()\n\n  const onClickFile = (path: string) => {\n    dispatch(setInputNodeHDF5Path({ nodeId, path }))\n  }\n\n  if (node.isDir) {\n    // Directory\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={node.name}\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode node={childNode} key={i} nodeId={nodeId} />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    // File\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={node.name + `   (shape=${node.shape}, nbytes=${node.nbytes})`}\n        onClick={() => onClickFile(node.path)}\n      />\n    )\n  }\n})\n\nfunction useHDF5Tree(\n  nodeId: string,\n): [HDF5TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectHDF5Nodes())\n  const isLoading = useSelector(selectHDF5IsLoading())\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  React.useEffect(() => {\n    if (!isLoading && filePath) {\n      dispatch(getHDF5Tree({ path: filePath }))\n    }\n  }, [isLoading, filePath, dispatch])\n  return [tree, isLoading]\n}\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const FluoFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <FluoFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst FluoFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n  const returnType = 'FluoData'\n  const fluoColor = useHandleColor(returnType)\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'fluo', returnType)}\n        style={{\n          ...sourceHandleStyle,\n          background: fluoColor,\n        }}\n      />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const BehaviorFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <BehaviorFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst BehaviorFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n    const onChangeFilePath = (path: string) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n    const theme = useTheme()\n    const returnType = 'BehaviorData'\n    const behaviorColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '230px',\n          background: selected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          onChangeFilePath={(path) => {\n            if (!Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.CSV}\n          filePath={filePath ?? ''}\n        />\n        {!!filePath && (\n          <ParamSettingDialog nodeId={nodeId} filePath={filePath} />\n        )}\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'behavior', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: behaviorColor,\n          }}\n        />\n      </div>\n    )\n  },\n)\n","import { ImageFileNode } from 'components/Workspace/FlowChart/FlowChartNode/ImageFileNode'\nimport { AlgorithmNode } from 'components/Workspace/FlowChart/FlowChartNode/AlgorithmNode'\nimport { CsvFileNode } from 'components/Workspace/FlowChart/FlowChartNode/CsvFileNode'\nimport { HDF5FileNode } from 'components/Workspace/FlowChart/FlowChartNode/HDF5FileNode'\nimport { FluoFileNode } from 'components/Workspace/FlowChart/FlowChartNode/FluoFileNode'\nimport { BehaviorFileNode } from 'components/Workspace/FlowChart/FlowChartNode/BehaviorFileNode'\n\nimport { CustomEdge } from 'components/Workspace/FlowChart/CustomEdge'\n\nexport const reactFlowNodeTypes = {\n  ImageFileNode,\n  CsvFileNode,\n  HDF5FileNode,\n  AlgorithmNode,\n  FluoFileNode,\n  BehaviorFileNode,\n} as const\n\nexport const reactFlowEdgeTypes = {\n  buttonedge: CustomEdge,\n} as const\n","import { useDispatch } from 'react-redux'\nimport {\n  EdgeProps,\n  getBezierPath,\n  getMarkerEnd,\n  getEdgeCenter,\n} from 'react-flow-renderer'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport 'style/flowbutton.css'\n\nconst foreignObjectSize = 40\n\nexport const CustomEdge: React.FC<EdgeProps> = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  arrowHeadType,\n  markerEndId,\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  })\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId)\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  })\n\n  const dispatch = useDispatch()\n\n  const onEdgeClick = () => {\n    dispatch(deleteFlowElementsById(id))\n  }\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <foreignObject\n        width={foreignObjectSize}\n        height={foreignObjectSize}\n        x={edgeCenterX - foreignObjectSize / 2}\n        y={edgeCenterY - foreignObjectSize / 2}\n        className=\"edgebutton-foreignobject\"\n      >\n        <button className=\"flowbutton\" onClick={onEdgeClick}>\n          ×\n        </button>\n      </foreignObject>\n    </>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectHeatMapColumns,\n  selectHeatMapData,\n  selectHeatMapDataError,\n  selectHeatMapDataIsFulfilled,\n  selectHeatMapDataIsInitialized,\n  selectHeatMapDataIsPending,\n  selectHeatMapIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHeatMapData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const HeatMapPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHeatMapDataIsPending(path))\n  const isInitialized = useSelector(selectHeatMapDataIsInitialized(path))\n  const error = useSelector(selectHeatMapDataError(path))\n  const isFulfilled = useSelector(selectHeatMapDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHeatMapData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HeatMapImple />\n  } else {\n    return null\n  }\n})\n\nconst HeatMapImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const heatMapData = useSelector(selectHeatMapData(path), heatMapDataEqualtyFn)\n  const columns = useSelector(selectHeatMapColumns(path))\n  const index = useSelector(selectHeatMapIndex(path))\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const colorscale = useSelector(selectHeatMapItemColors(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      heatMapData != null\n        ? [\n            {\n              z: heatMapData,\n              x: columns,\n              y: index,\n              type: 'heatmap',\n              name: 'heatmap',\n              colorscale: colorscale.map((value) => {\n                let offset: number = parseFloat(value.offset)\n                const offsets: number[] = colorscale.map((v) => {\n                  return parseFloat(v.offset)\n                })\n                // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n                if (offset === Math.max(...offsets)) {\n                  offset = 1.0\n                }\n                if (offset === Math.min(...offsets)) {\n                  offset = 0.0\n                }\n                return [offset, value.rgb]\n              }),\n              hoverongaps: false,\n              showlegend: true,\n              showscale: showscale,\n            },\n          ]\n        : [],\n    [heatMapData, showscale, colorscale, columns, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction heatMapDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, {\n  useCallback,\n  useEffect,\n  useState,\n  MouseEvent,\n  useRef,\n} from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {RootState} from 'store/store'\nimport {Datum, LayoutAxis, PlotData, PlotMouseEvent, PlotSelectionEvent} from 'plotly.js'\nimport createColormap from 'colormap'\nimport { Button, LinearProgress, TextField, Typography } from '@mui/material'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport Slider from '@mui/material/Slider'\nimport Box from '@mui/material/Box'\nimport { styled } from '@mui/material/styles'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport { DisplayDataContext } from '../DataContext'\n\nimport {\n  selectImageDataError,\n  selectImageDataIsInitialized,\n  selectImageDataIsPending,\n  selectImageDataIsFulfilled,\n  selectActiveImageData,\n  selectRoiData,\n  selectImageDataMaxSize,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getImageData,\n  getRoiData,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowLine,\n  selectImageItemShowGrid,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemActiveIndex,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectRoiItemFilePath,\n  selectRoiItemIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemDuration,\n  selectVisualizeItemWidth,\n  selectVisualizeItemHeight,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n  selectImageItemAlpha,\n  selectRoiItemOutputKeys,\n  selectVisualizeItems,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  incrementImageActiveIndex,\n  resetAllOrderList,\n  setImageActiveIndex,\n  setImageItemDuration,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  selectingImageArea,\n  setImageItemClikedDataId,\n} from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { addRoiApi, deleteRoiApi, mergeRoiApi } from 'api/outputs/Outputs'\nimport { isTimeSeriesItem } from 'store/slice/VisualizeItem/VisualizeItemUtils'\n\ninterface PointClick {\n  x: number\n  y: number\n  z: number\n}\n\nconst WIDTH_CHARTJS = 321\nconst INIT_WIDTH_ROI = 30\n\nconst initSizeDrag = {\n  width: INIT_WIDTH_ROI,\n  height: INIT_WIDTH_ROI,\n  left: Math.floor((WIDTH_CHARTJS - INIT_WIDTH_ROI) / 2),\n  top: Math.floor((WIDTH_CHARTJS - INIT_WIDTH_ROI) / 2),\n}\n\nenum PositionDrag {\n  'LEFT' = 'LEFT',\n  'RIGHT' = 'RIGHT',\n  'BOTTOM' = 'BOTTOM',\n  'TOP' = 'TOP',\n}\n\nconst sChart = 320\n\nexport const ImagePlot = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const isPending = useSelector(selectImageDataIsPending(path))\n  const isInitialized = useSelector(selectImageDataIsInitialized(path))\n  const isFulfilled = useSelector(selectImageDataIsFulfilled(path))\n  const error = useSelector(selectImageDataError(path))\n\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(\n        getImageData({\n          path,\n          startIndex: startIndex ?? 1,\n          endIndex: endIndex ?? 10,\n        }),\n      )\n    }\n    if (roiFilePath != null) {\n      dispatch(getRoiData({ path: roiFilePath }))\n    }\n  }, [dispatch, isInitialized, path, startIndex, endIndex, roiFilePath])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ImagePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ImagePlotImple = React.memo(() => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const activeIndex = useSelector(selectImageItemActiveIndex(itemId))\n  return <ImagePlotChart activeIndex={activeIndex} />\n})\n\nconst ImagePlotChart = React.memo<{\n  activeIndex: number\n}>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(\n    selectActiveImageData(path, activeIndex),\n    imageDataEqualtyFn,\n  )\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const roiData = useSelector(\n    (state: RootState) =>\n      roiFilePath != null ? selectRoiData(roiFilePath)(state) : [],\n    imageDataEqualtyFn,\n  )\n\n  const [isAddRoi, setIsAddRoi] = useState(false)\n  const [loadingApi, setLoadingApi] = useState(false)\n\n  const [roiDataState, setRoiDataState] = useState(roiData)\n\n  const [pointClick, setPointClick] = useState<PointClick[]>([])\n\n  const itemsVisual = useSelector(selectVisualizeItems)\n\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const colorscale = useSelector(selectImageItemColors(itemId))\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const timeDataMaxIndex = useSelector(selectRoiItemIndex(itemId, roiFilePath))\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const [sizeDrag, setSizeDrag] = useState(initSizeDrag)\n\n  const [startDragAddRoi, setStartDragAddRoi] = useState(false)\n  const [positionDrag, setChangeSize] = useState<PositionDrag | undefined>()\n\n  const outputKey: string | null = useSelector(selectRoiItemOutputKeys(itemId))\n\n  const refPageXSize = useRef(0)\n  const refPageYSize = useRef(0)\n\n  const colorscaleRoi = createColormap({\n    colormap: 'jet',\n    nshades: 100, //timeDataMaxIndex >= 6 ? timeDataMaxIndex : 6,\n    format: 'rgba',\n    alpha: 1.0,\n  })\n\n  useEffect(() => {\n    setRoiDataState(roiData)\n  }, [roiData])\n\n  useEffect(() => {\n    onCancel()\n    onCancelAdd()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [outputKey, roiFilePath])\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'images',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          const rgb = value.rgb\n            .replace(/[^0-9,]/g, '')\n            .split(',')\n            .map((x) => Number(x))\n          const hex = rgba2hex(rgb, alpha)\n          return [offset, hex]\n        }),\n        // hoverinfo: isAddRoi || pointClick.length ? 'none' : undefined,\n        hoverongaps: false,\n        showscale: showscale,\n        zsmooth: zsmooth, // ['best', 'fast', false]\n      },\n      {\n        z: roiDataState,\n        type: 'heatmap',\n        name: 'roi',\n        hovertemplate: isAddRoi ? 'none' : 'cell id: %{z}',\n        // hoverinfo: isAddRoi || pointClick.length ? 'none' : undefined,\n        colorscale: [...Array(timeDataMaxIndex)].map((_, i) => {\n          const new_i = Math.floor(((i % 10) * 10 + i / 10) % 100)\n          const offset: number = i / (timeDataMaxIndex - 1)\n          const rgba = colorscaleRoi[new_i]\n          const hex = rgba2hex(rgba, roiAlpha)\n          return [offset, hex]\n        }),\n        zmin: 0,\n        zmax: timeDataMaxIndex,\n        hoverongaps: false,\n        zsmooth: false,\n        showscale: false,\n      },\n    ],\n    [\n      imageData,\n      roiDataState,\n      zsmooth,\n      showscale,\n      colorscale,\n      colorscaleRoi,\n      timeDataMaxIndex,\n      roiAlpha,\n      alpha,\n      isAddRoi,\n    ],\n  )\n\n  const [selectMode, setSelectMode] = React.useState(false)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectMode(event.target.checked)\n  }\n  // debounceでイベントを間引きする。onSelectedはそれっぽい名前だが動かなかった。\n  const onSelecting = debounce((event: PlotSelectionEvent) => {\n    if (event.range != null) {\n      dispatch(selectingImageArea({ itemId, range: event.range }))\n    }\n  })\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 130,\n      margin: {\n        t: 30, // top\n        l: 100, // left\n        b: 20, // bottom\n      },\n      dragmode: selectMode ? 'select' : 'pan',\n      xaxis: {\n        autorange: true,\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n        showticklabels: showticklabels,\n      },\n      yaxis: {\n        automargin: true,\n        autorange: 'reversed',\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n        showticklabels: showticklabels, // todo\n      },\n    }),\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n    [showgrid, showline, showticklabels, width, height, selectMode, isAddRoi],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n      // scale: number;\n      // format: 'png' | 'svg' | 'jpeg' | 'webp';\n      // height: number;\n      // width: number;\n    },\n  }\n\n  const onChartClick = (event: PlotMouseEvent) => {\n    const point: PlotDatum = event.points[0] as PlotDatum\n    if (point.curveNumber >= 1 && outputKey === 'cell_roi') {\n      setSelectRoi({\n        x: Number(point.x),\n        y: Number(point.y),\n        z: Number(point.z),\n      })\n    }\n    if (point.curveNumber >= 1 && point.z > 0) {\n      dispatch(\n        setImageItemClikedDataId({\n          itemId,\n          clickedDataId: point.z.toString(),\n        }),\n      )\n    }\n  }\n\n  const setSelectRoi = (point: PointClick) => {\n    if (!point.z) return\n    const newPoints = [...pointClick, point]\n    const newRoi = roiDataState.map((roi) => {\n      return roi.map((element) => {\n        if (newPoints.some((p) => p.z === element)) {\n          return 0\n        }\n        return element\n      })\n    })\n    setPointClick([...pointClick, point])\n    setRoiDataState(newRoi)\n  }\n\n  const onCancel = () => {\n    setPointClick([])\n    setRoiDataState(roiData)\n  }\n\n  const addRoi = () => {\n    setIsAddRoi(true)\n  }\n\n  const onCancelAdd = () => {\n    setIsAddRoi(false)\n    setSizeDrag(initSizeDrag)\n    setChangeSize(undefined)\n  }\n\n  const onMouseDownDragAddRoi = () => {\n    setStartDragAddRoi(true)\n  }\n\n  const onMouseUpDragAddRoi = () => {\n    setStartDragAddRoi(false)\n    setChangeSize(undefined)\n  }\n\n  const onMouseDownSize = (position: PositionDrag, event: MouseEvent) => {\n    setChangeSize(position)\n    refPageXSize.current = event.pageX\n    refPageYSize.current = event.pageY\n  }\n\n  const onMouseMoveAddRoi = (event: MouseEvent<HTMLDivElement>) => {\n    const { pageX, pageY } = event\n    let newSizeDrag\n    if (startDragAddRoi) {\n      const { y } = event.currentTarget.getBoundingClientRect()\n      let newX = sizeDrag.left + (pageX - refPageXSize.current)\n      let newY = Math.ceil(pageY - y - 15) - window.scrollY\n\n      if (newX < 0) newX = 0\n      else if (newX + sizeDrag.width > sChart) newX = sChart - sizeDrag.width\n      if (newY < 0) newY = 0\n      else if (newY + sizeDrag.height > sChart) newY = sChart - sizeDrag.height\n      newSizeDrag = { ...sizeDrag, left: newX, top: newY }\n    } else if (positionDrag === PositionDrag.LEFT) {\n      const newWidth = sizeDrag.width - (pageX - refPageXSize.current)\n      const newLeft = sizeDrag.left + (pageX - refPageXSize.current)\n      if (newWidth < 10 || newLeft < 1) return\n      newSizeDrag = { ...sizeDrag, width: newWidth, left: newLeft }\n    } else if (positionDrag === PositionDrag.RIGHT) {\n      const newWidth = sizeDrag.width + (pageX - refPageXSize.current)\n      if (newWidth < 10 || newWidth > sChart - sizeDrag.left) return\n      newSizeDrag = { ...sizeDrag, width: newWidth }\n    } else if (positionDrag === PositionDrag.BOTTOM) {\n      const newHeight = sizeDrag.height + (pageY - refPageYSize.current)\n      if (newHeight < 10 || newHeight > sChart - sizeDrag.top) return\n      newSizeDrag = { ...sizeDrag, height: newHeight }\n    } else if (positionDrag === PositionDrag.TOP) {\n      const newHeight = sizeDrag.height - (pageY - refPageYSize.current)\n      const newTop = sizeDrag.top + (pageY - refPageYSize.current)\n      if (newHeight < 10 || newTop < 1) return\n      newSizeDrag = { ...sizeDrag, height: newHeight, top: newTop }\n    }\n    if (newSizeDrag) setSizeDrag({ ...sizeDrag, ...newSizeDrag })\n    refPageXSize.current = pageX\n    refPageYSize.current = pageY\n  }\n\n  const addRoiSubmit = async () => {\n    if (!roiFilePath || loadingApi) return\n    setLoadingApi(true)\n    const sizeX = roiDataState[0].length - 1\n    const sizeY = roiDataState.length - 1\n    const xAdd = Number(((sizeDrag.width + 2) / (sChart / sizeX)).toFixed(1))\n    const yAdd = Number(((sizeDrag.height + 2) / (sChart / sizeY)).toFixed(1))\n    const x = Number((sizeDrag.left / (sChart / sizeX)).toFixed(1))\n    const y = Number((sizeDrag.top / (sChart / sizeY)).toFixed(1))\n\n    const pointCenter = {\n      posx: x + Math.floor(xAdd / 2),\n      posy: y + Math.floor(yAdd / 2),\n      sizex: xAdd,\n      sizey: yAdd,\n    }\n    dispatch(resetAllOrderList())\n    try {\n      await addRoiApi(roiFilePath, pointCenter)\n    } catch {}\n    setLoadingApi(false)\n    onCancelAdd()\n    dispatch(getRoiData({ path: roiFilePath }))\n    resetTimeSeries()\n  }\n\n  const onMergeRoi = async () => {\n    if (!roiFilePath || loadingApi) return\n    setLoadingApi(true)\n    dispatch(resetAllOrderList())\n    try {\n      await mergeRoiApi(roiFilePath, {\n        ids: pointClick.map((point) => point.z - 1),\n      })\n    } catch {}\n    setLoadingApi(false)\n    onCancel()\n    dispatch(getRoiData({ path: roiFilePath }))\n    resetTimeSeries()\n  }\n\n  const onDeleteRoi = async () => {\n    if (!roiFilePath || loadingApi) return\n    setLoadingApi(true)\n    dispatch(resetAllOrderList())\n    try {\n      await deleteRoiApi(roiFilePath, {\n        ids: pointClick.map((point) => point.z - 1),\n      })\n    } catch {}\n    setLoadingApi(false)\n    onCancel()\n    dispatch(getRoiData({ path: roiFilePath }))\n    resetTimeSeries()\n  }\n\n  const resetTimeSeries = () => {\n    if (itemsVisual) {\n      Object.keys(itemsVisual).forEach((item) => {\n        if (isTimeSeriesItem(itemsVisual[item])) {\n          dispatch(\n            getTimeSeriesInitData({\n              path: itemsVisual[item].filePath as string,\n              itemId: Number(item),\n            }),\n          )\n        }\n      })\n    }\n  }\n\n  const renderActionRoi = () => {\n    if (!roiDataState?.length || outputKey !== 'cell_roi') return null\n    if (!isAddRoi) {\n      return <LinkDiv onClick={addRoi}>Add ROI</LinkDiv>\n    }\n    return (\n      <BoxDiv>\n        <LinkDiv\n          style={{\n            opacity: loadingApi ? 0.5 : 1,\n            cursor: loadingApi ? 'progress' : 'pointer',\n          }}\n          onClick={addRoiSubmit}\n        >\n          OK\n        </LinkDiv>\n        <LinkDiv\n          style={{\n            opacity: loadingApi ? 0.5 : 1,\n            cursor: loadingApi ? 'progress' : 'pointer',\n          }}\n          onClick={onCancelAdd}\n        >\n          Cancel\n        </LinkDiv>\n      </BoxDiv>\n    )\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, mt: 1 }}>\n          <PlayBack activeIndex={activeIndex} />\n        </Box>\n        <FormControlLabel\n          sx={{ ml: 1 }}\n          control={<Switch checked={selectMode} onChange={handleChange} />}\n          label=\"drag select\"\n        />\n      </Box>\n      <Box sx={{ minHeight: 5.5 }}>\n        {pointClick.length ? (\n          <>\n            <BoxDiv>\n              <span>ROI Selecteds: [{String(pointClick.map((e) => e.z))}]</span>\n            </BoxDiv>\n            <BoxDiv>\n              {pointClick.length >= 2 ? (\n                <LinkDiv\n                  sx={{ ml: 0, opacity: loadingApi ? 0.5 : 1 }}\n                  onClick={onMergeRoi}\n                >\n                  Merge ROI\n                </LinkDiv>\n              ) : null}\n              <LinkDiv\n                sx={{ color: '#F84E1B', opacity: loadingApi ? 0.5 : 1 }}\n                onClick={onDeleteRoi}\n              >\n                Delete ROI\n              </LinkDiv>\n              <LinkDiv\n                sx={{ opacity: loadingApi ? 0.5 : 1 }}\n                onClick={onCancel}\n              >\n                Cancel\n              </LinkDiv>\n            </BoxDiv>\n          </>\n        ) : (\n          renderActionRoi()\n        )}\n      </Box>\n      <div style={{ position: 'relative' }}>\n        <PlotlyChart\n          data={data}\n          layout={layout}\n          config={config}\n          onClick={onChartClick}\n          onSelecting={onSelecting}\n        />\n        {isAddRoi ? (\n          <DivAddRoi>\n            <DivSvg\n              onMouseLeave={onMouseUpDragAddRoi}\n              onMouseMove={onMouseMoveAddRoi}\n              onMouseUp={onMouseUpDragAddRoi}\n            >\n              <DivDrag style={sizeDrag}>\n                <DragCenter\n                  onMouseDown={onMouseDownDragAddRoi}\n                  style={{\n                    width: sizeDrag.width - 1,\n                    height: sizeDrag.height - 1,\n                    cursor: !startDragAddRoi ? 'grab' : 'grabbing',\n                  }}\n                />\n                <DragSizeLeft\n                  onMouseDown={(event) =>\n                    onMouseDownSize(PositionDrag.LEFT, event)\n                  }\n                />\n                <DragSizeRight\n                  onMouseDown={(event) => {\n                    onMouseDownSize(PositionDrag.RIGHT, event)\n                  }}\n                />\n                <DragSizeTop\n                  onMouseDown={(event) => {\n                    onMouseDownSize(PositionDrag.TOP, event)\n                  }}\n                />\n                <DragSizeBottom\n                  onMouseDown={(event) => {\n                    onMouseDownSize(PositionDrag.BOTTOM, event)\n                  }}\n                />\n              </DivDrag>\n            </DivSvg>\n          </DivAddRoi>\n        ) : null}\n      </div>\n    </div>\n  )\n})\n\nconst PlayBack = React.memo<{ activeIndex: number }>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const maxSize = useSelector(selectImageDataMaxSize(path))\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const duration = useSelector(selectImageItemDuration(itemId))\n\n  const onSliderChange = (\n    event: Event,\n    value: number | number[],\n    activeThumb: number,\n  ) => {\n    if (typeof value === 'number') {\n      const newIndex = value - startIndex\n      if (newIndex >= 0 && newIndex !== activeIndex) {\n        dispatch(setImageActiveIndex({ itemId, activeIndex: newIndex }))\n      }\n    }\n  }\n\n  const intervalRef = React.useRef<null | NodeJS.Timeout>(null)\n\n  useEffect(() => {\n    if (intervalRef.current !== null) {\n      if (activeIndex >= maxSize) {\n        clearInterval(intervalRef.current)\n        intervalRef.current = null\n      }\n    }\n  }, [activeIndex, maxSize])\n\n  const onPlayClick = useCallback(() => {\n    if (activeIndex >= maxSize) {\n      dispatch(setImageActiveIndex({ itemId, activeIndex: 0 }))\n    }\n    if (maxSize > 1 && intervalRef.current === null) {\n      intervalRef.current = setInterval(() => {\n        dispatch(incrementImageActiveIndex({ itemId }))\n      }, duration)\n    }\n  }, [activeIndex, maxSize, dispatch, duration, itemId])\n\n  const onPauseClick = () => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current)\n      intervalRef.current = null\n    }\n  }\n\n  const onDurationChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue =\n        event.target.value === '' ? '' : Number(event.target.value)\n      if (typeof newValue === 'number') {\n        dispatch(setImageItemDuration({ itemId, duration: newValue }))\n      }\n    },\n    [dispatch, itemId],\n  )\n  return (\n    <>\n      <Button sx={{ mt: 1.5 }} variant=\"outlined\" onClick={onPlayClick}>\n        Play\n      </Button>\n      <Button sx={{ mt: 1.5, ml: 1 }} variant=\"outlined\" onClick={onPauseClick}>\n        Pause\n      </Button>\n      <TextField\n        sx={{ width: 100, ml: 2 }}\n        label=\"Duration [msec]\"\n        type=\"number\"\n        inputProps={{\n          step: 100,\n          min: 0,\n          max: 1000,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onDurationChange}\n        value={duration}\n      />\n      <Slider\n        aria-label=\"Custom marks\"\n        defaultValue={20}\n        value={startIndex + activeIndex}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        marks\n        min={startIndex}\n        max={maxSize === 0 ? 0 : endIndex}\n        onChange={onSliderChange}\n      />\n    </>\n  )\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\ninterface PlotDatum {\n  curveNumber: number\n  data: PlotData\n  customdata: Datum\n  pointIndex: number\n  pointNumber: number\n  x: Datum\n  xaxis: LayoutAxis\n  y: Datum\n  yaxis: LayoutAxis\n  z: number\n}\n\nfunction rgba2hex(rgba: number[], alpha: number) {\n  const r = rgba[0]\n  const g = rgba[1]\n  const b = rgba[2]\n  const a = alpha\n\n  var outParts = [\n    r.toString(16),\n    g.toString(16),\n    b.toString(16),\n    Math.round(a * 255)\n      .toString(16)\n      .substring(0, 2),\n  ]\n\n  // Pad single-digit output values\n  outParts.forEach(function (part, i) {\n    if (part.length === 1) {\n      outParts[i] = '0' + part\n    }\n  })\n\n  return `#${outParts.join('')}`\n}\n\nfunction debounce<T extends (...args: any[]) => unknown>(\n  callback: T,\n  delay = 500,\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout\n  return (...args) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => callback(...args), delay)\n  }\n}\n\nconst BoxDiv = styled('div')({\n  mt: 1,\n  display: 'flex',\n  alignItems: 'center',\n  listStyle: 'none',\n  padding: 0,\n  margin: 0,\n})\n\nconst LinkDiv = styled('div')({\n  marginLeft: 16,\n  textDecoration: 'underline',\n  cursor: 'pointer',\n  color: '#1155cc',\n  zIndex: 999,\n  position: 'relative',\n})\n\nconst DivAddRoi = styled('div')({\n  width: '100%',\n  height: '100%',\n  position: 'absolute',\n  left: 0,\n  top: 0,\n  borderRadius: 100,\n})\n\nconst DivSvg = styled('div')({\n  width: 321,\n  height: 321,\n  marginTop: 30,\n  marginLeft: 99,\n  position: 'relative',\n})\n\nconst DivDrag = styled('div')({\n  border: '1px solid #ffffff',\n  position: 'absolute',\n  borderRadius: 100,\n})\n\nconst DragCenter = styled('div')({\n  borderRadius: 100,\n  cursor: 'grab',\n})\n\nconst DragSize = styled('div')({\n  width: 3,\n  height: 3,\n  borderRadius: 100,\n  position: 'absolute',\n  background: '#fff',\n})\n\nconst DragSizeLeft = styled(DragSize)({\n  top: `calc(50% - 1px)`,\n  left: -2,\n  cursor: 'ew-resize',\n})\n\nconst DragSizeRight = styled(DragSize)({\n  top: `calc(50% - 1px)`,\n  right: -2,\n  cursor: 'ew-resize',\n})\n\nconst DragSizeTop = styled(DragSize)({\n  top: -2,\n  right: `calc(50% - 1px)`,\n  cursor: 'ns-resize',\n})\n\nconst DragSizeBottom = styled(DragSize)({\n  bottom: -2,\n  right: `calc(50% - 1px)`,\n  cursor: 'ns-resize',\n})\n","import React from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectRoiData,\n  selectRoiDataError,\n  selectRoiDataIsFulfilled,\n  selectRoiDataIsInitialized,\n  selectRoiDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { getRoiData } from 'store/slice/DisplayData/DisplayDataActions'\nimport createColormap from 'colormap'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const RoiPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isPending = useSelector(selectRoiDataIsPending(path))\n  const isInitialized = useSelector(selectRoiDataIsInitialized(path))\n  const isFulfilled = useSelector(selectRoiDataIsFulfilled(path))\n  const error = useSelector(selectRoiDataError(path))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getRoiData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <RoiPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst RoiPlotImple = React.memo<{}>(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(selectRoiData(path), imageDataEqualtyFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscale: ColorType[] = createColormap({\n    colormap: 'jet',\n    nshades: 10,\n    format: 'hex',\n    alpha: 1,\n  }).map((v, idx) => {\n    return { rgb: v, offset: String(idx / 9) }\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'roi',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          return [offset, value.rgb]\n        }),\n        hoverongaps: false,\n        // zsmooth: zsmooth, // ['best', 'fast', false]\n        zsmooth: false,\n        showlegend: true,\n      },\n    ],\n    [imageData, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      xaxis: {\n        autorange: true,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n      },\n      yaxis: {\n        autorange: 'reversed',\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n      },\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectScatterData,\n  selectScatterDataError,\n  selectScatterDataIsFulfilled,\n  selectScatterDataIsInitialized,\n  selectScatterDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getScatterData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { ScatterData } from 'api/outputs/Outputs'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const ScatterPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectScatterDataIsPending(path))\n  const isInitialized = useSelector(selectScatterDataIsInitialized(path))\n  const error = useSelector(selectScatterDataError(path))\n  const isFulfilled = useSelector(selectScatterDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getScatterData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ScatterPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ScatterPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const scatterData = useSelector(\n    selectScatterData(path),\n    scatterDataEqualityFn,\n  )\n\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: scatterData[xIndex],\n        y: scatterData[yIndex],\n        type: 'scatter',\n        mode: 'markers', //'markers+text',\n        text: Object.keys(scatterData[xIndex]),\n        textposition: 'top center',\n        textfont: {\n          family: 'Raleway, sans-serif',\n        },\n        marker: {\n          size: 5,\n          color: Object.keys(scatterData[xIndex]),\n        },\n      },\n    ],\n    [scatterData, xIndex, yIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      xaxis: {\n        title: {\n          text: `x: ${xIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: `y: ${yIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n    }),\n    [xIndex, yIndex, width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <XIndex dataKeys={Object.keys(scatterData)} />\n          <YIndex dataKeys={Object.keys(scatterData)} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst XIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemXIndex({\n        itemId,\n        xIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>xIndex</InputLabel>\n      <Select label=\"smooth\" value={xIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst YIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemYIndex({\n        itemId,\n        yIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>yIndex</InputLabel>\n      <Select label=\"smooth\" value={yIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction scatterDataEqualityFn(\n  a: ScatterData | undefined,\n  b: ScatterData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LegendClickEvent } from 'plotly.js'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectTimeSeriesData,\n  selectTimeSeriesDataError,\n  selectTimeSeriesDataIsFulfilled,\n  selectTimeSeriesDataIsInitialized,\n  selectTimeSeriesDataIsPending,\n  selectTimeSeriesStd,\n  selectTimeSeriesXrange,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getTimeSeriesDataById,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { TimeSeriesData } from 'api/outputs/Outputs'\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectTimeSeriesItemKeys,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport createColormap from 'colormap'\nimport { setTimeSeriesItemDrawOrderList } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const TimeSeriesPlot = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectTimeSeriesDataIsPending(path))\n  const isInitialized = useSelector(selectTimeSeriesDataIsInitialized(path))\n  const error = useSelector(selectTimeSeriesDataError(path))\n  const isFulfilled = useSelector(selectTimeSeriesDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getTimeSeriesInitData({ path, itemId }))\n    }\n  }, [dispatch, isInitialized, path, itemId])\n\n  if (!isInitialized) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isPending || isFulfilled) {\n    return <TimeSeriesPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst TimeSeriesPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  // 0番のデータとkeysだけをとってくる\n  const dispatch = useDispatch()\n  const timeSeriesData = useSelector(\n    selectTimeSeriesData(path),\n    timeSeriesDataEqualityFn,\n  )\n\n  const dataXrange = useSelector(selectTimeSeriesXrange(path))\n  const dataStd = useSelector(selectTimeSeriesStd(path))\n\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n  const drawOrderList = useSelector(selectTimeSeriesItemDrawOrderList(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const dataKeys = useSelector(selectTimeSeriesItemKeys(itemId))\n\n  const colorScale = createColormap({\n    colormap: 'jet',\n    nshades: 100, //maxIndex >= 6 ? maxIndex : 6,\n    format: 'hex',\n    alpha: 1,\n  })\n\n  const data = React.useMemo(() => {\n    return Object.fromEntries(\n      dataKeys.map((key) => {\n        let y = dataXrange.map((x) => timeSeriesData[key][x])\n        const i = Number(key) - 1\n        const new_i = Math.floor((i % 10) * 10 + i / 10) % 100\n        if (drawOrderList.includes(key) && offset) {\n          const activeIdx: number = drawOrderList.findIndex((v) => v === key)\n          const mean: number = y.reduce((a, b) => a + b) / y.length\n          const std: number =\n            span *\n            Math.sqrt(y.reduce((a, b) => a + Math.pow(b - mean, 2)) / y.length)\n          y = y.map((value) => (value - mean) / (std + 1e-10) + activeIdx)\n        }\n\n        return [\n          key,\n          {\n            name: key,\n            x: dataXrange,\n            y: y,\n            visible: drawOrderList.includes(key) ? true : 'legendonly',\n            line: { color: colorScale[new_i] },\n            error_y: {\n              type: 'data',\n              array:\n                !offset && Object.keys(dataStd).includes(key)\n                  ? Object.values(dataStd[key])\n                  : null,\n              visible: true,\n            },\n          },\n        ]\n      }),\n    )\n  }, [\n    timeSeriesData,\n    drawOrderList,\n    offset,\n    span,\n    colorScale,\n    dataStd,\n    dataXrange,\n    dataKeys,\n  ])\n\n  const annotations = React.useMemo(() => {\n    return drawOrderList.map((value) => {\n      return {\n        x: Number(dataXrange[dataXrange.length - 1]) + dataXrange.length / 10,\n        y: data[value].y[dataXrange.length - 1],\n        xref: 'x',\n        yref: 'y',\n        text: `cell: ${value}`,\n        arrowhead: 1,\n        ax: 0,\n        ay: -10,\n      }\n    })\n  }, [data, drawOrderList, dataXrange])\n\n  const layout = React.useMemo(\n    () => ({\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      width: width,\n      height: height - 50,\n      xaxis: {\n        range: [xrange.left, xrange.right],\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      yaxis: {\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      annotations: annotations,\n    }),\n    [\n      xrange,\n      showgrid,\n      showline,\n      showticklabels,\n      zeroline,\n      annotations,\n      width,\n      height,\n    ],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  const onLegendClick = (event: LegendClickEvent) => {\n    const clickNumber = dataKeys[event.curveNumber]\n\n    const newDrawOrderList = drawOrderList.includes(clickNumber)\n      ? drawOrderList.filter((value) => value !== clickNumber)\n      : [...drawOrderList, clickNumber]\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    // set DisplayNumbers\n    if (!drawOrderList.includes(clickNumber)) {\n      dispatch(getTimeSeriesDataById({ path, index: clickNumber }))\n    }\n\n    return false\n  }\n\n  return (\n    <PlotlyChart\n      data={Object.values(data)}\n      layout={layout}\n      config={config}\n      onLegendClick={onLegendClick}\n    />\n  )\n})\n\nfunction timeSeriesDataEqualityFn(\n  a: TimeSeriesData | undefined,\n  b: TimeSeriesData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.entries(a)\n    const bArray = Object.entries(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every(([aKey, aValue], i) => {\n          const [bKey, bValue] = bArray[i]\n          return bKey === aKey && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction nestEqualityFun(\n  a: {\n    [key: number]: number\n  },\n  b: {\n    [key: number]: number\n  },\n) {\n  const aArray = Object.entries(a)\n  const bArray = Object.entries(b)\n  return (\n    a === b ||\n    (aArray.length === bArray.length &&\n      aArray.every(([aKey, aValue], i) => {\n        const [bKey, bValue] = bArray[i]\n        return bKey === aKey && bValue === aValue\n      }))\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectBarData,\n  selectBarDataError,\n  selectBarDataIsFulfilled,\n  selectBarDataIsInitialized,\n  selectBarDataIsPending,\n  selectBarIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getBarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { BarData } from 'api/outputs/Outputs'\nimport {\n  selectBarItemIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setBarItemIndex } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const BarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectBarDataIsPending(path))\n  const isInitialized = useSelector(selectBarDataIsInitialized(path))\n  const error = useSelector(selectBarDataError(path))\n  const isFulfilled = useSelector(selectBarDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getBarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <BarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst BarPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const barData = useSelector(selectBarData(path), barDataEqualityFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const index = useSelector(selectBarItemIndex(itemId))\n  const dataKeys = useSelector(selectBarIndex(path))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: Object.keys(barData[index]),\n        y: Object.values(barData[index]),\n        type: 'bar',\n      },\n    ],\n    [barData, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <SelectIndex dataKeys={dataKeys} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst SelectIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const index = useSelector(selectBarItemIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setBarItemIndex({\n        itemId,\n        index: event.target.value,\n      }),\n    )\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>index</InputLabel>\n      <Select label=\"smooth\" value={`${index}`} onChange={handleChange}>\n        {dataKeys.map((v, i) => (\n          <MenuItem value={i}>{v}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction barDataEqualityFn(a: BarData | undefined, b: BarData | undefined) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHTMLData,\n  selectHTMLDataError,\n  selectHTMLDataIsFulfilled,\n  selectHTMLDataIsInitialized,\n  selectHTMLDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHTMLData } from 'store/slice/DisplayData/DisplayDataActions'\n\nexport const HTMLPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHTMLDataIsPending(path))\n  const isInitialized = useSelector(selectHTMLDataIsInitialized(path))\n  const error = useSelector(selectHTMLDataError(path))\n  const isFulfilled = useSelector(selectHTMLDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHTMLData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HTMLPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HTMLPlotImple = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const htmlData = useSelector(selectHTMLData(path))\n\n  return (\n    <div\n      dangerouslySetInnerHTML={{ __html: htmlData }}\n      style={{\n        overflow: 'scroll',\n        display: 'flex',\n        height: '90%',\n      }}\n    />\n  )\n})\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectVisualizeDataFilePath,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { DisplayDataContext } from './DataContext'\nimport { HeatMapPlot } from './Plot/HeatMapPlot'\nimport { ImagePlot } from './Plot/ImagePlot'\nimport { RoiPlot } from './Plot/RoiPlot'\nimport { ScatterPlot } from './Plot/ScatterPlot'\nimport { CsvPlot } from './Plot/CsvPlot'\nimport { TimeSeriesPlot } from './Plot/TimeSeriesPlot'\nimport { BarPlot } from './Plot/BarPlot'\nimport { HTMLPlot } from './Plot/HTMLPlot'\n\nexport const DisplayDataItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const nodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  if (filePath != null && dataType != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{ nodeId, filePath, dataType, itemId }}\n      >\n        <DisplayPlot dataType={dataType} />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n\nconst DisplayPlot = React.memo<{\n  dataType: DATA_TYPE\n}>(({ dataType }) => {\n  switch (dataType) {\n    case DATA_TYPE_SET.CSV:\n      return <CsvPlot />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesPlot />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatMapPlot />\n    case DATA_TYPE_SET.IMAGE:\n      return <ImagePlot />\n    case DATA_TYPE_SET.ROI:\n      return <RoiPlot />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterPlot />\n    case DATA_TYPE_SET.BAR:\n      return <BarPlot />\n    case DATA_TYPE_SET.HTML:\n      return <HTMLPlot />\n    default:\n      return null\n  }\n})\n","import { useDispatch, useSelector } from 'react-redux'\nimport Tabs, { tabsClasses } from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box'\nimport React from 'react'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { selectAlgorithmName } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectPipelineNodeResultOutputKeyList,\n  selectPipelineNodeResultOutputFileDataType,\n  selectPipelineNodeResultOutputFilePath,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { selectVisualizeItemIdForWorkflowDialog } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { DisplayDataItem } from 'components/Workspace/Visualize/DisplayDataItem'\n\nexport const AlgorithmOutputDialog = React.memo<{\n  open: boolean\n  onClose: () => void\n  nodeId: string\n}>(({ open, onClose, nodeId }) => {\n  const dispatch = useDispatch()\n  const closeFn = () => {\n    onClose()\n    dispatch(deleteAllItemForWorkflowDialog())\n  }\n  return (\n    <Dialog open={open} onClose={closeFn} fullWidth>\n      <TitleWithCloseButton onClose={closeFn} nodeId={nodeId} />\n      <DialogContent\n        dividers\n        sx={{\n          pt: 1,\n          px: 2,\n        }}\n      >\n        {open && <OutputViewer nodeId={nodeId} />}\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nconst TitleWithCloseButton = React.memo<{\n  onClose: () => void\n  nodeId: string\n}>(({ nodeId, onClose }) => {\n  const nodeName = useSelector(selectAlgorithmName(nodeId))\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }}>\n      Output of {nodeName}\n      <IconButton\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 10,\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </DialogTitle>\n  )\n})\n\nconst OutputViewer = React.memo<{ nodeId: string }>(({ nodeId }) => {\n  const outputKeyList = useSelector(\n    selectPipelineNodeResultOutputKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  const [selectedOutoutKey, setSelectedOutputKey] = React.useState(\n    outputKeyList[0],\n  )\n  return (\n    <>\n      <OutputSelectTabs\n        outputKeyList={outputKeyList}\n        selectedOutoutKey={selectedOutoutKey}\n        onSelectOutput={setSelectedOutputKey}\n      />\n      <DisplayDataView nodeId={nodeId} outputKey={selectedOutoutKey} />\n    </>\n  )\n})\n\nconst OutputSelectTabs = React.memo<{\n  selectedOutoutKey: string\n  outputKeyList: string[]\n  onSelectOutput: (selectedKey: string) => void\n}>(({ selectedOutoutKey, outputKeyList, onSelectOutput }) => {\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    onSelectOutput(newValue)\n  }\n  return (\n    <Tabs\n      value={selectedOutoutKey}\n      onChange={handleChange}\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n      sx={{\n        [`& .${tabsClasses.scrollButtons}`]: {\n          '&.Mui-disabled': { opacity: 0.3 },\n        },\n      }}\n    >\n      {outputKeyList.map((outputKey) => (\n        <Tab\n          value={outputKey}\n          label={outputKey}\n          sx={{\n            textTransform: 'none',\n          }}\n        />\n      ))}\n    </Tabs>\n  )\n})\n\nconst DisplayDataView = React.memo<{ nodeId: string; outputKey: string }>(\n  ({ nodeId, outputKey }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectPipelineNodeResultOutputFilePath(nodeId, outputKey),\n    )\n    const dataType = useSelector(\n      selectPipelineNodeResultOutputFileDataType(nodeId, outputKey),\n    )\n    const itemId = useSelector(\n      selectVisualizeItemIdForWorkflowDialog(nodeId, filePath, dataType),\n    )\n    React.useEffect(() => {\n      if (itemId === null) {\n        dispatch(addItemForWorkflowDialog({ nodeId, filePath, dataType }))\n      }\n    }, [dispatch, nodeId, filePath, dataType, itemId])\n    return (\n      <Box\n        sx={{\n          mx: 1,\n          my: 2,\n        }}\n      >\n        {itemId != null && <DisplayDataItem itemId={itemId} />}\n      </Box>\n    )\n  },\n)\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { RootState } from '../../store'\n\nexport const selectFilesTree =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) => {\n    if (state.filesTree[fileType] != null) {\n      return state.filesTree[fileType]\n    } else {\n      return undefined\n    }\n  }\n\nexport const selectFilesTreeNodes =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.tree\n\nexport const selectFilesIsLatest =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLatest ?? false\n\nexport const selectFilesIsLoading =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLoading ?? false\n","export const FILES_TREE_SLICE_NAME = 'filesTree'\n\nexport type TreeNodeType = DirNode | FileNode\n\nexport interface NodeBase {\n  path: string\n  name: string\n  isDir: boolean\n}\n\nexport interface DirNode extends NodeBase {\n  isDir: true\n  nodes: TreeNodeType[]\n}\n\nexport interface FileNode extends NodeBase {\n  isDir: false\n}\n\nexport interface FilesTree {\n  [fileType: string]: {\n    isLatest: boolean\n    isLoading: boolean\n    tree: TreeNodeType[]\n  }\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  FILE_TREE_TYPE,\n  getFilesTreeApi,\n  TreeNodeTypeDTO,\n} from 'api/files/Files'\n\nimport { FILES_TREE_SLICE_NAME } from './FilesTreeType'\n\nexport const getFilesTree = createAsyncThunk<TreeNodeTypeDTO[], FILE_TREE_TYPE>(\n  `${FILES_TREE_SLICE_NAME}/getFilesTree`,\n  async (fileType, thunkAPI) => {\n    try {\n      const response = await getFilesTreeApi(fileType)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { TreeNodeTypeDTO } from 'api/files/Files'\nimport { TreeNodeType } from './FilesTreeType'\n\nexport function convertToTreeNodeType(dto: TreeNodeTypeDTO[]): TreeNodeType[] {\n  return dto.map((node) =>\n    node.isdir\n      ? {\n          path: node.path,\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n        }\n      : {\n          path: node.path,\n          name: node.name,\n          isDir: false,\n        },\n  )\n}\n\nexport function isDirNodeByPath(path: string, tree: TreeNodeType[]): boolean {\n  const node = getNodeByPath(path, tree)\n  if (node != null) {\n    return node.isDir\n  } else {\n    throw new Error(`failed to get node: ${path}`)\n  }\n}\n\nexport function getNodeByPath(\n  path: string,\n  tree: TreeNodeType[],\n): TreeNodeType | null {\n  let targetNode: TreeNodeType | null = null\n  for (const node of tree) {\n    if (path === node.path) {\n      targetNode = node\n      break\n    } else {\n      if (node.isDir) {\n        targetNode = getNodeByPath(path, node.nodes)\n        if (targetNode != null) {\n          break\n        }\n      }\n    }\n  }\n  return targetNode\n}\n","import Dialog from '@mui/material/Dialog'\nimport { useDispatch, useSelector } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\nimport Checkbox, { CheckboxProps } from '@mui/material/Checkbox'\n\nimport Box from '@mui/material/Box'\nimport { useTheme } from '@mui/material/styles'\nimport React from 'react'\n\nimport {\n  selectFilesIsLatest,\n  selectFilesIsLoading,\n  selectFilesTreeNodes,\n} from 'store/slice/FilesTree/FilesTreeSelectors'\nimport { getFilesTree } from 'store/slice/FilesTree/FilesTreeAction'\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { TreeNodeType } from 'store/slice/FilesTree/FilesTreeType'\nimport {\n  getNodeByPath,\n  isDirNodeByPath,\n} from 'store/slice/FilesTree/FilesTreeUtils'\n\ntype FileSelectDialogProps = {\n  initialFilePath: string[] | string\n  onClickOk: (path: string[] | string) => void\n  fileType?: FILE_TREE_TYPE\n  title?: string\n  open: boolean\n  onClickCancel: () => void\n  multiSelect: boolean\n}\n\nexport const FileSelectDialog = React.memo<FileSelectDialogProps>(\n  function FileSelectDialog({\n    open,\n    initialFilePath,\n    onClickCancel,\n    onClickOk,\n    title,\n    fileType = FILE_TREE_TYPE_SET.ALL,\n    multiSelect,\n  }) {\n    React.useEffect(() => {\n      setSelectedFilePath(initialFilePath)\n    }, [initialFilePath])\n    const [selectedFilePath, setSelectedFilePath] =\n      React.useState(initialFilePath)\n    const onCancel = () => {\n      setSelectedFilePath(initialFilePath) // 選択内容を反映させない\n      onClickCancel()\n    }\n    const onOk = () => {\n      onClickOk(selectedFilePath)\n    }\n    const theme = useTheme()\n    return (\n      <Dialog open={open} fullWidth>\n        <DialogTitle>{title ?? 'Select File'}</DialogTitle>\n        <DialogContent dividers>\n          <div\n            style={{\n              height: 300,\n              overflow: 'auto',\n              marginBottom: theme.spacing(1),\n              border: '1px solid',\n              padding: theme.spacing(1),\n              borderColor: theme.palette.divider,\n            }}\n          >\n            <FileTreeView\n              setSelectedFilePath={setSelectedFilePath}\n              multiSelect={multiSelect}\n              fileType={fileType}\n              selectedFilePath={selectedFilePath}\n            />\n          </div>\n          <Typography variant=\"subtitle1\">Select File</Typography>\n          <FilePathSelectedListView path={selectedFilePath} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  },\n)\n\nconst FileTreeView = React.memo<{\n  setSelectedFilePath: (path: string[] | string) => void\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  fileType: FILE_TREE_TYPE\n}>(({ setSelectedFilePath, selectedFilePath, fileType, multiSelect }) => {\n  const [tree, isLoading] = useFileTree(fileType)\n  const onNodeSelectHandler = (\n    event: React.SyntheticEvent,\n    nodeIds: Array<string> | string,\n  ) => {\n    if (!multiSelect && tree != null) {\n      // multiSelectがfalseの場合、ディレクトリは選択しない\n      const path = nodeIds as string\n      if (!isDirNodeByPath(path, tree)) {\n        setSelectedFilePath(path)\n      }\n    }\n  }\n  // multiSelectでチェックボックスを使用する時用のハンドラ\n  const onCheckFile = (path: string) => {\n    if (Array.isArray(selectedFilePath)) {\n      if (selectedFilePath.includes(path)) {\n        setSelectedFilePath(\n          selectedFilePath.filter((selectedPath) => path !== selectedPath),\n        )\n      } else {\n        setSelectedFilePath(selectedFilePath.concat(path))\n      }\n    }\n  }\n  const onCheckDir = (path: string, checked: boolean) => {\n    if (tree != null && Array.isArray(selectedFilePath)) {\n      const node = getNodeByPath(path, tree)\n      if (node != null && node.isDir) {\n        const childrenFilePathList = node.nodes\n          .filter((node) => !node.isDir)\n          .map((node) => node.path)\n        if (checked) {\n          setSelectedFilePath(\n            // concat時の重複を削除\n            Array.from(new Set(selectedFilePath.concat(childrenFilePathList))),\n          )\n        } else {\n          setSelectedFilePath(\n            selectedFilePath.filter(\n              (selectedPath) => !childrenFilePathList.includes(selectedPath),\n            ),\n          )\n        }\n      }\n    }\n  }\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView\n        disableSelection={multiSelect}\n        multiSelect={multiSelect}\n        onNodeSelect={onNodeSelectHandler}\n      >\n        {tree?.map((node) => (\n          <TreeNode\n            node={node}\n            selectedFilePath={selectedFilePath}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: TreeNodeType\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  onCheckFile: (path: string) => void\n  onCheckDir: (path: string, checked: boolean) => void\n}>(({ node, selectedFilePath, multiSelect, onCheckDir, onCheckFile }) => {\n  if (node.isDir) {\n    const allChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => selectedFilePath.includes(filePath))\n    const allNotChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => !selectedFilePath.includes(filePath))\n    const indeterminate = !(allChecked || allNotChecked)\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={\n          multiSelect && node.nodes.filter((node) => !node.isDir).length > 0 ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                indeterminate,\n                checked: allChecked,\n                onClick: (e) => {\n                  e.stopPropagation() // on/offのクリックにつられてTreeを開閉させないようにする\n                },\n                onChange: (e) => onCheckDir(node.path, e.target.checked),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode\n            node={childNode}\n            selectedFilePath={selectedFilePath}\n            key={i}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={\n          multiSelect ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                checked:\n                  Array.isArray(selectedFilePath) &&\n                  selectedFilePath.includes(node.path),\n                onChange: () => onCheckFile(node.path),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n        onClick={() => onCheckFile(node.path)}\n      />\n    )\n  }\n})\n\nconst TreeItemLabel = React.memo<{\n  label: string\n  checkboxProps: CheckboxProps\n}>(({ label, checkboxProps }) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box flexGrow={1}>{label}</Box>\n      <Box>\n        <Checkbox\n          {...checkboxProps}\n          disableRipple\n          size=\"small\"\n          sx={{\n            marginRight: '4px',\n            padding: '2px',\n          }}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectedListView = React.memo<{ path: string | string[] }>(\n  ({ path }) => {\n    return (\n      <Typography variant=\"subtitle2\">\n        {!!path\n          ? Array.isArray(path)\n            ? path.map((text) => <li>{text}</li>)\n            : path\n          : '---'}\n      </Typography>\n    )\n  },\n)\n\nfunction useFileTree(\n  fileType: FILE_TREE_TYPE,\n): [TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectFilesTreeNodes(fileType))\n  const isLatest = useSelector(selectFilesIsLatest(fileType))\n  const isLoading = useSelector(selectFilesIsLoading(fileType))\n  React.useEffect(() => {\n    if (!isLatest && !isLoading) {\n      dispatch(getFilesTree(fileType))\n    }\n  }, [isLatest, isLoading, fileType, dispatch])\n  return [tree, isLoading]\n}\n","import React, { DragEvent, MouseEvent, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  Controls,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  OnLoadParams,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport { useDrop } from 'react-dnd'\n\nimport 'style/flow.css'\nimport {\n  deleteFlowElements,\n  editFlowElementPositionById,\n  setFlowElements,\n  setFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectFlowElements,\n  selectFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { ToolBar } from 'components/Workspace/ToolBar'\nimport {\n  reactFlowEdgeTypes,\n  reactFlowNodeTypes,\n} from './FlowChartNode/ReactFlowNodeTypesConst'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\nimport { AlgorithmOutputDialog } from './FlowChartNode/AlgorithmOutputDialog'\nimport {\n  DialogContext,\n  ErrorDialogValue,\n  OpenDialogValue,\n} from 'components/Workspace/FlowChart/DialogContext'\nimport { FileSelectDialog } from 'components/common/FileSelectDialog'\nimport { FormHelperText, Popover } from '@mui/material'\n\nconst initDialogFile = {\n  filePath: '',\n  open: false,\n  fileTreeType: undefined,\n  multiSelect: false,\n  onSelectFile: () => null,\n}\n\nexport const ReactFlowComponent = React.memo<UseRunPipelineReturnType>(\n  (props) => {\n    const flowElements = useSelector(selectFlowElements)\n    const dispatch = useDispatch()\n    const [dialogNodeId, setDialogNodeId] = useState('')\n    const [dialogFile, setDialogFile] =\n      useState<OpenDialogValue>(initDialogFile)\n    const [messageError, setMessageError] = useState<ErrorDialogValue>({\n      anchorElRef: { current: null },\n      message: '',\n    })\n\n    const onConnect = (params: Connection | Edge) => {\n      dispatch(\n        setFlowElements(\n          addEdge(\n            {\n              ...params,\n              animated: false,\n              style: { width: 5 },\n              type: 'buttonedge',\n            },\n            flowElements,\n          ),\n        ),\n      )\n    }\n\n    const onElementsRemove = (elementsToRemove: Elements) => {\n      dispatch(deleteFlowElements(elementsToRemove))\n    }\n\n    const onDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    const onNodeDragStop = (event: MouseEvent, node: Node) => {\n      dispatch(\n        editFlowElementPositionById({\n          nodeId: node.id,\n          coord: { x: node.position.x, y: node.position.y },\n        }),\n      )\n    }\n\n    const flowPosition = useSelector(selectFlowPosition)\n\n    const onMoveEnd = (event: FlowTransform | undefined) => {\n      if (event !== undefined) {\n        dispatch(setFlowPosition(event))\n      }\n    }\n\n    const [reactFlowInstance, setReactFlowInstance] =\n      React.useState<OnLoadParams>()\n\n    const onLoad = (reactFlowInstance: OnLoadParams) =>\n      setReactFlowInstance(reactFlowInstance)\n    const wrapparRef = React.useRef<HTMLDivElement>(null)\n    const [, drop] = useDrop<\n      TreeItemDragObject,\n      TreeItemDropResult,\n      TreeItemCollectedProps\n    >(\n      () => ({\n        accept: DND_ITEM_TYPE_SET.TREE_ITEM,\n        drop: (_, monitor) => {\n          let position: TreeItemDropResult['position'] = undefined\n          const monitorOffset = monitor.getClientOffset()\n          if (\n            wrapparRef.current != null &&\n            monitorOffset != null &&\n            reactFlowInstance != null\n          ) {\n            position = reactFlowInstance.project({\n              x: monitorOffset.x - wrapparRef.current.offsetLeft - 40,\n              y: monitorOffset.y - wrapparRef.current.offsetTop - 40,\n            })\n          }\n          return { position }\n        },\n      }),\n      [reactFlowInstance],\n    )\n    return (\n      <div className=\"flow\">\n        <DialogContext.Provider\n          value={{\n            onOpen: setDialogNodeId,\n            onOpenDialogFile: setDialogFile,\n            onMessageError: setMessageError,\n          }}\n        >\n          <ReactFlowProvider>\n            <div className=\"reactflow-wrapper\" ref={wrapparRef}>\n              <ReactFlow\n                ref={drop}\n                elements={flowElements}\n                onElementsRemove={onElementsRemove}\n                onConnect={onConnect}\n                onLoad={onLoad}\n                onDragOver={onDragOver}\n                onNodeDragStop={onNodeDragStop}\n                nodeTypes={reactFlowNodeTypes}\n                edgeTypes={reactFlowEdgeTypes}\n                defaultPosition={[flowPosition.x, flowPosition.y]}\n                defaultZoom={flowPosition.zoom}\n                onMoveEnd={onMoveEnd}\n              >\n                <ToolBar {...props} />\n                <Controls />\n              </ReactFlow>\n            </div>\n          </ReactFlowProvider>\n          {dialogNodeId && (\n            <AlgorithmOutputDialog\n              nodeId={dialogNodeId}\n              open\n              onClose={() => setDialogNodeId('')}\n            />\n          )}\n          {dialogFile.open && (\n            <FileSelectDialog\n              multiSelect={dialogFile.multiSelect}\n              initialFilePath={dialogFile.filePath}\n              open={dialogFile.open}\n              onClickOk={(path) => {\n                dialogFile.onSelectFile(path)\n                setDialogFile(initDialogFile)\n              }}\n              onClickCancel={() => {\n                setDialogFile(initDialogFile)\n              }}\n              fileType={dialogFile.fileTreeType}\n            />\n          )}\n          {messageError?.message && (\n            <Popover\n              open\n              anchorEl={messageError.anchorElRef.current}\n              onClose={() =>\n                setMessageError({\n                  anchorElRef: { current: null },\n                  message: '',\n                })\n              }\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              transformOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n            >\n              <div style={{ margin: 8 }}>\n                <FormHelperText error={true}>\n                  {messageError.message}\n                </FormHelperText>\n              </div>\n            </Popover>\n          )}\n        </DialogContext.Provider>\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nexport const selectRightDrawerIsOpen = (state: RootState) =>\n  state.rightDrawer.open\n\nexport const selectRightDrawerMode = (state: RootState) =>\n  state.rightDrawer.mode\n\nexport const selectRightDrawerCurrentNodeId = (state: RootState) =>\n  state.rightDrawer.currendNodeId\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const ALGORITHM_NODE_SLICE_NAME = 'algorithmNode'\n\nexport type AlgorithmNode = {\n  [nodeId: string]: AlgrithmNodeType\n}\n\ntype AlgrithmNodeType = {\n  functionPath: string\n  name: string\n  params: ParamMap | null\n  isUpdated: boolean\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getAlgoParamsApi } from 'api/params/Params'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { ALGORITHM_NODE_SLICE_NAME } from './AlgorithmNodeType'\n\nexport const getAlgoParams = createAsyncThunk<\n  ParamDTO,\n  { nodeId: string; algoName: string }\n>(\n  `${ALGORITHM_NODE_SLICE_NAME}/getAlgoParams`,\n  async ({ algoName }, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoParamsApi(algoName)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\n\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { getAlgoParams } from './AlgorithmNodeActions'\nimport { ALGORITHM_NODE_SLICE_NAME, AlgorithmNode } from './AlgorithmNodeType'\nimport { isAlgorithmNodePostData } from 'api/run/RunUtils'\nimport { run, runByCurrentUid } from '../Pipeline/PipelineActions'\nimport { addAlgorithmNode } from '../FlowElement/FlowElementActions'\n\nconst initialState: AlgorithmNode = {}\n\nexport const algorithmNodeSlice = createSlice({\n  name: ALGORITHM_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { nodeId, path, newValue } = action.payload\n      const param = state[nodeId].params\n      if (param != null) {\n        const target = getChildParam(path, param)\n        if (target != null) {\n          target.value = newValue\n          state[nodeId].isUpdated = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAlgoParams.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        state[nodeId].params = convertToParamMap(action.payload)\n      })\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        const { node, functionPath, name } = action.meta.arg\n        const params = action.payload\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          state[node.id] = {\n            functionPath,\n            name,\n            params: convertToParamMap(params),\n            isUpdated: false,\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: AlgorithmNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isAlgorithmNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              newState[node.id] = {\n                name: node.data.label,\n                functionPath: node.data.path,\n                params: node.data.param,\n                isUpdated: false,\n              }\n            }\n          })\n        return newState\n      })\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          Object.values(runPostData.nodeDict)\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              state[node.id].isUpdated = false\n            })\n        },\n      )\n  },\n})\n\nexport const { updateParam } = algorithmNodeSlice.actions\nexport default algorithmNodeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Typography from '@mui/material/Typography'\n\nimport {\n  selectAlgorithmName,\n  selectAlgorithmParamsExit,\n  selectAlgorithmParamsKeyList,\n  selectAlgorithmParamsValue,\n  selectAlgorithmParam,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { updateParam } from 'store/slice/AlgorithmNode/AlgorithmNodeSlice'\nimport { getAlgoParams } from 'store/slice/AlgorithmNode/AlgorithmNodeActions'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { ParamFormContext } from './RightDrawer'\n\nexport const AlgorithmParamForm = React.memo(() => {\n  const nodeId = React.useContext(ParamFormContext)\n  const dispatch = useDispatch()\n  const algoName = useSelector(selectAlgorithmName(nodeId))\n  const algoParamIsLoaded = useSelector(selectAlgorithmParamsExit(nodeId))\n  const paramKeyList = useSelector(\n    selectAlgorithmParamsKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (!algoParamIsLoaded) {\n      dispatch(getAlgoParams({ nodeId, algoName }))\n    }\n  }, [dispatch, nodeId, algoName, algoParamIsLoaded])\n  return (\n    <div style={{ padding: 8 }}>\n      <Typography variant=\"h5\">{algoName}</Typography>\n      <div style={{ paddingLeft: 8 }}>\n        {paramKeyList.map((paramKey) => (\n          <ParamItem key={paramKey} paramKey={paramKey} />\n        ))}\n      </div>\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const nodeId = React.useContext(ParamFormContext)\n  const Component = createParamFormItemComponent({\n    paramSelector: (paramKey) => selectAlgorithmParam(nodeId, paramKey),\n    paramValueSelector: (path) => selectAlgorithmParamsValue(nodeId, path),\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ nodeId, path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Divider from '@mui/material/Divider'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport Box from '@mui/material/Box'\nimport {\n  selectRightDrawerCurrentNodeId,\n  selectRightDrawerIsOpen,\n  selectRightDrawerMode,\n} from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport {\n  closeRightDrawer,\n  RIGHT_DRAWER_MODE,\n} from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { NWBSettingContents } from './NWB'\nimport { RootState } from 'store/store'\nimport { AlgorithmParamForm } from './AlgorithmParamForm'\nimport { SnakemakeContents } from './Snakemake'\nimport { RIGHT_DRAWER_WIDTH } from 'const/Layout'\n\nconst RightDrawer: React.FC = () => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(closeRightDrawer())\n  const title = useSelector((state: RootState) => {\n    const mode = selectRightDrawerMode(state)\n    switch (mode) {\n      case RIGHT_DRAWER_MODE.NWB:\n        return 'NWB Setting'\n      case RIGHT_DRAWER_MODE.PARAM_FORM:\n        return 'Param From'\n      case RIGHT_DRAWER_MODE.SNAKEMAKE:\n        return 'Snakemake'\n      default:\n        return 'none'\n    }\n  })\n  return (\n    <StyledDrawer open={open} anchor=\"right\" variant=\"persistent\">\n      <Toolbar />\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton color=\"inherit\" onClick={onClick} size=\"large\">\n          <ChevronRightIcon />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Box>\n      <Divider />\n      <MainContents>\n        <Contents />\n      </MainContents>\n    </StyledDrawer>\n  )\n}\n\nconst Contents: React.FC = () => {\n  const mode = useSelector(selectRightDrawerMode)\n  switch (mode) {\n    case RIGHT_DRAWER_MODE.NWB:\n      return <NWBSettingContents />\n    case RIGHT_DRAWER_MODE.PARAM_FORM:\n      return <ParamFormConetent />\n    case RIGHT_DRAWER_MODE.SNAKEMAKE:\n      return <SnakemakeContents />\n    default:\n      return null\n  }\n}\n\n/**\n * nodeId\n */\nexport const ParamFormContext = React.createContext<string>('')\n\nconst ParamFormConetent: React.FC = () => {\n  const nodeId = useSelector(selectRightDrawerCurrentNodeId)\n  if (nodeId != null) {\n    return (\n      <ParamFormContext.Provider value={nodeId}>\n        <AlgorithmParamForm />\n      </ParamFormContext.Provider>\n    )\n  } else {\n    return null\n  }\n}\n\nconst StyledDrawer = styled(Drawer)({\n  width: RIGHT_DRAWER_WIDTH,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: RIGHT_DRAWER_WIDTH,\n  },\n})\n\nconst MainContents = styled('main')({\n  height: '100%',\n})\n\nexport default RightDrawer\n","export const DRAWER_WIDTH = 240\nexport const RIGHT_DRAWER_WIDTH = 320\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectPipelineLatestUid } from 'store/slice/Pipeline/PipelineSelectors'\nimport { Divider, Typography, Grid } from '@mui/material'\nimport {\n  selectExperimentName,\n  selectExperimentsStatusIsFulfilled,\n} from 'store/slice/Experiments/ExperimentsSelectors'\n\nexport const CurrentPipelineInfo: React.FC = () => {\n  const uid = useSelector(selectPipelineLatestUid)\n  const isFulFilled = useSelector(selectExperimentsStatusIsFulfilled)\n\n  return (\n    <>\n      {uid && (\n        <>\n          <Grid container paddingX={2} paddingBottom={1}>\n            <ExperimentUidInfo uid={uid} />\n            {isFulFilled && <ExperimentNameInfo uid={uid} />}\n          </Grid>\n          <Divider />\n        </>\n      )}\n    </>\n  )\n}\n\nconst ExperimentUidInfo = React.memo<{ uid: string }>(({ uid }) => {\n  return <LabelValueGridRow label=\"ID\" value={uid} />\n})\n\nconst ExperimentNameInfo = React.memo<{ uid: string }>(({ uid }) => {\n  const name = useSelector(selectExperimentName(uid))\n  return <LabelValueGridRow label=\"NAME\" value={name} />\n})\n\nconst LabelValueGridRow = React.memo<{ label: string; value: string }>(\n  ({ label, value }) => {\n    return (\n      <>\n        <Grid item xs={4}>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {label}:\n          </Typography>\n        </Grid>\n        <Grid item xs={8}>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {value}\n          </Typography>\n        </Grid>\n      </>\n    )\n  },\n)\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport { AlgorithmTreeView } from './TreeView'\nimport { ReactFlowComponent } from './ReactFlowComponent'\nimport RightDrawer from './RightDrawer'\nimport { selectRightDrawerIsOpen } from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { CurrentPipelineInfo } from 'components/common/CurrentPipelineInfo'\nimport { DRAWER_WIDTH, RIGHT_DRAWER_WIDTH } from 'const/Layout'\nimport { Box } from '@mui/material'\nimport { grey } from '@mui/material/colors'\n\nconst FlowChart = React.memo<UseRunPipelineReturnType>((props) => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  return (\n    <RootDiv>\n      <DndProvider backend={HTML5Backend}>\n        <Box\n          sx={{\n            width: DRAWER_WIDTH,\n          }}\n          borderRight={1}\n          borderColor={grey[300]}\n        >\n          <CurrentPipelineInfo />\n          <DrawerContents>\n            <AlgorithmTreeView />\n          </DrawerContents>\n        </Box>\n\n        <MainContents open={open}>\n          <ReactFlowComponent {...props} />\n        </MainContents>\n      </DndProvider>\n      <RightDrawer />\n    </RootDiv>\n  )\n})\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n})\n\nconst DrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')<{ open: boolean }>(\n  ({ theme }) => ({\n    flexDirection: 'column',\n    flexGrow: 1,\n    height: '90vh',\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -RIGHT_DRAWER_WIDTH,\n  }),\n  ({ open, theme }) =>\n    open\n      ? {\n          transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n          marginRight: 0,\n        }\n      : undefined,\n)\n\nexport default FlowChart\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport AddIcon from '@mui/icons-material/Add'\nimport Button from '@mui/material/Button'\nimport { pushInitialItemToNewRow } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const VisualizeItemAddButton: React.FC = () => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(pushInitialItemToNewRow())\n  }\n  return (\n    <StyledPaper elevation={1} variant=\"outlined\">\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height=\"100%\"\n      >\n        <StyledButton onClick={onClick}>\n          <AddIcon fontSize=\"large\" color=\"primary\" />\n        </StyledButton>\n      </Box>\n    </StyledPaper>\n  )\n}\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  width: 260,\n  height: 255,\n  border: 'dashed',\n  borderWidth: 2,\n  borderColor: theme.palette.divider,\n  margin: theme.spacing(1),\n}))\n\nconst StyledButton = styled(Button)({\n  width: '100%',\n  height: '100%',\n})\n","import React from 'react'\n\nexport function useMouseDragHandler(\n  onMouseDown: (event: React.MouseEvent) => {\n    onMouseMove: (this: Document, event: MouseEvent) => void\n    onMouseUp: (this: Document, event: MouseEvent) => void\n  },\n  dependencies: React.DependencyList,\n) {\n  return React.useCallback(\n    (event: React.MouseEvent) => {\n      const { onMouseMove, onMouseUp } = onMouseDown(event)\n      document.addEventListener('mousemove', onMouseMove)\n      document.addEventListener(\n        'mouseup',\n        (event) => {\n          document.removeEventListener('mousemove', onMouseMove)\n          onMouseUp.call(document, event)\n        },\n        { once: true },\n      )\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dependencies],\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport Menu from '@mui/material/Menu'\nimport MenuItem from '@mui/material/MenuItem'\nimport ListItemText from '@mui/material/ListItemText'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport AddIcon from '@mui/icons-material/Add'\nimport {\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { insertInitialItemToNextColumn } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { deleteDisplayItem } from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const DisplayDataItemLayoutMenuIcon = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onClickDeleteMenu = () => {\n    // visualize Itemで同じpathのデータ個数を調べて、1だったら、displayも削除\n    dispatch(\n      deleteDisplayItem(\n        isSingleData && filePath != null && dataType != null\n          ? { itemId, deleteData: true, filePath, dataType }\n          : { itemId, deleteData: false },\n      ),\n    )\n  }\n  const onClickInsertMenu = () => {\n    dispatch(insertInitialItemToNextColumn(itemId))\n  }\n  return (\n    <PresentationalLayoutMenuIcon\n      onClickDeleteMenu={onClickDeleteMenu}\n      onClickInsertMenu={onClickInsertMenu}\n    />\n  )\n})\n\nconst PresentationalLayoutMenuIcon = React.memo<{\n  onClickDeleteMenu: () => void\n  onClickInsertMenu: () => void\n}>(({ onClickDeleteMenu, onClickInsertMenu }) => {\n  const [open, setOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLButtonElement>(null)\n  const onClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.stopPropagation() // 親divのonClickを反応させないため\n    setOpen((prevOpen) => !prevOpen)\n  }\n  const onClose = () => {\n    setOpen(false)\n  }\n  const onClickDeleteMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickDeleteMenu()\n    setOpen(false)\n  }\n  const onClickInsertMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickInsertMenu()\n    setOpen(false)\n  }\n  return (\n    <>\n      <IconButton ref={anchorRef} onClick={onClick}>\n        <MoreVertIcon />\n      </IconButton>\n      <Menu anchorEl={anchorRef.current} open={open} onClose={onClose}>\n        <MenuItem onClick={onClickInsertMenuFn}>\n          <ListItemIcon>\n            <AddIcon />\n          </ListItemIcon>\n          <ListItemText>Insert into next column</ListItemText>\n        </MenuItem>\n        <MenuItem onClick={onClickDeleteMenuFn}>\n          <ListItemIcon>\n            <DeleteIcon />\n          </ListItemIcon>\n          <ListItemText>Delete</ListItemText>\n        </MenuItem>\n      </Menu>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport FormControl from '@mui/material/FormControl'\nimport MenuItem from '@mui/material/MenuItem'\nimport InputLabel from '@mui/material/InputLabel'\nimport FormHelperText from '@mui/material/FormHelperText'\nimport Select from '@mui/material/Select'\nimport ListSubheader from '@mui/material/ListSubheader'\n\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { RootState } from 'store/store'\nimport { selectInputNode } from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { selectNodeLabelById } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultSuccessList,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { getFileName } from 'store/slice/FlowElement/FlowElementUtils'\n\nexport const FilePathSelect: React.FC<{\n  dataType?: DATA_TYPE\n  selectedNodeId: string | null\n  selectedFilePath: string | null\n  onSelect: (nodeId: string, filePath: string, dataType: DATA_TYPE, outputKey?: string) => void\n  label?: string\n}> = ({ dataType, selectedNodeId, selectedFilePath, onSelect, label }) => {\n  const inputNodeFilePathInfoList = useSelector(\n    (state: RootState) => {\n      const inputNodes = selectInputNode(state)\n      return Object.entries(inputNodes)\n        .map(([nodeId, inputNode]) => ({\n          nodeId,\n          filePath: inputNode.selectedFilePath,\n          fileType: inputNode.fileType,\n          dataType: toDataTypeFromFileType(inputNode.fileType),\n          nodeName: selectNodeLabelById(nodeId)(state),\n        }))\n        .filter(({ filePath }) => filePath != null)\n        .filter(({ dataType: inputNodeDataType }) =>\n          dataType != null ? inputNodeDataType === dataType : true,\n        )\n    },\n    // todo 比較関数\n  )\n\n  const latestUid = useSelector(selectPipelineLatestUid)\n\n  const algorithmNodeOutputPathInfoList = useSelector((state: RootState) => {\n    if (latestUid != null) {\n      const runResult = selectPipelineNodeResultSuccessList(state)\n      return runResult.map(({ nodeId, nodeResult }) => {\n        return {\n          nodeId,\n          nodeName: selectNodeLabelById(nodeId)(state),\n          paths: Object.entries(nodeResult.outputPaths)\n            .map(([outputKey, value]) => {\n              return {\n                outputKey,\n                filePath: value.path,\n                type: value.type,\n              }\n            })\n            .filter(({ type }) =>\n              dataType != null ? type === dataType : true,\n            ),\n        }\n      })\n    } else {\n      return []\n    }\n  })\n\n  const [open, setOpen] = React.useState(false)\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const onSelectHandle = (\n    nodeId: string,\n    filePath: string,\n    dataType: DATA_TYPE,\n    outputKey?: string\n  ) => {\n    onSelect(nodeId, filePath, dataType, outputKey)\n    handleClose()\n  }\n\n  const menuItemList: React.ReactElement[] = []\n  inputNodeFilePathInfoList.forEach((pathInfo) => {\n    const filePath = pathInfo.filePath\n    if (Array.isArray(filePath)) {\n      filePath.forEach((pathElm) => {\n        menuItemList.push(\n          <MenuItem\n            value={`${pathInfo.nodeId}/${pathElm}`}\n            onClick={() =>\n              onSelectHandle(pathInfo.nodeId, pathElm ?? '', pathInfo.dataType)\n            }\n            key={pathInfo.nodeId}\n          >\n            {getFileName(pathElm)}\n          </MenuItem>,\n        )\n      })\n    } else {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${pathInfo.filePath}`}\n          onClick={() =>\n            onSelectHandle(pathInfo.nodeId, filePath ?? '', pathInfo.dataType)\n          }\n          key={pathInfo.nodeId}\n        >\n          {pathInfo.nodeName}\n        </MenuItem>,\n      )\n    }\n  })\n  algorithmNodeOutputPathInfoList.forEach((pathInfo) => {\n    menuItemList.push(<ListSubheader>{pathInfo.nodeName}</ListSubheader>)\n    pathInfo.paths.forEach((outputPath, i) => {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${outputPath.filePath}`}\n          onClick={() =>\n            onSelectHandle(\n              pathInfo.nodeId,\n              outputPath.filePath,\n              outputPath.type,\n              outputPath.outputKey\n            )\n          }\n          key={`${pathInfo.nodeId}/${outputPath.filePath}`}\n        >\n          {outputPath.outputKey}\n        </MenuItem>,\n      )\n    })\n  })\n\n  return (\n    <FormControl style={{ minWidth: 150, maxWidth: 220 }} variant=\"standard\">\n      <InputLabel>{!!label ? label : 'Select Item'}</InputLabel>\n      <Select\n        value={`${selectedNodeId}/${selectedFilePath}`}\n        open={open}\n        onClose={handleClose}\n        onOpen={handleOpen}\n      >\n        {menuItemList}\n      </Select>\n      {inputNodeFilePathInfoList.length +\n        algorithmNodeOutputPathInfoList.length ===\n        0 && <FormHelperText error={true}>no data</FormHelperText>}\n    </FormControl>\n  )\n}\n\nfunction toDataTypeFromFileType(fileType: FILE_TYPE) {\n  switch (fileType) {\n    case FILE_TYPE_SET.IMAGE:\n      return DATA_TYPE_SET.IMAGE\n    case FILE_TYPE_SET.CSV:\n      return DATA_TYPE_SET.CSV\n    case FILE_TYPE_SET.HDF5:\n      return DATA_TYPE_SET.HDF5\n    case FILE_TYPE_SET.FLUO:\n      return DATA_TYPE_SET.FLUO\n    case FILE_TYPE_SET.BEHAVIOR:\n      return DATA_TYPE_SET.BEHAVIOR\n  }\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport FormControl from '@mui/material/FormControl'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { RootState } from 'store/store'\nimport {\n  selectDisplayDataIsSingle,\n  selectImageItemFilePath,\n  selectRoiItemFilePath,\n  selectRoiItemNodeId,\n  selectSelectedVisualizeItemId,\n  selectTimeSeriesItemRefImageItemId,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n  selectVisualizeImageItemIdList,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  selectItem,\n  setItemSize,\n  setRoiItemFilePath,\n  setTimeSeriesRefImageItemId,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { useMouseDragHandler } from 'components/utils/MouseDragUtil'\nimport { DisplayDataItemLayoutMenuIcon } from './VisualizeItemLayoutMenuIcon'\nimport { DisplayDataItem } from './DisplayDataItem'\nimport { FilePathSelect } from './FilePathSelect'\n\nexport const VisualizeItem = React.memo<{ itemId: number }>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(selectItem(itemId))\n  }\n  const isSelected = useSelector(\n    (state: RootState) => selectSelectedVisualizeItemId(state) === itemId,\n  )\n  const { size, onMouseDownX, onMouseDownY, onMouseDownXY } =\n    useItemDragResize(itemId)\n  return (\n    <Box sx={{ m: 1, display: 'flex', flexDirection: 'row' }}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Paper\n          variant=\"outlined\"\n          key={itemId}\n          onClick={onClick}\n          sx={{\n            width: `${size.width}px`,\n            minHeight: `${size.height}px`,\n            p: 1,\n            borderColor: (theme) =>\n              isSelected ? theme.palette.primary.light : undefined,\n          }}\n        >\n          <ItemHeader itemId={itemId} />\n          <DisplayDataItem itemId={itemId} />\n        </Paper>\n        <Box\n          sx={{\n            display: 'flex',\n          }}\n        >\n          <Box\n            sx={{\n              flexGrow: 1,\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              cursor: 'row-resize',\n            }}\n            onMouseDown={onMouseDownY}\n          />\n          <Box\n            sx={{\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              width: '12px',\n              cursor: 'nwse-resize',\n            }}\n            onMouseDown={onMouseDownXY}\n          />\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Box\n          sx={{\n            flexGrow: 1,\n            position: 'relative',\n            left: '-2px',\n            width: '4px',\n            cursor: 'col-resize',\n          }}\n          onMouseDown={onMouseDownX}\n        />\n        <Box\n          sx={{\n            position: 'relative',\n            height: '12px',\n            width: '4px',\n            left: '-2px',\n            cursor: 'nwse-resize',\n          }}\n          onMouseDown={onMouseDownXY}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst ItemHeader = React.memo<{ itemId: number }>(({ itemId }) => {\n  const itemDataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <Box display=\"flex\" justifyContent=\"flex-end\">\n      <Box flexGrow={1}>\n        <>ID: {itemId}</>\n        <FilePathSelectItem itemId={itemId} />\n      </Box>\n      {itemDataType === DATA_TYPE_SET.TIME_SERIES && (\n        <Box flexGrow={1}>\n          <RefImageItemIdSelect itemId={itemId} />\n        </Box>\n      )}\n      {itemDataType === DATA_TYPE_SET.IMAGE && (\n        <Box flexGrow={1}>\n          <RoiSelect itemId={itemId} />\n        </Box>\n      )}\n      <Box>\n        <DisplayDataItemLayoutMenuIcon itemId={itemId} />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const selectedNodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const selectedFilePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFilePath = (\n    nodeId: string,\n    newFilePath: string,\n    newDataType: DATA_TYPE,\n  ) => {\n    const basePayload = {\n      itemId,\n      nodeId,\n      filePath: newFilePath,\n      dataType: newDataType,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && selectedFilePath != null\n          ? {\n            ...basePayload,\n            deleteData: true,\n            prevDataType: dataType,\n            prevFilePath: selectedFilePath,\n          }\n          : {\n            ...basePayload,\n            deleteData: false,\n          },\n      ),\n    )\n  }\n\n  return (\n    <FilePathSelect\n      selectedNodeId={selectedNodeId}\n      selectedFilePath={selectedFilePath}\n      onSelect={onSelectFilePath}\n    />\n  )\n})\n\nconst RefImageItemIdSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const itemIdList = useSelector(\n    selectVisualizeImageItemIdList,\n    arrayEqualityFn,\n  )\n  const onChangeRefImageItemId = (event: SelectChangeEvent) => {\n    const value = Number(event.target.value)\n    dispatch(\n      setTimeSeriesRefImageItemId({\n        itemId,\n        refImageItemId: isNaN(value) ? null : value,\n      }),\n    )\n  }\n  const selectedRefImageItemId = useSelector(\n    selectTimeSeriesItemRefImageItemId(itemId),\n  )\n  return (\n    <FormControl fullWidth variant=\"standard\">\n      <InputLabel>ref image</InputLabel>\n      <Select\n        value={String(selectedRefImageItemId)}\n        onChange={onChangeRefImageItemId}\n      >\n        <MenuItem value={undefined}>{'None'}</MenuItem>\n        {itemIdList.map((value) => (\n          <MenuItem value={value}>{value}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst MIN_WIDTH = 200\nconst MIN_HEIFHT = 150\n\nfunction useItemDragResize(itemId: number) {\n  const dispatch = useDispatch()\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const [movingSize, setMovingSize] = React.useState({ width, height })\n  const onCommitSize = React.useCallback(\n    (size: { width: number; height: number }) =>\n      dispatch(setItemSize({ itemId, ...size })),\n    [dispatch, itemId],\n  )\n  const onMouseDownX = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          setMovingSize((size) => ({ ...size, width: movingWidth }))\n          movingX = moveEvent.screenX\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, width: movingWidth })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownY = useMouseDragHandler(\n    (downEvent) => {\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize((size) => ({ ...size, height: movingHeight }))\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownXY = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize({ width: movingWidth, height: movingHeight })\n          movingX = moveEvent.screenX\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ width: movingWidth, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  return {\n    size: movingSize,\n    onMouseDownX,\n    onMouseDownY,\n    onMouseDownXY,\n  }\n}\n\nconst RoiSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const roiItemNodeId = useSelector(selectRoiItemNodeId(itemId))\n  const roiItemFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const onSelectRoiFilePath = (nodeId: string, filePath: string, dataType: string, outputKey?: string) => {\n    dispatch(setRoiItemFilePath({ itemId, nodeId, filePath, outputKey }))\n  }\n  return (\n    <FilePathSelect\n      selectedFilePath={roiItemFilePath}\n      selectedNodeId={roiItemNodeId}\n      onSelect={onSelectRoiFilePath}\n      dataType={DATA_TYPE_SET.ROI}\n      label={'Select Roi'}\n    />\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { selectVisualizeItemLayout } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nimport { VisualizeItemAddButton } from './VisualizeItemAddButton'\nimport { VisualizeItem } from './VisualizeItem'\n\nexport const FlexItemList: React.FC = () => {\n  const layout = useSelector(selectVisualizeItemLayout, twoDimarrayEqualityFn)\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"column\" p={1} m={1}>\n      {layout.map((row) => (\n        <Box display=\"flex\" flexDirection=\"row\">\n          {row.map((itemId) => (\n            <VisualizeItem itemId={itemId} key={itemId} />\n          ))}\n        </Box>\n      ))}\n      <VisualizeItemAddButton />\n    </Box>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { GradientPickerPopover } from 'react-linear-gradient-picker'\nimport { SketchPicker } from 'react-color'\nimport { PALETTE_COLOR_SHAPE_TYPE } from 'react-linear-gradient-picker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const GradientColorPicker = React.memo<{\n  colors: { rgb: string; offset: string }[]\n  dispatchSetColor: (colorCode: ColorType[]) => void\n}>(({ colors, dispatchSetColor }) => {\n  const palette: PALETTE_COLOR_SHAPE_TYPE[] = colors.map((value) => {\n    return {\n      offset: value.offset,\n      color: value.rgb,\n    }\n  })\n\n  const onPaletteChange = (palette: PALETTE_COLOR_SHAPE_TYPE[]) => {\n    const colorCode = palette.map((value) => {\n      const color = value.color\n      const rgbStr = color.replace(/[^0-9,]/g, '').split(',')\n      const rgb = {\n        r: Number(rgbStr[0]),\n        g: Number(rgbStr[1]),\n        b: Number(rgbStr[2]),\n      }\n      return {\n        rgb: `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`,\n        offset: value.offset,\n      }\n    })\n    dispatchSetColor(colorCode)\n  }\n\n  const [open, setOpen] = useState(false)\n\n  return (\n    <GradientPickerPopover\n      open={open}\n      setOpen={() => setOpen(!open)}\n      // showAnglePicker={true}\n      width={150}\n      maxStops={10}\n      paletteHeight={25}\n      palette={palette}\n      onPaletteChange={onPaletteChange}\n      flatStyle={true}\n    >\n      <WrappedSketchPicker />\n    </GradientPickerPopover>\n  )\n})\n\ntype WrapperPropTypes = {\n  onSelect?: (color: string, opacity?: number) => void\n  color?: string\n}\n\nconst WrappedSketchPicker: React.FC<WrapperPropTypes> = ({\n  onSelect,\n  color,\n}) => {\n  return (\n    <SketchPicker\n      color={color}\n      width=\"150px\"\n      // styles={{width: \"10px\"}}\n      onChange={(c) => {\n        const { r, g, b, a } = c.rgb\n        onSelect?.(`rgb(${r}, ${g}, ${b})`, a)\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport TextField from '@mui/material/TextField'\n\nimport {\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setSaveFileName,\n  setSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\n\nexport const SaveFig: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(setSaveFormat({ itemId, saveFormat: event.target.value }))\n  }\n  const onChangeFileName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setSaveFileName({ itemId, saveFileName: event.target.value }))\n  }\n\n  return (\n    <>\n      <h3>SaveFig</h3>\n      <FormControl\n        variant=\"standard\"\n        sx={{ minWidth: 120, width: '100%', marginBottom: 1 }}\n      >\n        <InputLabel>format</InputLabel>\n        <Select label=\"smooth\" value={saveFormat} onChange={handleChange}>\n          <MenuItem value={'svg'}>svg</MenuItem>\n          <MenuItem value={'png'}>png</MenuItem>\n          <MenuItem value={'jpeg'}>jpeg</MenuItem>\n          <MenuItem value={'webp'}>webp</MenuItem>\n        </Select>\n      </FormControl>\n      <TextField\n        style={{ width: '100%' }}\n        label={'Filename'}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeFileName}\n        value={saveFileName}\n      />\n    </>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Switch from '@mui/material/Switch'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\n\nimport {\n  selectImageItemShowGrid,\n  selectImageItemShowLine,\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemFilePath,\n  selectDisplayDataIsSingle,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setImageItemShowGrid,\n  setImageItemShowLine,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowScale,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemColors,\n  resetImageActiveIndex,\n  setImageItemRoiAlpha,\n  setImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\nimport { FileSelectImple } from 'components/Workspace/FlowChart/FlowChartNode/FileSelect'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { Box, TextField } from '@mui/material'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\nimport Button from '@mui/material/Button'\nimport { getImageData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { SaveFig } from './SaveFig'\n\nexport const ImageItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectImageFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.IMAGE,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.IMAGE })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  const colors = useSelector(selectImageItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setImageItemColors({ itemId, colors: colorCode }))\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectImageFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.IMAGE}\n        selectButtonLabel=\"Select Image\"\n      />\n      <StartEndIndex />\n      <Showticklabels />\n      <ShowLine />\n      <ShowGrid />\n      <ShowScale />\n      <Zsmooth />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <Alpha />\n      <RoiAlpha />\n      <SaveFig />\n    </div>\n  )\n}\n\nconst Showticklabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setImageItemShowticklabels({ itemId, showticklabels: !showticklabels }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"Showticklabels\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"ShowLine\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"ShowGrid\"\n    />\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"ShowScale\"\n    />\n  )\n}\n\nconst Zsmooth: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string | boolean>) => {\n    dispatch(setImageItemZsmooth({ itemId, zsmooth: event.target.value }))\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>smooth</InputLabel>\n      <Select label=\"smooth\" value={zsmooth} onChange={handleChange}>\n        <MenuItem value={'best'}>best</MenuItem>\n        <MenuItem value={'fast'}>fast</MenuItem>\n        <MenuItem value={'false'}>False</MenuItem>\n      </Select>\n    </FormControl>\n  )\n}\n\nconst Alpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const inputError = !(alpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemAlpha({ itemId, alpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        style={{ width: '100%' }}\n        label={'image alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={alpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst RoiAlpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const inputError = !(roiAlpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemRoiAlpha({ itemId, roiAlpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        style={{ width: '100%' }}\n        label={'roi alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={roiAlpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst StartEndIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const [startIndex, onChangeStartIndex] = React.useState(\n    useSelector(selectImageItemStartIndex(itemId)),\n  )\n  const [endIndex, onChangeEndIndex] = React.useState(\n    useSelector(selectImageItemEndIndex(itemId)),\n  )\n  const inputError = !(startIndex > 0)\n  const dispatch = useDispatch()\n  const onStartChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeStartIndex(newValue)\n    }\n  }\n  const onEndChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeEndIndex(newValue)\n    }\n  }\n\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n  const onClickButton = () => {\n    if (startIndex > 0) {\n      dispatch(setImageItemStartIndex({ itemId, startIndex }))\n      dispatch(setImageItemEndIndex({ itemId, endIndex }))\n      dispatch(resetImageActiveIndex({ itemId, startIndex, endIndex }))\n      if (filePath !== null) {\n        dispatch(\n          getImageData({\n            path: filePath,\n            startIndex: startIndex ?? 1,\n            endIndex: endIndex ?? 10,\n          }),\n        )\n      }\n    }\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>\n      <TextField\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 1,\n          min: 0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onStartChange}\n        value={startIndex}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n      ~\n      <TextField\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onEndChange}\n        value={endIndex}\n      />\n      <Button\n        size=\"small\"\n        className=\"ctrl_btn\"\n        variant=\"contained\"\n        onClick={onClickButton}\n      >\n        load\n      </Button>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FileSelectImple } from 'components/Workspace/FlowChart/FlowChartNode/FileSelect'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { FormControlLabel, Switch, TextField } from '@mui/material'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const CsvItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const dispatch = useDispatch()\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.CSV,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.CSV })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.CSV}\n        selectButtonLabel=\"Select CSV\"\n      />\n      <Transpose />\n      <SetHeader />\n      <SetIndex />\n    </div>\n  )\n}\n\nconst Transpose: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemTranspose({ itemId, transpose: !transpose }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={transpose} onChange={toggleChecked} />}\n      label=\"transpose\"\n    />\n  )\n}\n\nconst SetHeader: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeSetHeader = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value === '' ? null : Number(event.target.value)\n    if (newValue === null || newValue >= 0) {\n      dispatch(setCsvItemSetHeader({ itemId, setHeader: newValue }))\n    }\n  }\n\n  return (\n    <>\n      <TextField\n        label=\"header\"\n        sx={{\n          width: 100,\n          margin: (theme) => theme.spacing(0, 1, 0, 1),\n        }}\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeSetHeader}\n        value={setHeader}\n      />\n    </>\n  )\n}\n\nconst SetIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemSetIndex({ itemId, setIndex: !setIndex }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={setIndex} onChange={toggleChecked} />}\n      label=\"setIndex\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FormControlLabel, Switch } from '@mui/material'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setHeatMapItemColors,\n  setHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { SaveFig } from './SaveFig'\n\nexport const HeatmapItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const colors = useSelector(selectHeatMapItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setHeatMapItemColors({ itemId, colors: colorCode }))\n  }\n  return (\n    <>\n      <ShowScale />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <SaveFig />\n    </>\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setHeatMapItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"showscale\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  AccordionDetails,\n  AccordionSummary,\n  FormControlLabel,\n  Switch,\n  TextField,\n} from '@mui/material'\nimport Box from '@mui/material/Box'\nimport Checkbox from '@mui/material/Checkbox'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectTimeSeriesItemFilePath,\n  selectTimeSeriesItemKeys,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemDrawOrderList,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  getTimeSeriesAllData,\n  getTimeSeriesDataById,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { Accordion } from 'components/common/Accordion'\n\nimport { SaveFig } from './SaveFig'\n\nexport const TimeSeriesItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <Offset />\n      <Span />\n      <ShowGrid />\n      <ShowLine />\n      <ShowTickLabels />\n      <ZeroLine />\n      <Xrange />\n      <LegendSelect />\n      <SaveFig />\n    </div>\n  )\n}\n\nconst Offset: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemOffset({ itemId, offset: !offset }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={offset} onChange={toggleChecked} />}\n      label=\"offset\"\n    />\n  )\n}\n\nconst Span: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n\n  const dispatch = useDispatch()\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number' && newValue > 0) {\n      dispatch(setTimeSeriesItemSpan({ itemId, span: newValue }))\n    }\n  }\n  return (\n    <FormControlLabel\n      control={\n        <TextField\n          type=\"number\"\n          style={{ width: '6vw' }}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={onChange}\n          defaultValue={span}\n        />\n      }\n      label=\"offset std\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"showgrid\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"showline\"\n    />\n  )\n}\n\nconst ShowTickLabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setTimeSeriesItemShowTickLabels({\n        itemId,\n        showticklabels: !showticklabels,\n      }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"showticklabels\"\n    />\n  )\n}\n\nconst ZeroLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemZeroLine({ itemId, zeroline: !zeroline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={zeroline} onChange={toggleChecked} />}\n      label=\"zeroline\"\n    />\n  )\n}\n\nconst Xrange: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeLeft = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newLeft = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newLeft === 'number') {\n      dispatch(setTimeSeriesItemXrangeLeft({ itemId, left: newLeft }))\n    }\n  }\n  const onChangeRight = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newRight = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newRight === 'number') {\n      dispatch(setTimeSeriesItemXrangeRight({ itemId, right: newRight }))\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <>\n          <TextField\n            label=\"left\"\n            style={{ width: 50 }}\n            type=\"number\"\n            inputProps={{\n              step: 1,\n              min: 0,\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeLeft}\n            defaultValue={xrange.left}\n          />\n          <TextField\n            label=\"right\"\n            style={{ width: 50 }}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeRight}\n            defaultValue={xrange.right}\n          />\n        </>\n      }\n      label=\"\"\n    />\n  )\n}\n\nconst LegendSelect: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  // const drawIndexMap = useSelector(selectTimeSeriesItemDrawIndexMap(itemId))\n  const dataKeys = useSelector(\n    selectTimeSeriesItemKeys(itemId),\n    arrayEqualityFn,\n  )\n  const drawOrderList = useSelector(\n    selectTimeSeriesItemDrawOrderList(itemId),\n    arrayEqualityFn,\n  )\n  const filePath = useSelector(selectTimeSeriesItemFilePath(itemId))\n\n  const allHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: event.target.checked ? dataKeys : [],\n      }),\n    )\n\n    if (event.target.checked && filePath !== null) {\n      dispatch(getTimeSeriesAllData({ path: filePath }))\n    }\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const index = event.target.value\n    const newDrawOrderList = event.target.checked\n      ? [...drawOrderList, index]\n      : drawOrderList.filter((value) => value !== index)\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    if (filePath !== null) {\n      dispatch(getTimeSeriesDataById({ path: filePath, index: index }))\n    }\n  }\n\n  const drawIndexMap = Object.fromEntries(\n    dataKeys.map((v) => {\n      if (drawOrderList.includes(v)) {\n        return [v, true]\n      } else {\n        return [v, false]\n      }\n    }),\n  )\n\n  const children = (\n    <Box sx={{ display: 'flex', flexDirection: 'column', ml: 3 }}>\n      {dataKeys.map((key) => (\n        <FormControlLabel\n          key={`${key}`}\n          label={`Index ${key}`}\n          control={\n            <Checkbox\n              checked={drawIndexMap[key]}\n              onChange={handleChange}\n              value={key}\n            />\n          }\n        />\n      ))}\n    </Box>\n  )\n\n  return (\n    <Accordion sx={{ mt: 2 }} TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        Legend select\n      </AccordionSummary>\n      <AccordionDetails>\n        <>\n          <FormControlLabel\n            label=\"All Check\"\n            control={\n              <Checkbox\n                checked={Object.values(drawIndexMap).every((v) => {\n                  return v\n                })}\n                onChange={allHandleChange}\n              />\n            }\n          />\n          {children}\n        </>\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","import React from 'react'\n// import { useSelector, useDispatch } from 'react-redux'\n// import { SelectedItemIdContext } from '../VisualizeItemEditor'\n// import { selectRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n// import { setRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n// import { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\n// import { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n// import { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const RoiItemEditor: React.FC = () => {\n  // const itemId = React.useContext(SelectedItemIdContext)\n  // const dispatch = useDispatch()\n  // const { onUploadFile } = useFileUploader(FILE_TYPE_SET.CSV)\n  // const onUploadFileHandle = (formData: FormData, fileName: string) => {\n  //   onUploadFile(formData, fileName)\n  // }\n\n  // const colors = useSelector(selectRoiItemColors(itemId))\n  // const dispathSetColor = (colorCode: ColorType[]) => {\n  //   dispatch(setRoiItemColors({ itemId, colors: colorCode }))\n  // }\n\n  return (\n    <>\n      {/* <GradientColorPicker /> */}\n      {/* <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} /> */}\n    </>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const ScatterItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const BarItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport {\n  selectSelectedVisualizeItemId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { ImageItemEditor } from './Editor/ImageItemEditor'\nimport { CsvItemEditor } from './Editor/CsvItemEditor'\nimport { HeatmapItemEditor } from './Editor/HeatmapItemEditor'\nimport { TimeSeriesItemEditor } from './Editor/TimeSeriesItemEditor'\nimport { RoiItemEditor } from './Editor/RoiItemEditor'\nimport { ScatterItemEditor } from './Editor/ScatterItemEditor'\nimport { BarItemEditor } from './Editor/BarItemEditor'\n\nexport const VisualizeItemEditor = () => {\n  const selectedItemId = useSelector(selectSelectedVisualizeItemId)\n  return (\n    <>\n      {selectedItemId != null ? (\n        <SelectedItemIdContext.Provider value={selectedItemId}>\n          <Box m={1}>\n            <DisplayDataItemEditor />\n          </Box>\n        </SelectedItemIdContext.Provider>\n      ) : (\n        'Please select item...'\n      )}\n    </>\n  )\n}\n\nexport const SelectedItemIdContext = React.createContext<number>(NaN)\n\nconst DisplayDataItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <div style={{ marginTop: 8 }}>\n      <DisplayEditor dataType={dataType} />\n    </div>\n  )\n}\n\nconst DisplayEditor: React.FC<{\n  dataType: DATA_TYPE | null\n}> = ({ dataType }) => {\n  /* 他のtypeのEditorも必要になったら追加する */\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return <ImageItemEditor />\n    case DATA_TYPE_SET.CSV:\n      return <CsvItemEditor />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatmapItemEditor />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesItemEditor />\n    case DATA_TYPE_SET.ROI:\n      return <RoiItemEditor />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterItemEditor />\n    case DATA_TYPE_SET.BAR:\n      return <BarItemEditor />\n    case DATA_TYPE_SET.HTML:\n      return <div>html editor</div>\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport { styled } from '@mui/material/styles'\nimport { FlexItemList } from './FlexItemList'\nimport { VisualizeItemEditor } from './VisualizeItemEditor'\nimport { CurrentPipelineInfo } from 'components/common/CurrentPipelineInfo'\nimport { DRAWER_WIDTH } from 'const/Layout'\nimport { Box } from '@mui/material'\nimport { grey } from '@mui/material/colors'\n\nconst Visualize: React.FC = () => {\n  return (\n    <RootDiv>\n      <Box\n        sx={{\n          width: DRAWER_WIDTH,\n        }}\n        borderRight={1}\n        borderColor={grey[300]}\n      >\n        <CurrentPipelineInfo />\n        <StyledDrawerContents>\n          <VisualizeItemEditor />\n        </StyledDrawerContents>\n      </Box>\n\n      <MainContents>\n        <FlexItemList />\n      </MainContents>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n})\n\nconst StyledDrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')({\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n  height: '100vh',\n})\n\nexport default Visualize\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit'\nimport { WORKSPACE_SLICE_NAME, Workspace } from './WorkspaceType'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\n\nconst initialState: Workspace = {\n  workspaces: [{ workspace_id: 'default' }],\n  currentWorkspace: {\n    selectedTab: 0,\n  },\n  loading: false,\n}\n\nexport const workspaceSlice = createSlice({\n  name: WORKSPACE_SLICE_NAME,\n  initialState,\n  reducers: {\n    setActiveTab: (state, action: PayloadAction<number>) => {\n      state.currentWorkspace.selectedTab = action.payload\n    },\n    setCurrentWorkspace: (state, action: PayloadAction<string>) => {\n      state.currentWorkspace.workspaceId = action.payload\n    },\n    clearCurrentWorkspace: (state) => {\n      state.currentWorkspace = {\n        selectedTab: 0,\n      }\n    },\n  },\n  extraReducers(builder) {\n    builder.addCase(importExperimentByUid.fulfilled, (state, action) => {\n      state.currentWorkspace.workspaceId = action.meta.arg.workspaceId\n    })\n    // TODO: add case for set loading on get workspaces pending\n  },\n})\n\nexport const { setCurrentWorkspace, clearCurrentWorkspace, setActiveTab } =\n  workspaceSlice.actions\nexport default workspaceSlice.reducer\n","export const WORKSPACE_SLICE_NAME = 'workspace'\n\nexport type Workspace = {\n  workspaces: WorkspaceType[]\n  currentWorkspace: {\n    workspaceId?: string\n    selectedTab: number\n  }\n  loading: boolean\n}\n\nexport type WorkspaceType = {\n  workspace_id: string\n  // TODO: add fields required for workspace\n}\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\nimport { Box } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { STANDALONE_WORKSPACE_ID, IS_STANDALONE } from 'const/Mode'\nimport { useRunPipeline } from 'store/slice/Pipeline/PipelineHook'\nimport Experiment from 'components/Workspace/Experiment/Experiment'\nimport FlowChart from 'components/Workspace/FlowChart/FlowChart'\nimport Visualize from 'components/Workspace/Visualize/Visualize'\nimport {\n  clearCurrentWorkspace,\n  setCurrentWorkspace,\n} from 'store/slice/Workspace/WorkspaceSlice'\nimport { selectActiveTab } from 'store/slice/Workspace/WorkspaceSelector'\n\nconst Workspace: React.FC = () => {\n  const dispatch = useDispatch()\n  const runPipeline = useRunPipeline() // タブ切り替えによって結果取得処理が止まってしまうのを回避するため、タブの親レイヤーで呼び出している\n\n  const { workspaceId } = useParams<{ workspaceId: string }>()\n\n  useEffect(() => {\n    if (IS_STANDALONE) {\n      dispatch(setCurrentWorkspace(STANDALONE_WORKSPACE_ID))\n    } else {\n      workspaceId && dispatch(setCurrentWorkspace(workspaceId))\n    }\n    return () => {\n      dispatch(clearCurrentWorkspace())\n    }\n  }, [workspaceId, dispatch])\n\n  const activeTab = useSelector(selectActiveTab)\n\n  return (\n    <RootDiv>\n      <TabPanel value={activeTab} index={0}>\n        <FlowChart {...runPipeline} />\n      </TabPanel>\n      <TabPanel value={activeTab} index={1}>\n        <Visualize />\n      </TabPanel>\n      <TabPanel value={activeTab} index={2}>\n        <Experiment />\n      </TabPanel>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  backgroundColor: theme.palette.background.paper,\n  height: '100%',\n}))\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: number\n  value: number\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      style={{ height: 'calc(100% - 58px)' }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ height: '100%' }}>{children}</Box>}\n    </div>\n  )\n}\n\nexport default Workspace\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { selectRunPostData } from 'store/slice/Run/RunSelectors'\nimport {\n  selectPipelineIsCanceled,\n  selectPipelineIsStartedSuccess,\n  selectPipelineLatestUid,\n  selectPipelineStatus,\n} from './PipelineSelectors'\nimport { run, pollRunResult, runByCurrentUid } from './PipelineActions'\nimport { cancelPipeline } from './PipelineSlice'\nimport { selectFilePathIsUndefined } from '../InputNode/InputNodeSelectors'\nimport { selectAlgorithmNodeNotExist } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { getExperiments } from '../Experiments/ExperimentsActions'\nimport { useSnackbar } from 'notistack'\nimport { RUN_STATUS } from './PipelineType'\n\nconst POLLING_INTERVAL = 5000\n\nexport type UseRunPipelineReturnType = ReturnType<typeof useRunPipeline>\n\nexport function useRunPipeline() {\n  const dispatch = useDispatch()\n  const uid = useSelector(selectPipelineLatestUid)\n  const isCanceled = useSelector(selectPipelineIsCanceled)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n  const filePathIsUndefined = useSelector(selectFilePathIsUndefined)\n  const algorithmNodeNotExist = useSelector(selectAlgorithmNodeNotExist)\n  const runPostData = useSelector(selectRunPostData)\n  const handleRunPipeline = React.useCallback(\n    (name: string) => {\n      dispatch(run({ runPostData: { name, ...runPostData, forceRunList: [] } }))\n    },\n    [dispatch, runPostData],\n  )\n  const handleRunPipelineByUid = React.useCallback(() => {\n    dispatch(runByCurrentUid({ runPostData }))\n  }, [dispatch, runPostData])\n  const handleCancelPipeline = React.useCallback(() => {\n    if (uid != null) {\n      dispatch(cancelPipeline())\n    }\n  }, [dispatch, uid])\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isStartedSuccess && !isCanceled && uid != null) {\n        dispatch(pollRunResult({ uid: uid }))\n      }\n    }, POLLING_INTERVAL)\n    return () => {\n      clearInterval(intervalId)\n    }\n  }, [dispatch, uid, isCanceled, isStartedSuccess])\n  const status = useSelector(selectPipelineStatus)\n  const { enqueueSnackbar } = useSnackbar()\n  // タブ移動による再レンダリングするたびにスナックバーが実行されてしまう挙動を回避するために前回の値を保持\n  const [prevStatus, setPrevStatus] = React.useState(status)\n  React.useEffect(() => {\n    if (prevStatus !== status) {\n      if (status === RUN_STATUS.FINISHED) {\n        enqueueSnackbar('Finished', { variant: 'success' })\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.START_SUCCESS) {\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.ABORTED) {\n        enqueueSnackbar('Aborted', { variant: 'error' })\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.CANCELED) {\n        enqueueSnackbar('Canceled', { variant: 'info' })\n        dispatch(getExperiments())\n      }\n      setPrevStatus(status)\n    }\n  }, [dispatch, status, prevStatus, enqueueSnackbar])\n  return {\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    uid,\n    status,\n    isStartedSuccess,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n    handleCancelPipeline,\n  }\n}\n","export default __webpack_public_path__ + \"static/media/logo.e44efe32.png\";","import { FC } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport { selectActiveTab } from 'store/slice/Workspace/WorkspaceSelector'\nimport { setActiveTab } from 'store/slice/Workspace/WorkspaceSlice'\n\nconst WorkspaceTabs: FC = () => {\n  const dispatch = useDispatch()\n  const activeTab = useSelector(selectActiveTab)\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    dispatch(setActiveTab(newValue))\n  }\n\n  return (\n    <Tabs\n      sx={{ width: '100%' }}\n      value={activeTab}\n      onChange={handleChange}\n      centered\n      textColor=\"primary\"\n    >\n      <Tab label=\"Workflow\" {...a11yProps(0)} />\n      <Tab label=\"Visualize\" {...a11yProps(1)} />\n      <Tab label=\"Record\" {...a11yProps(2)} />\n    </Tabs>\n  )\n}\n\nfunction a11yProps(index: number | string) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default WorkspaceTabs\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { USER_SLICE_NAME } from './UserType'\nimport { User } from './UserType'\nimport { deleteMe, getMe, login, updateMe } from './UserActions'\nimport {\n  removeExToken,\n  removeToken,\n  saveExToken,\n  saveRefreshToken,\n  saveToken,\n} from 'utils/auth/AuthUtils'\n\nconst initialState: User = { currentUser: undefined }\n\nexport const userSlice = createSlice({\n  name: USER_SLICE_NAME,\n  initialState,\n  reducers: {\n    logout: (state) => {\n      removeToken()\n      removeExToken()\n      state = initialState\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(login.fulfilled, (_, action) => {\n        saveToken(action.payload.access_token)\n        saveRefreshToken(action.payload.refresh_token)\n        saveExToken(action.payload.ex_token)\n      })\n      .addCase(getMe.fulfilled, (state, action) => {\n        state.currentUser = action.payload\n      })\n      .addCase(updateMe.fulfilled, (state, action) => {\n        state.currentUser = action.payload\n      })\n      .addMatcher(\n        isAnyOf(login.rejected, getMe.rejected, deleteMe.fulfilled),\n        (state) => {\n          removeToken()\n          removeExToken()\n          state = initialState\n        },\n      )\n  },\n})\n\nexport const { logout } = userSlice.actions\nexport default userSlice.reducer\n","import { FC, useState } from 'react'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport { Menu, MenuItem } from '@mui/material'\nimport { useDispatch } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport PortraitIcon from '@mui/icons-material/Portrait'\nimport Logout from '@mui/icons-material/Logout'\nimport { useNavigate } from 'react-router-dom'\nimport { logout } from 'store/slice/User/UserSlice'\n\nconst Profile: FC = () => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null)\n  }\n\n  const onClickLogout = () => {\n    setAnchorEl(null)\n    dispatch(logout())\n    navigate('/login')\n  }\n\n  const onClickAccount = () => {\n    setAnchorEl(null)\n    navigate('/account')\n  }\n\n  return (\n    <>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open profile menu\"\n        aria-haspopup=\"true\"\n        onClick={handleMenu}\n      >\n        <AccountCircleIcon />\n      </IconButton>\n      <Menu\n        id=\"profile-menu\"\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        keepMounted\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n      >\n        <MenuItem onClick={onClickAccount}>\n          <PortraitIcon /> Account Profile\n        </MenuItem>\n        <MenuItem onClick={onClickLogout}>\n          <Logout />\n          SIGN OUT\n        </MenuItem>\n      </Menu>\n    </>\n  )\n}\n\nexport default Profile\n","import { FC } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { styled } from '@mui/material/styles'\nimport MuiAppBar from '@mui/material/AppBar'\nimport Box from '@mui/material/Box'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport IconButton from '@mui/material/IconButton'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport Logo from 'components/logo.png'\nimport Tooltips from 'components/Layout/Tooltips'\nimport WorkspaceTabs from 'components/Workspace/WorkspaceTabs'\nimport { IS_STANDALONE } from 'const/Mode'\nimport Profile from './Profile'\n\nconst Header: FC<{\n  handleDrawerOpen: () => void\n}> = ({ handleDrawerOpen }) => {\n  return IS_STANDALONE ? (\n    <StandaloneHeader />\n  ) : (\n    <MultiUserHeader handleDrawerOpen={handleDrawerOpen} />\n  )\n}\n\nconst StandaloneHeader: FC = () => {\n  return (\n    <StyledAppBar>\n      <Toolbar>\n        <Box display=\"flex\" flexGrow={1}>\n          <img src={Logo} alt=\"logo\" width={75} height={50} />\n        </Box>\n        <WorkspaceTabs />\n        <Tooltips />\n      </Toolbar>\n    </StyledAppBar>\n  )\n}\n\nconst MultiUserHeader: FC<{ handleDrawerOpen: () => void }> = ({\n  handleDrawerOpen,\n}) => {\n  const showTabsRegex = /^\\/workspaces\\/.+$/\n  const location = useLocation()\n\n  return (\n    <StyledAppBar>\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          edge=\"start\"\n        >\n          <MenuIcon />\n        </IconButton>\n        <Box display=\"flex\" flexGrow={1}>\n          <TitleLogo>STUDIO</TitleLogo>\n        </Box>\n        {showTabsRegex.test(location.pathname) && <WorkspaceTabs />}\n        <Profile />\n      </Toolbar>\n    </StyledAppBar>\n  )\n}\n\nconst StyledAppBar = styled(MuiAppBar)({\n  position: 'fixed',\n  backgroundColor: '#E1DEDB',\n  color: '#000000',\n})\n\nconst TitleLogo = styled(Typography)({\n  fontWeight: 600,\n  fontSize: 22,\n})\n\nexport default Header\n","import { FC } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport Drawer from '@mui/material/Drawer'\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemButton from '@mui/material/ListItemButton'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport ListItemText from '@mui/material/ListItemText'\nimport HomeIcon from '@mui/icons-material/Home'\nimport SourceIcon from '@mui/icons-material/Source'\nimport { DRAWER_WIDTH } from 'const/Layout'\nimport { Box } from '@mui/material'\n\nconst LeftMenu: FC<{ open: boolean; handleDrawerClose: () => void }> = ({\n  open,\n  handleDrawerClose,\n}) => {\n  const navigate = useNavigate()\n\n  const onClickDashboard = () => {\n    handleDrawerClose()\n    navigate('/')\n  }\n\n  const onClickWorkspaces = () => {\n    handleDrawerClose()\n    navigate('/workspaces')\n  }\n\n  return (\n    <>\n      <Drawer anchor=\"left\" open={open} onClose={handleDrawerClose}>\n        <Box sx={{ width: DRAWER_WIDTH }}>\n          <List>\n            <ListItem key=\"dashboard\" disablePadding>\n              <ListItemButton onClick={onClickDashboard}>\n                <ListItemIcon>\n                  <HomeIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Dashboard\" />\n              </ListItemButton>\n            </ListItem>\n            <ListItem key=\"workspaces\" disablePadding>\n              <ListItemButton onClick={onClickWorkspaces}>\n                <ListItemIcon>\n                  <SourceIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Workspaces\" />\n              </ListItemButton>\n            </ListItem>\n          </List>\n        </Box>\n      </Drawer>\n    </>\n  )\n}\n\nexport default LeftMenu\n","import { FC, useEffect, useState } from 'react'\nimport { useSelector,\n  // useDispatch\n} from 'react-redux'\nimport { useLocation,\n  // useNavigate\n} from 'react-router-dom'\nimport { Box } from '@mui/material'\nimport { styled } from '@mui/material/styles'\n// import { getToken } from 'utils/auth/AuthUtils'\nimport { selectCurrentUser } from 'store/slice/User/UserSelector'\n// import { getMe } from 'store/slice/User/UserActions'\nimport Header from './Header'\nimport LeftMenu from './LeftMenu'\nimport { IS_STANDALONE } from 'const/Mode'\n\nconst ignorePaths = ['/login', '/account-delete', '/reset-password']\n// const loginPaths = ['/login', '/reset-password']\n\nconst Layout: FC = ({ children }) => {\n  const user = useSelector(selectCurrentUser)\n  const location = useLocation()\n  const [open, setOpen] = useState(false)\n  // const navigate = useNavigate()\n  // const dispatch = useDispatch()\n\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n\n  useEffect(() => {\n    !IS_STANDALONE && checkAuth()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname, user])\n\n  const checkAuth = async () => {\n    // if (user) return\n    // const token = getToken()\n    // const isPageLogin = loginPaths.includes(window.location.pathname)\n    //\n    // try {\n    //   if (token) {\n    //     dispatch(getMe())\n    //     if (isPageLogin) navigate('/')\n    //     return\n    //   } else if (!isPageLogin) throw new Error('fail auth')\n    // } catch {\n    //   navigate('/login')\n    // }\n  }\n\n  return (\n    <LayoutWrapper>\n      {ignorePaths.includes(location.pathname) ? null : (\n        <Header handleDrawerOpen={handleDrawerOpen} />\n      )}\n      <ContentBodyWrapper>\n        {ignorePaths.includes(location.pathname) ? null : (\n          <LeftMenu open={open} handleDrawerClose={handleDrawerClose} />\n        )}\n        <ChildrenWrapper open={open}>\n          {children}\n        </ChildrenWrapper>\n      </ContentBodyWrapper>\n    </LayoutWrapper>\n  )\n}\n\nconst LayoutWrapper = styled(Box)({\n  height: '100%',\n  width: '100%',\n})\n\nconst ContentBodyWrapper = styled(Box)(() => ({\n  backgroundColor: '#ffffff',\n  display: 'flex',\n  paddingTop: 48,\n  height: 'calc(100% - 48px)',\n  paddingRight: 10,\n  overflow: 'hidden',\n}))\n\nconst ChildrenWrapper = styled('main', { shouldForwardProp: (prop) => prop !== 'open' })<{\n  open?: boolean;\n}>(({ theme, open }) => ({\n  flexGrow: 1,\n  padding: theme.spacing(3),\n  transition: theme.transitions.create('margin', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  }),\n}));\n\nexport default Layout\n","import { Fragment } from \"react\";\n\nconst ImageChart = ({data}: {data: string[] | string}) => {\n  if(!data) return null\n    return (\n        <Fragment>\n          <img\n              src={typeof data === 'string' ? data : data[0]}\n              alt={\"\"}\n              width={100}\n          />\n        </Fragment>\n    )\n}\n\nexport default ImageChart;\n","import CloseIcon from \"@mui/icons-material/Close\";\nimport {Box, styled} from \"@mui/material\";\n\ntype DialogImageProps = {\n  open: boolean\n  data?: string[] | string\n  handleCloseDialog: () => void\n}\n\nconst DialogImage = ({data, handleCloseDialog, open}: DialogImageProps) => {\n  if(!data) return <></>\n  return (\n      <>\n        {\n          open ? <DialogImageWrapper>\n            <DialogImageContentWrapper>\n              <DialogImageContent>\n                <Box\n                    sx={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      flexWrap: \"wrap\",\n                      gap: 2,\n                      margin: \"80px 50px\"\n                    }}\n                >\n                  {Array.isArray(data) ?\n                      data.filter(Boolean).map((item, index) => (\n                          <img\n                              key={index}\n                              src={item}\n                              alt={\"\"}\n                              width={150}\n                              height={150}\n                          />\n                      )) : null\n                  }\n                </Box>\n              </DialogImageContent>\n              <ButtonClose onClick={handleCloseDialog}>\n                <CloseIcon />\n              </ButtonClose>\n            </DialogImageContentWrapper>\n          </DialogImageWrapper> : null\n        }\n        </>\n  )\n}\n\nconst DialogImageWrapper = styled(Box)(({theme}) => ({\n  position: \"fixed\",\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  background: \"rgba(255,255,255,0.7)\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n}))\n\nconst DialogImageContentWrapper = styled(Box)(({theme}) => ({\n  position: \"relative\",\n  display: \"flex\",\n  background: \"#FFF\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"80%\",\n  height: \"80%\",\n  border: \"1px solid #000\",\n}))\n\nconst DialogImageContent = styled(Box)(({theme}) => ({\n  overflow: \"scroll\",\n  position: \"relative\",\n  flexWrap: \"wrap\",\n  display: \"flex\",\n  background: \"#FFF\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"100%\",\n  height: \"100%\",\n  // border: \"1px solid #000\",\n}))\n\nconst ButtonClose = styled(\"button\")(({theme}) => ({\n  border: \"1px solid #000\",\n  position: \"absolute\",\n  display: \"block\",\n  top: -20,\n  right: -20,\n  width: 40,\n  height: 40,\n  cursor: \"pointer\",\n  borderRadius: 50,\n  \"&:hover\": {\n    background: \"#8f8a8a\"\n  }\n}))\n\nexport default DialogImage;\n","import {Box, styled, TableBody, TableCell, TableHead, TableRow} from \"@mui/material\";\nimport ImageChart from \"./common/ImageChart\";\nimport {useState} from \"react\";\nimport DialogImage from \"./common/DialogImage\";\n\ntype ColumnData = {\n  label: string\n  minWidth?: number\n  maxWidth?: number\n  type?: \"image\"\n  key: string\n}\n\ntype Data = {\n  id: number\n  fields: {\n    brain_area: string,\n    cre_driver: string,\n    reporter_line: string,\n    imaging_depth: number\n  }\n  cell_image_urls: string[]\n  graph_urls: string[]\n  created_time: string\n  updated_time: string\n}\n\ntype NewData = {\n  id: number\n  brain_area: string,\n  cre_driver: string,\n  reporter_line: string,\n  imaging_depth: number\n  cell_image_urls: string[]\n  created_time: string\n  updated_time: string\n  plot1?: string\n  plot2?: string\n  plot3?: string\n  plot4?: string\n  plot5?: string\n}\n\nconst graphsTitle: string[] = [\"Plot1\", \"Plot2\", \"Plot3\", \"Plot4\", \"Plot5\"]\n\nconst columns: ColumnData[] = [\n  {\n    label: \"Brain area\",\n    minWidth: 70,\n    key: \"brain_area\"\n  },\n  {\n    label: \"Cre driver\",\n    minWidth: 70,\n    key: \"cre_driver\"\n  },\n  {\n    label: \"Reporter line\",\n    minWidth: 70,\n    key: \"reporter_line\"\n  },\n  {\n    label: \"Imaging depth\",\n    minWidth: 70,\n    key: \"imaging_depth\"\n  },\n  {\n    label: \"Pixel Image\",\n    minWidth: 70,\n    key: \"cell_image_urls\",\n    type: \"image\"\n  },\n]\n\nconst datas: Data[] = [\n  {\n    id: 0,\n    fields: {\n      brain_area: \"xxxx\",\n      cre_driver: \"xxxx\",\n      reporter_line: \"xxxx\",\n      imaging_depth: 0,\n    },\n    cell_image_urls: [\"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\"],\n    graph_urls: [\"/static/pie_chart.png\"],\n    created_time: \"2023-07-06T09:24:45.904Z\",\n    updated_time: \"2023-07-06T09:24:45.904Z\",\n  },\n  {\n    id: 1,\n    fields: {\n      brain_area: \"xxxx\",\n      cre_driver: \"xxxx\",\n      reporter_line: \"xxxx\",\n      imaging_depth: 0,\n    },\n    cell_image_urls: [\"/static/pixel_image.png\"],\n    graph_urls: [\"\"],\n    created_time: \"2023-07-06T09:24:45.904Z\",\n    updated_time: \"2023-07-06T09:24:45.904Z\",\n  },\n  {\n    id: 2,\n    fields: {\n      brain_area: \"xxxx\",\n      cre_driver: \"xxxx\",\n      reporter_line: \"xxxx\",\n      imaging_depth: 0,\n    },\n    cell_image_urls: [\"/static/pixel_image.png\"],\n    graph_urls: [\"/static/pie_chart.png\", \"/static/bar_chart.png\", \"/static/bar_chart.png\"],\n    created_time: \"2023-07-06T09:24:45.904Z\",\n    updated_time: \"2023-07-06T09:24:45.904Z\",\n  },\n  {\n    id: 3,\n    fields: {\n      brain_area: \"xxxx\",\n      cre_driver: \"xxxx\",\n      reporter_line: \"xxxx\",\n      imaging_depth: 0,\n    },\n    cell_image_urls: [\"/static/pixel_image.png\"],\n    graph_urls: [\"\"],\n    created_time: \"2023-07-06T09:24:45.904Z\",\n    updated_time: \"2023-07-06T09:24:45.904Z\",\n  },\n]\n\ntype TableBodyDataBaseProps = {\n  data: NewData\n  columns: ColumnData[]\n  handleOpenDialog: Function\n}\n\nconst TableHeaderCells = ({columns}: {columns: ColumnData[]}) => {\n  return (\n      <TableHead>\n        <TableRow>\n          {\n            columns.map((item) => (\n                    <TableCellCustom\n                        key={item.key}\n                        checkHead={item.label.toLowerCase().includes(\"plot\")}\n                        sx={{\n                          minWidth: item.minWidth,\n                        }}\n                    >\n                      <span>{item.label}</span>\n                    </TableCellCustom>\n                )\n            )}\n        </TableRow>\n      </TableHead>\n  )\n}\n\nconst TableBodyDataBaseCells = ({data, columns, handleOpenDialog}: TableBodyDataBaseProps) => {\n\n  return (\n      <TableBody>\n        <TableRow>\n          {\n            columns.map((column) => {\n              let record = data[column.key as keyof NewData]\n              if(column.key === \"attributes\"){\n                record = JSON.stringify(record)\n              }\n              return (\n                  <TableCell key={column.key}>\n                    { column.type === \"image\" ?\n                        <Box\n                            onClick={() => column.key === \"cell_image_urls\" && handleOpenDialog(record)}\n                            sx={{ cursor: record && (record as string[]).length > 1 ? \"pointer\" : \"auto\" }}\n                        >\n                          <ImageChart\n                              data={record as (string | string[])}\n                          />\n                        </Box>:\n                        record\n                    }\n                  </TableCell>\n              )\n            })\n          }\n        </TableRow>\n      </TableBody>\n  )\n}\n\nconst DatabaseCells = () => {\n  const [openDialog, setOpenDialog] = useState(false)\n  const [dataDialog, setDataDialog] = useState<string[]>()\n\n  const handleOpenDialog = (data: string[]) => {\n    if(data.length === 1) return\n    setOpenDialog(true)\n    setDataDialog(data)\n  }\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false)\n  }\n\n  const getColumns: ColumnData[] = graphsTitle.map((graphTitle) => ({\n        label: graphTitle,\n        minWidth: 70,\n        key: graphTitle,\n        type: \"image\"\n      }\n  ))\n\n  return (\n      <DatabaseCellsWrapper>\n        <TableHeaderCells columns={[...columns, ...getColumns]} />\n        {\n          datas.map((data) => {\n            const { fields, graph_urls, ...newData } = data\n            let dataPlot: {[key: string]: string} = {}\n            graph_urls.forEach((graph_url, index) => {\n              dataPlot[graphsTitle[index]] = graph_url\n            })\n            return (\n                <TableBodyDataBaseCells\n                    key={data.id}\n                    handleOpenDialog={handleOpenDialog}\n                    data={{...newData, ...fields, ...dataPlot}}\n                    columns={[...columns, ...getColumns]}\n                />\n            )\n          })\n        }\n            <DialogImage\n                open={openDialog}\n                data={dataDialog}\n                handleCloseDialog={handleCloseDialog}\n            />\n      </DatabaseCellsWrapper>\n  )\n}\n\nconst DatabaseCellsWrapper = styled(\"table\")(({theme}) => ({\n  width: \"100vw\",\n  height: \"auto\",\n  overflow: \"scroll\"\n}))\n\nconst TableCellCustom = styled(TableCell, {\n  shouldForwardProp: props => props !== \"checkHead\"\n})<{ checkHead: boolean }>(({theme, checkHead}) => ({\n  color: \"#FFF\",\n  background: !checkHead ? \"#99dd99\" : \"#99dadd\",\n  borderLeft: `1px solid #FFF`,\n  fontWeight: 700\n}))\n\nexport default DatabaseCells;\n","import { TableCell, Box, TableHead, TableRow, TableBody, styled } from \"@mui/material\";\nimport ImageChart from \"./common/ImageChart\";\nimport {useRef, useState} from \"react\";\nimport DialogImage from \"./common/DialogImage\";\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\n\ntype ColumnData = {\n  label: string\n  minWidth?: number\n  maxWidth?: number\n  type?: \"image\"\n  key: string\n}\n\ntype Data = {\n  id: number\n  fields: {\n    brain_area: string,\n    cre_driver: string,\n    reporter_line: string,\n    imaging_depth: number\n  }\n  experiment_id: string\n  attributes: string\n  cell_image_urls: string[]\n  graph_urls: string[]\n  created_time: string\n  updated_time: string\n}\n\ntype NewData = {\n  id: number\n  brain_area: string,\n  cre_driver: string,\n  reporter_line: string,\n  imaging_depth: number\n  experiment_id: string\n  attributes: string\n  cell_image_urls: string[]\n  created_time: string\n  updated_time: string\n  plot1?: string\n  plot2?: string\n  plot3?: string\n  plot4?: string\n  plot5?: string\n}\n\n// type PaginationType = {\n//   page: number\n//   limit: number\n//   total: number\n//   total_pages: number\n// }\n\n// const Pagination: PaginationType = {\n//     page: 0,\n//     limit: 4,\n//     total: 8,\n//     total_pages: 2\n// }\n\nconst graphsTitle: string[] = [\"Plot1\", \"Plot2\", \"Plot3\", \"Plot4\", \"Plot5\"]\n\nconst columns: ColumnData[] = [\n  {\n    label: \"Experiment ID\",\n    minWidth: 70,\n    key: \"experiment_id\"\n  },\n  {\n    label: \"Brain area\",\n    minWidth: 70,\n    key: \"brain_area\"\n  },\n  {\n    label: \"Cre driver\",\n    minWidth: 70,\n    key: \"cre_driver\"\n  },\n  {\n    label: \"Reporter line\",\n    minWidth: 70,\n    key: \"reporter_line\"\n  },\n  {\n    label: \"Imaging depth\",\n    minWidth: 70,\n    key: \"imaging_depth\"\n  },\n  {\n    label: \"Attributes\",\n    minWidth: 70,\n    key: \"attributes\"\n  },\n  {\n    label: \"Cells\",\n    minWidth: 70,\n    key: \"cells\",\n  },\n  {\n    label: \"Pixel Image\",\n    minWidth: 70,\n    key: \"cell_image_urls\",\n    type: \"image\"\n  },\n]\n\nconst datas: Data[] = [\n  {\n    id: 0,\n    experiment_id: \"xxxx\",\n    fields: {\n      brain_area: \"xxxx\",\n      cre_driver: \"xxxx\",\n      reporter_line: \"xxxx\",\n      imaging_depth: 0,\n    },\n    attributes: '{13}',\n    cell_image_urls: [\"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\"],\n    graph_urls: [\"/static/pie_chart.png\"],\n    created_time: \"2023-07-06T09:24:45.904Z\",\n    updated_time: \"2023-07-06T09:24:45.904Z\",\n  },\n  {\n    id: 1,\n    experiment_id: \"xxxx\",\n    fields: {\n      brain_area: \"xxxx\",\n      cre_driver: \"xxxx\",\n      reporter_line: \"xxxx\",\n      imaging_depth: 0,\n    },\n    attributes: \"{}\",\n    cell_image_urls: [\"/static/pixel_image.png\"],\n    graph_urls: [\"\"],\n    created_time: \"2023-07-06T09:24:45.904Z\",\n    updated_time: \"2023-07-06T09:24:45.904Z\",\n  },\n  {\n    id: 2,\n    experiment_id: \"xxxx\",\n    fields: {\n      brain_area: \"xxxx\",\n      cre_driver: \"xxxx\",\n      reporter_line: \"xxxx\",\n      imaging_depth: 0,\n    },\n    attributes: \"{}\",\n    cell_image_urls: [\"/static/pixel_image.png\"],\n    graph_urls: [\"/static/pie_chart.png\", \"/static/bar_chart.png\", \"/static/bar_chart.png\"],\n    created_time: \"2023-07-06T09:24:45.904Z\",\n    updated_time: \"2023-07-06T09:24:45.904Z\",\n  },\n  {\n    id: 3,\n    experiment_id: \"xxxx\",\n    fields: {\n      brain_area: \"xxxx\",\n      cre_driver: \"xxxx\",\n      reporter_line: \"xxxx\",\n      imaging_depth: 0,\n    },\n    attributes: \"{}\",\n    cell_image_urls: [\"/static/pixel_image.png\"],\n    graph_urls: [\"\"],\n    created_time: \"2023-07-06T09:24:45.904Z\",\n    updated_time: \"2023-07-06T09:24:45.904Z\",\n  },\n  {\n    id: 4,\n    experiment_id: \"xxxx\",\n    fields: {\n      brain_area: \"xxxx\",\n      cre_driver: \"xxxx\",\n      reporter_line: \"xxxx\",\n      imaging_depth: 0,\n    },\n    attributes: '{13}',\n    cell_image_urls: [\"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\"],\n    graph_urls: [\"/static/pie_chart.png\"],\n    created_time: \"2023-07-06T09:24:45.904Z\",\n    updated_time: \"2023-07-06T09:24:45.904Z\",\n  },\n  {\n    id: 5,\n    experiment_id: \"xxxx\",\n    fields: {\n      brain_area: \"xxxx\",\n      cre_driver: \"xxxx\",\n      reporter_line: \"xxxx\",\n      imaging_depth: 0,\n    },\n    attributes: \"{}\",\n    cell_image_urls: [\"/static/pixel_image.png\"],\n    graph_urls: [\"\"],\n    created_time: \"2023-07-06T09:24:45.904Z\",\n    updated_time: \"2023-07-06T09:24:45.904Z\",\n  },\n  {\n    id: 6,\n    experiment_id: \"xxxx\",\n    fields: {\n      brain_area: \"xxxx\",\n      cre_driver: \"xxxx\",\n      reporter_line: \"xxxx\",\n      imaging_depth: 0,\n    },\n    attributes: \"{}\",\n    cell_image_urls: [\"/static/pixel_image.png\"],\n    graph_urls: [\"/static/pie_chart.png\", \"/static/bar_chart.png\", \"/static/bar_chart.png\"],\n    created_time: \"2023-07-06T09:24:45.904Z\",\n    updated_time: \"2023-07-06T09:24:45.904Z\",\n  },\n  {\n    id: 7,\n    experiment_id: \"xxxx\",\n    fields: {\n      brain_area: \"xxxx\",\n      cre_driver: \"xxxx\",\n      reporter_line: \"xxxx\",\n      imaging_depth: 0,\n    },\n    attributes: \"{}\",\n    cell_image_urls: [\"/static/pixel_image.png\"],\n    graph_urls: [\"\"],\n    created_time: \"2023-07-06T09:24:45.904Z\",\n    updated_time: \"2023-07-06T09:24:45.904Z\",\n  },\n  {\n    id: 8,\n    experiment_id: \"xxxx\",\n    fields: {\n      brain_area: \"xxxx\",\n      cre_driver: \"xxxx\",\n      reporter_line: \"xxxx\",\n      imaging_depth: 0,\n    },\n    attributes: '{13}',\n    cell_image_urls: [\"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\"],\n    graph_urls: [\"/static/pie_chart.png\"],\n    created_time: \"2023-07-06T09:24:45.904Z\",\n    updated_time: \"2023-07-06T09:24:45.904Z\",\n  },\n  {\n    id: 9,\n    experiment_id: \"xxxx\",\n    fields: {\n      brain_area: \"xxxx\",\n      cre_driver: \"xxxx\",\n      reporter_line: \"xxxx\",\n      imaging_depth: 0,\n    },\n    attributes: \"{}\",\n    cell_image_urls: [\"/static/pixel_image.png\"],\n    graph_urls: [\"\"],\n    created_time: \"2023-07-06T09:24:45.904Z\",\n    updated_time: \"2023-07-06T09:24:45.904Z\",\n  },\n  {\n    id: 10,\n    experiment_id: \"xxxx\",\n    fields: {\n      brain_area: \"xxxx\",\n      cre_driver: \"xxxx\",\n      reporter_line: \"xxxx\",\n      imaging_depth: 0,\n    },\n    attributes: \"{}\",\n    cell_image_urls: [\"/static/pixel_image.png\"],\n    graph_urls: [\"/static/pie_chart.png\", \"/static/bar_chart.png\", \"/static/bar_chart.png\"],\n    created_time: \"2023-07-06T09:24:45.904Z\",\n    updated_time: \"2023-07-06T09:24:45.904Z\",\n  },\n  {\n    id: 11,\n    experiment_id: \"xxxx\",\n    fields: {\n      brain_area: \"xxxx\",\n      cre_driver: \"xxxx\",\n      reporter_line: \"xxxx\",\n      imaging_depth: 0,\n    },\n    attributes: \"{}\",\n    cell_image_urls: [\"/static/pixel_image.png\"],\n    graph_urls: [\"\"],\n    created_time: \"2023-07-06T09:24:45.904Z\",\n    updated_time: \"2023-07-06T09:24:45.904Z\",\n  },\n  {\n    id: 12,\n    experiment_id: \"xxxx\",\n    fields: {\n      brain_area: \"xxxx\",\n      cre_driver: \"xxxx\",\n      reporter_line: \"xxxx\",\n      imaging_depth: 0,\n    },\n    attributes: \"{}\",\n    cell_image_urls: [\"/static/pixel_image.png\"],\n    graph_urls: [\"/static/pie_chart.png\", \"/static/bar_chart.png\", \"/static/bar_chart.png\"],\n    created_time: \"2023-07-06T09:24:45.904Z\",\n    updated_time: \"2023-07-06T09:24:45.904Z\",\n  },\n  {\n    id: 13,\n    experiment_id: \"xxxx\",\n    fields: {\n      brain_area: \"xxxx\",\n      cre_driver: \"xxxx\",\n      reporter_line: \"xxxx\",\n      imaging_depth: 0,\n    },\n    attributes: \"{}\",\n    cell_image_urls: [\"/static/pixel_image.png\"],\n    graph_urls: [\"\"],\n    created_time: \"2023-07-06T09:24:45.904Z\",\n    updated_time: \"2023-07-06T09:24:45.904Z\",\n  },\n  {\n    id: 14,\n    experiment_id: \"xxxx\",\n    fields: {\n      brain_area: \"xxxx\",\n      cre_driver: \"xxxx\",\n      reporter_line: \"xxxx\",\n      imaging_depth: 0,\n    },\n    attributes: '{13}',\n    cell_image_urls: [\"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\", \"/static/pixel_image.png\"],\n    graph_urls: [\"/static/pie_chart.png\"],\n    created_time: \"2023-07-06T09:24:45.904Z\",\n    updated_time: \"2023-07-06T09:24:45.904Z\",\n  },\n  {\n    id: 15,\n    experiment_id: \"xxxx\",\n    fields: {\n      brain_area: \"xxxx\",\n      cre_driver: \"xxxx\",\n      reporter_line: \"xxxx\",\n      imaging_depth: 0,\n    },\n    attributes: \"{}\",\n    cell_image_urls: [\"/static/pixel_image.png\"],\n    graph_urls: [\"\"],\n    created_time: \"2023-07-06T09:24:45.904Z\",\n    updated_time: \"2023-07-06T09:24:45.904Z\",\n  },\n  {\n    id: 16,\n    experiment_id: \"xxxx\",\n    fields: {\n      brain_area: \"xxxx\",\n      cre_driver: \"xxxx\",\n      reporter_line: \"xxxx\",\n      imaging_depth: 0,\n    },\n    attributes: \"{}\",\n    cell_image_urls: [\"/static/pixel_image.png\"],\n    graph_urls: [\"/static/pie_chart.png\", \"/static/bar_chart.png\", \"/static/bar_chart.png\", \"/static/pie_chart.png\", \"/static/bar_chart.png\"],\n    created_time: \"2023-07-06T09:24:45.904Z\",\n    updated_time: \"2023-07-06T09:24:45.904Z\",\n  },\n  {\n    id: 17,\n    experiment_id: \"xxxx\",\n    fields: {\n      brain_area: \"xxxx\",\n      cre_driver: \"xxxx\",\n      reporter_line: \"xxxx\",\n      imaging_depth: 0,\n    },\n    attributes: \"{}\",\n    cell_image_urls: [\"/static/pixel_image.png\"],\n    graph_urls: [\"\"],\n    created_time: \"2023-07-06T09:24:45.904Z\",\n    updated_time: \"2023-07-06T09:24:45.904Z\",\n  },\n]\n\ntype TableBodyDataBaseProps = {\n  data: NewData\n  columns: ColumnData[]\n  handleOpenDialog: Function\n  handleOpenAttributes: Function\n  setTypeTable: (type: string) => void\n}\n\ntype PopupAttributesProps = {\n  data: string\n  open: boolean\n  handleClose: () => void\n}\n\nconst PopupAttributes = ({data, open, handleClose}: PopupAttributesProps) => {\n  return (\n      <Box>\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"draggable-dialog-title\"\n        >\n          <DialogContent sx={{ minWidth: 200}}>\n            <DialogContentText>\n              {data}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button autoFocus onClick={handleClose}>Close</Button>\n          </DialogActions>\n        </Dialog>\n      </Box>\n  )\n}\n\nconst TableHeader = ({columns}: {columns: ColumnData[]}) => {\n  return (\n      <TableHead>\n          <TableRow>\n            {\n              columns.map((item) => (\n                    <TableCellCustom\n                        key={item.key}\n                        checkHead={item.label.toLowerCase().includes(\"plot\")}\n                        sx={{\n                          minWidth: item.minWidth,\n                        }}\n                    >\n                      <span>{item.label}</span>\n                    </TableCellCustom>\n                )\n              )}\n          </TableRow>\n      </TableHead>\n  )\n}\n\nconst TableBodyDataBase =\n    ({\n       data,\n       columns,\n       handleOpenDialog,\n       handleOpenAttributes,\n       setTypeTable\n    }: TableBodyDataBaseProps) => {\n\n  const handleClick = (key: string, record?: string | number | object | string[]) => {\n    if(key === \"cell_image_urls\") {\n      handleOpenDialog(record)\n      return\n    }\n    if(key === \"cells\") {\n      setTypeTable(\"cells\")\n      return\n    }\n    if(key === \"attributes\") {\n      handleOpenAttributes(record)\n    }\n  }\n\n  return (\n      <TableBody>\n        <TableRow>\n          {\n            columns.map((column) => {\n                let record = data[column.key as keyof NewData]\n                return (\n                  <TableCell key={column.key}>\n                        <Box\n                          onClick={() => handleClick(column.key, record)}\n                          sx={{ cursor:\n                                (record && Array.isArray(record) && (record as string[]).length > 1) ||\n                                column.key === \"cells\" ||\n                                column.key === \"attributes\"\n                                    ? \"pointer\" : \"auto\" }}\n                        >\n                          { column.type === \"image\" ?\n                          <ImageChart data={record as (string | string[])} />\n                          : column.key === \"cells\" ? <LaunchIcon /> : record\n                          }\n                        </Box>\n                  </TableCell>\n                )\n              })\n          }\n        </TableRow>\n      </TableBody>\n  )\n}\n\nconst DatabaseExperiments = ({setTypeTable}: {setTypeTable: (type: string) => void}) => {\n  const [dataTable, setDataTable] = useState<Data[]>(datas.slice(0,6))\n  const [count, setCount] = useState(6)\n  const [openDialog, setOpenDialog] = useState(false)\n  const [openAttributes, setOpenAttributes] = useState(false)\n  const [dataDialog, setDataDialog] = useState<string[] | string>()\n  const refTable = useRef<HTMLTableElement | null>(null)\n  const ref = useRef<HTMLDivElement | null>(null)\n\n  const handleOpenDialog = (data: string[]) => {\n    if(data.length === 1) return\n    setOpenDialog(true)\n    setDataDialog(data)\n  }\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false)\n  }\n\n  const handleOpenAttributes = (data: string) => {\n    setDataDialog(data)\n    setOpenAttributes(true)\n  }\n\n  const handleCloseAttributes = () => {\n    setOpenAttributes(false)\n  }\n\n  const handleScroll = (event: any) => {\n    if(!ref.current || !refTable.current) return\n    if(event.currentTarget.scrollTop + ref.current?.clientHeight === refTable.current?.clientHeight) {\n      setCount(12)\n      setDataTable([...dataTable, ...datas.slice(count, count + 6)])\n    }\n  }\n\n  const getColumns: ColumnData[] = graphsTitle.map((graphTitle) => ({\n          label: graphTitle,\n          minWidth: 70,\n          key: graphTitle,\n          type: \"image\"\n        }\n  ))\n\n  return(\n  <DataBaseExperimentsWrapper\n    onScroll={handleScroll}\n    ref={ref}\n  >\n    <DataBaseExperimentsTableWrapper ref={refTable}>\n    <TableHeader columns={[...columns, ...getColumns]} />\n    {\n      dataTable.map((data) => {\n        const { fields, graph_urls, ...newData } = data\n        let dataPlot: {[key: string]: string} = {}\n        graph_urls.forEach((graph_url, index) => {\n          dataPlot[graphsTitle[index]] = graph_url\n        })\n        return (\n            <TableBodyDataBase\n                key={data.id}\n                setTypeTable={setTypeTable}\n                handleOpenAttributes={handleOpenAttributes}\n                handleOpenDialog={handleOpenDialog}\n                data={{...newData, ...fields, ...dataPlot}}\n                columns={[...columns, ...getColumns]}\n            />\n        )\n      })\n    }\n    <DialogImage\n        open={openDialog}\n        data={dataDialog}\n        handleCloseDialog={handleCloseDialog}\n    />\n    <PopupAttributes\n        data={dataDialog as string}\n        open={openAttributes}\n        handleClose={handleCloseAttributes}\n    />\n    </DataBaseExperimentsTableWrapper>\n  </DataBaseExperimentsWrapper>\n  )\n}\n\nconst DataBaseExperimentsWrapper = styled(Box)(({theme}) => ({\n  width: \"100%\",\n  height: \"calc(100vh - 165px)\",\n  overflow: \"scroll\",\n  border: \"1px solid #000\"\n}))\n\nconst DataBaseExperimentsTableWrapper = styled(\"table\")(({theme}) => ({\n  width: \"100%\",\n  height: \"100%\",\n  overflow: \"scroll\",\n}))\n\nconst TableCellCustom = styled(TableCell, {\n  shouldForwardProp: props => props !== \"checkHead\"\n})<{ checkHead: boolean }>(({theme, checkHead}) => ({\n  color: \"#FFF\",\n  background: !checkHead ? \"#99dd99\" : \"#99dadd\",\n  borderLeft: `1px solid #FFF`,\n  fontWeight: 700\n}))\n\nexport default DatabaseExperiments;\n","import {Box, styled} from \"@mui/material\";\nimport {useState} from \"react\";\nimport DatabaseCells from \"./DatabaseCells\";\nimport DatabaseExperiments from \"./DatabaseExperiments\";\n\nconst DatabasePublic = () => {\n  const [typeTable, setTypeTable] = useState(\"experiments\")\n\n  const handleTypeTable = (type: string) => {\n    if(typeTable === type ) return\n    setTypeTable(type)\n  }\n\n  return (\n      <DataBasePublicWrapper>\n        <Switch>\n          <ButtonExperiments\n              onClick={() => handleTypeTable(\"experiments\")}\n              sx={{ fontWeight: typeTable === \"experiments\" ? 600 : 400}}\n          >\n            Experiments\n          </ButtonExperiments>\n          /\n          <ButtonCells\n              onClick={() => handleTypeTable(\"cells\")}\n              sx={{ fontWeight: typeTable === \"cells\" ? 600 : 400}}\n          >\n            Cells\n          </ButtonCells>\n        </Switch>\n        <DataBasePublicContent>\n          {\n            typeTable === \"experiments\" ? <DatabaseExperiments setTypeTable={setTypeTable} /> : <DatabaseCells />\n          }\n        </DataBasePublicContent>\n      </DataBasePublicWrapper>\n  )\n}\n\nconst DataBasePublicWrapper = styled(Box)(({theme}) => ({\n  marginTop: theme.spacing(6),\n}))\n\nconst Switch = styled(Box)(({theme}) => ({\n\n}))\n\nconst ButtonExperiments = styled('span')(({theme}) => ({\n  display: \"inline-block\",\n  cursor: \"pointer\",\n  minWidth: 100\n}))\n\nconst ButtonCells = styled('span')(({theme}) => ({\n  cursor: \"pointer\",\n  marginLeft: 5\n}))\n\nconst DataBasePublicContent = styled(Box)(({theme}) => ({\n  width: \"94vw\",\n  margin: \"auto\",\n  marginTop: 15\n}))\n\nexport default DatabasePublic;","import React from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport Close from '@mui/icons-material/Close'\nimport { SnackbarProvider, SnackbarKey, useSnackbar } from 'notistack'\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\nimport Dashboard from 'pages/Dashboard'\nimport Account from 'pages/Account'\nimport AccountDelete from 'pages/AccountDelete'\nimport Login from 'pages/Login'\nimport ResetPassword from 'pages/ResetPassword'\nimport Workspaces from 'pages/Workspace'\nimport Workspace from 'pages/Workspace/Workspace'\nimport { IS_STANDALONE } from 'const/Mode'\nimport Layout from \"components/Layout\";\nimport DatabasePublic from \"./components/DatabasePublic\";\n\nconst App: React.FC = () => {\n  return (\n    <SnackbarProvider\n      maxSnack={5}\n      action={(snackbarKey) => (\n        <SnackbarCloseButton snackbarKey={snackbarKey} />\n      )}\n    >\n      <BrowserRouter>\n        <Layout>\n          {IS_STANDALONE ? (\n            <Routes>\n              <Route path=\"/\" element={<Workspace />} />\n            </Routes>\n          ) : (\n            <Routes>\n              <Route path=\"/\" element={<Dashboard />} />\n              <Route path=\"/account\" element={<Account />} />\n              <Route path=\"/account-deleted\" element={<AccountDelete />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/reset-password\" element={<ResetPassword />} />\n              <Route path=\"/public-database\" element={<DatabasePublic />} />\n              <Route path=\"/workspaces\">\n                <Route path=\"\" element={<Workspaces />} />\n                <Route path=\":workspaceId\" element={<Workspace />} />\n              </Route>\n            </Routes>\n          )}\n        </Layout>\n      </BrowserRouter>\n    </SnackbarProvider>\n  )\n}\n\nconst SnackbarCloseButton: React.FC<{ snackbarKey: SnackbarKey }> = ({\n  snackbarKey,\n}) => {\n  const { closeSnackbar } = useSnackbar()\n  return (\n    <IconButton onClick={() => closeSnackbar(snackbarKey)} size=\"large\">\n      <Close style={{ color: 'white' }} />\n    </IconButton>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  ALGORITHM_LIST_SLICE_NAME,\n  AlgorithmListType,\n} from './AlgorithmListType'\nimport { getAlgoList } from './AlgorithmListActions'\nimport { convertToAlgoListType } from './AlgorithmListUtils'\n\nexport const initialState: AlgorithmListType = {\n  isLatest: false,\n  tree: {},\n}\n\nexport const algorithmListSlice = createSlice({\n  name: ALGORITHM_LIST_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlgoList.fulfilled, (state, action) => {\n      state.tree = convertToAlgoListType(action.payload)\n      state.isLatest = true\n    })\n  },\n})\n\nexport default algorithmListSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n  DisplayData,\n  DISPLAY_DATA_SLICE_NAME,\n} from './DisplayDataType'\nimport {\n  getCsvData,\n  getHeatMapData,\n  getImageData,\n  getTimeSeriesDataById,\n  getTimeSeriesAllData,\n  getRoiData,\n  getScatterData,\n  getBarData,\n  getHTMLData,\n  getTimeSeriesInitData,\n} from './DisplayDataActions'\nimport {\n  deleteDisplayItem,\n  setNewDisplayDataPath,\n} from '../VisualizeItem/VisualizeItemActions'\n\nconst initialState: DisplayData = {\n  timeSeries: {},\n  heatMap: {},\n  image: {},\n  csv: {},\n  roi: {},\n  scatter: {},\n  bar: {},\n  html: {},\n}\n\nexport const displayDataSlice = createSlice({\n  name: DISPLAY_DATA_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        if (action.payload.deleteData) {\n          const { filePath, dataType } = action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        if (action.payload.deleteData) {\n          const { prevDataType: dataType, prevFilePath: filePath } =\n            action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(getTimeSeriesDataById.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesDataById.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesDataById.fulfilled, (state, action) => {\n        const { path, index } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].data[index] = action.payload.data[index]\n        if (action.payload.std[index] !== undefined) {\n          state.timeSeries[path].std[index] = action.payload.std[index]\n        }\n      })\n      .addCase(getTimeSeriesAllData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesAllData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesAllData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        if (action.payload.std !== undefined) {\n          state.timeSeries[path].std = action.payload.std\n        }\n      })\n      .addCase(getTimeSeriesInitData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesInitData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesInitData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        state.timeSeries[path].std = action.payload.std\n      })\n      .addCase(getHeatMapData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHeatMapData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getImageData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getCsvData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getRoiData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getRoiData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        const { data } = action.payload\n\n        // 計算\n        const roi1Ddata: number[] = data[0]\n          .map((row) =>\n            Array.from(new Set(row.filter((value) => value != null))),\n          )\n          .flat()\n        const roiUniqueIdList = Array.from(new Set(roi1Ddata))\n          .sort((n1, n2) => n1 - n2)\n          .map(String)\n\n        state.roi[path] = {\n          type: 'roi',\n          data: data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n          roiUniqueList: roiUniqueIdList,\n        }\n      })\n      .addCase(getRoiData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getScatterData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getBarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n  },\n})\n\nfunction deleteDisplayDataFn(\n  state: DisplayData,\n  filePath: string,\n  dataType: DATA_TYPE,\n) {\n  if (dataType === DATA_TYPE_SET.IMAGE) {\n    delete state.image[filePath]\n  } else if (dataType === DATA_TYPE_SET.TIME_SERIES) {\n    delete state.timeSeries[filePath]\n  } else if (dataType === DATA_TYPE_SET.CSV) {\n    delete state.csv[filePath]\n  } else if (dataType === DATA_TYPE_SET.HEAT_MAP) {\n    delete state.heatMap[filePath]\n    // } else if (dataType === DATA_TYPE_SET.ROI) {\n    //   delete state.roi[filePath]\n  } else if (dataType === DATA_TYPE_SET.SCATTER) {\n    delete state.scatter[filePath]\n  } else if (dataType === DATA_TYPE_SET.BAR) {\n    delete state.bar[filePath]\n  } else if (dataType === DATA_TYPE_SET.HTML) {\n    delete state.html[filePath]\n  }\n}\n\nexport default displayDataSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { FileUploader, FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\nimport { setUploadProgress, uploadFile } from './FileUploaderActions'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nconst initialState: FileUploader = {}\n\nexport const fileUploaderSlice = createSlice({\n  name: FILE_UPLOADER_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFileUploaderStateById(state, action: PayloadAction<string>) {\n      state[action.payload] = inistialUploaderState\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(setUploadProgress, (state, action) => {\n        const { progess, requestId } = action.payload\n        state[requestId].uploadingProgress = progess\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileName, requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          fileName,\n          isUninitialized: false,\n          pending: true,\n          fulfilled: false,\n          uploadingProgress: 0,\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { requestId } = action.meta.arg\n        const { resultPath } = action.payload\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          path: resultPath,\n          pending: false,\n          fulfilled: true,\n        }\n      })\n      .addCase(uploadFile.rejected, (state, action) => {\n        const { requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          pending: false,\n          fulfilled: false,\n          error: action.error.message,\n        }\n      })\n  },\n})\n\nexport const { setFileUploaderStateById } = fileUploaderSlice.actions\n\nexport default fileUploaderSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { uploadFile } from 'store/slice/FileUploader/FileUploaderActions'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { getFilesTree } from './FilesTreeAction'\nimport { FilesTree, FILES_TREE_SLICE_NAME } from './FilesTreeType'\nimport { convertToTreeNodeType } from './FilesTreeUtils'\n\nexport const initialState: FilesTree = {}\nexport const filesTreeSlice = createSlice({\n  name: FILES_TREE_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getFilesTree.pending, (state, action) => {\n        const fileType = action.meta.arg\n        state[fileType] = {\n          isLoading: true,\n          isLatest: false,\n          tree: [],\n        }\n      })\n      .addCase(getFilesTree.fulfilled, (state, action) => {\n        const fileTreeType = action.meta.arg\n        state[fileTreeType].tree = convertToTreeNodeType(action.payload)\n        state[fileTreeType].isLatest = true\n        state[fileTreeType].isLoading = false\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          if (state[FILE_TREE_TYPE_SET.IMAGE] != null) {\n            state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.IMAGE] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          if (state[FILE_TREE_TYPE_SET.CSV] != null) {\n            state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.CSV] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          if (state[FILE_TREE_TYPE_SET.HDF5] != null) {\n            state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.HDF5] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else {\n          if (state[FILE_TREE_TYPE_SET.ALL] != null) {\n            state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.ALL] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n        } else {\n          state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n        }\n      })\n  },\n})\n\nexport default filesTreeSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as MuiColors from '@mui/material/colors'\n\nexport type HandleTypeColor = {\n  colorMap: { [type: string]: string }\n  /**\n   * HANDLE_COLOR_PRESET_MAPのkey\n   */\n  nextKey: number\n}\n\nconst initialState: HandleTypeColor = {\n  colorMap: {\n    ImageData: MuiColors.red[500],\n    IscellData: MuiColors.indigo[500],\n    TimeSeriesData: MuiColors.yellow[500],\n    Suite2pData: MuiColors.green[500],\n    FluoData: MuiColors.orange[500],\n    BehaviorData: MuiColors.yellow[500],\n  },\n  nextKey: 0,\n}\n\nconst SLICE_NAME = 'handleTypeColor'\n\nexport const handleTypeColorSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {},\n})\n\nexport default handleTypeColorSlice.reducer\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\nimport { HDF5TreeNodeType } from './HDF5Type'\n\nexport function convertToTreeNodeType(dto: HDF5TreeDTO[]): HDF5TreeNodeType[] {\n  return dto.map((node) =>\n    node.isDir\n      ? {\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n          path: node.path,\n        }\n      : {\n          name: node.name,\n          isDir: false,\n          shape: node.shape,\n          path: node.path,\n          nbytes: node.nbytes,\n        },\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { getHDF5Tree } from './HDF5Action'\nimport { HDF5Tree, HDF5_SLICE_NAME } from './HDF5Type'\nimport { convertToTreeNodeType } from './HDF5Utils'\n\nconst initialState: HDF5Tree = {\n  isLoading: false,\n  tree: [],\n}\nexport const HDF5Slice = createSlice({\n  name: HDF5_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHDF5Tree.pending, (state, action) => {\n        state = {\n          isLoading: true,\n          tree: [],\n        }\n      })\n      .addCase(getHDF5Tree.fulfilled, (state, action) => {\n        state.tree = convertToTreeNodeType(action.payload)\n        state.isLoading = false\n      })\n  },\n})\n\nexport default HDF5Slice.reducer\n","import type { ExperimentDTO, ExperimentsDTO } from 'api/experiments/Experiments'\nimport type {\n  ExperimentListType,\n  ExperimentType,\n  ExperimentFunction,\n  EXPERIMENTS_STATUS,\n} from './ExperimentsType'\n\nexport function convertToExperimentListType(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n\nexport function convertToExperimentType(dto: ExperimentDTO): ExperimentType {\n  const functions: { [nodeId: string]: ExperimentFunction } = {}\n  Object.entries(dto.function).forEach(([_, value]) => {\n    functions[value.unique_id] = {\n      name: value.name,\n      nodeId: value.unique_id,\n      status: convertToExperimentStatus(value.success),\n      hasNWB: value.hasNWB,\n    }\n  })\n  return {\n    uid: dto.unique_id,\n    timestamp: dto.started_at,\n    status: dto.success,\n    name: dto.name,\n    hasNWB: dto.hasNWB,\n    functions,\n  }\n}\n\nfunction convertToExperimentStatus(dto: string): EXPERIMENTS_STATUS {\n  switch (dto) {\n    case 'running':\n      return 'running'\n    case 'success':\n      return 'success'\n    case 'error':\n      return 'error'\n    default:\n      throw new Error('failed to convert to EXPERIMENTS_STATUS')\n  }\n}\n\nexport function convertToFlowChartList(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { EXPERIMENTS_SLICE_NAME, Experiments } from './ExperimentsType'\nimport {\n  getExperiments,\n  deleteExperimentByUid,\n  deleteExperimentByList,\n} from './ExperimentsActions'\nimport { convertToExperimentListType } from './ExperimentsUtils'\nimport {\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from '../Pipeline/PipelineActions'\n\nexport const initialState: Experiments = {\n  status: 'uninitialized',\n}\n\nexport const experimentsSlice = createSlice({\n  name: EXPERIMENTS_SLICE_NAME,\n  initialState: initialState as Experiments,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getExperiments.pending, () => {\n        return {\n          status: 'pending',\n        }\n      })\n      .addCase(getExperiments.fulfilled, (state, action) => {\n        const experimentList = convertToExperimentListType(action.payload)\n        return {\n          status: 'fulfilled',\n          experimentList,\n        }\n      })\n      .addCase(getExperiments.rejected, (state, action) => {\n        return {\n          status: 'error',\n          message: action.error.message,\n        }\n      })\n      .addCase(deleteExperimentByUid.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          delete state.experimentList[action.meta.arg]\n        }\n      })\n      .addCase(deleteExperimentByList.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          action.meta.arg.map((v) => delete state.experimentList[v])\n        }\n      })\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          const uid = action.meta.arg.uid\n          const target = state.experimentList[uid]\n          Object.entries(action.payload).forEach(([nodeId, value]) => {\n            if (value.status === 'success') {\n              target.functions[nodeId].status = 'success'\n            } else if (value.status === 'error') {\n              target.functions[nodeId].status = 'error'\n            }\n          })\n        }\n      })\n      .addMatcher(isAnyOf(run.fulfilled, runByCurrentUid.fulfilled), () => {\n        return {\n          status: 'uninitialized',\n        }\n      })\n  },\n})\n\nexport default experimentsSlice.reducer\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit'\nimport {\n  algorithmListReducer,\n  algorithmNodeReducer,\n  displayDataReducer,\n  fileUploaderReducer,\n  flowElementReducer,\n  inputNodeReducer,\n  nwbReducer,\n  filesTreeReducer,\n  handleTypeColorReducer,\n  rightDrawerReducer,\n  visualaizeItemReducer,\n  snakemakeReducer,\n  pipelineReducer,\n  hdf5Reducer,\n  experimentsReducer,\n  workspaceReducer,\n  userReducer,\n} from './slice'\n\nexport const rootReducer = combineReducers({\n  algorithmList: algorithmListReducer,\n  algorithmNode: algorithmNodeReducer,\n  displayData: displayDataReducer,\n  fileUploader: fileUploaderReducer,\n  flowElement: flowElementReducer,\n  inputNode: inputNodeReducer,\n  handleColor: handleTypeColorReducer,\n  filesTree: filesTreeReducer,\n  nwb: nwbReducer,\n  rightDrawer: rightDrawerReducer,\n  visualaizeItem: visualaizeItemReducer,\n  snakemake: snakemakeReducer,\n  pipeline: pipelineReducer,\n  hdf5: hdf5Reducer,\n  experiments: experimentsReducer,\n  workspace: workspaceReducer,\n  user: userReducer,\n})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\nexport type ThunkApiConfig<T = unknown, PendingMeta = unknown> = {\n  state: RootState\n  dispatch: AppDispatch\n  rejectValue: T\n  penfingMeta: PendingMeta\n}\n","import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme({\n  components: {\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiSelect: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiDialog: {\n      defaultProps: {\n        disableEscapeKeyDown: true,\n      },\n    },\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from 'store/store'\n\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './Theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}