{"version":3,"sources":["@types/index.ts","utils/auth/AuthUtils.ts","store/slice/User/UserSelector.ts","store/slice/User/UserType.ts","api/auth/Auth.ts","const/API.ts","utils/axios.ts","api/users/UsersMe.ts","api/users/UsersAdmin.ts","store/slice/User/UserActions.ts","components/logo.png","components/Layout/Tooltips.tsx","const/Mode.ts","store/slice/Workspace/WorkspaceSelector.ts","store/slice/Workspace/WorkspaceType.ts","store/slice/Workflow/WorkflowType.ts","api/workflow/Workflow.ts","store/slice/Workflow/WorkflowActions.ts","api/workspace/index.ts","store/slice/Workspace/WorkspaceActions.ts","store/slice/Workspace/WorkspaceSlice.ts","components/Workspace/WorkspaceTabs.tsx","store/slice/User/UserSlice.ts","components/Layout/Profile.tsx","const/Layout.ts","components/Layout/Header.tsx","components/Layout/LeftMenu.tsx","components/common/Loading.tsx","components/Layout/index.tsx","pages/Dashboard/index.tsx","const/Auth.ts","components/common/Input.tsx","components/Account/InputPassword.tsx","components/Account/ChangePasswordModal.tsx","components/common/DeleteConfirmModal.tsx","pages/Account/index.tsx","components/common/InputError.tsx","components/common/SelectError.tsx","components/common/PaginationCustom.tsx","pages/AccountManager/index.tsx","pages/AccountDelete/index.tsx","pages/Login/index.tsx","pages/ResetPassword/index.tsx","components/Workspace/PopupShare.tsx","store/slice/Workspace/WorkspaceUtils.ts","pages/Workspace/index.tsx","utils/param/ParamUtils.ts","store/slice/AlgorithmNode/AlgorithmNodeSelectors.ts","store/slice/FlowElement/FlowElementSelectors.ts","store/slice/FlowElement/FlowElementType.ts","store/slice/FlowElement/FlowElementUtils.ts","store/slice/NWB/NWBSelectors.ts","store/slice/Pipeline/PipelineType.ts","store/slice/DisplayData/DisplayDataType.ts","store/slice/DisplayData/DisplayDataUtils.ts","store/slice/Pipeline/PipelineUtils.ts","store/slice/Pipeline/PipelineSelectors.ts","store/slice/Snakemake/SnakemakeSelectors.ts","store/slice/InputNode/InputNodeType.ts","store/slice/InputNode/InputNodeUtils.ts","store/slice/InputNode/InputNodeSelectors.ts","store/slice/Run/RunSelectors.ts","api/run/Run.ts","store/slice/Pipeline/PipelineActions.ts","api/experiments/Experiments.ts","store/slice/Experiments/ExperimentsType.ts","store/slice/Experiments/ExperimentsActions.ts","store/slice/Experiments/ExperimentsUtils.ts","store/slice/Experiments/ExperimentsSlice.ts","store/slice/Experiments/ExperimentsSelectors.ts","components/Workspace/Experiment/ExperimentStatusIcon.tsx","utils/EqualityUtils.ts","components/Workspace/Experiment/Button/DownloadButton.tsx","components/Workspace/Experiment/CollapsibleTable.tsx","store/slice/Pipeline/PipelineSlice.ts","components/Workspace/Experiment/Button/DeleteButton.tsx","api/outputs/Outputs.ts","store/slice/DisplayData/DisplayDataActions.ts","store/slice/DisplayData/DisplayDataSelectors.ts","store/slice/VisualizeItem/VisualizeItemType.ts","store/slice/VisualizeItem/VisualizeItemUtils.ts","store/slice/VisualizeItem/VisualizeItemSelectors.ts","store/slice/VisualizeItem/VisualizeItemActions.ts","store/slice/VisualizeItem/VisualizeItemSlice.ts","components/Workspace/Experiment/Button/ReproduceButton.tsx","components/Workspace/Experiment/ExperimentTable.tsx","components/utils/LocalStorageUtil.ts","components/Workspace/Experiment/Experiment.tsx","store/slice/AlgorithmList/AlgorithmListUtils.ts","store/slice/AlgorithmList/AlgorithmListSelectors.ts","store/slice/AlgorithmList/AlgorithmListType.ts","api/algolist/AlgoList.ts","store/slice/AlgorithmList/AlgorithmListActions.ts","api/params/Params.ts","store/slice/FlowElement/FlowElementActions.ts","utils/nanoid/NanoIdUtils.ts","const/flowchart.ts","components/Workspace/FlowChart/DnDItemType.ts","components/Workspace/FlowChart/TreeView.tsx","store/slice/InputNode/InputNodeActions.ts","api/run/RunUtils.ts","api/files/Files.ts","store/slice/FileUploader/FileUploaderType.ts","store/slice/FileUploader/FileUploaderActions.ts","store/slice/FlowElement/FlowElementSlice.ts","api/nwb/NWB.ts","store/slice/NWB/NWBType.ts","store/slice/NWB/NWBAction.ts","store/slice/NWB/NWBSlice.ts","store/slice/RightDrawer/RightDrawerSlice.ts","components/common/Accordion.tsx","components/common/ParamFormItemCreator.tsx","components/Workspace/FlowChart/NWB.tsx","api/snakemake/Snakemake.ts","store/slice/Snakemake/SnakemakeType.ts","store/slice/Snakemake/SnakemakeAction.ts","store/slice/Snakemake/SnakemakeSlice.ts","components/Workspace/FlowChart/Snakemake.tsx","components/Workspace/RunButtons.tsx","components/Workspace/FlowChart/ImportWorkflowConfigButton.tsx","components/Workspace/ToolBar.tsx","components/Workspace/FlowChart/FlowChartNode/HandleColorHook.ts","store/slice/HandleTypeColor/HandleTypeColorSelectors.ts","components/Workspace/FlowChart/FlowChartNode/LinerProgressWithLabel.tsx","store/slice/FileUploader/FileUploaderInitlalState.ts","store/slice/FileUploader/FileUploaderSelectors.ts","store/slice/FileUploader/FileUploaderHook.ts","components/Workspace/FlowChart/DialogContext.tsx","components/Workspace/FlowChart/FlowChartNode/FileSelect.tsx","components/Workspace/FlowChart/FlowChartNode/FlowChartUtils.ts","components/Workspace/FlowChart/FlowChartNode/ImageFileNode.tsx","components/Workspace/FlowChart/FlowChartNode/AlgorithmNode.tsx","store/slice/InputNode/InputNodeSlice.ts","components/Workspace/Visualize/DataContext.tsx","components/Workspace/Visualize/Plot/CsvPlot.tsx","components/Workspace/FlowChart/FlowChartNode/CsvFileNode.tsx","store/slice/HDF5/HDF5Selectors.ts","api/hdf5/HDF5.ts","store/slice/HDF5/HDF5Type.ts","store/slice/HDF5/HDF5Action.ts","components/Workspace/FlowChart/FlowChartNode/HDF5FileNode.tsx","components/Workspace/FlowChart/FlowChartNode/FluoFileNode.tsx","components/Workspace/FlowChart/FlowChartNode/BehaviorFileNode.tsx","components/Workspace/FlowChart/FlowChartNode/ReactFlowNodeTypesConst.ts","components/Workspace/FlowChart/CustomEdge.tsx","components/Workspace/Visualize/Plot/HeatMapPlot.tsx","components/Workspace/Visualize/Plot/ImagePlot.tsx","components/Workspace/Visualize/Plot/RoiPlot.tsx","components/Workspace/Visualize/Plot/ScatterPlot.tsx","components/Workspace/Visualize/Plot/TimeSeriesPlot.tsx","components/Workspace/Visualize/Plot/BarPlot.tsx","components/Workspace/Visualize/Plot/HTMLPlot.tsx","components/Workspace/Visualize/Plot/HistogramPlot.tsx","components/Workspace/Visualize/Plot/LinePlot.tsx","components/Workspace/Visualize/Plot/PiePlot.tsx","components/Workspace/Visualize/Plot/PolarPlot.tsx","components/Workspace/Visualize/DisplayDataItem.tsx","components/Workspace/FlowChart/FlowChartNode/AlgorithmOutputDialog.tsx","store/slice/FilesTree/FilesTreeSelectors.ts","store/slice/FilesTree/FilesTreeType.ts","store/slice/FilesTree/FilesTreeAction.ts","store/slice/FilesTree/FilesTreeUtils.ts","components/common/FileSelectDialog.tsx","components/Workspace/FlowChart/ReactFlowComponent.tsx","store/slice/RightDrawer/RightDrawerSelectors.ts","store/slice/AlgorithmNode/AlgorithmNodeType.ts","store/slice/AlgorithmNode/AlgorithmNodeActions.ts","store/slice/AlgorithmNode/AlgorithmNodeSlice.ts","components/Workspace/FlowChart/AlgorithmParamForm.tsx","components/Workspace/FlowChart/RightDrawer.tsx","components/common/CurrentPipelineInfo.tsx","components/Workspace/FlowChart/FlowChart.tsx","components/Workspace/Visualize/VisualizeItemAddButton.tsx","components/utils/MouseDragUtil.ts","components/Workspace/Visualize/VisualizeItemLayoutMenuIcon.tsx","components/Workspace/Visualize/FilePathSelect.tsx","components/Workspace/Visualize/VisualizeItem.tsx","components/Workspace/Visualize/FlexItemList.tsx","components/Workspace/Visualize/Editor/GradientColorPicker.tsx","components/Workspace/Visualize/Editor/SaveFig.tsx","components/Workspace/Visualize/Editor/ImageItemEditor.tsx","components/Workspace/Visualize/Editor/CsvItemEditor.tsx","components/Workspace/Visualize/Editor/HeatmapItemEditor.tsx","components/Workspace/Visualize/Editor/TimeSeriesItemEditor.tsx","components/Workspace/Visualize/Editor/RoiItemEditor.tsx","components/Workspace/Visualize/Editor/ScatterItemEditor.tsx","components/Workspace/Visualize/Editor/BarItemEditor.tsx","components/Workspace/Visualize/Editor/HistogramItemEditor.tsx","components/Workspace/Visualize/Editor/LineItemEditor.tsx","components/Workspace/Visualize/Editor/PieItemEditor.tsx","components/Workspace/Visualize/Editor/PolarItemEditor.tsx","components/Workspace/Visualize/VisualizeItemEditor.tsx","components/Workspace/Visualize/Visualize.tsx","pages/Workspace/Workspace.tsx","store/slice/Pipeline/PipelineHook.ts","App.tsx","reportWebVitals.ts","store/slice/AlgorithmList/AlgorithmListSlice.ts","store/slice/DisplayData/DisplayDataSlice.ts","store/slice/FileUploader/FileUploaderSlice.ts","store/slice/FilesTree/FilesTreeSlice.ts","store/slice/HandleTypeColor/HandleTypeColorSlice.ts","store/slice/HDF5/HDF5Utils.ts","store/slice/HDF5/HDF5Slice.ts","store/store.ts","Theme.ts","index.tsx"],"names":["ROLE","SHARE","saveToken","access_token","localStorage","setItem","getToken","getItem","logout","removeItem","removeToken","removeExToken","window","location","href","selectCurrentUser","state","user","currentUser","selectListUser","listUser","selectLoading","loading","selectListSearch","listUserSearch","isAdmin","ADMIN","role_id","USER_SLICE_NAME","loginApi","data","a","axios","post","response","refreshTokenApi","refresh_token","sendResetPasswordMailApi","email","HOST","process","REACT_APP_SERVER_HOST","PORT","REACT_APP_SERVER_PORT","BASE_URL","axiosLibrary","create","baseURL","timeout","interceptors","request","use","config","headers","Authorization","ExToken","error","Promise","reject","res","status","getMeApi","get","updateMeApi","put","updateMePasswordApi","deleteMeApi","delete","createUserApi","listUsersApi","paramsNew","qs","stringify","indices","updateUserApi","id","deleteUserApi","getListSearchApi","keyword","login","createAsyncThunk","thunkAPI","responseData","rejectWithValue","getMe","_","updateMe","dispatch","deleteMe","updateMePassword","getListUser","params","getListSearch","createUser","props","updateUser","deleteUser","Tooltips","Tooltip","title","IconButton","sx","mr","target","IS_STANDALONE","REACT_APP_IS_STANDALONE","selectWorkspaceListUserShare","workspace","listUserShare","selectWorkspaceData","selectActiveTab","currentWorkspace","selectedTab","selectCurrentWorkspaceId","workspaceId","selectIsLoadingWorkspaceList","selectIsWorkspaceOwner","ownerId","WORKSPACE_SLICE_NAME","WORKFLOW_SLICE_NAME","reproduceWorkflowApi","uid","downloadWorkflowConfigApi","responseType","importWorkflowConfigApi","formData","reproduceWorkflow","importWorkflowConfig","getWorkspaceApi","getWorkspacesApi","delWorkspaceApi","postWorkspaceApi","putWorkspaceApi","name","getListUserShareWorkspaceApi","postListUserShareWorkspaceApi","getWorkspace","getWorkspaceList","delWorkspace","Number","postWorkspace","putWorkspace","getListUserShareWorkSpaces","postListUserShareWorkspaces","initialState","items","total","limit","offset","undefined","workspaceSlice","createSlice","reducers","setActiveTab","action","payload","setCurrentWorkspace","clearCurrentWorkspace","extraReducers","builder","addCase","fulfilled","meta","arg","addMatcher","isAnyOf","rejected","pending","actions","a11yProps","index","WorkspaceTabs","useDispatch","activeTab","useSelector","Tabs","width","value","onChange","event","newValue","centered","textColor","Tab","label","userSlice","resetUserSearch","ex_token","Profile","useState","anchorEl","setAnchorEl","navigate","useNavigate","color","onClick","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","CONTENT_HEIGHT","StandaloneHeader","StyledAppBar","Toolbar","Box","display","flexGrow","src","Logo","alt","height","MultiUserHeader","handleDrawerOpen","useLocation","edge","TitleLogo","test","pathname","styled","MuiAppBar","position","backgroundColor","Typography","fontWeight","fontSize","Header","LeftMenu","handleDrawerClose","admin","Drawer","anchor","List","ListItem","disablePadding","ListItemButton","ListItemIcon","ListItemText","primary","LoaderWrapper","theme","top","bottom","left","right","zIndex","rotate","keyframes","prixClipFix","Loader","borderRadius","animation","content","boxSizing","inset","border","Loading","authRequiredPathRegex","AuthedLayout","children","setOpen","LayoutWrapper","ContentBodyWrapper","ChildrenWrapper","UnauthedLayout","paddingTop","paddingRight","overflow","shouldForwardProp","prop","padding","spacing","transition","transitions","easing","sharp","duration","leavingScreen","Layout","setLoadingAuth","useEffect","checkAuth","token","isLogin","Error","replace","BoxWrapper","LinkWrapper","Link","textDecoration","DashboardWrapper","alignItems","justifyContent","DashboardContent","flexWrap","gap","BoxMenu","textAlign","transform","TitleMenu","marginTop","Dashboard","style","paddingLeft","to","regexPassword","regexEmail","regexIgnoreS","Input","borderColor","marginBottom","outline","cursor","TextError","minHeight","lineHeight","wordBreak","InputPassword","p","type","setType","BoxTitle","ContentDelete","BoxConfirm","margin","FormInline","Label","ButtonConfirm","Button","ChangePasswordModal","onSubmit","errors","setErrors","values","setValues","onChangeValue","validate","confirm_password","validatePassword","length","validateReEnter","new_password","onChangePass","newErrors","password","onCloseModal","Modal","e","onBlur","placeholder","reEnter","pre","textTransform","marginLeft","DeleteConfirmModal","isLoading","titleSubmit","description","textDelete","setTextDelete","whiteSpace","AccountWrapper","BoxFlex","maxWidth","Title","BoxData","minWidth","TitleData","Account","isDeleteConfirmModalOpen","setIsDeleteConfirmModalOpen","isChangePwModalOpen","setIsChangePwModalOpen","isEditName","setIsEditName","isName","setIsName","ref","useRef","enqueueSnackbar","useSnackbar","handleClickVariant","variant","mess","handleCloseDeleteComfirmModal","onConfirmDelete","handleCloseChangePw","onConfirmChangePw","oldPass","newPass","old_password","organization","autoFocus","onKeyDown","key","current","querySelector","blur","ml","role","newRole","OPERATOR","getRole","mt","InputError","errorMessage","autoComplete","SelectModal","Select","SelectError","options","map","item","PaginationCustomWrapper","PaginationCustom","handlePage","handleLimit","FormControl","NativeSelect","inputProps","Pagination","count","Math","ceil","page","initState","confirmPassword","ModalComponent","onSubmitEdit","setOpenModal","dataEdit","setFormData","isDisabled","setIsDisabled","validateEmail","validateField","isConfirm","errorLength","validateLength","datas","validateForm","errorName","errorEmail","errorRole","onChangeData","newDatas","errorConfirm","toLowerCase","includes","preventDefault","Object","keys","some","ModalBox","TitleModal","LabelModal","filter","ButtonModal","disabled","PopupDelete","handleClose","handleOkDel","Dialog","DialogTitle","DialogActions","AccountManagerWrapper","ALink","userSelect","marginRight","button","AccountManager","useSearchParams","searchParams","setParams","openModal","setDataEdit","search","newParams","setNewParams","sort","getAll","openDel","setOpenDel","filterParams","useMemo","sortParams","JSON","field","find","operator","model","setModel","getParamsData","join","paramsManager","useCallback","handleSort","rowSelectionModel","param","newData","navigator","onLine","columns","headerName","filterable","flex","filterOperators","InputComponent","applyValue","defaultValue","clearTimeout","setTimeout","renderCell","sortable","row","handleEdit","handleOpenPopupDel","background","DataGrid","rows","filterMode","sortingMode","hideFooter","onSortModelChange","filterModel","sortModel","onFilterModelChange","modelFilter","flag","AccountDelete","LoginWrapper","LoginContent","boxShadow","FormSignUp","LabelField","LableRequired","Description","LinkWrappper","ButtonLogin","Login","setIsLoading","validateSubmit","unwrap","then","catch","finally","Stack","flexDirection","Heading","ButtonSignIn","ResetPassword","onReset","errorCheck","alert","TableListSearch","usersSuggest","handleAddListUser","stateUserShare","addEventListener","onMouseDown","removeEventListener","contains","TableListSearchWrapper","console","log","UlCustom","isSelected","i","LiCustom","DialogCustom","borderBottomLeftRadius","borderBottomRightRadius","maxHeight","listStyle","PopupShare","usersShare","textSearch","setTextSearch","setStateUserShare","columnsShare","handleShareFalse","share","users","handleOke","newUserIds","user_ids","DialogContent","stopPropagation","indexCheck","findIndex","newStateUserShare","hideFooterPagination","isMine","idUserWorkSpace","handleOpenPopupShare","handleNavWorkflow","handleNavRecords","onEdit","editable","placement","textOverflow","ButtonIcon","overflowWrap","moment","format","size","shared_count","PopupNew","setNewWorkSpace","handleOkNew","nameWorkspace","WorkspacesWrapper","WorkspacesTitle","Workspaces","del","new","shareId","workspaceDel","setWorkspaceDel","newWorkspace","setError","initName","setInitName","rowModesModel","setRowModesModel","dataParams","pagi","processRowUpdate","newRow","onCellClick","object","forEach","mode","GridRowModes","View","ignoreModifications","editMode","tab","Edit","onRowModesModelChange","newRowModesModel","isCellEditable","onProcessRowUpdateError","onRowEditStop","_isSubmit","getChildParam","path","ParamMap","result","node","isParamChild","convertToParamMap","dto","keyList","entries","kList","Array","isArray","isDictObject","concat","push","selectAlgorithmNodeById","nodeId","algorithmNode","selectAlgorithmName","selectAlgorithmParams","selectAlgorithmNodeNotExist","selectAlgorithmNode","selectFlowNodes","flowElement","flowNodes","selectFlowEdges","flowEdges","selectFlowPosition","flowPosition","selectNodeById","selectNodeLabelById","FLOW_ELEMENT_SLICE_NAME","NODE_TYPE_SET","isNodeData","isNode","isAlgorithmNodeData","getLabelByPath","filePath","getFileName","split","reverse","selectNwb","nwb","selectNwbParamsKeyList","selectNwbParam","paramKey","selectNwbParamsValue","PIPELINE_SLICE_NAME","RUN_STATUS","NODE_RESULT_STATUS","RUN_BTN_OPTIONS","RUN_NEW","RUN_ALREADY","RUN_BTN_LABELS","DISPLAY_DATA_SLICE_NAME","DATA_TYPE_SET","toDataType","isNodeResultPending","nodeResult","isNodeResultSuccess","isStartedPipeline","pipeline","getInitialRunResult","runPostData","initialResult","nodeDict","convertToRunResult","nodeResultDto","outputPath","outputPaths","message","convertToOutputPath","functionPath","selectPipelineLatestUid","currentPipeline","selectStartedPipeline","run","selectPipelineRunBtn","runBtn","selectRunResultPendingNodeIdList","runResult","isNodeResultPendingAndNodeId","selectPipelineStatus","selectPipelineIsCanceled","selectPipelineIsStartedSuccess","isNodeResultSuccessAndNodeId","selectPipelineNodeResultStatus","selectPipelineNodeResultOutputPaths","selectSnakemakeParams","snakemake","selectSnakemake","selectSnakemakeParamsKeyList","selectSnakemakeParam","selectSnakemakeParamsValue","INPUT_NODE_SLICE_NAME","FILE_TYPE_SET","isCsvInputNode","inputNode","fileType","isHDF5InputNode","selectInputNodeById","selectInputNodeDefined","selectCsvInputNodeSelectedFilePath","selectedFilePath","selectImageInputNodeSelectedFilePath","selectHDF5InputNodeSelectedFilePath","selectFilePathIsUndefined","hdf5Path","selectCsvInputNodeParam","selectInputNodeHDF5Path","selectRunPostData","nwbParam","selectNwbParams","snakemakeParam","edgeDict","selectEdgeDictForRun","selectNodeDictForRun","forceRunList","selectForceRunList","isUpdated","nodes","algorithmNodePostData","selectInputNodeSelectedFilePath","selectInputNodeFileType","selectInputNodeParam","inputNodePosyData","runApi","runByUidApi","pendingNodeIdList","cancelResultApi","getState","runByCurrentUid","currentUid","pollRunResult","cancelResult","getExperimentsApi","deleteExperimentByUidApi","deleteExperimentByListApi","uidList","downloadExperimentNwbApi","downloadExperimentConfigApi","fetchExperimentApi","workspace_id","renameExperiment","new_name","patch","EXPERIMENTS_SLICE_NAME","getExperiments","deleteExperimentByUid","deleteExperimentByList","fetchExperiment","convertToExperimentType","functions","function","convertToExperimentStatus","success","unique_id","hasNWB","timestamp","started_at","frameRate","imaging_plane","imaging_rate","convertFunctionsToRunResultDTO","experimentsSlice","clearExperiments","experimentList","convertToExperimentListType","v","selectExperiments","experiments","selectExperimentsStatusIsUninitialized","selectExperimentsStatusIsFulfilled","selectExperimentsStatusIsError","selectExperimentsErrorMessage","selectExperimentList","selectExperiment","selectExperimentName","selectExperimentFunction","selectFrameRate","currentPipelineUid","ExperimentStatusIcon","React","memo","arrayEqualityFn","b","every","twoDimarrayEqualityFn","NWBDownloadButton","useContext","ExperimentUidContext","url","setFileUrl","URL","createObjectURL","Blob","click","revokeObjectURL","download","className","SnakemakeDownloadButton","WorkflowDownloadButton","CollapsibleTable","TableRow","TableCell","paddingBottom","colSpan","Collapse","in","unmountOnExit","gutterBottom","component","Table","Head","Body","TableHead","nodeIdList","selectExperimentFunctionNodeIdList","TableBody","TableRowOfFunction","selectExperimentFunctionName","selectExperimentFunctionStatus","selectExperimentFunctionHasNWB","scope","pipelineSlice","setRunBtnOption","runBtnOption","clearCurrentPipeline","DeleteButton","isRunning","isPending","getTimeSeriesInitDataApi","getTimeSeriesDataByIdApi","getTimeSeriesAllDataApi","getHeatMapDataApi","getImageDataApi","start_index","startIndex","end_index","endIndex","getCsvDataApi","getRoiDataApi","getScatterDataApi","getBarDataApi","getHTMLDataApi","addRoiApi","mergeRoiApi","deleteRoiApi","getLineDataApi","getPolarDataApi","getHistogramDataApi","getPieDataApi","getTimeSeriesInitData","getTimeSeriesDataById","getTimeSeriesAllData","getHeatMapData","getImageData","getCsvData","getRoiData","getScatterData","getBarData","getHTMLData","getHistogramData","getLineData","getPieData","getPolarData","selectDisplayData","displayData","selectTimeSeriesData","timeSeries","selectTimeSeriesDataIsInitialized","selectHeatMapDataIsInitialized","heatMap","selectImageData","image","selectImageDataIsInitialized","selectImageDataIsPending","selectCsvDataIsInitialized","csv","selectCsvDataError","selectCsvDataIsPending","selectCsvDataIsFulfilled","selectRoiData","roi","selectRoiDataIsInitialized","selectRoiDataIsFulfilled","selectScatterDataIsInitialized","scatter","selectBarDataIsInitialized","bar","selectHTMLDataIsInitialized","html","selectHistogramDataIsInitialized","histogram","selectLineDataIsInitialized","line","selectPieDataIsInitialized","pie","selectPolarDataIsInitialized","polar","VISUALIZE_ITEM_SLICE_NAME","VISUALIZE_ITEM_TYPE_SET","isDisplayDataItem","itemType","isImageItem","dataType","isTimeSeriesItem","isCsvItem","isHeatMapItem","isScatterItem","isBarItem","isHistogramItem","isLineItem","isPolarItem","selectSelectedVisualizeItemId","visualaizeItem","selectedItemId","selectVisualizeImageItemIdList","itemId","selectVisualizeItemById","isWorkflowDialog","selectVisualizeItems","selectVisualizeItemLayout","layout","selectVisualizeItemWidth","selectVisualizeItemHeight","selectVisualizeDataType","selectVisualizeDataNodeId","selectVisualizeDataFilePath","selectVisualizeSaveFilename","saveFileName","selectVisualizeSaveFormat","saveFormat","selectImageItemFilePath","selectTimeSeriesItemFilePath","selectRoiItemFilePath","roiItem","selectImageItemShowticklabels","showticklabels","selectImageItemZsmooth","zsmooth","selectImageItemStartIndex","selectImageItemEndIndex","selectImageItemShowLine","showline","selectImageItemShowGrid","showgrid","selectImageItemShowScale","showscale","selectImageItemColors","colors","selectImageItemAlpha","alpha","selectImageItemRoiAlpha","roiAlpha","selectTimeSeriesItemOffset","selectTimeSeriesItemSpan","span","selectTimeSeriesItemShowGrid","selectTimeSeriesItemShowLine","selectTimeSeriesItemShowTickLabels","selectTimeSeriesItemZeroLine","zeroline","selectTimeSeriesItemXrange","xrange","selectTimeSeriesItemDrawOrderList","drawOrderList","selectTimeSeriesItemRefRoiUniqueList","refImageItemId","imageItem","roiUniqueList","selectTimeSeriesItemKeys","dataKeys","selectRoiItemMaxNumber","roiFilePath","roiData","max","arr","selectHeatMapItemShowScale","selectHeatMapItemColors","selectCsvItemTranspose","transpose","selectCsvItemSetHeader","setHeader","selectCsvItemSetIndex","setIndex","selectBarItemIndex","selectScatterItemXIndex","xIndex","selectScatterItemYIndex","yIndex","selectDisplayDataIsSingle","targetFilePath","selectHistogramItemBins","bins","selectLineItemSelectedIndex","selectedIndex","selectPolarItemSelectedIndex","selectImageItemRangeUnit","rangeUnit","setImageItemClikedDataId","clickedDataId","selectingImageArea","range","x","y","round","x1","x2","y1","y2","selectedZList","z","zNum","String","selectedZ","deleteDisplayItem","createAction","setNewDisplayDataPath","displayDataCommonInitialValue","imageItemInitialValue","rgb","activeIndex","timeSeriesItemInitialValue","maxIndex","heatMapItemInitialValue","csvItemInitialValue","roiItemInitialValue","scatterItemInitialValue","barItemInitialValue","hdf5ItemInitialValue","htmlItemInitialValue","fluoItemInitialValue","behaviorItemInitialValue","histogramItemInitialValue","lineItemInitialValue","pieItemInitialValue","polarItemInitialValue","getDisplayDataItemInitialValue","visualaizeItemSlice","changeRangeUnit","targetItem","pushInitialItemToNewRow","newItemId","addInitialItemFn","insertInitialItemToNextColumn","targetItemId","targetRowIndex","targetColumnIndex","indexOf","splice","addItemForWorkflowDialog","maxId","getMaxItemId","deleteAllItemForWorkflowDialog","setItemSize","selectItem","reset","setRoiItemFilePath","outputKey","setFilePath","setSaveFormat","setSaveFileName","setImageItemFilePath","setTimeSeriesItemFilePath","setHeatMapItemFilePath","resetImageActiveIndex","resetImageActiveIndexFn","incrementImageActiveIndex","decrementImageActiveIndex","setImageActiveIndex","setImageItemShowticklabels","setImageItemZsmooth","setImageItemShowLine","setImageItemShowGrid","setImageItemShowScale","setImageItemColors","setImageItemStartIndex","setImageItemEndIndex","setImageItemAlpha","setImageItemRoiAlpha","setImageItemDuration","setTimeSeriesItemOffset","setTimeSeriesItemSpan","setTimeSeriesItemShowGrid","setTimeSeriesItemShowLine","setTimeSeriesItemShowTickLabels","setTimeSeriesItemZeroLine","setTimeSeriesItemXrangeLeft","setTimeSeriesItemXrangeRight","setTimeSeriesItemDrawOrderList","resetAllOrderList","setTimeSeriesItemMaxIndex","setTimeSeriesRefImageItemId","setHeatMapItemShowScale","setHeatMapItemColors","setCsvItemTranspose","setCsvItemSetHeader","setCsvItemSetIndex","setScatterItemXIndex","setScatterItemYIndex","setBarItemIndex","setHistogramItemBins","setLineItemSelectedIndex","setPolartemItemSelectedIndex","imageItemId","idList","reduce","nextId","args","ReproduceButton","createContext","ExperimentTable","isUninitialized","isFulfilled","isError","TableImple","ExperimentsErrorView","Alert","severity","AlertTitle","isOwner","experimentListValues","experimentListKeys","order","setOrder","sortTarget","setSortTarget","checkedList","setCheckedList","onCheckBoxClick","recordsIsEmpty","setPage","storageKey","initialValue","parseFn","savedStr","parse","setValue","useLocalStorage","valueNum","isNaN","rowsPerPage","setRowsPerPage","emptyRows","m","endIcon","Paper","elevation","flexGlow","TableContainer","HeadItem","sortHandler","property","allCheckIndeterminate","allChecked","onChangeAllCheck","checked","experiment","checkboxVisible","getComparator","slice","expData","Provider","RowItem","palette","text","secondary","TablePagination","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","parseInt","Checkbox","visibility","indeterminate","TableSortLabel","active","direction","selectExperimentTimeStamp","statusList","f","selectExperimentStatus","selectExperimentHasNWB","isEdit","setEdit","errorEdit","setErrorEdit","valueEdit","setValueEdit","onSaveNewName","Fragment","borderBottom","tableCellClasses","root","borderBottomWidth","prevOpen","trim","orderBy","descendingComparator","Experiment","isAlgoChild","algoNode","getAlgoChild","algoList","algoName","convertToAlgoListType","prototype","hasOwnProperty","call","returns","selectAlgorithmList","algorithmList","selectAlgorithmListIsLated","isLatest","selectAlgorithmListTree","tree","ALGORITHM_LIST_SLICE_NAME","getAlgoListApi","getAlgoList","getAlgoParamsApi","addAlgorithmNode","addInputNode","nanoid","customAlphabet","getNanoId","INITIAL_IMAGE_ELEMENT_ID","INITIAL_ALGO_STYLE","INITIAL_DATA_STYLE","REACT_FLOW_NODE_TYPE_KEY","DND_ITEM_TYPE_SET","AlgorithmTreeView","onAddAlgoNode","nodeName","newNode","TreeView","defaultCollapseIcon","defaultExpandIcon","TreeItem","InputNodeComponent","fileName","AlgoNodeComponentRecursive","toFixed","onAddDataNode","nodeType","reactFlowNodeType","useLeafItemDrag","isDragging","dragRef","LeafItem","opacity","onFocusCapture","AddButton","AlgoNodeComponent","treeItemClasses","iconContainer","onDragEnd","useDrag","end","monitor","getDropResult","didDrop","collect","setInputNodeFilePath","isInputNodePostData","isInputNodeData","isAlgorithmNodePostData","FILE_TREE_TYPE_SET","getFilesTreeApi","file_type","uploadFileApi","FILE_UPLOADER_SLICE_NAME","setUploadProgress","uploadFile","requestId","getUploadConfig","percent","progess","resultPath","file_path","onUpdateProgressFn","onUploadProgress","progressEvent","percentCompleted","loaded","initialFlowPosition","initialElementCoord","elementCoord","flowElementSlice","setFlowPosition","setFlowNodes","setFlowEdges","deleteFlowNodes","applyNodeChanges","setNodesChange","setEdgesChange","applyEdgeChanges","deleteFlowEdgeById","element","deleteFlowNodeById","source","editFlowNodePositionById","coord","elementIdx","targetPosition","Position","Left","sourcePosition","Right","updateElementCoord","nodeIdx","targetNode","min","random","getNWBParamsApi","getNWBParams","nwbSlice","updateParam","RIGHT_DRAWER_MODE","currendNodeId","rightDrawerSlice","openRightDrawer","closeRightDrawer","toggleParamForm","toggleNwb","toggleSnakemake","elm","Accordion","disableGutters","square","divider","createParamFormItemComponent","paramSelector","paramValueSelector","paramUpdateActionCreator","useParamValueUpdate","ParamItemForString","updateParamAction","TextField","multiline","ParamItemForNumber","InputLabelProps","shrink","ParamItemForBoolean","Switch","ParamItemForValueType","ParamChildItem","verticalAlign","ParamItem","AccordionSummary","expandIcon","AccordionDetails","NWBSettingButton","NWBSettingContents","paramKeyList","Component","getSnakemakeParamsApi","SNAKEMAKE_SLICE_NAME","getSnakemakeParams","SnakemakeSlice","SnakemakeButton","SnakemakeContents","RunButtons","runDisabled","filePathIsUndefined","algorithmNodeNotExist","handleCancelPipeline","handleRunPipeline","handleRunPipelineByUid","isStartedSuccess","dialogOpen","setDialogOpen","menuOpen","setMenuOpen","anchorRef","uidExists","ButtonGroup","Popper","disablePortal","TransitionProps","Grow","ClickAwayListener","onClickAway","MenuList","option","selected","handleMenuItemClick","RunDialog","handleRun","setName","fullWidth","helperText","ImportWorkflowConfigButton","inputRef","UploadFile","hidden","accept","files","file","FormData","append","ToolBar","float","useHandleColor","handleColor","colorMap","LinearProgressWithLabel","LinearProgress","inistialUploaderState","uploadingProgress","selectFileUploader","fileUploader","useFileUploader","onUploadFile","uninitialized","selectFileUploadIsUninitialized","selectUploadFilePath","selectFileUploadIsPending","selectFileUploadIsFulfilled","progress","selectFileUploadProgress","selectFileUploadError","DialogContext","onOpen","onOpenDialogFile","onMessageError","FileSelect","multiSelect","onChangeFilePath","FileSelectImple","onSelectFile","fileTreeType","selectButtonLabel","uploadButtonLabel","getFileInputAccept","toHandleId","getHandleType","handleId","isValidConnection","connection","sourceHandle","targetHandle","sourceHandleStyle","ImageFileNode","ImageFileNodeImple","elementSelected","useTheme","returnType","imageColor","light","leftHandleStyle","rightHandleStyle","AlgorithmNode","AlgorithmNodeImple","isConnectable","useStatus","tabIndex","AlgoName","mx","AlgoArgs","AlgoReturns","Message","pipelineStatus","main","algoArgs","algoListChild","selectAlgoArgs","algoInfoListEqualtyFn","info","algoInfo","ArgHandle","algoReturns","selectAlgoReturns","ReturnHandle","isNone","hex_color","isHover","setHover","rgb_color","hex","exec","hexToRgb","onMouseEnter","onMouseLeave","arrow","latestUid","errorMsg","selectPipelineNodeResultMessage","anchorElRef","inputNodeSlice","deleteInputNode","setCsvInputNodeParam","setInputNodeHDF5Path","newState","DisplayDataContext","NaN","CsvPlot","isInitialized","CsvPlotImple","PresentationalCsvPlot","csvData","col","header","headerData","idx","row_id","rowObj","fromEntries","CsvFileNode","CsvFileNodeImple","ParamSettingDialog","selectCsvInputNodeParamSetHeader","setSetHeader","selectCsvInputNodeParamSetIndex","setSetIndex","selectCsvInputNodeParamTranspose","setTranspose","dividers","FormControlLabel","control","CsvPreview","otherProps","selectHDF5","hdf5","getHDF5TreeApi","HDF5_SLICE_NAME","getHDF5Tree","HDF5FileNode","HDF5FileNodeImple","ItemSelect","structureFileName","Structure","FileTreeView","useHDF5Tree","TreeNode","isDir","icon","htmlColor","childNode","shape","nbytes","FluoFileNode","FluoFileNodeImple","fluoColor","BehaviorFileNode","BehaviorFileNodeImple","behaviorColor","reactFlowNodeTypes","reactFlowEdgeTypes","buttonedge","sourceX","sourceY","targetX","targetY","markerEnd","edgePath","getBezierPath","getEdgeCenter","edgeCenterX","edgeCenterY","d","foreignObjectSize","HeatMapPlot","selectHeatMapDataError","selectHeatMapDataIsFulfilled","HeatMapImple","heatMapData","heatMapDataEqualtyFn","selectHeatMapMeta","selectHeatMapColumns","selectHeatMapIndex","colorscale","parseFloat","offsets","hoverongaps","showlegend","dragmode","t","l","autosize","xaxis","xlabel","yaxis","ylabel","displayModeBar","responsive","toImageButtonOptions","filename","PositionDrag","initSizeDrag","floor","sChart","ImagePlot","selectImageDataError","ImagePlotImple","selectImageItemActiveIndex","ImagePlotChart","imageData","selectActiveImageData","imageDataEqualtyFn","isAddRoi","setIsAddRoi","loadingApi","setLoadingApi","roiDataState","setRoiDataState","pointClick","setPointClick","itemsVisual","timeDataMaxIndex","maxIdx","selectRoiItemIndex","sizeDrag","setSizeDrag","startDragAddRoi","setStartDragAddRoi","positionDrag","setChangeSize","selectRoiItemOutputKeys","refPageXSize","refPageYSize","colorscaleRoi","createColormap","colormap","nshades","onCancel","onCancelAdd","rgba2hex","hovertemplate","new_i","zmin","zmax","selectMode","setSelectMode","onSelecting","callback","timeoutId","delay","debounce","autorange","autotick","ticks","automargin","setSelectRoi","point","newPoints","newRoi","addRoi","onMouseUpDragAddRoi","onMouseDownSize","pageX","pageY","addRoiSubmit","sizeX","sizeY","xAdd","yAdd","pointCenter","posx","posy","sizex","sizey","resetTimeSeries","onMergeRoi","ids","onDeleteRoi","PlayBack","BoxDiv","LinkDiv","points","curveNumber","toString","DivAddRoi","DivSvg","onMouseMove","newSizeDrag","getBoundingClientRect","newX","newY","scrollY","LEFT","newWidth","newLeft","RIGHT","BOTTOM","newHeight","TOP","newTop","onMouseUp","DivDrag","DragCenter","DragSizeLeft","DragSizeRight","DragSizeTop","DragSizeBottom","maxSize","selectImageItemDuration","intervalRef","clearInterval","onPlayClick","setInterval","onDurationChange","step","Slider","valueLabelDisplay","marks","activeThumb","newIndex","rgba","r","g","outParts","substring","part","DragSize","RoiPlot","selectRoiDataError","RoiPlotImple","ScatterPlot","selectScatterDataError","selectScatterDataIsFulfilled","ScatterPlotImple","scatterData","scatterDataEqualityFn","selectScatterMeta","textposition","textfont","family","marker","font","XIndex","YIndex","InputLabel","aArray","bArray","aKey","TimeSeriesPlot","selectTimeSeriesDataError","selectTimeSeriesDataIsFulfilled","TimeSeriesPlotImple","timeSeriesData","timeSeriesDataEqualityFn","dataXrange","selectTimeSeriesXrange","dataStd","std","selectTimeSeriesStd","newDataXrange","setNewDataXrange","newTimeSeriesData","setNewTimeSeriesData","seriesData","newSeriesData","keyTime","newKeyTime","colorScale","activeIdx","mean","sqrt","pow","visible","error_y","array","annotations","xref","yref","arrowhead","ax","ay","titlefont","tickfont","onLegendClick","clickNumber","newDrawOrderList","aValue","bKey","bValue","nestEqualityFun","BarPlot","selectBarDataError","selectBarDataIsFulfilled","BarPlotImple","barData","barDataEqualityFn","selectBarMeta","selectBarIndex","SelectIndex","HTMLPlot","selectHTMLDataError","selectHTMLDataIsFulfilled","HTMLPlotImple","htmlData","dangerouslySetInnerHTML","__html","HistogramPlot","selectHistogramDataError","selectHistogramDataIsFulfilled","HistogramPlotImple","histogramData","selectHistogramMeta","autobinx","xbins","InputBins","LinePlot","selectLineDataError","selectLineDataIsFulfilled","LinePlotImple","lineData","selectLineMeta","selectLineColumns","selectLineIndex","tickvals","LineItemIndexSelect","PiePlot","selectPieDataError","selectPieDataIsFulfilled","PiePlotImple","pieData","selectPieMeta","selectPieColumns","labels","PolarPlot","selectPolarDataError","selectPolarDataIsFulfilled","PolarPlotImple","polarData","selectPolarMeta","selectPolarColumns","selectPolarIndex","theta","PolarItemIndexSelect","DisplayDataItem","DisplayPlot","AlgorithmOutputDialog","closeFn","TitleWithCloseButton","pt","px","OutputViewer","outputKeyList","selectPipelineNodeResultOutputKeyList","selectedOutoutKey","setSelectedOutputKey","OutputSelectTabs","onSelectOutput","DisplayDataView","scrollButtons","tabsClasses","selectPipelineNodeResultOutputFilePath","selectPipelineNodeResultOutputFileDataType","selectVisualizeItemIdForWorkflowDialog","my","selectFilesTree","filesTree","FILES_TREE_SLICE_NAME","getFilesTree","convertToTreeNodeType","isdir","getNodeByPath","FileSelectDialog","initialFilePath","onClickCancel","onClickOk","setSelectedFilePath","FilePathSelectedListView","selectFilesTreeNodes","selectFilesIsLatest","selectFilesIsLoading","useFileTree","onCheckFile","selectedPath","onCheckDir","childrenFilePathList","from","Set","disableSelection","onNodeSelect","nodeIds","isDirNodeByPath","allNotChecked","TreeItemLabel","checkboxProps","disableRipple","initDialogFile","ReactFlowComponent","dialogNodeId","setDialogNodeId","dialogFile","setDialogFile","messageError","setMessageError","reactFlowInstance","setReactFlowInstance","wrapparRef","useDrop","drop","monitorOffset","getClientOffset","project","offsetLeft","offsetTop","edges","onNodesChange","changes","onEdgesChange","onConnect","addEdge","animated","onInit","onDragOver","dataTransfer","dropEffect","onNodeDragStop","nodeTypes","edgeTypes","defaultPosition","defaultZoom","onMoveEnd","viewport","zoom","Popover","FormHelperText","selectRightDrawerIsOpen","rightDrawer","selectRightDrawerMode","selectRightDrawerCurrentNodeId","ALGORITHM_NODE_SLICE_NAME","getAlgoParams","algorithmNodeSlice","AlgorithmParamForm","ParamFormContext","algoParamIsLoaded","selectAlgorithmParamsExit","selectAlgorithmParamsKeyList","selectAlgorithmParam","selectAlgorithmParamsValue","Contents","ParamFormConetent","StyledDrawer","flexShrink","drawerClasses","paper","MainContents","RightDrawer","Divider","CurrentPipelineInfo","isFulFilled","Grid","container","paddingX","ExperimentUidInfo","ExperimentNameInfo","LabelValueGridRow","xs","FlowChart","RootDiv","DndProvider","backend","HTML5Backend","borderRight","grey","DrawerContents","easeOut","enteringScreen","VisualizeItemAddButton","StyledPaper","StyledButton","borderWidth","useMouseDragHandler","dependencies","document","once","DisplayDataItemLayoutMenuIcon","isSingleData","PresentationalLayoutMenuIcon","onClickDeleteMenu","deleteData","onClickInsertMenu","FilePathSelect","selectedNodeId","onSelect","inputNodeFilePathInfoList","inputNodes","selectInputNode","toDataTypeFromFileType","inputNodeDataType","algorithmNodeOutputPathInfoList","selectPipelineNodeResultSuccessList","paths","onSelectHandle","menuItemList","pathInfo","pathElm","ListSubheader","VisualizeItem","movingSize","setMovingSize","onCommitSize","onMouseDownX","downEvent","movingX","screenX","movingWidth","moveEvent","MIN_WIDTH","onMouseDownY","movingY","screenY","movingHeight","MIN_HEIFHT","onMouseDownXY","useItemDragResize","ItemHeader","itemDataType","FilePathSelectItem","RefImageItemIdSelect","RoiSelect","newFilePath","newDataType","basePayload","prevDataType","prevFilePath","itemIdList","selectedRefImageItemId","selectTimeSeriesItemRefImageItemId","roiItemNodeId","selectRoiItemNodeId","roiItemFilePath","FlexItemList","GradientColorPicker","dispatchSetColor","maxStops","paletteHeight","onPaletteChange","colorCode","rgbStr","flatStyle","WrappedSketchPicker","c","SaveFig","SelectedItemIdContext","ImageItemEditor","newPath","onSelectImageFile","Showticklabels","ShowLine","ShowGrid","ShowScale","Zsmooth","Alpha","inputError","RoiAlpha","StartEndIndex","onChangeStartIndex","onChangeEndIndex","CsvItemEditor","Transpose","SetHeader","SetIndex","HeatmapItemEditor","TimeSeriesItemEditor","Offset","Span","ShowTickLabels","ZeroLine","SelectValue","Xrange","xrangeSelector","setXrange","newRight","LegendSelect","handleChange","drawIndexMap","RoiItemEditor","ScatterItemEditor","BarItemEditor","HistogramItemEditor","LineItemEditor","PieItemEditor","PolarItemEditor","VisualizeItemEditor","DisplayDataItemEditor","DisplayEditor","StyledDrawerContents","Visualize","TabPanel","other","Workspace","runPipeline","appDispatch","useParams","_workspaceId","isCanceled","intervalId","prevStatus","setPrevStatus","useRunPipeline","SnackbarCloseButton","snackbarKey","closeSnackbar","App","maxSnack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","algorithmListSlice","deleteDisplayDataFn","displayDataSlice","roi1Ddata","flat","roiUniqueIdList","n1","n2","fileUploaderSlice","setFileUploaderStateById","currentState","filesTreeSlice","ImageData","MuiColors","IscellData","TimeSeriesData","Suite2pData","FluoData","BehaviorData","nextKey","handleTypeColorSlice","HDF5Slice","rootReducer","combineReducers","algorithmListReducer","algorithmNodeReducer","displayDataReducer","fileUploaderReducer","flowElementReducer","inputNodeReducer","handleTypeColorReducer","filesTreeReducer","nwbReducer","rightDrawerReducer","visualaizeItemReducer","snakemakeReducer","pipelineReducer","hdf5Reducer","experimentsReducer","workspaceReducer","userReducer","store","configureStore","reducer","createTheme","components","MuiTextField","defaultProps","MuiSelect","MuiDialog","disableEscapeKeyDown","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.d1c8f428.chunk.js","sourcesContent":["export enum ROLE {\n  ADMIN = 1,\n  OPERATOR = 20,\n}\n\nexport const enum SHARE {\n  NOSHARE = 0,\n  ORGANIZATION = 2,\n  USERS = 1,\n}\n","export const saveToken = (access_token: string) => {\n  localStorage.setItem('access_token', access_token)\n}\n\nexport const getToken = () => {\n  return localStorage.getItem('access_token')\n}\n\nexport const saveRefreshToken = (refresh_token: string) => {\n  localStorage.setItem('refresh_token', refresh_token)\n}\n\nexport const getRefreshToken = () => {\n  return localStorage.getItem('refresh_token')\n}\n\nexport const removeRefreshToken = () => {\n  return localStorage.removeItem('refresh_token')\n}\n\nexport const logout = () => {\n  removeRefreshToken()\n  removeToken()\n  removeExToken()\n  window.location.href = '/login'\n}\n\nexport const removeToken = () => {\n  return localStorage.removeItem('access_token')\n}\n\nexport const saveExToken = (ExToken: string) => {\n  localStorage.setItem('ExToken', ExToken)\n}\n\nexport const getExToken = () => {\n  return localStorage.getItem('ExToken')\n}\n\nexport const removeExToken = () => {\n  return localStorage.removeItem('ExToken')\n}\n","import { ROLE } from '@types'\nimport { RootState } from 'store/store'\n\nexport const selectCurrentUser = (state: RootState) => state.user.currentUser\nexport const selectCurrentUserId = (state: RootState) =>\n  selectCurrentUser(state)?.id\nexport const selectListUser = (state: RootState) => state.user.listUser\nexport const selectLoading = (state: RootState) => state.user.loading\nexport const selectCurrentUserUid = (state: RootState) =>\n  selectCurrentUser(state)?.uid\nexport const selectCurrentUserEmail = (state: RootState) =>\n  selectCurrentUser(state)?.email\nexport const selectListSearch = (state: RootState) => state.user.listUserSearch\nexport const isAdmin = (state: RootState) => {\n  return state.user && ROLE.ADMIN === state.user.currentUser?.role_id\n}\n","import { UserListDTO, UserDTO } from 'api/users/UsersApiDTO'\n\nexport const USER_SLICE_NAME = 'user'\n\nexport type User = {\n  currentUser?: UserDTO\n  listUserSearch?: UserDTO[]\n  loading: boolean\n  listUser?: UserListDTO\n}\n","import axios from 'utils/axios'\nimport { getRefreshToken } from 'utils/auth/AuthUtils'\n\nexport type LoginDTO = {\n  email: string\n  password: string\n}\n\nexport type TokenDTO = {\n  access_token: string\n  token_type: string\n  refresh_token: string\n  ex_token: string\n}\nexport type AccessTokenDTO = {\n  access_token: string\n}\n\nexport const loginApi = async (data: LoginDTO): Promise<TokenDTO> => {\n  const response = await axios.post('/auth/login', data)\n  return response.data\n}\n\nexport const refreshTokenApi = async (): Promise<AccessTokenDTO> => {\n  const response = await axios.post('/auth/refresh', {\n    refresh_token: getRefreshToken(),\n  })\n  return response.data\n}\n\nexport const sendResetPasswordMailApi = async (\n  email: string,\n): Promise<string> => {\n  const response = await axios.post(\n    `/auth/send_reset_password_mail?email=${email}`,\n  )\n  return response.data\n}\n","const HOST = process.env.REACT_APP_SERVER_HOST ?? 'localhost'\nconst PORT = process.env.REACT_APP_SERVER_PORT ?? 8000\n\nexport const BASE_URL = `http://${HOST}:${PORT}`\nexport const WS_BASE_URL = `ws://${HOST}:${PORT}`\n","import axiosLibrary from 'axios'\nimport { refreshTokenApi } from 'api/auth/Auth'\nimport { BASE_URL } from 'const/API'\nimport { getExToken, getToken, logout, saveToken } from 'utils/auth/AuthUtils'\n\nconst axios = axiosLibrary.create({\n  baseURL: BASE_URL,\n  timeout: 600000,\n})\n\naxios.interceptors.request.use(\n  async (config) => {\n    config.headers.Authorization = `Bearer ${getToken()}`\n    config.headers.ExToken = getExToken()\n    return config\n  },\n  (error) => Promise.reject(error),\n)\n\naxios.interceptors.response.use(\n  async (res) => res,\n  async (error) => {\n    if (error?.response?.status === 401) {\n      try {\n        const { access_token } = await refreshTokenApi()\n        saveToken(access_token)\n        error.config.headers.Authorization = `Bearer ${access_token}`\n        return axiosLibrary(error.config)\n      } catch (e: any) {\n        if (e?.response?.status === 400) {\n          logout()\n        }\n        throw e\n      }\n    }\n    return Promise.reject(error)\n  },\n)\n\nexport default axios\n","import axios from 'utils/axios'\nimport { UserDTO, UpdateUserDTO, UpdateUserPasswordDTO } from './UsersApiDTO'\n\nexport const getMeApi = async (): Promise<UserDTO> => {\n  const response = await axios.get('/users/me')\n  return response.data\n}\n\nexport const updateMeApi = async (data: UpdateUserDTO): Promise<UserDTO> => {\n  const response = await axios.put('/users/me', data)\n  return response.data\n}\n\nexport const updateMePasswordApi = async (\n  data: UpdateUserPasswordDTO,\n): Promise<UserDTO> => {\n  const response = await axios.put('/users/me/password', data)\n  return response.data\n}\n\nexport const deleteMeApi = async (): Promise<string> => {\n  const response = await axios.delete('/users/me')\n  return response.data\n}\n","import axios from 'utils/axios'\nimport {\n  AddUserDTO,\n  UserDTO,\n  ListUsersQueryDTO,\n  UpdateUserDTO,\n  UserListDTO,\n} from './UsersApiDTO'\nimport qs from 'qs'\n\nexport const createUserApi = async (data: AddUserDTO): Promise<UserDTO> => {\n  const response = await axios.post('/admin/users', data)\n  return response.data\n}\n\nexport const getUserApi = async (uid: string): Promise<UserDTO> => {\n  const response = await axios.get(`/admin/users/${uid}`)\n  return response.data\n}\n\nexport const listUsersApi = async (\n  data: ListUsersQueryDTO,\n): Promise<UserListDTO> => {\n  const paramsNew = qs.stringify(data, { indices: false })\n  const response = await axios.get(`/admin/users?${paramsNew}`)\n  return response.data\n}\n\nexport const updateUserApi = async (\n  id: number,\n  data: UpdateUserDTO,\n): Promise<UserDTO> => {\n  const response = await axios.put(`/admin/users/${id}`, data)\n  return response.data\n}\n\nexport const deleteUserApi = async (id: number): Promise<string> => {\n  const response = await axios.delete(`/admin/users/${id}`)\n  return response.data\n}\n\nexport const getListSearchApi = async (data: {\n  keyword: string | null\n}): Promise<UserDTO[]> => {\n  const response = await axios.get(\n    `/users/search/share_users${\n      data.keyword ? `?keyword=${data.keyword}` : ''\n    }`,\n  )\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { USER_SLICE_NAME } from './UserType'\nimport {\n  deleteMeApi,\n  getMeApi,\n  updateMeApi,\n  updateMePasswordApi,\n} from 'api/users/UsersMe'\nimport {\n  AddUserDTO,\n  ListUsersQueryDTO,\n  UpdateUserDTO,\n  UpdateUserPasswordDTO,\n  UserDTO,\n} from 'api/users/UsersApiDTO'\nimport { LoginDTO, loginApi } from 'api/auth/Auth'\nimport {\n  deleteUserApi,\n  createUserApi,\n  listUsersApi,\n  updateUserApi,\n} from 'api/users/UsersAdmin'\nimport { getListSearchApi } from 'api/users/UsersAdmin'\n\nexport const login = createAsyncThunk(\n  `${USER_SLICE_NAME}/login`,\n  async (data: LoginDTO, thunkAPI) => {\n    try {\n      const responseData = await loginApi(data)\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getMe = createAsyncThunk(\n  `${USER_SLICE_NAME}/getMe`,\n  async (_, thunkAPI) => {\n    try {\n      const responseData = await getMeApi()\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const updateMe = createAsyncThunk(\n  `${USER_SLICE_NAME}/updateMe`,\n  async (data: UpdateUserDTO, thunkAPI) => {\n    try {\n      const responseData = await updateMeApi(data)\n      await thunkAPI.dispatch(getMe())\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteMe = createAsyncThunk(\n  `${USER_SLICE_NAME}/deleteMe`,\n  async (_, thunkAPI) => {\n    try {\n      const responseData = await deleteMeApi()\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const updateMePassword = createAsyncThunk(\n  `${USER_SLICE_NAME}/updateMePassword`,\n  async (data: UpdateUserPasswordDTO, thunkAPI) => {\n    try {\n      return await updateMePasswordApi(data)\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getListUser = createAsyncThunk(\n  `${USER_SLICE_NAME}/getListUser`,\n  async (params: ListUsersQueryDTO, thunkAPI) => {\n    try {\n      return await listUsersApi(params)\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getListSearch = createAsyncThunk<\n  UserDTO[],\n  { keyword: string | null }\n>(`${USER_SLICE_NAME}/getListSearch`, async (params, thunkAPI) => {\n  try {\n    const responseData = await getListSearchApi(params)\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const createUser = createAsyncThunk<\n  UserDTO,\n  { data: AddUserDTO; params: ListUsersQueryDTO }\n>(`${USER_SLICE_NAME}/createUser`, async (props, thunkAPI) => {\n  try {\n    const { dispatch } = thunkAPI\n    const responseData = await createUserApi(props.data)\n    await dispatch(getListUser(props.params))\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const updateUser = createAsyncThunk<\n  UserDTO,\n  { id: number; data: UpdateUserDTO; params: ListUsersQueryDTO }\n>(`${USER_SLICE_NAME}/updateUser`, async (props, thunkAPI) => {\n  const { dispatch } = thunkAPI\n  try {\n    const responseData = await updateUserApi(props.id, props.data)\n    await dispatch(getListUser(props.params))\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const deleteUser = createAsyncThunk<\n  string,\n  { id: number; params: ListUsersQueryDTO }\n>(`${USER_SLICE_NAME}/deleteUser`, async (data, thunkAPI) => {\n  const { dispatch } = thunkAPI\n  try {\n    const responseData = await deleteUserApi(data.id)\n    await dispatch(getListUser(data.params))\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","export default __webpack_public_path__ + \"static/media/logo.e44efe32.png\";","import IconButton from '@mui/material/IconButton'\nimport GitHubIcon from '@mui/icons-material/GitHub'\nimport MenuBookIcon from '@mui/icons-material/MenuBook'\nimport { Tooltip } from '@mui/material'\n\n\nconst Tooltips: React.FC = () => {\n  return (\n    <>\n      <Tooltip title=\"GitHub repository\">\n        <IconButton\n          sx={{ mr: 1 }}\n          href=\"https://github.com/oist/optinist\"\n          target=\"_blank\"\n        >\n          <GitHubIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Documentation\">\n        <IconButton\n          href=\"https://optinist.readthedocs.io/en/latest/\"\n          target=\"_blank\"\n        >\n          <MenuBookIcon />\n        </IconButton>\n      </Tooltip>\n    </>\n  )\n}\n\nexport default Tooltips\n","export const IS_STANDALONE = !(process.env.REACT_APP_IS_STANDALONE === 'false')\nexport const STANDALONE_WORKSPACE_ID = 1\n","import { IS_STANDALONE } from 'const/Mode'\nimport { RootState } from 'store/store'\n\nexport const selectWorkspace = (state: RootState) => state.workspace\nexport const selectWorkspaceListUserShare = (state: RootState) =>\n  state.workspace.listUserShare\nexport const selectWorkspaceData = (state: RootState) =>\n  state.workspace.workspace\n\nexport const selectWorkspaceItem =\n  (workspaceId: number) => (state: RootState) =>\n    selectWorkspaceData(state).items.find((item) => item.id === workspaceId)\n\nexport const selectActiveTab = (state: RootState) =>\n  state.workspace.currentWorkspace.selectedTab\n\nexport const selectCurrentWorkspaceId = (state: RootState) =>\n  state.workspace.currentWorkspace.workspaceId\n\nexport const selectCurrentWorkspaceOwnerId = (state: RootState) =>\n  state.workspace.currentWorkspace.ownerId\n\nexport const selectIsLoadingWorkspaceList = (state: RootState) =>\n  state.workspace.loading\n\nexport const selectIsWorkspaceOwner = (state: RootState) =>\n  IS_STANDALONE\n    ? true\n    : state.workspace.currentWorkspace.ownerId === state.user.currentUser?.id\n","import { UserDTO } from '../../../api/users/UsersApiDTO'\n\nexport const WORKSPACE_SLICE_NAME = 'workspace'\n\nexport type ItemsWorkspace = {\n  id: number\n  name: string\n  user: {\n    id: number\n    name: string\n    email: string\n    created_at: string\n    updated_at: string\n  }\n  created_at: string\n  updated_at: string\n}\n\nexport type WorkspaceDataDTO = {\n  items: ItemsWorkspace[]\n  total: number\n  limit: number\n  offset: number\n}\n\nexport type Workspace = {\n  workspace: WorkspaceDataDTO\n  currentWorkspace: {\n    workspaceId?: number\n    selectedTab: number\n    ownerId?: number\n  }\n  loading: boolean\n  listUserShare?: ListUserShareWorkspaceDTO\n}\n\nexport type ListUserShareWorkSpace = {\n  id: number\n  name: string\n  email: string\n  created_at: string\n  updated_at: string\n}\n\nexport type ListUserShareWorkspaceDTO = {\n  users: UserDTO[]\n}\n\nexport type WorkspaceParams = {\n  [key: string]: string | undefined | number | string[] | object\n}\n","export const WORKFLOW_SLICE_NAME = 'workflow'\n","import axios from 'utils/axios'\n\nimport { EdgeDict, NodeDict } from 'api/run/Run'\nimport { BASE_URL } from 'const/API'\n\nexport type WorkflowConfigDTO = {\n  nodeDict: NodeDict\n  edgeDict: EdgeDict\n}\n\nexport async function reproduceWorkflowApi(\n  workspaceId: number,\n  uid: string,\n): Promise<WorkflowConfigDTO> {\n  const response = await axios.get(\n    `${BASE_URL}/workflow/reproduce/${workspaceId}/${uid}`,\n  )\n  return response.data\n}\n\nexport async function downloadWorkflowConfigApi(\n  workspaceId: number,\n  uid: string,\n) {\n  const response = await axios.get(\n    `${BASE_URL}/workflow/download/${workspaceId}/${uid}`,\n    {\n      responseType: 'blob',\n    },\n  )\n  return response.data\n}\n\nexport async function importWorkflowConfigApi(\n  formData: FormData,\n): Promise<WorkflowConfigDTO> {\n  const response = await axios.post(`${BASE_URL}/workflow/import`, formData)\n  return response.data\n}\n","import { WORKFLOW_SLICE_NAME } from './WorkflowType'\nimport { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  reproduceWorkflowApi,\n  importWorkflowConfigApi,\n  WorkflowConfigDTO,\n} from 'api/workflow/Workflow'\n\nexport const reproduceWorkflow = createAsyncThunk<\n  WorkflowConfigDTO,\n  { workspaceId: number; uid: string }\n>(\n  `${WORKFLOW_SLICE_NAME}/reproduceWorkflow`,\n  async ({ workspaceId, uid }, thunkAPI) => {\n    try {\n      const response = await reproduceWorkflowApi(workspaceId, uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const importWorkflowConfig = createAsyncThunk<\n  WorkflowConfigDTO,\n  { formData: FormData }\n>(\n  `${WORKFLOW_SLICE_NAME}/importWorkflowConfig`,\n  async ({ formData }, thunkAPI) => {\n    try {\n      const response = await importWorkflowConfigApi(formData)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import axios from 'utils/axios'\nimport qs from 'qs'\nimport {\n  ItemsWorkspace,\n  WorkspaceDataDTO,\n  ListUserShareWorkspaceDTO,\n} from 'store/slice/Workspace/WorkspaceType'\n\nexport type WorkspacePostDataDTO = { name: string; id?: number }\n\nexport const getWorkspaceApi = async (id: number): Promise<ItemsWorkspace> => {\n  const response = await axios.get(`/workspace/${id}`)\n  return response.data\n}\n\nexport const getWorkspacesApi = async (params: {\n  [key: string]: number\n}): Promise<WorkspaceDataDTO> => {\n  const paramsNew = qs.stringify(params, { indices: false })\n  const response = await axios.get(`/workspaces?${paramsNew}`)\n  return response.data\n}\n\nexport const delWorkspaceApi = async (id: number): Promise<boolean> => {\n  const response = await axios.delete(`/workspace/${id}`)\n  return response.data\n}\n\nexport const postWorkspaceApi = async (\n  data: WorkspacePostDataDTO,\n): Promise<ItemsWorkspace> => {\n  const response = await axios.post(`/workspace`, data)\n  return response.data\n}\n\nexport const putWorkspaceApi = async (\n  data: WorkspacePostDataDTO,\n): Promise<ItemsWorkspace> => {\n  const response = await axios.put(`/workspace/${data.id}`, { name: data.name })\n  return response.data\n}\n\nexport const getListUserShareWorkspaceApi = async (\n  id: number,\n): Promise<ListUserShareWorkspaceDTO> => {\n  const response = await axios.get(`/workspace/share/${id}/status`)\n  return response.data\n}\n\nexport const postListUserShareWorkspaceApi = async (\n  id: number,\n  data: { user_ids: number[] },\n): Promise<boolean> => {\n  const response = await axios.post(`/workspace/share/${id}/status`, data)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  WorkspacePostDataDTO,\n  delWorkspaceApi,\n  getWorkspaceApi,\n  getWorkspacesApi,\n  postWorkspaceApi,\n  putWorkspaceApi,\n  getListUserShareWorkspaceApi,\n  postListUserShareWorkspaceApi,\n} from 'api/workspace'\nimport {\n  ItemsWorkspace,\n  WorkspaceDataDTO,\n  WorkspaceParams,\n  ListUserShareWorkspaceDTO,\n  WORKSPACE_SLICE_NAME,\n} from './WorkspaceType'\n\nexport const getWorkspace = createAsyncThunk<ItemsWorkspace, { id: number }>(\n  `${WORKSPACE_SLICE_NAME}/getWorkspace`,\n  async (data, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getWorkspaceApi(data.id)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const getWorkspaceList = createAsyncThunk<\n  WorkspaceDataDTO,\n  { [key: string]: number }\n>(`${WORKSPACE_SLICE_NAME}/getWorkspaceList`, async (params, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await getWorkspacesApi(params)\n    return response\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n\nexport const delWorkspace = createAsyncThunk<boolean, WorkspaceParams>(\n  `${WORKSPACE_SLICE_NAME}/delWorkspaceList`,\n  async (data, thunkAPI) => {\n    const { rejectWithValue, dispatch } = thunkAPI\n    try {\n      const response = await delWorkspaceApi(Number(data.id))\n      await dispatch(getWorkspaceList(data.params as { [key: string]: number }))\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const postWorkspace = createAsyncThunk<\n  ItemsWorkspace,\n  WorkspacePostDataDTO\n>(`${WORKSPACE_SLICE_NAME}/postWorkspaceList`, async (data, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await postWorkspaceApi(data)\n    return response\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n\nexport const putWorkspace = createAsyncThunk<\n  ItemsWorkspace,\n  WorkspacePostDataDTO\n>(`${WORKSPACE_SLICE_NAME}/putWorkspaceList`, async (data, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await putWorkspaceApi(data)\n    return response\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n\nexport const getListUserShareWorkSpaces = createAsyncThunk<\n  ListUserShareWorkspaceDTO,\n  { id: number }\n>(\n  `${WORKSPACE_SLICE_NAME}/getListUserShareWorkSpaces`,\n  async (params, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getListUserShareWorkspaceApi(params.id)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const postListUserShareWorkspaces = createAsyncThunk<\n  boolean,\n  {\n    id: number\n    data: { user_ids: number[] }\n  }\n>(\n  `${WORKSPACE_SLICE_NAME}/postListUserShareWorkspaces`,\n  async (params, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await postListUserShareWorkspaceApi(\n        params.id,\n        params.data,\n      )\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { PayloadAction, createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { WORKSPACE_SLICE_NAME, Workspace } from './WorkspaceType'\nimport { reproduceWorkflow } from '../Workflow/WorkflowActions'\nimport {\n  delWorkspace,\n  getListUserShareWorkSpaces,\n  getWorkspace,\n  getWorkspaceList,\n  postListUserShareWorkspaces,\n  postWorkspace,\n  putWorkspace,\n} from './WorkspaceActions'\n\nconst initialState: Workspace = {\n  currentWorkspace: {\n    selectedTab: 0,\n  },\n  workspace: {\n    items: [],\n    total: 0,\n    limit: 50,\n    offset: 0,\n  },\n  loading: false,\n  listUserShare: undefined,\n}\n\nexport const workspaceSlice = createSlice({\n  name: WORKSPACE_SLICE_NAME,\n  initialState,\n  reducers: {\n    setActiveTab: (state, action: PayloadAction<number>) => {\n      state.currentWorkspace.selectedTab = action.payload\n    },\n    setCurrentWorkspace: (state, action: PayloadAction<number>) => {\n      state.currentWorkspace.workspaceId = action.payload\n    },\n    clearCurrentWorkspace: (state) => {\n      state.currentWorkspace = {\n        selectedTab: 0,\n      }\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(reproduceWorkflow.fulfilled, (state, action) => {\n        state.currentWorkspace.workspaceId = action.meta.arg.workspaceId\n      })\n      .addCase(getWorkspace.fulfilled, (state, action) => {\n        state.currentWorkspace.workspaceId = action.payload.id\n        state.currentWorkspace.ownerId = action.payload.user.id\n        state.loading = false\n      })\n      .addCase(getWorkspaceList.fulfilled, (state, action) => {\n        state.workspace = action.payload\n        state.loading = false\n      })\n      .addCase(getListUserShareWorkSpaces.fulfilled, (state, action) => {\n        state.listUserShare = action.payload\n        state.loading = false\n      })\n      .addMatcher(\n        isAnyOf(\n          getWorkspace.rejected,\n          getWorkspaceList.rejected,\n          postWorkspace.fulfilled,\n          postWorkspace.rejected,\n          putWorkspace.fulfilled,\n          putWorkspace.rejected,\n          delWorkspace.fulfilled,\n          delWorkspace.rejected,\n          getListUserShareWorkSpaces.rejected,\n          postListUserShareWorkspaces.rejected,\n        ),\n        (state) => {\n          state.loading = false\n        },\n      )\n      .addMatcher(\n        isAnyOf(\n          getWorkspace.pending,\n          getWorkspaceList.pending,\n          postWorkspace.pending,\n          putWorkspace.pending,\n          delWorkspace.pending,\n          getListUserShareWorkSpaces.pending,\n          postListUserShareWorkspaces.pending,\n        ),\n        (state) => {\n          state.loading = true\n        },\n      )\n  },\n})\n\nexport const { setCurrentWorkspace, clearCurrentWorkspace, setActiveTab } =\n  workspaceSlice.actions\nexport default workspaceSlice.reducer\n","import { FC } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport { selectActiveTab } from 'store/slice/Workspace/WorkspaceSelector'\nimport { setActiveTab } from 'store/slice/Workspace/WorkspaceSlice'\n\nconst WorkspaceTabs: FC = () => {\n  const dispatch = useDispatch()\n  const activeTab = useSelector(selectActiveTab)\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    dispatch(setActiveTab(newValue))\n  }\n\n  return (\n    <Tabs\n      sx={{ width: '100%' }}\n      value={activeTab}\n      onChange={handleChange}\n      centered\n      textColor=\"primary\"\n    >\n      <Tab label=\"Workflow\" {...a11yProps(0)} />\n      <Tab label=\"Visualize\" {...a11yProps(1)} />\n      <Tab label=\"Record\" {...a11yProps(2)} />\n    </Tabs>\n  )\n}\n\nfunction a11yProps(index: number | string) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default WorkspaceTabs\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { USER_SLICE_NAME } from './UserType'\nimport { User } from './UserType'\nimport {\n  deleteMe,\n  getListUser,\n  getListSearch,\n  getMe,\n  login,\n  updateMe,\n  updateMePassword,\n  deleteUser,\n  createUser,\n  updateUser,\n} from './UserActions'\nimport {\n  removeExToken,\n  removeToken,\n  saveExToken,\n  saveRefreshToken,\n  saveToken,\n} from 'utils/auth/AuthUtils'\n\nconst initialState: User = {\n  currentUser: undefined,\n  listUserSearch: undefined,\n  listUser: undefined,\n  loading: false,\n}\n\nexport const userSlice = createSlice({\n  name: USER_SLICE_NAME,\n  initialState,\n  reducers: {\n    logout: (state) => {\n      removeToken()\n      removeExToken()\n      state = initialState\n    },\n    resetUserSearch: (state) => {\n      state.listUserSearch = []\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(login.fulfilled, (_, action) => {\n        saveToken(action.payload.access_token)\n        saveRefreshToken(action.payload.refresh_token)\n        saveExToken(action.payload.ex_token)\n      })\n      .addCase(getMe.fulfilled, (state, action) => {\n        state.currentUser = action.payload\n      })\n      .addCase(getListUser.fulfilled, (state, action) => {\n        state.listUser = action.payload\n        state.loading = false\n      })\n      .addCase(getListSearch.fulfilled, (state, action) => {\n        state.listUserSearch = action.payload\n      })\n      .addMatcher(\n        isAnyOf(\n          getListSearch.rejected,\n          createUser.rejected,\n          getListUser.rejected,\n          updateUser.rejected,\n          updateMePassword.rejected,\n          updateMePassword.fulfilled,\n          deleteUser.fulfilled,\n          deleteUser.rejected,\n          deleteMe.rejected,\n          deleteMe.fulfilled,\n          updateMe.rejected,\n          updateMe.fulfilled,\n          createUser.fulfilled,\n        ),\n        (state) => {\n          state.loading = false\n        },\n      )\n      .addMatcher(\n        isAnyOf(\n          getListUser.pending,\n          deleteUser.pending,\n          createUser.pending,\n          updateMe.pending,\n          deleteMe.pending,\n          updateUser.pending,\n          updateMePassword.pending,\n        ),\n        (state) => {\n          state.loading = true\n        },\n      )\n      .addMatcher(\n        isAnyOf(login.rejected, getMe.rejected, deleteMe.fulfilled),\n        (state) => {\n          removeToken()\n          removeExToken()\n          state = initialState\n        },\n      )\n  },\n})\n\nexport const { logout, resetUserSearch } = userSlice.actions\nexport default userSlice.reducer\n","import { FC, useState } from 'react'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport { Menu, MenuItem } from '@mui/material'\nimport { useDispatch } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport PortraitIcon from '@mui/icons-material/Portrait'\nimport Logout from '@mui/icons-material/Logout'\nimport { useNavigate } from 'react-router-dom'\nimport { logout } from 'store/slice/User/UserSlice'\n\nconst Profile: FC = () => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null)\n  }\n\n  const onClickLogout = () => {\n    setAnchorEl(null)\n    dispatch(logout())\n    navigate('/login')\n  }\n\n  const onClickAccount = () => {\n    setAnchorEl(null)\n    navigate('/console/account')\n  }\n\n  return (\n    <>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open profile menu\"\n        aria-haspopup=\"true\"\n        onClick={handleMenu}\n      >\n        <AccountCircleIcon />\n      </IconButton>\n      <Menu\n        id=\"profile-menu\"\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        keepMounted\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n      >\n        <MenuItem onClick={onClickAccount}>\n          <PortraitIcon /> Account Profile\n        </MenuItem>\n        <MenuItem onClick={onClickLogout}>\n          <Logout />\n          SIGN OUT\n        </MenuItem>\n      </Menu>\n    </>\n  )\n}\n\nexport default Profile\n","export const APP_BAR_HEIGHT = 60\nexport const CONTENT_HEIGHT = `calc(100vh - 48px - ${APP_BAR_HEIGHT}px)` // 48px: spacing(3)\nexport const DRAWER_WIDTH = 240\nexport const RIGHT_DRAWER_WIDTH = 320\n","import { FC } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { styled } from '@mui/material/styles'\nimport MuiAppBar from '@mui/material/AppBar'\nimport Box from '@mui/material/Box'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport IconButton from '@mui/material/IconButton'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport Logo from 'components/logo.png'\nimport Tooltips from 'components/Layout/Tooltips'\nimport WorkspaceTabs from 'components/Workspace/WorkspaceTabs'\nimport { IS_STANDALONE } from 'const/Mode'\nimport Profile from './Profile'\nimport { APP_BAR_HEIGHT } from 'const/Layout'\n\nconst Header: FC<{\n  handleDrawerOpen: () => void\n}> = ({ handleDrawerOpen }) => {\n  return IS_STANDALONE ? (\n    <StandaloneHeader />\n  ) : (\n    <MultiUserHeader handleDrawerOpen={handleDrawerOpen} />\n  )\n}\n\nconst StandaloneHeader: FC = () => {\n  return (\n    <StyledAppBar>\n      <Toolbar>\n        <Box display=\"flex\" flexGrow={1}>\n          <img src={Logo} alt=\"logo\" width={75} height={50} />\n        </Box>\n        <WorkspaceTabs />\n        <Tooltips />\n      </Toolbar>\n    </StyledAppBar>\n  )\n}\n\nconst MultiUserHeader: FC<{ handleDrawerOpen: () => void }> = ({\n  handleDrawerOpen,\n}) => {\n  const showTabsRegex = /^\\/console\\/workspaces\\/.+$/\n  const location = useLocation()\n\n  return (\n    <StyledAppBar>\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          edge=\"start\"\n        >\n          <MenuIcon />\n        </IconButton>\n        <Box display=\"flex\" flexGrow={1}>\n          <TitleLogo>STUDIO</TitleLogo>\n        </Box>\n        {showTabsRegex.test(location.pathname) && <WorkspaceTabs />}\n        <Profile />\n      </Toolbar>\n    </StyledAppBar>\n  )\n}\n\nconst StyledAppBar = styled(MuiAppBar)({\n  position: 'fixed',\n  backgroundColor: '#E1DEDB',\n  color: '#000000',\n  height: APP_BAR_HEIGHT,\n})\n\nconst TitleLogo = styled(Typography)({\n  fontWeight: 600,\n  fontSize: 22,\n})\n\nexport default Header\n","import { FC } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport Drawer from '@mui/material/Drawer'\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemButton from '@mui/material/ListItemButton'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport ListItemText from '@mui/material/ListItemText'\nimport DashboardIcon from '@mui/icons-material/Dashboard'\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts'\nimport AnalyticsIcon from '@mui/icons-material/Analytics'\nimport { DRAWER_WIDTH } from 'const/Layout'\nimport { Box } from '@mui/material'\nimport { useSelector } from 'react-redux'\nimport { isAdmin } from '../../store/slice/User/UserSelector'\n\nconst LeftMenu: FC<{ open: boolean; handleDrawerClose: () => void }> = ({\n  open,\n  handleDrawerClose,\n}) => {\n  const navigate = useNavigate()\n  const admin = useSelector(isAdmin)\n\n  const onClickDashboard = () => {\n    handleDrawerClose()\n    navigate('/console')\n  }\n\n  const onClickWorkspaces = () => {\n    handleDrawerClose()\n    navigate('/console/workspaces')\n  }\n\n  const onClickAccountManager = () => {\n    handleDrawerClose()\n    navigate('/console/account-manager')\n  }\n\n  return (\n    <>\n      <Drawer anchor=\"left\" open={open} onClose={handleDrawerClose}>\n        <Box sx={{ width: DRAWER_WIDTH }}>\n          <List>\n            <ListItem key=\"dashboard\" disablePadding>\n              <ListItemButton onClick={onClickDashboard}>\n                <ListItemIcon>\n                  <DashboardIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Dashboard\" />\n              </ListItemButton>\n            </ListItem>\n            <ListItem key=\"workspaces\" disablePadding>\n              <ListItemButton onClick={onClickWorkspaces}>\n                <ListItemIcon>\n                  <AnalyticsIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Workspaces\" />\n              </ListItemButton>\n            </ListItem>\n            {admin ? (\n              <ListItem key=\"account-manager\" disablePadding>\n                <ListItemButton onClick={onClickAccountManager}>\n                  <ListItemIcon>\n                    <ManageAccountsIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Account Manager\" />\n                </ListItemButton>\n              </ListItem>\n            ) : null}\n          </List>\n        </Box>\n      </Drawer>\n    </>\n  )\n}\n\nexport default LeftMenu\n","import { Box, keyframes, styled } from '@mui/material'\n\nconst Loading = () => {\n  return (\n    <LoaderWrapper>\n      <Loader />\n    </LoaderWrapper>\n  )\n}\n\nconst LoaderWrapper = styled(Box)(({ theme }) => ({\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  position: 'fixed',\n  backgroundColor: 'rgba(255,255,255,0.6)',\n  zIndex: 100000,\n}))\n\nconst rotate = keyframes`\n  100%   {transform: rotate(360deg)}\n`\n\nconst prixClipFix = keyframes`\n  0%   {clip-path:polygon(50% 50%,0 0,0 0,0 0,0 0,0 0)}\n  25%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 0,100% 0,100% 0)}\n  50%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,100% 100%,100% 100%)}\n  75%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 100%)}\n  100% {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 0)}\n`\n\nconst Loader = styled('span')(({ theme }) => ({\n  display: 'block',\n  width: 48,\n  height: 48,\n  borderRadius: '50%',\n  position: 'relative',\n  zIndex: 100,\n  top: 'calc(50% - 24px)',\n  left: 'calc(50% - 24px)',\n  animation: `${rotate} 1s linear infinite`,\n  '&:before': {\n    content: \"''\",\n    boxSizing: 'border-box',\n    position: 'absolute',\n    inset: 0,\n    borderRadius: '50%',\n    border: '3px solid rgba(0,0,0,0.8)',\n    animation: `${prixClipFix} 2s linear infinite`,\n  },\n}))\n\nexport default Loading\n","import { FC, ReactNode, useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { Box } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { getToken } from 'utils/auth/AuthUtils'\nimport { selectCurrentUser } from 'store/slice/User/UserSelector'\nimport { getMe } from 'store/slice/User/UserActions'\nimport Header from './Header'\nimport LeftMenu from './LeftMenu'\nimport { IS_STANDALONE } from 'const/Mode'\nimport Loading from 'components/common/Loading'\nimport { APP_BAR_HEIGHT } from 'const/Layout'\n\nconst authRequiredPathRegex = /^\\/console\\/?.*/\n\nconst Layout = ({ children }: { children?: ReactNode }) => {\n  const user = useSelector(selectCurrentUser)\n  const location = useLocation()\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  const [loading, setLoadingAuth] = useState(\n    !IS_STANDALONE && authRequiredPathRegex.test(location.pathname),\n  )\n\n  useEffect(() => {\n    !IS_STANDALONE &&\n      authRequiredPathRegex.test(location.pathname) &&\n      checkAuth()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname, user])\n\n  const checkAuth = async () => {\n    if (user) {\n      if (loading) setLoadingAuth(false)\n      return\n    }\n    const token = getToken()\n    const isLogin = location.pathname === '/login'\n\n    try {\n      if (token) {\n        await dispatch(getMe())\n        if (isLogin) navigate('/console')\n        return\n      } else if (!isLogin) throw new Error('fail auth')\n    } catch {\n      navigate('/login', { replace: true })\n    } finally {\n      if (loading) setLoadingAuth(false)\n    }\n  }\n\n  if (loading) return <Loading />\n\n  return IS_STANDALONE || authRequiredPathRegex.test(location.pathname) ? (\n    <AuthedLayout>{children}</AuthedLayout>\n  ) : (\n    <UnauthedLayout>{children}</UnauthedLayout>\n  )\n}\n\nconst AuthedLayout: FC = ({ children }) => {\n  const [open, setOpen] = useState(false)\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n  return (\n    <LayoutWrapper>\n      <Header handleDrawerOpen={handleDrawerOpen} />\n      <ContentBodyWrapper>\n        <LeftMenu open={open} handleDrawerClose={handleDrawerClose} />\n        <ChildrenWrapper>{children}</ChildrenWrapper>\n      </ContentBodyWrapper>\n    </LayoutWrapper>\n  )\n}\n\nconst UnauthedLayout: FC = ({ children }) => {\n  return (\n    <LayoutWrapper>\n      <ContentBodyWrapper>\n        <ChildrenWrapper>{children}</ChildrenWrapper>\n      </ContentBodyWrapper>\n    </LayoutWrapper>\n  )\n}\n\nconst LayoutWrapper = styled(Box)({\n  height: '100%',\n  width: '100%',\n})\n\nconst ContentBodyWrapper = styled(Box)(() => ({\n  backgroundColor: '#ffffff',\n  display: 'flex',\n  paddingTop: APP_BAR_HEIGHT,\n  height: `calc(100% - ${APP_BAR_HEIGHT}px)`,\n  paddingRight: 10,\n  overflow: 'auto',\n}))\n\nconst ChildrenWrapper = styled('main', {\n  shouldForwardProp: (prop) => prop !== 'open',\n})<{}>(({ theme }) => ({\n  flexGrow: 1,\n  padding: theme.spacing(3),\n  transition: theme.transitions.create('margin', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n}))\n\nexport default Layout\n","import { Link } from 'react-router-dom'\nimport { Box, styled, Typography } from '@mui/material'\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\nimport AnalyticsIcon from '@mui/icons-material/Analytics'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {isAdmin, selectCurrentUser} from 'store/slice/User/UserSelector'\nimport {useEffect} from \"react\";\nimport {getMe} from \"../../store/slice/User/UserActions\";\n\nconst Dashboard = () => {\n  const dispatch = useDispatch()\n  const admin = useSelector(isAdmin)\n  const user = useSelector(selectCurrentUser)\n  useEffect(() => {\n    if(!user) return\n    dispatch(getMe())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <BoxWrapper>\n      <h1 style={{ paddingLeft: 16 }}>Dashboard</h1>\n      <DashboardWrapper>\n        <DashboardContent>\n          <LinkWrapper to=\"/console/workspaces\">\n            <BoxMenu>\n              <Box>\n                <AnalyticsIcon fontSize=\"large\" />\n                <TitleMenu>Workspaces</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          {\n            admin ?\n              <LinkWrapper to=\"/console/account-manager\">\n                <BoxMenu>\n                  <Box>\n                    <ManageAccountsIcon fontSize=\"large\" />\n                    <TitleMenu>Account Manager</TitleMenu>\n                  </Box>\n                </BoxMenu>\n              </LinkWrapper>: null\n          }\n        </DashboardContent>\n      </DashboardWrapper>\n    </BoxWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n})\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst DashboardWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 'calc(100% - 90px)',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst DashboardContent = styled(Box)(() => ({\n  padding: 30,\n  display: 'flex',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  gap: 32,\n}))\n\nconst BoxMenu = styled(Box)(() => ({\n  width: 170,\n  height: 150,\n  backgroundColor: '#283237',\n  borderRadius: 4,\n  padding: '40px 30px',\n  color: '#fff',\n  textAlign: 'center',\n  fontSize: 24,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.1)',\n    backgroundColor: 'rgba(40,50,55,0.9)',\n  },\n}))\n\nconst TitleMenu = styled(Typography)(() => ({\n  fontSize: 24,\n  marginTop: 30,\n}))\n\nexport default Dashboard\n","export const regexPassword =\n  /^(?=.*\\d)(?=.*[!#$%&()*+,-./@_|])(?=.*[a-zA-Z]).{6,255}$/\n\nexport const regexEmail =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nexport const regexIgnoreS = /[^!#$%&()*+,-./@_|a-zA-Z0-9]/\n","import { styled } from '@mui/material'\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error?: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nexport default Input\n","import { ChangeEvent, FC, FocusEvent, useState } from 'react'\nimport { Box, styled, Typography } from '@mui/material'\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\nimport Input from 'components/common/Input'\n\nconst style: object = {\n  position: 'absolute',\n  right: 5,\n  top: 8,\n  fontSize: 20,\n  cursor: 'pointer',\n  color: 'rgba(0,0,0,0.6)',\n}\n\ntype InputPasswordProps = {\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void\n  error?: string\n  name?: string\n  placeholder?: string\n  onBlur?:  (event: FocusEvent<HTMLInputElement>) => void\n}\n\nconst InputPassword: FC<InputPasswordProps> = ({ error, ...p }) => {\n  const [type, setType] = useState('password')\n\n  const onShow = () => {\n    setType('text')\n  }\n\n  const onHidden = () => {\n    setType('password')\n  }\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <Input {...p} type={type} />\n      {type === 'password' ? (\n        <VisibilityIcon style={style} onClick={onShow} />\n      ) : (\n        <VisibilityOffIcon style={style} onClick={onHidden} />\n      )}\n      <TextError>{error}</TextError>\n    </Box>\n  )\n}\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  marginTop: -14,\n  wordBreak: 'break-word',\n})\n\nexport default InputPassword\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport { ChangeEvent, FC, useState } from 'react'\nimport { regexIgnoreS, regexPassword } from 'const/Auth'\nimport InputPassword from 'components/Account/InputPassword'\n\ntype ChangePasswordModalProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: (oldPass: string, newPass: string) => void\n}\n\nconst ChangePasswordModal: FC<ChangePasswordModalProps> = ({\n  onClose,\n  open,\n  onSubmit,\n}) => {\n  const [errors, setErrors] = useState<{ [key: string]: string }>({})\n  const [values, setValues] = useState<{ [key: string]: string }>({})\n  const onChangeValue = (\n    event: ChangeEvent<HTMLInputElement>,\n    validate?: Function,\n  ) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    if(name === 'new_password' && values.confirm_password) {\n      if(!validate?.(value)) {\n        setErrors({ ...errors, [name]: validate?.(value), confirm_password: value !== values.confirm_password ? 'Passwords do not match' : ''})\n        return\n      }\n        setErrors({ ...errors, [name]: validate?.(value), confirm_password: ''})\n        return\n    }\n    setErrors({ ...errors, [name]: validate?.(value) })\n  }\n\n  const validatePassword = (value: string): string => {\n    if (!value) return 'This field is required'\n    if(value.length > 255) return 'The text may not be longer than 255 characters'\n    if (!regexPassword.test(value)) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    if(regexIgnoreS.test(value)) {\n      return 'Allowed special characters (!#$%&()*+,-./@_|)'\n    }\n    return ''\n  }\n\n  const validateReEnter = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (value !== values.new_password) {\n      return 'Passwords do not match'\n    }\n    return ''\n  }\n\n  const validateReEnterWhenInputPassword = () => {\n    const { reEnter, new_password } = values\n    if (!new_password) setErrors((pre) => ({ ...pre, new_password: 'This field is required' }))\n    if (reEnter && reEnter !== new_password) {\n      setErrors((pre) => ({ ...pre, reEnter: 'Passwords do not match' }))\n    }\n  }\n\n  const validateForm = () => {\n    const errorNewPass = validatePassword(values.new_password)\n    const errorConfirmPass = validatePassword(values.confirm_password)\n    return {\n      new_password: errorNewPass,\n      confirm_password: errorConfirmPass\n    }\n  }\n\n  const onChangePass = () => {\n    const newErrors: { [key: string]: string } = validateForm()\n    if(errors.new_password || errors.confirm_password) return\n    if(newErrors.new_password || newErrors.confirm_password) {\n      setErrors(newErrors)\n      return\n    }\n    onSubmit(values.password, values.new_password)\n  }\n\n  const onCloseModal = () => {\n    setErrors({})\n    setValues({})\n    onClose()\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <ContentDelete>\n        <BoxTitle>\n          <Typography sx={{ fontWeight: 600, fontSize: 18 }}>\n            Change Password\n          </Typography>\n          <Typography style={{ fontSize: 13 }}>\n            <span style={{ color: 'red' }}>*</span> is required\n          </Typography>\n        </BoxTitle>\n        <BoxConfirm>\n          <FormInline>\n            <Label>\n              Old Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e)}\n              name=\"password\"\n              error={errors.password}\n              onBlur={(e) => onChangeValue(e)}\n              placeholder=\"Old Password\"\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              New Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validatePassword)}\n              name=\"new_password\"\n              error={errors.new_password}\n              placeholder=\"New Password\"\n              onBlur={validateReEnterWhenInputPassword}\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              Confirm Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validateReEnter)}\n              name=\"confirm_password\"\n              error={errors.confirm_password}\n              placeholder=\"Confirm Password\"\n              onBlur={(e) => onChangeValue(e, validateReEnter)}\n            />\n          </FormInline>\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <ButtonConfirm onClick={() => onChangePass()}>UPDATE</ButtonConfirm>\n          </Box>\n        </BoxConfirm>\n        <Button onClick={onCloseModal}>\n          <Typography\n            sx={{\n              textDecoration: 'underline',\n              textTransform: 'none',\n              lineHeight: '17px',\n            }}\n          >\n            Close\n          </Typography>\n        </Button>\n      </ContentDelete>\n    </Modal>\n  )\n}\n\nconst BoxTitle = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n})\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 450px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0',\n})\n\nconst FormInline = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: 10,\n})\n\nconst Label = styled(Typography)({\n  fontSize: 14,\n  marginTop: 7,\n  width: '100%',\n})\n\nconst ButtonConfirm = styled(Button)({\n  height: 36,\n  color: '#ffffff',\n  marginTop: -1,\n  width: 90,\n  backgroundColor: '#283237 !important',\n  \"&:hover\": {\n    backgroundColor: '#283237',\n  }\n})\n\nexport default ChangePasswordModal\n","import { FC, useState } from 'react'\nimport { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport Input  from 'components/common/Input'\nimport Loading from \"../common/Loading\";\n\ntype DeleteConfirmModalProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: () => void\n  titleSubmit: string\n  description: string\n  isLoading?: boolean\n}\nconst DeleteConfirmModal: FC<DeleteConfirmModalProps> = ({\n  onClose,\n  open,\n  onSubmit,\n  isLoading,\n  titleSubmit,\n  description,\n}) => {\n  const [textDelete, setTextDelete] = useState('')\n\n  const onConfirm = () => {\n    if (textDelete !== 'DELETE') return\n    onSubmit?.()\n    setTextDelete('')\n  }\n\n  return (\n    <>\n      <Modal\n          open={open}\n          onClose={onClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n      >\n        <ContentDelete>\n          <Typography style={{ whiteSpace: 'pre-wrap' }}>\n            {description}\n            This operation cannot be undone.\n            To continue, type \"<span style={{ fontWeight: 600 }}>DELETE</span>\" in the box below:\n          </Typography>\n          <BoxConfirm>\n            <Input\n                placeholder=\"DELETE\"\n                value={textDelete}\n                onChange={(e) => setTextDelete(e.target.value)}\n            />\n            <ButtonConfirm onClick={onConfirm} sx={{ backgroundColor: 'red !important' }}>{titleSubmit}</ButtonConfirm>\n          </BoxConfirm>\n          <Button onClick={onClose}>\n            <Typography\n                sx={{\n                  textDecoration: 'underline',\n                  textTransform: 'none',\n                  lineHeight: '17px',\n                }}\n            >\n              Close\n            </Typography>\n          </Button>\n        </ContentDelete>\n      </Modal>\n      {\n        isLoading ? <Loading /> : null\n      }\n    </>\n  )\n}\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 500px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst ButtonConfirm = styled(Button)({\n  backgroundColor: '#283237 !important',\n  height: 36,\n  marginLeft: 10,\n  color: '#ffffff',\n  marginTop: -1,\n})\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0 0',\n})\n\nexport default DeleteConfirmModal\n","import { useSelector, useDispatch } from 'react-redux'\nimport {\n  Box,\n  Button,\n  IconButton,\n  Input,\n  styled,\n  Typography,\n} from '@mui/material'\nimport Loading from 'components/common/Loading'\nimport ChangePasswordModal from 'components/Account/ChangePasswordModal'\nimport DeleteConfirmModal from 'components/common/DeleteConfirmModal'\nimport { ChangeEvent, useEffect, useRef, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport {\n  deleteMe,\n  updateMe,\n  updateMePassword,\n} from 'store/slice/User/UserActions'\nimport { selectCurrentUser, selectLoading } from 'store/slice/User/UserSelector'\nimport { ROLE } from '../../@types'\nimport { useSnackbar, VariantType } from 'notistack'\nimport Edit from '@mui/icons-material/Edit'\nconst Account = () => {\n  const user = useSelector(selectCurrentUser)\n  const loading = useSelector(selectLoading)\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const [isDeleteConfirmModalOpen, setIsDeleteConfirmModalOpen] =\n    useState(false)\n  const [isChangePwModalOpen, setIsChangePwModalOpen] = useState(false)\n  const [isEditName, setIsEditName] = useState(false)\n  const [isName, setIsName] = useState<string>()\n\n  const ref = useRef<HTMLInputElement>(null)\n\n  const { enqueueSnackbar } = useSnackbar()\n\n  const handleClickVariant = (variant: VariantType, mess: string) => {\n    enqueueSnackbar(mess, { variant })\n  }\n\n  useEffect(() => {\n    if (!user) return\n    setIsName(user.name)\n    //eslint-disable-next-line\n  }, [])\n\n  const handleCloseDeleteComfirmModal = () => {\n    setIsDeleteConfirmModalOpen(false)\n  }\n\n  const onDeleteAccountClick = () => {\n    setIsDeleteConfirmModalOpen(true)\n  }\n\n  const onConfirmDelete = async () => {\n    if (!user) return\n    const data = await dispatch(deleteMe())\n    if ((data as any).error) {\n      handleClickVariant('error', 'Account deleted failed!')\n    } else {\n      navigate('/login')\n    }\n    handleCloseDeleteComfirmModal()\n  }\n\n  const handleCloseChangePw = () => {\n    setIsChangePwModalOpen(false)\n  }\n\n  const onChangePwClick = () => {\n    setIsChangePwModalOpen(true)\n  }\n\n  const onConfirmChangePw = async (oldPass: string, newPass: string) => {\n    const data = await dispatch(\n      updateMePassword({ old_password: oldPass, new_password: newPass }),\n    )\n    if ((data as any).error) {\n      handleClickVariant('error', 'Failed to Change Password!')\n    } else {\n      handleClickVariant(\n        'success',\n        'Your password has been successfully changed!',\n      )\n    }\n    handleCloseChangePw()\n  }\n\n  const onEditName = (e: ChangeEvent<HTMLInputElement>) => {\n    setIsName(e.target.value)\n  }\n\n  const onSubmit = async (e: any) => {\n    if (!user || !user.name || !user.email) return\n    if (isName === user.name) {\n      setIsEditName(false)\n      return\n    }\n    if (!e.target.value) {\n      handleClickVariant('error', \"Full name cann't empty!\")\n      setIsName(user?.name)\n    } else {\n      const data = await dispatch(\n        updateMe({\n          name: e.target.value,\n          email: user.email,\n        }),\n      )\n      if ((data as any).error) {\n        handleClickVariant('error', 'Full name edited failed!')\n      } else {\n        handleClickVariant('success', 'Full name edited successfully!')\n      }\n    }\n    setIsEditName(false)\n  }\n\n  const getRole = (role?: number) => {\n    if (!role) return\n    let newRole = ''\n    switch (role) {\n      case ROLE.ADMIN:\n        newRole = 'Admin'\n        break\n      case ROLE.OPERATOR:\n        newRole = 'Operator'\n        break\n    }\n    return newRole\n  }\n\n  const handleName = (event: any) => {\n    if (event.key === 'Escape') {\n      setIsName(user?.name)\n      setIsEditName(false)\n      return\n    }\n    if (event.key === 'Enter') {\n      if (ref.current) ref.current?.querySelector('input')?.blur?.()\n      return\n    }\n  }\n\n  return (\n    <AccountWrapper>\n      <DeleteConfirmModal\n        titleSubmit=\"Delete My Account\"\n        onClose={handleCloseDeleteComfirmModal}\n        open={isDeleteConfirmModalOpen}\n        onSubmit={onConfirmDelete}\n        description=\"Delete account will erase all of your data.\"\n      />\n      <ChangePasswordModal\n        onSubmit={onConfirmChangePw}\n        open={isChangePwModalOpen}\n        onClose={handleCloseChangePw}\n      />\n      <Title>Account Profile</Title>\n      <BoxFlex>\n        <TitleData>Organization</TitleData>\n        <BoxData>{user?.organization?.name}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Name</TitleData>\n        {isEditName ? (\n          <Input\n            sx={{ width: 400 }}\n            autoFocus\n            onBlur={onSubmit}\n            placeholder=\"Name\"\n            value={isName}\n            onChange={onEditName}\n            onKeyDown={handleName}\n            ref={ref}\n          />\n        ) : (\n          <>\n            <Box>{isName ? isName : user?.name}</Box>\n            <IconButton sx={{ ml: 1 }} onClick={() => setIsEditName(true)}>\n              <Edit />\n            </IconButton>\n          </>\n        )}\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Email</TitleData>\n        <BoxData>{user?.email}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Role</TitleData>\n        <BoxData>{getRole(user?.role_id)}</BoxData>\n      </BoxFlex>\n      <BoxFlex sx={{ justifyContent: 'space-between', mt: 10, maxWidth: 600 }}>\n        <Button variant=\"contained\" color=\"primary\" onClick={onChangePwClick}>\n          Change Password\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"error\"\n          onClick={onDeleteAccountClick}\n        >\n          Delete Account\n        </Button>\n      </BoxFlex>\n      {loading ? <Loading /> : null}\n    </AccountWrapper>\n  )\n}\n\nconst AccountWrapper = styled(Box)({\n  padding: '0 20px',\n})\n\nconst BoxFlex = styled(Box)({\n  display: 'flex',\n  margin: '20px 0 10px 0',\n  alignItems: 'center',\n  maxWidth: 1000,\n})\n\nconst Title = styled('h2')({\n  marginBottom: 40,\n})\n\nconst BoxData = styled(Typography)({\n  fontWeight: 700,\n  minWidth: 272,\n})\n\nconst TitleData = styled(Typography)({\n  width: 250,\n  minWidth: 250,\n})\n\nexport default Account\n","import { InputProps, styled, Typography } from '@mui/material'\n\ninterface InputErrorProps extends InputProps {\n  errorMessage: string\n  value?: string\n}\n\nconst InputError = ({\n  errorMessage,\n  onChange,\n  value,\n  type,\n  onBlur,\n  name,\n}: InputErrorProps) => {\n  return (\n    <>\n      <Input\n        autoComplete=\"Off\"\n        error={!!errorMessage}\n        onChange={onChange}\n        value={value}\n        type={type}\n        name={name}\n        onBlur={onBlur}\n      />\n      <TextError>{errorMessage}</TextError>\n    </>\n  )\n}\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  margin: '-14px 0px 0px 305px',\n  wordBreak: 'break-word',\n})\n\nexport default InputError\n","import {\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  styled,\n  Typography,\n} from '@mui/material'\nimport { FC, FocusEvent } from 'react'\n\ntype SelectErrorProps = {\n  value?: string\n  onChange?: (value: SelectChangeEvent, child: React.ReactNode) => void\n  onBlur?: (event: FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => void\n  errorMessage: string\n  name?: string\n  options: string[]\n}\n\nconst SelectError: FC<SelectErrorProps> = ({\n  value,\n  onChange,\n  onBlur,\n  errorMessage,\n  options,\n  name,\n}) => {\n  return (\n    <>\n      <SelectModal\n        name={name}\n        value={value}\n        onChange={\n          onChange as (\n            value: SelectChangeEvent<unknown>,\n            child: React.ReactNode,\n          ) => void\n        }\n        onBlur={onBlur}\n        error={!!errorMessage}\n      >\n        {options.map((item: string) => {\n          return (\n            <MenuItem key={item} value={item}>\n              {item}\n            </MenuItem>\n          )\n        })}\n      </SelectModal>\n      <TextError>{errorMessage}</TextError>\n    </>\n  )\n}\n\nconst SelectModal = styled(Select, {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ theme, error }) => ({\n  width: 272,\n  marginBottom: '15px',\n  border: '1px solid #d9d9d9',\n  borderColor: error ? 'red' : '#d9d9d9',\n  borderRadius: 4,\n}))\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  margin: '-14px 0px 0px 305px',\n  wordBreak: 'break-word',\n})\nexport default SelectError\n","import {\n  Box,\n  FormControl,\n  NativeSelect,\n  Pagination,\n  styled,\n} from '@mui/material'\nimport { WorkspaceDataDTO } from '../../store/slice/Workspace/WorkspaceType'\nimport { ChangeEvent } from 'react'\nimport { UserListDTO } from '../../api/users/UsersApiDTO'\n\ntype PagiProps = {\n  data: WorkspaceDataDTO | UserListDTO\n  handlePage: (e: ChangeEvent<unknown>, page: number) => void\n  handleLimit: (e: ChangeEvent<HTMLSelectElement>) => void\n  limit: number | null\n}\n\nconst PaginationCustom = ({\n  data,\n  handlePage,\n  handleLimit,\n  limit,\n}: PagiProps) => {\n  return (\n    <PaginationCustomWrapper>\n      <span>Rows per page: </span>\n      <FormControl sx={{ width: 'max-content', margin: '4px 16px 0 12px' }}>\n        <NativeSelect\n          value={limit || 50}\n          onChange={handleLimit}\n          inputProps={{\n            name: 'limit',\n            id: 'uncontrolled-native',\n          }}\n        >\n          <option value={10}>10</option>\n          <option value={50}>50</option>\n          <option value={100}>100</option>\n        </NativeSelect>\n      </FormControl>\n      <span>{`${(data?.offset || 0) + 1} - ${\n        (data?.offset || 0) + (data?.items?.length || 0)\n      } of ${data?.total || 0}`}</span>\n      <Pagination\n        count={Math.ceil(data.total / data.limit)}\n        page={Math.ceil(data.offset / data.limit) + 1}\n        onChange={handlePage}\n      />\n    </PaginationCustomWrapper>\n  )\n}\n\nconst PaginationCustomWrapper = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'end',\n  alignItems: 'center',\n  marginTop: theme.spacing(2),\n  gap: 2,\n}))\n\nexport default PaginationCustom\n","import EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport { SelectChangeEvent } from '@mui/material/Select'\nimport {\n  ChangeEvent,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  MouseEvent,\n} from 'react'\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  Input,\n  styled,\n} from '@mui/material'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  isAdmin,\n  selectCurrentUser,\n  selectListUser,\n  selectLoading,\n} from 'store/slice/User/UserSelector'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport {\n  deleteUser,\n  createUser,\n  getListUser,\n  updateUser,\n} from 'store/slice/User/UserActions'\nimport Loading from 'components/common/Loading'\nimport { AddUserDTO, UserDTO } from 'api/users/UsersApiDTO'\nimport { ROLE } from '@types'\nimport {\n  DataGrid,\n  GridFilterModel,\n  GridSortDirection,\n  GridSortItem,\n  GridSortModel,\n} from '@mui/x-data-grid'\nimport { regexEmail, regexIgnoreS, regexPassword } from 'const/Auth'\nimport InputError from 'components/common/InputError'\nimport SelectError from 'components/common/SelectError'\nimport PaginationCustom from 'components/common/PaginationCustom'\nimport { useSnackbar, VariantType } from 'notistack'\n\nlet timeout: NodeJS.Timeout | undefined = undefined\n\ntype ModalComponentProps = {\n  onSubmitEdit: (\n    id: number | string | undefined,\n    data: { [key: string]: string },\n  ) => void\n  setOpenModal: (v: boolean) => void\n  dataEdit?: {\n    [key: string]: string\n  }\n}\n\ntype PopupType = {\n  open: boolean\n  handleClose: () => void\n  handleOkDel: () => void\n  name?: string\n}\n\nconst initState = {\n  email: '',\n  password: '',\n  role_id: '',\n  name: '',\n  confirmPassword: '',\n}\n\nconst ModalComponent = ({\n  onSubmitEdit,\n  setOpenModal,\n  dataEdit,\n}: ModalComponentProps) => {\n  const [formData, setFormData] = useState<{ [key: string]: string }>(\n    dataEdit || initState,\n  )\n  const [isDisabled, setIsDisabled] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>(initState)\n\n  const validateEmail = (value: string): string => {\n    const error = validateField('email', 255, value)\n    if (error) return error\n    if (!regexEmail.test(value)) {\n      return 'Invalid email format'\n    }\n    return ''\n  }\n\n  const validatePassword = (\n    value: string,\n    isConfirm: boolean = false,\n    values?: { [key: string]: string },\n  ): string => {\n    if (!value && !dataEdit?.uid) return 'This field is required'\n    const errorLength = validateLength('password', 255, value)\n    if (errorLength) {\n      return errorLength\n    }\n    let datas = values || formData\n    if (!regexPassword.test(value) && value) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    if (regexIgnoreS.test(value)) {\n      return 'Allowed special characters (!#$%&()*+,-./@_|)'\n    }\n    if (isConfirm && datas.password !== value && value) {\n      return 'password is not match'\n    }\n    return ''\n  }\n\n  const validateField = (name: string, length: number, value?: string) => {\n    if (!value) return 'This field is required'\n    return validateLength(name, length, value)\n  }\n\n  const validateLength = (name: string, length: number, value?: string) => {\n    if (value && value.length > length)\n      return `The text may not be longer than ${length} characters`\n    if (formData[name]?.length && value && value.length > length) {\n      return `The text may not be longer than ${length} characters`\n    }\n    return ''\n  }\n\n  const validateForm = (): { [key: string]: string } => {\n    const errorName = validateField('name', 100, formData.name)\n    const errorEmail = validateEmail(formData.email)\n    const errorRole = validateField('role_id', 50, formData.role_id)\n    const errorPassword = dataEdit?.id\n      ? ''\n      : validatePassword(formData.password)\n    const errorConfirmPassword = dataEdit?.id\n      ? ''\n      : validatePassword(formData.confirmPassword, true)\n    return {\n      email: errorEmail,\n      password: errorPassword,\n      confirmPassword: errorConfirmPassword,\n      name: errorName,\n      role_id: errorRole,\n    }\n  }\n\n  const onChangeData = (\n    e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement> | SelectChangeEvent,\n    length: number,\n  ) => {\n    const { value, name } = e.target\n    const newDatas = { ...formData, [name]: value }\n    setFormData(newDatas)\n    let error: string =\n      name === 'email'\n        ? validateEmail(value)\n        : validateField(name, length, value)\n    let errorConfirm = errors.confirmPassword\n    if (name.toLowerCase().includes('password')) {\n      error = validatePassword(value, name === 'confirmPassword', newDatas)\n      if (name !== 'confirmPassword' && formData.confirmPassword) {\n        errorConfirm = validatePassword(\n          newDatas.confirmPassword,\n          true,\n          newDatas,\n        )\n      }\n    }\n    setErrors({ ...errors, confirmPassword: errorConfirm, [name]: error })\n  }\n\n  const onSubmit = async (e: MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n    setIsDisabled(true)\n    const newErrors = validateForm()\n    if (Object.keys(newErrors).some((key) => !!newErrors[key])) {\n      setErrors(newErrors)\n      setIsDisabled(false)\n      return\n    }\n    try {\n      await onSubmitEdit(dataEdit?.id, formData)\n      setOpenModal(false)\n    } finally {\n      setIsDisabled(false)\n    }\n  }\n  const onCancel = () => {\n    setOpenModal(false)\n  }\n\n  return (\n    <Modal>\n      <ModalBox>\n        <TitleModal>{dataEdit?.id ? 'Edit' : 'Add'} Account</TitleModal>\n        <BoxData>\n          <LabelModal>Name: </LabelModal>\n          <InputError\n            name=\"name\"\n            value={formData?.name || ''}\n            onChange={(e) => onChangeData(e, 100)}\n            onBlur={(e) => onChangeData(e, 100)}\n            errorMessage={errors.name}\n          />\n          <LabelModal>Role: </LabelModal>\n          <SelectError\n            value={formData?.role_id || ''}\n            options={Object.keys(ROLE).filter((key) => !Number(key))}\n            name=\"role_id\"\n            onChange={(e) => onChangeData(e, 50)}\n            onBlur={(e) => onChangeData(e, 50)}\n            errorMessage={errors.role_id}\n          />\n          <LabelModal>e-mail: </LabelModal>\n          <InputError\n            name=\"email\"\n            value={formData?.email || ''}\n            onChange={(e) => onChangeData(e, 255)}\n            onBlur={(e) => onChangeData(e, 255)}\n            errorMessage={errors.email}\n          />\n          {!dataEdit?.id ? (\n            <>\n              <LabelModal>Password: </LabelModal>\n              <InputError\n                name=\"password\"\n                value={formData?.password || ''}\n                onChange={(e) => onChangeData(e, 255)}\n                onBlur={(e) => onChangeData(e, 255)}\n                type={'password'}\n                errorMessage={errors.password}\n              />\n              <LabelModal>Confirm Password: </LabelModal>\n              <InputError\n                name=\"confirmPassword\"\n                value={formData?.confirmPassword || ''}\n                onChange={(e) => onChangeData(e, 255)}\n                onBlur={(e) => onChangeData(e, 255)}\n                type={'password'}\n                errorMessage={errors.confirmPassword}\n              />\n            </>\n          ) : null}\n        </BoxData>\n        <ButtonModal>\n          <Button onClick={() => onCancel()}>Cancel</Button>\n          <Button disabled={isDisabled} onClick={(e) => onSubmit(e)}>\n            Ok\n          </Button>\n        </ButtonModal>\n      </ModalBox>\n      {isDisabled ? <Loading /> : null}\n    </Modal>\n  )\n}\n\nconst PopupDelete = ({ open, handleClose, handleOkDel, name }: PopupType) => {\n  if (!open) return null\n  return (\n    <Box>\n      <Dialog open={open} onClose={handleClose} sx={{ margin: 0 }}>\n        <DialogTitle>Do you want delete User \"{name}\"?</DialogTitle>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleOkDel}>Ok</Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  )\n}\n\nconst AccountManager = () => {\n  const dispatch = useDispatch()\n\n  const navigate = useNavigate()\n\n  const listUser = useSelector(selectListUser)\n  const loading = useSelector(selectLoading)\n  const user = useSelector(selectCurrentUser)\n  const admin = useSelector(isAdmin)\n\n  const [searchParams, setParams] = useSearchParams()\n\n  const [openModal, setOpenModal] = useState(false)\n  const [dataEdit, setDataEdit] = useState({})\n  const [newParams, setNewParams] = useState(\n    window.location.search.replace('?', ''),\n  )\n\n  const limit = searchParams.get('limit') || 50\n  const offset = searchParams.get('offset') || 0\n  const name = searchParams.get('name') || undefined\n  const email = searchParams.get('email') || undefined\n  const sort = searchParams.getAll('sort') || []\n  const [openDel, setOpenDel] =\n    useState<{ id?: number; name?: string; open: boolean }>()\n\n  const filterParams = useMemo(() => {\n    return {\n      name: name,\n      email: email,\n    }\n  }, [name, email])\n\n  const sortParams = useMemo(() => {\n    return {\n      sort: sort,\n    }\n    //eslint-disable-next-line\n  }, [JSON.stringify(sort)])\n\n  const params = useMemo(() => {\n    return {\n      limit: Number(limit),\n      offset: Number(offset),\n    }\n  }, [limit, offset])\n\n  const [model, setModel] = useState<{ filter: GridFilterModel; sort: any }>({\n    filter: {\n      items: [\n        {\n          field:\n            Object.keys(filterParams).find(\n              (key) => (filterParams as any)[key],\n            ) || '',\n          operator: 'contains',\n          value: Object.values(filterParams).find((value) => value) || null,\n        },\n      ],\n    },\n    sort: [\n      {\n        field: sortParams.sort[0]?.replace('role', 'role_id') || '',\n        sort: sortParams.sort[1] as GridSortDirection,\n      },\n    ],\n  })\n\n  const { enqueueSnackbar } = useSnackbar()\n\n  const handleClickVariant = (variant: VariantType, mess: string) => {\n    enqueueSnackbar(mess, { variant })\n  }\n\n  useEffect(() => {\n    if (!admin) navigate('/console')\n    //eslint-disable-next-line\n  }, [JSON.stringify(admin)])\n\n  useEffect(() => {\n    setModel({\n      filter: {\n        items: [\n          {\n            field:\n              Object.keys(filterParams).find(\n                (key) => (filterParams as any)[key],\n              ) || '',\n            operator: 'contains',\n            value: Object.values(filterParams).find((value) => value) || null,\n          },\n        ],\n      },\n      sort: [\n        {\n          field: sortParams.sort[0]?.replace('role', 'role_id') || '',\n          sort: sortParams.sort[1] as GridSortDirection,\n        },\n      ],\n    })\n    //eslint-disable-next-line\n  }, [sortParams, filterParams])\n\n  useEffect(() => {\n    if (newParams && newParams !== window.location.search.replace('?', '')) {\n      setNewParams(window.location.search.replace('?', ''))\n    }\n    //eslint-disable-next-line\n  }, [searchParams])\n\n  useEffect(() => {\n    if (newParams === window.location.search.replace('?', '')) return\n    setParams(newParams)\n    //eslint-disable-next-line\n  }, [newParams])\n\n  useEffect(() => {\n    dispatch(getListUser({ ...filterParams, ...sortParams, ...params }))\n    //eslint-disable-next-line\n  }, [limit, offset, email, name, JSON.stringify(sort)])\n\n  const getParamsData = () => {\n    const dataFilter = Object.keys(filterParams)\n      .filter((key) => (filterParams as any)[key])\n      .map((key) => `${key}=${(filterParams as any)[key]}`)\n      .join('&')\n    return dataFilter\n  }\n\n  const paramsManager = useCallback(\n    (page?: number) => {\n      return `limit=${limit}&offset=${page ? page - 1 : offset}`\n    },\n    [limit, offset],\n  )\n\n  const handleSort = useCallback(\n    (rowSelectionModel: GridSortModel) => {\n      setModel({\n        ...model,\n        sort: rowSelectionModel,\n      })\n      let param\n      const filter = getParamsData()\n      if (!rowSelectionModel[0]) {\n        param =\n          filter || sortParams.sort[0] || offset\n            ? `${filter ? `${filter}&` : ''}${paramsManager()}`\n            : ''\n      } else {\n        param = `${filter}${\n          rowSelectionModel[0]\n            ? `${filter ? `&` : ''}sort=${rowSelectionModel[0].field.replace(\n                '_id',\n                '',\n              )}&sort=${rowSelectionModel[0].sort}`\n            : ''\n        }&${paramsManager()}`\n      }\n      setNewParams(param)\n    },\n    //eslint-disable-next-line\n    [paramsManager, getParamsData, model],\n  )\n\n  const handleFilter = (modelFilter: GridFilterModel) => {\n    setModel({\n      ...model,\n      filter: modelFilter,\n    })\n    let filter = ''\n    if (!!modelFilter.items[0]?.value) {\n      filter = modelFilter.items\n        .filter((item) => item.value)\n        .map((item: any) => `${item.field}=${item?.value}`)\n        .join('&')\n    }\n    const { sort } = sortParams\n    const param =\n      sort[0] || filter || offset\n        ? `${filter}${\n            sort[0] ? `${filter ? '&' : ''}sort=${sort[0]}&sort=${sort[1]}` : ''\n          }&${paramsManager()}`\n        : ''\n    setNewParams(param)\n  }\n\n  const handleOpenModal = () => {\n    setOpenModal(true)\n  }\n\n  const handleEdit = (dataEdit: UserDTO) => {\n    setOpenModal(true)\n    setDataEdit(dataEdit)\n  }\n\n  const onSubmitEdit = async (\n    id: number | string | undefined,\n    data: { [key: string]: string },\n  ) => {\n    const { confirmPassword, role_id, ...newData } = data\n    let newRole\n    switch (role_id) {\n      case 'ADMIN':\n        newRole = ROLE.ADMIN\n        break\n      case 'OPERATOR':\n        newRole = ROLE.OPERATOR\n        break\n    }\n    if (id !== undefined) {\n      const data = await dispatch(\n        updateUser({\n          id: id as number,\n          data: { name: newData.name, email: newData.email, role_id: newRole },\n          params: { ...filterParams, ...sortParams, ...params },\n        }),\n      )\n      if ((data as any).error) {\n        if (!navigator.onLine) {\n          handleClickVariant('error', 'Account update failed!')\n          return\n        }\n        handleClickVariant('error', 'This email already exists!')\n      } else {\n        handleClickVariant(\n          'success',\n          'Your account has been edited successfully!',\n        )\n      }\n    } else {\n      const data = await dispatch(\n        createUser({\n          data: { ...newData, role_id: newRole } as AddUserDTO,\n          params: { ...filterParams, ...sortParams, ...params },\n        }),\n      )\n      if (!(data as any).error) {\n        handleClickVariant(\n          'success',\n          'Your account has been created successfully!',\n        )\n      } else {\n        if (!navigator.onLine) {\n          handleClickVariant('error', 'Account creation failed!')\n          return\n        }\n        handleClickVariant('error', 'This email already exists!')\n      }\n    }\n    return undefined\n  }\n\n  const handleOpenPopupDel = (id?: number, name?: string) => {\n    if (!id) return\n    setOpenDel({ id: id, name: name, open: true })\n  }\n\n  const handleClosePopupDel = () => {\n    setOpenDel({ ...openDel, open: false })\n  }\n\n  const handleOkDel = async () => {\n    if (!openDel?.id || !openDel) return\n    const data = await dispatch(\n      deleteUser({\n        id: openDel.id,\n        params: { ...filterParams, ...sortParams, ...params },\n      }),\n    )\n    if ((data as any).error) {\n      handleClickVariant('error', 'Delete user failed!')\n    } else {\n      handleClickVariant('success', 'Account deleted successfully!')\n    }\n    setOpenDel({ ...openDel, open: false })\n  }\n\n  const handleLimit = (event: ChangeEvent<HTMLSelectElement>) => {\n    let filter = ''\n    filter = Object.keys(filterParams)\n      .filter((key) => (filterParams as any)[key])\n      .map((item: any) => `${item}=${(filterParams as any)[item]}`)\n      .join('&')\n    const { sort } = sortParams\n    const param = `${filter}${\n      sort[0] ? `${filter ? '&' : ''}sort=${sort[0]}&sort=${sort[1]}` : ''\n    }&limit=${Number(event.target.value)}&offset=0`\n    setNewParams(param)\n  }\n\n  const handlePage = (event: ChangeEvent<unknown>, page: number) => {\n    if (!listUser) return\n    let filter = ''\n    filter = Object.keys(filterParams)\n      .filter((key) => (filterParams as any)[key])\n      .map((item: any) => `${item}=${(filterParams as any)[item]}`)\n      .join('&')\n    const { sort } = sortParams\n    const param = `${filter}${\n      sort[0] ? `${filter ? '&' : ''}sort=${sort[0]}&sort=${sort[1]}` : ''\n    }&limit=${listUser.limit}&offset=${(page - 1) * Number(limit)}`\n    setNewParams(param)\n  }\n\n  const columns = [\n    {\n      headerName: 'ID',\n      field: 'id',\n      filterable: false,\n      minWidth: 100,\n      flex: 1,\n    },\n    {\n      headerName: 'Name',\n      field: 'name',\n      minWidth: 100,\n      flex: 2,\n      filterOperators: [\n        {\n          label: 'Contains',\n          value: 'contains',\n          InputComponent: ({ applyValue, item }: any) => {\n            return (\n              <Input\n                sx={{ paddingTop: '16px' }}\n                defaultValue={item.value || ''}\n                onChange={(e) => {\n                  if (timeout) clearTimeout(timeout)\n                  timeout = setTimeout(() => {\n                    applyValue({ ...item, value: e.target.value })\n                  }, 300)\n                }}\n              />\n            )\n          },\n        },\n      ],\n      type: 'string',\n    },\n    {\n      headerName: 'Role',\n      field: 'role_id',\n      filterable: false,\n      minWidth: 100,\n      flex: 1,\n      renderCell: (params: { value: number }) => {\n        let role\n        switch (params.value) {\n          case ROLE.ADMIN:\n            role = 'Admin'\n            break\n          case ROLE.OPERATOR:\n            role = 'OPERATOR'\n            break\n        }\n        return <span>{role}</span>\n      },\n    },\n    {\n      headerName: 'Mail',\n      field: 'email',\n      minWidth: 100,\n      flex: 2,\n      filterOperators: [\n        {\n          label: 'Contains',\n          value: 'contains',\n          InputComponent: ({ applyValue, item }: any) => {\n            return (\n              <Input\n                sx={{ paddingTop: '16px' }}\n                defaultValue={item.value || ''}\n                onChange={(e) => {\n                  if (timeout) clearTimeout(timeout)\n                  timeout = setTimeout(() => {\n                    applyValue({ ...item, value: e.target.value })\n                  }, 300)\n                }}\n              />\n            )\n          },\n        },\n      ],\n      type: 'string',\n    },\n    {\n      headerName: '',\n      field: 'action',\n      sortable: false,\n      filterable: false,\n      minWidth: 100,\n      flex: 1,\n      renderCell: (params: { row: UserDTO }) => {\n        const { id, role_id, name, email } = params.row\n        if (!id || !role_id || !name || !email) return null\n        let role: any\n        switch (role_id) {\n          case ROLE.ADMIN:\n            role = 'ADMIN'\n            break\n          case ROLE.OPERATOR:\n            role = 'OPERATOR'\n            break\n        }\n\n        return (\n          <>\n            <ALink\n              sx={{ color: 'red' }}\n              onClick={() =>\n                handleEdit({ id, role_id: role, name, email } as UserDTO)\n              }\n            >\n              <EditIcon sx={{ color: 'black' }} />\n            </ALink>\n            {!(params.row?.id === user?.id) ? (\n              <ALink\n                sx={{ ml: 1.25 }}\n                onClick={() =>\n                  handleOpenPopupDel(params.row?.id, params.row?.name)\n                }\n              >\n                <DeleteIcon sx={{ color: 'red' }} />\n              </ALink>\n            ) : null}\n          </>\n        )\n      },\n    },\n  ]\n\n  return (\n    <AccountManagerWrapper>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          gap: 2,\n          marginBottom: 2,\n        }}\n      >\n        <Button\n          sx={{\n            background: '#000000c4',\n            '&:hover': { backgroundColor: '#00000090' },\n          }}\n          variant=\"contained\"\n          onClick={handleOpenModal}\n        >\n          Add\n        </Button>\n      </Box>\n      <DataGrid\n        sx={{ minHeight: 400, height: 'calc(100vh - 300px)' }}\n        columns={columns as any}\n        rows={listUser?.items || []}\n        filterMode={'server'}\n        sortingMode={'server'}\n        hideFooter\n        onSortModelChange={handleSort}\n        filterModel={model.filter}\n        sortModel={model.sort as GridSortItem[]}\n        onFilterModelChange={handleFilter as any}\n      />\n      {listUser && listUser.items.length > 0 ? (\n        <PaginationCustom\n          data={listUser}\n          handlePage={handlePage}\n          handleLimit={handleLimit}\n          limit={Number(limit)}\n        />\n      ) : null}\n      <PopupDelete\n        open={openDel?.open || false}\n        handleClose={handleClosePopupDel}\n        handleOkDel={handleOkDel}\n        name={openDel?.name}\n      />\n      {openModal ? (\n        <ModalComponent\n          onSubmitEdit={onSubmitEdit}\n          setOpenModal={(flag) => {\n            setOpenModal(flag)\n            if (!flag) {\n              setDataEdit({})\n            }\n          }}\n          dataEdit={dataEdit}\n        />\n      ) : null}\n      {loading ? <Loading /> : null}\n    </AccountManagerWrapper>\n  )\n}\n\nconst AccountManagerWrapper = styled(Box)(({ theme }) => ({\n  width: '80%',\n  margin: theme.spacing(5, 'auto'),\n}))\n\nconst ALink = styled('a')({\n  color: '#1677ff',\n  textDecoration: 'none',\n  cursor: 'pointer',\n  userSelect: 'none',\n})\n\nconst Modal = styled(Box)(({ theme }) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#cccccc80',\n}))\n\nconst ModalBox = styled(Box)(({ theme }) => ({\n  width: 800,\n  backgroundColor: 'white',\n  border: '1px solid black',\n}))\n\nconst TitleModal = styled(Box)(({ theme }) => ({\n  fontSize: 25,\n  margin: theme.spacing(5),\n}))\n\nconst BoxData = styled(Box)(({ theme }) => ({\n  marginTop: 35,\n}))\n\nconst LabelModal = styled(Box)(({ theme }) => ({\n  width: 300,\n  display: 'inline-block',\n  textAlign: 'end',\n  marginRight: theme.spacing(0.5),\n}))\n\nconst ButtonModal = styled(Box)(({ theme }) => ({\n  button: {\n    fontSize: 20,\n  },\n  display: 'flex',\n  justifyContent: 'end',\n  margin: theme.spacing(5),\n}))\n\nexport default AccountManager\n","import { Box } from '@mui/material'\n\nconst AccountDelete = () => {\n  return (\n    <Box sx={{ fontWeight: 600, fontSize: 18, mt: 4 }}>\n      You account has been deleted.\n    </Box>\n  )\n}\n\nexport default AccountDelete\n","import { Box, Stack, styled, Typography } from '@mui/material'\nimport { useDispatch } from 'react-redux'\nimport { getMe, login } from 'store/slice/User/UserActions'\nimport { AppDispatch } from 'store/store'\nimport { ChangeEvent, FormEvent, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport Loading from 'components/common/Loading'\n\nconst Login = () => {\n  const navigate = useNavigate()\n  const dispatch: AppDispatch = useDispatch()\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>({\n    email: '',\n    password: '',\n  })\n  const [values, setValues] = useState<{ email: string; password: string }>({\n    email: '',\n    password: '',\n  })\n\n  const onSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    const errorCheck = validateSubmit()\n    if (errorCheck) return\n    setIsLoading(true)\n    dispatch(login(values))\n      .unwrap()\n      .then(async (_) => {\n        await dispatch(getMe())\n        navigate('/console')\n      })\n      .catch((_) => {\n        setErrors({ email: 'Email or password is wrong', password: '' })\n      })\n      .finally(() => {\n        setIsLoading(false)\n      })\n  }\n\n  const validateSubmit = () => {\n    let errors = { email: '', password: '' }\n    if (!values.email) {\n      errors.email = 'This field is required'\n    }\n    if (!values.password) {\n      errors.password = 'This field is required'\n    }\n    setErrors(errors)\n    return errors.password || errors.email\n  }\n\n  const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    setErrors({ ...errors, [name]: !value ? 'This field is required' : '' })\n  }\n\n  return (\n    <LoginWrapper>\n      <LoginContent>\n        <Title data-testid=\"title\">Sign in to your account</Title>\n        <FormSignUp autoComplete=\"off\" onSubmit={onSubmit}>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Email<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"email\"\n              autoComplete=\"off\"\n              error={!!errors.email}\n              name=\"email\"\n              onChange={onChangeValue}\n              value={values.email}\n              placeholder=\"Enter your email\"\n            />\n            <TextError data-testid=\"error-email\">{errors.email}</TextError>\n          </Box>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Password<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"password\"\n              autoComplete=\"off\"\n              error={!!errors.password}\n              onChange={onChangeValue}\n              name=\"password\"\n              type=\"password\"\n              value={values.password}\n              placeholder=\"Enter your password\"\n            />\n            <TextError data-testid=\"error-password\">\n              {errors.password}\n            </TextError>\n          </Box>\n          <Description>\n            Forgot your password?\n            <LinkWrappper to=\"/reset-password\">Reset password</LinkWrappper>\n          </Description>\n          <Stack\n            flexDirection=\"row\"\n            gap={2}\n            mt={3}\n            alignItems=\"center\"\n            justifyContent=\"flex-end\"\n          >\n            <ButtonLogin data-testid=\"button-submit\" type=\"submit\">\n              SIGN IN\n            </ButtonLogin>\n          </Stack>\n        </FormSignUp>\n      </LoginContent>\n      {isLoading && <Loading />}\n    </LoginWrapper>\n  )\n}\n\nconst LoginWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n  padding: 30,\n  boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n  borderRadius: 4,\n})\n\nconst Title = styled(Typography)({\n  fontSize: 15,\n  fontWeight: 600,\n  marginBottom: 24,\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n  fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n  color: 'red',\n  fontSize: 14,\n  marginLeft: 2,\n})\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 22,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst Description = styled(Typography)(({ theme }) => ({\n  fontSize: 12,\n  color: 'rgba(0, 0, 0, 0.65)',\n  marginTop: theme.spacing(1),\n}))\n\nconst LinkWrappper = styled(Link)({\n  marginLeft: 6,\n  color: '#1892d1',\n})\n\nconst ButtonLogin = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  color: 'red',\n  position: 'absolute',\n  bottom: 4,\n})\n\nexport default Login\n","import { ChangeEvent, FormEvent, useState } from 'react'\nimport { useNavigate } from \"react-router-dom\"\nimport { Box, Stack, styled, Typography, Link } from '@mui/material'\nimport { sendResetPasswordMailApi } from 'api/auth/Auth'\nimport Loading from \"components/common/Loading\"\nimport { regexEmail } from 'const/Auth'\n\nconst ResetPassword = () => {\n    const navigate = useNavigate()\n    const [isLoading, setIsLoading] = useState(false)\n    const [errors, setErrors] = useState<{ [key: string]: string }>({\n        email: '',\n    })\n    const [values, setValues] = useState<{ email: string }>({\n        email: '',\n    })\n\n    const onReset = async (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n\n        const errorCheck = validateSubmit()\n        if (errors.email || errorCheck) return\n        setIsLoading(true)\n        try {\n            await sendResetPasswordMailApi(values.email)\n            setTimeout(()=>{\n                alert(` You'll receive a link to reset your password at ${values.email}. Please check your mail!`)\n            },300)\n        }\n        catch {\n            setTimeout(()=>{\n                alert('Email does not exists!')\n            },300)\n        }\n        finally {\n            setIsLoading(false)\n        }\n    }\n\n    const validateEmail = (value: string): string => {\n        if(!value) return 'This field is required'\n        if(value.length > 255) return 'The text may not be longer than 255 characters'\n        if(!regexEmail.test(value)) return 'The email is invalid'\n        return ''\n    }\n\n    const validateSubmit = () => {\n        let errors = { email: '' }\n        errors.email = validateEmail(values.email)\n        setErrors(errors)\n        return errors.email\n    }\n\n    const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target\n        const error = validateEmail(value)\n        setValues({ ...values, [name]: value })\n        setErrors({ ...errors, [name]: error })\n    }\n\n    return (\n        <LoginWrapper>\n            <LoginContent>\n                <Heading>Forgot password?</Heading>\n                <Title>No worries, we'll send you reset instructions.</Title>\n                <FormSignUp autoComplete=\"off\" onSubmit={onReset}>\n                    <Box sx={{ position: 'relative' }}>\n                        <LabelField>\n                            Email<LableRequired>*</LableRequired>\n                        </LabelField>\n                        <Input\n                            autoComplete=\"off\"\n                            error={!!errors.email}\n                            name=\"email\"\n                            onChange={onChangeValue}\n                            value={values.email}\n                            placeholder=\"Enter your email\"\n                        />\n                        <TextError>{errors.email}</TextError>\n                    </Box>\n                    <Stack\n                        flexDirection=\"row\"\n                        gap={2}\n                        mt={3}\n                        alignItems=\"center\"\n                        justifyContent=\"space-between\"\n                    >\n                        <ButtonSignIn onClick={() => navigate('/login')}>Back to SIGN IN</ButtonSignIn>\n                        <ButtonLogin type=\"submit\">Reset Password</ButtonLogin>\n                    </Stack>\n                </FormSignUp>\n            </LoginContent>\n            {\n                isLoading && <Loading />\n            }\n        </LoginWrapper>\n    )\n}\n\nconst LoginWrapper = styled(Box)({\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n    padding: 30,\n    boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n    borderRadius: 4,\n})\n\nconst Heading = styled(Typography)({\n    fontSize: 22,\n    textAlign: 'center',\n    fontWeight: 600,\n})\n\nconst Title = styled(Typography)({\n    textAlign: 'center',\n    marginBottom: 24,\n    fontSize: 12,\n    color: 'rgba(0, 0, 0, 0.65)',\n})\n\nconst ButtonSignIn = styled(Link)({\n    fontSize: 12,\n    '&:hover': {\n        cursor: 'pointer'\n    }\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n    fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n    color: 'red',\n    fontSize: 14,\n    marginLeft: 2,\n})\n\nconst Input = styled('input', {\n    shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n    return {\n        width: 250,\n        height: 24,\n        borderRadius: 4,\n        border: '1px solid',\n        borderColor: error ? 'red' : '#d9d9d9',\n        padding: '5px 10px',\n        marginBottom: 22,\n        transition: 'all 0.3s',\n        outline: 'none',\n        ':focus, :hover': {\n            borderColor: '#1677ff',\n        },\n    }\n})\n\n\nconst ButtonLogin = styled('button')({\n    backgroundColor: '#283237',\n    color: '#ffffff',\n    borderRadius: 4,\n    border: 'none',\n    outline: 'none',\n    padding: '10px 20px',\n    cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n    fontSize: 12,\n    color: 'red',\n    position: 'absolute',\n    bottom: 4,\n})\n\nexport default ResetPassword\n","import {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Input,\n  styled,\n} from '@mui/material'\nimport {\n  DataGrid,\n  GridRenderCellParams,\n  GridValidRowModel,\n} from '@mui/x-data-grid'\nimport {\n  ChangeEvent,\n  MouseEvent as MouseEventReact,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport CancelIcon from '@mui/icons-material/Cancel'\nimport { postListUserShareWorkspaces } from 'store/slice/Workspace/WorkspaceActions'\nimport { selectListSearch, selectLoading } from 'store/slice/User/UserSelector'\nimport { getListSearch } from 'store/slice/User/UserActions'\nimport Loading from 'components/common/Loading'\nimport { UserDTO } from 'api/users/UsersApiDTO'\nimport CheckIcon from '@mui/icons-material/Check'\nimport { resetUserSearch } from 'store/slice/User/UserSlice'\n\ntype PopupType = {\n  open: boolean\n  id: number\n  handleClose: (v: boolean) => void\n  title?: string\n  usersShare?: {\n    share_type?: number\n    users: UserDTO[]\n  }\n}\n\ntype TableSearch = {\n  usersSuggest: UserDTO[]\n  onClose: () => void\n  handleAddListUser: (user: UserDTO) => void\n  stateUserShare: UserDTO[]\n}\n\nconst TableListSearch = ({\n  usersSuggest,\n  onClose,\n  handleAddListUser,\n  stateUserShare,\n}: TableSearch) => {\n  const ref = useRef<HTMLLIElement | null>(null)\n\n  useEffect(() => {\n    window.addEventListener('mousedown', onMouseDown)\n    return () => {\n      window.removeEventListener('mousedown', onMouseDown)\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  const onMouseDown = (event: MouseEvent) => {\n    if (\n      ref.current?.contains((event as any).target) ||\n      (event as any).target.id === 'inputSearch'\n    )\n      return\n    onClose?.()\n  }\n\n  return (\n    <TableListSearchWrapper ref={ref} onBlur={() => console.log(123)}>\n      <UlCustom>\n        {usersSuggest.map((item) => {\n          const isSelected = stateUserShare.some((i) => i.id === item.id)\n          return (\n            <LiCustom\n              key={item.id}\n              onClick={() => handleAddListUser(item)}\n              style={{\n                cursor: isSelected ? 'not-allowed' : 'pointer',\n              }}\n            >\n              {`${item.name} (${item.email})`}\n              {isSelected ? <CheckIcon style={{ fontSize: 14 }} /> : null}\n            </LiCustom>\n          )\n        })}\n      </UlCustom>\n    </TableListSearchWrapper>\n  )\n}\nconst PopupShare = ({\n  open,\n  handleClose,\n  usersShare,\n  id,\n  title,\n}: PopupType) => {\n  const usersSuggest = useSelector(selectListSearch)\n  const loading = useSelector(selectLoading)\n  const [textSearch, setTextSearch] = useState('')\n  const [stateUserShare, setStateUserShare] = useState(usersShare || undefined)\n  const dispatch = useDispatch()\n  let timeout = useRef<NodeJS.Timeout | undefined>()\n\n  useEffect(() => {\n    if (usersShare) {\n      // setUserIdsSelected(usersShare.users.map(user => user.id));\n      setStateUserShare(usersShare)\n    }\n  }, [usersShare])\n\n  useEffect(() => {\n    if (timeout.current) clearTimeout(timeout.current)\n    if (!textSearch) {\n      dispatch(resetUserSearch())\n      return\n    }\n    timeout.current = setTimeout(() => {\n      dispatch(getListSearch({ keyword: textSearch }))\n    }, 300)\n    //eslint-disable-next-line\n  }, [textSearch])\n\n  const handleShareFalse = (\n    e: any,\n    params: GridRenderCellParams<GridValidRowModel>,\n  ) => {\n    e.preventDefault()\n    e.stopPropagation()\n    if (!stateUserShare) return\n    const indexCheck = stateUserShare.users.findIndex(\n      (user) => user.id === params.id,\n    )\n    const newStateUserShare = stateUserShare.users.filter(\n      (user, index) => index !== indexCheck,\n    )\n    setStateUserShare({ ...setStateUserShare, users: newStateUserShare })\n  }\n\n  const columnsShare = useCallback(\n    (\n      handleShareFalse: (\n        e: MouseEventReact<HTMLButtonElement>,\n        parmas: GridRenderCellParams<GridValidRowModel>,\n      ) => void,\n    ) => [\n      {\n        field: 'name',\n        headerName: 'Name',\n        minWidth: 140,\n        renderCell: (params: GridRenderCellParams<GridValidRowModel>) => (\n          <span>{params.row.name}</span>\n        ),\n      },\n      {\n        field: 'email',\n        headerName: 'Email',\n        minWidth: 280,\n        renderCell: (params: GridRenderCellParams<GridValidRowModel>) => (\n          <span>{params.row.email}</span>\n        ),\n      },\n      {\n        field: 'share',\n        headerName: '',\n        filterable: false,\n        sortable: false,\n        minWidth: 130,\n        renderCell: (params: GridRenderCellParams<GridValidRowModel>) => {\n          if (!params.row.share) return ''\n          return (\n            <Button onClick={(e) => handleShareFalse(e, params)}>\n              <CancelIcon color={'error'} />\n            </Button>\n          )\n        },\n      },\n    ],\n    //eslint-disable-next-line\n    [JSON.stringify(stateUserShare?.users)],\n  )\n\n  const handleOke = async () => {\n    if (!stateUserShare) return\n    let newUserIds = stateUserShare.users.map((user) => user.id)\n    await dispatch(\n      postListUserShareWorkspaces({\n        id,\n        data: { user_ids: newUserIds as number[] },\n      }),\n    )\n    handleClose(true)\n  }\n\n  const handleSearch = (event: ChangeEvent<HTMLInputElement>) => {\n    setTextSearch(event.target.value)\n  }\n\n  const handleCloseSearch = () => {\n    setTextSearch('')\n    dispatch(resetUserSearch())\n  }\n\n  const handleAddListUser = (user: any) => {\n    if (!usersSuggest || !stateUserShare) return\n    if (!stateUserShare.users.find((item) => item.id === user.id)) {\n      setStateUserShare({\n        ...stateUserShare,\n        users: [...stateUserShare.users, user],\n      })\n    }\n  }\n\n  const handleClosePopup = (event: any) => {\n    if (event.key === 'Escape') {\n      handleClose(false)\n    }\n  }\n\n  if (!usersShare) return null\n\n  return (\n    <Box>\n      <DialogCustom\n        open={open}\n        onClose={handleClose}\n        sx={{ margin: 0 }}\n        onKeyDown={handleClosePopup}\n      >\n        <DialogTitle>{title || 'Share Database Record'}</DialogTitle>\n        <DialogContent>\n          <>\n            <Box style={{ position: 'relative' }}>\n              <Input\n                id=\"inputSearch\"\n                sx={{ width: '60%' }}\n                placeholder={'Search and add users'}\n                value={textSearch}\n                onChange={handleSearch}\n              />\n              {textSearch && usersSuggest ? (\n                <TableListSearch\n                  onClose={handleCloseSearch}\n                  usersSuggest={usersSuggest}\n                  stateUserShare={stateUserShare?.users || []}\n                  handleAddListUser={handleAddListUser}\n                />\n              ) : null}\n            </Box>\n            <p>Permitted users</p>\n            {stateUserShare && (\n              <DataGrid\n                sx={{ minHeight: 400 }}\n                // onRowClick={handleShareTrue}\n                rows={stateUserShare?.users.map((user: any) => ({\n                  ...user,\n                  share: true,\n                }))}\n                columns={columnsShare(handleShareFalse)}\n                hideFooterPagination\n              />\n            )}\n          </>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleClose(false)}>Cancel</Button>\n          <Button onClick={handleOke}>Ok</Button>\n        </DialogActions>\n      </DialogCustom>\n      {loading ? <Loading /> : null}\n    </Box>\n  )\n}\n\nconst DialogCustom = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialog-container': {\n    '& .MuiPaper-root': {\n      width: '70%',\n      maxWidth: '890px',\n    },\n  },\n}))\n\nconst TableListSearchWrapper = styled(Box)(({ theme }) => ({\n  position: 'absolute',\n  background: '#fff',\n  zIndex: 100,\n  width: '60%',\n  boxShadow:\n    '0 6px 16px 0 rgba(0,0,0,.08), 0 3px 6px -4px rgba(0,0,0,.12), 0 9px 28px 8px rgba(0,0,0,.05)',\n  borderBottomLeftRadius: 8,\n  borderBottomRightRadius: 8,\n  maxHeight: 200,\n  overflow: 'auto',\n}))\n\nconst UlCustom = styled('ul')(({ theme }) => ({\n  listStyle: 'none',\n  padding: 0,\n  margin: 0,\n}))\n\nconst LiCustom = styled('li')(({ theme }) => ({\n  padding: theme.spacing(1, 2),\n  fontSize: 14,\n  cursor: 'pointer',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  '&:hover': {\n    backgroundColor: 'rgba(0,0,0,.04)',\n  },\n}))\n\nexport default PopupShare\n","import { UserDTO } from \"api/users/UsersApiDTO\"\n\nexport const isMine = (user?: UserDTO, idUserWorkSpace?: number) => {\n  return !!(user && idUserWorkSpace && user.id === idUserWorkSpace)\n}\n","import { useSelector, useDispatch } from 'react-redux'\nimport {\n  Box,\n  styled,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Input,\n  Tooltip,\n} from '@mui/material'\nimport {\n  GridEventListener,\n  GridRenderCellParams,\n  GridRowModes,\n  GridValidRowModel,\n  DataGrid,\n} from '@mui/x-data-grid'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport Loading from 'components/common/Loading'\nimport {\n  selectIsLoadingWorkspaceList,\n  selectWorkspaceData,\n  selectWorkspaceListUserShare,\n} from 'store/slice/Workspace/WorkspaceSelector'\nimport { ChangeEvent, useCallback, useEffect, useMemo, useState } from 'react'\nimport {\n  delWorkspace,\n  getListUserShareWorkSpaces,\n  getWorkspaceList,\n  postWorkspace,\n  putWorkspace,\n} from 'store/slice/Workspace/WorkspaceActions'\nimport PopupShare from 'components/Workspace/PopupShare'\nimport moment from 'moment'\nimport GroupsIcon from '@mui/icons-material/Groups'\nimport EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport { selectCurrentUser } from 'store/slice/User/UserSelector'\nimport { UserDTO } from 'api/users/UsersApiDTO'\nimport { isMine } from 'store/slice/Workspace/WorkspaceUtils'\nimport PaginationCustom from 'components/common/PaginationCustom'\nimport { useSnackbar, VariantType } from 'notistack'\n\ntype PopupType = {\n  open: boolean\n  handleClose: () => void\n  handleOkDel?: () => void\n  setNewWorkSpace?: (name: string) => void\n  value?: string\n  handleOkNew?: () => void\n  handleOkSave?: () => void\n  error?: string\n  nameWorkspace?: string\n}\n\nconst columns = (\n  handleOpenPopupShare: (id: number) => void,\n  handleOpenPopupDel: (id: number, nameWorkspace: string) => void,\n  handleNavWorkflow: (id: number) => void,\n  handleNavRecords: (id: number) => void,\n  user?: UserDTO,\n  onEdit?: (id: number) => void,\n) => [\n  {\n    field: 'id',\n    headerName: 'ID',\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    flex: 1,\n    minWidth: 70,\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) => (\n      <span>{params.value}</span>\n    ),\n  },\n  {\n    field: 'name',\n    headerName: 'Workspace Name',\n    flex: 2,\n    minWidth: 100,\n    editable: true,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) => {\n      const { row, value } = params\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: 2,\n            justifyContent: 'space-between',\n            width: '100%',\n          }}\n        >\n          <Tooltip title={value} placement=\"top\">\n            <span\n              style={{\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                width: '100%',\n              }}\n            >\n              {value}\n            </span>\n          </Tooltip>\n          {isMine(user, row?.user?.id) ? (\n            <ButtonIcon onClick={() => onEdit?.(row.id)}>\n              <EditIcon style={{ fontSize: 16 }} />\n            </ButtonIcon>\n          ) : null}\n        </Box>\n      )\n    },\n  },\n  {\n    field: 'user',\n    headerName: 'Owner',\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    flex: 2,\n    minWidth: 100,\n    renderCell: (\n      params: GridRenderCellParams<{ name: string; id: number }>,\n    ) => (\n      <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n        {params.value ? (\n          <>\n            <span>{params.value?.name}</span>\n            {!isMine(user, params?.value.id) ? <GroupsIcon /> : ''}\n          </>\n        ) : null}\n      </Box>\n    ),\n  },\n  {\n    field: 'created_at',\n    headerName: 'Created',\n    flex: 2,\n    minWidth: 100,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) => (\n      <span\n        style={{\n          whiteSpace: 'normal',\n          wordBreak: 'break-all',\n          overflowWrap: 'break-word',\n        }}\n      >\n        {moment(params.value).format('YYYY/MM/DD hh:mm')}\n      </span>\n    ),\n  },\n  {\n    field: 'workflow',\n    headerName: '',\n    flex: 1,\n    minWidth: 160,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) => (\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        onClick={() => handleNavWorkflow(params.row.id)}\n      >\n        Workflow\n      </Button>\n    ),\n  },\n  {\n    field: 'records',\n    headerName: '',\n    flex: 1,\n    minWidth: 100,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) => {\n      return (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={() => handleNavRecords(params.row.id)}\n        >\n          Records\n        </Button>\n      )\n    },\n  },\n  {\n    field: 'share',\n    headerName: '',\n    flex: 1,\n    minWidth: 70,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) =>\n      isMine(user, params.row?.user?.id) ? (\n        <ButtonIcon onClick={() => handleOpenPopupShare(params.row.id)}>\n          <GroupsIcon color={params.row.shared_count ? 'primary' : 'inherit'} />\n        </ButtonIcon>\n      ) : null,\n  },\n  {\n    field: 'delete',\n    headerName: '',\n    flex: 1,\n    minWidth: 70,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) =>\n      isMine(user, params.row?.user?.id) ? (\n        <ButtonIcon\n          onClick={() => handleOpenPopupDel(params.row.id, params.row.name)}\n        >\n          <DeleteIcon color=\"error\" />\n        </ButtonIcon>\n      ) : null,\n  },\n]\n\nconst PopupNew = ({\n  open,\n  handleClose,\n  value,\n  setNewWorkSpace,\n  handleOkNew,\n  error,\n}: PopupType) => {\n  if (!setNewWorkSpace) return null\n  const handleName = (event: ChangeEvent<HTMLInputElement>) => {\n    setNewWorkSpace(event.target.value)\n  }\n\n  return (\n    <Box>\n      <Dialog open={open} onClose={handleClose} sx={{ margin: 0 }}>\n        <DialogTitle>New Workspace</DialogTitle>\n        <DialogContent sx={{ minWidth: 300 }}>\n          <Input\n            sx={{ width: '80%' }}\n            placeholder={'Workspace Name'}\n            value={value || ''}\n            onChange={handleName}\n          />\n          <br />\n          {error ? <span style={{ color: 'red' }}>{error}</span> : null}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleOkNew}>Ok</Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  )\n}\n\nconst PopupDelete = ({\n  open,\n  handleClose,\n  handleOkDel,\n  nameWorkspace,\n}: PopupType) => {\n  if (!open) return null\n  return (\n    <Box>\n      <Dialog open={open} onClose={handleClose} sx={{ margin: 0 }}>\n        <DialogTitle>\n          Do you want delete Workspace \"{nameWorkspace}\"?\n        </DialogTitle>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleOkDel}>Ok</Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  )\n}\n\nconst Workspaces = () => {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const loading = useSelector(selectIsLoadingWorkspaceList)\n  const listUserShare = useSelector(selectWorkspaceListUserShare)\n  const data = useSelector(selectWorkspaceData)\n  const user = useSelector(selectCurrentUser)\n  const [open, setOpen] = useState({\n    share: false,\n    del: false,\n    new: false,\n    shareId: 0,\n  })\n  const [workspaceDel, setWorkspaceDel] =\n    useState<{ id: number; name: string }>()\n  const [newWorkspace, setNewWorkSpace] = useState<string>()\n  const [error, setError] = useState('')\n  const [initName, setInitName] = useState('')\n  const [rowModesModel, setRowModesModel] = useState<any>({})\n  const [searchParams, setParams] = useSearchParams()\n\n  const { enqueueSnackbar } = useSnackbar()\n\n  const handleClickVariant = (variant: VariantType, mess: string) => {\n    enqueueSnackbar(mess, { variant })\n  }\n\n  const offset = searchParams.get('offset')\n  const limit = searchParams.get('limit')\n\n  const dataParams = useMemo(() => {\n    return {\n      offset: Number(offset) || 0,\n      limit: Number(limit) || 50,\n    }\n    //eslint-disable-next-line\n  }, [offset, limit])\n\n  useEffect(() => {\n    dispatch(getWorkspaceList(dataParams))\n    //eslint-disable-next-line\n  }, [dataParams])\n\n  const handleOpenPopupShare = (shareId: number) => {\n    setOpen({ ...open, share: true, shareId })\n  }\n\n  useEffect(() => {\n    if (!open.share || !open.shareId) return\n    dispatch(getListUserShareWorkSpaces({ id: open.shareId }))\n    //eslint-disable-next-line\n  }, [open.share, open.shareId])\n\n  const handleClosePopupShare = () => {\n    setOpen({ ...open, share: false })\n  }\n\n  const handleOpenPopupDel = (id: number, name: string) => {\n    setWorkspaceDel({ id, name })\n    setOpen({ ...open, del: true })\n  }\n\n  const handleOkDel = async () => {\n    if (!workspaceDel) return\n    const data = await dispatch(\n      delWorkspace({ id: workspaceDel.id, params: dataParams }),\n    )\n    if ((data as any).error) {\n      handleClickVariant('error', 'Workspace deletion failed!')\n    } else {\n      handleClickVariant(\n        'success',\n        'The workspace has been deleted successfully!',\n      )\n    }\n    setOpen({ ...open, del: false })\n  }\n\n  const handleClosePopupDel = () => {\n    setOpen({ ...open, del: false })\n  }\n\n  const handleOpenPopupNew = () => {\n    setOpen({ ...open, new: true })\n  }\n\n  const handleClosePopupNew = () => {\n    setOpen({ ...open, new: false })\n    setError('')\n  }\n\n  const handleNavWorkflow = (id: number) => {\n    navigate(`/console/workspaces/${id}`)\n  }\n\n  const handleNavRecords = (id: number) => {\n    navigate(`/console/workspaces/${id}`, { state: { tab: 2 } })\n  }\n\n  const onEditName = (id: number) => {\n    setRowModesModel((pre: any) => ({\n      ...pre,\n      [id]: { mode: GridRowModes.Edit },\n    }))\n  }\n\n  const handleOkNew = async () => {\n    if (!newWorkspace) {\n      setError(\"Workspace Name cann't empty\")\n      return\n    }\n    const data = await dispatch(postWorkspace({ name: newWorkspace }))\n    if ((data as any).error) {\n      handleClickVariant('error', 'Workspace creation failed!')\n    } else {\n      handleClickVariant(\n        'success',\n        'The workspace has been created successfully!',\n      )\n    }\n    await dispatch(getWorkspaceList(dataParams))\n    setOpen({ ...open, new: false })\n    setError('')\n    setNewWorkSpace('')\n  }\n\n  const onProcessRowUpdateError = (newRow: any) => {\n    return newRow\n  }\n\n  const pagi = useCallback(\n    (page?: number) => {\n      return `limit=${data.limit}&offset=${\n        page ? (page - 1) * data.limit : data.offset\n      }`\n    },\n    [data?.limit, data?.offset],\n  )\n\n  const handlePage = (e: ChangeEvent<unknown>, page: number) => {\n    setParams(`&${pagi(page)}`)\n  }\n\n  const handleRowModesModelChange = (newRowModesModel: any) => {\n    setRowModesModel(newRowModesModel)\n  }\n\n  const onRowEditStop: GridEventListener<'rowEditStop'> = (params, event) => {\n    setInitName(params.row.name)\n  }\n\n  const onCellClick: GridEventListener<'cellClick'> | undefined = (\n    event: any,\n  ) => {\n    if (event.field === 'name') return\n    setRowModesModel((pre: any) => {\n      const object: any = {}\n      Object.keys(pre).forEach((key) => {\n        object[key] = {\n          mode: GridRowModes.View,\n          ignoreModifications: false,\n        }\n      })\n      return object\n    })\n  }\n\n  const processRowUpdate = async (newRow: any) => {\n    if (!newRow.name) {\n      handleClickVariant('error', \"Workspace Name cann't empty\")\n      return { ...newRow, name: initName }\n    }\n    if (newRow.name === initName) return newRow\n    const data = await dispatch(\n      putWorkspace({ name: newRow.name, id: newRow.id }),\n    )\n    if ((data as any).error) {\n      handleClickVariant('error', 'Workspace name edit failed!')\n    } else {\n      handleClickVariant('success', 'Workspace name edited successfully!')\n    }\n    await dispatch(getWorkspaceList(dataParams))\n    return newRow\n  }\n\n  const handleLimit = (event: ChangeEvent<HTMLSelectElement>) => {\n    setParams(`limit=${Number(event.target.value)}&offset=0`)\n  }\n\n  return (\n    <WorkspacesWrapper>\n      <WorkspacesTitle>Workspaces</WorkspacesTitle>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          gap: 2,\n          marginBottom: 2,\n        }}\n      >\n        <Button\n          sx={{\n            background: '#000000c4',\n            '&:hover': { backgroundColor: '#00000090' },\n          }}\n          variant=\"contained\"\n          onClick={handleOpenPopupNew}\n        >\n          New\n        </Button>\n      </Box>\n      {user ? (\n        <Box\n          sx={{\n            minHeight: 500,\n            height: 'calc(100vh - 350px)',\n          }}\n        >\n          <DataGrid\n            onCellClick={onCellClick}\n            rows={data?.items}\n            editMode=\"row\"\n            rowModesModel={rowModesModel}\n            columns={\n              columns(\n                handleOpenPopupShare,\n                handleOpenPopupDel,\n                handleNavWorkflow,\n                handleNavRecords,\n                user,\n                onEditName,\n              ).filter(Boolean) as any\n            }\n            onRowModesModelChange={handleRowModesModelChange}\n            isCellEditable={(params) => isMine(user, params.row.user?.id)}\n            onProcessRowUpdateError={onProcessRowUpdateError}\n            onRowEditStop={onRowEditStop}\n            processRowUpdate={processRowUpdate as any}\n            hideFooter={true}\n          />\n        </Box>\n      ) : null}\n      {data?.items.length > 0 ? (\n        <PaginationCustom\n          data={data}\n          handlePage={handlePage}\n          handleLimit={handleLimit}\n          limit={Number(limit)}\n        />\n      ) : null}\n      {open.share ? (\n        <PopupShare\n          title=\"Share Workspace\"\n          usersShare={listUserShare}\n          open={open.share}\n          handleClose={(_isSubmit: boolean) => {\n            if (_isSubmit) {\n              dispatch(getWorkspaceList(dataParams))\n            }\n            handleClosePopupShare()\n          }}\n          id={open.shareId}\n        />\n      ) : null}\n      <PopupDelete\n        open={open.del}\n        handleClose={handleClosePopupDel}\n        handleOkDel={handleOkDel}\n        nameWorkspace={workspaceDel?.name}\n      />\n      <PopupNew\n        open={open.new}\n        handleClose={handleClosePopupNew}\n        setNewWorkSpace={setNewWorkSpace}\n        value={newWorkspace}\n        error={error}\n        handleOkNew={handleOkNew}\n      />\n      {loading ? <Loading /> : null}\n    </WorkspacesWrapper>\n  )\n}\n\nconst WorkspacesWrapper = styled(Box)(({ theme }) => ({\n  margin: 'auto',\n  width: '90vw',\n  padding: theme.spacing(2),\n  overflow: 'auto',\n}))\n\nconst WorkspacesTitle = styled('h1')(({ theme }) => ({}))\n\nconst ButtonIcon = styled('button')(({ theme }) => ({\n  minWidth: '32px',\n  minHeight: '32px',\n  width: '32px',\n  height: '32px',\n  color: '#444',\n  border: 'none',\n  borderRadius: '50%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  cursor: 'pointer',\n  background: 'transparent',\n  '&:hover': {\n    background: 'rgb(239 239 239)',\n  },\n}))\n\nexport default Workspaces\n","import {\n  ParamDTO,\n  ParamChild,\n  ParamParent,\n  ParamType,\n  ParamMap,\n} from './ParamType'\n\nexport function getChildParam(\n  path: string,\n  ParamMap: ParamMap,\n): ParamChild | null {\n  let result: ParamChild | null = null\n  for (const node of Object.values(ParamMap)) {\n    if (isParamChild(node)) {\n      if (node.path === path) {\n        result = node\n      }\n    } else {\n      result = getChildParam(path, node.children)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function isParamChild(param: ParamType): param is ParamChild {\n  return param.type === 'child'\n}\n\nexport function isParamParent(param: ParamType): param is ParamParent {\n  return param.type === 'parent'\n}\n\nfunction isDictObject(value: unknown): value is { [key: string]: unknown } {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst PATH_SEPARATOR = '/'\n\nexport function convertToParamMap(dto: ParamDTO, keyList?: string[]): ParamMap {\n  const ParamMap: ParamMap = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    const kList = keyList ?? []\n    if (isDictObject(value)) {\n      kList.push(name)\n      ParamMap[name] = {\n        type: 'parent',\n        children: convertToParamMap(value, kList),\n      }\n    } else {\n      ParamMap[name] = {\n        type: 'child',\n        value,\n        path: kList.concat([name]).join(PATH_SEPARATOR),\n      }\n    }\n  })\n  return ParamMap\n}\n\nexport function equalsParamMap(a: ParamMap, b: ParamMap) {\n  if (a === b) {\n    return true\n  }\n  const aArray = Object.keys(a)\n  const bArray = Object.keys(b)\n  return (\n    aArray.length === bArray.length &&\n    aArray.every((aKey) => {\n      const aValue = a[aKey]\n      const bValue = b[aKey]\n      return equalsParam(aValue, bValue)\n    })\n  )\n}\n\nfunction equalsParam(a: ParamType, b: ParamType): boolean {\n  if (a === b) {\n    return true\n  }\n  if (isParamChild(a) && isParamChild(b)) {\n    return equalsParamChild(a, b)\n  } else if (isParamParent(a) && isParamParent(b)) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      aArray.length === bArray.length &&\n      aArray.every((aKey) => {\n        const aValue = a.children[aKey]\n        const bValue = b.children[aKey]\n        return equalsParam(aValue, bValue)\n      })\n    )\n  } else {\n    return false\n  }\n}\n\nfunction equalsParamChild(a: ParamChild, b: ParamChild) {\n  return a.path === b.path && a.value === b.value\n}\n","import { RootState } from 'store/store'\n\nimport { getChildParam } from 'utils/param/ParamUtils'\n\nexport const selectAlgorithmNode = (state: RootState) => state.algorithmNode\n\nexport const selectAlgorithmNodeById = (nodeId: string) => (state: RootState) =>\n  state.algorithmNode[nodeId]\n\nexport const selectAlgorithmNodeDefined =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(state.algorithmNode).includes(nodeId)\n\nexport const selectAlgorithmFunctionPath =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).functionPath\n\nexport const selectAlgorithmName = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).name\n\nexport const selectAlgorithmParams = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).params\n\nexport const selectAlgorithmIsUpdated =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).isUpdated\n\nexport const selectAlgorithmParamsExit =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).params !== null\n\nexport const selectAlgorithmParamsKeyList =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(selectAlgorithmNodeById(nodeId)(state)?.params ?? {})\n\nexport const selectAlgorithmParamsValue =\n  (nodeId: string, path: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmParam =\n  (nodeId: string, paramKey: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      return params[paramKey]\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmNodeNotExist = (state: RootState) =>\n  Object.keys(selectAlgorithmNode(state)).length === 0\n","import { RootState } from 'store/store'\n\nexport const selectFlowNodes = (state: RootState) => state.flowElement.flowNodes\n\nexport const selectFlowEdges = (state: RootState) => state.flowElement.flowEdges\n\nexport const selectFlowPosition = (state: RootState) =>\n  state.flowElement.flowPosition\n\nexport const selectElementCoord = (state: RootState) =>\n  state.flowElement.elementCoord\n\nexport const selectNodeById = (nodeId: string) => (state: RootState) =>\n  selectFlowNodes(state).find((node) => node.id === nodeId)\n\nexport const selectNodeTypeById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.type\n\nexport const selectNodeLabelById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.label\n","import { Transform, Node, Edge } from 'react-flow-renderer'\n\nexport const FLOW_ELEMENT_SLICE_NAME = 'flowElement'\n\nexport const NODE_TYPE_SET = {\n  INPUT: 'input',\n  ALGORITHM: 'algorithm',\n} as const\n\nexport type NODE_TYPE = (typeof NODE_TYPE_SET)[keyof typeof NODE_TYPE_SET]\n\nexport type NodeData = AlgorithmNodeData | InputNodeData\n\ninterface NodeDataBaseType<T extends NODE_TYPE> {\n  label: string\n  type: T\n}\n\nexport interface InputNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.INPUT> {}\n\nexport interface AlgorithmNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.ALGORITHM> {}\n\nexport interface ElementCoord {\n  x: number\n  y: number\n}\n\nexport interface FlowElement {\n  flowNodes: Node<NodeData>[]\n  flowEdges: Edge[]\n  flowPosition: Transform\n  elementCoord: ElementCoord\n}\n","import { isNode, Node } from 'react-flow-renderer'\nimport {\n  AlgorithmNodeData,\n  NodeData,\n  NODE_TYPE_SET,\n  InputNodeData,\n} from './FlowElementType'\n\nexport function isNodeData(\n  node: Node<NodeData> | undefined,\n): node is Node<NodeData> {\n  return node != null && isNode(node) && node.data != null\n}\n\nexport function isAlgorithmNodeData(\n  node: Node<NodeData> | undefined,\n): node is Node<AlgorithmNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.ALGORITHM\n}\n\nexport function isInputNodeData(\n  node: Node<NodeData> | undefined,\n): node is Node<InputNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.INPUT\n}\n\nexport function getLabelByPath(filePath: string | string[]) {\n  if (Array.isArray(filePath)) {\n    if (filePath.length === 0) {\n      return ''\n    } else if (filePath.length === 1) {\n      return getFileName(filePath[0])\n    } else {\n      return getFileName(filePath[0]) + ` ... and ${filePath.length - 1} files`\n    }\n  } else {\n    return getFileName(filePath)\n  }\n}\n\nexport function getFileName(filePath: string) {\n  return filePath.split('/').reverse()[0]\n}\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nexport const selectNwb = (state: RootState) => state.nwb\n\nexport const selectNwbParams = (state: RootState) => selectNwb(state).params\n\nexport const selectNwbParamsKeyList = (state: RootState) =>\n  Object.keys(selectNwb(state).params)\n\nexport const selectNwbParam = (paramKey: string) => (state: RootState) =>\n  selectNwb(state).params[paramKey]\n\nexport const selectNwbParamsValue = (path: string) => (state: RootState) => {\n  const params = selectNwb(state).params\n  if (params != null) {\n    const target = getChildParam(path, params)\n    return target?.value\n  } else {\n    throw new Error('Param is null')\n  }\n}\n","import { RunPostData } from 'api/run/Run'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\n\nexport const PIPELINE_SLICE_NAME = 'pipeline'\n\nexport type Pipeline = {\n  run: PipelineType\n  currentPipeline?: {\n    uid: string\n  }\n  runBtn: RUN_BTN_TYPE\n}\n\nexport const RUN_STATUS = {\n  /**\n   * 未実行\n   */\n  START_UNINITIALIZED: 'StartUninitialized',\n  /**\n   * 開始リクエスト中\n   */\n  START_PENDING: 'StartPending',\n  /**\n   * 開始できなかった\n   */\n  START_ERROR: 'StartError',\n  /**\n   * 正常に開始した\n   */\n  START_SUCCESS: 'StartSuccess',\n  /**\n   * 全て終了\n   */\n  FINISHED: 'Finished',\n  /**\n   * 途中終了\n   */\n  ABORTED: 'Aborted',\n  /**\n   * キャンセルされた\n   */\n  CANCELED: 'Canceled',\n} as const\n\nexport type RUN_STATUS_TYPE = typeof RUN_STATUS[keyof typeof RUN_STATUS]\n\nexport type PipelineType =\n  | StartedPipeline\n  | {\n      status:\n        | typeof RUN_STATUS.START_ERROR\n        | typeof RUN_STATUS.START_PENDING\n        | typeof RUN_STATUS.START_UNINITIALIZED\n    }\n\nexport type StartedPipeline = {\n  uid: string\n  status:\n    | typeof RUN_STATUS.START_SUCCESS\n    | typeof RUN_STATUS.FINISHED\n    | typeof RUN_STATUS.ABORTED\n    | typeof RUN_STATUS.CANCELED\n  runPostData: RunPostData\n  runResult: RunResult\n}\n\nexport type RunResult = {\n  [nodeId: string]: NodeResult\n}\n\nexport type NodeResult = NodeResultPending | NodeResultSuccess | NodeResultError\n\nexport const NODE_RESULT_STATUS = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PENDING: 'pending',\n} as const\n\nexport type NODE_RESULT_STATUS_TYPE =\n  typeof NODE_RESULT_STATUS[keyof typeof NODE_RESULT_STATUS]\n\nexport interface NodeResultBaseType<T extends NODE_RESULT_STATUS_TYPE> {\n  status: T\n  message?: string\n  name: string\n}\n\nexport interface NodeResultPending\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.PENDING> {}\n\nexport interface NodeResultSuccess\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.SUCCESS> {\n  outputPaths: OutputPaths\n}\n\nexport type OutputPaths = {\n  [outputKey: string]: {\n    path: string\n    type: DATA_TYPE\n  }\n}\n\nexport interface NodeResultError\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.ERROR> {\n  message: string\n}\n\nexport const RUN_BTN_OPTIONS = {\n  RUN_NEW: 1,\n  RUN_ALREADY: 2,\n} as const\n\nexport type RUN_BTN_TYPE = typeof RUN_BTN_OPTIONS[keyof typeof RUN_BTN_OPTIONS]\n\nexport const RUN_BTN_LABELS = {\n  [RUN_BTN_OPTIONS.RUN_NEW]: 'RUN ALL',\n  [RUN_BTN_OPTIONS.RUN_ALREADY]: 'RUN',\n} as const\n","import {\n  HeatMapData,\n  TimeSeriesData,\n  BarData,\n  CsvData,\n  RoiData,\n  ImageData,\n  ScatterData,\n  HTMLData,\n  HistogramData,\n  LineData,\n  PieData,\n  PolarData,\n} from 'api/outputs/Outputs'\n\nexport const DISPLAY_DATA_SLICE_NAME = 'displayData'\n\nexport type DisplayData = {\n  timeSeries: {\n    [filePath: string]: TimeSeriesDisplayData\n  }\n  heatMap: {\n    [filePath: string]: HeatMapDisplayData\n  }\n  image: {\n    [filePath: string]: ImageDisplayData\n  }\n  csv: {\n    [filePath: string]: CsvDisplayData\n  }\n  roi: {\n    [filePath: string]: RoiDisplayData\n  }\n  scatter: {\n    [filePath: string]: ScatterDisplayData\n  }\n  bar: {\n    [filePath: string]: BarDisplayData\n  }\n  // hdf5: {\n  //   [filePath: string]: HDF5DisplayData\n  // }\n  html: {\n    [filePath: string]: HTMLDisplayData\n  }\n  histogram: {\n    [filePath: string]: HistogramDisplayData\n  }\n  line: {\n    [filePath: string]: LineDisplayData\n  }\n  pie: {\n    [filepath: string]: PieDisplayData\n  }\n  polar: {\n    [filePath: string]: PolarDisplayData\n  }\n}\n\nexport const DATA_TYPE_SET = {\n  TIME_SERIES: 'timeSeries',\n  HEAT_MAP: 'heatMap',\n  IMAGE: 'image',\n  CSV: 'csv',\n  ROI: 'roi',\n  SCATTER: 'scatter',\n  BAR: 'bar',\n  HDF5: 'hdf5',\n  HTML: 'html',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  HISTOGRAM: 'histogram',\n  LINE: 'line',\n  PIE: 'pie',\n  POLAR: 'polar',\n} as const\n\nexport type DATA_TYPE = typeof DATA_TYPE_SET[keyof typeof DATA_TYPE_SET]\n\nexport type PlotMetaData = {\n  xlabel?: string\n  ylabel?: string\n  title?: string\n}\n\ninterface BaseDisplay<T extends DATA_TYPE, Data> {\n  type: T\n  data: Data\n  meta?: PlotMetaData\n  pending: boolean\n  error: string | null\n  fulfilled: boolean\n}\n\nexport interface TimeSeriesDisplayData\n  extends BaseDisplay<'timeSeries', TimeSeriesData> {\n  xrange: string[]\n  std: TimeSeriesData\n}\n\nexport interface HeatMapDisplayData\n  extends BaseDisplay<'heatMap', HeatMapData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface ImageDisplayData extends BaseDisplay<'image', ImageData> {}\n\nexport interface CsvDisplayData extends BaseDisplay<'csv', CsvData> {\n  // columns: string[]\n}\n\nexport interface RoiDisplayData extends BaseDisplay<'roi', RoiData> {\n  roiUniqueList: string[]\n}\n\nexport interface ScatterDisplayData\n  extends BaseDisplay<'scatter', ScatterData> {}\n\nexport interface BarDisplayData extends BaseDisplay<'bar', BarData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface HTMLDisplayData extends BaseDisplay<'html', HTMLData> {}\n\nexport interface HistogramDisplayData\n  extends BaseDisplay<'histogram', HistogramData> {}\n\nexport interface LineDisplayData extends BaseDisplay<'line', LineData> {\n  columns: number[]\n  index: number[]\n}\n\nexport interface PieDisplayData extends BaseDisplay<'pie', PieData> {\n  columns: string[]\n}\n\nexport interface PolarDisplayData extends BaseDisplay<'polar', PolarData> {\n  columns: number[]\n  index: number[]\n}\n","import { DATA_TYPE, DATA_TYPE_SET } from './DisplayDataType'\n\n/**\n * サーバーサイドの値をマッピング\n */\nexport function toDataType(value: string): DATA_TYPE {\n  switch (value) {\n    case 'images':\n      return DATA_TYPE_SET.IMAGE\n    case 'timeseries':\n      return DATA_TYPE_SET.TIME_SERIES\n    case 'heatmap':\n      return DATA_TYPE_SET.HEAT_MAP\n    case 'roi':\n      return DATA_TYPE_SET.ROI\n    case 'scatter':\n      return DATA_TYPE_SET.SCATTER\n    case 'bar':\n      return DATA_TYPE_SET.BAR\n    case 'html':\n      return DATA_TYPE_SET.HTML\n    case 'histogram':\n      return DATA_TYPE_SET.HISTOGRAM\n    case 'line':\n      return DATA_TYPE_SET.LINE\n    case 'pie':\n      return DATA_TYPE_SET.PIE\n    case 'polar':\n      return DATA_TYPE_SET.POLAR\n    default:\n      throw new Error(`failed to map dataType: ${value}`)\n  }\n}\n","import { RunPostData, RunResultDTO, OutputPathsDTO } from 'api/run/Run'\n\nimport { toDataType } from '../DisplayData/DisplayDataUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  RunResult,\n  OutputPaths,\n  NODE_RESULT_STATUS,\n  PipelineType,\n  RUN_STATUS,\n  StartedPipeline,\n  NodeResultPending,\n  NodeResultError,\n  NodeResultSuccess,\n  NodeResult,\n} from './PipelineType'\n\nexport function isNodeResultPending(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultPending {\n  return nodeResult.status === NODE_RESULT_STATUS.PENDING\n}\n\nexport function isNodeResultSuccess(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultSuccess {\n  return nodeResult.status === NODE_RESULT_STATUS.SUCCESS\n}\n\nexport function isNodeResultError(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultError {\n  return nodeResult.status === NODE_RESULT_STATUS.ERROR\n}\n\nexport function isStartedPipeline(\n  pipeline: PipelineType,\n): pipeline is StartedPipeline {\n  return (\n    pipeline.status === RUN_STATUS.START_SUCCESS ||\n    pipeline.status === RUN_STATUS.FINISHED ||\n    pipeline.status === RUN_STATUS.ABORTED\n  )\n}\n\nexport function getInitialRunResult(runPostData: RunPostData) {\n  const initialResult: RunResult = {}\n  Object.values(runPostData.nodeDict)\n    .filter(({ data }) => data?.type === NODE_TYPE_SET.ALGORITHM)\n    .forEach(({ id, data }) => {\n      initialResult[id] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: data?.label ?? '',\n      }\n    })\n  return initialResult\n}\n\nexport function convertToRunResult(dto: RunResultDTO) {\n  const result: RunResult = {}\n  Object.entries(dto).forEach(([nodeId, nodeResultDto]) => {\n    const outputPath = nodeResultDto.outputPaths\n    if (nodeResultDto.status === 'success' && outputPath != null) {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.SUCCESS,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n        outputPaths: convertToOutputPath(outputPath),\n      }\n    } else if (nodeResultDto.status === 'running') {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: nodeResultDto.name,\n      }\n    } else {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.ERROR,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n      }\n    }\n  })\n  return result\n}\n\nfunction convertToOutputPath(dto: OutputPathsDTO) {\n  const result: OutputPaths = {}\n  Object.entries(dto).forEach(([functionPath, value]) => {\n    result[functionPath] = {\n      path: value.path,\n      type: toDataType(value.type),\n    }\n  })\n  return result\n}\n","import { RootState } from 'store/store'\n\nimport {\n  NodeResult,\n  NodeResultPending,\n  NodeResultSuccess,\n  RUN_STATUS,\n} from './PipelineType'\nimport {\n  isNodeResultPending,\n  isStartedPipeline,\n  isNodeResultSuccess,\n} from './PipelineUtils'\n\nexport const selectPipelineLatestUid = (state: RootState) => {\n  return state.pipeline.currentPipeline?.uid\n}\n\nexport const selectStartedPipeline = (state: RootState) => {\n  return state.pipeline.run\n}\n\nexport const selectPipelineRunBtn = (state: RootState) => {\n  return state.pipeline.runBtn\n}\n\nexport const selectRunResultPendingList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.values(pipeline.runResult).filter(isNodeResultPending)\n  } else {\n    return []\n  }\n}\n\nexport const selectRunResultPendingNodeIdList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => ({ nodeId, nodeResult }))\n      .filter(isNodeResultPendingAndNodeId)\n      .map(({ nodeId }) => nodeId)\n  } else {\n    return []\n  }\n}\n\nfunction isNodeResultPendingAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultPending\n} {\n  return isNodeResultPending(arg.nodeResult)\n}\n\nexport const selectPipelineStatus = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status\n}\n\nexport const selectPipelineIsCanceled = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.CANCELED\n}\n\nexport const selectPipelineIsStartedSuccess = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.START_SUCCESS\n}\n\nexport const selectPipelineNodeResultSuccessList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => {\n        return {\n          nodeId,\n          nodeResult,\n        }\n      })\n      .filter(isNodeResultSuccessAndNodeId)\n  } else {\n    return []\n  }\n}\n\n// selectPipelineNodeResultSuccessListの返り値の型を正しく認識させるためだけに作った\nfunction isNodeResultSuccessAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultSuccess\n} {\n  return isNodeResultSuccess(arg.nodeResult)\n}\n\nexport const selectPipelineNodeResultStatus =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].status\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultMessage =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].message\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultOutputKeyList =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return Object.keys(nodeResult.outputPaths)\n      }\n    }\n    return []\n  }\n\nconst selectPipelineNodeResultOutputPaths =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return nodeResult.outputPaths\n      }\n    }\n    throw new Error(`key error. nodeId:${nodeId}`)\n  }\n\nexport const selectPipelineNodeResultOutputFilePath =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].path\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n\nexport const selectPipelineNodeResultOutputFileDataType =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].type\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nconst selectSnakemake = (state: RootState) => state.snakemake\nexport const selectSnakemakeParams = (state: RootState) =>\n  selectSnakemake(state).params\n\nexport const selectSnakemakeParamsKeyList = (state: RootState) =>\n  Object.keys(selectSnakemakeParams(state))\n\nexport const selectSnakemakeParam = (paramKey: string) => (state: RootState) =>\n  selectSnakemakeParams(state)[paramKey]\n\nexport const selectSnakemakeParamsValue =\n  (path: string) => (state: RootState) => {\n    const params = selectSnakemakeParams(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('Param is null')\n    }\n  }\n","export const INPUT_NODE_SLICE_NAME = 'inputNode'\n\nexport const FILE_TYPE_SET = {\n  CSV: 'csv',\n  IMAGE: 'image',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type FILE_TYPE = typeof FILE_TYPE_SET[keyof typeof FILE_TYPE_SET]\n\nexport type InputNode = {\n  [nodeId: string]: InputNodeType\n}\n\nexport type InputNodeType = CsvInputNode | ImageInputNode | HDF5InputNode\n\ninterface InputNodeBaseType<\n  T extends FILE_TYPE,\n  P extends { [key: string]: unknown },\n> {\n  fileType: T\n  selectedFilePath?: string | string[]\n  param: P\n}\n\nexport type CsvInputParamType = {\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\n\nexport interface CsvInputNode\n  extends InputNodeBaseType<'csv', CsvInputParamType> {\n  selectedFilePath?: string\n}\n\nexport interface ImageInputNode extends InputNodeBaseType<'image', {}> {\n  selectedFilePath?: string[]\n}\n\nexport interface HDF5InputNode extends InputNodeBaseType<'hdf5', {}> {\n  selectedFilePath?: string\n  hdf5Path?: string\n}\n","import {\n  CsvInputNode,\n  ImageInputNode,\n  HDF5InputNode,\n  InputNodeType,\n  FILE_TYPE_SET,\n} from './InputNodeType'\n\nexport function isImageInputNode(\n  inputNode: InputNodeType,\n): inputNode is ImageInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.IMAGE\n}\n\nexport function isCsvInputNode(\n  inputNode: InputNodeType,\n): inputNode is CsvInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.CSV\n}\n\nexport function isHDF5InputNode(\n  inputNode: InputNodeType,\n): inputNode is HDF5InputNode {\n  return inputNode.fileType === FILE_TYPE_SET.HDF5\n}\n","import { RootState } from 'store/store'\nimport {\n  isHDF5InputNode,\n  isCsvInputNode,\n  isImageInputNode,\n} from './InputNodeUtils'\n\nexport const selectInputNode = (state: RootState) => state.inputNode\n\nexport const selectInputNodeById = (nodeId: string) => (state: RootState) =>\n  state.inputNode[nodeId]\n\nexport const selectInputNodeDefined = (nodeId: string) => (state: RootState) =>\n  Object.keys(state.inputNode).includes(nodeId)\n\nexport const selectInputNodeFileType = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).fileType\n\nexport const selectInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) =>\n    selectInputNodeById(nodeId)(state).selectedFilePath\n\nexport const selectCsvInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isCsvInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectImageInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isImageInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectHDF5InputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectFilePathIsUndefined = (state: RootState) =>\n  Object.keys(state.inputNode).length === 0 ||\n  Object.values(state.inputNode).filter((inputNode) => {\n    if (isHDF5InputNode(inputNode)) {\n      return inputNode.selectedFilePath == null || inputNode.hdf5Path == null\n    } else {\n      const filePath = inputNode.selectedFilePath\n      if (Array.isArray(filePath)) {\n        return filePath.length === 0\n      } else {\n        return filePath == null\n      }\n    }\n  }).length > 0\n\nexport const selectInputNodeParam = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).param\n\nconst selectCsvInputNodeParam = (nodeId: string) => (state: RootState) => {\n  const inputNode = selectInputNodeById(nodeId)(state)\n  if (isCsvInputNode(inputNode)) {\n    return inputNode.param\n  } else {\n    throw new Error(`The InputNode is not CsvInputNode. (nodeId: ${nodeId})`)\n  }\n}\n\nexport const selectCsvInputNodeParamSetHeader =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setHeader\n\nexport const selectCsvInputNodeParamSetIndex =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setIndex\n\nexport const selectCsvInputNodeParamTranspose =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).transpose\n\nexport const selectInputNodeHDF5Path =\n  (nodeId: string) => (state: RootState) => {\n    const item = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(item)) {\n      return item.hdf5Path\n    } else {\n      return undefined\n    }\n  }\n","import { Node } from 'react-flow-renderer'\n\nimport {\n  AlgorithmNodePostData,\n  EdgeDict,\n  InputNodePostData,\n  NodeDict,\n  RunPostData,\n} from 'api/run/Run'\n\nimport { RootState } from 'store/store'\n\nimport {\n  selectAlgorithmFunctionPath,\n  selectAlgorithmIsUpdated,\n  selectAlgorithmName,\n  selectAlgorithmParams,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectFlowEdges,\n  selectFlowNodes,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { isAlgorithmNodeData } from 'store/slice/FlowElement/FlowElementUtils'\nimport { selectNwbParams } from 'store/slice/NWB/NWBSelectors'\nimport { selectPipelineNodeResultStatus } from 'store/slice/Pipeline/PipelineSelectors'\nimport { NODE_RESULT_STATUS } from 'store/slice/Pipeline/PipelineType'\nimport { selectSnakemakeParams } from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { NODE_TYPE_SET } from 'store/slice/FlowElement/FlowElementType'\nimport {\n  selectInputNodeFileType,\n  selectInputNodeHDF5Path,\n  selectInputNodeParam,\n  selectInputNodeSelectedFilePath,\n} from 'store/slice/InputNode/InputNodeSelectors'\n\nexport const selectRunPostData = (state: RootState) => {\n  const nwbParam = selectNwbParams(state)\n  const snakemakeParam = selectSnakemakeParams(state)\n  const edgeDictForRun = selectEdgeDictForRun(state)\n  const nodeDictForRun = selectNodeDictForRun(state)\n  const forceRunList = selectForceRunList(state)\n  const runPostData: Omit<RunPostData, 'name'> = {\n    nwbParam,\n    snakemakeParam,\n    edgeDict: edgeDictForRun,\n    nodeDict: nodeDictForRun,\n    forceRunList,\n  }\n  return runPostData\n}\n\n/**\n * 前回の結果で、エラーまたはParamに変更があるnodeのリストを返す\n */\nconst selectForceRunList = (state: RootState) => {\n  const nodes = selectFlowNodes(state)\n  return nodes\n    .filter(isAlgorithmNodeData)\n    .filter((node) => {\n      const isUpdated = selectAlgorithmIsUpdated(node.id)(state)\n      const status = selectPipelineNodeResultStatus(node.id)(state)\n      return isUpdated || status === NODE_RESULT_STATUS.ERROR\n    })\n    .map((node) => ({\n      nodeId: node.id,\n      name: selectAlgorithmName(node.id)(state),\n    }))\n}\n\nconst selectNodeDictForRun = (state: RootState): NodeDict => {\n  const nodes = selectFlowNodes(state)\n  const nodeDict: NodeDict = {}\n  nodes.forEach((node) => {\n    if (isAlgorithmNodeData(node)) {\n      const param = selectAlgorithmParams(node.id)(state) ?? {}\n      const functionPath = selectAlgorithmFunctionPath(node.id)(state)\n      const algorithmNodePostData: Node<AlgorithmNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.ALGORITHM,\n          path: functionPath,\n          param,\n        },\n      }\n      nodeDict[node.id] = algorithmNodePostData\n    } else {\n      const filePath = selectInputNodeSelectedFilePath(node.id)(state)\n      const fileType = selectInputNodeFileType(node.id)(state)\n      const param = selectInputNodeParam(node.id)(state)\n      const hdf5Path = selectInputNodeHDF5Path(node.id)(state)\n      const inputNodePosyData: Node<InputNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.INPUT,\n          path: filePath ?? '',\n          param,\n          hdf5Path: hdf5Path,\n          fileType,\n        },\n      }\n      nodeDict[node.id] = inputNodePosyData\n    }\n  })\n  return nodeDict\n}\n\nconst selectEdgeDictForRun = (state: RootState) => {\n  const edgeDict: EdgeDict = {}\n  selectFlowEdges(state).forEach((edge) => {\n    edgeDict[edge.id] = edge\n  })\n  return edgeDict\n}\n","import axios from 'utils/axios'\nimport type { Edge, Node } from 'react-flow-renderer'\n\nimport { BASE_URL } from 'const/API'\nimport type {\n  AlgorithmNodeData,\n  InputNodeData,\n} from 'store/slice/FlowElement/FlowElementType'\nimport type { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport type { ParamMap } from 'utils/param/ParamType'\n\nexport type RunPostData = {\n  name: string\n  nodeDict: NodeDict\n  edgeDict: EdgeDict\n  nwbParam: ParamMap\n  snakemakeParam: ParamMap\n  forceRunList: { nodeId: string; name: string }[]\n}\n\nexport type NodeDict = {\n  [nodeId: string]: Node<NodePostDataType>\n}\n\nexport type EdgeDict = {\n  [nodeId: string]: Edge\n}\n\nexport type NodePostDataType = AlgorithmNodePostData | InputNodePostData\n\nexport interface InputNodePostData extends InputNodeData {\n  path: string | string[]\n  fileType: FILE_TYPE\n  param?: {\n    [key: string]: unknown\n  }\n  hdf5Path?: string\n}\n\nexport interface AlgorithmNodePostData extends AlgorithmNodeData {\n  path: string\n  param: ParamMap\n}\n\nexport async function runApi(\n  workspaceId: number,\n  data: RunPostData,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${workspaceId}`, data)\n  return response.data\n}\n\nexport async function runByUidApi(\n  workspaceId: number,\n  uid: string,\n  data: Omit<RunPostData, 'name'>,\n): Promise<string> {\n  const response = await axios.post(\n    `${BASE_URL}/run/${workspaceId}/${uid}`,\n    data,\n  )\n  return response.data\n}\n\nexport type RunResultDTO = {\n  [nodeId: string]: {\n    status: string\n    message: string\n    name: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type OutputPathsDTO = {\n  [outputKey: string]: {\n    path: string\n    type: string\n  }\n}\n\nexport async function runResult(data: {\n  workspaceId: number\n  uid: string\n  pendingNodeIdList: string[]\n}): Promise<RunResultDTO> {\n  const { workspaceId, uid, pendingNodeIdList } = data\n  const response = await axios.post(\n    `${BASE_URL}/run/result/${workspaceId}/${uid}`,\n    {\n      pendingNodeIdList,\n    },\n  )\n  return response.data\n}\n\nexport async function cancelResultApi(data: {\n  workspaceId: number\n  uid: string\n}): Promise<RunResultDTO> {\n  const { workspaceId, uid } = data\n  const response = await axios.post(\n    `${BASE_URL}/run/cancel/${workspaceId}/${uid}`,\n  )\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { ThunkApiConfig } from 'store/store'\nimport { PIPELINE_SLICE_NAME } from './PipelineType'\nimport {\n  runApi,\n  runByUidApi,\n  runResult,\n  RunResultDTO,\n  RunPostData,\n  cancelResultApi,\n} from 'api/run/Run'\nimport {\n  selectPipelineLatestUid,\n  selectRunResultPendingNodeIdList,\n} from './PipelineSelectors'\nimport { selectCurrentWorkspaceId } from '../Workspace/WorkspaceSelector'\n\nexport const run = createAsyncThunk<\n  string,\n  { runPostData: RunPostData },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/run`, async ({ runPostData }, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const responseData = await runApi(workspaceId, runPostData)\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist.')\n  }\n})\n\nexport const runByCurrentUid = createAsyncThunk<\n  string,\n  { runPostData: Omit<RunPostData, 'name'> },\n  ThunkApiConfig\n>(\n  `${PIPELINE_SLICE_NAME}/runByCurrentUid`,\n  async ({ runPostData }, thunkAPI) => {\n    const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n    const currentUid = selectPipelineLatestUid(thunkAPI.getState())\n    if (workspaceId && currentUid != null) {\n      try {\n        const responseData = await runByUidApi(\n          workspaceId,\n          currentUid,\n          runPostData,\n        )\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    } else {\n      return thunkAPI.rejectWithValue(\n        'workspaceId or currentUid dose not exist.',\n      )\n    }\n  },\n)\n\nexport const pollRunResult = createAsyncThunk<\n  RunResultDTO,\n  {\n    uid: string\n  },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/pollRunResult`, async ({ uid }, thunkAPI) => {\n  const pendingNodeIdList = selectRunResultPendingNodeIdList(\n    thunkAPI.getState(),\n  )\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const responseData = await runResult({\n        workspaceId,\n        uid,\n        pendingNodeIdList,\n      })\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist')\n  }\n})\n\nexport const cancelResult = createAsyncThunk<\n    RunResultDTO,\n    {\n      uid: string\n    },\n    ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/cancelResult`, async ({ uid }, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const responseData = await cancelResultApi({\n        workspaceId: workspaceId,\n        uid\n      })\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist')\n  }\n})\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\nimport { OutputPathsDTO } from 'api/run/Run'\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\nimport { WorkflowConfigDTO } from 'api/workflow/Workflow'\n\nexport type ExperimentsDTO = {\n  [uid: string]: ExperimentDTO\n}\n\nexport type FunctionsDTO = {\n  [nodeId: string]: {\n    name: string\n    success: string\n    unique_id: string\n    hasNWB: boolean\n    message?: string\n    started_at?: string\n    finished_at?: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\ntype NWBType = {\n  imaging_plane: {\n    imaging_rate: number\n  }\n}\n\nexport type ExperimentDTO = {\n  function: FunctionsDTO\n  name: string\n  success?: EXPERIMENTS_STATUS\n  started_at: string\n  finished_at?: string\n  workspace_id: number\n  unique_id: string\n  hasNWB: boolean\n  nwb: NWBType\n}\n\nexport type FetchExperimentDTO = ExperimentDTO & WorkflowConfigDTO\n\nexport async function getExperimentsApi(\n  workspaceId: number,\n): Promise<ExperimentsDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments/${workspaceId}`)\n  return response.data\n}\n\nexport async function deleteExperimentByUidApi(\n  workspaceId: number,\n  uid: string,\n): Promise<boolean> {\n  const response = await axios.delete(\n    `${BASE_URL}/experiments/${workspaceId}/${uid}`,\n  )\n  return response.data\n}\n\nexport async function deleteExperimentByListApi(\n  workspaceId: number,\n  uidList: Array<string>,\n): Promise<boolean> {\n  const response = await axios.post(\n    `${BASE_URL}/experiments/delete/${workspaceId}`,\n    {\n      uidList,\n    },\n  )\n  return response.data\n}\n\nexport async function downloadExperimentNwbApi(\n  workspaceId: number,\n  uid: string,\n  nodeId?: string,\n) {\n  const path =\n    nodeId != null\n      ? `${BASE_URL}/experiments/download/nwb/${workspaceId}/${uid}/${nodeId}`\n      : `${BASE_URL}/experiments/download/nwb/${workspaceId}/${uid}`\n  const response = await axios.get(path, {\n    responseType: 'blob',\n  })\n  return response.data\n}\n\nexport async function downloadExperimentConfigApi(\n  workspaceId: number,\n  uid: string,\n) {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/download/config/${workspaceId}/${uid}`,\n    {\n      responseType: 'blob',\n    },\n  )\n  return response.data\n}\n\nexport async function fetchExperimentApi(\n  workspace_id: number,\n): Promise<FetchExperimentDTO> {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/fetch/${workspace_id}`,\n  )\n  return response.data\n}\n\nexport async function renameExperiment(\n  workspaceId: number,\n  uid: string,\n  new_name: string,\n) {\n  const response = await axios.patch(\n    `${BASE_URL}/experiments/${workspaceId}/${uid}/rename`,\n    {\n      new_name,\n    },\n  )\n  return response.data\n}\n","export const EXPERIMENTS_SLICE_NAME = 'experiments'\n\nexport type Experiments =\n  | {\n      status: 'fulfilled'\n      experimentList: ExperimentListType\n    }\n  | {\n      status: 'uninitialized'\n    }\n  | {\n      status: 'pending'\n    }\n  | {\n      status: 'error'\n      message?: string\n    }\n\nexport type ExperimentListType = {\n  [uid: string]: ExperimentType\n}\n\nexport type ExperimentType = {\n  uid: string\n  functions: {\n    [nodeId: string]: ExperimentFunction\n  }\n  status?: EXPERIMENTS_STATUS\n  name: string\n  timestamp: string\n  hasNWB: boolean\n  frameRate?: number\n}\n\nexport type ExperimentFunction = {\n  name: string\n  nodeId: string\n  status: EXPERIMENTS_STATUS\n  hasNWB: boolean\n  message?: string\n}\n\nexport type EXPERIMENTS_STATUS = 'success' | 'error' | 'running'\n\nexport interface Experiment {\n  uid: string\n  name: string\n  timestamp: string\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  ExperimentsDTO,\n  FetchExperimentDTO,\n  getExperimentsApi,\n  deleteExperimentByUidApi,\n  deleteExperimentByListApi,\n  fetchExperimentApi,\n} from 'api/experiments/Experiments'\nimport { EXPERIMENTS_SLICE_NAME } from './ExperimentsType'\nimport { selectCurrentWorkspaceId } from '../Workspace/WorkspaceSelector'\nimport { ThunkApiConfig } from 'store/store'\n\nexport const getExperiments = createAsyncThunk<\n  ExperimentsDTO,\n  undefined,\n  ThunkApiConfig\n>(`${EXPERIMENTS_SLICE_NAME}/getExperiments`, async (_, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const response = await getExperimentsApi(workspaceId)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist.')\n  }\n})\n\nexport const deleteExperimentByUid = createAsyncThunk<\n  boolean,\n  string,\n  ThunkApiConfig\n>(`${EXPERIMENTS_SLICE_NAME}/deleteExperimentByUid`, async (uid, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const response = await deleteExperimentByUidApi(workspaceId, uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist.')\n  }\n})\n\nexport const deleteExperimentByList = createAsyncThunk<\n  boolean,\n  string[],\n  ThunkApiConfig\n>(`${EXPERIMENTS_SLICE_NAME}/deleteExperimentByList`, async (uid, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const response = await deleteExperimentByListApi(workspaceId, uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist.')\n  }\n})\n\nexport const fetchExperiment = createAsyncThunk<FetchExperimentDTO, number>(\n  `${EXPERIMENTS_SLICE_NAME}/fetchExperiment`,\n  async (workspaceId, thunkAPI) => {\n    try {\n      const response = await fetchExperimentApi(workspaceId)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import type {\n  ExperimentDTO,\n  ExperimentsDTO,\n  FunctionsDTO,\n} from 'api/experiments/Experiments'\nimport { RunResultDTO } from 'api/run/Run'\nimport type {\n  ExperimentListType,\n  ExperimentType,\n  ExperimentFunction,\n  EXPERIMENTS_STATUS,\n} from './ExperimentsType'\n\nexport function convertToExperimentListType(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n\nexport function convertToExperimentType(dto: ExperimentDTO): ExperimentType {\n  const functions: { [nodeId: string]: ExperimentFunction } = {}\n  Object.entries(dto.function).forEach(([_, value]) => {\n    const status = convertToExperimentStatus(value.success)\n    functions[value.unique_id] = {\n      name: value.name,\n      nodeId: value.unique_id,\n      status: status,\n      hasNWB: value.hasNWB,\n    }\n    status === 'error' &&\n      value.message &&\n      (functions[value.unique_id].message = value.message)\n  })\n  return {\n    uid: dto.unique_id,\n    timestamp: dto.started_at,\n    status: dto.success,\n    name: dto.name,\n    hasNWB: dto.hasNWB,\n    functions,\n    frameRate: dto.nwb?.imaging_plane.imaging_rate\n  }\n}\n\nfunction convertToExperimentStatus(dto: string): EXPERIMENTS_STATUS {\n  switch (dto) {\n    case 'running':\n      return 'running'\n    case 'success':\n      return 'success'\n    case 'error':\n      return 'error'\n    default:\n      throw new Error('failed to convert to EXPERIMENTS_STATUS')\n  }\n}\n\nexport function convertFunctionsToRunResultDTO(\n  dto: FunctionsDTO,\n): RunResultDTO {\n  const result: RunResultDTO = {}\n  Object.entries(dto).forEach(([nodeId, value]) => {\n    result[nodeId] = {\n      status: value.success,\n      message: value.message ?? '',\n      name: value.name,\n      outputPaths: value.outputPaths,\n    }\n  })\n  return result\n}\n\nexport function convertToFlowChartList(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { EXPERIMENTS_SLICE_NAME, Experiments } from './ExperimentsType'\nimport {\n  getExperiments,\n  deleteExperimentByUid,\n  deleteExperimentByList,\n  fetchExperiment,\n} from './ExperimentsActions'\nimport {\n  convertToExperimentListType,\n  convertToExperimentType,\n} from './ExperimentsUtils'\nimport {\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from '../Pipeline/PipelineActions'\n\nexport const initialState: Experiments = {\n  status: 'uninitialized',\n}\n\nexport const experimentsSlice = createSlice({\n  name: EXPERIMENTS_SLICE_NAME,\n  initialState: initialState as Experiments,\n  reducers: {\n    clearExperiments: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getExperiments.pending, () => {\n        return {\n          status: 'pending',\n        }\n      })\n      .addCase(getExperiments.fulfilled, (state, action) => {\n        const experimentList = convertToExperimentListType(action.payload)\n        return {\n          status: 'fulfilled',\n          experimentList,\n        }\n      })\n      .addCase(getExperiments.rejected, (state, action) => {\n        return {\n          status: 'error',\n          message: action.error.message,\n        }\n      })\n      .addCase(deleteExperimentByUid.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          delete state.experimentList[action.meta.arg]\n        }\n      })\n      .addCase(deleteExperimentByList.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          action.meta.arg.map((v) => delete state.experimentList[v])\n        }\n      })\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          const uid = action.meta.arg.uid\n          const target = state.experimentList[uid]\n          Object.entries(action.payload).forEach(([nodeId, value]) => {\n            if (value.status === 'success') {\n              target.functions[nodeId].status = 'success'\n            } else if (value.status === 'error') {\n              target.functions[nodeId].status = 'error'\n            }\n          })\n        }\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          state.experimentList[action.payload.unique_id] =\n            convertToExperimentType(action.payload)\n        }\n      })\n      .addMatcher(isAnyOf(run.fulfilled, runByCurrentUid.fulfilled), () => {\n        return {\n          status: 'uninitialized',\n        }\n      })\n  },\n})\n\nexport const { clearExperiments } = experimentsSlice.actions\nexport default experimentsSlice.reducer\n","import { RootState } from 'store/store'\nimport { EXPERIMENTS_STATUS } from './ExperimentsType'\n\nconst selectExperiments = (state: RootState) => state.experiments\n\nexport const selectExperimentsStatusIsUninitialized = (state: RootState) =>\n  selectExperiments(state).status === 'uninitialized'\n\nexport const selectExperimentsStatusIsPending = (state: RootState) =>\n  selectExperiments(state).status === 'pending'\n\nexport const selectExperimentsStatusIsFulfilled = (state: RootState) =>\n  selectExperiments(state).status === 'fulfilled'\n\nexport const selectExperimentsStatusIsError = (state: RootState) =>\n  selectExperiments(state).status === 'error'\n\nexport const selectExperimentsErrorMessage = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'error') {\n    return experiments.message\n  } else {\n    throw new Error('experiments status is not error')\n  }\n}\n\nexport const selectExperimentList = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'fulfilled') {\n    return experiments.experimentList\n  } else {\n    throw new Error('experiments status is not fulfilled')\n  }\n}\n\nexport const selectExperimentUidList = (state: RootState) =>\n  Object.keys(selectExperimentList(state))\n\nexport const selectExperiment = (uid: string) => (state: RootState) =>\n  selectExperimentList(state)[uid]\n\nexport const selectExperimentTimeStamp = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).timestamp\n\nexport const selectExperimentName = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).name\n\nexport const selectExperimentHasNWB = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).hasNWB\n\nexport const selectExperimentStatus =\n  (uid: string) =>\n  (state: RootState): EXPERIMENTS_STATUS => {\n    const experiment = selectExperimentList(state)[uid]\n    if (experiment.status) {\n      return experiment.status\n    }\n\n    const functions = selectExperimentList(state)[uid].functions\n    const statusList = Object.values(functions).map((f) => f.status)\n    if (statusList.findIndex((status) => status === 'error') >= 0) {\n      return 'error'\n    } else if (statusList.findIndex((status) => status === 'running') >= 0) {\n      return 'running'\n    } else {\n      return 'success'\n    }\n  }\n\nexport const selectExperimentCheckList =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionNodeIdList =\n  (uid: string) => (state: RootState) =>\n    Object.keys(selectExperimentList(state)[uid].functions)\n\nexport const selectExperimentFunction =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentList(state)[uid].functions[nodeId]\n\nexport const selectExperimentFunctionName =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).name\n\nexport const selectExperimentFunctionStatus =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionHasNWB =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).hasNWB\n\nexport const selectFrameRate = (currentPipelineUid?: string) => (state: RootState) => {\n  if(!currentPipelineUid) return 50\n  return selectExperiment(currentPipelineUid)(state).frameRate || 50\n}\n","import React from 'react'\nimport DoneIcon from '@mui/icons-material/Done'\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline'\nimport HorizontalRuleIcon from '@mui/icons-material/HorizontalRule'\n\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport const ExperimentStatusIcon = React.memo<{ status: EXPERIMENTS_STATUS }>(\n  ({ status }) => {\n    switch (status) {\n      case 'error':\n        return <ErrorOutlineIcon color=\"error\" />\n      case 'success':\n        return <DoneIcon color=\"success\" />\n      case 'running':\n        return <HorizontalRuleIcon color=\"inherit\" />\n    }\n  },\n)\n","export function arrayEqualityFn<T>(a: T[], b: T[]) {\n  return a === b || (a.length === b.length && a.every((v, i) => v === b[i]))\n}\n\nexport function twoDimarrayEqualityFn<T>(a: T[][], b: T[][]) {\n  return (\n    a === b ||\n    (a.length === b.length && a.every((v, i) => arrayEqualityFn(v, b[i])))\n  )\n}\n","import React, { useState, useRef } from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport SimCardDownloadOutlinedIcon from '@mui/icons-material/SimCardDownloadOutlined'\nimport { useSelector } from 'react-redux'\nimport {\n  downloadExperimentConfigApi,\n  downloadExperimentNwbApi,\n} from 'api/experiments/Experiments'\n\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\nimport { downloadWorkflowConfigApi } from 'api/workflow/Workflow'\nimport { useSnackbar } from 'notistack'\n\nexport const NWBDownloadButton = React.memo<{\n  name: string\n  nodeId?: string\n  hasNWB: boolean\n}>(({ name, nodeId, hasNWB }) => {\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = async () => {\n    try {\n      const responseData = await downloadExperimentNwbApi(\n        workspaceId!,\n        uid,\n        nodeId,\n      )\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      enqueueSnackbar('File not found', { variant: 'error' })\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick} color=\"primary\" disabled={!hasNWB}>\n        <SimCardDownloadOutlinedIcon />\n      </IconButton>\n      <a href={url} download={`nwb_${name}.nwb`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n\nexport const SnakemakeDownloadButton = React.memo(() => {\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = async () => {\n    try {\n      const responseData = await downloadExperimentConfigApi(workspaceId!, uid)\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      enqueueSnackbar('File not found', { variant: 'error' })\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick}>\n        <SimCardDownloadOutlinedIcon color=\"primary\" />\n      </IconButton>\n      <a\n        href={url}\n        download={`snakemake_${uid}.yaml`}\n        className=\"hidden\"\n        ref={ref}\n      >\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n\nexport const WorkflowDownloadButton = React.memo(() => {\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = async () => {\n    try {\n      const responseData = await downloadWorkflowConfigApi(workspaceId!, uid)\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      enqueueSnackbar('File not found', { variant: 'error' })\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick}>\n        <SimCardDownloadOutlinedIcon color=\"primary\" />\n      </IconButton>\n      <a\n        href={url}\n        download={`workflow_${uid}.yaml`}\n        className=\"hidden\"\n        ref={ref}\n      >\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport Collapse from '@mui/material/Collapse'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Typography from '@mui/material/Typography'\n\nimport { ExperimentUidContext } from './ExperimentTable'\nimport {\n  selectExperimentFunctionHasNWB,\n  selectExperimentFunctionName,\n  selectExperimentFunctionNodeIdList,\n  selectExperimentFunctionStatus,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { NWBDownloadButton } from './Button/DownloadButton'\n\nexport const CollapsibleTable = React.memo<{\n  open: boolean\n}>(({ open }) => {\n  return (\n    <TableRow>\n      <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={11}>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Box margin={1}>\n            <Typography variant=\"h6\" gutterBottom component=\"div\">\n              Details\n            </Typography>\n            <Table size=\"small\" aria-label=\"purchases\">\n              <Head />\n              <Body />\n            </Table>\n          </Box>\n        </Collapse>\n      </TableCell>\n    </TableRow>\n  )\n})\n\nconst Head = React.memo(() => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>Function</TableCell>\n        <TableCell>nodeID</TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>NWB</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst Body = React.memo(() => {\n  const uid = React.useContext(ExperimentUidContext)\n  const nodeIdList = useSelector(\n    selectExperimentFunctionNodeIdList(uid),\n    arrayEqualityFn,\n  )\n  return (\n    <TableBody>\n      {nodeIdList.map((nodeId) => (\n        <TableRowOfFunction nodeId={nodeId} />\n      ))}\n    </TableBody>\n  )\n})\n\nconst TableRowOfFunction = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const name = useSelector(selectExperimentFunctionName(uid, nodeId))\n  const status = useSelector(selectExperimentFunctionStatus(uid, nodeId))\n  const hasNWB = useSelector(selectExperimentFunctionHasNWB(uid, nodeId))\n\n  return (\n    <TableRow key={nodeId}>\n      <TableCell component=\"th\" scope=\"row\">\n        {name}\n      </TableCell>\n      <TableCell>{nodeId}</TableCell>\n      <TableCell>\n        <ExperimentStatusIcon status={status} />\n      </TableCell>\n      <TableCell>\n        <NWBDownloadButton name={name} nodeId={nodeId} hasNWB={hasNWB} />\n      </TableCell>\n    </TableRow>\n  )\n})\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport { fetchExperiment } from '../Experiments/ExperimentsActions'\nimport {\n  reproduceWorkflow,\n  importWorkflowConfig,\n} from 'store/slice/Workflow/WorkflowActions'\nimport {\n  cancelResult,\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from './PipelineActions'\nimport {\n  Pipeline,\n  PIPELINE_SLICE_NAME,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n  RUN_STATUS,\n} from './PipelineType'\n\nimport {\n  getInitialRunResult,\n  convertToRunResult,\n  isNodeResultPending,\n} from './PipelineUtils'\nimport { convertFunctionsToRunResultDTO } from '../Experiments/ExperimentsUtils'\n\nconst initialState: Pipeline = {\n  run: {\n    status: RUN_STATUS.START_UNINITIALIZED,\n  },\n  runBtn: RUN_BTN_OPTIONS.RUN_NEW,\n}\n\nexport const pipelineSlice = createSlice({\n  name: PIPELINE_SLICE_NAME,\n  initialState,\n  reducers: {\n    setRunBtnOption: (\n      state,\n      action: PayloadAction<{\n        runBtnOption: RUN_BTN_TYPE\n      }>,\n    ) => {\n      state.runBtn = action.payload.runBtnOption\n    },\n    clearCurrentPipeline: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.run.status === RUN_STATUS.START_SUCCESS) {\n          state.run.runResult = {\n            ...state.run.runResult, // pendingのNodeResultはそのままでsuccessもしくはerrorのみ上書き\n            ...convertToRunResult(action.payload),\n          }\n          const runResultPendingList = Object.values(\n            state.run.runResult,\n          ).filter(isNodeResultPending)\n          if (runResultPendingList.length === 0) {\n            // 終了\n            state.run.status = RUN_STATUS.FINISHED\n          }\n        }\n      })\n      .addCase(pollRunResult.rejected, (state, action) => {\n        state.run.status = RUN_STATUS.ABORTED\n      })\n      .addCase(reproduceWorkflow.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.meta.arg.uid,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addCase(importWorkflowConfig.fulfilled, (state, action) => {\n        state.currentPipeline = undefined\n        state.runBtn = RUN_BTN_OPTIONS.RUN_NEW\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addCase(fetchExperiment.rejected, () => initialState)\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.payload.unique_id,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          uid: action.payload.unique_id,\n          status: RUN_STATUS.START_SUCCESS,\n          runResult: {\n            ...convertToRunResult(\n              convertFunctionsToRunResultDTO(action.payload.function),\n            ),\n          },\n          runPostData: {\n            name: action.payload.name,\n            nodeDict: action.payload.nodeDict,\n            edgeDict: action.payload.edgeDict,\n            snakemakeParam: {},\n            nwbParam: {},\n            forceRunList: [],\n          },\n        }\n\n        const runResultPendingList = Object.values(state.run.runResult).filter(\n          isNodeResultPending,\n        )\n        if (runResultPendingList.length === 0) {\n          state.run.status = RUN_STATUS.FINISHED\n        }\n      })\n      .addCase(cancelResult.fulfilled, (state, action) => {\n        state.run.status = RUN_STATUS.CANCELED\n      })\n      .addMatcher(\n        isAnyOf(run.pending, runByCurrentUid.pending),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_PENDING,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          const uid = action.payload\n          state.run = {\n            uid,\n            status: RUN_STATUS.START_SUCCESS,\n            runResult: getInitialRunResult({ name: '', ...runPostData }),\n            runPostData: { name: '', ...runPostData },\n          }\n          state.currentPipeline = {\n            uid: action.payload,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.rejected, runByCurrentUid.rejected),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_ERROR,\n          }\n        },\n      )\n  },\n})\n\nexport const { setRunBtnOption, clearCurrentPipeline } = pipelineSlice.actions\n\nexport default pipelineSlice.reducer\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport IconButton from '@mui/material/IconButton'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline'\nimport { selectExperimentName } from 'store/slice/Experiments/ExperimentsSelectors'\nimport { deleteExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { clearCurrentPipeline } from 'store/slice/Pipeline/PipelineSlice'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineIsStartedSuccess,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\n\nexport const DeleteButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const currentPipelineUid = useSelector(selectPipelineLatestUid)\n  const uid = React.useContext(ExperimentUidContext)\n  const isRunning = useSelector((state: RootState) => {\n    const currentUid = selectPipelineLatestUid(state)\n    const isPending = selectPipelineIsStartedSuccess(state)\n    return uid === currentUid && isPending\n  })\n  const name = useSelector(selectExperimentName(uid))\n  const [open, setOpen] = React.useState(false)\n\n  const onClickOpen = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(deleteExperimentByUid(uid))\n    uid === currentPipelineUid && dispatch(clearCurrentPipeline())\n  }\n  return (\n    <>\n      <IconButton onClick={onClickOpen} disabled={isRunning} color=\"error\">\n        <DeleteOutlineIcon />\n      </IconButton>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete {name}?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n","import axios from 'utils/axios'\nimport { PlotMetaData } from 'store/slice/DisplayData/DisplayDataType'\nimport { BASE_URL } from 'const/API'\n\nexport type TimeSeriesData = {\n  [key: string]: {\n    [key: string]: number\n  }\n}\n\nexport async function getTimeSeriesInitDataApi(path: string): Promise<{\n  data: TimeSeriesData\n  xrange: string[]\n  std: TimeSeriesData\n  meta?: PlotMetaData\n}> {\n  const response = await axios.get(`${BASE_URL}/outputs/inittimedata/${path}`)\n  return response.data\n}\n\nexport async function getTimeSeriesDataByIdApi(\n  path: string,\n  index: string,\n): Promise<{\n  data: TimeSeriesData\n  xrange: string[]\n  std: TimeSeriesData\n  meta?: PlotMetaData\n}> {\n  const response = await axios.get(`${BASE_URL}/outputs/timedata/${path}`, {\n    params: {\n      index: index,\n    },\n  })\n  return response.data\n}\n\nexport async function getTimeSeriesAllDataApi(path: string): Promise<{\n  data: TimeSeriesData\n  xrange: string[]\n  std: TimeSeriesData\n  meta?: PlotMetaData\n}> {\n  const response = await axios.get(`${BASE_URL}/outputs/alltimedata/${path}`)\n  return response.data\n}\n\nexport type HeatMapData = number[][]\n\nexport async function getHeatMapDataApi(path: string): Promise<{\n  data: HeatMapData\n  columns: string[]\n  index: string[]\n  meta?: PlotMetaData\n}> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`)\n  return response.data\n}\n\nexport type ImageData = number[][][]\n\nexport async function getImageDataApi(\n  path: string,\n  params: {\n    workspaceId: number\n    startIndex?: number\n    endIndex?: number\n  },\n): Promise<{ data: ImageData; meta?: PlotMetaData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n    params: {\n      workspace_id: params.workspaceId,\n      start_index: params.startIndex,\n      end_index: params.endIndex,\n    },\n  })\n  return response.data\n}\n\nexport type CsvData = number[][]\n\nexport async function getCsvDataApi(\n  path: string,\n  params: { workspaceId: number },\n): Promise<{ data: CsvData; meta?: PlotMetaData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/csv/${path}`, {\n    params: { workspace_id: params.workspaceId },\n  })\n\n  return response.data\n}\n\nexport type RoiData = number[][][]\n\nexport async function getRoiDataApi(\n  path: string,\n  params: { workspaceId: number },\n): Promise<{ data: RoiData; meta?: PlotMetaData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n    params: { workspace_id: params.workspaceId },\n  })\n  return response.data\n}\n\nexport type ScatterData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getScatterDataApi(\n  path: string,\n): Promise<{ data: ScatterData; meta?: PlotMetaData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type BarData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getBarDataApi(path: string): Promise<{\n  data: BarData\n  columns: string[]\n  index: string[]\n  meta?: PlotMetaData\n}> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type HTMLData = string\n\nexport async function getHTMLDataApi(\n  path: string,\n): Promise<{ data: HTMLData; meta?: PlotMetaData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/html/${path}`, {})\n  return response.data\n}\n\nexport async function addRoiApi(\n  path: string,\n  data: { posx: number; posy: number; sizex: number; sizey: number },\n): Promise<{ data: HTMLData; meta?: PlotMetaData }> {\n  const response = await axios.post(\n    `${BASE_URL}/outputs/image/${path}/add_roi`,\n    data,\n  )\n  return response.data\n}\n\nexport async function mergeRoiApi(\n  path: string,\n  data: { ids: number[] },\n): Promise<{ data: HTMLData; meta?: PlotMetaData }> {\n  const response = await axios.post(\n    `${BASE_URL}/outputs/image/${path}/merge_roi`,\n    data,\n  )\n  return response.data\n}\n\nexport async function deleteRoiApi(\n  path: string,\n  data: { ids: number[] },\n): Promise<{ data: HTMLData; meta?: PlotMetaData }> {\n  const response = await axios.post(\n    `${BASE_URL}/outputs/image/${path}/delete_roi`,\n    data,\n  )\n  return response.data\n}\n\nexport type LineData = number[][]\n\nexport async function getLineDataApi(\n  path: string,\n): Promise<{ data: LineData; columns: number[]; index: number[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type PolarData = number[][]\n\nexport async function getPolarDataApi(\n  path: string,\n): Promise<{ data: PolarData; columns: number[]; index: number[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type HistogramData = number[][]\n\nexport async function getHistogramDataApi(\n  path: string,\n): Promise<{ data: HistogramData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type PieData = number[][]\n\nexport async function getPieDataApi(\n  path: string,\n): Promise<{ data: PieData; columns: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  TimeSeriesData,\n  CsvData,\n  RoiData,\n  ScatterData,\n  BarData,\n  HTMLData,\n  ImageData,\n  HeatMapData,\n  HistogramData,\n  LineData,\n  PieData,\n  PolarData,\n  getTimeSeriesInitDataApi,\n  getTimeSeriesDataByIdApi,\n  getTimeSeriesAllDataApi,\n  getHeatMapDataApi,\n  getImageDataApi,\n  getCsvDataApi,\n  getRoiDataApi,\n  getScatterDataApi,\n  getBarDataApi,\n  getHTMLDataApi,\n  getHistogramDataApi,\n  getLineDataApi,\n  getPieDataApi,\n  getPolarDataApi,\n} from 'api/outputs/Outputs'\nimport { PlotMetaData } from './DisplayDataType'\nimport { DISPLAY_DATA_SLICE_NAME } from './DisplayDataType'\n\nexport const getTimeSeriesInitData = createAsyncThunk<\n  {\n    data: TimeSeriesData\n    xrange: string[]\n    std: TimeSeriesData\n    meta?: PlotMetaData\n  },\n  { path: string; itemId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesInitData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesInitDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesDataById = createAsyncThunk<\n  {\n    data: TimeSeriesData\n    xrange: string[]\n    std: TimeSeriesData\n    meta?: PlotMetaData\n  },\n  { path: string; index: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesDataById`,\n  async ({ path, index }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesDataByIdApi(path, index)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesAllData = createAsyncThunk<\n  {\n    data: TimeSeriesData\n    xrange: string[]\n    std: TimeSeriesData\n    meta?: PlotMetaData\n  },\n  { path: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesAllData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesAllDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHeatMapData = createAsyncThunk<\n  {\n    data: HeatMapData\n    columns: string[]\n    index: string[]\n    meta?: PlotMetaData\n  },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHeatMapData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHeatMapDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getImageData = createAsyncThunk<\n  { data: ImageData; meta?: PlotMetaData },\n  { path: string; workspaceId: number; startIndex?: number; endIndex?: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getImageData`,\n  async ({ path, startIndex, endIndex, workspaceId }, thunkAPI) => {\n    try {\n      const response = await getImageDataApi(path, {\n        workspaceId,\n        startIndex,\n        endIndex,\n      })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getCsvData = createAsyncThunk<\n  { data: CsvData; meta?: PlotMetaData },\n  { path: string; workspaceId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getCsvData`,\n  async ({ path, workspaceId }, thunkAPI) => {\n    try {\n      const response = await getCsvDataApi(path, { workspaceId })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getRoiData = createAsyncThunk<\n  { data: RoiData; meta?: PlotMetaData },\n  { path: string; workspaceId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getRoiData`,\n  async ({ path, workspaceId }, thunkAPI) => {\n    try {\n      const response = await getRoiDataApi(path, { workspaceId })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getScatterData = createAsyncThunk<\n  { data: ScatterData; meta?: PlotMetaData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getScatterData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getScatterDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getBarData = createAsyncThunk<\n  { data: BarData; columns: string[]; index: string[]; meta?: PlotMetaData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getBarData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getBarDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getHTMLData = createAsyncThunk<\n  { data: HTMLData; meta?: PlotMetaData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHTMLData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHTMLDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getHistogramData = createAsyncThunk<\n  { data: HistogramData; meta?: PlotMetaData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHistogramData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHistogramDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getLineData = createAsyncThunk<\n  { data: LineData; columns: number[]; index: number[]; meta?: PlotMetaData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getLineData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getLineDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getPieData = createAsyncThunk<\n  { data: PieData; columns: string[]; meta?: PlotMetaData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getPieData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getPieDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getPolarData = createAsyncThunk<\n  { data: PolarData; columns: number[]; index: number[]; meta?: PlotMetaData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getPolarData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getPolarDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import { RootState } from 'store/store'\n\nconst selectDisplayData = (state: RootState) => state.displayData\n\nexport const selectTimeSeriesData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].data\n\nexport const selectTimesSeriesMeta = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].meta\n\nexport const selectTimeSeriesXrange =\n  (filePath: string) => (state: RootState) =>\n    selectDisplayData(state).timeSeries[filePath].xrange\n\nexport const selectTimeSeriesStd = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].std\n\nexport const selectTimeSeriesDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).timeSeries).includes(filePath)\n\nexport const selectTimeSeriesDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].pending\n\nexport const selectTimeSeriesDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].fulfilled\n\nexport const selectTimeSeriesDataError =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).timeSeries[filePath].error\n      : null\n\nexport const selectHeatMapData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].data\n\nexport const selectHeatMapMeta = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].meta\n\nexport const selectHeatMapColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].columns\n\nexport const selectHeatMapIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].index\n\nexport const selectHeatMapDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).heatMap).includes(filePath)\n\nexport const selectHeatMapDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].pending\n\nexport const selectHeatMapDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].fulfilled\n\nexport const selectHeatMapDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).heatMap[filePath].error\n      : null\n\nexport const selectImageData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).image[filePath]\n\nexport const selectImageMeta = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).image[filePath].meta\n\nexport const selectImageDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).image).includes(filePath)\n\nexport const selectImageDataError = (filePath: string) => (state: RootState) =>\n  selectImageDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).image[filePath].error\n    : null\n\nexport const selectImageDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].pending\n\nexport const selectImageDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].fulfilled\n\nexport const selectImageDataMaxSize =\n  (filePath: string) => (state: RootState) => {\n    if (!selectImageDataIsPending(filePath)(state)) {\n      return selectImageData(filePath)(state).data.length - 1\n    } else {\n      return 0\n    }\n  }\n\nexport const selectActiveImageData =\n  (filePath: string, activeIndex: number) => (state: RootState) => {\n    return selectImageData(filePath)(state).data[activeIndex]\n  }\n\nexport const selectCsvData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).csv[filePath].data\n\nexport const selectCsvMeta = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).csv[filePath].meta\n\nexport const selectCsvDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).csv).includes(filePath)\n\nexport const selectCsvDataError = (filePath: string) => (state: RootState) =>\n  selectCsvDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).csv[filePath].error\n    : null\n\nexport const selectCsvDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].pending\n\nexport const selectCsvDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].fulfilled\n\nexport const selectRoiData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).roi[filePath]?.data[0] ?? []\n\nexport const selectRoiMeta = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).roi[filePath].meta\n\nexport const selectRoiDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).roi).includes(filePath)\n\nexport const selectRoiDataError = (filePath: string) => (state: RootState) =>\n  selectRoiDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).roi[filePath].error\n    : null\n\nexport const selectRoiDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].pending\n\nexport const selectRoiDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].fulfilled\n\nexport const selectRoiUniqueList = (filePath: string) => (state: RootState) => {\n  if (selectRoiDataIsFulfilled(filePath)(state)) {\n    return selectDisplayData(state).roi[filePath].roiUniqueList\n  }\n  return null\n}\n\nexport const selectScatterData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).scatter[filePath]?.data ?? []\n\nexport const selectScatterMeta = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).scatter[filePath]?.meta\n\nexport const selectScatterDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).scatter).includes(filePath)\n\nexport const selectScatterDataError =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).scatter[filePath].error\n      : null\n\nexport const selectScatterDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].pending\n\nexport const selectScatterDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].fulfilled\n\nexport const selectBarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.data ?? []\n\nexport const selectBarMeta = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.meta\n\nexport const selectBarIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.index ?? []\n\nexport const selectBarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).bar).includes(filePath)\n\nexport const selectBarDataError = (filePath: string) => (state: RootState) =>\n  selectBarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).bar[filePath].error\n    : null\n\nexport const selectBarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].pending\n\nexport const selectBarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].fulfilled\n\nexport const selectHTMLData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).html[filePath]?.data ?? ''\n\nexport const selectHTMLMeta = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).html[filePath].meta\n\nexport const selectHTMLDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).html).includes(filePath)\n\nexport const selectHTMLDataError = (filePath: string) => (state: RootState) =>\n  selectHTMLDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).html[filePath].error\n    : null\n\nexport const selectHTMLDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].pending\n\nexport const selectHTMLDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].fulfilled\n\nexport const selectHistogramData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).histogram[filePath].data\n\nexport const selectHistogramMeta = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).histogram[filePath].meta\n\nexport const selectHistogramDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).histogram).includes(filePath)\n\nexport const selectHistogramDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHistogramDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).histogram[filePath].pending\n\nexport const selectHistogramDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHistogramDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).histogram[filePath].fulfilled\n\nexport const selectHistogramDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHistogramDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).histogram[filePath].error\n      : null\nexport const selectLineData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).line[filePath].data\n\nexport const selectLineMeta = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).line[filePath].meta\n\nexport const selectLineColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).line[filePath].columns\n\nexport const selectLineIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).line[filePath].index\n\nexport const selectLineDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).line).includes(filePath)\n\nexport const selectLineDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectLineDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).line[filePath].pending\n\nexport const selectLineDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectLineDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).line[filePath].fulfilled\n\nexport const selectLineDataError = (filePath: string) => (state: RootState) =>\n  selectLineDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).line[filePath].error\n    : null\n\nexport const selectPieData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).pie[filePath].data\n\nexport const selectPieMeta = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).pie[filePath].meta\n\nexport const selectPieColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).pie[filePath].columns\n\nexport const selectPieDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).pie).includes(filePath)\n\nexport const selectPieDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectPieDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).pie[filePath].pending\n\nexport const selectPieDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectPieDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).pie[filePath].fulfilled\n\nexport const selectPieDataError = (filePath: string) => (state: RootState) =>\n  selectPieDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).pie[filePath].error\n    : null\n\nexport const selectPolarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).polar[filePath].data\n\nexport const selectPolarMeta = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).polar[filePath].meta\n\nexport const selectPolarColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).polar[filePath].columns\n\nexport const selectPolarIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).polar[filePath].index\n\nexport const selectPolarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).polar).includes(filePath)\n\nexport const selectPolarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectPolarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).polar[filePath].pending\n\nexport const selectPolarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectPolarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).polar[filePath].fulfilled\n\nexport const selectPolarDataError = (filePath: string) => (state: RootState) =>\n  selectPolarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).polar[filePath].error\n    : null\n","import { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\n\nexport const VISUALIZE_ITEM_SLICE_NAME = 'visualaizeItem'\n\nexport type VisualaizeItem = {\n  selectedItemId: number | null\n  items: {\n    [itemId: number | string]: VisualaizeItemType\n  }\n  layout: ItemLayout\n}\n\nexport type ItemLayout = number[][] // itemIdをrow,columnで並べる\n\nexport type VisualaizeItemType = DisplayDataItem\n\nexport interface ItemBaseType<T extends VISUALIZE_ITEM_TYPE> {\n  itemType: T\n  width: number\n  height: number\n}\n\nexport type ColorType = {\n  rgb: string\n  offset: string\n}\n\nexport const VISUALIZE_ITEM_TYPE_SET = {\n  DISPLAY_DATA: 'displayData',\n} as const\n\nexport type VISUALIZE_ITEM_TYPE =\n  typeof VISUALIZE_ITEM_TYPE_SET[keyof typeof VISUALIZE_ITEM_TYPE_SET]\n\nexport type DisplayDataItem =\n  | ImageItem\n  | TimeSeriesItem\n  | HeatMapItem\n  | CsvItem\n  | RoiItem\n  | ScatterItem\n  | BarItem\n  | HDF5Item\n  | HTMLItem\n  | FluoItem\n  | BehaviorItem\n  | HistogramItem\n  | LineItem\n  | PieItem\n  | PolarItem\n\nexport interface DisplayDataItemBaseType extends ItemBaseType<'displayData'> {\n  filePath: string | null\n  nodeId: string | null\n  dataType: DATA_TYPE | null\n  isWorkflowDialog: boolean\n  saveFileName: string\n  saveFormat: string\n}\n\nexport interface ImageItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.IMAGE\n  activeIndex: number\n  startIndex: number\n  endIndex: number\n  showticklabels: boolean\n  zsmooth: string | boolean\n  showline: boolean\n  showgrid: boolean\n  showscale: boolean\n  colors: ColorType[]\n  alpha: number\n  roiItem: RoiItem | null\n  roiAlpha: number\n  duration: number\n  clickedDataId?: string\n}\n\nexport interface TimeSeriesItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.TIME_SERIES\n  offset: boolean\n  span: number\n  showgrid: boolean\n  showline: boolean\n  showticklabels: boolean\n  zeroline: boolean\n  xrange: {\n    left: number | undefined\n    right: number | undefined\n  }\n  rangeUnit: 'frames' | 'time'\n  maxIndex: number\n  refImageItemId: number | null\n  drawOrderList: string[]\n}\n\nexport interface HeatMapItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HEAT_MAP\n  showscale: boolean\n  colors: ColorType[]\n}\nexport interface CsvItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.CSV\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\nexport interface RoiItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.ROI\n  outputKey?: string\n  // colors: ColorType[]\n}\n\nexport interface ScatterItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.SCATTER\n  xIndex: string\n  yIndex: string\n}\n\nexport interface BarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BAR\n  index: string\n}\n\nexport interface HDF5Item extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HDF5\n}\n\nexport interface HTMLItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HTML\n}\n\nexport interface FluoItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.FLUO\n}\n\nexport interface BehaviorItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BEHAVIOR\n}\n\nexport interface HistogramItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HISTOGRAM\n  bins: number\n}\n\nexport interface LineItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.LINE\n  selectedIndex: number\n}\n\nexport interface PieItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.PIE\n}\n\nexport interface PolarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.POLAR\n  selectedIndex: number\n}\n","import { DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  VisualaizeItemType,\n  DisplayDataItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  ImageItem,\n  TimeSeriesItem,\n  HeatMapItem,\n  RoiItem,\n  ScatterItem,\n  CsvItem,\n  BarItem,\n  HistogramItem,\n  LineItem,\n  PieItem,\n  PolarItem,\n} from './VisualizeItemType'\n\nexport function isDisplayDataItem(\n  item: VisualaizeItemType,\n): item is DisplayDataItem {\n  return item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA\n}\n\nexport function isImageItem(item: VisualaizeItemType): item is ImageItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.IMAGE\n  )\n}\n\nexport function isTimeSeriesItem(\n  item: VisualaizeItemType,\n): item is TimeSeriesItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.TIME_SERIES\n  )\n}\n\nexport function isCsvItem(item: VisualaizeItemType): item is CsvItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.CSV\n  )\n}\n\nexport function isHeatMapItem(item: VisualaizeItemType): item is HeatMapItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HEAT_MAP\n  )\n}\n\nexport function isRoiItem(item: VisualaizeItemType): item is RoiItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.ROI\n  )\n}\n\nexport function isScatterItem(item: VisualaizeItemType): item is ScatterItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.SCATTER\n  )\n}\n\nexport function isBarItem(item: VisualaizeItemType): item is BarItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.BAR\n  )\n}\n\nexport function isHistogramItem(\n  item: VisualaizeItemType,\n): item is HistogramItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HISTOGRAM\n  )\n}\n\nexport function isLineItem(item: VisualaizeItemType): item is LineItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.LINE\n  )\n}\n\nexport function isPieItem(item: VisualaizeItemType): item is PieItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.PIE\n  )\n}\n\nexport function isPolarItem(item: VisualaizeItemType): item is PolarItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.POLAR\n  )\n}\n","import { RootState } from 'store/store'\nimport {\n  selectRoiData,\n  selectRoiUniqueList,\n  selectTimeSeriesData,\n  selectTimeSeriesDataIsInitialized,\n} from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport {\n  isDisplayDataItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isHeatMapItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n  isHistogramItem,\n  isLineItem,\n  isPolarItem,\n} from './VisualizeItemUtils'\n\nexport const selectSelectedVisualizeItemId = (state: RootState) =>\n  state.visualaizeItem.selectedItemId\n\nexport const selectVisualizeImageItemIdList = (state: RootState) =>\n  Object.keys(state.visualaizeItem.items)\n    .map(Number)\n    .filter((itemId) => {\n      const item = selectVisualizeItemById(itemId)(state)\n      return isImageItem(item) && !item.isWorkflowDialog\n    })\n\nexport const selectVisualizeItems = (state: RootState) =>\n  state.visualaizeItem.items\n\nexport const selectVisualizeItemById = (itemId: number) => (state: RootState) =>\n  state.visualaizeItem.items[itemId]\n\nexport const selectVisualizeItemLayout = (state: RootState) =>\n  state.visualaizeItem.layout\n\nexport const selectVisualizeItemIsWorkflowDialog =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).isWorkflowDialog\n  }\n\nexport const selectVisualizeItemIdForWorkflowDialog =\n  (nodeId: string, filePath: string, dataType: DATA_TYPE) =>\n  (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    let targetItemId: null | number = null\n    for (const [itemId, value] of Object.entries(items)) {\n      if (\n        value.nodeId === nodeId &&\n        value.filePath === filePath &&\n        value.dataType === dataType &&\n        value.isWorkflowDialog\n      ) {\n        targetItemId = Number(itemId)\n      }\n    }\n    return targetItemId\n  }\n\nexport const selectVisualizeItemWidth =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).width\n  }\n\nexport const selectVisualizeItemHeight =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).height\n  }\n\nexport const selectVisualizeItemType = (itemId: number) => (state: RootState) =>\n  selectVisualizeItemById(itemId)(state).itemType\n\nexport const selectVisualizeDataType =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.dataType\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataNodeId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.nodeId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeSaveFilename =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFileName\n  }\n\nexport const selectVisualizeSaveFormat =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFormat\n  }\n\nexport const selectImageItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemNodeId = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.nodeId ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemFilePath = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.filePath ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemOutputKeys =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.roiItem?.outputKey ?? null\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowticklabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemZsmooth =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.zsmooth\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemStartIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.startIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemEndIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.endIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemColors = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.colors\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemActiveIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.activeIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemAlpha = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.alpha\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemRoiAlpha =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.roiAlpha\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemRoiFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      if (item.roiItem) {\n        return item.roiItem.filePath\n      } else {\n        return null\n      }\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemDuration =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.duration\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemOffset =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.offset\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemSpan =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.span\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowTickLabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemZeroLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.zeroline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemXrange =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.xrange\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemDrawOrderList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.drawOrderList\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectTimeSeriesItemRefImageItemId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.refImageItemId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemRefRoiUniqueList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      if (item.refImageItemId != null) {\n        const imageItem = selectVisualizeItems(state)[item.refImageItemId]\n        if (isImageItem(imageItem) && imageItem.roiItem?.filePath != null) {\n          return selectRoiUniqueList(imageItem.roiItem.filePath)(state)\n        }\n      }\n      return null\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemKeys =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const path = selectTimeSeriesItemFilePath(itemId)(state)\n      if (path != null && selectTimeSeriesDataIsInitialized(path)(state)) {\n        const dataKeys = Object.keys(selectTimeSeriesData(path)(state))\n        const roiUniqueList =\n          selectTimeSeriesItemRefRoiUniqueList(itemId)(state)\n        if (roiUniqueList != null) {\n          return dataKeys.filter((key) => roiUniqueList.includes(key))\n        } else {\n          return dataKeys\n        }\n      } else {\n        return []\n      }\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectRoiItemIndex =\n  (itemId: number, roiFilePath: string | null) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const maxIdx = item.maxIndex\n      if (maxIdx !== 0) {\n        return maxIdx\n      }\n    }\n\n    if (roiFilePath !== null) {\n      return selectRoiItemMaxNumber(roiFilePath)(state)\n    } else {\n      return 0\n    }\n  }\n\nexport const selectRoiItemMaxNumber =\n  (roiFilePath: string) => (state: RootState) => {\n    const roiData = selectRoiData(roiFilePath)(state)\n    if (roiData.length !== 0) {\n      return Math.max(...roiData.map((arr) => Math.max(...arr)))\n    } else {\n      return 0\n    }\n  }\n\nexport const selectHeatMapItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectHeatMapItemColors =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.colors\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemTranspose =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.transpose\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetHeader =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.setHeader\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isCsvItem(item)) {\n    return item.setIndex\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectBarItemIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isBarItem(item)) {\n    return item.index\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectScatterItemXIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.xIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectScatterItemYIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.yIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectDisplayDataIsSingle =\n  (itemId: number) => (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    const item = items[itemId]\n    const targetFilePath = item.filePath\n    return (\n      Object.values(items).filter((value) => value.filePath === targetFilePath)\n        .length === 1\n    )\n  }\n\nexport const selectHistogramItemBins =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHistogramItem(item)) {\n      return item.bins\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectLineItemSelectedIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isLineItem(item)) {\n      return item.selectedIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectPolarItemSelectedIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isPolarItem(item)) {\n      return item.selectedIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemRangeUnit =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.rangeUnit\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { ThunkApiConfig } from 'store/store'\nimport { getTimeSeriesDataById } from '../DisplayData/DisplayDataActions'\nimport { selectRoiData } from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport { selectVisualizeItems } from './VisualizeItemSelectors'\nimport { VISUALIZE_ITEM_SLICE_NAME } from './VisualizeItemType'\nimport { isImageItem, isTimeSeriesItem } from './VisualizeItemUtils'\n\nexport const setImageItemClikedDataId = createAsyncThunk<\n  void,\n  { itemId: number; clickedDataId: string },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setImageItemClikedDataId`,\n  ({ itemId, clickedDataId }, thunkAPI) => {\n    const items = selectVisualizeItems(thunkAPI.getState())\n    Object.values(items).forEach((item) => {\n      if (\n        isTimeSeriesItem(item) &&\n        item.filePath != null &&\n        item.refImageItemId === itemId &&\n        !item.drawOrderList.includes(clickedDataId)\n      ) {\n        thunkAPI.dispatch(\n          getTimeSeriesDataById({ path: item.filePath, index: clickedDataId }),\n        )\n      }\n    })\n  },\n)\n\nexport const selectingImageArea = createAsyncThunk<\n  string[],\n  {\n    itemId: number\n    range: {\n      x: number[]\n      y: number[]\n    }\n  },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/selectingImageArea`,\n  ({ itemId, range }, thunkAPI) => {\n    const { x, y } = range\n    const [x1, x2] = x.map(Math.round)\n    const [y1, y2] = y.map(Math.round)\n    const selectedZList: string[] = []\n    const items = selectVisualizeItems(thunkAPI.getState())\n    const imageItem = items[itemId]\n    if (isImageItem(imageItem) && imageItem.roiItem != null) {\n      const roiFilePath = imageItem.roiItem.filePath\n      if (roiFilePath != null) {\n        const roiData = selectRoiData(roiFilePath)(thunkAPI.getState())\n        for (let x = x1; x <= x2; x++) {\n          for (let y = y1; y <= y2; y++) {\n            const z = roiData[y][x]\n            if (z != null) {\n              const zNum = String(z) // indexとidのずれを回避\n              if (!selectedZList.includes(zNum)) {\n                selectedZList.push(zNum)\n              }\n            }\n          }\n        }\n        Object.values(items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            const path = item.filePath\n            selectedZList.forEach((selectedZ) => {\n              thunkAPI.dispatch(\n                getTimeSeriesDataById({\n                  path,\n                  index: String(selectedZ),\n                }),\n              )\n            })\n          }\n        })\n      }\n    }\n    return selectedZList\n  },\n)\n\ntype DeleteOption =\n  | {\n      deleteData: true\n      dataType: DATA_TYPE\n      filePath: string\n    }\n  | { deleteData: false }\n\ntype DeleteDisplayItemArgs = {\n  itemId: number\n} & DeleteOption\n\nexport const deleteDisplayItem = createAction<DeleteDisplayItemArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/deleteDisplayItem`,\n)\n\ntype SetNewDisplayDataPathArgs = {\n  itemId: number\n  filePath: string\n  nodeId: string | null\n  dataType?: DATA_TYPE\n} & (\n  | {\n      deleteData: true\n      prevFilePath: string\n      prevDataType: DATA_TYPE\n    }\n  | { deleteData: false }\n)\n\nexport const setNewDisplayDataPath = createAction<SetNewDisplayDataPathArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setNewDisplayDataPath`,\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  deleteDisplayItem,\n  selectingImageArea,\n  setImageItemClikedDataId,\n  setNewDisplayDataPath,\n} from './VisualizeItemActions'\n\nimport {\n  HeatMapItem,\n  ImageItem,\n  CsvItem,\n  TimeSeriesItem,\n  RoiItem,\n  ScatterItem,\n  VisualaizeItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  BarItem,\n  HDF5Item,\n  HTMLItem,\n  FluoItem,\n  BehaviorItem,\n  HistogramItem,\n  LineItem,\n  PieItem,\n  PolarItem,\n  VISUALIZE_ITEM_SLICE_NAME,\n} from './VisualizeItemType'\nimport {\n  isDisplayDataItem,\n  isHeatMapItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n  isHistogramItem,\n  isLineItem,\n  isPolarItem,\n} from './VisualizeItemUtils'\nimport { run, runByCurrentUid } from '../Pipeline/PipelineActions'\n\nexport const initialState: VisualaizeItem = {\n  items: {},\n  selectedItemId: null,\n  layout: [],\n}\nconst displayDataCommonInitialValue = {\n  itemType: VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA,\n  filePath: null,\n  nodeId: null,\n  width: 500,\n  height: 500,\n  isWorkflowDialog: false,\n  saveFileName: 'newPlot',\n  saveFormat: 'png',\n}\nconst imageItemInitialValue: ImageItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.IMAGE,\n  startIndex: 1,\n  endIndex: 10,\n  showticklabels: false,\n  showline: true,\n  zsmooth: 'best',\n  showgrid: false,\n  showscale: false,\n  colors: [\n    { rgb: `rgb(0, 0, 0)`, offset: '0' },\n    { rgb: `rgb(255, 255, 255)`, offset: '1.0' },\n  ],\n  activeIndex: 0,\n  alpha: 1.0,\n  roiItem: null,\n  roiAlpha: 1.0,\n  duration: 500,\n}\nconst timeSeriesItemInitialValue: TimeSeriesItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.TIME_SERIES,\n  offset: true,\n  span: 5,\n  showgrid: true,\n  showline: true,\n  showticklabels: true,\n  zeroline: false,\n  xrange: {\n    left: undefined,\n    right: undefined,\n  },\n  rangeUnit: 'frames',\n  maxIndex: 0,\n  drawOrderList: [],\n  refImageItemId: null,\n}\nconst heatMapItemInitialValue: HeatMapItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HEAT_MAP,\n  showscale: true,\n  colors: [\n    { rgb: `rgb(0, 0, 255)`, offset: '0' },\n    { rgb: `rgb(200, 200, 200)`, offset: '0.5' },\n    { rgb: `rgb(255, 0, 0)`, offset: '1.0' },\n  ],\n}\nconst csvItemInitialValue: CsvItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.CSV,\n  setHeader: null,\n  setIndex: false,\n  transpose: false,\n}\nconst roiItemInitialValue: RoiItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.ROI,\n}\nconst scatterItemInitialValue: ScatterItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.SCATTER,\n  xIndex: '0',\n  yIndex: '1',\n}\nconst barItemInitialValue: BarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BAR,\n  index: '0',\n}\nconst hdf5ItemInitialValue: HDF5Item = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HDF5,\n}\nconst htmlItemInitialValue: HTMLItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HTML,\n}\nconst fluoItemInitialValue: FluoItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.FLUO,\n}\nconst behaviorItemInitialValue: BehaviorItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BEHAVIOR,\n}\nconst histogramItemInitialValue: HistogramItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HISTOGRAM,\n  bins: 20,\n}\nconst lineItemInitialValue: LineItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.LINE,\n  selectedIndex: 0,\n}\nconst pieItemInitialValue: PieItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.PIE,\n}\nconst polarItemInitialValue: PolarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.POLAR,\n  selectedIndex: 0,\n}\n\nfunction getDisplayDataItemInitialValue(dataType: DATA_TYPE) {\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return imageItemInitialValue\n    case DATA_TYPE_SET.HEAT_MAP:\n      return heatMapItemInitialValue\n    case DATA_TYPE_SET.TIME_SERIES:\n      return timeSeriesItemInitialValue\n    case DATA_TYPE_SET.CSV:\n      return csvItemInitialValue\n    case DATA_TYPE_SET.ROI:\n      return roiItemInitialValue\n    case DATA_TYPE_SET.SCATTER:\n      return scatterItemInitialValue\n    case DATA_TYPE_SET.BAR:\n      return barItemInitialValue\n    case DATA_TYPE_SET.HDF5:\n      return hdf5ItemInitialValue\n    case DATA_TYPE_SET.HTML:\n      return htmlItemInitialValue\n    case DATA_TYPE_SET.FLUO:\n      return fluoItemInitialValue\n    case DATA_TYPE_SET.BEHAVIOR:\n      return behaviorItemInitialValue\n    case DATA_TYPE_SET.HISTOGRAM:\n      return histogramItemInitialValue\n    case DATA_TYPE_SET.LINE:\n      return lineItemInitialValue\n    case DATA_TYPE_SET.PIE:\n      return pieItemInitialValue\n    case DATA_TYPE_SET.POLAR:\n      return polarItemInitialValue\n  }\n}\n\nexport const visualaizeItemSlice = createSlice({\n  name: VISUALIZE_ITEM_SLICE_NAME,\n  initialState,\n  reducers: {\n    changeRangeUnit: (state, action) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.rangeUnit = action.payload.rangeUnit\n      }\n    },\n    pushInitialItemToNewRow: (state) => {\n      const newItemId = addInitialItemFn(state)\n      state.layout.push([newItemId])\n    },\n    insertInitialItemToNextColumn: (state, action: PayloadAction<number>) => {\n      const newItemId = addInitialItemFn(state)\n      const targetItemId = action.payload\n      const targetRowIndex = state.layout.findIndex((row) =>\n        row.includes(targetItemId),\n      )\n      const targetColumnIndex =\n        state.layout[targetRowIndex].indexOf(targetItemId)\n      state.layout[targetRowIndex].splice(targetColumnIndex + 1, 0, newItemId)\n    },\n    addItemForWorkflowDialog: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        filePath: string\n        dataType: DATA_TYPE\n      }>,\n    ) => {\n      const { nodeId, filePath, dataType } = action.payload\n      const maxId = getMaxItemId(state)\n      const newItemId = maxId != null ? maxId + 1 : 0\n      state.items[newItemId] = {\n        ...getDisplayDataItemInitialValue(dataType),\n        isWorkflowDialog: true,\n        nodeId,\n        filePath,\n      }\n    },\n    deleteAllItemForWorkflowDialog: (state) => {\n      const targetItemIdList = Object.entries(state.items)\n        .filter(([itemId, value]) => value.isWorkflowDialog)\n        .map(([itemId, value]) => Number(itemId))\n      targetItemIdList.forEach(\n        (targetItemId) => delete state.items[targetItemId],\n      )\n    },\n    setItemSize: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        width: number\n        height: number\n      }>,\n    ) => {\n      const { itemId, width, height } = action.payload\n      const targetItem = state.items[itemId]\n      targetItem.width = width\n      targetItem.height = height\n    },\n    selectItem: (state, action: PayloadAction<number>) => {\n      state.selectedItemId = action.payload\n    },\n    reset: (state) => {\n      state.items = initialState.items\n      state.layout = initialState.layout\n      state.selectedItemId = initialState.selectedItemId\n    },\n    setRoiItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n        outputKey?: string\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId, outputKey } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        Object.values(state.items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            item.drawOrderList = []\n          }\n        })\n\n        if (targetItem.roiItem != null) {\n          targetItem.roiItem.filePath = filePath\n          targetItem.roiItem.nodeId = nodeId\n          targetItem.roiItem.outputKey = outputKey\n        } else {\n          targetItem.roiItem = {\n            ...roiItemInitialValue,\n            filePath,\n            nodeId,\n            outputKey,\n          }\n        }\n      }\n    },\n    setFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isDisplayDataItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      } else {\n        throw new Error('error')\n      }\n    },\n    setSaveFormat: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFormat: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFormat = action.payload.saveFormat\n    },\n    setSaveFileName: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFileName: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFileName = action.payload.saveFileName\n    },\n    setImageItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setTimeSeriesItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setHeatMapItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    resetImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex?: number\n        endIndex?: number\n      }>,\n    ) => {\n      resetImageActiveIndexFn(state, action.payload)\n    },\n    incrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex++\n      }\n    },\n    decrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex--\n      }\n    },\n    setImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        activeIndex: number\n      }>,\n    ) => {\n      const { itemId, activeIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex = activeIndex\n      }\n    },\n    setImageItemShowticklabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setImageItemZsmooth: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zsmooth: string | boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.zsmooth = action.payload.zsmooth\n      }\n    },\n    setImageItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setImageItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setImageItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setImageItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setImageItemStartIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.startIndex = action.payload.startIndex\n      }\n    },\n    setImageItemEndIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        endIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.endIndex = action.payload.endIndex\n      }\n    },\n    setImageItemAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        alpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.alpha = action.payload.alpha\n      }\n    },\n    setImageItemRoiAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        roiAlpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.roiAlpha = action.payload.roiAlpha\n      }\n    },\n    setImageItemDuration: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        duration: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.duration = action.payload.duration\n      }\n    },\n    setTimeSeriesItemOffset: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        offset: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.offset = action.payload.offset\n      }\n    },\n    setTimeSeriesItemSpan: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        span: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.span = action.payload.span\n      }\n    },\n    setTimeSeriesItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setTimeSeriesItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setTimeSeriesItemShowTickLabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setTimeSeriesItemZeroLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zeroline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.zeroline = action.payload.zeroline\n      }\n    },\n    setTimeSeriesItemXrangeLeft: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        left: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.left = action.payload.left\n      }\n    },\n    setTimeSeriesItemXrangeRight: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        right: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.right = action.payload.right\n      }\n    },\n    setTimeSeriesItemDrawOrderList: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        drawOrderList: string[]\n      }>,\n    ) => {\n      const { itemId, drawOrderList } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.drawOrderList = drawOrderList\n      }\n    },\n    resetAllOrderList: (state) => {\n      Object.keys(state.items).forEach((id: any) => {\n        const targetItem = state.items[id]\n        if (isTimeSeriesItem(targetItem)) {\n          targetItem.drawOrderList = []\n        }\n      })\n    },\n    setTimeSeriesItemMaxIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        maxIndex: number\n      }>,\n    ) => {\n      const { itemId, maxIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.maxIndex = maxIndex\n      }\n    },\n    setTimeSeriesRefImageItemId: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        refImageItemId: number | null\n      }>,\n    ) => {\n      const { itemId, refImageItemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.refImageItemId = refImageItemId ?? null\n        targetItem.drawOrderList = []\n      }\n    },\n    setHeatMapItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setHeatMapItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setCsvItemTranspose: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        transpose: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.transpose = action.payload.transpose\n      }\n    },\n    setCsvItemSetHeader: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setHeader: number | null\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setHeader = action.payload.setHeader\n      }\n    },\n    setCsvItemSetIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setIndex: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setIndex = action.payload.setIndex\n      }\n    },\n    setScatterItemXIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        xIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.xIndex = action.payload.xIndex\n      }\n    },\n    setScatterItemYIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        yIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.yIndex = action.payload.yIndex\n      }\n    },\n    setBarItemIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        index: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isBarItem(targetItem)) {\n        targetItem.index = action.payload.index\n      }\n    },\n    setHistogramItemBins: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        bins: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHistogramItem(targetItem)) {\n        targetItem.bins = action.payload.bins\n      }\n    },\n    setLineItemSelectedIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        selectedIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isLineItem(targetItem)) {\n        targetItem.selectedIndex = action.payload.selectedIndex\n      }\n    },\n    setPolartemItemSelectedIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        selectedIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isPolarItem(targetItem)) {\n        targetItem.selectedIndex = action.payload.selectedIndex\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        const itemId = action.payload.itemId\n\n        if (isImageItem(state.items[itemId])) {\n          Object.values(state.items).forEach((item) => {\n            if (isTimeSeriesItem(item) && item.refImageItemId === itemId) {\n              item.refImageItemId = null\n            }\n          })\n        }\n\n        delete state.items[itemId]\n        if (itemId === state.selectedItemId) {\n          state.selectedItemId = null\n        }\n        state.layout.forEach((row, i) => {\n          const index = row.indexOf(itemId)\n          if (index !== -1) {\n            row.splice(index, 1)\n          }\n          if (row.length === 0) {\n            state.layout.splice(i, 1)\n          }\n        })\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        const { itemId, filePath, nodeId, dataType } = action.payload\n        const targetItem = state.items[itemId]\n        if (isDisplayDataItem(targetItem)) {\n          if (dataType != null) {\n            state.items[itemId] = {\n              ...getDisplayDataItemInitialValue(dataType),\n              width: targetItem.width,\n              height: targetItem.height,\n              filePath,\n              nodeId,\n            }\n          } else {\n            targetItem.filePath = filePath\n            targetItem.nodeId = nodeId\n          }\n        } else {\n          throw new Error('invalid VisualaizeItemType')\n        }\n        resetImageActiveIndexFn(state, { itemId })\n      })\n      .addCase(setImageItemClikedDataId.fulfilled, (state, action) => {\n        const { itemId: imageItemId, clickedDataId } = action.meta.arg\n        const targetItem = state.items[imageItemId]\n        if (isImageItem(targetItem)) {\n          targetItem.clickedDataId = clickedDataId\n        }\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId &&\n              !item.drawOrderList.includes(clickedDataId)\n            ) {\n              item.drawOrderList.push(clickedDataId)\n            }\n          }\n        })\n      })\n      .addCase(selectingImageArea.fulfilled, (state, action) => {\n        const { itemId: imageItemId } = action.meta.arg\n        const selectedZList = action.payload\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId\n            ) {\n              item.drawOrderList = selectedZList\n            }\n          }\n        })\n      })\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => initialState,\n      )\n  },\n})\n\nfunction getMaxItemId(state: VisualaizeItem) {\n  const idList = Object.keys(state.items).map((key) => Number(key))\n  const maxId =\n    idList.length > 0 ? idList.reduce((a, b) => Math.max(a, b)) : null\n  return maxId\n}\n\nfunction addInitialItemFn(state: VisualaizeItem) {\n  const maxId = getMaxItemId(state)\n  const nextId = maxId != null ? maxId + 1 : 0\n  state.items[nextId] = getDisplayDataItemInitialValue(DATA_TYPE_SET.IMAGE)\n  state.selectedItemId = nextId\n  return nextId\n}\n\nfunction resetImageActiveIndexFn(\n  state: VisualaizeItem,\n  args: {\n    itemId: number\n  },\n) {\n  const { itemId } = args\n  const targetItem = state.items[itemId]\n  if (isImageItem(targetItem)) {\n    targetItem.activeIndex = 0\n  }\n}\n\nexport const {\n  changeRangeUnit,\n  pushInitialItemToNewRow,\n  insertInitialItemToNextColumn,\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n  setItemSize,\n  selectItem,\n  setFilePath,\n  setSaveFormat,\n  setSaveFileName,\n  setHeatMapItemFilePath,\n  setImageItemFilePath,\n  setTimeSeriesItemFilePath,\n  setRoiItemFilePath,\n  resetImageActiveIndex,\n  incrementImageActiveIndex,\n  decrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowLine,\n  setImageItemShowGrid,\n  setImageItemShowScale,\n  setImageItemColors,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemAlpha,\n  setImageItemRoiAlpha,\n  setImageItemDuration,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemDrawOrderList,\n  setTimeSeriesItemMaxIndex,\n  setTimeSeriesRefImageItemId,\n  setHeatMapItemShowScale,\n  setHeatMapItemColors,\n  setCsvItemTranspose,\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n  setBarItemIndex,\n  setHistogramItemBins,\n  setLineItemSelectedIndex,\n  setPolartemItemSelectedIndex,\n  resetAllOrderList,\n  reset,\n} = visualaizeItemSlice.actions\n\nexport default visualaizeItemSlice.reducer\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport { useSnackbar } from 'notistack'\nimport { reproduceWorkflow } from 'store/slice/Workflow/WorkflowActions'\nimport { AppDispatch } from 'store/store'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport ReplyIcon from '@mui/icons-material/Reply'\nimport { reset } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const ReproduceButton = React.memo(() => {\n  const dispatch: AppDispatch = useDispatch()\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = () => {\n    if (workspaceId) {\n      dispatch(reproduceWorkflow({workspaceId, uid}))\n      .unwrap()\n      .then(() => {\n        enqueueSnackbar('Successfully reproduced.', { variant: 'success' })\n        dispatch(reset())\n      })\n      .catch(() => {\n        enqueueSnackbar('Failed to reproduce', { variant: 'error' })\n      })\n    } else {\n      enqueueSnackbar('Workspace id is missing', { variant: 'error' })\n    }\n  }\n  return (\n    <IconButton onClick={onClick}>\n      <ReplyIcon />\n    </IconButton>\n  )\n})\n","import React, { ChangeEvent, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\nimport Alert from '@mui/material/Alert'\nimport AlertTitle from '@mui/material/AlertTitle'\nimport IconButton from '@mui/material/IconButton'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport TablePagination from '@mui/material/TablePagination'\nimport Paper from '@mui/material/Paper'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport ReplayIcon from '@mui/icons-material/Replay'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport Checkbox from '@mui/material/Checkbox'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport TableSortLabel from '@mui/material/TableSortLabel'\nimport Typography from '@mui/material/Typography'\n\nimport { CollapsibleTable } from './CollapsibleTable'\nimport {\n  selectExperimentsStatusIsUninitialized,\n  selectExperimentsStatusIsFulfilled,\n  selectExperimentTimeStamp,\n  selectExperimentName,\n  selectExperimentStatus,\n  selectExperimentsStatusIsError,\n  selectExperimentsErrorMessage,\n  selectExperimentList,\n  selectExperimentHasNWB,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport {\n  deleteExperimentByList,\n  getExperiments,\n} from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { Experiment } from 'store/slice/Experiments/ExperimentsType'\nimport { DeleteButton } from './Button/DeleteButton'\nimport {\n  NWBDownloadButton,\n  SnakemakeDownloadButton,\n  WorkflowDownloadButton,\n} from './Button/DownloadButton'\nimport { ReproduceButton } from './Button/ReproduceButton'\nimport { useLocalStorage } from 'components/utils/LocalStorageUtil'\nimport { styled } from '@mui/material/styles'\nimport { renameExperiment } from 'api/experiments/Experiments'\nimport { selectPipelineLatestUid } from 'store/slice/Pipeline/PipelineSelectors'\nimport { clearCurrentPipeline } from 'store/slice/Pipeline/PipelineSlice'\nimport {\n  selectCurrentWorkspaceId,\n  selectIsWorkspaceOwner,\n} from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const ExperimentUidContext = React.createContext<string>('')\n\nexport const ExperimentTable: React.FC = () => {\n  const isUninitialized = useSelector(selectExperimentsStatusIsUninitialized)\n  const isFulfilled = useSelector(selectExperimentsStatusIsFulfilled)\n  const isError = useSelector(selectExperimentsStatusIsError)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (isUninitialized) {\n      dispatch(getExperiments())\n    }\n  }, [dispatch, isUninitialized])\n\n  if (isFulfilled) {\n    return <TableImple />\n  } else if (isError) {\n    return <ExperimentsErrorView />\n  } else {\n    return null\n  }\n}\n\nconst ExperimentsErrorView: React.FC = () => {\n  const message = useSelector(selectExperimentsErrorMessage)\n  return (\n    <Alert severity=\"error\">\n      <AlertTitle>failed to get experiments...</AlertTitle>\n      {message}\n    </Alert>\n  )\n}\n\nconst LOCAL_STORAGE_KEY_PER_PAGE = 'optinist_experiment_table_per_page'\n\nconst TableImple = React.memo(() => {\n  const isOwner = useSelector(selectIsWorkspaceOwner)\n  const currentPipelineUid = useSelector(selectPipelineLatestUid)\n  const experimentList = useSelector(selectExperimentList)\n  const experimentListValues = Object.values(experimentList)\n  const experimentListKeys = Object.keys(experimentList)\n  const dispatch = useDispatch()\n  const onClickReload = () => {\n    dispatch(getExperiments())\n  }\n  const [order, setOrder] = React.useState<Order>('asc')\n  const [sortTarget, setSortTarget] =\n    React.useState<keyof Experiment>('timestamp')\n  const sortHandler =\n    (property: keyof Experiment) => (event: React.MouseEvent<unknown>) => {\n      const isAsc = sortTarget === property && order === 'asc'\n      setOrder(isAsc ? 'desc' : 'asc')\n      setSortTarget(property)\n    }\n\n  const [checkedList, setCheckedList] = useState<string[]>([])\n  const [open, setOpen] = React.useState(false)\n\n  const onCheckBoxClick = (uid: string) => {\n    if (checkedList.includes(uid)) {\n      setCheckedList(checkedList.filter((v) => v !== uid))\n    } else {\n      setCheckedList([...checkedList, uid])\n    }\n  }\n\n  const onChangeAllCheck = (checked: boolean) => {\n    if (checked) {\n      setCheckedList(experimentListValues.map((experiment) => experiment.uid))\n    } else {\n      setCheckedList([])\n    }\n  }\n\n  const recordsIsEmpty = experimentListKeys.length === 0\n\n  const onClickDelete = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    dispatch(deleteExperimentByList(checkedList))\n    checkedList.filter((v) => v === currentPipelineUid).length > 0 &&\n      dispatch(clearCurrentPipeline())\n    setCheckedList([])\n    setOpen(false)\n  }\n\n  const [page, setPage] = React.useState(0)\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage)\n  }\n\n  const [rowsPerPage, setRowsPerPage] = useLocalStorage(\n    LOCAL_STORAGE_KEY_PER_PAGE,\n    10,\n    (value) => {\n      const valueNum = Number(value)\n      return isNaN(valueNum) ? 10 : valueNum\n    },\n  )\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const newValue = parseInt(event.target.value, 10)\n    setRowsPerPage(newValue)\n    setPage(0)\n  }\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0\n      ? Math.max(0, (1 + page) * rowsPerPage - experimentListKeys.length)\n      : 0\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          alignItems: 'center',\n        }}\n      >\n        {!recordsIsEmpty && (\n          <Typography sx={{ flexGrow: 1, m: 1 }}>\n            {checkedList.length} selected\n          </Typography>\n        )}\n        <Button\n          sx={{\n            margin: (theme) => theme.spacing(0, 1, 1, 0),\n          }}\n          variant=\"outlined\"\n          endIcon={<ReplayIcon />}\n          onClick={onClickReload}\n        >\n          Reload\n        </Button>\n        {isOwner && (\n          <Button\n            sx={{\n              marginBottom: (theme) => theme.spacing(1),\n            }}\n            variant=\"outlined\"\n            color=\"error\"\n            endIcon={<DeleteIcon />}\n            onClick={onClickDelete}\n            disabled={checkedList.length === 0}\n          >\n            Delete\n          </Button>\n        )}\n      </Box>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Paper\n        elevation={0}\n        variant=\"outlined\"\n        sx={{\n          flexGlow: 1,\n          height: '100%',\n        }}\n      >\n        <TableContainer component={Paper} elevation={0}>\n          <Table aria-label=\"collapsible table\">\n            <HeadItem\n              order={order}\n              sortHandler={sortHandler}\n              allCheckIndeterminate={\n                checkedList.length !== 0 &&\n                checkedList.length !== Object.keys(experimentList).length\n              }\n              allChecked={\n                checkedList.length === Object.keys(experimentList).length\n              }\n              onChangeAllCheck={onChangeAllCheck}\n              checkboxVisible={!recordsIsEmpty}\n              isOwner={isOwner}\n            />\n            <TableBody>\n              {experimentListValues\n                .sort(getComparator(order, sortTarget))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((expData) => (\n                  <ExperimentUidContext.Provider\n                    value={expData.uid}\n                    key={expData.uid}\n                  >\n                    <RowItem\n                      onCheckBoxClick={onCheckBoxClick}\n                      checked={checkedList.includes(expData.uid)}\n                      isOwner={isOwner}\n                    />\n                  </ExperimentUidContext.Provider>\n                ))}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: 53 * emptyRows,\n                  }}\n                >\n                  <TableCell colSpan={10} />\n                </TableRow>\n              )}\n              {recordsIsEmpty && (\n                <TableRow>\n                  <TableCell colSpan={10}>\n                    <Typography\n                      sx={{\n                        color: (theme) => theme.palette.text.secondary,\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        height: '300px',\n                        textAlign: 'center',\n                      }}\n                      variant=\"h6\"\n                    >\n                      No Rows...\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={experimentListKeys.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Box>\n  )\n})\n\nconst HeadItem = React.memo<{\n  order: Order\n  sortHandler: any\n  allChecked: boolean\n  onChangeAllCheck: (checked: boolean) => void\n  allCheckIndeterminate: boolean\n  checkboxVisible: boolean\n  isOwner: boolean\n}>(\n  ({\n    order,\n    sortHandler,\n    allChecked,\n    onChangeAllCheck,\n    allCheckIndeterminate,\n    checkboxVisible,\n    isOwner,\n  }) => {\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              sx={{ visibility: checkboxVisible ? 'visible' : 'hidden' }}\n              checked={allChecked}\n              indeterminate={allCheckIndeterminate}\n              onChange={(e) => onChangeAllCheck(e.target.checked)}\n            />\n          </TableCell>\n          <TableCell />\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('timestamp')}\n            >\n              Timestamp\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('uid')}\n            >\n              ID\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('name')}\n            >\n              Name\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>Success</TableCell>\n          <TableCell>Reproduce</TableCell>\n          <TableCell>Workflow</TableCell>\n          <TableCell>Snakemake</TableCell>\n          <TableCell>NWB</TableCell>\n          {isOwner && <TableCell>Delete</TableCell>}\n        </TableRow>\n      </TableHead>\n    )\n  },\n)\n\nconst RowItem = React.memo<{\n  onCheckBoxClick: (uid: string) => void\n  checked: boolean\n  isOwner: boolean\n}>(({ onCheckBoxClick, checked, isOwner }) => {\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const timestamp = useSelector(selectExperimentTimeStamp(uid))\n  const status = useSelector(selectExperimentStatus(uid))\n  const name = useSelector(selectExperimentName(uid))\n  const hasNWB = useSelector(selectExperimentHasNWB(uid))\n  const [open, setOpen] = React.useState(false)\n  const [isEdit, setEdit] = useState(false)\n  const [errorEdit, setErrorEdit] = useState('')\n  const [valueEdit, setValueEdit] = useState(name)\n  const dispatch = useDispatch()\n\n  const onBlurEdit = (event: any) => {\n    event.preventDefault()\n    if (errorEdit) return\n    setTimeout(() => {\n      setEdit(false)\n      onSaveNewName()\n    }, 300)\n  }\n\n  const onEdit = (event: any) => {\n    if (isEdit || errorEdit) return\n    event.preventDefault()\n    setEdit(true)\n  }\n\n  const onChangeName = (event: ChangeEvent<HTMLInputElement>) => {\n    let errorEdit = ''\n    if (!event.target.value.trim()) {\n      errorEdit = 'Name is empty'\n    }\n    setErrorEdit(errorEdit)\n    setValueEdit(event.target.value)\n  }\n\n  const onSaveNewName = async () => {\n    if (valueEdit === name || workspaceId === void 0) return\n    await renameExperiment(workspaceId, uid, valueEdit)\n    dispatch(getExperiments())\n  }\n\n  return (\n    <React.Fragment>\n      <TableRow\n        sx={{\n          '& > *': {\n            borderBottom: 'unset',\n          },\n          [`& .${tableCellClasses.root}`]: {\n            borderBottomWidth: 0,\n          },\n        }}\n      >\n        <TableCell padding=\"checkbox\">\n          <Checkbox onChange={() => onCheckBoxClick(uid)} checked={checked} />\n        </TableCell>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {timestamp}\n        </TableCell>\n        <TableCell>{uid}</TableCell>\n        <TableCell sx={{ width: 160, position: 'relative' }} onClick={onEdit}>\n          {!isEdit ? (\n            valueEdit\n          ) : (\n            <>\n              <Input\n                placeholder=\"Name\"\n                error={!!errorEdit}\n                onChange={onChangeName}\n                autoFocus\n                onBlur={onBlurEdit}\n                value={valueEdit}\n              />\n              {errorEdit ? <TextError>{errorEdit}</TextError> : null}\n            </>\n          )}\n        </TableCell>\n        <TableCell>\n          <ExperimentStatusIcon status={status} />\n        </TableCell>\n        <TableCell>\n          <ReproduceButton />\n        </TableCell>\n        <TableCell>\n          <WorkflowDownloadButton />\n        </TableCell>\n        <TableCell>\n          <SnakemakeDownloadButton />\n        </TableCell>\n        <TableCell>\n          <NWBDownloadButton name={uid} hasNWB={hasNWB} />\n        </TableCell>\n        {isOwner &&<TableCell> <DeleteButton /></TableCell>}\n      </TableRow>\n      <CollapsibleTable open={open} />\n    </React.Fragment>\n  )\n})\n\nconst Input = styled('input')<{ error: boolean }>(({ error }) => ({\n  width: '100%',\n  border: 'none',\n  borderBottom: '1px solid',\n  outline: 'none',\n  color: error ? '#d32f2f' : '',\n  borderColor: error ? '#d32f2f' : '',\n}))\n\nconst TextError = styled(Typography)(() => ({\n  color: '#d32f2f',\n  fontSize: 12,\n  height: 12,\n  position: 'absolute',\n  bottom: 12,\n}))\n\ntype Order = 'asc' | 'desc'\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string },\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n","import React from 'react'\n\nexport function useLocalStorage<T>(\n  storageKey: string,\n  initialValue: T,\n  parseFn: (value: any) => T,\n): [T, React.Dispatch<React.SetStateAction<T>>] {\n  const [value, setValue] = React.useState(() => {\n    const savedStr = localStorage.getItem(storageKey)\n    if (savedStr != null) {\n      return parseFn(JSON.parse(savedStr))\n    }\n    return initialValue\n  })\n  React.useEffect(() => {\n    localStorage.setItem(storageKey, JSON.stringify(value))\n  }, [value, storageKey])\n  return [value, setValue]\n}\n","import React from 'react'\nimport { ExperimentTable } from './ExperimentTable'\nimport { CONTENT_HEIGHT } from 'const/Layout'\n\nconst Experiment = React.memo(() => {\n  return (\n    <div style={{ display: 'flex' }}>\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1,\n          minHeight: CONTENT_HEIGHT,\n        }}\n      >\n        <ExperimentTable />\n      </main>\n    </div>\n  )\n})\n\nexport default Experiment\n","import { AlgoListDTO, AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  AlgorithmNodeType,\n  AlgorithmChild,\n  AlgorithmParent,\n  AlgorithmListTree,\n} from './AlgorithmListType'\n\nexport function isAlgoChild(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmChild {\n  return algoNode.type === 'child'\n}\n\nexport function isAlgoParent(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmParent {\n  return algoNode.type === 'parent'\n}\n\nexport function getAlgoChild(\n  algoList: AlgorithmListTree,\n  algoName: string,\n): AlgorithmChild | null {\n  let result: AlgorithmChild | null = null\n  for (const [name, node] of Object.entries(algoList)) {\n    if (isAlgoChild(node)) {\n      if (name === algoName) {\n        result = node\n      }\n    } else {\n      result = getAlgoChild(node.children, algoName)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function convertToAlgoListType(dto: AlgoListDTO) {\n  const algoList: AlgorithmListTree = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    if (Object.prototype.hasOwnProperty.call(value, 'children')) {\n      algoList[name] = {\n        type: 'parent',\n        children: convertToAlgoListType(\n          (\n            value as {\n              children: AlgoListDTO\n            }\n          ).children as AlgoListDTO,\n        ),\n      }\n    } else {\n      const dto = value as {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n      algoList[name] = {\n        type: 'child',\n        functionPath: dto.path,\n        args: dto.args,\n        returns: dto.returns,\n      }\n    }\n  })\n  return algoList\n}\n","import { RootState } from 'store/store'\nimport { selectAlgorithmName } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { getAlgoChild } from './AlgorithmListUtils'\n\nexport const selectAlgorithmList = (state: RootState) => state.algorithmList\n\nexport const selectAlgorithmListIsLated = (state: RootState) =>\n  selectAlgorithmList(state).isLatest\n\nexport const selectAlgorithmListTree = (state: RootState) =>\n  selectAlgorithmList(state).tree\n\nexport const selectAlgoArgs = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.args\n  } else {\n    return undefined\n  }\n}\n\nexport const selectAlgoReturns = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.returns\n  } else {\n    return undefined\n  }\n}\n","import { AlgorithmInfo } from 'api/algolist/AlgoList'\n\nexport const ALGORITHM_LIST_SLICE_NAME = 'algorithmList'\n\nexport type AlgorithmListType = {\n  isLatest: boolean\n  tree: AlgorithmListTree\n}\n\nexport type AlgorithmListTree = {\n  [algoName: string]: AlgorithmNodeType\n}\n\nexport type AlgorithmNodeType = AlgorithmChild | AlgorithmParent\nexport type AlgorithmChild = {\n  type: 'child'\n  args: AlgorithmInfo[]\n  returns: AlgorithmInfo[]\n  functionPath: string\n}\nexport type AlgorithmParent = {\n  type: 'parent'\n  children: {\n    [name: string]: AlgorithmNodeType\n  }\n}\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type AlgoListDTO = {\n  [name: string]:\n    | {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n    | { children: AlgoListDTO }\n}\n\nexport type AlgorithmInfo = {\n  name: string\n  type: string\n  isNone?: boolean\n}\n\nexport async function getAlgoListApi(): Promise<AlgoListDTO> {\n  const response = await axios.get(`${BASE_URL}/algolist`)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { ALGORITHM_LIST_SLICE_NAME } from './AlgorithmListType'\nimport { AlgoListDTO, getAlgoListApi } from 'api/algolist/AlgoList'\n\nexport const getAlgoList = createAsyncThunk<AlgoListDTO, void>(\n  `${ALGORITHM_LIST_SLICE_NAME}/getAlgoList`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoListApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getAlgoParamsApi(algoName: string): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/params/${algoName}`)\n  return response.data\n}\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Node } from 'react-flow-renderer'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { FLOW_ELEMENT_SLICE_NAME, NodeData } from './FlowElementType'\nimport { getAlgoParamsApi } from 'api/params/Params'\n\nexport type AddingNodeData = Omit<Node<NodeData>, 'position'> &\n  Partial<Pick<Node<NodeData>, 'position'>>\n\nexport const addAlgorithmNode = createAsyncThunk<\n  ParamDTO,\n  {\n    node: AddingNodeData\n    functionPath: string\n    name: string\n  }\n>(`${FLOW_ELEMENT_SLICE_NAME}/addAlgorithmNode`, async ({ name }, thunkAPI) => {\n  try {\n    const response = await getAlgoParamsApi(name)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const addInputNode = createAction<{\n  node: AddingNodeData\n  fileType: FILE_TYPE\n}>(`${FLOW_ELEMENT_SLICE_NAME}/addInputNode`)\n","import { customAlphabet } from 'nanoid/non-secure'\n\nconst nanoid = customAlphabet('0123456789abcdefghijklmnopqrstuvwxyz', 10)\n\nexport const getNanoId = () => {\n  return nanoid()\n}\n","export const INITIAL_IMAGE_ELEMENT_ID = 'input_0'\nexport const INITIAL_IMAGE_ELEMENT_NAME = 'NoName'\n\nexport const INITIAL_ALGO_STYLE: React.CSSProperties = {\n  width: 180,\n  height: 100,\n  padding: 0,\n  borderRadius: 0,\n} as const\n\nexport const INITIAL_DATA_STYLE: React.CSSProperties = {\n  border: '1px solid #777',\n  height: 120,\n} as const\n\nexport const REACT_FLOW_NODE_TYPE_KEY = {\n  ImageFileNode: 'ImageFileNode',\n  CsvFileNode: 'CsvFileNode',\n  HDF5FileNode: 'HDF5FileNode',\n  FluoFileNode: 'FluoFileNode',\n  AlgorithmNode: 'AlgorithmNode',\n  BehaviorFileNode: 'BehaviorFileNode',\n} as const\n\nexport type REACT_FLOW_NODE_TYPE =\n  typeof REACT_FLOW_NODE_TYPE_KEY[keyof typeof REACT_FLOW_NODE_TYPE_KEY]\n","export const DND_ITEM_TYPE_SET = {\n  TREE_ITEM: 'TREE_ITEM',\n} as const\n\nexport type DND_ITEM_TYPE =\n  typeof DND_ITEM_TYPE_SET[keyof typeof DND_ITEM_TYPE_SET]\n\nexport type TreeItemDragObject = {}\n\nexport type TreeItemDropResult = {\n  position?: { x: number; y: number }\n}\n\nexport type TreeItemCollectedProps = {\n  isDragging: boolean\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem'\nimport { styled, Typography } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport IconButton from '@mui/material/IconButton'\nimport AddIcon from '@mui/icons-material/Add'\nimport { useDrag } from 'react-dnd'\n\nimport {\n  selectAlgorithmListIsLated,\n  selectAlgorithmListTree,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport {\n  AlgorithmChild,\n  AlgorithmNodeType,\n} from 'store/slice/AlgorithmList/AlgorithmListType'\nimport { isAlgoChild } from 'store/slice/AlgorithmList/AlgorithmListUtils'\nimport { getAlgoList } from 'store/slice/AlgorithmList/AlgorithmListActions'\nimport { FILE_TYPE, FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  NODE_TYPE,\n  NODE_TYPE_SET,\n} from 'store/slice/FlowElement/FlowElementType'\nimport {\n  addAlgorithmNode,\n  addInputNode,\n} from 'store/slice/FlowElement/FlowElementActions'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport { REACT_FLOW_NODE_TYPE, REACT_FLOW_NODE_TYPE_KEY } from 'const/flowchart'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\n\nexport const AlgorithmTreeView = React.memo(() => {\n  const dispatch = useDispatch()\n  const algoList = useSelector(selectAlgorithmListTree)\n  const isLatest = useSelector(selectAlgorithmListIsLated)\n\n  useEffect(() => {\n    if (!isLatest) {\n      dispatch(getAlgoList())\n    }\n  }, [dispatch, isLatest])\n\n  const onAddAlgoNode = React.useCallback(\n    (\n      nodeName: string,\n      functionPath: string,\n      position?: { x: number; y: number },\n    ) => {\n      const name = nodeName\n      const newNode = {\n        id: `${name}_${getNanoId()}`,\n        type: REACT_FLOW_NODE_TYPE_KEY.AlgorithmNode,\n        data: { label: name, type: NODE_TYPE_SET.ALGORITHM },\n        position,\n      }\n      dispatch(\n        addAlgorithmNode({\n          node: newNode,\n          name,\n          functionPath,\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  return (\n    <TreeView\n      sx={{\n        flexGrow: 1,\n        height: '100%',\n      }}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId=\"Data\" label=\"Data\">\n        <InputNodeComponent\n          fileName={'image'}\n          nodeName={'imageData'}\n          fileType={FILE_TYPE_SET.IMAGE}\n        />\n        <InputNodeComponent\n          fileName={'csv'}\n          nodeName={'csvData'}\n          fileType={FILE_TYPE_SET.CSV}\n        />\n        <InputNodeComponent\n          fileName={'hdf5'}\n          nodeName={'hdf5Data'}\n          fileType={FILE_TYPE_SET.HDF5}\n        />\n        <InputNodeComponent\n          fileName={'fluo'}\n          nodeName={'fluoData'}\n          fileType={FILE_TYPE_SET.FLUO}\n        />\n        <InputNodeComponent\n          fileName={'behavior'}\n          nodeName={'behaviorData'}\n          fileType={FILE_TYPE_SET.BEHAVIOR}\n        />\n      </TreeItem>\n      <TreeItem nodeId=\"Algorithm\" label=\"Algorithm\">\n        {Object.entries(algoList).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            onAddAlgoNode={onAddAlgoNode}\n            key={i.toFixed()}\n          />\n        ))}\n      </TreeItem>\n    </TreeView>\n  )\n})\n\nconst InputNodeComponent = React.memo<{\n  fileName: string\n  nodeName: string\n  fileType: FILE_TYPE\n}>(({ fileName, nodeName, fileType }) => {\n  const dispatch = useDispatch()\n\n  const onAddDataNode = React.useCallback(\n    (\n      nodeType: NODE_TYPE,\n      nodeName: string,\n      fileType: FILE_TYPE,\n      position?: { x: number; y: number },\n    ) => {\n      let reactFlowNodeType: REACT_FLOW_NODE_TYPE | '' = ''\n      switch (fileType) {\n        case FILE_TYPE_SET.CSV:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.CsvFileNode\n          break\n        case FILE_TYPE_SET.IMAGE:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.ImageFileNode\n          fileType = FILE_TYPE_SET.IMAGE\n          break\n        case FILE_TYPE_SET.HDF5:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.HDF5FileNode\n          fileType = FILE_TYPE_SET.HDF5\n          break\n        case FILE_TYPE_SET.FLUO:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.FluoFileNode\n          fileType = FILE_TYPE_SET.FLUO\n          break\n        case FILE_TYPE_SET.BEHAVIOR:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.BehaviorFileNode\n          fileType = FILE_TYPE_SET.BEHAVIOR\n          break\n      }\n      const newNode = {\n        id: `input_${getNanoId()}`,\n        type: reactFlowNodeType,\n        data: { label: nodeName, type: nodeType },\n        position,\n      }\n      dispatch(addInputNode({ node: newNode, fileType }))\n    },\n    [dispatch],\n  )\n\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType, position)\n      },\n      [onAddDataNode, nodeName, fileType],\n    ),\n  )\n\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={fileName}\n      label={\n        <AddButton\n          name={fileName}\n          onClick={() => onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType)}\n        />\n      }\n    />\n  )\n})\n\nconst AlgoNodeComponentRecursive = React.memo<{\n  name: string\n  node: AlgorithmNodeType\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  if (isAlgoChild(node)) {\n    return (\n      <AlgoNodeComponent\n        name={name}\n        node={node}\n        onAddAlgoNode={onAddAlgoNode}\n      />\n    )\n  } else {\n    return (\n      <TreeItem nodeId={name} label={name}>\n        {Object.entries(node.children).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            key={i.toFixed()}\n            onAddAlgoNode={onAddAlgoNode}\n          />\n        ))}\n      </TreeItem>\n    )\n  }\n})\n\nconst AlgoNodeComponent = React.memo<{\n  name: string\n  node: AlgorithmChild\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddAlgoNode(name, node.functionPath, position)\n      },\n      [onAddAlgoNode, name, node],\n    ),\n  )\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={name}\n      label={\n        <AddButton\n          name={name}\n          onClick={() => onAddAlgoNode(name, node.functionPath)}\n        />\n      }\n    />\n  )\n})\n\nconst AddButton = React.memo<{\n  name: string\n  onClick: () => void\n}>(({ name, onClick }) => {\n  return (\n    <>\n      <IconButton aria-label=\"add\" style={{ padding: 2 }} size=\"large\">\n        <AddIcon onClick={() => onClick()} />\n      </IconButton>\n      <Typography\n        variant=\"inherit\"\n        style={{\n          textOverflow: 'ellipsis',\n          overflow: 'visible',\n          width: '8rem',\n          display: 'inline-block',\n        }}\n      >\n        {name}\n      </Typography>\n    </>\n  )\n})\n\n// 未使用icon分の幅を消す\nconst LeafItem = styled(TreeItem)({\n  // background: 'red',\n  [`& .${treeItemClasses.iconContainer}`]: {\n    margin: 0,\n    width: 0,\n  },\n})\n\nfunction useLeafItemDrag(\n  onDragEnd: (positon: { x: number; y: number }) => void,\n) {\n  const [{ isDragging }, dragRef] = useDrag<\n    TreeItemDragObject,\n    TreeItemDropResult,\n    TreeItemCollectedProps\n  >(\n    () => ({\n      type: DND_ITEM_TYPE_SET.TREE_ITEM,\n      end: (_, monitor) => {\n        const position = monitor.getDropResult()?.position\n        if (monitor.didDrop() && position != null) {\n          onDragEnd(position)\n        }\n      },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [onDragEnd],\n  )\n  return { isDragging, dragRef }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nimport { INPUT_NODE_SLICE_NAME } from './InputNodeType'\n\nexport const setInputNodeFilePath = createAction<{\n  nodeId: string\n  filePath: string | string[]\n}>(`${INPUT_NODE_SLICE_NAME}/setInputNodeFilePath`)\n","import type { Node } from 'react-flow-renderer'\nimport {\n  isInputNodeData,\n  isAlgorithmNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport type {\n  NodePostDataType,\n  InputNodePostData,\n  AlgorithmNodePostData,\n} from './Run'\n\nexport function isInputNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<InputNodePostData> {\n  return isInputNodeData(node)\n}\n\nexport function isAlgorithmNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<AlgorithmNodePostData> {\n  return isAlgorithmNodeData(node)\n}\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport const FILE_TREE_TYPE_SET = {\n  IMAGE: 'image',\n  CSV: 'csv',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  ALL: 'all',\n} as const\n\nexport type FILE_TREE_TYPE =\n  typeof FILE_TREE_TYPE_SET[keyof typeof FILE_TREE_TYPE_SET]\n\nexport type TreeNodeTypeDTO = DirNodeDTO | FileNodeDTO\n\nexport interface NodeBaseDTO {\n  path: string\n  name: string\n  isdir: boolean\n}\n\nexport interface DirNodeDTO extends NodeBaseDTO {\n  isdir: true\n  nodes: TreeNodeTypeDTO[]\n}\n\nexport interface FileNodeDTO extends NodeBaseDTO {\n  isdir: false\n}\n\nexport async function getFilesTreeApi(\n  workspaceId: number,\n  fileType: FILE_TREE_TYPE,\n): Promise<TreeNodeTypeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/files/${workspaceId}`, {\n    params: {\n      file_type: fileType,\n    },\n  })\n  return response.data\n}\n\nexport async function uploadFileApi(\n  workspaceId: number,\n  fileName: string,\n  config: {\n    onUploadProgress: (progressEvent: any) => void\n  },\n  formData: FormData,\n): Promise<{ file_path: string }> {\n  const response = await axios.post(\n    `${BASE_URL}/files/${workspaceId}/upload/${fileName}`,\n    formData,\n    config,\n  )\n  return response.data\n}\n","export const FILE_UPLOADER_SLICE_NAME = 'fileUploader'\n\nexport type FileUploader = {\n  [id: string]: FileUploaderType\n}\n\nexport type FileUploaderType = {\n  path?: string\n  fileName?: string\n  isUninitialized: boolean\n  pending: boolean\n  fulfilled: boolean\n  uploadingProgress?: number\n  error?: string\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { uploadFileApi } from 'api/files/Files'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\nimport { FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\n\nexport const setUploadProgress = createAction<{\n  requestId: string\n  progess: number\n  total: number\n}>(`${FILE_UPLOADER_SLICE_NAME}/setUploadProgress`)\n\nexport const uploadFile = createAsyncThunk<\n  {\n    resultPath: string\n  },\n  {\n    workspaceId: number\n    requestId: string\n    nodeId?: string\n    fileName: string\n    formData: FormData\n    fileType?: FILE_TYPE\n  }\n>(\n  `${FILE_UPLOADER_SLICE_NAME}/uploadFile`,\n  async ({ workspaceId, requestId, fileName, formData }, thunkAPI) => {\n    try {\n      const config = getUploadConfig((percent, total) => {\n        thunkAPI.dispatch(\n          setUploadProgress({\n            requestId,\n            progess: percent,\n            total,\n          }),\n        )\n      })\n      const response = await uploadFileApi(\n        workspaceId,\n        fileName,\n        config,\n        formData,\n      )\n      return {\n        resultPath: response.file_path,\n      }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nfunction getUploadConfig(\n  onUpdateProgressFn: (percent: number, totalSize: number) => void,\n) {\n  return {\n    onUploadProgress: function (progressEvent: any) {\n      const percentCompleted = Math.round(\n        (progressEvent.loaded * 100) / progressEvent.total,\n      )\n      onUpdateProgressFn(percentCompleted, progressEvent.total)\n    },\n  }\n}\n","import { createSlice, PayloadAction, isAnyOf } from '@reduxjs/toolkit'\nimport {\n  Node,\n  NodeChange,\n  Edge,\n  EdgeChange,\n  applyNodeChanges,\n  applyEdgeChanges,\n  Position,\n  Transform,\n} from 'react-flow-renderer'\nimport {\n  FLOW_ELEMENT_SLICE_NAME,\n  FlowElement,\n  NODE_TYPE_SET,\n  NodeData,\n  ElementCoord,\n} from './FlowElementType'\nimport {\n  INITIAL_ALGO_STYLE,\n  INITIAL_DATA_STYLE,\n  INITIAL_IMAGE_ELEMENT_ID,\n  INITIAL_IMAGE_ELEMENT_NAME,\n  REACT_FLOW_NODE_TYPE_KEY,\n} from 'const/flowchart'\nimport { fetchExperiment } from '../Experiments/ExperimentsActions'\nimport {\n  reproduceWorkflow,\n  importWorkflowConfig,\n} from 'store/slice/Workflow/WorkflowActions'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { addAlgorithmNode, addInputNode } from './FlowElementActions'\nimport { getLabelByPath } from './FlowElementUtils'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\n\nconst initialNodes: Node<NodeData>[] = [\n  {\n    id: INITIAL_IMAGE_ELEMENT_ID,\n    type: REACT_FLOW_NODE_TYPE_KEY.ImageFileNode,\n    data: {\n      type: NODE_TYPE_SET.INPUT,\n      label: INITIAL_IMAGE_ELEMENT_NAME,\n    },\n    style: INITIAL_DATA_STYLE,\n    position: { x: 50, y: 150 },\n  },\n]\n\nconst initialFlowPosition: Transform = [0, 0, 0.7] // [x, y, zoom]\n\nconst initialElementCoord: ElementCoord = {\n  x: 100,\n  y: 150,\n}\n\nconst initialState: FlowElement = {\n  flowNodes: initialNodes,\n  flowEdges: [],\n  flowPosition: initialFlowPosition,\n  elementCoord: initialElementCoord,\n}\n\nexport const flowElementSlice = createSlice({\n  name: FLOW_ELEMENT_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFlowPosition: (state, action: PayloadAction<Transform>) => {\n      state.flowPosition = action.payload\n    },\n    setFlowNodes: (state, action: PayloadAction<Node[]>) => {\n      state.flowNodes = action.payload\n    },\n    setFlowEdges: (state, action: PayloadAction<Edge[]>) => {\n      state.flowEdges = action.payload\n    },\n    deleteFlowNodes: (state, action: PayloadAction<Node[]>) => {\n      state.flowNodes = applyNodeChanges(\n        action.payload.map((node) => {\n          return { id: node.id, type: 'remove' }\n        }),\n        state.flowNodes,\n      )\n    },\n    setNodesChange: (state, action: PayloadAction<NodeChange[]>) => {\n      state.flowNodes = applyNodeChanges(action.payload, state.flowNodes)\n    },\n    setEdgesChange: (state, action: PayloadAction<EdgeChange[]>) => {\n      state.flowEdges = applyEdgeChanges(action.payload, state.flowEdges)\n    },\n    deleteFlowEdgeById: (state, action: PayloadAction<string>) => {\n      const element = state.flowEdges.find((edge) => edge.id === action.payload)\n      if (element !== undefined) {\n        state.flowEdges = applyEdgeChanges(\n          [{ id: element.id, type: 'remove' }],\n          state.flowEdges,\n        )\n      }\n    },\n    deleteFlowNodeById: (state, action: PayloadAction<string>) => {\n      const element = state.flowNodes.find((node) => node.id === action.payload)\n      if (element !== undefined) {\n        state.flowNodes = applyNodeChanges(\n          [{ id: element.id, type: 'remove' }],\n          state.flowNodes,\n        )\n        state.flowEdges = applyEdgeChanges(\n          state.flowEdges\n            .filter((edge) => {\n              return (\n                edge.source === action.payload || edge.target === action.payload\n              )\n            })\n            .map((edge) => {\n              return { id: edge.id, type: 'remove' }\n            }),\n          state.flowEdges,\n        )\n      }\n    },\n    editFlowNodePositionById: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        coord: {\n          x: number\n          y: number\n        }\n      }>,\n    ) => {\n      let { nodeId, coord } = action.payload\n      const elementIdx = state.flowNodes.findIndex((node) => node.id === nodeId)\n      const targetItem = state.flowNodes[elementIdx]\n      targetItem.position = coord\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        let { node } = action.meta.arg\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_ALGO_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowNodes.push({ ...node, position: node.position })\n        } else {\n          state.flowNodes.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        let { node } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_DATA_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowNodes.push({ ...node, position: node.position })\n        } else {\n          state.flowNodes.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(setInputNodeFilePath, (state, action) => {\n        let { nodeId, filePath } = action.payload\n        const label = getLabelByPath(filePath)\n        const nodeIdx = state.flowNodes.findIndex((node) => node.id === nodeId)\n        const targetNode = state.flowNodes[nodeIdx]\n        if (targetNode.data != null) {\n          targetNode.data.label = label\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const nodeIdx = state.flowNodes.findIndex(\n            (node) => node.id === nodeId,\n          )\n          const targetNode = state.flowNodes[nodeIdx]\n          if (targetNode.data != null) {\n            targetNode.data.label = getLabelByPath(action.payload.resultPath)\n          }\n        }\n      })\n      .addCase(fetchExperiment.rejected, () => initialState)\n      .addMatcher(\n        isAnyOf(\n          reproduceWorkflow.fulfilled,\n          importWorkflowConfig.fulfilled,\n          fetchExperiment.fulfilled,\n        ),\n        (state, action) => {\n          state.flowPosition = initialFlowPosition\n          state.elementCoord = initialElementCoord\n          state.flowNodes = Object.values(action.payload.nodeDict).map(\n            (node) => {\n              if (isInputNodePostData(node)) {\n                return {\n                  ...node,\n                  data: {\n                    label: node.data?.label ?? '',\n                    type: node.data?.type ?? 'input',\n                  },\n                }\n              } else {\n                return {\n                  ...node,\n                  data: {\n                    label: node.data?.label ?? '',\n                    type: node.data?.type ?? 'algorithm',\n                  },\n                }\n              }\n            },\n          )\n          state.flowEdges = Object.values(action.payload.edgeDict)\n        },\n      ),\n})\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nfunction updateElementCoord(state: FlowElement) {\n  const { x } = state.elementCoord\n  if (x > 800) {\n    state.elementCoord.x = 300\n    state.elementCoord.y += 100\n  } else {\n    state.elementCoord.x += 250\n    state.elementCoord.y += getRandomArbitrary(-20, 20)\n  }\n}\n\nexport const {\n  setNodesChange,\n  setEdgesChange,\n  setFlowPosition,\n  setFlowNodes,\n  setFlowEdges,\n  deleteFlowNodes,\n  deleteFlowEdgeById,\n  deleteFlowNodeById,\n  editFlowNodePositionById,\n} = flowElementSlice.actions\n\nexport default flowElementSlice.reducer\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getNWBParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/nwb`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const NWB_SLICE_NAME = 'NWB'\n\nexport type NWBType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getNWBParamsApi } from 'api/nwb/NWB'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { NWB_SLICE_NAME } from './NWBType'\n\nexport const getNWBParams = createAsyncThunk<ParamDTO, void>(\n  `${NWB_SLICE_NAME}/getNWBParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getNWBParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getNWBParams } from './NWBAction'\nimport { NWBType, NWB_SLICE_NAME } from './NWBType'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\n\nconst initialState: NWBType = {\n  params: {},\n}\n\nexport const nwbSlice = createSlice({\n  name: NWB_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const targetNode = getChildParam(path, state.params)\n      if (targetNode != null) {\n        targetNode.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNWBParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = nwbSlice.actions\n\nexport default nwbSlice.reducer\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport { fetchExperiment } from '../Experiments/ExperimentsActions'\nimport {\n  reproduceWorkflow,\n  importWorkflowConfig,\n} from 'store/slice/Workflow/WorkflowActions'\nimport {\n  deleteFlowNodes,\n  deleteFlowNodeById,\n} from '../FlowElement/FlowElementSlice'\n\ntype RightDrawer = {\n  open: boolean\n  mode: RIGHT_DRAWER_MODE_TYPE\n  currendNodeId: string | null\n}\n\nexport const RIGHT_DRAWER_MODE = {\n  NONE: 'none',\n  NWB: 'nwb',\n  PARAM_FORM: 'paramForm',\n  SNAKEMAKE: 'snakemake',\n} as const\n\nexport type RIGHT_DRAWER_MODE_TYPE =\n  typeof RIGHT_DRAWER_MODE[keyof typeof RIGHT_DRAWER_MODE]\n\nconst initialState: RightDrawer = {\n  open: false,\n  mode: RIGHT_DRAWER_MODE.NONE,\n  currendNodeId: null,\n}\nexport const rightDrawerSlice = createSlice({\n  name: 'rightDrawer',\n  initialState,\n  reducers: {\n    openRightDrawer: (state, action: PayloadAction<RIGHT_DRAWER_MODE_TYPE>) => {\n      state.open = true\n      state.mode = action.payload\n    },\n    closeRightDrawer: (state) => {\n      state.open = false\n      state.mode = RIGHT_DRAWER_MODE.NONE\n    },\n    toggleParamForm: (state, action: PayloadAction<string>) => {\n      if (\n        state.open &&\n        state.mode === RIGHT_DRAWER_MODE.PARAM_FORM &&\n        state.currendNodeId === action.payload\n      ) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n        state.currendNodeId = null\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.PARAM_FORM\n        state.currendNodeId = action.payload\n      }\n    },\n    toggleNwb: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.NWB) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.NWB\n      }\n      state.currendNodeId = null\n    },\n    toggleSnakemake: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.SNAKEMAKE) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.SNAKEMAKE\n      }\n      state.currendNodeId = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteFlowNodes, (state, action) => {\n        if (\n          action.payload.findIndex((elm) => elm.id === state.currendNodeId) > 0\n        ) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(deleteFlowNodeById, (state, action) => {\n        if (action.payload === state.currendNodeId) {\n          state.currendNodeId = null\n        }\n      })\n\n      .addMatcher(\n        isAnyOf(\n          reproduceWorkflow.fulfilled,\n          importWorkflowConfig.fulfilled,\n          fetchExperiment.fulfilled,\n          fetchExperiment.rejected,\n        ),\n        () => initialState,\n      )\n  },\n})\n\nexport const {\n  toggleParamForm,\n  toggleNwb,\n  toggleSnakemake,\n  openRightDrawer,\n  closeRightDrawer,\n} = rightDrawerSlice.actions\n\nexport default rightDrawerSlice.reducer\n","import MuiAccordion, { AccordionProps } from '@mui/material/Accordion'\nimport { styled } from '@mui/material/styles'\n\nexport const Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: '1px solid',\n  borderColor: theme.palette.divider,\n  boxShadow: 'none',\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}))\n","import React, { useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport Switch from '@mui/material/Switch'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport Typography from '@mui/material/Typography'\n\nimport { isParamChild } from 'utils/param/ParamUtils'\nimport { ParamType } from 'utils/param/ParamType'\nimport { RootState } from 'store/store'\nimport { Accordion } from 'components/common/Accordion'\n\ntype ParamSelectorType = (paramKey: string) => (state: RootState) => ParamType\ntype ParamValueSelectorType = (path: string) => (state: RootState) => unknown\ntype ParamUpdateActionCreatorType = (\n  path: string,\n  newValue: unknown,\n) => AnyAction\n\nexport type CreateParamFormItemComponentProps = {\n  paramSelector: ParamSelectorType\n  paramValueSelector: ParamValueSelectorType\n  paramUpdateActionCreator: ParamUpdateActionCreatorType\n}\n\nexport function createParamFormItemComponent({\n  paramSelector,\n  paramValueSelector,\n  paramUpdateActionCreator,\n}: CreateParamFormItemComponentProps): React.FC<{ paramKey: string }> {\n  function useParamValueUpdate(\n    path: string,\n  ): [unknown, (newValue: unknown) => AnyAction] {\n    const value = useSelector(paramValueSelector(path))\n    const updateParamAction = (newValue: unknown) => {\n      return paramUpdateActionCreator(path, newValue)\n    }\n    return [value, updateParamAction]\n  }\n  const ParamItemForString = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    const isArray = useRef(Array.isArray(value))\n    const onChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(updateParamAction(newValue))\n    }\n\n    const onBlur = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(\n        updateParamAction(\n          newValue\n            .split(',')\n            .filter(Boolean)\n            .map((e) => Number(e)),\n        ),\n      )\n    }\n    return (\n      <TextField\n        value={value}\n        onChange={onChange}\n        multiline\n        onBlur={isArray ? onBlur : undefined}\n      />\n    )\n  })\n  const ParamItemForNumber = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue =\n          event.target.value === '' ? '' : Number(event.target.value)\n        if (typeof newValue === 'number') {\n          dispatch(updateParamAction(newValue))\n        }\n      }\n      return (\n        <TextField\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={value}\n          onChange={onChange}\n        />\n      )\n    } else {\n      return null\n    }\n  })\n  const ParamItemForBoolean = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'boolean') {\n      const onChange = () => {\n        dispatch(updateParamAction(!value))\n      }\n      return <Switch checked={value} onChange={onChange} />\n    } else {\n      return null\n    }\n  })\n  const ParamItemForValueType = React.memo<ParamChildItemProps>(({ path }) => {\n    const [value] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      return <ParamItemForNumber path={path} />\n    } else if (typeof value === 'string') {\n      return <ParamItemForString path={path} />\n    } else if (typeof value === 'boolean') {\n      return <ParamItemForBoolean path={path} />\n    } else {\n      return <ParamItemForString path={path} />\n    }\n  })\n  const ParamChildItem = React.memo<ParamChildItemProps & { name: string }>(\n    ({ path, name }) => {\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            marginTop: (theme) => theme.spacing(2),\n            marginBottom: (theme) => theme.spacing(2),\n            alignItems: 'center',\n            overflow: 'scroll',\n          }}\n        >\n          <Box\n            style={{ verticalAlign: 'middle' }}\n            sx={{\n              flexGrow: 1,\n              width: '50%',\n            }}\n          >\n            <Typography style={{ overflow: 'scroll' }}>{name}</Typography>\n          </Box>\n          <Box sx={{ width: '50%' }}>\n            <ParamItemForValueType path={path} />\n          </Box>\n        </Box>\n      )\n    },\n  )\n  const ParamItem = React.memo<ParamItemProps>(({ paramKey, param }) => {\n    if (isParamChild(param)) {\n      return <ParamChildItem path={param.path} name={paramKey} />\n    } else {\n      return (\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            {paramKey}\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              {Object.entries(param.children).map(([paramKey, param], i) => (\n                <ParamItem param={param} paramKey={paramKey} />\n              ))}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      )\n    }\n  })\n  return React.memo<{ paramKey: string }>(({ paramKey }) => {\n    const param = useSelector(paramSelector(paramKey)) // 一階層目\n    return <ParamItem paramKey={paramKey} param={param} />\n  })\n}\n\ntype ParamItemProps = {\n  paramKey: string\n  param: ParamType\n}\n\ntype ParamChildItemProps = {\n  path: string\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\nimport { updateParam } from 'store/slice/NWB/NWBSlice'\nimport { getNWBParams } from 'store/slice/NWB/NWBAction'\nimport { toggleNwb } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectNwbParam,\n  selectNwbParamsKeyList,\n  selectNwbParamsValue,\n} from 'store/slice/NWB/NWBSelectors'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const NWBSettingButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleNwb())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      NWB setting\n    </Button>\n  )\n})\n\nexport const NWBSettingContents = React.memo(() => {\n  const dispatch = useDispatch()\n\n  const paramKeyList = useSelector(selectNwbParamsKeyList, arrayEqualityFn)\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getNWBParams())\n    }\n  })\n\n  return (\n    <div className=\"nwbParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectNwbParam,\n    paramValueSelector: selectNwbParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getSnakemakeParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/snakemake`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const SNAKEMAKE_SLICE_NAME = 'Snakemake'\n\nexport type SnakemakeType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getSnakemakeParamsApi } from 'api/snakemake/Snakemake'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nexport const getSnakemakeParams = createAsyncThunk<ParamDTO, void>(\n  `${SNAKEMAKE_SLICE_NAME}/getSnakemakeParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = getSnakemakeParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport { getSnakemakeParams } from './SnakemakeAction'\nimport { SnakemakeType, SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nconst initialState: SnakemakeType = {\n  params: {},\n}\n\nexport const SnakemakeSlice = createSlice({\n  name: SNAKEMAKE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const target = getChildParam(path, state.params)\n      if (target != null) {\n        target.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getSnakemakeParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = SnakemakeSlice.actions\n\nexport default SnakemakeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\n\nimport { updateParam } from 'store/slice/Snakemake/SnakemakeSlice'\nimport { getSnakemakeParams } from 'store/slice/Snakemake/SnakemakeAction'\nimport { toggleSnakemake } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport {\n  selectSnakemakeParam,\n  selectSnakemakeParamsKeyList,\n  selectSnakemakeParamsValue,\n} from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const SnakemakeButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleSnakemake())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      Snakemake\n    </Button>\n  )\n})\n\nexport const SnakemakeContents = React.memo(() => {\n  const dispatch = useDispatch()\n  const paramKeyList = useSelector(\n    selectSnakemakeParamsKeyList,\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getSnakemakeParams())\n    }\n  })\n  return (\n    <div className=\"SnakemakeParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectSnakemakeParam,\n    paramValueSelector: selectSnakemakeParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\nimport Grow from '@mui/material/Grow'\nimport Paper from '@mui/material/Paper'\nimport Popper from '@mui/material/Popper'\nimport MenuItem from '@mui/material/MenuItem'\nimport MenuList from '@mui/material/MenuList'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nimport { useSnackbar } from 'notistack'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport {\n  RUN_BTN_LABELS,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n} from 'store/slice/Pipeline/PipelineType'\nimport {\n  selectPipelineIsStartedSuccess,\n  selectPipelineRunBtn,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\n\nexport const RunButtons = React.memo<UseRunPipelineReturnType>((props) => {\n  const {\n    uid,\n    runDisabled,\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    handleCancelPipeline,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const runBtnOption = useSelector(selectPipelineRunBtn)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n\n  const [dialogOpen, setDialogOpen] = React.useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n  const handleClick = () => {\n    let errorMessage: string | null = null\n    if (algorithmNodeNotExist) {\n      errorMessage = 'please add some algorithm nodes to the flowchart'\n    }\n    if (filePathIsUndefined) {\n      errorMessage = 'please select input file'\n    }\n    if (errorMessage != null) {\n      enqueueSnackbar(errorMessage, {\n        variant: 'error',\n      })\n    } else {\n      if (runBtnOption === RUN_BTN_OPTIONS.RUN_NEW) {\n        setDialogOpen(true)\n      } else {\n        handleRunPipelineByUid()\n      }\n    }\n  }\n  const onClickDialogRun = (name: string) => {\n    handleRunPipeline(name)\n    setDialogOpen(false)\n  }\n  const onClickCancel = () => {\n    handleCancelPipeline()\n  }\n  const [menuOpen, setMenuOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLDivElement>(null)\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    option: RUN_BTN_TYPE,\n  ) => {\n    dispatch(setRunBtnOption({ runBtnOption: option }))\n    setMenuOpen(false)\n  }\n  const handleToggle = () => {\n    setMenuOpen((prevOpen) => !prevOpen)\n  }\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n    setMenuOpen(false)\n  }\n  const uidExists = uid != null\n  return (\n    <>\n      <ButtonGroup\n        sx={{\n          margin: 1,\n        }}\n        variant=\"contained\"\n        ref={anchorRef}\n        disabled={runDisabled}\n      >\n        <Button onClick={handleClick}>{RUN_BTN_LABELS[runBtnOption]}</Button>\n        <Button size=\"small\" onClick={handleToggle}>\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={menuOpen}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList>\n                  {Object.values(RUN_BTN_OPTIONS).map((option) => (\n                    <MenuItem\n                      key={option}\n                      disabled={\n                        !uidExists && option === RUN_BTN_OPTIONS.RUN_ALREADY\n                      }\n                      selected={option === runBtnOption}\n                      onClick={(event) => handleMenuItemClick(event, option)}\n                    >\n                      {RUN_BTN_LABELS[option]}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n      <Button\n        disabled={!isStartedSuccess}\n        variant=\"outlined\"\n        endIcon={<CloseIcon />}\n        onClick={onClickCancel}\n        sx={{\n          margin: 1,\n          marginRight: 4,\n        }}\n      >\n        Cancel\n      </Button>\n      <RunDialog\n        open={dialogOpen}\n        handleRun={onClickDialogRun}\n        handleClose={() => setDialogOpen(false)}\n      />\n    </>\n  )\n})\n\nconst RunDialog = React.memo<{\n  open: boolean\n  handleRun: (name: string) => void\n  handleClose: () => void\n}>(({ open, handleClose, handleRun }) => {\n  const [name, setName] = React.useState('New flow')\n  const [error, setError] = React.useState<string | null>(null)\n  const onClickRun = () => {\n    if (name !== '') {\n      handleRun(name)\n    } else {\n      setError('name is empty')\n    }\n  }\n  const onChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    if (event.target.value !== '') {\n      setError(null)\n    }\n  }\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Name and run flowchart</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"name\"\n          autoFocus\n          margin=\"dense\"\n          fullWidth\n          variant=\"standard\"\n          onChange={onChangeName}\n          error={error != null}\n          helperText={error}\n          value={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"inherit\" variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button onClick={onClickRun} color=\"primary\" variant=\"outlined\">\n          Run\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","import { UploadFile } from '@mui/icons-material'\nimport { Button } from '@mui/material'\nimport { useSnackbar } from 'notistack'\nimport React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { reset } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { importWorkflowConfig } from 'store/slice/Workflow/WorkflowActions'\nimport { AppDispatch } from 'store/store'\n\nexport const ImportWorkflowConfigButton = React.memo(() => {\n  const dispatch: AppDispatch = useDispatch()\n  const inputRef = React.useRef<HTMLInputElement>(null)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = () => {\n    inputRef.current?.click()\n  }\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault()\n    if (event.target.files != null && event.target.files[0] != null) {\n      const file = event.target.files[0]\n      const formData = new FormData()\n      formData.append('file', file)\n      dispatch(importWorkflowConfig({ formData }))\n        .unwrap()\n        .then(() => {\n          enqueueSnackbar('Import success', { variant: 'success' })\n          dispatch(reset())\n        })\n        .catch(() => {\n          enqueueSnackbar('Invalid yaml file', { variant: 'error' })\n        })\n    }\n  }\n\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={onClick}\n      sx={{ margin: (theme) => theme.spacing(1) }}\n      endIcon={<UploadFile />}\n    >\n      Import\n      <input\n        hidden\n        ref={inputRef}\n        type=\"file\"\n        accept=\".yaml,.yml\"\n        onChange={onChange}\n      />\n    </Button>\n  )\n})\n","import React from 'react'\nimport Box from '@mui/material/Box'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { NWBSettingButton } from './FlowChart/NWB'\nimport { SnakemakeButton } from './FlowChart/Snakemake'\nimport { RunButtons } from './RunButtons'\nimport { Button } from '@mui/material'\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'\nimport { useNavigate } from 'react-router-dom'\nimport { IS_STANDALONE } from 'const/Mode'\nimport { ImportWorkflowConfigButton } from './FlowChart/ImportWorkflowConfigButton'\n\nexport const ToolBar = React.memo<UseRunPipelineReturnType>((props) => {\n  const navigate = useNavigate()\n  return (\n    <Box\n      style={{\n        position: 'absolute',\n        float: 'right',\n        textAlign: 'right',\n        top: -7,\n        right: 10,\n        zIndex: 4,\n        textTransform: 'none',\n        fontSize: '1rem',\n      }}\n    >\n      { !IS_STANDALONE &&\n        (\n          <Button onClick={() => navigate('/console/workspaces')}>\n            <ArrowBackIosIcon />\n            Workspaces\n          </Button>\n        )\n      }\n      <ImportWorkflowConfigButton />\n      <SnakemakeButton />\n      <NWBSettingButton />\n      <RunButtons {...props} />\n    </Box>\n  )\n})\n","import { useSelector } from 'react-redux'\nimport { selectHandleTypeColor } from 'store/slice/HandleTypeColor/HandleTypeColorSelectors'\n\nexport function useHandleColor(type: string) {\n  const color = useSelector(selectHandleTypeColor(type))\n  return color\n}\n","import { RootState } from '../../store'\n\nexport const selectHandleTypeColor = (key: string) => (state: RootState) => {\n  if (state.handleColor.colorMap[key] != null) {\n    return state.handleColor.colorMap[key]\n  } else {\n    return undefined\n  }\n}\n","import React from 'react'\nimport LinearProgress, {\n  LinearProgressProps,\n} from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\n\nexport const LinearProgressWithLabel = React.memo<\n  LinearProgressProps & { value: number }\n>((props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  )\n})\n","import { FileUploaderType } from './FileUploaderType'\n\nexport const inistialUploaderState: FileUploaderType = {\n  path: undefined,\n  fileName: undefined,\n  isUninitialized: true,\n  pending: false,\n  fulfilled: false,\n  uploadingProgress: undefined,\n  error: undefined,\n}\n","import { RootState } from 'store/store'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nexport const selectFileUploader = (id: string) => (state: RootState) => {\n  if (Object.keys(state.fileUploader).includes(id)) {\n    return state.fileUploader[id]\n  } else {\n    return inistialUploaderState\n  }\n}\n\nexport const selectUploadFilePath = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).path\n\nexport const selectUploadFileName = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fileName\n\nexport const selectFileUploadIsUninitialized =\n  (id: string) => (state: RootState) =>\n    selectFileUploader(id)(state).isUninitialized\n\nexport const selectFileUploadIsPending = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).pending\n\nexport const selectFileUploadIsFulfilled = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fulfilled\n\nexport const selectFileUploadProgress = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).uploadingProgress\n\nexport const selectFileUploadError = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).error\n","import { nanoid } from '@reduxjs/toolkit'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uploadFile } from './FileUploaderActions'\nimport {\n  selectFileUploadIsPending,\n  selectUploadFilePath,\n  selectFileUploadIsFulfilled,\n  selectFileUploadProgress,\n  selectFileUploadIsUninitialized,\n  selectFileUploadError,\n} from './FileUploaderSelectors'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { selectCurrentWorkspaceId } from '../Workspace/WorkspaceSelector'\n\ntype UseFileUploaderProps = {\n  fileType?: FILE_TYPE\n  nodeId?: string\n}\n\nexport function useFileUploader({ fileType, nodeId }: UseFileUploaderProps) {\n  const dispatch = useDispatch()\n  const id = React.useRef(nanoid())\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const onUploadFile = React.useCallback(\n    (formData: FormData, fileName: string) => {\n      if (workspaceId) {\n        dispatch(\n          uploadFile({\n            workspaceId,\n            requestId: id.current,\n            nodeId,\n            fileName,\n            formData,\n            fileType,\n          }),\n        )\n      } else {\n        throw new Error('workspaceId is undefined')\n      }\n    },\n    [dispatch, workspaceId, fileType, nodeId],\n  )\n  const uninitialized = useSelector(selectFileUploadIsUninitialized(id.current))\n  const filePath = useSelector(selectUploadFilePath(id.current))\n  const pending = useSelector(selectFileUploadIsPending(id.current))\n  const fulfilled = useSelector(selectFileUploadIsFulfilled(id.current))\n  const progress = useSelector(selectFileUploadProgress(id.current))\n  const error = useSelector(selectFileUploadError(id.current))\n  return {\n    filePath,\n    uninitialized,\n    pending,\n    fulfilled,\n    progress,\n    error,\n    onUploadFile,\n  }\n}\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { createContext } from 'react'\n\nexport declare type OpenDialogValue = {\n  filePath: string | string[]\n  open: boolean\n  fileTreeType?: FILE_TREE_TYPE\n  multiSelect: boolean\n  onSelectFile: (path: string | string[]) => void\n}\n\nexport declare type ErrorDialogValue = {\n  anchorElRef: { current: Element | null }\n  message: string\n}\n\nexport const DialogContext = createContext<{\n  onOpen: (nodeId: string) => void\n  onOpenDialogFile: (value: OpenDialogValue) => void\n  onMessageError: (value: ErrorDialogValue) => void\n}>({\n  onOpen: () => null,\n  onOpenDialogFile: () => null,\n  onMessageError: () => null,\n})\n","import React, { useContext } from 'react'\nimport { Button, Typography } from '@mui/material'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { LinearProgressWithLabel } from './LinerProgressWithLabel'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { getLabelByPath } from 'store/slice/FlowElement/FlowElementUtils'\nimport { DialogContext } from 'components/Workspace/FlowChart/DialogContext'\n\nexport const FileSelect = React.memo<{\n  multiSelect?: boolean\n  filePath: string | string[]\n  fileType: FILE_TYPE\n  nodeId?: string\n  onChangeFilePath: (path: string | string[]) => void\n}>(({ multiSelect = false, filePath, nodeId, fileType, onChangeFilePath }) => {\n  const {\n    // filePath: uploadedFilePath,\n    onUploadFile,\n    pending,\n    uninitialized,\n    progress,\n    error,\n  } = useFileUploader({ fileType, nodeId })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n  return (\n    <>\n      {!uninitialized && pending && progress != null && (\n        <div style={{ marginLeft: 2, marginRight: 2 }}>\n          <LinearProgressWithLabel value={progress} />\n        </div>\n      )}\n      <FileSelectImple\n        multiSelect={multiSelect}\n        filePath={filePath}\n        onSelectFile={onChangeFilePath}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={fileType}\n        selectButtonLabel={`Select ${fileType}`}\n      />\n      {error != null && (\n        <Typography variant=\"caption\" color=\"error\">\n          {error}\n        </Typography>\n      )}\n    </>\n  )\n})\n\ntype FileSelectImpleProps = {\n  multiSelect?: boolean\n  filePath: string | string[]\n  onUploadFile: (formData: FormData, fileName: string) => void\n  onSelectFile: (path: string | string[]) => void\n  fileTreeType?: FILE_TREE_TYPE\n  selectButtonLabel?: string\n  uploadButtonLabel?: string\n}\n\nexport const FileSelectImple = React.memo<FileSelectImpleProps>(\n  ({\n    multiSelect = false,\n    filePath,\n    onSelectFile,\n    onUploadFile,\n    fileTreeType,\n    selectButtonLabel,\n    uploadButtonLabel,\n  }) => {\n    const { onOpenDialogFile } = useContext(DialogContext)\n\n    const onFileInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.preventDefault()\n      if (event.target.files != null && event.target.files[0] != null) {\n        const file = event.target.files[0]\n        const formData = new FormData()\n        formData.append('file', file)\n        const fileName = file.name\n        onUploadFile(formData, fileName)\n      }\n    }\n    const inputRef = React.useRef<HTMLInputElement>(null)\n    const onClick = () => {\n      if (inputRef.current != null) {\n        inputRef.current.click()\n      }\n    }\n    const accept = getFileInputAccept(fileTreeType)\n    const fileName = getLabelByPath(filePath)\n    return (\n      <div\n        style={{\n          padding: 5,\n        }}\n      >\n        <ButtonGroup size=\"small\" style={{ marginRight: 4 }}>\n          <Button\n            variant=\"outlined\"\n            onClick={() => {\n              onOpenDialogFile({\n                open: true,\n                multiSelect,\n                filePath,\n                fileTreeType,\n                onSelectFile,\n              })\n            }}\n          >\n            {!!selectButtonLabel ? selectButtonLabel : 'Select File'}\n          </Button>\n          <Button onClick={onClick} variant=\"outlined\">\n            {!!uploadButtonLabel ? uploadButtonLabel : 'Load'}\n          </Button>\n        </ButtonGroup>\n        <div>\n          <input\n            ref={inputRef}\n            type=\"file\"\n            onChange={onFileInputChange}\n            accept={accept}\n            style={{\n              visibility: 'hidden',\n              width: 0,\n              height: 0,\n            }}\n          />\n          <Typography className=\"selectFilePath\" variant=\"caption\">\n            {!!fileName ? fileName : 'No file is selected.'}\n          </Typography>\n        </div>\n      </div>\n    )\n  },\n)\n\nfunction getFileInputAccept(fileType: FILE_TREE_TYPE | undefined) {\n  switch (fileType) {\n    case FILE_TREE_TYPE_SET.IMAGE:\n      return '.tif,.tiff'\n    case FILE_TREE_TYPE_SET.CSV:\n      return '.csv'\n    case FILE_TREE_TYPE_SET.HDF5:\n      return '.hdf5,.nwb'\n    default:\n      return undefined\n  }\n}\n","import { Connection } from 'react-flow-renderer'\n\nexport function toHandleId(nodeId: string, name: string, type: string) {\n  return `${nodeId}--${name}--${type}`\n}\n\nexport function getHandleType(handleId: string) {\n  return handleId.split('--')[2]\n}\n\nexport function isValidConnection(connection: Connection) {\n  if (connection.sourceHandle != null && connection.targetHandle != null) {\n    return (\n      getHandleType(connection.sourceHandle) ===\n      getHandleType(connection.targetHandle)\n    )\n  } else {\n    return true\n  }\n}\n","import React, { CSSProperties } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport {\n  selectImageInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { FileSelect } from './FileSelect'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\n// Connection部分のレイアウト\nconst sourceHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  top: 15,\n  border: '1px solid',\n  // borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const ImageFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <ImageFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst ImageFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected: elementSelected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectImageInputNodeSelectedFilePath(nodeId),\n      (a, b) => (a != null && b != null ? arrayEqualityFn(a, b) : a === b),\n    )\n    const onChangeFilePath = (path: string[]) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n\n    const theme = useTheme()\n    const returnType = 'ImageData'\n    const imageColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowNodeById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '250px',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          multiSelect\n          onChangeFilePath={(path) => {\n            if (Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.IMAGE}\n          filePath={filePath ?? []}\n        />\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'image', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: imageColor,\n          }}\n          isValidConnection={isValidConnection}\n        />\n      </div>\n    )\n  },\n)\n","import React, { CSSProperties, useContext } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport {\n  alpha,\n  Typography,\n  useTheme,\n  Tooltip,\n  IconButton,\n  Button,\n  LinearProgress,\n  ButtonGroup,\n} from '@mui/material'\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded'\nimport ErrorIcon from '@mui/icons-material/Error'\n\nimport { AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  selectAlgoArgs,\n  selectAlgoReturns,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { selectAlgorithmNodeDefined } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { toggleParamForm } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultMessage,\n  selectPipelineNodeResultStatus,\n  selectPipelineStatus,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\nimport {\n  NODE_RESULT_STATUS,\n  RUN_STATUS,\n} from 'store/slice/Pipeline/PipelineType'\nimport { DialogContext } from 'components/Workspace/FlowChart/DialogContext'\n\nconst leftHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\nconst rightHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\n\nexport const AlgorithmNode = React.memo<NodeProps<NodeData>>((element) => {\n  const defined = useSelector(selectAlgorithmNodeDefined(element.id))\n  if (defined) {\n    return <AlgorithmNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst AlgorithmNodeImple = React.memo<NodeProps<NodeData>>(\n  ({ id: nodeId, selected: elementSelected, isConnectable, data }) => {\n    const { onOpen } = useContext(DialogContext)\n    const theme = useTheme()\n    const dispatch = useDispatch()\n\n    const onClickParamButton = () => {\n      dispatch(toggleParamForm(nodeId))\n    }\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowNodeById(nodeId))\n    }\n\n    const onClickOutputButton = () => {\n      onOpen(nodeId)\n    }\n\n    const status = useStatus(nodeId)\n\n    return (\n      <div\n        tabIndex={0}\n        style={{\n          width: '100%',\n          height: '110%',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.15)\n            : undefined,\n          border: '1px solid',\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <AlgoName nodeId={nodeId} data={data} />\n        <ButtonGroup sx={{ mx: 1 }}>\n          <Button size=\"small\" onClick={onClickParamButton}>\n            Param\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={onClickOutputButton}\n            disabled={status !== NODE_RESULT_STATUS.SUCCESS}\n          >\n            Output\n          </Button>\n        </ButtonGroup>\n        <AlgoArgs nodeId={nodeId} />\n        <AlgoReturns nodeId={nodeId} isConnectable={isConnectable} />\n        <Message nodeId={nodeId} />\n      </div>\n    )\n  },\n)\n\nconst AlgoName = React.memo<{\n  nodeId: string\n  data: NodeData\n}>(({ nodeId, data }) => {\n  const theme = useTheme()\n  const status = useStatus(nodeId)\n  const pipelineStatus = useSelector(selectPipelineStatus)\n  return (\n    <div\n      style={{\n        padding: 8,\n        paddingLeft: 8,\n        width: '100%',\n      }}\n      className=\"algoName\"\n    >\n      {pipelineStatus === RUN_STATUS.START_SUCCESS &&\n        status === NODE_RESULT_STATUS.PENDING && <LinearProgress />}\n      <Typography\n        style={{\n          textAlign: 'left',\n          color:\n            status === NODE_RESULT_STATUS.ERROR\n              ? theme.palette.error.main\n              : undefined,\n        }}\n      >\n        {data.label}\n      </Typography>\n    </div>\n  )\n})\n\nconst AlgoArgs = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const algoArgs = useSelector(selectAlgoArgs(nodeId), algoInfoListEqualtyFn)\n\n  return (\n    <>\n      {algoArgs != null\n        ? algoArgs\n            .filter((info) => info.type !== 'params')\n            .map((algoInfo, i) => {\n              return <ArgHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n            })\n        : null}\n    </>\n  )\n})\n\nconst AlgoReturns = React.memo<{\n  nodeId: string\n  isConnectable: boolean\n}>(({ nodeId, isConnectable }) => {\n  const algoReturns = useSelector(\n    selectAlgoReturns(nodeId),\n    algoInfoListEqualtyFn,\n  )\n  return (\n    <>\n      {algoReturns != null ? (\n        algoReturns?.map((algoInfo, i) => {\n          return <ReturnHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n        })\n      ) : (\n        // algoReturns.lengthが0の場合の応急処置\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={`${nodeId}`}\n          style={{\n            ...rightHandleStyle,\n            top: 15,\n          }}\n          isConnectable={isConnectable}\n        />\n      )}\n    </>\n  )\n})\n\ntype HandleProps = {\n  algoInfo: AlgorithmInfo\n  nodeId: string\n  i: number\n}\n\nfunction hexToRgb(hex: string | undefined, isNone: boolean | undefined) {\n  if (hex !== undefined) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n    if (result !== null) {\n      if (isNone) {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 0.55)`\n      } else {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 1)`\n      }\n    } else {\n      return undefined\n    }\n  } else {\n    return undefined\n  }\n}\n\nconst ArgHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type, isNone }, nodeId, i }) => {\n    const hex_color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    const rgb_color = hexToRgb(hex_color, isNone)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"target\"\n        position={Position.Left}\n        id={id}\n        style={{\n          ...leftHandleStyle,\n          background: rgb_color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"left-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst ReturnHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type }, nodeId, i }) => {\n    const color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"source\"\n        position={Position.Right}\n        id={id}\n        style={{\n          ...rightHandleStyle,\n          background: color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"right-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst Message = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const status = useStatus(nodeId)\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const errorMsg = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultMessage(nodeId)(state) ?? null\n      : null,\n  )\n\n  const anchorElRef = React.useRef<HTMLButtonElement | null>(null)\n  const theme = useTheme()\n  const { onMessageError } = useContext(DialogContext)\n\n  if (status === NODE_RESULT_STATUS.ERROR) {\n    return (\n      <IconButton\n        ref={anchorElRef}\n        onClick={() => {\n          onMessageError({ anchorElRef, message: errorMsg as string })\n        }}\n        size=\"small\"\n        style={{ color: theme.palette.error.main, float: 'right' }}\n      >\n        <ErrorIcon />\n      </IconButton>\n    )\n  } else if (status === NODE_RESULT_STATUS.SUCCESS) {\n    return <CheckCircleRoundedIcon color=\"success\" sx={{ float: 'right' }} />\n  } else {\n    return null\n  }\n})\n\nfunction algoInfoListEqualtyFn(\n  a: AlgorithmInfo[] | undefined,\n  b: AlgorithmInfo[] | undefined,\n) {\n  if (a != null && b != null) {\n    return (\n      a === b ||\n      (a.length === b.length &&\n        a.every((v, i) => v.type === b[i].type && v.name === b[i].name))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction useStatus(nodeId: string) {\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const status = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultStatus(nodeId)(state)\n      : 'uninitialized',\n  )\n  return status\n}\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { INITIAL_IMAGE_ELEMENT_ID } from 'const/flowchart'\nimport { fetchExperiment } from '../Experiments/ExperimentsActions'\nimport {\n  reproduceWorkflow,\n  importWorkflowConfig,\n} from 'store/slice/Workflow/WorkflowActions'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\nimport { addInputNode } from '../FlowElement/FlowElementActions'\nimport {\n  deleteFlowNodes,\n  deleteFlowNodeById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { setInputNodeFilePath } from './InputNodeActions'\nimport {\n  CsvInputParamType,\n  FILE_TYPE_SET,\n  InputNode,\n  INPUT_NODE_SLICE_NAME,\n} from './InputNodeType'\nimport { isCsvInputNode, isHDF5InputNode } from './InputNodeUtils'\n\nconst initialState: InputNode = {\n  [INITIAL_IMAGE_ELEMENT_ID]: {\n    fileType: FILE_TYPE_SET.IMAGE,\n    param: {},\n  },\n}\n\nexport const inputNodeSlice = createSlice({\n  name: INPUT_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    deleteInputNode(state, action: PayloadAction<string>) {\n      delete state[action.payload]\n    },\n    setCsvInputNodeParam(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: CsvInputParamType\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId]\n      if (isCsvInputNode(inputNode)) {\n        inputNode.param = param\n      }\n    },\n    setInputNodeHDF5Path(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n      }>,\n    ) {\n      const { nodeId, path } = action.payload\n      const item = state[nodeId]\n      if (isHDF5InputNode(item)) {\n        item.hdf5Path = path\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(setInputNodeFilePath, (state, action) => {\n        const { nodeId, filePath } = action.payload\n        const targetNode = state[nodeId]\n        targetNode.selectedFilePath = filePath\n        if (isHDF5InputNode(targetNode)) {\n          targetNode.hdf5Path = undefined\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        const { node, fileType } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          switch (fileType) {\n            case FILE_TYPE_SET.CSV:\n              state[node.id] = {\n                fileType,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.IMAGE:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.HDF5:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.FLUO:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.BEHAVIOR:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n          }\n        }\n      })\n      .addCase(deleteFlowNodes, (state, action) => {\n        action.payload.forEach((node) => {\n          if (node.data?.type === NODE_TYPE_SET.INPUT) {\n            delete state[node.id]\n          }\n        })\n      })\n      .addCase(deleteFlowNodeById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const { resultPath } = action.payload\n          const target = state[nodeId]\n          if (target.fileType === FILE_TYPE_SET.IMAGE) {\n            target.selectedFilePath = [resultPath]\n          } else {\n            target.selectedFilePath = resultPath\n          }\n        }\n      })\n      .addCase(fetchExperiment.rejected, () => initialState)\n      .addCase(importWorkflowConfig.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isInputNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.IMAGE,\n                  param: {},\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.CSV,\n                  param: node.data.param as CsvInputParamType,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.HDF5,\n                  param: {},\n                }\n              }\n            }\n          })\n        return newState\n      })\n      .addMatcher(\n        isAnyOf(reproduceWorkflow.fulfilled, fetchExperiment.fulfilled),\n        (_, action) => {\n          const newState: InputNode = {}\n          Object.values(action.payload.nodeDict)\n            .filter(isInputNodePostData)\n            .forEach((node) => {\n              if (node.data != null) {\n                if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                  newState[node.id] = {\n                    fileType: FILE_TYPE_SET.IMAGE,\n                    selectedFilePath: node.data.path as string[],\n                    param: {},\n                  }\n                } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                  newState[node.id] = {\n                    fileType: FILE_TYPE_SET.CSV,\n                    selectedFilePath: node.data.path as string,\n                    param: node.data.param as CsvInputParamType,\n                  }\n                } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                  newState[node.id] = {\n                    fileType: FILE_TYPE_SET.HDF5,\n                    hdf5Path: node.data.hdf5Path,\n                    selectedFilePath: node.data.path as string,\n                    param: {},\n                  }\n                }\n              }\n            })\n          return newState\n        },\n      ),\n})\n\nexport const { setCsvInputNodeParam, setInputNodeHDF5Path } =\n  inputNodeSlice.actions\n\nexport default inputNodeSlice.reducer\n","import React from 'react'\nimport { DATA_TYPE } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const DisplayDataContext = React.createContext<{\n  nodeId: string | null\n  filePath: string\n  dataType: DATA_TYPE\n  itemId: number\n}>({ nodeId: '', filePath: '', dataType: 'csv', itemId: NaN })\n","import React from 'react'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectCsvData,\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { CsvData } from 'api/outputs/Outputs'\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const CsvPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (workspaceId && !isInitialized) {\n      dispatch(getCsvData({ path, workspaceId }))\n    }\n  }, [dispatch, isInitialized, path, workspaceId])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <CsvPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst CsvPlotImple = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  return (\n    <PresentationalCsvPlot\n      path={path}\n      transpose={transpose}\n      setHeader={setHeader}\n      setIndex={setIndex}\n    />\n  )\n})\n\n/**\n * CsvFileNodeの設定時に表示するプレビューでも使用することを想定\n *\n * DisplayDataContextに依存しない\n */\nexport const PresentationalCsvPlot = React.memo<{\n  path: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ path, transpose, setIndex, setHeader }) => {\n  const data = useSelector(\n    selectCsvData(path),\n    (a: CsvData | undefined, b: CsvData | undefined) => {\n      if (a != null && b != null) {\n        return twoDimarrayEqualityFn(a, b)\n      } else {\n        return a === undefined && b === undefined\n      }\n    },\n  )\n\n  const csvData = React.useMemo(() => {\n    if (transpose) {\n      return data[0].map((col, i) => data.map((row) => row[i]))\n    }\n    return data\n  }, [data, transpose])\n\n  const header: GridColDef[] = React.useMemo(() => {\n    const headerData = () => {\n      if (setHeader === null) {\n        return csvData[0]\n      } else {\n        if (setHeader >= csvData.length) {\n          return csvData[csvData.length - 1]\n        } else {\n          return csvData[setHeader]\n        }\n      }\n    }\n\n    if (setIndex) {\n      return [\n        { field: 'col0', headerName: 'index', width: 150 },\n        ...headerData().map((value, idx) => {\n          return {\n            field: `col${idx + 1}`,\n            headerName: `${setHeader === null ? idx : value}`,\n            width: 150,\n          }\n        }),\n      ]\n    } else {\n      return headerData().map((value, idx) => {\n        return {\n          field: `col${idx + 1}`,\n          headerName: `${setHeader === null ? idx : value}`,\n          width: 150,\n        }\n      })\n    }\n  }, [csvData, setHeader, setIndex])\n  const rows = csvData\n    .map((row, row_id) => {\n      let rowObj = Object.fromEntries(\n        [row_id, ...row].map((value, index) => {\n          return [`col${index}`, value]\n        }),\n      )\n      rowObj['id'] = row_id\n      return rowObj\n    })\n    .filter(\n      (value, idx) =>\n        setHeader === null || (setHeader !== null && idx > setHeader),\n    )\n\n  return (\n    <div style={{ height: 300, width: '100%' }}>\n      <DataGrid rows={rows} columns={header} />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Switch,\n  FormControlLabel,\n  TextField,\n  Box,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeParamSetHeader,\n  selectCsvInputNodeParamSetIndex,\n  selectCsvInputNodeParamTranspose,\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setCsvInputNodeParam } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { PresentationalCsvPlot } from 'components/Workspace/Visualize/Plot/CsvPlot'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const CsvFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <CsvFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst CsvFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowNodeById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'csv', 'CsvData')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nexport const ParamSettingDialog = React.memo<{\n  nodeId: string\n  filePath: string\n}>(({ nodeId, filePath }) => {\n  const [open, setOpen] = React.useState(false)\n  // OK時のみStoreに反映させるため一時的な値をuseStateで保持しておく。\n  // useStateの初期値はselectorで取得。\n  const [setHeader, setSetHeader] = React.useState(\n    useSelector(selectCsvInputNodeParamSetHeader(nodeId)),\n  )\n  const [setIndex, setSetIndex] = React.useState(\n    useSelector(selectCsvInputNodeParamSetIndex(nodeId)),\n  )\n  const [transpose, setTranspose] = React.useState(\n    useSelector(selectCsvInputNodeParamTranspose(nodeId)),\n  )\n  const dispatch = useDispatch()\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(\n      setCsvInputNodeParam({\n        nodeId,\n        param: { setHeader, setIndex, transpose },\n      }),\n    )\n  }\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>Settings</Button>\n      <Dialog open={open}>\n        <DialogTitle>Csv Setting</DialogTitle>\n        <DialogContent dividers>\n          <Box sx={{ display: 'flex', p: 1, m: 1, alignItems: 'flex-start' }}>\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={transpose}\n                  onChange={(event) => setTranspose(event.target.checked)}\n                />\n              }\n              label=\"Transpose\"\n            />\n            <TextField\n              label=\"header\"\n              sx={{\n                width: 100,\n                margin: (theme) => theme.spacing(0, 1, 0, 1),\n              }}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(event) => {\n                const value = Number(event.target.value)\n                if (value >= 0) {\n                  setSetHeader(value)\n                }\n              }}\n              value={setHeader}\n            />\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={setIndex}\n                  onChange={(event) => setSetIndex(event.target.checked)}\n                />\n              }\n              label=\"Set Index\"\n            />\n          </Box>\n          <Typography variant=\"h6\">Preview</Typography>\n          <CsvPreview\n            filePath={filePath}\n            transpose={transpose}\n            setHeader={setHeader}\n            setIndex={setIndex}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onClickOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst CsvPreview = React.memo<{\n  filePath: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ filePath: path, ...otherProps }) => {\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (workspaceId && !isInitialized) {\n      dispatch(getCsvData({ path, workspaceId }))\n    }\n  }, [dispatch, isInitialized, path, workspaceId])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PresentationalCsvPlot path={path} {...otherProps} />\n  } else {\n    return null\n  }\n})\n","import { RootState } from '../../store'\n\nexport const selectHDF5 = (state: RootState) => {\n  if (state.hdf5 != null) {\n    return state.hdf5\n  } else {\n    return undefined\n  }\n}\n\nexport const selectHDF5Nodes = () => (state: RootState) =>\n  selectHDF5(state)?.tree\n\nexport const selectHDF5IsLoading = () => (state: RootState) =>\n  selectHDF5(state)?.isLoading ?? false\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type HDF5TreeDTO = HDF5DirDTO | HDF5FileDTO\n\nexport interface HDF5DirDTO {\n  isDir: true\n  name: string\n  nodes: HDF5TreeDTO[]\n  path: string\n}\n\nexport interface HDF5FileDTO {\n  isDir: false\n  name: string\n  shape: [number]\n  path: string\n  nbytes: string\n}\n\nexport async function getHDF5TreeApi(\n  path: string,\n  workspaceId: number,\n): Promise<HDF5TreeDTO[]> {\n  const response = await axios.get(\n    `${BASE_URL}/hdf5/${path}?workspace_id=${workspaceId}`,\n  )\n  return response.data\n}\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nexport const HDF5_SLICE_NAME = 'hdf5'\n\nexport interface HDF5Tree {\n  isLoading: boolean\n  tree: HDF5TreeNodeType[]\n}\n\nexport type HDF5TreeNodeType = HDF5TreeDTO\n\nexport const HDF5_TYPE_SET = {\n  ALL: 'all',\n} as const\n\nexport type HDF5_TYPE = typeof HDF5_TYPE_SET[keyof typeof HDF5_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getHDF5TreeApi, HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nimport { HDF5_SLICE_NAME } from './HDF5Type'\n\nexport const getHDF5Tree = createAsyncThunk<\n  HDF5TreeDTO[],\n  { path: string; workspaceId: number }\n>(`${HDF5_SLICE_NAME}/getHDF5Tree`, async ({ path, workspaceId }, thunkAPI) => {\n  try {\n    const response = await getHDF5TreeApi(path, workspaceId)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\n\nimport { alpha, useTheme } from '@mui/material/styles'\nimport Dialog from '@mui/material/Dialog'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectHDF5InputNodeSelectedFilePath,\n  selectInputNodeDefined,\n  selectInputNodeHDF5Path,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeHDF5Path } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectHDF5IsLoading,\n  selectHDF5Nodes,\n} from 'store/slice/HDF5/HDF5Selectors'\nimport { getHDF5Tree } from 'store/slice/HDF5/HDF5Action'\nimport { HDF5TreeNodeType } from 'store/slice/HDF5/HDF5Type'\nimport { Typography } from '@mui/material'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const HDF5FileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <HDF5FileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst HDF5FileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowNodeById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.HDF5}\n        filePath={filePath ?? ''}\n      />\n      {filePath !== undefined && <ItemSelect nodeId={nodeId} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'hdf5', 'HDF5Data')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nconst ItemSelect = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [open, setOpen] = React.useState(false)\n\n  const structureFileName = useSelector(selectInputNodeHDF5Path(nodeId))\n\n  return (\n    <>\n      <Button variant=\"outlined\" size=\"small\" onClick={() => setOpen(true)}>\n        {'Structure'}\n      </Button>\n      <Typography className=\"selectFilePath\" variant=\"caption\">\n        {!!structureFileName ? structureFileName : 'No structure is selected.'}\n      </Typography>\n\n      <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\n        <DialogTitle>{'Select File'}</DialogTitle>\n        <Structure nodeId={nodeId} />\n        <DialogActions>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"inherit\"\n            variant=\"outlined\"\n          >\n            cancel\n          </Button>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"primary\"\n            variant=\"outlined\"\n            autoFocus\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst Structure = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const theme = useTheme()\n  return (\n    <DialogContent dividers>\n      <div\n        style={{\n          height: 300,\n          overflow: 'auto',\n          marginBottom: theme.spacing(1),\n          border: '1px solid',\n          padding: theme.spacing(1),\n          borderColor: theme.palette.divider,\n        }}\n      >\n        <FileTreeView nodeId={nodeId} />\n      </div>\n    </DialogContent>\n  )\n})\n\nconst FileTreeView = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [tree, isLoading] = useHDF5Tree(nodeId)\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView>\n        {tree?.map((node) => (\n          <TreeNode node={node} nodeId={nodeId} />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: HDF5TreeNodeType\n  nodeId: string\n}>(({ node, nodeId }) => {\n  const dispatch = useDispatch()\n\n  const onClickFile = (path: string) => {\n    dispatch(setInputNodeHDF5Path({ nodeId, path }))\n  }\n\n  if (node.isDir) {\n    // Directory\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={node.name}\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode node={childNode} key={i} nodeId={nodeId} />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    // File\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={node.name + `   (shape=${node.shape}, nbytes=${node.nbytes})`}\n        onClick={() => onClickFile(node.path)}\n      />\n    )\n  }\n})\n\nfunction useHDF5Tree(\n  nodeId: string,\n): [HDF5TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectHDF5Nodes())\n  const isLoading = useSelector(selectHDF5IsLoading())\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  React.useEffect(() => {\n    if (workspaceId && !isLoading && filePath) {\n      dispatch(getHDF5Tree({ path: filePath, workspaceId }))\n    }\n  }, [workspaceId, isLoading, filePath, dispatch])\n  return [tree, isLoading]\n}\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const FluoFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <FluoFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst FluoFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n  const returnType = 'FluoData'\n  const fluoColor = useHandleColor(returnType)\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowNodeById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'fluo', returnType)}\n        style={{\n          ...sourceHandleStyle,\n          background: fluoColor,\n        }}\n      />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const BehaviorFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <BehaviorFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst BehaviorFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n    const onChangeFilePath = (path: string) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n    const theme = useTheme()\n    const returnType = 'BehaviorData'\n    const behaviorColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowNodeById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '230px',\n          background: selected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          onChangeFilePath={(path) => {\n            if (!Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.CSV}\n          filePath={filePath ?? ''}\n        />\n        {!!filePath && (\n          <ParamSettingDialog nodeId={nodeId} filePath={filePath} />\n        )}\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'behavior', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: behaviorColor,\n          }}\n        />\n      </div>\n    )\n  },\n)\n","import { ImageFileNode } from 'components/Workspace/FlowChart/FlowChartNode/ImageFileNode'\nimport { AlgorithmNode } from 'components/Workspace/FlowChart/FlowChartNode/AlgorithmNode'\nimport { CsvFileNode } from 'components/Workspace/FlowChart/FlowChartNode/CsvFileNode'\nimport { HDF5FileNode } from 'components/Workspace/FlowChart/FlowChartNode/HDF5FileNode'\nimport { FluoFileNode } from 'components/Workspace/FlowChart/FlowChartNode/FluoFileNode'\nimport { BehaviorFileNode } from 'components/Workspace/FlowChart/FlowChartNode/BehaviorFileNode'\n\nimport { CustomEdge } from 'components/Workspace/FlowChart/CustomEdge'\n\nexport const reactFlowNodeTypes = {\n  ImageFileNode,\n  CsvFileNode,\n  HDF5FileNode,\n  AlgorithmNode,\n  FluoFileNode,\n  BehaviorFileNode,\n} as const\n\nexport const reactFlowEdgeTypes = {\n  buttonedge: CustomEdge,\n} as const\n","import { useDispatch } from 'react-redux'\nimport { EdgeProps, getBezierPath, getEdgeCenter } from 'react-flow-renderer'\nimport { deleteFlowEdgeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport 'style/flowbutton.css'\n\nconst foreignObjectSize = 40\n\nexport const CustomEdge: React.FC<EdgeProps> = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  markerEnd,\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  })\n\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  })\n\n  const dispatch = useDispatch()\n\n  const onEdgeClick = () => {\n    dispatch(deleteFlowEdgeById(id))\n  }\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <foreignObject\n        width={foreignObjectSize}\n        height={foreignObjectSize}\n        x={edgeCenterX - foreignObjectSize / 2}\n        y={edgeCenterY - foreignObjectSize / 2}\n        className=\"edgebutton-foreignobject\"\n      >\n        <button className=\"flowbutton\" onClick={onEdgeClick}>\n          ×\n        </button>\n      </foreignObject>\n    </>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectHeatMapColumns,\n  selectHeatMapData,\n  selectHeatMapDataError,\n  selectHeatMapDataIsFulfilled,\n  selectHeatMapDataIsInitialized,\n  selectHeatMapDataIsPending,\n  selectHeatMapIndex,\n  selectHeatMapMeta,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHeatMapData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const HeatMapPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHeatMapDataIsPending(path))\n  const isInitialized = useSelector(selectHeatMapDataIsInitialized(path))\n  const error = useSelector(selectHeatMapDataError(path))\n  const isFulfilled = useSelector(selectHeatMapDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHeatMapData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HeatMapImple />\n  } else {\n    return null\n  }\n})\n\nconst HeatMapImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const heatMapData = useSelector(selectHeatMapData(path), heatMapDataEqualtyFn)\n  const meta = useSelector(selectHeatMapMeta(path))\n  const columns = useSelector(selectHeatMapColumns(path))\n  const index = useSelector(selectHeatMapIndex(path))\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const colorscale = useSelector(selectHeatMapItemColors(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      heatMapData != null\n        ? [\n            {\n              z: heatMapData,\n              x: columns,\n              y: index,\n              type: 'heatmap',\n              name: 'heatmap',\n              colorscale: colorscale.map((value) => {\n                let offset: number = parseFloat(value.offset)\n                const offsets: number[] = colorscale.map((v) => {\n                  return parseFloat(v.offset)\n                })\n                // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n                if (offset === Math.max(...offsets)) {\n                  offset = 1.0\n                }\n                if (offset === Math.min(...offsets)) {\n                  offset = 0.0\n                }\n                return [offset, value.rgb]\n              }),\n              hoverongaps: false,\n              showlegend: true,\n              showscale: showscale,\n            },\n          ]\n        : [],\n    [heatMapData, showscale, colorscale, columns, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      title: {\n        text: meta?.title,\n        x: 0.1,\n      },\n      width: width,\n      height: height - 50,\n      dragmode: 'pan',\n      margin: {\n        t: 50, // top\n        l: 50, // left\n        b: 40, // bottom\n      },\n      autosize: true,\n      xaxis: {\n        title: meta?.xlabel,\n      },\n      yaxis: {\n        title: meta?.ylabel,\n      },\n    }),\n    [meta, width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction heatMapDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, {\n  useCallback,\n  useEffect,\n  useState,\n  MouseEvent,\n  useRef,\n} from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from 'store/store'\nimport {\n  Datum,\n  LayoutAxis,\n  PlotData,\n  PlotMouseEvent,\n  PlotSelectionEvent,\n} from 'plotly.js'\nimport createColormap from 'colormap'\nimport { Button, LinearProgress, TextField, Typography } from '@mui/material'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport Slider from '@mui/material/Slider'\nimport Box from '@mui/material/Box'\nimport { styled } from '@mui/material/styles'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport { DisplayDataContext } from '../DataContext'\n\nimport {\n  selectImageDataError,\n  selectImageDataIsInitialized,\n  selectImageDataIsPending,\n  selectImageDataIsFulfilled,\n  selectActiveImageData,\n  selectRoiData,\n  selectImageDataMaxSize,\n  selectImageMeta,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getImageData,\n  getRoiData,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowLine,\n  selectImageItemShowGrid,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemActiveIndex,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectRoiItemFilePath,\n  selectRoiItemIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemDuration,\n  selectVisualizeItemWidth,\n  selectVisualizeItemHeight,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n  selectImageItemAlpha,\n  selectRoiItemOutputKeys,\n  selectVisualizeItems,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  incrementImageActiveIndex,\n  resetAllOrderList,\n  setImageActiveIndex,\n  setImageItemDuration,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  selectingImageArea,\n  setImageItemClikedDataId,\n} from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { addRoiApi, deleteRoiApi, mergeRoiApi } from 'api/outputs/Outputs'\nimport { isTimeSeriesItem } from 'store/slice/VisualizeItem/VisualizeItemUtils'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\ninterface PointClick {\n  x: number\n  y: number\n  z: number\n}\n\nconst WIDTH_CHARTJS = 321\nconst INIT_WIDTH_ROI = 30\n\nconst initSizeDrag = {\n  width: INIT_WIDTH_ROI,\n  height: INIT_WIDTH_ROI,\n  left: Math.floor((WIDTH_CHARTJS - INIT_WIDTH_ROI) / 2),\n  top: Math.floor((WIDTH_CHARTJS - INIT_WIDTH_ROI) / 2),\n}\n\nenum PositionDrag {\n  'LEFT' = 'LEFT',\n  'RIGHT' = 'RIGHT',\n  'BOTTOM' = 'BOTTOM',\n  'TOP' = 'TOP',\n}\n\nconst sChart = 320\n\nexport const ImagePlot = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const isPending = useSelector(selectImageDataIsPending(path))\n  const isInitialized = useSelector(selectImageDataIsInitialized(path))\n  const isFulfilled = useSelector(selectImageDataIsFulfilled(path))\n  const error = useSelector(selectImageDataError(path))\n\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (workspaceId) {\n      if (!isInitialized) {\n        dispatch(\n          getImageData({\n            path,\n            workspaceId,\n            startIndex: startIndex ?? 1,\n            endIndex: endIndex ?? 10,\n          }),\n        )\n      }\n      if (roiFilePath != null) {\n        dispatch(getRoiData({ path: roiFilePath, workspaceId }))\n      }\n    }\n  }, [\n    dispatch,\n    isInitialized,\n    path,\n    workspaceId,\n    startIndex,\n    endIndex,\n    roiFilePath,\n  ])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ImagePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ImagePlotImple = React.memo(() => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const activeIndex = useSelector(selectImageItemActiveIndex(itemId))\n  return <ImagePlotChart activeIndex={activeIndex} />\n})\n\nconst ImagePlotChart = React.memo<{\n  activeIndex: number\n}>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(\n    selectActiveImageData(path, activeIndex),\n    imageDataEqualtyFn,\n  )\n  const meta = useSelector(selectImageMeta(path))\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const roiData = useSelector(\n    (state: RootState) =>\n      roiFilePath != null ? selectRoiData(roiFilePath)(state) : [],\n    imageDataEqualtyFn,\n  )\n\n  const [isAddRoi, setIsAddRoi] = useState(false)\n  const [loadingApi, setLoadingApi] = useState(false)\n\n  const [roiDataState, setRoiDataState] = useState(roiData)\n\n  const [pointClick, setPointClick] = useState<PointClick[]>([])\n\n  const itemsVisual = useSelector(selectVisualizeItems)\n\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const colorscale = useSelector(selectImageItemColors(itemId))\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const timeDataMaxIndex = useSelector(selectRoiItemIndex(itemId, roiFilePath))\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const [sizeDrag, setSizeDrag] = useState(initSizeDrag)\n\n  const [startDragAddRoi, setStartDragAddRoi] = useState(false)\n  const [positionDrag, setChangeSize] = useState<PositionDrag | undefined>()\n\n  const outputKey: string | null = useSelector(selectRoiItemOutputKeys(itemId))\n\n  const refPageXSize = useRef(0)\n  const refPageYSize = useRef(0)\n\n  const colorscaleRoi = createColormap({\n    colormap: 'jet',\n    nshades: 100, //timeDataMaxIndex >= 6 ? timeDataMaxIndex : 6,\n    format: 'rgba',\n    alpha: 1.0,\n  })\n\n  useEffect(() => {\n    setRoiDataState(roiData)\n  }, [roiData])\n\n  useEffect(() => {\n    onCancel()\n    onCancelAdd()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [outputKey, roiFilePath])\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'images',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          const rgb = value.rgb\n            .replace(/[^0-9,]/g, '')\n            .split(',')\n            .map((x) => Number(x))\n          const hex = rgba2hex(rgb, alpha)\n          return [offset, hex]\n        }),\n        // hoverinfo: isAddRoi || pointClick.length ? 'none' : undefined,\n        hoverongaps: false,\n        showscale: showscale,\n        zsmooth: zsmooth, // ['best', 'fast', false]\n      },\n      {\n        z: roiDataState,\n        type: 'heatmap',\n        name: 'roi',\n        hovertemplate: isAddRoi ? 'none' : 'cell id: %{z}',\n        // hoverinfo: isAddRoi || pointClick.length ? 'none' : undefined,\n        colorscale: [...Array(timeDataMaxIndex + 1)].map((_, i) => {\n          const new_i = Math.floor(((i % 10) * 10 + i / 10) % 100)\n          const offset: number = i / timeDataMaxIndex\n          const rgba = colorscaleRoi[new_i]\n          const hex = rgba2hex(rgba, roiAlpha)\n          return [offset, hex]\n        }),\n        zmin: 0,\n        zmax: timeDataMaxIndex,\n        hoverongaps: false,\n        zsmooth: false,\n        showscale: false,\n      },\n    ],\n    [\n      imageData,\n      roiDataState,\n      zsmooth,\n      showscale,\n      colorscale,\n      colorscaleRoi,\n      timeDataMaxIndex,\n      roiAlpha,\n      alpha,\n      isAddRoi,\n    ],\n  )\n\n  const [selectMode, setSelectMode] = React.useState(false)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectMode(event.target.checked)\n  }\n  // debounceでイベントを間引きする。onSelectedはそれっぽい名前だが動かなかった。\n  const onSelecting = debounce((event: PlotSelectionEvent) => {\n    if (event.range != null) {\n      dispatch(selectingImageArea({ itemId, range: event.range }))\n    }\n  })\n  const layout = React.useMemo(\n    () => ({\n      title: {\n        text: meta?.title,\n        x: 0.1,\n      },\n      width: width,\n      height: height - 130,\n      margin: {\n        t: 30, // top\n        l: 100, // left\n        b: 20, // bottom\n      },\n      dragmode: selectMode ? 'select' : 'pan',\n      xaxis: {\n        title: meta?.xlabel,\n        autorange: true,\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n        showticklabels: showticklabels,\n      },\n      yaxis: {\n        title: meta?.ylabel,\n        automargin: true,\n        autorange: 'reversed',\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n        showticklabels: showticklabels, // todo\n      },\n    }),\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n    [meta, showgrid, showline, showticklabels, width, height, selectMode, isAddRoi],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n      // scale: number;\n      // format: 'png' | 'svg' | 'jpeg' | 'webp';\n      // height: number;\n      // width: number;\n    },\n  }\n\n  const onChartClick = (event: PlotMouseEvent) => {\n    const point: PlotDatum = event.points[0] as PlotDatum\n    if (point.curveNumber >= 1 && outputKey === 'cell_roi') {\n      setSelectRoi({\n        x: Number(point.x),\n        y: Number(point.y),\n        z: Number(point.z),\n      })\n    }\n    if (point.curveNumber >= 1 && point.z >= 0) {\n      dispatch(\n        setImageItemClikedDataId({\n          itemId,\n          clickedDataId: point.z.toString(),\n        }),\n      )\n    }\n  }\n\n  const setSelectRoi = (point: PointClick) => {\n    if (typeof point.z !== 'number' || point.z === -1) return\n    const newPoints = [...pointClick, point]\n    const newRoi = roiDataState.map((roi) => {\n      return roi.map((element) => {\n        if (newPoints.some((p) => p.z === element)) {\n          return -1\n        }\n        return element\n      })\n    })\n    setPointClick([...pointClick, point])\n    setRoiDataState(newRoi)\n  }\n\n  const onCancel = () => {\n    setPointClick([])\n    setRoiDataState(roiData)\n  }\n\n  const addRoi = () => {\n    setIsAddRoi(true)\n  }\n\n  const onCancelAdd = () => {\n    setIsAddRoi(false)\n    setSizeDrag(initSizeDrag)\n    setChangeSize(undefined)\n  }\n\n  const onMouseDownDragAddRoi = () => {\n    setStartDragAddRoi(true)\n  }\n\n  const onMouseUpDragAddRoi = () => {\n    setStartDragAddRoi(false)\n    setChangeSize(undefined)\n  }\n\n  const onMouseDownSize = (position: PositionDrag, event: MouseEvent) => {\n    setChangeSize(position)\n    refPageXSize.current = event.pageX\n    refPageYSize.current = event.pageY\n  }\n\n  const onMouseMoveAddRoi = (event: MouseEvent<HTMLDivElement>) => {\n    const { pageX, pageY } = event\n    let newSizeDrag\n    if (startDragAddRoi) {\n      const { y } = event.currentTarget.getBoundingClientRect()\n      let newX = sizeDrag.left + (pageX - refPageXSize.current)\n      let newY = Math.ceil(pageY - y - 15) - window.scrollY\n\n      if (newX < 0) newX = 0\n      else if (newX + sizeDrag.width > sChart) newX = sChart - sizeDrag.width\n      if (newY < 0) newY = 0\n      else if (newY + sizeDrag.height > sChart) newY = sChart - sizeDrag.height\n      newSizeDrag = { ...sizeDrag, left: newX, top: newY }\n    } else if (positionDrag === PositionDrag.LEFT) {\n      const newWidth = sizeDrag.width - (pageX - refPageXSize.current)\n      const newLeft = sizeDrag.left + (pageX - refPageXSize.current)\n      if (newWidth < 10 || newLeft < 1) return\n      newSizeDrag = { ...sizeDrag, width: newWidth, left: newLeft }\n    } else if (positionDrag === PositionDrag.RIGHT) {\n      const newWidth = sizeDrag.width + (pageX - refPageXSize.current)\n      if (newWidth < 10 || newWidth > sChart - sizeDrag.left) return\n      newSizeDrag = { ...sizeDrag, width: newWidth }\n    } else if (positionDrag === PositionDrag.BOTTOM) {\n      const newHeight = sizeDrag.height + (pageY - refPageYSize.current)\n      if (newHeight < 10 || newHeight > sChart - sizeDrag.top) return\n      newSizeDrag = { ...sizeDrag, height: newHeight }\n    } else if (positionDrag === PositionDrag.TOP) {\n      const newHeight = sizeDrag.height - (pageY - refPageYSize.current)\n      const newTop = sizeDrag.top + (pageY - refPageYSize.current)\n      if (newHeight < 10 || newTop < 1) return\n      newSizeDrag = { ...sizeDrag, height: newHeight, top: newTop }\n    }\n    if (newSizeDrag) setSizeDrag({ ...sizeDrag, ...newSizeDrag })\n    refPageXSize.current = pageX\n    refPageYSize.current = pageY\n  }\n\n  const addRoiSubmit = async () => {\n    if (!roiFilePath || loadingApi) return\n    setLoadingApi(true)\n    const sizeX = roiDataState[0].length - 1\n    const sizeY = roiDataState.length - 1\n    const xAdd = Number(((sizeDrag.width + 2) / (sChart / sizeX)).toFixed(1))\n    const yAdd = Number(((sizeDrag.height + 2) / (sChart / sizeY)).toFixed(1))\n    const x = Number((sizeDrag.left / (sChart / sizeX)).toFixed(1))\n    const y = Number((sizeDrag.top / (sChart / sizeY)).toFixed(1))\n\n    const pointCenter = {\n      posx: x + Math.floor(xAdd / 2),\n      posy: y + Math.floor(yAdd / 2),\n      sizex: xAdd,\n      sizey: yAdd,\n    }\n    dispatch(resetAllOrderList())\n    try {\n      await addRoiApi(roiFilePath, pointCenter)\n    } catch {}\n    setLoadingApi(false)\n    onCancelAdd()\n    workspaceId && dispatch(getRoiData({ path: roiFilePath, workspaceId }))\n    resetTimeSeries()\n  }\n\n  const onMergeRoi = async () => {\n    if (!roiFilePath || loadingApi) return\n    setLoadingApi(true)\n    dispatch(resetAllOrderList())\n    try {\n      await mergeRoiApi(roiFilePath, {\n        ids: pointClick.map((point) => point.z),\n      })\n    } catch {}\n    setLoadingApi(false)\n    onCancel()\n    workspaceId && dispatch(getRoiData({ path: roiFilePath, workspaceId }))\n    resetTimeSeries()\n  }\n\n  const onDeleteRoi = async () => {\n    if (!roiFilePath || loadingApi) return\n    setLoadingApi(true)\n    dispatch(resetAllOrderList())\n    try {\n      await deleteRoiApi(roiFilePath, {\n        ids: pointClick.map((point) => point.z),\n      })\n    } catch {}\n    setLoadingApi(false)\n    onCancel()\n    workspaceId && dispatch(getRoiData({ path: roiFilePath, workspaceId }))\n    resetTimeSeries()\n  }\n\n  const resetTimeSeries = () => {\n    if (itemsVisual) {\n      Object.keys(itemsVisual).forEach((item) => {\n        if (isTimeSeriesItem(itemsVisual[item])) {\n          dispatch(\n            getTimeSeriesInitData({\n              path: itemsVisual[item].filePath as string,\n              itemId: Number(item),\n            }),\n          )\n        }\n      })\n    }\n  }\n\n  const renderActionRoi = () => {\n    if (!roiDataState?.length || outputKey !== 'cell_roi') return null\n    if (!isAddRoi) {\n      return <LinkDiv onClick={addRoi}>Add ROI</LinkDiv>\n    }\n    return (\n      <BoxDiv>\n        <LinkDiv\n          style={{\n            opacity: loadingApi ? 0.5 : 1,\n            cursor: loadingApi ? 'progress' : 'pointer',\n          }}\n          onClick={addRoiSubmit}\n        >\n          OK\n        </LinkDiv>\n        <LinkDiv\n          style={{\n            opacity: loadingApi ? 0.5 : 1,\n            cursor: loadingApi ? 'progress' : 'pointer',\n          }}\n          onClick={onCancelAdd}\n        >\n          Cancel\n        </LinkDiv>\n      </BoxDiv>\n    )\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, mt: 1 }}>\n          <PlayBack activeIndex={activeIndex} />\n        </Box>\n        <FormControlLabel\n          sx={{ ml: 1 }}\n          control={<Switch checked={selectMode} onChange={handleChange} />}\n          label=\"drag select\"\n        />\n      </Box>\n      <Box sx={{ minHeight: 5.5 }}>\n        {pointClick.length ? (\n          <>\n            <BoxDiv>\n              <span>ROI Selecteds: [{String(pointClick.map((e) => e.z))}]</span>\n            </BoxDiv>\n            <BoxDiv>\n              {pointClick.length >= 2 ? (\n                <LinkDiv\n                  sx={{ ml: 0, opacity: loadingApi ? 0.5 : 1 }}\n                  onClick={onMergeRoi}\n                >\n                  Merge ROI\n                </LinkDiv>\n              ) : null}\n              <LinkDiv\n                sx={{ color: '#F84E1B', opacity: loadingApi ? 0.5 : 1 }}\n                onClick={onDeleteRoi}\n              >\n                Delete ROI\n              </LinkDiv>\n              <LinkDiv\n                sx={{ opacity: loadingApi ? 0.5 : 1 }}\n                onClick={onCancel}\n              >\n                Cancel\n              </LinkDiv>\n            </BoxDiv>\n          </>\n        ) : (\n          renderActionRoi()\n        )}\n      </Box>\n      <div style={{ position: 'relative' }}>\n        <PlotlyChart\n          data={data}\n          layout={layout}\n          config={config}\n          onClick={onChartClick}\n          onSelecting={onSelecting}\n        />\n        {isAddRoi ? (\n          <DivAddRoi>\n            <DivSvg\n              onMouseLeave={onMouseUpDragAddRoi}\n              onMouseMove={onMouseMoveAddRoi}\n              onMouseUp={onMouseUpDragAddRoi}\n            >\n              <DivDrag style={sizeDrag}>\n                <DragCenter\n                  onMouseDown={onMouseDownDragAddRoi}\n                  style={{\n                    width: sizeDrag.width - 1,\n                    height: sizeDrag.height - 1,\n                    cursor: !startDragAddRoi ? 'grab' : 'grabbing',\n                  }}\n                />\n                <DragSizeLeft\n                  onMouseDown={(event) =>\n                    onMouseDownSize(PositionDrag.LEFT, event)\n                  }\n                />\n                <DragSizeRight\n                  onMouseDown={(event) => {\n                    onMouseDownSize(PositionDrag.RIGHT, event)\n                  }}\n                />\n                <DragSizeTop\n                  onMouseDown={(event) => {\n                    onMouseDownSize(PositionDrag.TOP, event)\n                  }}\n                />\n                <DragSizeBottom\n                  onMouseDown={(event) => {\n                    onMouseDownSize(PositionDrag.BOTTOM, event)\n                  }}\n                />\n              </DivDrag>\n            </DivSvg>\n          </DivAddRoi>\n        ) : null}\n      </div>\n    </div>\n  )\n})\n\nconst PlayBack = React.memo<{ activeIndex: number }>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const maxSize = useSelector(selectImageDataMaxSize(path))\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const duration = useSelector(selectImageItemDuration(itemId))\n\n  const onSliderChange = (\n    event: Event,\n    value: number | number[],\n    activeThumb: number,\n  ) => {\n    if (typeof value === 'number') {\n      const newIndex = value - startIndex\n      if (newIndex >= 0 && newIndex !== activeIndex) {\n        dispatch(setImageActiveIndex({ itemId, activeIndex: newIndex }))\n      }\n    }\n  }\n\n  const intervalRef = React.useRef<null | NodeJS.Timeout>(null)\n\n  useEffect(() => {\n    if (intervalRef.current !== null) {\n      if (activeIndex >= maxSize) {\n        clearInterval(intervalRef.current)\n        intervalRef.current = null\n      }\n    }\n  }, [activeIndex, maxSize])\n\n  const onPlayClick = useCallback(() => {\n    if (activeIndex >= maxSize) {\n      dispatch(setImageActiveIndex({ itemId, activeIndex: 0 }))\n    }\n    if (maxSize > 1 && intervalRef.current === null) {\n      intervalRef.current = setInterval(() => {\n        dispatch(incrementImageActiveIndex({ itemId }))\n      }, duration)\n    }\n  }, [activeIndex, maxSize, dispatch, duration, itemId])\n\n  const onPauseClick = () => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current)\n      intervalRef.current = null\n    }\n  }\n\n  const onDurationChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue =\n        event.target.value === '' ? '' : Number(event.target.value)\n      if (typeof newValue === 'number') {\n        dispatch(setImageItemDuration({ itemId, duration: newValue }))\n      }\n    },\n    [dispatch, itemId],\n  )\n  return (\n    <>\n      <Button sx={{ mt: 1.5 }} variant=\"outlined\" onClick={onPlayClick}>\n        Play\n      </Button>\n      <Button sx={{ mt: 1.5, ml: 1 }} variant=\"outlined\" onClick={onPauseClick}>\n        Pause\n      </Button>\n      <TextField\n        sx={{ width: 100, ml: 2 }}\n        label=\"Duration [msec]\"\n        type=\"number\"\n        inputProps={{\n          step: 100,\n          min: 0,\n          max: 1000,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onDurationChange}\n        value={duration}\n      />\n      <Slider\n        aria-label=\"Custom marks\"\n        defaultValue={20}\n        value={startIndex + activeIndex}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        marks\n        min={startIndex}\n        max={maxSize === 0 ? 0 : endIndex}\n        onChange={onSliderChange}\n      />\n    </>\n  )\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\ninterface PlotDatum {\n  curveNumber: number\n  data: PlotData\n  customdata: Datum\n  pointIndex: number\n  pointNumber: number\n  x: Datum\n  xaxis: LayoutAxis\n  y: Datum\n  yaxis: LayoutAxis\n  z: number\n}\n\nfunction rgba2hex(rgba: number[], alpha: number) {\n  const r = rgba[0]\n  const g = rgba[1]\n  const b = rgba[2]\n  const a = alpha\n\n  var outParts = [\n    r.toString(16),\n    g.toString(16),\n    b.toString(16),\n    Math.round(a * 255)\n      .toString(16)\n      .substring(0, 2),\n  ]\n\n  // Pad single-digit output values\n  outParts.forEach(function (part, i) {\n    if (part.length === 1) {\n      outParts[i] = '0' + part\n    }\n  })\n\n  return `#${outParts.join('')}`\n}\n\nfunction debounce<T extends (...args: any[]) => unknown>(\n  callback: T,\n  delay = 500,\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout\n  return (...args) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => callback(...args), delay)\n  }\n}\n\nconst BoxDiv = styled('div')({\n  mt: 1,\n  display: 'flex',\n  alignItems: 'center',\n  listStyle: 'none',\n  padding: 0,\n  margin: 0,\n})\n\nconst LinkDiv = styled('div')({\n  marginLeft: 16,\n  textDecoration: 'underline',\n  cursor: 'pointer',\n  color: '#1155cc',\n  zIndex: 999,\n  position: 'relative',\n})\n\nconst DivAddRoi = styled('div')({\n  width: '100%',\n  height: '100%',\n  position: 'absolute',\n  left: 0,\n  top: 0,\n  borderRadius: 100,\n})\n\nconst DivSvg = styled('div')({\n  width: 321,\n  height: 321,\n  marginTop: 30,\n  marginLeft: 99,\n  position: 'relative',\n})\n\nconst DivDrag = styled('div')({\n  border: '1px solid #ffffff',\n  position: 'absolute',\n  borderRadius: 100,\n})\n\nconst DragCenter = styled('div')({\n  borderRadius: 100,\n  cursor: 'grab',\n})\n\nconst DragSize = styled('div')({\n  width: 3,\n  height: 3,\n  borderRadius: 100,\n  position: 'absolute',\n  background: '#fff',\n})\n\nconst DragSizeLeft = styled(DragSize)({\n  top: `calc(50% - 1px)`,\n  left: -2,\n  cursor: 'ew-resize',\n})\n\nconst DragSizeRight = styled(DragSize)({\n  top: `calc(50% - 1px)`,\n  right: -2,\n  cursor: 'ew-resize',\n})\n\nconst DragSizeTop = styled(DragSize)({\n  top: -2,\n  right: `calc(50% - 1px)`,\n  cursor: 'ns-resize',\n})\n\nconst DragSizeBottom = styled(DragSize)({\n  bottom: -2,\n  right: `calc(50% - 1px)`,\n  cursor: 'ns-resize',\n})\n","import React from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectRoiData,\n  selectRoiDataError,\n  selectRoiDataIsFulfilled,\n  selectRoiDataIsInitialized,\n  selectRoiDataIsPending,\n  selectRoiMeta,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { getRoiData } from 'store/slice/DisplayData/DisplayDataActions'\nimport createColormap from 'colormap'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const RoiPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isPending = useSelector(selectRoiDataIsPending(path))\n  const isInitialized = useSelector(selectRoiDataIsInitialized(path))\n  const isFulfilled = useSelector(selectRoiDataIsFulfilled(path))\n  const error = useSelector(selectRoiDataError(path))\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (workspaceId && !isInitialized) {\n      dispatch(getRoiData({ path, workspaceId }))\n    }\n  }, [dispatch, isInitialized, path, workspaceId])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <RoiPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst RoiPlotImple = React.memo<{}>(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(selectRoiData(path), imageDataEqualtyFn)\n  const meta = useSelector(selectRoiMeta(path))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscale: ColorType[] = createColormap({\n    colormap: 'jet',\n    nshades: 10,\n    format: 'hex',\n    alpha: 1,\n  }).map((v, idx) => {\n    return { rgb: v, offset: String(idx / 9) }\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'roi',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          return [offset, value.rgb]\n        }),\n        hoverongaps: false,\n        // zsmooth: zsmooth, // ['best', 'fast', false]\n        zsmooth: false,\n        showlegend: true,\n      },\n    ],\n    [imageData, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      title: {\n        text: meta?.title,\n        x: 0.1,\n      },\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      xaxis: {\n        title: meta?.xlabel,\n        autorange: true,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n      },\n      yaxis: {\n        title: meta?.ylabel,\n        autorange: 'reversed',\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n      },\n    }),\n    [meta, width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectScatterData,\n  selectScatterDataError,\n  selectScatterDataIsFulfilled,\n  selectScatterDataIsInitialized,\n  selectScatterDataIsPending,\n  selectScatterMeta,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getScatterData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { ScatterData } from 'api/outputs/Outputs'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const ScatterPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectScatterDataIsPending(path))\n  const isInitialized = useSelector(selectScatterDataIsInitialized(path))\n  const error = useSelector(selectScatterDataError(path))\n  const isFulfilled = useSelector(selectScatterDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getScatterData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ScatterPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ScatterPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const scatterData = useSelector(\n    selectScatterData(path),\n    scatterDataEqualityFn,\n  )\n  const meta = useSelector(selectScatterMeta(path))\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: scatterData[xIndex],\n        y: scatterData[yIndex],\n        type: 'scatter',\n        mode: 'markers', //'markers+text',\n        text: Object.keys(scatterData[xIndex]),\n        textposition: 'top center',\n        textfont: {\n          family: 'Raleway, sans-serif',\n        },\n        marker: {\n          size: 5,\n          color: Object.keys(scatterData[xIndex]),\n        },\n      },\n    ],\n    [scatterData, xIndex, yIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      title: {\n        text: meta?.title,\n        x: 0.1,\n      },\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 50, // top\n        l: 50, // left\n        b: 40, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      xaxis: {\n        title: {\n          text: meta?.xlabel ?? `x: ${xIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: meta?.ylabel ?? `y: ${yIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n    }),\n    [meta, xIndex, yIndex, width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <XIndex dataKeys={Object.keys(scatterData)} />\n          <YIndex dataKeys={Object.keys(scatterData)} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst XIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemXIndex({\n        itemId,\n        xIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>xIndex</InputLabel>\n      <Select label=\"smooth\" value={xIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst YIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemYIndex({\n        itemId,\n        yIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>yIndex</InputLabel>\n      <Select label=\"smooth\" value={yIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction scatterDataEqualityFn(\n  a: ScatterData | undefined,\n  b: ScatterData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, {useEffect, useState} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LegendClickEvent } from 'plotly.js'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectTimeSeriesData,\n  selectTimeSeriesDataError,\n  selectTimeSeriesDataIsFulfilled,\n  selectTimeSeriesDataIsInitialized,\n  selectTimeSeriesDataIsPending,\n  selectTimeSeriesStd,\n  selectTimeSeriesXrange,\n  selectTimesSeriesMeta,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getTimeSeriesDataById,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { TimeSeriesData } from 'api/outputs/Outputs'\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectTimeSeriesItemKeys,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n  selectImageItemRangeUnit,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport createColormap from 'colormap'\nimport { setTimeSeriesItemDrawOrderList } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { selectFrameRate } from \"../../../../store/slice/Experiments/ExperimentsSelectors\";\nimport {selectPipelineLatestUid} from \"../../../../store/slice/Pipeline/PipelineSelectors\";\n\nexport const TimeSeriesPlot = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectTimeSeriesDataIsPending(path))\n  const isInitialized = useSelector(selectTimeSeriesDataIsInitialized(path))\n  const error = useSelector(selectTimeSeriesDataError(path))\n  const isFulfilled = useSelector(selectTimeSeriesDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getTimeSeriesInitData({ path, itemId }))\n    }\n  }, [dispatch, isInitialized, path, itemId])\n\n  if (!isInitialized) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isPending || isFulfilled) {\n    return <TimeSeriesPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst TimeSeriesPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  // 0番のデータとkeysだけをとってくる\n  const dispatch = useDispatch()\n  const timeSeriesData = useSelector(\n    selectTimeSeriesData(path),\n    timeSeriesDataEqualityFn,\n  )\n\n  const meta = useSelector(selectTimesSeriesMeta(path))\n  const dataXrange = useSelector(selectTimeSeriesXrange(path))\n  const dataStd = useSelector(selectTimeSeriesStd(path))\n  const rangeUnit = useSelector(selectImageItemRangeUnit(itemId))\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n  const drawOrderList = useSelector(selectTimeSeriesItemDrawOrderList(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const dataKeys = useSelector(selectTimeSeriesItemKeys(itemId))\n\n  const [newDataXrange, setNewDataXrange] = useState<string[]>(dataXrange)\n  const [newTimeSeriesData, setNewTimeSeriesData] = useState(timeSeriesData)\n  const currentPipelineUid = useSelector(selectPipelineLatestUid)\n  const frameRate = useSelector(selectFrameRate(currentPipelineUid))\n\n  useEffect(() => {\n    let seriesData: any = {}\n    drawOrderList.forEach((key) => {\n      seriesData[key] = timeSeriesData[key]\n    })\n    if(rangeUnit === 'time' && timeSeriesData && Object.keys(timeSeriesData).length > 0) {\n      let newSeriesData: any = {}\n      Object.keys(seriesData).forEach(key => {\n        newSeriesData[key] = {}\n        Object.keys(seriesData[key]).forEach((keyTime) => {\n          const newKeyTime =  Number(keyTime) / frameRate\n          newSeriesData[key][newKeyTime] = seriesData[key][keyTime]\n        })\n      })\n      setNewDataXrange(dataXrange.map(data => String(Number(data) / frameRate)))\n      setNewTimeSeriesData(newSeriesData)\n    }\n    else {\n      setNewDataXrange(dataXrange)\n      setNewTimeSeriesData(seriesData)\n    }\n    //eslint-disable-next-line\n  }, [rangeUnit, dataXrange, timeSeriesData, drawOrderList])\n\n  const colorScale = createColormap({\n    colormap: 'jet',\n    nshades: 100, //maxIndex >= 6 ? maxIndex : 6,\n    format: 'hex',\n    alpha: 1,\n  })\n\n  const data = React.useMemo(() => {\n    return Object.fromEntries(\n      dataKeys.map((key) => {\n      let y = newDataXrange.map((x) => newTimeSeriesData[key]?.[x])\n      const i = Number(key)\n      const new_i = Math.floor((i % 10) * 10 + i / 10) % 100\n      if (drawOrderList.includes(key) && offset) {\n        const activeIdx: number = drawOrderList.findIndex((v) => v === key)\n        const mean: number = y.reduce((a, b) => a + b) / y.length\n        const std: number =\n          span *\n          Math.sqrt(y.reduce((a, b) => a + Math.pow(b - mean, 2)) / y.length)\n        y = y.map((value) => (value - mean) / (std + 1e-10) + activeIdx)\n      }\n\n      return [\n        key,\n        {\n          name: key,\n          x: newDataXrange,\n          y: y,\n          visible: drawOrderList.includes(key) ? true : 'legendonly',\n          line: { color: colorScale[new_i] },\n          error_y: {\n            type: 'data',\n            array:\n              !offset && Object.keys(dataStd).includes(key)\n                ? Object.values(dataStd[key])\n                : null,\n            visible: true,\n          },\n        },\n      ]\n    }),\n    )\n  }, [\n    drawOrderList,\n    offset,\n    span,\n    colorScale,\n    dataStd,\n    dataKeys,\n    newDataXrange,\n    newTimeSeriesData,\n  ])\n\n  const annotations = React.useMemo(() => {\n    const range = rangeUnit === 'time' ? frameRate : 1\n    return drawOrderList.map((value) => {\n      return {\n        x: Number((newDataXrange.length - 1) / range) + newDataXrange.length / (10 * range),\n        y: data[value].y[newDataXrange.length - 1],\n        xref: 'x',\n        yref: 'y',\n        text: `cell: ${value}`,\n        arrowhead: 1,\n        ax: 0,\n        ay: -10,\n      }\n    })\n  }, [data, drawOrderList, newDataXrange, rangeUnit, frameRate])\n\n  const layout = React.useMemo(\n    () => ({\n      title: {\n        text: meta?.title,\n        x: 0.1,\n      },\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      width: width,\n      height: height - 50,\n      xaxis: {\n        title: {\n          text: meta?.xlabel ?? rangeUnit,\n        },\n        titlefont: {\n          size: 12,\n          color: 'black',\n        },\n        tickfont: {\n          size: 10,\n          color: 'black',\n        },\n        range: rangeUnit === 'frames' ? [xrange.left, xrange.right] :\n          [typeof xrange.left !== 'undefined' ? xrange.left / frameRate : -2.5 ,\n            typeof xrange.right !== 'undefined' ? xrange.right / frameRate : (dataXrange.length / frameRate) + 6.8],\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      yaxis: {\n        title: meta?.ylabel,\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      annotations: annotations,\n    }),\n    [\n      meta,\n      xrange,\n      showgrid,\n      showline,\n      showticklabels,\n      zeroline,\n      annotations,\n      width,\n      height,\n      rangeUnit,\n      dataXrange,\n      frameRate\n    ],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  const onLegendClick = (event: LegendClickEvent) => {\n    const clickNumber = dataKeys[event.curveNumber]\n\n\n    const newDrawOrderList = drawOrderList.includes(clickNumber)\n      ? drawOrderList.filter((value) => value !== clickNumber)\n      : [...drawOrderList, clickNumber]\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    // set DisplayNumbers\n    if (!drawOrderList.includes(clickNumber)) {\n      dispatch(getTimeSeriesDataById({ path, index: clickNumber }))\n    }\n\n    return false\n  }\n\n  return (\n    <PlotlyChart\n      data={Object.values(data)}\n      layout={layout}\n      config={config}\n      onLegendClick={onLegendClick}\n    />\n  )\n})\n\nfunction timeSeriesDataEqualityFn(\n  a: TimeSeriesData | undefined,\n  b: TimeSeriesData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.entries(a)\n    const bArray = Object.entries(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every(([aKey, aValue], i) => {\n          const [bKey, bValue] = bArray[i]\n          return bKey === aKey && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction nestEqualityFun(\n  a: {\n    [key: number]: number\n  },\n  b: {\n    [key: number]: number\n  },\n) {\n  const aArray = Object.entries(a)\n  const bArray = Object.entries(b)\n  return (\n    a === b ||\n    (aArray.length === bArray.length &&\n      aArray.every(([aKey, aValue], i) => {\n        const [bKey, bValue] = bArray[i]\n        return bKey === aKey && bValue === aValue\n      }))\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectBarData,\n  selectBarDataError,\n  selectBarDataIsFulfilled,\n  selectBarDataIsInitialized,\n  selectBarDataIsPending,\n  selectBarIndex,\n  selectBarMeta,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getBarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { BarData } from 'api/outputs/Outputs'\nimport {\n  selectBarItemIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setBarItemIndex } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const BarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectBarDataIsPending(path))\n  const isInitialized = useSelector(selectBarDataIsInitialized(path))\n  const error = useSelector(selectBarDataError(path))\n  const isFulfilled = useSelector(selectBarDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getBarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <BarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst BarPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const barData = useSelector(selectBarData(path), barDataEqualityFn)\n  const meta = useSelector(selectBarMeta(path))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const index = useSelector(selectBarItemIndex(itemId))\n  const dataKeys = useSelector(selectBarIndex(path))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: Object.keys(barData[index]),\n        y: Object.values(barData[index]),\n        type: 'bar',\n      },\n    ],\n    [barData, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      title: {\n        text: meta?.title,\n        x: 0.1,\n      },\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 50, // top\n        l: 50, // left\n        b: 40, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      xaxis: {\n        title: meta?.xlabel,\n      },\n      yaxis: {\n        title: meta?.ylabel,\n      },\n    }),\n    [meta, width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <SelectIndex dataKeys={dataKeys} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst SelectIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const index = useSelector(selectBarItemIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setBarItemIndex({\n        itemId,\n        index: event.target.value,\n      }),\n    )\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>index</InputLabel>\n      <Select label=\"smooth\" value={`${index}`} onChange={handleChange}>\n        {dataKeys.map((v, i) => (\n          <MenuItem value={i}>{v}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction barDataEqualityFn(a: BarData | undefined, b: BarData | undefined) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHTMLData,\n  selectHTMLDataError,\n  selectHTMLDataIsFulfilled,\n  selectHTMLDataIsInitialized,\n  selectHTMLDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHTMLData } from 'store/slice/DisplayData/DisplayDataActions'\n\nexport const HTMLPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHTMLDataIsPending(path))\n  const isInitialized = useSelector(selectHTMLDataIsInitialized(path))\n  const error = useSelector(selectHTMLDataError(path))\n  const isFulfilled = useSelector(selectHTMLDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHTMLData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HTMLPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HTMLPlotImple = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const htmlData = useSelector(selectHTMLData(path))\n\n  return (\n    <div\n      dangerouslySetInnerHTML={{ __html: htmlData }}\n      style={{\n        overflow: 'scroll',\n        display: 'flex',\n        height: '90%',\n      }}\n    />\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHistogramData,\n  selectHistogramDataError,\n  selectHistogramDataIsFulfilled,\n  selectHistogramDataIsInitialized,\n  selectHistogramDataIsPending,\n  selectHistogramMeta,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHistogramData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  Box,\n  FormControl,\n  Input,\n  InputLabel,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\nimport {\n  selectHistogramItemBins,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setHistogramItemBins } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const HistogramPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHistogramDataIsPending(path))\n  const isInitialized = useSelector(selectHistogramDataIsInitialized(path))\n  const error = useSelector(selectHistogramDataError(path))\n  const isFulfilled = useSelector(selectHistogramDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHistogramData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HistogramPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HistogramPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const histogramData = useSelector(selectHistogramData(path))\n  const meta = useSelector(selectHistogramMeta(path))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const bins = useSelector(selectHistogramItemBins(itemId))\n\n  const data = React.useMemo(\n    () =>\n      histogramData != null\n        ? [\n            {\n              x: histogramData[0],\n              type: 'histogram',\n              autobinx: false,\n              xbins: {\n                size:\n                  (Math.max(...histogramData[0]) -\n                    Math.min(...histogramData[0])) /\n                  (bins - 1),\n              },\n            },\n          ]\n        : [],\n    [histogramData, bins],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      title: {\n        text: meta?.title,\n        x: 0.1,\n      },\n      width: width,\n      height: height - 120,\n      dragmode: 'pan',\n      margin: {\n        t: 50, // top\n        l: 50, // left\n        b: 40, // bottom\n      },\n      autosize: true,\n      xaxis: {\n        title: meta?.xlabel,\n      },\n      yaxis: {\n        title: meta?.ylabel,\n      },\n    }),\n    [meta, width, height],\n  )\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <InputBins />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} />\n    </div>\n  )\n})\n\nconst InputBins = React.memo(() => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const bins = useSelector(selectHistogramItemBins(itemId))\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      setHistogramItemBins({ itemId, bins: parseInt(event.target.value) }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>bins</InputLabel>\n      <Input type=\"number\" value={bins} onChange={handleChange} />\n    </FormControl>\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectLineColumns,\n  selectLineData,\n  selectLineDataError,\n  selectLineDataIsFulfilled,\n  selectLineDataIsInitialized,\n  selectLineDataIsPending,\n  selectLineIndex,\n  selectLineMeta,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getLineData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  Box,\n  FormControl,\n  InputLabel,\n  LinearProgress,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Typography,\n} from '@mui/material'\nimport {\n  selectLineItemSelectedIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setLineItemSelectedIndex } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nexport const LinePlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectLineDataIsPending(path))\n  const isInitialized = useSelector(selectLineDataIsInitialized(path))\n  const error = useSelector(selectLineDataError(path))\n  const isFulfilled = useSelector(selectLineDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getLineData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <LinePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst LinePlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const lineData = useSelector(selectLineData(path))\n  const meta = useSelector(selectLineMeta(path))\n  const columns = useSelector(selectLineColumns(path))\n  const index = useSelector(selectLineIndex(path))\n  const selectedIndex = useSelector(selectLineItemSelectedIndex(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      lineData != null\n        ? [\n            {\n              x: columns,\n              y: lineData[selectedIndex],\n            },\n          ]\n        : [],\n    [lineData, columns, selectedIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      title: {\n        text: meta?.title,\n        x: 0.1,\n      },\n      width: width,\n      height: height - 120,\n      dragmode: 'pan',\n      margin: {\n        t: 50, // top\n        l: 50, // left\n        b: 40, // bottom\n      },\n      autosize: true,\n      xaxis: {\n        title: meta?.xlabel,\n        tickvals: columns,\n      },\n      yaxis: {\n        title: meta?.ylabel,\n      },\n    }),\n    [meta, width, height, columns],\n  )\n\n  return (\n    <>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <LineItemIndexSelect index={index} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} />\n    </>\n  )\n})\n\nconst LineItemIndexSelect = React.memo<{ index: number[] }>(({ index }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const selectedIndex = useSelector(selectLineItemSelectedIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<number>) => {\n    dispatch(\n      setLineItemSelectedIndex({\n        itemId,\n        selectedIndex: Number(event.target.value),\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>index</InputLabel>\n      <Select label=\"smooth\" value={selectedIndex} onChange={handleChange}>\n        {index.map((_, i) => (\n          <MenuItem key={i} value={i}>\n            {i}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectPieColumns,\n  selectPieData,\n  selectPieDataError,\n  selectPieDataIsFulfilled,\n  selectPieDataIsInitialized,\n  selectPieDataIsPending,\n  selectPieMeta,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getPieData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { LinearProgress, Typography } from '@mui/material'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const PiePlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectPieDataIsPending(path))\n  const isInitialized = useSelector(selectPieDataIsInitialized(path))\n  const error = useSelector(selectPieDataError(path))\n  const isFulfilled = useSelector(selectPieDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getPieData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PiePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst PiePlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const pieData = useSelector(selectPieData(path))\n  const meta = useSelector(selectPieMeta(path))\n  const columns = useSelector(selectPieColumns(path))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      pieData != null\n        ? [\n            {\n              values: pieData[0],\n              labels: columns,\n              type: 'pie',\n              sort: false,\n              direction: 'clockwise',\n            },\n          ]\n        : [],\n    [pieData, columns],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      title: {\n        text: meta?.title,\n        x: 0.1,\n      },\n      width: width,\n      height: height - 120,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n      xaxis: {\n        tickvals: columns,\n        title: meta?.xlabel,\n      },\n      yaxis: {\n        title: meta?.ylabel,\n      },\n    }),\n    [meta, width, height, columns],\n  )\n\n  return <PlotlyChart data={data} layout={layout} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectPolarColumns,\n  selectPolarData,\n  selectPolarDataError,\n  selectPolarDataIsFulfilled,\n  selectPolarDataIsInitialized,\n  selectPolarDataIsPending,\n  selectPolarIndex,\n  selectPolarMeta,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getPolarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  Box,\n  FormControl,\n  InputLabel,\n  LinearProgress,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Typography,\n} from '@mui/material'\nimport {\n  selectPolarItemSelectedIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setPolartemItemSelectedIndex } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const PolarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectPolarDataIsPending(path))\n  const isInitialized = useSelector(selectPolarDataIsInitialized(path))\n  const error = useSelector(selectPolarDataError(path))\n  const isFulfilled = useSelector(selectPolarDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getPolarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PolarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst PolarPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const polarData = useSelector(selectPolarData(path))\n  const meta = useSelector(selectPolarMeta(path))\n  const columns = useSelector(selectPolarColumns(path))\n  const index = useSelector(selectPolarIndex(path))\n  const selectedIndex = useSelector(selectPolarItemSelectedIndex(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      polarData != null\n        ? [\n            {\n              type: 'scatterpolar',\n              mode: 'lines+markae',\n              theta: [...columns, columns[0]],\n              r: [...polarData[selectedIndex], polarData[selectedIndex][0]],\n            },\n          ]\n        : [],\n    [polarData, columns, selectedIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      title: {\n        text: meta?.title,\n        x: 0.1,\n      },\n      width: width,\n      height: height - 120,\n      dragmode: 'pan',\n      margin: {\n        t: 50, // top\n        l: 50, // left\n        b: 40, // bottom\n      },\n      autosize: true,\n      xaxis: {\n        tickvals: columns,\n        title: meta?.xlabel,\n      },\n      yaxis: {\n        title: meta?.ylabel,\n      },\n    }),\n    [meta, width, height, columns],\n  )\n\n  return (\n    <>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <PolarItemIndexSelect index={index} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} />\n    </>\n  )\n})\n\nconst PolarItemIndexSelect = React.memo<{ index: number[] }>(({ index }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const selectedIndex = useSelector(selectPolarItemSelectedIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<number>) => {\n    dispatch(\n      setPolartemItemSelectedIndex({\n        itemId,\n        selectedIndex: Number(event.target.value),\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>index</InputLabel>\n      <Select label=\"smooth\" value={selectedIndex} onChange={handleChange}>\n        {index.map((_, i) => (\n          <MenuItem key={i} value={i}>\n            {i}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectVisualizeDataFilePath,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { DisplayDataContext } from './DataContext'\nimport { HeatMapPlot } from './Plot/HeatMapPlot'\nimport { ImagePlot } from './Plot/ImagePlot'\nimport { RoiPlot } from './Plot/RoiPlot'\nimport { ScatterPlot } from './Plot/ScatterPlot'\nimport { CsvPlot } from './Plot/CsvPlot'\nimport { TimeSeriesPlot } from './Plot/TimeSeriesPlot'\nimport { BarPlot } from './Plot/BarPlot'\nimport { HTMLPlot } from './Plot/HTMLPlot'\nimport { HistogramPlot } from './Plot/HistogramPlot'\nimport { LinePlot } from './Plot/LinePlot'\nimport { PiePlot } from './Plot/PiePlot'\nimport { PolarPlot } from './Plot/PolarPlot'\n\nexport const DisplayDataItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const nodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  if (filePath != null && dataType != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{ nodeId, filePath, dataType, itemId }}\n      >\n        <DisplayPlot dataType={dataType} />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n\nconst DisplayPlot = React.memo<{\n  dataType: DATA_TYPE\n}>(({ dataType }) => {\n  switch (dataType) {\n    case DATA_TYPE_SET.CSV:\n      return <CsvPlot />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesPlot />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatMapPlot />\n    case DATA_TYPE_SET.IMAGE:\n      return <ImagePlot />\n    case DATA_TYPE_SET.ROI:\n      return <RoiPlot />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterPlot />\n    case DATA_TYPE_SET.BAR:\n      return <BarPlot />\n    case DATA_TYPE_SET.HTML:\n      return <HTMLPlot />\n    case DATA_TYPE_SET.HISTOGRAM:\n      return <HistogramPlot />\n    case DATA_TYPE_SET.LINE:\n      return <LinePlot />\n    case DATA_TYPE_SET.PIE:\n      return <PiePlot />\n    case DATA_TYPE_SET.POLAR:\n      return <PolarPlot />\n    default:\n      return null\n  }\n})\n","import { useDispatch, useSelector } from 'react-redux'\nimport Tabs, { tabsClasses } from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box'\nimport React from 'react'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { selectAlgorithmName } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectPipelineNodeResultOutputKeyList,\n  selectPipelineNodeResultOutputFileDataType,\n  selectPipelineNodeResultOutputFilePath,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { selectVisualizeItemIdForWorkflowDialog } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { DisplayDataItem } from 'components/Workspace/Visualize/DisplayDataItem'\n\nexport const AlgorithmOutputDialog = React.memo<{\n  open: boolean\n  onClose: () => void\n  nodeId: string\n}>(({ open, onClose, nodeId }) => {\n  const dispatch = useDispatch()\n  const closeFn = () => {\n    onClose()\n    dispatch(deleteAllItemForWorkflowDialog())\n  }\n  return (\n    <Dialog open={open} onClose={closeFn} fullWidth>\n      <TitleWithCloseButton onClose={closeFn} nodeId={nodeId} />\n      <DialogContent\n        dividers\n        sx={{\n          pt: 1,\n          px: 2,\n        }}\n      >\n        {open && <OutputViewer nodeId={nodeId} />}\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nconst TitleWithCloseButton = React.memo<{\n  onClose: () => void\n  nodeId: string\n}>(({ nodeId, onClose }) => {\n  const nodeName = useSelector(selectAlgorithmName(nodeId))\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }}>\n      Output of {nodeName}\n      <IconButton\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 10,\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </DialogTitle>\n  )\n})\n\nconst OutputViewer = React.memo<{ nodeId: string }>(({ nodeId }) => {\n  const outputKeyList = useSelector(\n    selectPipelineNodeResultOutputKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  const [selectedOutoutKey, setSelectedOutputKey] = React.useState(\n    outputKeyList[0],\n  )\n  return (\n    <>\n      <OutputSelectTabs\n        outputKeyList={outputKeyList}\n        selectedOutoutKey={selectedOutoutKey}\n        onSelectOutput={setSelectedOutputKey}\n      />\n      <DisplayDataView nodeId={nodeId} outputKey={selectedOutoutKey} />\n    </>\n  )\n})\n\nconst OutputSelectTabs = React.memo<{\n  selectedOutoutKey: string\n  outputKeyList: string[]\n  onSelectOutput: (selectedKey: string) => void\n}>(({ selectedOutoutKey, outputKeyList, onSelectOutput }) => {\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    onSelectOutput(newValue)\n  }\n  return (\n    <Tabs\n      value={selectedOutoutKey}\n      onChange={handleChange}\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n      sx={{\n        [`& .${tabsClasses.scrollButtons}`]: {\n          '&.Mui-disabled': { opacity: 0.3 },\n        },\n      }}\n    >\n      {outputKeyList.map((outputKey) => (\n        <Tab\n          value={outputKey}\n          label={outputKey}\n          sx={{\n            textTransform: 'none',\n          }}\n        />\n      ))}\n    </Tabs>\n  )\n})\n\nconst DisplayDataView = React.memo<{ nodeId: string; outputKey: string }>(\n  ({ nodeId, outputKey }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectPipelineNodeResultOutputFilePath(nodeId, outputKey),\n    )\n    const dataType = useSelector(\n      selectPipelineNodeResultOutputFileDataType(nodeId, outputKey),\n    )\n    const itemId = useSelector(\n      selectVisualizeItemIdForWorkflowDialog(nodeId, filePath, dataType),\n    )\n    React.useEffect(() => {\n      if (itemId === null) {\n        dispatch(addItemForWorkflowDialog({ nodeId, filePath, dataType }))\n      }\n    }, [dispatch, nodeId, filePath, dataType, itemId])\n    return (\n      <Box\n        sx={{\n          mx: 1,\n          my: 2,\n        }}\n      >\n        {itemId != null && <DisplayDataItem itemId={itemId} />}\n      </Box>\n    )\n  },\n)\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { RootState } from '../../store'\n\nexport const selectFilesTree =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) => {\n    if (state.filesTree[fileType] != null) {\n      return state.filesTree[fileType]\n    } else {\n      return undefined\n    }\n  }\n\nexport const selectFilesTreeNodes =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.tree\n\nexport const selectFilesIsLatest =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLatest ?? false\n\nexport const selectFilesIsLoading =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLoading ?? false\n","export const FILES_TREE_SLICE_NAME = 'filesTree'\n\nexport type TreeNodeType = DirNode | FileNode\n\nexport interface NodeBase {\n  path: string\n  name: string\n  isDir: boolean\n}\n\nexport interface DirNode extends NodeBase {\n  isDir: true\n  nodes: TreeNodeType[]\n}\n\nexport interface FileNode extends NodeBase {\n  isDir: false\n}\n\nexport interface FilesTree {\n  [fileType: string]: {\n    isLatest: boolean\n    isLoading: boolean\n    tree: TreeNodeType[]\n  }\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  FILE_TREE_TYPE,\n  getFilesTreeApi,\n  TreeNodeTypeDTO,\n} from 'api/files/Files'\n\nimport { FILES_TREE_SLICE_NAME } from './FilesTreeType'\n\nexport const getFilesTree = createAsyncThunk<\n  TreeNodeTypeDTO[],\n  { workspaceId: number; fileType: FILE_TREE_TYPE }\n>(\n  `${FILES_TREE_SLICE_NAME}/getFilesTree`,\n  async ({ workspaceId, fileType }, thunkAPI) => {\n    try {\n      const response = await getFilesTreeApi(workspaceId, fileType)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { TreeNodeTypeDTO } from 'api/files/Files'\nimport { TreeNodeType } from './FilesTreeType'\n\nexport function convertToTreeNodeType(dto: TreeNodeTypeDTO[]): TreeNodeType[] {\n  return dto.map((node) =>\n    node.isdir\n      ? {\n          path: node.path,\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n        }\n      : {\n          path: node.path,\n          name: node.name,\n          isDir: false,\n        },\n  )\n}\n\nexport function isDirNodeByPath(path: string, tree: TreeNodeType[]): boolean {\n  const node = getNodeByPath(path, tree)\n  if (node != null) {\n    return node.isDir\n  } else {\n    throw new Error(`failed to get node: ${path}`)\n  }\n}\n\nexport function getNodeByPath(\n  path: string,\n  tree: TreeNodeType[],\n): TreeNodeType | null {\n  let targetNode: TreeNodeType | null = null\n  for (const node of tree) {\n    if (path === node.path) {\n      targetNode = node\n      break\n    } else {\n      if (node.isDir) {\n        targetNode = getNodeByPath(path, node.nodes)\n        if (targetNode != null) {\n          break\n        }\n      }\n    }\n  }\n  return targetNode\n}\n","import Dialog from '@mui/material/Dialog'\nimport { useDispatch, useSelector } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\nimport Checkbox, { CheckboxProps } from '@mui/material/Checkbox'\n\nimport Box from '@mui/material/Box'\nimport { useTheme } from '@mui/material/styles'\nimport React from 'react'\n\nimport {\n  selectFilesIsLatest,\n  selectFilesIsLoading,\n  selectFilesTreeNodes,\n} from 'store/slice/FilesTree/FilesTreeSelectors'\nimport { getFilesTree } from 'store/slice/FilesTree/FilesTreeAction'\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { TreeNodeType } from 'store/slice/FilesTree/FilesTreeType'\nimport {\n  getNodeByPath,\n  isDirNodeByPath,\n} from 'store/slice/FilesTree/FilesTreeUtils'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\ntype FileSelectDialogProps = {\n  initialFilePath: string[] | string\n  onClickOk: (path: string[] | string) => void\n  fileType?: FILE_TREE_TYPE\n  title?: string\n  open: boolean\n  onClickCancel: () => void\n  multiSelect: boolean\n}\n\nexport const FileSelectDialog = React.memo<FileSelectDialogProps>(\n  function FileSelectDialog({\n    open,\n    initialFilePath,\n    onClickCancel,\n    onClickOk,\n    title,\n    fileType = FILE_TREE_TYPE_SET.ALL,\n    multiSelect,\n  }) {\n    React.useEffect(() => {\n      setSelectedFilePath(initialFilePath)\n    }, [initialFilePath])\n    const [selectedFilePath, setSelectedFilePath] =\n      React.useState(initialFilePath)\n    const onCancel = () => {\n      setSelectedFilePath(initialFilePath) // 選択内容を反映させない\n      onClickCancel()\n    }\n    const onOk = () => {\n      onClickOk(selectedFilePath)\n    }\n    const theme = useTheme()\n    return (\n      <Dialog open={open} fullWidth>\n        <DialogTitle>{title ?? 'Select File'}</DialogTitle>\n        <DialogContent dividers>\n          <div\n            style={{\n              height: 300,\n              overflow: 'auto',\n              marginBottom: theme.spacing(1),\n              border: '1px solid',\n              padding: theme.spacing(1),\n              borderColor: theme.palette.divider,\n            }}\n          >\n            <FileTreeView\n              setSelectedFilePath={setSelectedFilePath}\n              multiSelect={multiSelect}\n              fileType={fileType}\n              selectedFilePath={selectedFilePath}\n            />\n          </div>\n          <Typography variant=\"subtitle1\">Select File</Typography>\n          <FilePathSelectedListView path={selectedFilePath} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  },\n)\n\nconst FileTreeView = React.memo<{\n  setSelectedFilePath: (path: string[] | string) => void\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  fileType: FILE_TREE_TYPE\n}>(({ setSelectedFilePath, selectedFilePath, fileType, multiSelect }) => {\n  const [tree, isLoading] = useFileTree(fileType)\n  const onNodeSelectHandler = (\n    event: React.SyntheticEvent,\n    nodeIds: Array<string> | string,\n  ) => {\n    if (!multiSelect && tree != null) {\n      // multiSelectがfalseの場合、ディレクトリは選択しない\n      const path = nodeIds as string\n      if (!isDirNodeByPath(path, tree)) {\n        setSelectedFilePath(path)\n      }\n    }\n  }\n  // multiSelectでチェックボックスを使用する時用のハンドラ\n  const onCheckFile = (path: string) => {\n    if (Array.isArray(selectedFilePath)) {\n      if (selectedFilePath.includes(path)) {\n        setSelectedFilePath(\n          selectedFilePath.filter((selectedPath) => path !== selectedPath),\n        )\n      } else {\n        setSelectedFilePath(selectedFilePath.concat(path))\n      }\n    }\n  }\n  const onCheckDir = (path: string, checked: boolean) => {\n    if (tree != null && Array.isArray(selectedFilePath)) {\n      const node = getNodeByPath(path, tree)\n      if (node != null && node.isDir) {\n        const childrenFilePathList = node.nodes\n          .filter((node) => !node.isDir)\n          .map((node) => node.path)\n        if (checked) {\n          setSelectedFilePath(\n            // concat時の重複を削除\n            Array.from(new Set(selectedFilePath.concat(childrenFilePathList))),\n          )\n        } else {\n          setSelectedFilePath(\n            selectedFilePath.filter(\n              (selectedPath) => !childrenFilePathList.includes(selectedPath),\n            ),\n          )\n        }\n      }\n    }\n  }\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView\n        disableSelection={multiSelect}\n        multiSelect={multiSelect}\n        onNodeSelect={onNodeSelectHandler}\n      >\n        {tree?.map((node) => (\n          <TreeNode\n            node={node}\n            selectedFilePath={selectedFilePath}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: TreeNodeType\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  onCheckFile: (path: string) => void\n  onCheckDir: (path: string, checked: boolean) => void\n}>(({ node, selectedFilePath, multiSelect, onCheckDir, onCheckFile }) => {\n  if (node.isDir) {\n    const allChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => selectedFilePath.includes(filePath))\n    const allNotChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => !selectedFilePath.includes(filePath))\n    const indeterminate = !(allChecked || allNotChecked)\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={\n          multiSelect && node.nodes.filter((node) => !node.isDir).length > 0 ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                indeterminate,\n                checked: allChecked,\n                onClick: (e) => {\n                  e.stopPropagation() // on/offのクリックにつられてTreeを開閉させないようにする\n                },\n                onChange: (e) => onCheckDir(node.path, e.target.checked),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode\n            node={childNode}\n            selectedFilePath={selectedFilePath}\n            key={i}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={\n          multiSelect ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                checked:\n                  Array.isArray(selectedFilePath) &&\n                  selectedFilePath.includes(node.path),\n                onChange: () => onCheckFile(node.path),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n        onClick={() => onCheckFile(node.path)}\n      />\n    )\n  }\n})\n\nconst TreeItemLabel = React.memo<{\n  label: string\n  checkboxProps: CheckboxProps\n}>(({ label, checkboxProps }) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box flexGrow={1}>{label}</Box>\n      <Box>\n        <Checkbox\n          {...checkboxProps}\n          disableRipple\n          size=\"small\"\n          sx={{\n            marginRight: '4px',\n            padding: '2px',\n          }}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectedListView = React.memo<{ path: string | string[] }>(\n  ({ path }) => {\n    return (\n      <Typography variant=\"subtitle2\">\n        {!!path\n          ? Array.isArray(path)\n            ? path.map((text) => <li>{text}</li>)\n            : path\n          : '---'}\n      </Typography>\n    )\n  },\n)\n\nfunction useFileTree(\n  fileType: FILE_TREE_TYPE,\n): [TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectFilesTreeNodes(fileType))\n  const isLatest = useSelector(selectFilesIsLatest(fileType))\n  const isLoading = useSelector(selectFilesIsLoading(fileType))\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  React.useEffect(() => {\n    if (workspaceId && !isLatest && !isLoading) {\n      dispatch(getFilesTree({workspaceId, fileType}))\n    }\n  }, [workspaceId, isLatest, isLoading, fileType, dispatch])\n  return [tree, isLoading]\n}\n","import React, { DragEvent, MouseEvent, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  Controls,\n  Connection,\n  Edge,\n  Node,\n  OnNodesChange,\n  OnEdgesChange,\n  ReactFlowInstance,\n  OnMove,\n  Viewport,\n} from 'react-flow-renderer'\nimport { useDrop } from 'react-dnd'\n\nimport 'style/flow.css'\nimport {\n  editFlowNodePositionById,\n  setEdgesChange,\n  setFlowEdges,\n  setFlowPosition,\n  setNodesChange,\n} from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectFlowEdges,\n  selectFlowNodes,\n  selectFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { ToolBar } from 'components/Workspace/ToolBar'\nimport {\n  reactFlowEdgeTypes,\n  reactFlowNodeTypes,\n} from './FlowChartNode/ReactFlowNodeTypesConst'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\nimport { AlgorithmOutputDialog } from './FlowChartNode/AlgorithmOutputDialog'\nimport {\n  DialogContext,\n  ErrorDialogValue,\n  OpenDialogValue,\n} from 'components/Workspace/FlowChart/DialogContext'\nimport { FileSelectDialog } from 'components/common/FileSelectDialog'\nimport { FormHelperText, Popover } from '@mui/material'\n\nconst initDialogFile = {\n  filePath: '',\n  open: false,\n  fileTreeType: undefined,\n  multiSelect: false,\n  onSelectFile: () => null,\n}\n\nexport const ReactFlowComponent = React.memo<UseRunPipelineReturnType>(\n  (props) => {\n    const flowNodes = useSelector(selectFlowNodes)\n    const flowEdges = useSelector(selectFlowEdges)\n    const dispatch = useDispatch()\n    const [dialogNodeId, setDialogNodeId] = useState('')\n    const [dialogFile, setDialogFile] =\n      useState<OpenDialogValue>(initDialogFile)\n    const [messageError, setMessageError] = useState<ErrorDialogValue>({\n      anchorElRef: { current: null },\n      message: '',\n    })\n\n    const onConnect = (params: Connection | Edge) => {\n      dispatch(\n        setFlowEdges(\n          addEdge(\n            {\n              ...params,\n              animated: false,\n              style: { width: 5 },\n              type: 'buttonedge',\n            },\n            flowEdges,\n          ),\n        ),\n      )\n    }\n\n    const onNodesChange: OnNodesChange = (changes) =>\n      dispatch(setNodesChange(changes))\n    const onEdgesChange: OnEdgesChange = (changes) =>\n      dispatch(setEdgesChange(changes))\n\n    const onDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    const onNodeDragStop = (event: MouseEvent, node: Node) => {\n      dispatch(\n        editFlowNodePositionById({\n          nodeId: node.id,\n          coord: { x: node.position.x, y: node.position.y },\n        }),\n      )\n    }\n\n    const flowPosition = useSelector(selectFlowPosition)\n\n    const onMoveEnd: OnMove = (event, viewport: Viewport) => {\n      if (event !== undefined) {\n        dispatch(setFlowPosition([viewport.x, viewport.y, viewport.zoom]))\n      }\n    }\n\n    const [reactFlowInstance, setReactFlowInstance] =\n      React.useState<ReactFlowInstance>()\n\n    const onInit = (reactFlowInstance: ReactFlowInstance) =>\n      setReactFlowInstance(reactFlowInstance)\n\n    const wrapparRef = React.useRef<HTMLDivElement>(null)\n    const [, drop] = useDrop<\n      TreeItemDragObject,\n      TreeItemDropResult,\n      TreeItemCollectedProps\n    >(\n      () => ({\n        accept: DND_ITEM_TYPE_SET.TREE_ITEM,\n        drop: (_, monitor) => {\n          let position: TreeItemDropResult['position'] = undefined\n          const monitorOffset = monitor.getClientOffset()\n          if (\n            wrapparRef.current != null &&\n            monitorOffset != null &&\n            reactFlowInstance != null\n          ) {\n            position = reactFlowInstance.project({\n              x: monitorOffset.x - wrapparRef.current.offsetLeft - 40,\n              y: monitorOffset.y - wrapparRef.current.offsetTop - 40,\n            })\n          }\n          return { position }\n        },\n      }),\n      [reactFlowInstance],\n    )\n    return (\n      <div className=\"flow\">\n        <DialogContext.Provider\n          value={{\n            onOpen: setDialogNodeId,\n            onOpenDialogFile: setDialogFile,\n            onMessageError: setMessageError,\n          }}\n        >\n          <ReactFlowProvider>\n            <div className=\"reactflow-wrapper\" ref={wrapparRef}>\n              <ReactFlow\n                ref={drop}\n                nodes={flowNodes}\n                edges={flowEdges}\n                onNodesChange={onNodesChange}\n                onEdgesChange={onEdgesChange}\n                onConnect={onConnect}\n                onInit={onInit}\n                onDragOver={onDragOver}\n                onNodeDragStop={onNodeDragStop}\n                nodeTypes={reactFlowNodeTypes}\n                edgeTypes={reactFlowEdgeTypes}\n                defaultPosition={[flowPosition[0], flowPosition[1]]}\n                defaultZoom={flowPosition[2]}\n                onMoveEnd={onMoveEnd}\n              >\n                <ToolBar {...props} />\n                <Controls />\n              </ReactFlow>\n            </div>\n          </ReactFlowProvider>\n          {dialogNodeId && (\n            <AlgorithmOutputDialog\n              nodeId={dialogNodeId}\n              open\n              onClose={() => setDialogNodeId('')}\n            />\n          )}\n          {dialogFile.open && (\n            <FileSelectDialog\n              multiSelect={dialogFile.multiSelect}\n              initialFilePath={dialogFile.filePath}\n              open={dialogFile.open}\n              onClickOk={(path) => {\n                dialogFile.onSelectFile(path)\n                setDialogFile(initDialogFile)\n              }}\n              onClickCancel={() => {\n                setDialogFile(initDialogFile)\n              }}\n              fileType={dialogFile.fileTreeType}\n            />\n          )}\n          {messageError?.message && (\n            <Popover\n              open\n              anchorEl={messageError.anchorElRef.current}\n              onClose={() =>\n                setMessageError({\n                  anchorElRef: { current: null },\n                  message: '',\n                })\n              }\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              transformOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n            >\n              <div style={{ margin: 8 }}>\n                <FormHelperText error={true}>\n                  {messageError.message}\n                </FormHelperText>\n              </div>\n            </Popover>\n          )}\n        </DialogContext.Provider>\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nexport const selectRightDrawerIsOpen = (state: RootState) =>\n  state.rightDrawer.open\n\nexport const selectRightDrawerMode = (state: RootState) =>\n  state.rightDrawer.mode\n\nexport const selectRightDrawerCurrentNodeId = (state: RootState) =>\n  state.rightDrawer.currendNodeId\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const ALGORITHM_NODE_SLICE_NAME = 'algorithmNode'\n\nexport type AlgorithmNode = {\n  [nodeId: string]: AlgrithmNodeType\n}\n\ntype AlgrithmNodeType = {\n  functionPath: string\n  name: string\n  params: ParamMap | null\n  isUpdated: boolean\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getAlgoParamsApi } from 'api/params/Params'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { ALGORITHM_NODE_SLICE_NAME } from './AlgorithmNodeType'\n\nexport const getAlgoParams = createAsyncThunk<\n  ParamDTO,\n  { nodeId: string; algoName: string }\n>(\n  `${ALGORITHM_NODE_SLICE_NAME}/getAlgoParams`,\n  async ({ algoName }, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoParamsApi(algoName)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\n\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport {\n  deleteFlowNodes,\n  deleteFlowNodeById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { fetchExperiment } from '../Experiments/ExperimentsActions'\nimport {\n  reproduceWorkflow,\n  importWorkflowConfig,\n} from 'store/slice/Workflow/WorkflowActions'\nimport { getAlgoParams } from './AlgorithmNodeActions'\nimport { ALGORITHM_NODE_SLICE_NAME, AlgorithmNode } from './AlgorithmNodeType'\nimport { isAlgorithmNodePostData } from 'api/run/RunUtils'\nimport { run, runByCurrentUid } from '../Pipeline/PipelineActions'\nimport { addAlgorithmNode } from '../FlowElement/FlowElementActions'\n\nconst initialState: AlgorithmNode = {}\n\nexport const algorithmNodeSlice = createSlice({\n  name: ALGORITHM_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { nodeId, path, newValue } = action.payload\n      const param = state[nodeId].params\n      if (param != null) {\n        const target = getChildParam(path, param)\n        if (target != null) {\n          target.value = newValue\n          state[nodeId].isUpdated = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAlgoParams.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        state[nodeId].params = convertToParamMap(action.payload)\n      })\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        const { node, functionPath, name } = action.meta.arg\n        const params = action.payload\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          state[node.id] = {\n            functionPath,\n            name,\n            params: convertToParamMap(params),\n            isUpdated: false,\n          }\n        }\n      })\n      .addCase(deleteFlowNodes, (state, action) => {\n        action.payload.forEach((node) => {\n          if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n            delete state[node.id]\n          }\n        })\n      })\n      .addCase(deleteFlowNodeById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addMatcher(\n        isAnyOf(\n          reproduceWorkflow.fulfilled,\n          importWorkflowConfig.fulfilled,\n          fetchExperiment.fulfilled,\n        ),\n        (_, action) => {\n          const newState: AlgorithmNode = {}\n          Object.values(action.payload.nodeDict)\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              if (node.data != null) {\n                newState[node.id] = {\n                  name: node.data.label,\n                  functionPath: node.data.path,\n                  params: node.data.param,\n                  isUpdated: false,\n                }\n              }\n            })\n          return newState\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          Object.values(runPostData.nodeDict)\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              state[node.id].isUpdated = false\n            })\n        },\n      )\n  },\n})\n\nexport const { updateParam } = algorithmNodeSlice.actions\nexport default algorithmNodeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Typography from '@mui/material/Typography'\n\nimport {\n  selectAlgorithmName,\n  selectAlgorithmParamsExit,\n  selectAlgorithmParamsKeyList,\n  selectAlgorithmParamsValue,\n  selectAlgorithmParam,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { updateParam } from 'store/slice/AlgorithmNode/AlgorithmNodeSlice'\nimport { getAlgoParams } from 'store/slice/AlgorithmNode/AlgorithmNodeActions'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { ParamFormContext } from './RightDrawer'\n\nexport const AlgorithmParamForm = React.memo(() => {\n  const nodeId = React.useContext(ParamFormContext)\n  const dispatch = useDispatch()\n  const algoName = useSelector(selectAlgorithmName(nodeId))\n  const algoParamIsLoaded = useSelector(selectAlgorithmParamsExit(nodeId))\n  const paramKeyList = useSelector(\n    selectAlgorithmParamsKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (!algoParamIsLoaded) {\n      dispatch(getAlgoParams({ nodeId, algoName }))\n    }\n  }, [dispatch, nodeId, algoName, algoParamIsLoaded])\n  return (\n    <div style={{ padding: 8 }}>\n      <Typography variant=\"h5\">{algoName}</Typography>\n      <div style={{ paddingLeft: 8 }}>\n        {paramKeyList.map((paramKey) => (\n          <ParamItem key={paramKey} paramKey={paramKey} />\n        ))}\n      </div>\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const nodeId = React.useContext(ParamFormContext)\n  const Component = createParamFormItemComponent({\n    paramSelector: (paramKey) => selectAlgorithmParam(nodeId, paramKey),\n    paramValueSelector: (path) => selectAlgorithmParamsValue(nodeId, path),\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ nodeId, path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Divider from '@mui/material/Divider'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport Box from '@mui/material/Box'\nimport {\n  selectRightDrawerCurrentNodeId,\n  selectRightDrawerIsOpen,\n  selectRightDrawerMode,\n} from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport {\n  closeRightDrawer,\n  RIGHT_DRAWER_MODE,\n} from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { NWBSettingContents } from './NWB'\nimport { RootState } from 'store/store'\nimport { AlgorithmParamForm } from './AlgorithmParamForm'\nimport { SnakemakeContents } from './Snakemake'\nimport { RIGHT_DRAWER_WIDTH } from 'const/Layout'\n\nconst RightDrawer: React.FC = () => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(closeRightDrawer())\n  const title = useSelector((state: RootState) => {\n    const mode = selectRightDrawerMode(state)\n    switch (mode) {\n      case RIGHT_DRAWER_MODE.NWB:\n        return 'NWB Setting'\n      case RIGHT_DRAWER_MODE.PARAM_FORM:\n        return 'Param From'\n      case RIGHT_DRAWER_MODE.SNAKEMAKE:\n        return 'Snakemake'\n      default:\n        return 'none'\n    }\n  })\n  return (\n    <StyledDrawer open={open} anchor=\"right\" variant=\"persistent\">\n      <Toolbar />\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton color=\"inherit\" onClick={onClick} size=\"large\">\n          <ChevronRightIcon />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Box>\n      <Divider />\n      <MainContents>\n        <Contents />\n      </MainContents>\n    </StyledDrawer>\n  )\n}\n\nconst Contents: React.FC = () => {\n  const mode = useSelector(selectRightDrawerMode)\n  switch (mode) {\n    case RIGHT_DRAWER_MODE.NWB:\n      return <NWBSettingContents />\n    case RIGHT_DRAWER_MODE.PARAM_FORM:\n      return <ParamFormConetent />\n    case RIGHT_DRAWER_MODE.SNAKEMAKE:\n      return <SnakemakeContents />\n    default:\n      return null\n  }\n}\n\n/**\n * nodeId\n */\nexport const ParamFormContext = React.createContext<string>('')\n\nconst ParamFormConetent: React.FC = () => {\n  const nodeId = useSelector(selectRightDrawerCurrentNodeId)\n  if (nodeId != null) {\n    return (\n      <ParamFormContext.Provider value={nodeId}>\n        <AlgorithmParamForm />\n      </ParamFormContext.Provider>\n    )\n  } else {\n    return null\n  }\n}\n\nconst StyledDrawer = styled(Drawer)({\n  width: RIGHT_DRAWER_WIDTH,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: RIGHT_DRAWER_WIDTH,\n  },\n})\n\nconst MainContents = styled('main')({\n  height: '100%',\n})\n\nexport default RightDrawer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectPipelineLatestUid } from 'store/slice/Pipeline/PipelineSelectors'\nimport { Divider, Typography, Grid } from '@mui/material'\nimport {\n  selectExperimentName,\n  selectExperimentsStatusIsFulfilled,\n} from 'store/slice/Experiments/ExperimentsSelectors'\n\nexport const CurrentPipelineInfo: React.FC = () => {\n  const uid = useSelector(selectPipelineLatestUid)\n  const isFulFilled = useSelector(selectExperimentsStatusIsFulfilled)\n\n  return (\n    <>\n      {uid && (\n        <>\n          <Grid container paddingX={2} paddingBottom={1}>\n            <ExperimentUidInfo uid={uid} />\n            {isFulFilled && <ExperimentNameInfo uid={uid} />}\n          </Grid>\n          <Divider />\n        </>\n      )}\n    </>\n  )\n}\n\nconst ExperimentUidInfo = React.memo<{ uid: string }>(({ uid }) => {\n  return <LabelValueGridRow label=\"ID\" value={uid} />\n})\n\nconst ExperimentNameInfo = React.memo<{ uid: string }>(({ uid }) => {\n  const name = useSelector(selectExperimentName(uid))\n  return <LabelValueGridRow label=\"NAME\" value={name} />\n})\n\nconst LabelValueGridRow = React.memo<{ label: string; value: string }>(\n  ({ label, value }) => {\n    return (\n      <>\n        <Grid item xs={4}>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {label}:\n          </Typography>\n        </Grid>\n        <Grid item xs={8}>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {value}\n          </Typography>\n        </Grid>\n      </>\n    )\n  },\n)\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport { AlgorithmTreeView } from './TreeView'\nimport { ReactFlowComponent } from './ReactFlowComponent'\nimport RightDrawer from './RightDrawer'\nimport { selectRightDrawerIsOpen } from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { CurrentPipelineInfo } from 'components/common/CurrentPipelineInfo'\nimport { CONTENT_HEIGHT, DRAWER_WIDTH, RIGHT_DRAWER_WIDTH } from 'const/Layout'\nimport { Box } from '@mui/material'\nimport { grey } from '@mui/material/colors'\n\nconst FlowChart = React.memo<UseRunPipelineReturnType>((props) => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  return (\n    <RootDiv>\n      <DndProvider backend={HTML5Backend}>\n        <Box\n          sx={{\n            width: DRAWER_WIDTH,\n          }}\n          borderRight={1}\n          borderColor={grey[300]}\n        >\n          <CurrentPipelineInfo />\n          <DrawerContents>\n            <AlgorithmTreeView />\n          </DrawerContents>\n        </Box>\n\n        <MainContents open={open}>\n          <ReactFlowComponent {...props} />\n        </MainContents>\n      </DndProvider>\n      <RightDrawer />\n    </RootDiv>\n  )\n})\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n})\n\nconst DrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')<{ open: boolean }>(\n  ({ theme }) => ({\n    flexDirection: 'column',\n    flexGrow: 1,\n    minHeight: CONTENT_HEIGHT,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -RIGHT_DRAWER_WIDTH,\n  }),\n  ({ open, theme }) =>\n    open\n      ? {\n          transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n          marginRight: 0,\n        }\n      : undefined,\n)\n\nexport default FlowChart\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport AddIcon from '@mui/icons-material/Add'\nimport Button from '@mui/material/Button'\nimport { pushInitialItemToNewRow } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const VisualizeItemAddButton: React.FC = () => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(pushInitialItemToNewRow())\n  }\n  return (\n    <StyledPaper elevation={1} variant=\"outlined\">\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height=\"100%\"\n      >\n        <StyledButton onClick={onClick}>\n          <AddIcon fontSize=\"large\" color=\"primary\" />\n        </StyledButton>\n      </Box>\n    </StyledPaper>\n  )\n}\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  width: 260,\n  height: 255,\n  border: 'dashed',\n  borderWidth: 2,\n  borderColor: theme.palette.divider,\n  margin: theme.spacing(1),\n}))\n\nconst StyledButton = styled(Button)({\n  width: '100%',\n  height: '100%',\n})\n","import React from 'react'\n\nexport function useMouseDragHandler(\n  onMouseDown: (event: React.MouseEvent) => {\n    onMouseMove: (this: Document, event: MouseEvent) => void\n    onMouseUp: (this: Document, event: MouseEvent) => void\n  },\n  dependencies: React.DependencyList,\n) {\n  return React.useCallback(\n    (event: React.MouseEvent) => {\n      const { onMouseMove, onMouseUp } = onMouseDown(event)\n      document.addEventListener('mousemove', onMouseMove)\n      document.addEventListener(\n        'mouseup',\n        (event) => {\n          document.removeEventListener('mousemove', onMouseMove)\n          onMouseUp.call(document, event)\n        },\n        { once: true },\n      )\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dependencies],\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport Menu from '@mui/material/Menu'\nimport MenuItem from '@mui/material/MenuItem'\nimport ListItemText from '@mui/material/ListItemText'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport AddIcon from '@mui/icons-material/Add'\nimport {\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { insertInitialItemToNextColumn } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { deleteDisplayItem } from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const DisplayDataItemLayoutMenuIcon = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onClickDeleteMenu = () => {\n    // visualize Itemで同じpathのデータ個数を調べて、1だったら、displayも削除\n    dispatch(\n      deleteDisplayItem(\n        isSingleData && filePath != null && dataType != null\n          ? { itemId, deleteData: true, filePath, dataType }\n          : { itemId, deleteData: false },\n      ),\n    )\n  }\n  const onClickInsertMenu = () => {\n    dispatch(insertInitialItemToNextColumn(itemId))\n  }\n  return (\n    <PresentationalLayoutMenuIcon\n      onClickDeleteMenu={onClickDeleteMenu}\n      onClickInsertMenu={onClickInsertMenu}\n    />\n  )\n})\n\nconst PresentationalLayoutMenuIcon = React.memo<{\n  onClickDeleteMenu: () => void\n  onClickInsertMenu: () => void\n}>(({ onClickDeleteMenu, onClickInsertMenu }) => {\n  const [open, setOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLButtonElement>(null)\n  const onClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.stopPropagation() // 親divのonClickを反応させないため\n    setOpen((prevOpen) => !prevOpen)\n  }\n  const onClose = () => {\n    setOpen(false)\n  }\n  const onClickDeleteMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickDeleteMenu()\n    setOpen(false)\n  }\n  const onClickInsertMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickInsertMenu()\n    setOpen(false)\n  }\n  return (\n    <>\n      <IconButton ref={anchorRef} onClick={onClick}>\n        <MoreVertIcon />\n      </IconButton>\n      <Menu anchorEl={anchorRef.current} open={open} onClose={onClose}>\n        <MenuItem onClick={onClickInsertMenuFn}>\n          <ListItemIcon>\n            <AddIcon />\n          </ListItemIcon>\n          <ListItemText>Insert into next column</ListItemText>\n        </MenuItem>\n        <MenuItem onClick={onClickDeleteMenuFn}>\n          <ListItemIcon>\n            <DeleteIcon />\n          </ListItemIcon>\n          <ListItemText>Delete</ListItemText>\n        </MenuItem>\n      </Menu>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport FormControl from '@mui/material/FormControl'\nimport MenuItem from '@mui/material/MenuItem'\nimport InputLabel from '@mui/material/InputLabel'\nimport FormHelperText from '@mui/material/FormHelperText'\nimport Select from '@mui/material/Select'\nimport ListSubheader from '@mui/material/ListSubheader'\n\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { RootState } from 'store/store'\nimport { selectInputNode } from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { selectNodeLabelById } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultSuccessList,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { getFileName } from 'store/slice/FlowElement/FlowElementUtils'\n\nexport const FilePathSelect: React.FC<{\n  dataType?: DATA_TYPE\n  selectedNodeId: string | null\n  selectedFilePath: string | null\n  onSelect: (nodeId: string, filePath: string, dataType: DATA_TYPE, outputKey?: string) => void\n  label?: string\n}> = ({ dataType, selectedNodeId, selectedFilePath, onSelect, label }) => {\n  const inputNodeFilePathInfoList = useSelector(\n    (state: RootState) => {\n      const inputNodes = selectInputNode(state)\n      return Object.entries(inputNodes)\n        .map(([nodeId, inputNode]) => ({\n          nodeId,\n          filePath: inputNode.selectedFilePath,\n          fileType: inputNode.fileType,\n          dataType: toDataTypeFromFileType(inputNode.fileType),\n          nodeName: selectNodeLabelById(nodeId)(state),\n        }))\n        .filter(({ filePath }) => filePath != null)\n        .filter(({ dataType: inputNodeDataType }) =>\n          dataType != null ? inputNodeDataType === dataType : true,\n        )\n    },\n    // todo 比較関数\n  )\n\n  const latestUid = useSelector(selectPipelineLatestUid)\n\n  const algorithmNodeOutputPathInfoList = useSelector((state: RootState) => {\n    if (latestUid != null) {\n      const runResult = selectPipelineNodeResultSuccessList(state)\n      return runResult.map(({ nodeId, nodeResult }) => {\n        return {\n          nodeId,\n          nodeName: selectNodeLabelById(nodeId)(state),\n          paths: Object.entries(nodeResult.outputPaths)\n            .map(([outputKey, value]) => {\n              return {\n                outputKey,\n                filePath: value.path,\n                type: value.type,\n              }\n            })\n            .filter(({ type }) =>\n              dataType != null ? type === dataType : true,\n            ),\n        }\n      })\n    } else {\n      return []\n    }\n  })\n\n  const [open, setOpen] = React.useState(false)\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const onSelectHandle = (\n    nodeId: string,\n    filePath: string,\n    dataType: DATA_TYPE,\n    outputKey?: string\n  ) => {\n    onSelect(nodeId, filePath, dataType, outputKey)\n    handleClose()\n  }\n\n  const menuItemList: React.ReactElement[] = []\n  inputNodeFilePathInfoList.forEach((pathInfo) => {\n    const filePath = pathInfo.filePath\n    if (Array.isArray(filePath)) {\n      filePath.forEach((pathElm) => {\n        menuItemList.push(\n          <MenuItem\n            value={`${pathInfo.nodeId}/${pathElm}`}\n            onClick={() =>\n              onSelectHandle(pathInfo.nodeId, pathElm ?? '', pathInfo.dataType)\n            }\n            key={pathInfo.nodeId}\n          >\n            {getFileName(pathElm)}\n          </MenuItem>,\n        )\n      })\n    } else {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${pathInfo.filePath}`}\n          onClick={() =>\n            onSelectHandle(pathInfo.nodeId, filePath ?? '', pathInfo.dataType)\n          }\n          key={pathInfo.nodeId}\n        >\n          {pathInfo.nodeName}\n        </MenuItem>,\n      )\n    }\n  })\n  algorithmNodeOutputPathInfoList.forEach((pathInfo) => {\n    menuItemList.push(<ListSubheader>{pathInfo.nodeName}</ListSubheader>)\n    pathInfo.paths.forEach((outputPath, i) => {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${outputPath.filePath}`}\n          onClick={() =>\n            onSelectHandle(\n              pathInfo.nodeId,\n              outputPath.filePath,\n              outputPath.type,\n              outputPath.outputKey\n            )\n          }\n          key={`${pathInfo.nodeId}/${outputPath.filePath}`}\n        >\n          {outputPath.outputKey}\n        </MenuItem>,\n      )\n    })\n  })\n\n  return (\n    <FormControl style={{ minWidth: 150, maxWidth: 220 }} variant=\"standard\">\n      <InputLabel>{!!label ? label : 'Select Item'}</InputLabel>\n      <Select\n        value={`${selectedNodeId}/${selectedFilePath}`}\n        open={open}\n        onClose={handleClose}\n        onOpen={handleOpen}\n      >\n        {menuItemList}\n      </Select>\n      {inputNodeFilePathInfoList.length +\n        algorithmNodeOutputPathInfoList.length ===\n        0 && <FormHelperText error={true}>no data</FormHelperText>}\n    </FormControl>\n  )\n}\n\nfunction toDataTypeFromFileType(fileType: FILE_TYPE) {\n  switch (fileType) {\n    case FILE_TYPE_SET.IMAGE:\n      return DATA_TYPE_SET.IMAGE\n    case FILE_TYPE_SET.CSV:\n      return DATA_TYPE_SET.CSV\n    case FILE_TYPE_SET.HDF5:\n      return DATA_TYPE_SET.HDF5\n    case FILE_TYPE_SET.FLUO:\n      return DATA_TYPE_SET.FLUO\n    case FILE_TYPE_SET.BEHAVIOR:\n      return DATA_TYPE_SET.BEHAVIOR\n  }\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport FormControl from '@mui/material/FormControl'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { RootState } from 'store/store'\nimport {\n  selectDisplayDataIsSingle,\n  selectImageItemFilePath,\n  selectRoiItemFilePath,\n  selectRoiItemNodeId,\n  selectSelectedVisualizeItemId,\n  selectTimeSeriesItemRefImageItemId,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n  selectVisualizeImageItemIdList,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  selectItem,\n  setItemSize,\n  setRoiItemFilePath,\n  setTimeSeriesRefImageItemId,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { useMouseDragHandler } from 'components/utils/MouseDragUtil'\nimport { DisplayDataItemLayoutMenuIcon } from './VisualizeItemLayoutMenuIcon'\nimport { DisplayDataItem } from './DisplayDataItem'\nimport { FilePathSelect } from './FilePathSelect'\n\nexport const VisualizeItem = React.memo<{ itemId: number }>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(selectItem(itemId))\n  }\n  const isSelected = useSelector(\n    (state: RootState) => selectSelectedVisualizeItemId(state) === itemId,\n  )\n  const { size, onMouseDownX, onMouseDownY, onMouseDownXY } =\n    useItemDragResize(itemId)\n  return (\n    <Box sx={{ m: 1, display: 'flex', flexDirection: 'row' }}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Paper\n          variant=\"outlined\"\n          key={itemId}\n          onClick={onClick}\n          sx={{\n            width: `${size.width}px`,\n            minHeight: `${size.height}px`,\n            p: 1,\n            borderColor: (theme) =>\n              isSelected ? theme.palette.primary.light : undefined,\n          }}\n        >\n          <ItemHeader itemId={itemId} />\n          <DisplayDataItem itemId={itemId} />\n        </Paper>\n        <Box\n          sx={{\n            display: 'flex',\n          }}\n        >\n          <Box\n            sx={{\n              flexGrow: 1,\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              cursor: 'row-resize',\n            }}\n            onMouseDown={onMouseDownY}\n          />\n          <Box\n            sx={{\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              width: '12px',\n              cursor: 'nwse-resize',\n            }}\n            onMouseDown={onMouseDownXY}\n          />\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Box\n          sx={{\n            flexGrow: 1,\n            position: 'relative',\n            left: '-2px',\n            width: '4px',\n            cursor: 'col-resize',\n          }}\n          onMouseDown={onMouseDownX}\n        />\n        <Box\n          sx={{\n            position: 'relative',\n            height: '12px',\n            width: '4px',\n            left: '-2px',\n            cursor: 'nwse-resize',\n          }}\n          onMouseDown={onMouseDownXY}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst ItemHeader = React.memo<{ itemId: number }>(({ itemId }) => {\n  const itemDataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <Box display=\"flex\" justifyContent=\"flex-end\">\n      <Box flexGrow={1}>\n        <>ID: {itemId}</>\n        <FilePathSelectItem itemId={itemId} />\n      </Box>\n      {itemDataType === DATA_TYPE_SET.TIME_SERIES && (\n        <Box flexGrow={1}>\n          <RefImageItemIdSelect itemId={itemId} />\n        </Box>\n      )}\n      {itemDataType === DATA_TYPE_SET.IMAGE && (\n        <Box flexGrow={1}>\n          <RoiSelect itemId={itemId} />\n        </Box>\n      )}\n      <Box>\n        <DisplayDataItemLayoutMenuIcon itemId={itemId} />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const selectedNodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const selectedFilePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFilePath = (\n    nodeId: string,\n    newFilePath: string,\n    newDataType: DATA_TYPE,\n  ) => {\n    const basePayload = {\n      itemId,\n      nodeId,\n      filePath: newFilePath,\n      dataType: newDataType,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && selectedFilePath != null\n          ? {\n            ...basePayload,\n            deleteData: true,\n            prevDataType: dataType,\n            prevFilePath: selectedFilePath,\n          }\n          : {\n            ...basePayload,\n            deleteData: false,\n          },\n      ),\n    )\n  }\n\n  return (\n    <FilePathSelect\n      selectedNodeId={selectedNodeId}\n      selectedFilePath={selectedFilePath}\n      onSelect={onSelectFilePath}\n    />\n  )\n})\n\nconst RefImageItemIdSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const itemIdList = useSelector(\n    selectVisualizeImageItemIdList,\n    arrayEqualityFn,\n  )\n  const onChangeRefImageItemId = (event: SelectChangeEvent) => {\n    const value = Number(event.target.value)\n    dispatch(\n      setTimeSeriesRefImageItemId({\n        itemId,\n        refImageItemId: isNaN(value) ? null : value,\n      }),\n    )\n  }\n  const selectedRefImageItemId = useSelector(\n    selectTimeSeriesItemRefImageItemId(itemId),\n  )\n  return (\n    <FormControl fullWidth variant=\"standard\">\n      <InputLabel>ref image</InputLabel>\n      <Select\n        value={String(selectedRefImageItemId)}\n        onChange={onChangeRefImageItemId}\n      >\n        <MenuItem value={undefined}>{'None'}</MenuItem>\n        {itemIdList.map((value) => (\n          <MenuItem value={value}>{value}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst MIN_WIDTH = 200\nconst MIN_HEIFHT = 150\n\nfunction useItemDragResize(itemId: number) {\n  const dispatch = useDispatch()\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const [movingSize, setMovingSize] = React.useState({ width, height })\n  const onCommitSize = React.useCallback(\n    (size: { width: number; height: number }) =>\n      dispatch(setItemSize({ itemId, ...size })),\n    [dispatch, itemId],\n  )\n  const onMouseDownX = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          setMovingSize((size) => ({ ...size, width: movingWidth }))\n          movingX = moveEvent.screenX\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, width: movingWidth })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownY = useMouseDragHandler(\n    (downEvent) => {\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize((size) => ({ ...size, height: movingHeight }))\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownXY = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize({ width: movingWidth, height: movingHeight })\n          movingX = moveEvent.screenX\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ width: movingWidth, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  return {\n    size: movingSize,\n    onMouseDownX,\n    onMouseDownY,\n    onMouseDownXY,\n  }\n}\n\nconst RoiSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const roiItemNodeId = useSelector(selectRoiItemNodeId(itemId))\n  const roiItemFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const onSelectRoiFilePath = (nodeId: string, filePath: string, dataType: string, outputKey?: string) => {\n    dispatch(setRoiItemFilePath({ itemId, nodeId, filePath, outputKey }))\n  }\n  return (\n    <FilePathSelect\n      selectedFilePath={roiItemFilePath}\n      selectedNodeId={roiItemNodeId}\n      onSelect={onSelectRoiFilePath}\n      dataType={DATA_TYPE_SET.ROI}\n      label={'Select Roi'}\n    />\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { selectVisualizeItemLayout } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nimport { VisualizeItemAddButton } from './VisualizeItemAddButton'\nimport { VisualizeItem } from './VisualizeItem'\n\nexport const FlexItemList: React.FC = () => {\n  const layout = useSelector(selectVisualizeItemLayout, twoDimarrayEqualityFn)\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"column\" p={1} m={1}>\n      {layout.map((row) => (\n        <Box display=\"flex\" flexDirection=\"row\">\n          {row.map((itemId) => (\n            <VisualizeItem itemId={itemId} key={itemId} />\n          ))}\n        </Box>\n      ))}\n      <VisualizeItemAddButton />\n    </Box>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { GradientPickerPopover } from 'react-linear-gradient-picker'\nimport { SketchPicker } from 'react-color'\nimport { PALETTE_COLOR_SHAPE_TYPE } from 'react-linear-gradient-picker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const GradientColorPicker = React.memo<{\n  colors: { rgb: string; offset: string }[]\n  dispatchSetColor: (colorCode: ColorType[]) => void\n}>(({ colors, dispatchSetColor }) => {\n  const palette: PALETTE_COLOR_SHAPE_TYPE[] = colors.map((value) => {\n    return {\n      offset: value.offset,\n      color: value.rgb,\n    }\n  })\n\n  const onPaletteChange = (palette: PALETTE_COLOR_SHAPE_TYPE[]) => {\n    const colorCode = palette.map((value) => {\n      const color = value.color\n      const rgbStr = color.replace(/[^0-9,]/g, '').split(',')\n      const rgb = {\n        r: Number(rgbStr[0]),\n        g: Number(rgbStr[1]),\n        b: Number(rgbStr[2]),\n      }\n      return {\n        rgb: `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`,\n        offset: value.offset,\n      }\n    })\n    dispatchSetColor(colorCode)\n  }\n\n  const [open, setOpen] = useState(false)\n\n  return (\n    <GradientPickerPopover\n      open={open}\n      setOpen={() => setOpen(!open)}\n      // showAnglePicker={true}\n      width={150}\n      maxStops={10}\n      paletteHeight={25}\n      palette={palette}\n      onPaletteChange={onPaletteChange}\n      flatStyle={true}\n    >\n      <WrappedSketchPicker />\n    </GradientPickerPopover>\n  )\n})\n\ntype WrapperPropTypes = {\n  onSelect?: (color: string, opacity?: number) => void\n  color?: string\n}\n\nconst WrappedSketchPicker: React.FC<WrapperPropTypes> = ({\n  onSelect,\n  color,\n}) => {\n  return (\n    <SketchPicker\n      color={color}\n      width=\"150px\"\n      // styles={{width: \"10px\"}}\n      onChange={(c) => {\n        const { r, g, b, a } = c.rgb\n        onSelect?.(`rgb(${r}, ${g}, ${b})`, a)\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport TextField from '@mui/material/TextField'\n\nimport {\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setSaveFileName,\n  setSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\n\nexport const SaveFig: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(setSaveFormat({ itemId, saveFormat: event.target.value }))\n  }\n  const onChangeFileName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setSaveFileName({ itemId, saveFileName: event.target.value }))\n  }\n\n  return (\n    <>\n      <h3>SaveFig</h3>\n      <FormControl\n        variant=\"standard\"\n        sx={{ minWidth: 120, width: '100%', marginBottom: 1 }}\n      >\n        <InputLabel>format</InputLabel>\n        <Select label=\"smooth\" value={saveFormat} onChange={handleChange}>\n          <MenuItem value={'svg'}>svg</MenuItem>\n          <MenuItem value={'png'}>png</MenuItem>\n          <MenuItem value={'jpeg'}>jpeg</MenuItem>\n          <MenuItem value={'webp'}>webp</MenuItem>\n        </Select>\n      </FormControl>\n      <TextField\n        style={{ width: '100%' }}\n        label={'Filename'}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeFileName}\n        value={saveFileName}\n      />\n    </>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Switch from '@mui/material/Switch'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\n\nimport {\n  selectImageItemShowGrid,\n  selectImageItemShowLine,\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemFilePath,\n  selectDisplayDataIsSingle,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setImageItemShowGrid,\n  setImageItemShowLine,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowScale,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemColors,\n  resetImageActiveIndex,\n  setImageItemRoiAlpha,\n  setImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\nimport { FileSelectImple } from 'components/Workspace/FlowChart/FlowChartNode/FileSelect'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { Box, TextField } from '@mui/material'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\nimport Button from '@mui/material/Button'\nimport { getImageData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { SaveFig } from './SaveFig'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const ImageItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectImageFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.IMAGE,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.IMAGE })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  const colors = useSelector(selectImageItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setImageItemColors({ itemId, colors: colorCode }))\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectImageFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.IMAGE}\n        selectButtonLabel=\"Select Image\"\n      />\n      <StartEndIndex />\n      <Showticklabels />\n      <ShowLine />\n      <ShowGrid />\n      <ShowScale />\n      <Zsmooth />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <Alpha />\n      <RoiAlpha />\n      <SaveFig />\n    </div>\n  )\n}\n\nconst Showticklabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setImageItemShowticklabels({ itemId, showticklabels: !showticklabels }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"Showticklabels\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"ShowLine\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"ShowGrid\"\n    />\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"ShowScale\"\n    />\n  )\n}\n\nconst Zsmooth: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string | boolean>) => {\n    dispatch(setImageItemZsmooth({ itemId, zsmooth: event.target.value }))\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>smooth</InputLabel>\n      <Select label=\"smooth\" value={zsmooth} onChange={handleChange}>\n        <MenuItem value={'best'}>best</MenuItem>\n        <MenuItem value={'fast'}>fast</MenuItem>\n        <MenuItem value={'false'}>False</MenuItem>\n      </Select>\n    </FormControl>\n  )\n}\n\nconst Alpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const inputError = !(alpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemAlpha({ itemId, alpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        style={{ width: '100%' }}\n        label={'image alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={alpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst RoiAlpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const inputError = !(roiAlpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemRoiAlpha({ itemId, roiAlpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        style={{ width: '100%' }}\n        label={'roi alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={roiAlpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst StartEndIndex: React.FC = () => {\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const itemId = React.useContext(SelectedItemIdContext)\n  const [startIndex, onChangeStartIndex] = React.useState(\n    useSelector(selectImageItemStartIndex(itemId)),\n  )\n  const [endIndex, onChangeEndIndex] = React.useState(\n    useSelector(selectImageItemEndIndex(itemId)),\n  )\n  const inputError = !(startIndex > 0)\n  const dispatch = useDispatch()\n  const onStartChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeStartIndex(newValue)\n    }\n  }\n  const onEndChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeEndIndex(newValue)\n    }\n  }\n\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n  const onClickButton = () => {\n    if (startIndex > 0) {\n      dispatch(setImageItemStartIndex({ itemId, startIndex }))\n      dispatch(setImageItemEndIndex({ itemId, endIndex }))\n      dispatch(resetImageActiveIndex({ itemId, startIndex, endIndex }))\n      if (workspaceId && filePath !== null) {\n        dispatch(\n          getImageData({\n            workspaceId,\n            path: filePath,\n            startIndex: startIndex ?? 1,\n            endIndex: endIndex ?? 10,\n          }),\n        )\n      }\n    }\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>\n      <TextField\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 1,\n          min: 0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onStartChange}\n        value={startIndex}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n      ~\n      <TextField\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onEndChange}\n        value={endIndex}\n      />\n      <Button\n        size=\"small\"\n        className=\"ctrl_btn\"\n        variant=\"contained\"\n        onClick={onClickButton}\n      >\n        load\n      </Button>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FileSelectImple } from 'components/Workspace/FlowChart/FlowChartNode/FileSelect'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { FormControlLabel, Switch, TextField } from '@mui/material'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const CsvItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const dispatch = useDispatch()\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.CSV,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.CSV })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.CSV}\n        selectButtonLabel=\"Select CSV\"\n      />\n      <Transpose />\n      <SetHeader />\n      <SetIndex />\n    </div>\n  )\n}\n\nconst Transpose: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemTranspose({ itemId, transpose: !transpose }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={transpose} onChange={toggleChecked} />}\n      label=\"transpose\"\n    />\n  )\n}\n\nconst SetHeader: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeSetHeader = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value === '' ? null : Number(event.target.value)\n    if (newValue === null || newValue >= 0) {\n      dispatch(setCsvItemSetHeader({ itemId, setHeader: newValue }))\n    }\n  }\n\n  return (\n    <>\n      <TextField\n        label=\"header\"\n        sx={{\n          width: 100,\n          margin: (theme) => theme.spacing(0, 1, 0, 1),\n        }}\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeSetHeader}\n        value={setHeader}\n      />\n    </>\n  )\n}\n\nconst SetIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemSetIndex({ itemId, setIndex: !setIndex }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={setIndex} onChange={toggleChecked} />}\n      label=\"setIndex\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FormControlLabel, Switch } from '@mui/material'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setHeatMapItemColors,\n  setHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { SaveFig } from './SaveFig'\n\nexport const HeatmapItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const colors = useSelector(selectHeatMapItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setHeatMapItemColors({ itemId, colors: colorCode }))\n  }\n  return (\n    <>\n      <ShowScale />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <SaveFig />\n    </>\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setHeatMapItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"showscale\"\n    />\n  )\n}\n","import React, {useEffect, useState} from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {\n  AccordionDetails,\n  AccordionSummary,\n  FormControlLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from '@mui/material'\nimport Box from '@mui/material/Box'\nimport Checkbox from '@mui/material/Checkbox'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectTimeSeriesItemFilePath,\n  selectTimeSeriesItemKeys,\n  selectImageItemRangeUnit,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemDrawOrderList,\n  changeRangeUnit,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  getTimeSeriesAllData,\n  getTimeSeriesDataById,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { Accordion } from 'components/common/Accordion'\n\nimport { SaveFig } from './SaveFig'\nimport { selectFrameRate }  from \"../../../../store/slice/Experiments/ExperimentsSelectors\";\nimport {selectPipelineLatestUid} from \"../../../../store/slice/Pipeline/PipelineSelectors\";\n\nexport const TimeSeriesItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <Offset />\n      <Span />\n      <ShowGrid />\n      <ShowLine />\n      <ShowTickLabels />\n      <ZeroLine />\n      <SelectValue />\n      <Xrange />\n      <LegendSelect />\n      <SaveFig />\n    </div>\n  )\n}\n\nconst Offset: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemOffset({ itemId, offset: !offset }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={offset} onChange={toggleChecked} />}\n      label=\"offset\"\n    />\n  )\n}\n\nconst Span: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n\n  const dispatch = useDispatch()\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number' && newValue > 0) {\n      dispatch(setTimeSeriesItemSpan({ itemId, span: newValue }))\n    }\n  }\n  return (\n    <FormControlLabel\n      control={\n        <TextField\n          type=\"number\"\n          style={{ width: '6vw' }}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={onChange}\n          value={span}\n        />\n      }\n      label=\"offset std\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"showgrid\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"showline\"\n    />\n  )\n}\n\nconst ShowTickLabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setTimeSeriesItemShowTickLabels({\n        itemId,\n        showticklabels: !showticklabels,\n      }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"showticklabels\"\n    />\n  )\n}\n\nconst ZeroLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemZeroLine({ itemId, zeroline: !zeroline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={zeroline} onChange={toggleChecked} />}\n      label=\"zeroline\"\n    />\n  )\n}\n\nconst SelectValue: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const value = useSelector(selectImageItemRangeUnit(itemId))\n  const dispatch = useDispatch()\n  const onChangeValue = async (e: any) => {\n    dispatch(changeRangeUnit({itemId: itemId, rangeUnit: e.target.value}))\n  }\n  return (\n    <Box sx={{marginBottom: 2}}>\n      <p>range unit</p>\n      <Select\n        sx={{width: '100%'}}\n        value={value}\n        onChange={onChangeValue}\n      >\n        <MenuItem value={'frames'}>Frames</MenuItem>\n        <MenuItem value={'time'}>Time</MenuItem>\n      </Select>\n    </Box>\n  )\n}\n\nconst Xrange: React.FC = () => {\n  const currentPipelineUid = useSelector(selectPipelineLatestUid)\n  const itemId = React.useContext(SelectedItemIdContext)\n  const frameRate = useSelector(selectFrameRate(currentPipelineUid))\n  const rangeUnit = useSelector(selectImageItemRangeUnit(itemId))\n  const xrangeSelector = useSelector(selectTimeSeriesItemXrange(itemId))\n\n  const [xrange, setXrange] = useState(xrangeSelector)\n\n  useEffect(() => {\n    if(Object.keys(xrange).length < 1) return\n    rangeUnit === 'frames' ? setXrange(xrangeSelector) : setXrange({left: Number(xrangeSelector.left)/ frameRate, right: Number(xrangeSelector.right) / frameRate})\n  //eslint-disable-next-line\n  }, [JSON.stringify(rangeUnit), JSON.stringify(xrangeSelector)])\n\n  const dispatch = useDispatch()\n  const onChangeLeft = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newLeft = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newLeft === 'number') {\n      dispatch(setTimeSeriesItemXrangeLeft({ itemId, left: rangeUnit === 'frames' ? newLeft : newLeft * frameRate }))\n    }\n  }\n  const onChangeRight = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newRight = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newRight === 'number') {\n      dispatch(setTimeSeriesItemXrangeRight({ itemId, right: rangeUnit === 'frames' ? newRight : newRight * frameRate }))\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <>\n          <TextField\n            label=\"left\"\n            style={{ width: 50 }}\n            type=\"number\"\n            inputProps={{\n              step: 1,\n              min: 0,\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeLeft}\n            value={xrange.left ?? ''}\n            defaultValue={undefined}\n          />\n          <TextField\n            label=\"right\"\n            style={{ width: 50 }}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeRight}\n            value={xrange.right ?? ''}\n          />\n        </>\n      }\n      label=\"\"\n    />\n  )\n}\n\nconst LegendSelect: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  // const drawIndexMap = useSelector(selectTimeSeriesItemDrawIndexMap(itemId))\n  const dataKeys = useSelector(\n    selectTimeSeriesItemKeys(itemId),\n    arrayEqualityFn,\n  )\n  const drawOrderList = useSelector(\n    selectTimeSeriesItemDrawOrderList(itemId),\n    arrayEqualityFn,\n  )\n  const filePath = useSelector(selectTimeSeriesItemFilePath(itemId))\n\n  const allHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: event.target.checked ? dataKeys : [],\n      }),\n    )\n\n    if (event.target.checked && filePath !== null) {\n      dispatch(getTimeSeriesAllData({ path: filePath }))\n    }\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const index = event.target.value\n    const newDrawOrderList = event.target.checked\n      ? [...drawOrderList, index]\n      : drawOrderList.filter((value) => value !== index)\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    if (filePath !== null) {\n      dispatch(getTimeSeriesDataById({ path: filePath, index: index }))\n    }\n  }\n\n  const drawIndexMap = Object.fromEntries(\n    dataKeys.map((v) => {\n      if (drawOrderList.includes(v)) {\n        return [v, true]\n      } else {\n        return [v, false]\n      }\n    }),\n  )\n\n  const children = (\n    <Box sx={{ display: 'flex', flexDirection: 'column', ml: 3 }}>\n      {dataKeys.map((key) => (\n        <FormControlLabel\n          key={`${key}`}\n          label={`Index ${key}`}\n          control={\n            <Checkbox\n              checked={drawIndexMap[key]}\n              onChange={handleChange}\n              value={key}\n            />\n          }\n        />\n      ))}\n    </Box>\n  )\n\n  return (\n    <Accordion sx={{ mt: 2 }} TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        Legend select\n      </AccordionSummary>\n      <AccordionDetails>\n        <>\n          <FormControlLabel\n            label=\"All Check\"\n            control={\n              <Checkbox\n                checked={Object.values(drawIndexMap).every((v) => {\n                  return v\n                })}\n                onChange={allHandleChange}\n              />\n            }\n          />\n          {children}\n        </>\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","import React from 'react'\n// import { useSelector, useDispatch } from 'react-redux'\n// import { SelectedItemIdContext } from '../VisualizeItemEditor'\n// import { selectRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n// import { setRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n// import { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\n// import { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n// import { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const RoiItemEditor: React.FC = () => {\n  // const itemId = React.useContext(SelectedItemIdContext)\n  // const dispatch = useDispatch()\n  // const { onUploadFile } = useFileUploader(FILE_TYPE_SET.CSV)\n  // const onUploadFileHandle = (formData: FormData, fileName: string) => {\n  //   onUploadFile(formData, fileName)\n  // }\n\n  // const colors = useSelector(selectRoiItemColors(itemId))\n  // const dispathSetColor = (colorCode: ColorType[]) => {\n  //   dispatch(setRoiItemColors({ itemId, colors: colorCode }))\n  // }\n\n  return (\n    <>\n      {/* <GradientColorPicker /> */}\n      {/* <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} /> */}\n    </>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const ScatterItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const BarItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const HistogramItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const LineItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const PieItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const PolarItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport {\n  selectSelectedVisualizeItemId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { ImageItemEditor } from './Editor/ImageItemEditor'\nimport { CsvItemEditor } from './Editor/CsvItemEditor'\nimport { HeatmapItemEditor } from './Editor/HeatmapItemEditor'\nimport { TimeSeriesItemEditor } from './Editor/TimeSeriesItemEditor'\nimport { RoiItemEditor } from './Editor/RoiItemEditor'\nimport { ScatterItemEditor } from './Editor/ScatterItemEditor'\nimport { BarItemEditor } from './Editor/BarItemEditor'\nimport { HistogramItemEditor } from './Editor/HistogramItemEditor'\nimport { LineItemEditor } from './Editor/LineItemEditor'\nimport { PieItemEditor } from './Editor/PieItemEditor'\nimport { PolarItemEditor } from './Editor/PolarItemEditor'\n\nexport const VisualizeItemEditor = () => {\n  const selectedItemId = useSelector(selectSelectedVisualizeItemId)\n  return (\n    <>\n      {selectedItemId != null ? (\n        <SelectedItemIdContext.Provider value={selectedItemId}>\n          <Box m={1}>\n            <DisplayDataItemEditor />\n          </Box>\n        </SelectedItemIdContext.Provider>\n      ) : (\n        'Please select item...'\n      )}\n    </>\n  )\n}\n\nexport const SelectedItemIdContext = React.createContext<number>(NaN)\n\nconst DisplayDataItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <div style={{ marginTop: 8 }}>\n      <DisplayEditor dataType={dataType} />\n    </div>\n  )\n}\n\nconst DisplayEditor: React.FC<{\n  dataType: DATA_TYPE | null\n}> = ({ dataType }) => {\n  /* 他のtypeのEditorも必要になったら追加する */\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return <ImageItemEditor />\n    case DATA_TYPE_SET.CSV:\n      return <CsvItemEditor />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatmapItemEditor />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesItemEditor />\n    case DATA_TYPE_SET.ROI:\n      return <RoiItemEditor />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterItemEditor />\n    case DATA_TYPE_SET.BAR:\n      return <BarItemEditor />\n    case DATA_TYPE_SET.HTML:\n      return <div>html editor</div>\n    case DATA_TYPE_SET.HISTOGRAM:\n      return <HistogramItemEditor />\n    case DATA_TYPE_SET.LINE:\n      return <LineItemEditor />\n    case DATA_TYPE_SET.PIE:\n      return <PieItemEditor />\n    case DATA_TYPE_SET.POLAR:\n      return <PolarItemEditor />\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport { styled } from '@mui/material/styles'\nimport { FlexItemList } from './FlexItemList'\nimport { VisualizeItemEditor } from './VisualizeItemEditor'\nimport { CurrentPipelineInfo } from 'components/common/CurrentPipelineInfo'\nimport { CONTENT_HEIGHT, DRAWER_WIDTH } from 'const/Layout'\nimport { Box } from '@mui/material'\nimport { grey } from '@mui/material/colors'\n\nconst Visualize: React.FC = () => {\n  return (\n    <RootDiv>\n      <Box\n        sx={{\n          width: DRAWER_WIDTH,\n        }}\n        borderRight={1}\n        borderColor={grey[300]}\n      >\n        <CurrentPipelineInfo />\n        <StyledDrawerContents>\n          <VisualizeItemEditor />\n        </StyledDrawerContents>\n      </Box>\n\n      <MainContents>\n        <FlexItemList />\n      </MainContents>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n})\n\nconst StyledDrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')({\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n  minHeight: CONTENT_HEIGHT\n})\n\nexport default Visualize\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Box } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { useRunPipeline } from 'store/slice/Pipeline/PipelineHook'\nimport Experiment from 'components/Workspace/Experiment/Experiment'\nimport FlowChart from 'components/Workspace/FlowChart/FlowChart'\nimport Visualize from 'components/Workspace/Visualize/Visualize'\nimport { selectActiveTab } from 'store/slice/Workspace/WorkspaceSelector'\n\nconst Workspace: React.FC = () => {\n  const runPipeline = useRunPipeline() // タブ切り替えによって結果取得処理が止まってしまうのを回避するため、タブの親レイヤーで呼び出している\n  const activeTab = useSelector(selectActiveTab)\n\n  return (\n    <RootDiv>\n      <TabPanel value={activeTab} index={0}>\n        <FlowChart {...runPipeline} />\n      </TabPanel>\n      <TabPanel value={activeTab} index={1}>\n        <Visualize />\n      </TabPanel>\n      <TabPanel value={activeTab} index={2}>\n        <Experiment />\n      </TabPanel>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  backgroundColor: theme.palette.background.paper,\n  height: '100%',\n}))\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: number\n  value: number\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      style={{ height: 'calc(100% - 58px)' }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ height: '100%' }}>{children}</Box>}\n    </div>\n  )\n}\n\nexport default Workspace\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { selectRunPostData } from 'store/slice/Run/RunSelectors'\nimport {\n  selectPipelineIsCanceled,\n  selectPipelineIsStartedSuccess,\n  selectPipelineLatestUid,\n  selectPipelineStatus,\n} from './PipelineSelectors'\nimport {\n  run,\n  pollRunResult,\n  runByCurrentUid,\n  cancelResult,\n} from './PipelineActions'\nimport { selectFilePathIsUndefined } from '../InputNode/InputNodeSelectors'\nimport { selectAlgorithmNodeNotExist } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  fetchExperiment,\n  getExperiments,\n} from '../Experiments/ExperimentsActions'\nimport { useSnackbar, VariantType } from 'notistack'\nimport { RUN_STATUS } from './PipelineType'\nimport { useLocation, useNavigate, useParams } from 'react-router-dom'\nimport { IS_STANDALONE, STANDALONE_WORKSPACE_ID } from 'const/Mode'\nimport {\n  clearCurrentWorkspace,\n  setActiveTab,\n  setCurrentWorkspace,\n} from '../Workspace/WorkspaceSlice'\nimport { clearExperiments } from '../Experiments/ExperimentsSlice'\nimport { AppDispatch } from 'store/store'\nimport { getWorkspace } from 'store/slice/Workspace/WorkspaceActions'\nimport { selectIsWorkspaceOwner } from '../Workspace/WorkspaceSelector'\n\nconst POLLING_INTERVAL = 5000\n\nexport type UseRunPipelineReturnType = ReturnType<typeof useRunPipeline>\n\nexport function useRunPipeline() {\n  const dispatch = useDispatch()\n  const appDispatch: AppDispatch = useDispatch()\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  const { workspaceId } = useParams<{ workspaceId: string }>()\n  const _workspaceId = Number(workspaceId)\n\n  React.useEffect(() => {\n    if (IS_STANDALONE) {\n      dispatch(setCurrentWorkspace(STANDALONE_WORKSPACE_ID))\n      dispatch(fetchExperiment(STANDALONE_WORKSPACE_ID))\n    } else {\n      appDispatch(getWorkspace({ id: _workspaceId }))\n        .unwrap()\n        .then((_) => {\n          dispatch(fetchExperiment(_workspaceId))\n          const selectedTab = location.state?.tab\n          selectedTab && dispatch(setActiveTab(selectedTab))\n        })\n        .catch((_) => {\n          navigate('/console/workspaces')\n        })\n    }\n    return () => {\n      dispatch(clearExperiments())\n      dispatch(clearCurrentWorkspace())\n    }\n  }, [dispatch, appDispatch, navigate, _workspaceId, location.state])\n\n  const uid = useSelector(selectPipelineLatestUid)\n  const isCanceled = useSelector(selectPipelineIsCanceled)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n  const isOwner = useSelector(selectIsWorkspaceOwner)\n  const runDisabled = isOwner ? isStartedSuccess : true\n\n  const filePathIsUndefined = useSelector(selectFilePathIsUndefined)\n  const algorithmNodeNotExist = useSelector(selectAlgorithmNodeNotExist)\n  const runPostData = useSelector(selectRunPostData)\n  const handleRunPipeline = React.useCallback(\n    (name: string) => {\n      dispatch(run({ runPostData: { name, ...runPostData, forceRunList: [] } }))\n    },\n    [dispatch, runPostData],\n  )\n  const handleClickVariant = (variant: VariantType, mess: string) => {\n    enqueueSnackbar(mess, { variant })\n  }\n  const handleRunPipelineByUid = React.useCallback(() => {\n    dispatch(runByCurrentUid({ runPostData }))\n  }, [dispatch, runPostData])\n  const handleCancelPipeline = React.useCallback(async () => {\n    if (uid != null) {\n      const data = await dispatch(cancelResult({ uid }))\n      if ((data as any).error) {\n        handleClickVariant(\n          'error',\n          'Failed to cancel workflow. Please try again.',\n        )\n      }\n    }\n    //eslint-disable-next-line\n  }, [dispatch, uid])\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isStartedSuccess && !isCanceled && uid != null) {\n        dispatch(pollRunResult({ uid: uid }))\n      }\n    }, POLLING_INTERVAL)\n    return () => {\n      clearInterval(intervalId)\n    }\n  }, [dispatch, uid, isCanceled, isStartedSuccess])\n  const status = useSelector(selectPipelineStatus)\n  const { enqueueSnackbar } = useSnackbar()\n  // タブ移動による再レンダリングするたびにスナックバーが実行されてしまう挙動を回避するために前回の値を保持\n  const [prevStatus, setPrevStatus] = React.useState(status)\n  React.useEffect(() => {\n    if (prevStatus !== status) {\n      if (status === RUN_STATUS.FINISHED) {\n        enqueueSnackbar('Finished', { variant: 'success' })\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.START_SUCCESS) {\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.ABORTED) {\n        enqueueSnackbar('Aborted', { variant: 'error' })\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.CANCELED) {\n        enqueueSnackbar('Workflow canceled.', { variant: 'success' })\n        dispatch(getExperiments())\n      }\n      setPrevStatus(status)\n    }\n  }, [dispatch, status, prevStatus, enqueueSnackbar])\n  return {\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    uid,\n    status,\n    runDisabled,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n    handleCancelPipeline,\n  }\n}\n","import React from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport Close from '@mui/icons-material/Close'\nimport { SnackbarProvider, SnackbarKey, useSnackbar } from 'notistack'\nimport { BrowserRouter, Navigate, Route, Routes } from 'react-router-dom'\nimport Layout from 'components/Layout'\nimport Dashboard from 'pages/Dashboard'\nimport Account from 'pages/Account'\nimport AccountManager from 'pages/AccountManager'\nimport AccountDelete from 'pages/AccountDelete'\nimport Login from 'pages/Login'\nimport ResetPassword from 'pages/ResetPassword'\nimport Workspaces from 'pages/Workspace'\nimport Workspace from 'pages/Workspace/Workspace'\nimport { IS_STANDALONE } from 'const/Mode'\n\nconst App: React.FC = () => {\n  return (\n    <SnackbarProvider\n      maxSnack={5}\n      action={(snackbarKey) => (\n        <SnackbarCloseButton snackbarKey={snackbarKey} />\n      )}\n    >\n      <BrowserRouter>\n        <Layout>\n          {IS_STANDALONE ? (\n            <Routes>\n              <Route path=\"/\" element={<Workspace />} />\n              <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\n            </Routes>\n          ) : (\n            <Routes>\n              <Route path=\"/\" element={<Navigate replace to=\"/console\" />} />\n              <Route path=\"/account-deleted\" element={<AccountDelete />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/reset-password\" element={<ResetPassword />} />\n              <Route path=\"/console\" element={<Dashboard />} />\n              <Route path=\"/console/account\" element={<Account />} />\n              <Route path=\"/console/account-manager\" element={<AccountManager />} />\n              <Route path=\"/console/workspaces\">\n                <Route path=\"\" element={<Workspaces />} />\n                <Route path=\":workspaceId\" element={<Workspace />} />\n              </Route>\n              <Route path=\"/console/*\" element={<Navigate replace to=\"/console\" />} />\n              <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\n            </Routes>\n          )}\n        </Layout>\n      </BrowserRouter>\n    </SnackbarProvider>\n  )\n}\n\nconst SnackbarCloseButton: React.FC<{ snackbarKey: SnackbarKey }> = ({\n  snackbarKey,\n}) => {\n  const { closeSnackbar } = useSnackbar()\n  return (\n    <IconButton onClick={() => closeSnackbar(snackbarKey)} size=\"large\">\n      <Close style={{ color: 'white' }} />\n    </IconButton>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  ALGORITHM_LIST_SLICE_NAME,\n  AlgorithmListType,\n} from './AlgorithmListType'\nimport { getAlgoList } from './AlgorithmListActions'\nimport { convertToAlgoListType } from './AlgorithmListUtils'\n\nexport const initialState: AlgorithmListType = {\n  isLatest: false,\n  tree: {},\n}\n\nexport const algorithmListSlice = createSlice({\n  name: ALGORITHM_LIST_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlgoList.fulfilled, (state, action) => {\n      state.tree = convertToAlgoListType(action.payload)\n      state.isLatest = true\n    })\n  },\n})\n\nexport default algorithmListSlice.reducer\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n  DisplayData,\n  DISPLAY_DATA_SLICE_NAME,\n} from './DisplayDataType'\nimport {\n  getCsvData,\n  getHeatMapData,\n  getImageData,\n  getTimeSeriesDataById,\n  getTimeSeriesAllData,\n  getRoiData,\n  getScatterData,\n  getBarData,\n  getHTMLData,\n  getTimeSeriesInitData,\n  getHistogramData,\n  getLineData,\n  getPieData,\n  getPolarData,\n} from './DisplayDataActions'\nimport {\n  deleteDisplayItem,\n  setNewDisplayDataPath,\n} from '../VisualizeItem/VisualizeItemActions'\nimport { run, runByCurrentUid } from 'store/slice/Pipeline/PipelineActions'\nconst initialState: DisplayData = {\n  timeSeries: {},\n  heatMap: {},\n  image: {},\n  csv: {},\n  roi: {},\n  scatter: {},\n  bar: {},\n  html: {},\n  histogram: {},\n  line: {},\n  pie: {},\n  polar: {},\n}\n\nexport const displayDataSlice = createSlice({\n  name: DISPLAY_DATA_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        if (action.payload.deleteData) {\n          const { filePath, dataType } = action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        if (action.payload.deleteData) {\n          const { prevDataType: dataType, prevFilePath: filePath } =\n            action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(getTimeSeriesDataById.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesDataById.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesDataById.fulfilled, (state, action) => {\n        const { path, index } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].meta = action.payload.meta\n        state.timeSeries[path].data[index] = action.payload.data[index]\n        if (action.payload.std[index] !== undefined) {\n          state.timeSeries[path].std[index] = action.payload.std[index]\n        }\n      })\n      .addCase(getTimeSeriesAllData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesAllData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesAllData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].meta = action.payload.meta\n        state.timeSeries[path].data = action.payload.data\n        if (action.payload.std !== undefined) {\n          state.timeSeries[path].std = action.payload.std\n        }\n      })\n      .addCase(getTimeSeriesInitData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesInitData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesInitData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].meta = action.payload.meta\n        state.timeSeries[path].data = action.payload.data\n        state.timeSeries[path].std = action.payload.std\n      })\n      .addCase(getHeatMapData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHeatMapData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: action.payload.data,\n          meta: action.payload.meta,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHistogramData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.histogram[path] = {\n          type: 'histogram',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHistogramData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.histogram[path] = {\n          type: 'histogram',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHistogramData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.histogram[path] = {\n          type: 'histogram',\n          data: action.payload.data,\n          meta: action.payload.meta,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getLineData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.line[path] = {\n          type: 'line',\n          data: [],\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getLineData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.line[path] = {\n          type: 'line',\n          data: [],\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getLineData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.line[path] = {\n          type: 'line',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          meta: action.payload.meta,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getPieData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.pie[path] = {\n          type: 'pie',\n          data: [],\n          columns: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getPieData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.pie[path] = {\n          type: 'pie',\n          data: [],\n          columns: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getPieData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.pie[path] = {\n          type: 'pie',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          meta: action.payload.meta,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getPolarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.polar[path] = {\n          type: 'polar',\n          data: [],\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getPolarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.polar[path] = {\n          type: 'polar',\n          data: [],\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getPolarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.polar[path] = {\n          type: 'polar',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          meta: action.payload.meta,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getImageData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: action.payload.data,\n          meta: action.payload.meta,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getCsvData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: action.payload.data,\n          meta: action.payload.meta,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getRoiData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getRoiData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        const { data } = action.payload\n\n        // 計算\n        const roi1Ddata: number[] = data[0]\n          .map((row) =>\n            Array.from(new Set(row.filter((value) => value != null))),\n          )\n          .flat()\n        const roiUniqueIdList = Array.from(new Set(roi1Ddata))\n          .sort((n1, n2) => n1 - n2)\n          .map(String)\n\n        state.roi[path] = {\n          type: 'roi',\n          data: data,\n          meta: action.payload.meta,\n          pending: false,\n          fulfilled: true,\n          error: null,\n          roiUniqueList: roiUniqueIdList,\n        }\n      })\n      .addCase(getRoiData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getScatterData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: action.payload.data,\n          meta: action.payload.meta,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getBarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: action.payload.data,\n          meta: action.payload.meta,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: action.payload.data,\n          meta: action.payload.meta,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => initialState,\n      )\n  },\n})\n\nfunction deleteDisplayDataFn(\n  state: DisplayData,\n  filePath: string,\n  dataType: DATA_TYPE,\n) {\n  if (dataType === DATA_TYPE_SET.IMAGE) {\n    delete state.image[filePath]\n  } else if (dataType === DATA_TYPE_SET.TIME_SERIES) {\n    delete state.timeSeries[filePath]\n  } else if (dataType === DATA_TYPE_SET.CSV) {\n    delete state.csv[filePath]\n  } else if (dataType === DATA_TYPE_SET.HEAT_MAP) {\n    delete state.heatMap[filePath]\n    // } else if (dataType === DATA_TYPE_SET.ROI) {\n    //   delete state.roi[filePath]\n  } else if (dataType === DATA_TYPE_SET.SCATTER) {\n    delete state.scatter[filePath]\n  } else if (dataType === DATA_TYPE_SET.BAR) {\n    delete state.bar[filePath]\n  } else if (dataType === DATA_TYPE_SET.HTML) {\n    delete state.html[filePath]\n  } else if (dataType === DATA_TYPE_SET.HISTOGRAM) {\n    delete state.histogram[filePath]\n  } else if (dataType === DATA_TYPE_SET.LINE) {\n    delete state.line[filePath]\n  } else if (dataType === DATA_TYPE_SET.PIE) {\n    delete state.pie[filePath]\n  } else if (dataType === DATA_TYPE_SET.POLAR) {\n    delete state.polar[filePath]\n  }\n}\n\nexport default displayDataSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { FileUploader, FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\nimport { setUploadProgress, uploadFile } from './FileUploaderActions'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nconst initialState: FileUploader = {}\n\nexport const fileUploaderSlice = createSlice({\n  name: FILE_UPLOADER_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFileUploaderStateById(state, action: PayloadAction<string>) {\n      state[action.payload] = inistialUploaderState\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(setUploadProgress, (state, action) => {\n        const { progess, requestId } = action.payload\n        state[requestId].uploadingProgress = progess\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileName, requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          fileName,\n          isUninitialized: false,\n          pending: true,\n          fulfilled: false,\n          uploadingProgress: 0,\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { requestId } = action.meta.arg\n        const { resultPath } = action.payload\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          path: resultPath,\n          pending: false,\n          fulfilled: true,\n        }\n      })\n      .addCase(uploadFile.rejected, (state, action) => {\n        const { requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          pending: false,\n          fulfilled: false,\n          error: action.error.message,\n        }\n      })\n  },\n})\n\nexport const { setFileUploaderStateById } = fileUploaderSlice.actions\n\nexport default fileUploaderSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { uploadFile } from 'store/slice/FileUploader/FileUploaderActions'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { getFilesTree } from './FilesTreeAction'\nimport { FilesTree, FILES_TREE_SLICE_NAME } from './FilesTreeType'\nimport { convertToTreeNodeType } from './FilesTreeUtils'\n\nexport const initialState: FilesTree = {}\nexport const filesTreeSlice = createSlice({\n  name: FILES_TREE_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getFilesTree.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        state[fileType] = {\n          isLoading: true,\n          isLatest: false,\n          tree: [],\n        }\n      })\n      .addCase(getFilesTree.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        state[fileType].tree = convertToTreeNodeType(action.payload)\n        state[fileType].isLatest = true\n        state[fileType].isLoading = false\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          if (state[FILE_TREE_TYPE_SET.IMAGE] != null) {\n            state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.IMAGE] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          if (state[FILE_TREE_TYPE_SET.CSV] != null) {\n            state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.CSV] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          if (state[FILE_TREE_TYPE_SET.HDF5] != null) {\n            state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.HDF5] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else {\n          if (state[FILE_TREE_TYPE_SET.ALL] != null) {\n            state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.ALL] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n        } else {\n          state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n        }\n      })\n  },\n})\n\nexport default filesTreeSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as MuiColors from '@mui/material/colors'\n\nexport type HandleTypeColor = {\n  colorMap: { [type: string]: string }\n  /**\n   * HANDLE_COLOR_PRESET_MAPのkey\n   */\n  nextKey: number\n}\n\nconst initialState: HandleTypeColor = {\n  colorMap: {\n    ImageData: MuiColors.red[500],\n    IscellData: MuiColors.indigo[500],\n    TimeSeriesData: MuiColors.yellow[500],\n    Suite2pData: MuiColors.green[500],\n    FluoData: MuiColors.orange[500],\n    BehaviorData: MuiColors.yellow[500],\n  },\n  nextKey: 0,\n}\n\nconst SLICE_NAME = 'handleTypeColor'\n\nexport const handleTypeColorSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {},\n})\n\nexport default handleTypeColorSlice.reducer\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\nimport { HDF5TreeNodeType } from './HDF5Type'\n\nexport function convertToTreeNodeType(dto: HDF5TreeDTO[]): HDF5TreeNodeType[] {\n  return dto.map((node) =>\n    node.isDir\n      ? {\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n          path: node.path,\n        }\n      : {\n          name: node.name,\n          isDir: false,\n          shape: node.shape,\n          path: node.path,\n          nbytes: node.nbytes,\n        },\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { getHDF5Tree } from './HDF5Action'\nimport { HDF5Tree, HDF5_SLICE_NAME } from './HDF5Type'\nimport { convertToTreeNodeType } from './HDF5Utils'\n\nconst initialState: HDF5Tree = {\n  isLoading: false,\n  tree: [],\n}\nexport const HDF5Slice = createSlice({\n  name: HDF5_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHDF5Tree.pending, (state, action) => {\n        state = {\n          isLoading: true,\n          tree: [],\n        }\n      })\n      .addCase(getHDF5Tree.fulfilled, (state, action) => {\n        state.tree = convertToTreeNodeType(action.payload)\n        state.isLoading = false\n      })\n  },\n})\n\nexport default HDF5Slice.reducer\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit'\nimport {\n  algorithmListReducer,\n  algorithmNodeReducer,\n  displayDataReducer,\n  fileUploaderReducer,\n  flowElementReducer,\n  inputNodeReducer,\n  nwbReducer,\n  filesTreeReducer,\n  handleTypeColorReducer,\n  rightDrawerReducer,\n  visualaizeItemReducer,\n  snakemakeReducer,\n  pipelineReducer,\n  hdf5Reducer,\n  experimentsReducer,\n  workspaceReducer,\n  userReducer,\n} from './slice'\n\nexport const rootReducer = combineReducers({\n  algorithmList: algorithmListReducer,\n  algorithmNode: algorithmNodeReducer,\n  displayData: displayDataReducer,\n  fileUploader: fileUploaderReducer,\n  flowElement: flowElementReducer,\n  inputNode: inputNodeReducer,\n  handleColor: handleTypeColorReducer,\n  filesTree: filesTreeReducer,\n  nwb: nwbReducer,\n  rightDrawer: rightDrawerReducer,\n  visualaizeItem: visualaizeItemReducer,\n  snakemake: snakemakeReducer,\n  pipeline: pipelineReducer,\n  hdf5: hdf5Reducer,\n  experiments: experimentsReducer,\n  workspace: workspaceReducer,\n  user: userReducer,\n})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\nexport type ThunkApiConfig<T = unknown, PendingMeta = unknown> = {\n  state: RootState\n  dispatch: AppDispatch\n  rejectValue: T\n  penfingMeta: PendingMeta\n}\n","import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme({\n  components: {\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiSelect: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiDialog: {\n      defaultProps: {\n        disableEscapeKeyDown: true,\n      },\n    },\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from 'store/store'\n\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './Theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}
