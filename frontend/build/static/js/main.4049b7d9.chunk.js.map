{"version":3,"sources":["utils/param/ParamUtils.ts","store/slice/AlgorithmNode/AlgorithmNodeSelectors.ts","store/slice/AlgorithmList/AlgorithmListUtils.ts","store/slice/AlgorithmList/AlgorithmListSelectors.ts","store/slice/AlgorithmList/AlgorithmListType.ts","const/API.ts","api/algolist/AlgoList.ts","store/slice/AlgorithmList/AlgorithmListActions.ts","store/slice/InputNode/InputNodeType.ts","store/slice/FlowElement/FlowElementType.ts","api/params/Params.ts","store/slice/FlowElement/FlowElementActions.ts","utils/nanoid/NanoIdUtils.ts","const/flowchart.ts","components/FlowChart/DnDItemType.ts","components/FlowChart/TreeView.tsx","api/experiments/Experiments.ts","store/slice/Experiments/ExperimentsType.ts","store/slice/Experiments/ExperimentsActions.ts","store/slice/InputNode/InputNodeActions.ts","store/slice/FlowElement/FlowElementUtils.ts","api/run/RunUtils.ts","api/files/Files.ts","store/slice/FileUploader/FileUploaderType.ts","store/slice/FileUploader/FileUploaderActions.ts","store/slice/FlowElement/FlowElementSlice.ts","store/slice/FlowElement/FlowElementSelectors.ts","api/nwb/NWB.ts","store/slice/NWB/NWBType.ts","store/slice/NWB/NWBAction.ts","store/slice/NWB/NWBSlice.ts","store/slice/RightDrawer/RightDrawerSlice.ts","utils/EqualityUtils.ts","store/slice/NWB/NWBSelectors.ts","components/common/Accordion.tsx","components/common/ParamFormItemCreator.tsx","components/FlowChart/NWB.tsx","api/snakemake/Snakemake.ts","store/slice/Snakemake/SnakemakeType.ts","store/slice/Snakemake/SnakemakeAction.ts","store/slice/Snakemake/SnakemakeSlice.ts","store/slice/Snakemake/SnakemakeSelectors.ts","components/FlowChart/Snakemake.tsx","store/slice/Pipeline/PipelineType.ts","store/slice/DisplayData/DisplayDataType.ts","store/slice/DisplayData/DisplayDataUtils.ts","store/slice/Pipeline/PipelineUtils.ts","store/slice/Pipeline/PipelineSelectors.ts","api/run/Run.ts","store/slice/Pipeline/PipelineActions.ts","store/slice/Pipeline/PipelineSlice.ts","components/RunButtons.tsx","components/ToolBar.tsx","store/slice/InputNode/InputNodeUtils.ts","store/slice/InputNode/InputNodeSelectors.ts","components/FlowChart/FlowChartNode/HandleColorHook.ts","store/slice/HandleTypeColor/HandleTypeColorSelectors.ts","components/FlowChart/FlowChartNode/LinerProgressWithLabel.tsx","store/slice/FileUploader/FileUploaderInitlalState.ts","store/slice/FileUploader/FileUploaderSelectors.ts","store/slice/FileUploader/FileUploaderHook.ts","store/slice/FilesTree/FilesTreeSelectors.ts","store/slice/FilesTree/FilesTreeType.ts","store/slice/FilesTree/FilesTreeAction.ts","store/slice/FilesTree/FilesTreeUtils.ts","components/common/FileSelectDialog.tsx","components/FlowChart/FlowChartNode/FileSelect.tsx","components/FlowChart/FlowChartNode/FlowChartUtils.ts","components/FlowChart/FlowChartNode/ImageFileNode.tsx","store/slice/DisplayData/DisplayDataSelectors.ts","store/slice/VisualizeItem/VisualizeItemType.ts","store/slice/VisualizeItem/VisualizeItemUtils.ts","store/slice/VisualizeItem/VisualizeItemSelectors.ts","api/outputs/Outputs.ts","store/slice/DisplayData/DisplayDataActions.ts","store/slice/VisualizeItem/VisualizeItemActions.ts","store/slice/VisualizeItem/VisualizeItemSlice.ts","components/Visualize/DataContext.tsx","components/Visualize/Plot/HeatMapPlot.tsx","components/Visualize/Plot/ImagePlot.tsx","components/Visualize/Plot/RoiPlot.tsx","components/Visualize/Plot/ScatterPlot.tsx","components/Visualize/Plot/CsvPlot.tsx","components/Visualize/Plot/TimeSeriesPlot.tsx","components/Visualize/Plot/BarPlot.tsx","components/Visualize/Plot/HTMLPlot.tsx","components/Visualize/DisplayDataItem.tsx","components/FlowChart/FlowChartNode/AlgorithmOutputDialog.tsx","components/FlowChart/FlowChartNode/AlgorithmNode.tsx","store/slice/InputNode/InputNodeSlice.ts","components/FlowChart/FlowChartNode/CsvFileNode.tsx","store/slice/HDF5/HDF5Selectors.ts","api/hdf5/HDF5.ts","store/slice/HDF5/HDF5Type.ts","store/slice/HDF5/HDF5Action.ts","components/FlowChart/FlowChartNode/HDF5FileNode.tsx","components/FlowChart/FlowChartNode/FluoFileNode.tsx","components/FlowChart/FlowChartNode/BehaviorFileNode.tsx","components/FlowChart/FlowChartNode/ReactFlowNodeTypesConst.ts","components/FlowChart/CustomEdge.tsx","components/FlowChart/ReactFlowComponent.tsx","store/slice/RightDrawer/RightDrawerSelectors.ts","store/slice/AlgorithmNode/AlgorithmNodeType.ts","store/slice/AlgorithmNode/AlgorithmNodeActions.ts","store/slice/AlgorithmNode/AlgorithmNodeSlice.ts","components/FlowChart/AlgorithmParamForm.tsx","components/FlowChart/RightDrawer.tsx","components/FlowChart/FlowChart.tsx","components/Visualize/VisualizeItemAddButton.tsx","components/utils/MouseDragUtil.ts","components/Visualize/VisualizeItemLayoutMenuIcon.tsx","components/Visualize/FilePathSelect.tsx","components/Visualize/VisualizeItem.tsx","components/Visualize/FlexItemList.tsx","components/Visualize/Editor/GradientColorPicker.tsx","components/Visualize/Editor/SaveFig.tsx","components/Visualize/Editor/ImageItemEditor.tsx","components/Visualize/Editor/CsvItemEditor.tsx","components/Visualize/Editor/HeatmapItemEditor.tsx","components/Visualize/Editor/TimeSeriesItemEditor.tsx","components/Visualize/Editor/RoiItemEditor.tsx","components/Visualize/Editor/ScatterItemEditor.tsx","components/Visualize/Editor/BarItemEditor.tsx","components/Visualize/VisualizeItemEditor.tsx","components/Visualize/Visualize.tsx","store/slice/Experiments/ExperimentsSelectors.ts","components/Experiment/ExperimentStatusIcon.tsx","components/Experiment/Button/DownloadButton.tsx","components/Experiment/CollapsibleTable.tsx","components/Experiment/Button/DeleteButton.tsx","components/Experiment/Button/ImportButton.tsx","components/Experiment/ExperimentTable.tsx","components/Experiment/Experiment.tsx","store/selectors/run/RunSelectors.ts","components/optinist.png","components/Layout.tsx","store/slice/Pipeline/PipelineHook.ts","App.tsx","reportWebVitals.ts","store/slice/AlgorithmList/AlgorithmListSlice.ts","store/slice/DisplayData/DisplayDataSlice.ts","store/slice/FileUploader/FileUploaderSlice.ts","store/slice/FilesTree/FilesTreeSlice.ts","store/slice/HandleTypeColor/HandleTypeColorSlice.ts","store/slice/HDF5/HDF5Utils.ts","store/slice/HDF5/HDF5Slice.ts","store/slice/Experiments/ExperimentsUtils.ts","store/slice/Experiments/ExperimentsSlice.ts","store/store.ts","Theme.ts","index.tsx"],"names":["getChildParam","path","ParamMap","result","Object","values","node","isParamChild","children","param","type","convertToParamMap","dto","keyList","entries","forEach","name","value","kList","Array","isArray","isDictObject","concat","join","push","selectAlgorithmNodeById","nodeId","state","algorithmNode","selectAlgorithmName","selectAlgorithmParams","params","isAlgoChild","algoNode","getAlgoChild","algoList","algoName","convertToAlgoListType","prototype","hasOwnProperty","call","functionPath","args","returns","selectAlgorithmList","algorithmList","selectAlgorithmListIsLated","isLatest","selectAlgorithmListTree","tree","ALGORITHM_LIST_SLICE_NAME","HOST","process","PORT","BASE_URL","getAlgoListApi","a","axios","get","response","data","getAlgoList","createAsyncThunk","_","thunkAPI","rejectWithValue","INPUT_NODE_SLICE_NAME","FILE_TYPE_SET","FLOW_ELEMENT_SLICE_NAME","NODE_TYPE_SET","getAlgoParamsApi","addAlgorithmNode","addInputNode","createAction","nanoid","customAlphabet","getNanoId","INITIAL_IMAGE_ELEMENT_ID","INITIAL_ALGO_STYLE","width","height","padding","borderRadius","INITIAL_DATA_STYLE","border","REACT_FLOW_NODE_TYPE_KEY","DND_ITEM_TYPE_SET","AlgorithmTreeView","React","memo","dispatch","useDispatch","useSelector","useEffect","onAddAlgoNode","useCallback","nodeName","position","newNode","id","label","TreeView","sx","flexGrow","defaultCollapseIcon","defaultExpandIcon","TreeItem","InputNodeComponent","fileName","fileType","map","i","AlgoNodeComponentRecursive","toFixed","onAddDataNode","nodeType","reactFlowNodeType","useLeafItemDrag","isDragging","dragRef","LeafItem","ref","style","opacity","onFocusCapture","e","stopPropagation","AddButton","onClick","AlgoNodeComponent","IconButton","size","Typography","variant","textOverflow","overflow","display","styled","treeItemClasses","iconContainer","margin","onDragEnd","useDrag","end","monitor","getDropResult","didDrop","collect","getExperimentsApi","deleteExperimentByUidApi","uid","delete","deleteExperimentByListApi","uidList","post","importExperimentByUidApi","downloadExperimentNwbApi","responseType","downloadExperimentConfigApi","EXPERIMENTS_SLICE_NAME","getExperiments","deleteExperimentByUid","deleteExperimentByList","importExperimentByUid","setInputNodeFilePath","isNodeData","isNode","isAlgorithmNodeData","getLabelByPath","filePath","length","getFileName","split","reverse","isInputNodePostData","isInputNodeData","isAlgorithmNodePostData","FILE_TREE_TYPE_SET","getFilesTreeApi","file_type","uploadFileApi","config","formData","FILE_UPLOADER_SLICE_NAME","setUploadProgress","uploadFile","requestId","getUploadConfig","percent","total","progess","resultPath","file_path","onUpdateProgressFn","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","initialFlowPosition","x","y","zoom","initialElementCoord","initialState","flowElements","flowPosition","elementCoord","flowElementSlice","createSlice","reducers","setFlowPosition","action","payload","setFlowElements","deleteFlowElements","removeElements","deleteFlowElementsById","element","find","edge","undefined","editFlowElementPositionById","coord","elementIdx","findIndex","ele","targetItem","extraReducers","builder","addCase","fulfilled","meta","arg","targetPosition","Position","Left","sourcePosition","Right","updateElementCoord","targetNode","newNodeList","nodeDict","edgeDict","min","max","random","actions","selectFlowElements","flowElement","selectFlowPosition","selectNodeById","filter","selectNodeLabelById","getNWBParamsApi","getNWBParams","nwbSlice","updateParam","newValue","RIGHT_DRAWER_MODE","open","mode","currendNodeId","rightDrawerSlice","openRightDrawer","closeRightDrawer","toggleParamForm","toggleNwb","toggleSnakemake","elm","arrayEqualityFn","b","every","v","twoDimarrayEqualityFn","selectNwb","nwb","selectNwbParamsKeyList","keys","selectNwbParam","paramKey","selectNwbParamsValue","target","Error","Accordion","props","disableGutters","elevation","square","borderColor","theme","palette","divider","boxShadow","borderBottom","createParamFormItemComponent","paramSelector","paramValueSelector","paramUpdateActionCreator","useParamValueUpdate","ParamItemForString","updateParamAction","TextField","onChange","multiline","ParamItemForNumber","InputLabelProps","shrink","event","Number","ParamItemForBoolean","Switch","checked","ParamItemForValueType","ParamChildItem","Box","marginTop","spacing","marginBottom","alignItems","verticalAlign","ParamItem","AccordionSummary","expandIcon","AccordionDetails","NWBSettingButton","Button","endIcon","NWBSettingContents","paramKeyList","className","Component","getSnakemakeParamsApi","SNAKEMAKE_SLICE_NAME","getSnakemakeParams","SnakemakeSlice","selectSnakemakeParams","snakemake","selectSnakemake","selectSnakemakeParamsKeyList","selectSnakemakeParam","selectSnakemakeParamsValue","SnakemakeButton","SnakemakeContents","PIPELINE_SLICE_NAME","RUN_STATUS","NODE_RESULT_STATUS","RUN_BTN_OPTIONS","RUN_NEW","RUN_ALREADY","RUN_BTN_LABELS","DISPLAY_DATA_SLICE_NAME","DATA_TYPE_SET","toDataType","isNodeResultPending","nodeResult","status","isNodeResultSuccess","isStartedPipeline","pipeline","getInitialRunResult","runPostData","initialResult","convertToOutputPath","selectPipelineLatestUid","currentPipeline","selectStartedPipeline","run","selectPipelineRunBtn","runBtn","selectRunResultPendingNodeIdList","runResult","isNodeResultPendingAndNodeId","selectPipelineStatus","selectPipelineIsCanceled","selectPipelineIsStartedSuccess","isNodeResultSuccessAndNodeId","selectPipelineNodeResultStatus","includes","selectPipelineNodeResultOutputPaths","outputPaths","runApi","runByUidApi","pendingNodeIdList","responseData","runByCurrentUid","currentUid","getState","pollRunResult","pipelineSlice","cancelPipeline","setRunBtnOption","runBtnOption","nodeResultDto","outputPath","message","convertToRunResult","rejected","addMatcher","isAnyOf","pending","RunButtons","isStartedSuccess","filePathIsUndefined","handleCancelPipeline","handleRunPipeline","handleRunPipelineByUid","useState","dialogOpen","setDialogOpen","enqueueSnackbar","useSnackbar","menuOpen","setMenuOpen","anchorRef","useRef","handleClose","current","contains","uidExists","ButtonGroup","disabled","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","option","MenuItem","selected","handleMenuItemClick","marginRight","RunDialog","handleRun","setName","error","setError","Dialog","onClose","DialogTitle","DialogContent","autoFocus","fullWidth","helperText","DialogActions","color","ToolBar","float","textAlign","top","right","zIndex","textTransform","isCsvInputNode","inputNode","isHDF5InputNode","selectInputNodeById","selectInputNodeDefined","selectCsvInputNodeSelectedFilePath","selectedFilePath","selectImageInputNodeSelectedFilePath","selectHDF5InputNodeSelectedFilePath","selectFilePathIsUndefined","hdf5Path","selectCsvInputNodeParam","selectInputNodeHDF5Path","item","useHandleColor","key","handleColor","colorMap","LinearProgressWithLabel","mr","LinearProgress","minWidth","inistialUploaderState","isUninitialized","uploadingProgress","selectFileUploader","fileUploader","useFileUploader","onUploadFile","uninitialized","selectFileUploadIsUninitialized","selectUploadFilePath","selectFileUploadIsPending","selectFileUploadIsFulfilled","progress","selectFileUploadProgress","selectFileUploadError","selectFilesTree","filesTree","FILES_TREE_SLICE_NAME","getFilesTree","convertToTreeNodeType","isdir","isDir","nodes","getNodeByPath","FileSelectDialog","initialFilePath","onClickCancel","onClickOk","title","multiSelect","setSelectedFilePath","useTheme","dividers","FileTreeView","FilePathSelectedListView","selectFilesTreeNodes","selectFilesIsLatest","isLoading","selectFilesIsLoading","useFileTree","onCheckFile","selectedPath","onCheckDir","childrenFilePathList","from","Set","disableSelection","onNodeSelect","nodeIds","isDirNodeByPath","TreeNode","allChecked","allNotChecked","indeterminate","icon","htmlColor","TreeItemLabel","checkboxProps","childNode","fontSize","Checkbox","disableRipple","text","FileSelect","onChangeFilePath","marginLeft","FileSelectImple","onSelectFile","fileTreeType","selectButtonLabel","uploadButtonLabel","inputRef","setOpen","accept","getFileInputAccept","click","preventDefault","files","file","FormData","append","visibility","toHandleId","getHandleType","handleId","isValidConnection","connection","sourceHandle","targetHandle","sourceHandleStyle","ImageFileNode","ImageFileNodeImple","elementSelected","returnType","imageColor","background","alpha","primary","light","selectDisplayData","displayData","selectTimeSeriesData","timeSeries","selectTimeSeriesDataIsInitialized","selectHeatMapDataIsInitialized","heatMap","selectImageData","image","selectImageDataIsInitialized","selectImageDataIsPending","selectCsvDataIsInitialized","csv","selectCsvDataError","selectCsvDataIsPending","selectCsvDataIsFulfilled","selectRoiData","roi","selectRoiDataIsInitialized","selectRoiDataIsFulfilled","selectScatterDataIsInitialized","scatter","selectBarDataIsInitialized","bar","selectHTMLDataIsInitialized","html","VISUALIZE_ITEM_SLICE_NAME","VISUALIZE_ITEM_TYPE_SET","isDisplayDataItem","itemType","isImageItem","dataType","isTimeSeriesItem","isCsvItem","isHeatMapItem","isScatterItem","isBarItem","selectSelectedVisualizeItemId","visualaizeItem","selectedItemId","selectVisualizeImageItemIdList","items","itemId","selectVisualizeItemById","isWorkflowDialog","selectVisualizeItems","selectVisualizeItemLayout","layout","selectVisualizeItemWidth","selectVisualizeItemHeight","selectVisualizeDataType","selectVisualizeDataNodeId","selectVisualizeDataFilePath","selectVisualizeSaveFilename","saveFileName","selectVisualizeSaveFormat","saveFormat","selectImageItemFilePath","selectTimeSeriesItemFilePath","selectRoiItemFilePath","roiItem","selectImageItemShowticklabels","showticklabels","selectImageItemZsmooth","zsmooth","selectImageItemStartIndex","startIndex","selectImageItemEndIndex","endIndex","selectImageItemShowLine","showline","selectImageItemShowGrid","showgrid","selectImageItemShowScale","showscale","selectImageItemColors","colors","selectImageItemAlpha","selectImageItemRoiAlpha","roiAlpha","selectTimeSeriesItemOffset","offset","selectTimeSeriesItemSpan","span","selectTimeSeriesItemShowGrid","selectTimeSeriesItemShowLine","selectTimeSeriesItemShowTickLabels","selectTimeSeriesItemZeroLine","zeroline","selectTimeSeriesItemXrange","xrange","selectTimeSeriesItemDrawOrderList","drawOrderList","selectTimeSeriesItemRefRoiUniqueList","refImageItemId","imageItem","roiUniqueList","selectTimeSeriesItemKeys","dataKeys","selectRoiItemMaxNumber","roiFilePath","roiData","arr","selectHeatMapItemShowScale","selectHeatMapItemColors","selectCsvItemTranspose","transpose","selectCsvItemSetHeader","setHeader","selectCsvItemSetIndex","setIndex","selectBarItemIndex","index","selectScatterItemXIndex","xIndex","selectScatterItemYIndex","yIndex","selectDisplayDataIsSingle","targetFilePath","getTimeSeriesInitDataApi","getTimeSeriesDataByIdApi","getTimeSeriesAllDataApi","getHeatMapDataApi","getImageDataApi","start_index","end_index","getCsvDataApi","getRoiDataApi","getScatterDataApi","getBarDataApi","getHTMLDataApi","getTimeSeriesInitData","getTimeSeriesDataById","getTimeSeriesAllData","getHeatMapData","getImageData","getCsvData","getRoiData","getScatterData","getBarData","getHTMLData","setImageItemClikedDataId","clickedDataId","selectingImageArea","range","x1","x2","y1","y2","selectedZList","z","zNum","String","selectedZ","deleteDisplayItem","setNewDisplayDataPath","displayDataCommonInitialValue","imageItemInitialValue","rgb","activeIndex","duration","timeSeriesItemInitialValue","left","maxIndex","heatMapItemInitialValue","csvItemInitialValue","roiItemInitialValue","scatterItemInitialValue","barItemInitialValue","hdf5ItemInitialValue","htmlItemInitialValue","fluoItemInitialValue","behaviorItemInitialValue","getDisplayDataItemInitialValue","visualaizeItemSlice","pushInitialItemToNewRow","newItemId","addInitialItemFn","insertInitialItemToNextColumn","targetItemId","targetRowIndex","row","targetColumnIndex","indexOf","splice","addItemForWorkflowDialog","maxId","getMaxItemId","deleteAllItemForWorkflowDialog","setItemSize","selectItem","setRoiItemFilePath","setFilePath","setSaveFormat","setSaveFileName","setImageItemFilePath","setTimeSeriesItemFilePath","setHeatMapItemFilePath","resetImageActiveIndex","resetImageActiveIndexFn","incrementImageActiveIndex","decrementImageActiveIndex","setImageActiveIndex","setImageItemShowticklabels","setImageItemZsmooth","setImageItemShowLine","setImageItemShowGrid","setImageItemShowScale","setImageItemColors","setImageItemStartIndex","setImageItemEndIndex","setImageItemAlpha","setImageItemRoiAlpha","setImageItemDuration","setTimeSeriesItemOffset","setTimeSeriesItemSpan","setTimeSeriesItemShowGrid","setTimeSeriesItemShowLine","setTimeSeriesItemShowTickLabels","setTimeSeriesItemZeroLine","setTimeSeriesItemXrangeLeft","setTimeSeriesItemXrangeRight","setTimeSeriesItemDrawOrderList","setTimeSeriesItemMaxIndex","setTimeSeriesRefImageItemId","setHeatMapItemShowScale","setHeatMapItemColors","setCsvItemTranspose","setCsvItemSetHeader","setCsvItemSetIndex","setScatterItemXIndex","setScatterItemYIndex","setBarItemIndex","imageItemId","idList","reduce","nextId","DisplayDataContext","createContext","NaN","HeatMapPlot","useContext","isPending","isInitialized","selectHeatMapDataError","isFulfilled","selectHeatMapDataIsFulfilled","HeatMapImple","heatMapData","heatMapDataEqualtyFn","columns","selectHeatMapColumns","selectHeatMapIndex","colorscale","useMemo","parseFloat","offsets","hoverongaps","showlegend","dragmode","t","l","autosize","displayModeBar","responsive","toImageButtonOptions","format","filename","ImagePlot","selectImageDataError","ImagePlotImple","selectImageItemActiveIndex","ImagePlotChart","imageData","selectActiveImageData","imageDataEqualtyFn","timeDataMaxIndex","maxIdx","selectRoiItemIndex","colorscaleRoi","createColormap","colormap","nshades","rgba2hex","replace","hovertemplate","new_i","floor","zmin","zmax","selectMode","setSelectMode","onSelecting","callback","timeoutId","delay","clearTimeout","setTimeout","debounce","xaxis","autorange","autotick","ticks","yaxis","automargin","ml","PlayBack","FormControlLabel","m","control","points","curveNumber","toString","maxSize","selectImageItemDuration","intervalRef","clearInterval","onPlayClick","setInterval","onDurationChange","inputProps","step","Slider","defaultValue","valueLabelDisplay","marks","activeThumb","newIndex","rgba","r","g","outParts","substring","part","RoiPlot","selectRoiDataError","RoiPlotImple","idx","ScatterPlot","selectScatterDataError","selectScatterDataIsFulfilled","ScatterPlotImple","scatterData","scatterDataEqualityFn","textposition","textfont","family","marker","font","XIndex","YIndex","FormControl","InputLabel","Select","aArray","bArray","aKey","CsvPlot","CsvPlotImple","PresentationalCsvPlot","csvData","col","header","headerData","field","headerName","rows","row_id","rowObj","fromEntries","TimeSeriesPlot","selectTimeSeriesDataError","selectTimeSeriesDataIsFulfilled","TimeSeriesPlotImple","timeSeriesData","timeSeriesDataEqualityFn","dataXrange","dataStd","std","selectTimeSeriesStd","colorScale","activeIdx","mean","sqrt","pow","visible","line","error_y","array","annotations","xref","yref","arrowhead","ax","ay","onLegendClick","clickNumber","newDrawOrderList","aValue","bKey","bValue","nestEqualityFun","BarPlot","selectBarDataError","selectBarDataIsFulfilled","BarPlotImple","barData","barDataEqualityFn","selectBarIndex","SelectIndex","HTMLPlot","selectHTMLDataError","selectHTMLDataIsFulfilled","HTMLPlotImple","htmlData","dangerouslySetInnerHTML","__html","DisplayDataItem","Provider","DisplayPlot","AlgorithmOutputDialog","closeFn","TitleWithCloseButton","pt","px","OutputViewer","p","outputKeyList","selectPipelineNodeResultOutputKeyList","selectedOutoutKey","setSelectedOutputKey","OutputSelectTabs","onSelectOutput","DisplayDataView","outputKey","Tabs","scrollButtons","tabsClasses","Tab","selectPipelineNodeResultOutputFilePath","selectPipelineNodeResultOutputFileDataType","selectVisualizeItemIdForWorkflowDialog","mx","my","leftHandleStyle","rightHandleStyle","AlgorithmNode","AlgorithmNodeImple","isConnectable","useStatus","AlgoName","AlgoArgs","AlgoReturns","Message","pipelineStatus","paddingLeft","main","algoArgs","algoListChild","selectAlgoArgs","algoInfoListEqualtyFn","info","algoInfo","ArgHandle","algoReturns","selectAlgoReturns","ReturnHandle","isNone","hex_color","isHover","setHover","rgb_color","hex","exec","parseInt","hexToRgb","onMouseEnter","onMouseLeave","Tooltip","arrow","latestUid","errorMsg","selectPipelineNodeResultMessage","anchorElRef","Popover","anchorOrigin","vertical","horizontal","FormHelperText","inputNodeSlice","deleteInputNode","setCsvInputNodeParam","setInputNodeHDF5Path","newState","CsvFileNode","CsvFileNodeImple","ParamSettingDialog","selectCsvInputNodeParamSetHeader","setSetHeader","selectCsvInputNodeParamSetIndex","setSetIndex","selectCsvInputNodeParamTranspose","setTranspose","CsvPreview","otherProps","selectHDF5","hdf5","getHDF5TreeApi","HDF5_SLICE_NAME","getHDF5Tree","HDF5FileNode","HDF5FileNodeImple","ItemSelect","structureFileName","Structure","useHDF5Tree","shape","nbytes","FluoFileNode","FluoFileNodeImple","fluoColor","BehaviorFileNode","BehaviorFileNodeImple","behaviorColor","reactFlowNodeTypes","reactFlowEdgeTypes","buttonedge","sourceX","sourceY","targetX","targetY","arrowHeadType","markerEndId","edgePath","getBezierPath","markerEnd","getMarkerEnd","getEdgeCenter","edgeCenterX","edgeCenterY","d","foreignObjectSize","ReactFlowComponent","reactFlowInstance","setReactFlowInstance","wrapparRef","useDrop","drop","monitorOffset","getClientOffset","project","offsetLeft","offsetTop","elements","onElementsRemove","elementsToRemove","onConnect","addEdge","animated","onLoad","onDragOver","dataTransfer","dropEffect","onNodeDragStop","nodeTypes","edgeTypes","defaultPosition","defaultZoom","onMoveEnd","selectRightDrawerIsOpen","rightDrawer","selectRightDrawerMode","selectRightDrawerCurrentNodeId","ALGORITHM_NODE_SLICE_NAME","getAlgoParams","algorithmNodeSlice","isUpdated","AlgorithmParamForm","ParamFormContext","algoParamIsLoaded","selectAlgorithmParamsExit","selectAlgorithmParamsKeyList","selectAlgorithmParam","selectAlgorithmParamsValue","Contents","ParamFormConetent","StyledDrawer","Drawer","flexShrink","drawerClasses","paper","MainContents","RightDrawer","anchor","Toolbar","Divider","FlowChart","RootDiv","DndProvider","backend","HTML5Backend","DrawerContents","drawerWidth","flexDirection","transitions","create","easing","sharp","leavingScreen","easeOut","enteringScreen","VisualizeItemAddButton","StyledPaper","justifyContent","StyledButton","borderWidth","useMouseDragHandler","onMouseDown","dependencies","onMouseMove","onMouseUp","document","addEventListener","removeEventListener","once","DisplayDataItemLayoutMenuIcon","isSingleData","PresentationalLayoutMenuIcon","onClickDeleteMenu","deleteData","onClickInsertMenu","Menu","ListItemIcon","ListItemText","FilePathSelect","selectedNodeId","onSelect","inputNodeFilePathInfoList","inputNodes","selectInputNode","toDataTypeFromFileType","inputNodeDataType","algorithmNodeOutputPathInfoList","selectPipelineNodeResultSuccessList","paths","onSelectHandle","menuItemList","pathInfo","pathElm","ListSubheader","maxWidth","onOpen","VisualizeItem","isSelected","movingSize","setMovingSize","onCommitSize","onMouseDownX","downEvent","movingX","screenX","movingWidth","moveEvent","newWidth","MIN_WIDTH","onMouseDownY","movingY","screenY","movingHeight","newHeight","MIN_HEIFHT","onMouseDownXY","useItemDragResize","ItemHeader","cursor","itemDataType","FilePathSelectItem","RefImageItemIdSelect","RoiSelect","newFilePath","newDataType","basePayload","prevDataType","prevFilePath","itemIdList","selectedRefImageItemId","selectTimeSeriesItemRefImageItemId","isNaN","roiItemNodeId","selectRoiItemNodeId","roiItemFilePath","FlexItemList","flexWrap","GradientColorPicker","dispatchSetColor","maxStops","paletteHeight","onPaletteChange","colorCode","rgbStr","flatStyle","WrappedSketchPicker","c","SaveFig","SelectedItemIdContext","ImageItemEditor","newPath","onSelectImageFile","Showticklabels","ShowLine","ShowGrid","ShowScale","Zsmooth","Alpha","inputError","RoiAlpha","StartEndIndex","onChangeStartIndex","onChangeEndIndex","CsvItemEditor","Transpose","SetHeader","SetIndex","HeatmapItemEditor","TimeSeriesItemEditor","Offset","Span","ShowTickLabels","ZeroLine","Xrange","newLeft","newRight","LegendSelect","handleChange","drawIndexMap","mt","unmountOnExit","RoiItemEditor","ScatterItemEditor","BarItemEditor","VisualizeItemEditor","DisplayDataItemEditor","DisplayEditor","StyledDrawerContents","Visualize","selectExperiments","experiments","selectExperimentsSatusIsUninitialized","selectExperimentsSatusIsFulfilled","selectExperimentsSatusIsError","selectExperimentsErrorMessage","selectExperimentList","experimentList","selectExperiment","selectExperimentName","selectExperimentFunction","functions","ExperimentStatusIcon","NWBDownloadButton","hasNWB","ExperimentUidContext","url","setFileUrl","URL","createObjectURL","Blob","revokeObjectURL","href","download","ConfigDownloadButton","CollapsibleTable","TableRow","TableCell","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","gutterBottom","component","Table","Head","Body","TableHead","nodeIdList","selectExperimentFunctionNodeIdList","TableBody","TableRowOfFunction","selectExperimentFunctionName","selectExperimentFunctionStatus","selectExperimentFunctionHasNWB","scope","DeleteButton","isRunning","ImportButton","unwrap","then","ExperimentTable","isError","TableImple","ExperimentsErrorView","Alert","severity","AlertTitle","order","setOrder","sortTarget","setSortTarget","checkedList","setCheckedList","onCheckBoxClick","TableContainer","HeadItem","sortHandler","property","sort","getComparator","expData","RowItem","TableSortLabel","active","direction","timestamp","selectExperimentTimeStamp","statusList","f","selectExperimentStatus","selectExperimentHasNWB","Fragment","tableCellClasses","root","borderBottomWidth","orderBy","descendingComparator","Experiment","selectRunPostData","nwbParam","selectNwbParams","snakemakeParam","selectEdgeDictForRun","selectNodeDictForRun","forceRunList","selectForceRunList","algorithmNodePostData","selectInputNodeSelectedFilePath","selectInputNodeFileType","selectInputNodeParam","inputNodePosyData","isEdge","backgroundColor","StyledAppBar","AppBar","drawer","TabPanel","other","hidden","a11yProps","Layout","setValue","runPipeline","isCanceled","intervalId","prevStatus","setPrevStatus","useRunPipeline","src","optinistLogo","alt","centered","textColor","SnackbarCloseButton","snackbarKey","closeSnackbar","App","maxSnack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","algorithmListSlice","deleteDisplayDataFn","displayDataSlice","roi1Ddata","flat","roiUniqueIdList","n1","n2","fileUploaderSlice","setFileUploaderStateById","currentState","filesTreeSlice","ImageData","MuiColors","IscellData","TimeSeriesData","Suite2pData","FluoData","BehaviorData","nextKey","handleTypeColorSlice","HDF5Slice","convertToExperimentType","function","unique_id","convertToExperimentStatus","success","experimentsSlice","convertToExperimentListType","rootReducer","combineReducers","algorithmListReducer","algorithmNodeReducer","displayDataReducer","fileUploaderReducer","flowElementReducer","inputNodeReducer","handleTypeColorReducer","filesTreeReducer","nwbReducer","rightDrawerReducer","visualaizeItemReducer","snakemakeReducer","pipelineReducer","hdf5Reducer","experimentsReducer","store","configureStore","reducer","createTheme","components","MuiTextField","defaultProps","MuiSelect","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.4049b7d9.chunk.js","sourcesContent":["import {\n  ParamDTO,\n  ParamChild,\n  ParamParent,\n  ParamType,\n  ParamMap,\n} from './ParamType'\n\nexport function getChildParam(\n  path: string,\n  ParamMap: ParamMap,\n): ParamChild | null {\n  let result: ParamChild | null = null\n  for (const node of Object.values(ParamMap)) {\n    if (isParamChild(node)) {\n      if (node.path === path) {\n        result = node\n      }\n    } else {\n      result = getChildParam(path, node.children)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function isParamChild(param: ParamType): param is ParamChild {\n  return param.type === 'child'\n}\n\nexport function isParamParent(param: ParamType): param is ParamParent {\n  return param.type === 'parent'\n}\n\nfunction isDictObject(value: unknown): value is { [key: string]: unknown } {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst PATH_SEPARATOR = '/'\n\nexport function convertToParamMap(dto: ParamDTO, keyList?: string[]): ParamMap {\n  const ParamMap: ParamMap = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    const kList = keyList ?? []\n    if (isDictObject(value)) {\n      kList.push(name)\n      ParamMap[name] = {\n        type: 'parent',\n        children: convertToParamMap(value, kList),\n      }\n    } else {\n      ParamMap[name] = {\n        type: 'child',\n        value,\n        path: kList.concat([name]).join(PATH_SEPARATOR),\n      }\n    }\n  })\n  return ParamMap\n}\n\nexport function equalsParamMap(a: ParamMap, b: ParamMap) {\n  if (a === b) {\n    return true\n  }\n  const aArray = Object.keys(a)\n  const bArray = Object.keys(b)\n  return (\n    aArray.length === bArray.length &&\n    aArray.every((aKey) => {\n      const aValue = a[aKey]\n      const bValue = b[aKey]\n      return equalsParam(aValue, bValue)\n    })\n  )\n}\n\nfunction equalsParam(a: ParamType, b: ParamType): boolean {\n  if (a === b) {\n    return true\n  }\n  if (isParamChild(a) && isParamChild(b)) {\n    return equalsParamChild(a, b)\n  } else if (isParamParent(a) && isParamParent(b)) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      aArray.length === bArray.length &&\n      aArray.every((aKey) => {\n        const aValue = a.children[aKey]\n        const bValue = b.children[aKey]\n        return equalsParam(aValue, bValue)\n      })\n    )\n  } else {\n    return false\n  }\n}\n\nfunction equalsParamChild(a: ParamChild, b: ParamChild) {\n  return a.path === b.path && a.value === b.value\n}\n","import { RootState } from 'store/store'\n\nimport { getChildParam } from 'utils/param/ParamUtils'\n\nexport const selectAlgorithmNode = (state: RootState) => state.algorithmNode\n\nexport const selectAlgorithmNodeById = (nodeId: string) => (state: RootState) =>\n  state.algorithmNode[nodeId]\n\nexport const selectAlgorithmNodeDefined =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(state.algorithmNode).includes(nodeId)\n\nexport const selectAlgorithmFunctionPath =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).functionPath\n\nexport const selectAlgorithmName = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).name\n\nexport const selectAlgorithmParams = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).params\n\nexport const selectAlgorithmIsUpdated =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).isUpdated\n\nexport const selectAlgorithmParamsExit =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).params !== null\n\nexport const selectAlgorithmParamsKeyList =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(selectAlgorithmNodeById(nodeId)(state)?.params ?? {})\n\nexport const selectAlgorithmParamsValue =\n  (nodeId: string, path: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmParam =\n  (nodeId: string, paramKey: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      return params[paramKey]\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n","import { AlgoListDTO, AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  AlgorithmNodeType,\n  AlgorithmChild,\n  AlgorithmParent,\n  AlgorithmListTree,\n} from './AlgorithmListType'\n\nexport function isAlgoChild(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmChild {\n  return algoNode.type === 'child'\n}\n\nexport function isAlgoParent(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmParent {\n  return algoNode.type === 'parent'\n}\n\nexport function getAlgoChild(\n  algoList: AlgorithmListTree,\n  algoName: string,\n): AlgorithmChild | null {\n  let result: AlgorithmChild | null = null\n  for (const [name, node] of Object.entries(algoList)) {\n    if (isAlgoChild(node)) {\n      if (name === algoName) {\n        result = node\n      }\n    } else {\n      result = getAlgoChild(node.children, algoName)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function convertToAlgoListType(dto: AlgoListDTO) {\n  const algoList: AlgorithmListTree = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    if (Object.prototype.hasOwnProperty.call(value, 'children')) {\n      algoList[name] = {\n        type: 'parent',\n        children: convertToAlgoListType(\n          (\n            value as {\n              children: AlgoListDTO\n            }\n          ).children as AlgoListDTO,\n        ),\n      }\n    } else {\n      const dto = value as {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n      algoList[name] = {\n        type: 'child',\n        functionPath: dto.path,\n        args: dto.args,\n        returns: dto.returns,\n      }\n    }\n  })\n  return algoList\n}\n","import { RootState } from 'store/store'\nimport { selectAlgorithmName } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { getAlgoChild } from './AlgorithmListUtils'\n\nexport const selectAlgorithmList = (state: RootState) => state.algorithmList\n\nexport const selectAlgorithmListIsLated = (state: RootState) =>\n  selectAlgorithmList(state).isLatest\n\nexport const selectAlgorithmListTree = (state: RootState) =>\n  selectAlgorithmList(state).tree\n\nexport const selectAlgoArgs = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.args\n  } else {\n    return undefined\n  }\n}\n\nexport const selectAlgoReturns = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.returns\n  } else {\n    return undefined\n  }\n}\n","import { AlgorithmInfo } from 'api/algolist/AlgoList'\n\nexport const ALGORITHM_LIST_SLICE_NAME = 'algorithmList'\n\nexport type AlgorithmListType = {\n  isLatest: boolean\n  tree: AlgorithmListTree\n}\n\nexport type AlgorithmListTree = {\n  [algoName: string]: AlgorithmNodeType\n}\n\nexport type AlgorithmNodeType = AlgorithmChild | AlgorithmParent\nexport type AlgorithmChild = {\n  type: 'child'\n  args: AlgorithmInfo[]\n  returns: AlgorithmInfo[]\n  functionPath: string\n}\nexport type AlgorithmParent = {\n  type: 'parent'\n  children: {\n    [name: string]: AlgorithmNodeType\n  }\n}\n","const HOST = process.env.REACT_APP_SERVER_HOST\nconst PORT = process.env.REACT_APP_SERVER_PORT\n\nexport const BASE_URL = `http://${HOST}:${PORT}`\nexport const WS_BASE_URL = `ws://${HOST}:${PORT}`\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type AlgoListDTO = {\n  [name: string]:\n    | {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n    | { children: AlgoListDTO }\n}\n\nexport type AlgorithmInfo = {\n  name: string\n  type: string\n  isNone?: boolean\n}\n\nexport async function getAlgoListApi(): Promise<AlgoListDTO> {\n  const response = await axios.get(`${BASE_URL}/algolist`)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { ALGORITHM_LIST_SLICE_NAME } from './AlgorithmListType'\nimport { AlgoListDTO, getAlgoListApi } from 'api/algolist/AlgoList'\n\nexport const getAlgoList = createAsyncThunk<AlgoListDTO, void>(\n  `${ALGORITHM_LIST_SLICE_NAME}/getAlgoList`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoListApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","export const INPUT_NODE_SLICE_NAME = 'inputNode'\n\nexport const FILE_TYPE_SET = {\n  CSV: 'csv',\n  IMAGE: 'image',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type FILE_TYPE = typeof FILE_TYPE_SET[keyof typeof FILE_TYPE_SET]\n\nexport type InputNode = {\n  [nodeId: string]: InputNodeType\n}\n\nexport type InputNodeType = CsvInputNode | ImageInputNode | HDF5InputNode\n\ninterface InputNodeBaseType<\n  T extends FILE_TYPE,\n  P extends { [key: string]: unknown },\n> {\n  fileType: T\n  selectedFilePath?: string | string[]\n  param: P\n}\n\nexport type CsvInputParamType = {\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\n\nexport interface CsvInputNode\n  extends InputNodeBaseType<'csv', CsvInputParamType> {\n  selectedFilePath?: string\n}\n\nexport interface ImageInputNode extends InputNodeBaseType<'image', {}> {\n  selectedFilePath?: string[]\n}\n\nexport interface HDF5InputNode extends InputNodeBaseType<'hdf5', {}> {\n  selectedFilePath?: string\n  hdf5Path?: string\n}\n","import { Elements, FlowTransform } from 'react-flow-renderer'\n\nexport const FLOW_ELEMENT_SLICE_NAME = 'flowElement'\n\nexport const NODE_TYPE_SET = {\n  INPUT: 'input',\n  ALGORITHM: 'algorithm',\n} as const\n\nexport type NODE_TYPE = typeof NODE_TYPE_SET[keyof typeof NODE_TYPE_SET]\n\nexport type NodeData = AlgorithmNodeData | InputNodeData\n\ninterface NodeDataBaseType<T extends NODE_TYPE> {\n  label: string\n  type: T\n}\n\nexport interface InputNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.INPUT> {}\n\nexport interface AlgorithmNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.ALGORITHM> {}\n\nexport interface ElementCoord {\n  x: number\n  y: number\n}\n\nexport interface FlowElement {\n  flowElements: Elements<NodeData>\n  flowPosition: FlowTransform\n  elementCoord: ElementCoord\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getAlgoParamsApi(algoName: string): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/params/${algoName}`)\n  return response.data\n}\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Node } from 'react-flow-renderer'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { FLOW_ELEMENT_SLICE_NAME, NodeData } from './FlowElementType'\nimport { getAlgoParamsApi } from 'api/params/Params'\n\nexport type AddingNodeData = Omit<Node<NodeData>, 'position'> &\n  Partial<Pick<Node<NodeData>, 'position'>>\n\nexport const addAlgorithmNode = createAsyncThunk<\n  ParamDTO,\n  {\n    node: AddingNodeData\n    functionPath: string\n    name: string\n  }\n>(`${FLOW_ELEMENT_SLICE_NAME}/addAlgorithmNode`, async ({ name }, thunkAPI) => {\n  try {\n    const response = await getAlgoParamsApi(name)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const addInputNode = createAction<{\n  node: AddingNodeData\n  fileType: FILE_TYPE\n}>(`${FLOW_ELEMENT_SLICE_NAME}/addInputNode`)\n","import { customAlphabet } from 'nanoid/non-secure'\n\nconst nanoid = customAlphabet('0123456789abcdefghijklmnopqrstuvwxyz', 10)\n\nexport const getNanoId = () => {\n  return nanoid()\n}\n","export const INITIAL_IMAGE_ELEMENT_ID = 'input_0'\nexport const INITIAL_IMAGE_ELEMENT_NAME = 'NoName'\n\nexport const INITIAL_ALGO_STYLE: React.CSSProperties = {\n  width: 180,\n  height: 100,\n  padding: 0,\n  borderRadius: 0,\n} as const\n\nexport const INITIAL_DATA_STYLE: React.CSSProperties = {\n  border: '1px solid #777',\n  height: 120,\n} as const\n\nexport const REACT_FLOW_NODE_TYPE_KEY = {\n  ImageFileNode: 'ImageFileNode',\n  CsvFileNode: 'CsvFileNode',\n  HDF5FileNode: 'HDF5FileNode',\n  FluoFileNode: 'FluoFileNode',\n  AlgorithmNode: 'AlgorithmNode',\n  BehaviorFileNode: 'BehaviorFileNode',\n} as const\n\nexport type REACT_FLOW_NODE_TYPE =\n  typeof REACT_FLOW_NODE_TYPE_KEY[keyof typeof REACT_FLOW_NODE_TYPE_KEY]\n","export const DND_ITEM_TYPE_SET = {\n  TREE_ITEM: 'TREE_ITEM',\n} as const\n\nexport type DND_ITEM_TYPE =\n  typeof DND_ITEM_TYPE_SET[keyof typeof DND_ITEM_TYPE_SET]\n\nexport type TreeItemDragObject = {}\n\nexport type TreeItemDropResult = {\n  position?: { x: number; y: number }\n}\n\nexport type TreeItemCollectedProps = {\n  isDragging: boolean\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem'\nimport { styled, Typography } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport IconButton from '@mui/material/IconButton'\nimport AddIcon from '@mui/icons-material/Add'\nimport { useDrag } from 'react-dnd'\n\nimport {\n  selectAlgorithmListIsLated,\n  selectAlgorithmListTree,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport {\n  AlgorithmChild,\n  AlgorithmNodeType,\n} from 'store/slice/AlgorithmList/AlgorithmListType'\nimport { isAlgoChild } from 'store/slice/AlgorithmList/AlgorithmListUtils'\nimport { getAlgoList } from 'store/slice/AlgorithmList/AlgorithmListActions'\nimport { FILE_TYPE, FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  NODE_TYPE,\n  NODE_TYPE_SET,\n} from 'store/slice/FlowElement/FlowElementType'\nimport {\n  addAlgorithmNode,\n  addInputNode,\n} from 'store/slice/FlowElement/FlowElementActions'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport { REACT_FLOW_NODE_TYPE, REACT_FLOW_NODE_TYPE_KEY } from 'const/flowchart'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\n\nexport const AlgorithmTreeView = React.memo(() => {\n  const dispatch = useDispatch()\n  const algoList = useSelector(selectAlgorithmListTree)\n  const isLatest = useSelector(selectAlgorithmListIsLated)\n\n  useEffect(() => {\n    if (!isLatest) {\n      dispatch(getAlgoList())\n    }\n  }, [dispatch, isLatest])\n\n  const onAddAlgoNode = React.useCallback(\n    (\n      nodeName: string,\n      functionPath: string,\n      position?: { x: number; y: number },\n    ) => {\n      const name = nodeName\n      const newNode = {\n        id: `${name}_${getNanoId()}`,\n        type: REACT_FLOW_NODE_TYPE_KEY.AlgorithmNode,\n        data: { label: name, type: NODE_TYPE_SET.ALGORITHM },\n        position,\n      }\n      dispatch(\n        addAlgorithmNode({\n          node: newNode,\n          name,\n          functionPath,\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  return (\n    <TreeView\n      sx={{\n        flexGrow: 1,\n        height: '100%',\n      }}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId=\"Data\" label=\"Data\">\n        <InputNodeComponent\n          fileName={'image'}\n          nodeName={'imageData'}\n          fileType={FILE_TYPE_SET.IMAGE}\n        />\n        <InputNodeComponent\n          fileName={'csv'}\n          nodeName={'csvData'}\n          fileType={FILE_TYPE_SET.CSV}\n        />\n        <InputNodeComponent\n          fileName={'hdf5'}\n          nodeName={'hdf5Data'}\n          fileType={FILE_TYPE_SET.HDF5}\n        />\n        <InputNodeComponent\n          fileName={'fluo'}\n          nodeName={'fluoData'}\n          fileType={FILE_TYPE_SET.FLUO}\n        />\n        <InputNodeComponent\n          fileName={'behavior'}\n          nodeName={'behaviorData'}\n          fileType={FILE_TYPE_SET.BEHAVIOR}\n        />\n      </TreeItem>\n      <TreeItem nodeId=\"Algorithm\" label=\"Algorithm\">\n        {Object.entries(algoList).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            onAddAlgoNode={onAddAlgoNode}\n            key={i.toFixed()}\n          />\n        ))}\n      </TreeItem>\n    </TreeView>\n  )\n})\n\nconst InputNodeComponent = React.memo<{\n  fileName: string\n  nodeName: string\n  fileType: FILE_TYPE\n}>(({ fileName, nodeName, fileType }) => {\n  const dispatch = useDispatch()\n\n  const onAddDataNode = React.useCallback(\n    (\n      nodeType: NODE_TYPE,\n      nodeName: string,\n      fileType: FILE_TYPE,\n      position?: { x: number; y: number },\n    ) => {\n      let reactFlowNodeType: REACT_FLOW_NODE_TYPE | '' = ''\n      switch (fileType) {\n        case FILE_TYPE_SET.CSV:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.CsvFileNode\n          break\n        case FILE_TYPE_SET.IMAGE:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.ImageFileNode\n          fileType = FILE_TYPE_SET.IMAGE\n          break\n        case FILE_TYPE_SET.HDF5:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.HDF5FileNode\n          fileType = FILE_TYPE_SET.HDF5\n          break\n        case FILE_TYPE_SET.FLUO:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.FluoFileNode\n          fileType = FILE_TYPE_SET.FLUO\n          break\n        case FILE_TYPE_SET.BEHAVIOR:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.BehaviorFileNode\n          fileType = FILE_TYPE_SET.BEHAVIOR\n          break\n      }\n      const newNode = {\n        id: `input_${getNanoId()}`,\n        type: reactFlowNodeType,\n        data: { label: nodeName, type: nodeType },\n        position,\n      }\n      dispatch(addInputNode({ node: newNode, fileType }))\n    },\n    [dispatch],\n  )\n\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType, position)\n      },\n      [onAddDataNode, nodeName, fileType],\n    ),\n  )\n\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={fileName}\n      label={\n        <AddButton\n          name={fileName}\n          onClick={() => onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType)}\n        />\n      }\n    />\n  )\n})\n\nconst AlgoNodeComponentRecursive = React.memo<{\n  name: string\n  node: AlgorithmNodeType\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  if (isAlgoChild(node)) {\n    return (\n      <AlgoNodeComponent\n        name={name}\n        node={node}\n        onAddAlgoNode={onAddAlgoNode}\n      />\n    )\n  } else {\n    return (\n      <TreeItem nodeId={name} label={name}>\n        {Object.entries(node.children).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            key={i.toFixed()}\n            onAddAlgoNode={onAddAlgoNode}\n          />\n        ))}\n      </TreeItem>\n    )\n  }\n})\n\nconst AlgoNodeComponent = React.memo<{\n  name: string\n  node: AlgorithmChild\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddAlgoNode(name, node.functionPath, position)\n      },\n      [onAddAlgoNode, name, node],\n    ),\n  )\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={name}\n      label={\n        <AddButton\n          name={name}\n          onClick={() => onAddAlgoNode(name, node.functionPath)}\n        />\n      }\n    />\n  )\n})\n\nconst AddButton = React.memo<{\n  name: string\n  onClick: () => void\n}>(({ name, onClick }) => {\n  return (\n    <>\n      <IconButton aria-label=\"add\" style={{ padding: 2 }} size=\"large\">\n        <AddIcon onClick={() => onClick()} />\n      </IconButton>\n      <Typography\n        variant=\"inherit\"\n        style={{\n          textOverflow: 'ellipsis',\n          overflow: 'visible',\n          width: '8rem',\n          display: 'inline-block',\n        }}\n      >\n        {name}\n      </Typography>\n    </>\n  )\n})\n\n// 未使用icon分の幅を消す\nconst LeafItem = styled(TreeItem)({\n  // background: 'red',\n  [`& .${treeItemClasses.iconContainer}`]: {\n    margin: 0,\n    width: 0,\n  },\n})\n\nfunction useLeafItemDrag(\n  onDragEnd: (positon: { x: number; y: number }) => void,\n) {\n  const [{ isDragging }, dragRef] = useDrag<\n    TreeItemDragObject,\n    TreeItemDropResult,\n    TreeItemCollectedProps\n  >(\n    () => ({\n      type: DND_ITEM_TYPE_SET.TREE_ITEM,\n      end: (_, monitor) => {\n        const position = monitor.getDropResult()?.position\n        if (monitor.didDrop() && position != null) {\n          onDragEnd(position)\n        }\n      },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [onDragEnd],\n  )\n  return { isDragging, dragRef }\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { RunPostData } from 'api/run/Run'\n\nexport type ExperimentsDTO = {\n  [uid: string]: ExperimentDTO\n}\n\nexport type ExperimentDTO = {\n  function: {\n    [uid: string]: {\n      name: string\n      success: string\n      unique_id: string\n      hasNWB: boolean\n    }\n  }\n  name: string\n  success: string\n  timestamp: string\n  unique_id: string\n  hasNWB: boolean\n}\n\nexport async function getExperimentsApi(): Promise<ExperimentsDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments`)\n  return response.data\n}\n\nexport async function deleteExperimentByUidApi(uid: string): Promise<boolean> {\n  const response = await axios.delete(`${BASE_URL}/experiments/${uid}`)\n  return response.data\n}\n\nexport async function deleteExperimentByListApi(\n  uidList: Array<string>,\n): Promise<boolean> {\n  const response = await axios.post(`${BASE_URL}/experiments/delete`, {\n    uidList,\n  })\n  return response.data\n}\n\nexport async function importExperimentByUidApi(\n  uid: string,\n): Promise<RunPostData> {\n  const response = await axios.get(`${BASE_URL}/experiments/import/${uid}`)\n  return response.data\n}\n\nexport async function downloadExperimentNwbApi(uid: string, nodeId?: string) {\n  const path =\n    nodeId != null\n      ? `${BASE_URL}/experiments/download/nwb/${uid}/${nodeId}`\n      : `${BASE_URL}/experiments/download/nwb/${uid}`\n  const response = await axios.get(path, {\n    responseType: 'blob',\n  })\n  return response.data\n}\n\nexport async function downloadExperimentConfigApi(uid: string) {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/download/config/${uid}`,\n    {\n      responseType: 'blob',\n    },\n  )\n  return response.data\n}\n","export const EXPERIMENTS_SLICE_NAME = 'experiments'\n\nexport type Experiments =\n  | {\n      status: 'fulfilled'\n      experimentList: ExperimentListType\n    }\n  | {\n      status: 'uninitialized'\n    }\n  | {\n      status: 'pending'\n    }\n  | {\n      status: 'error'\n      message?: string\n    }\n\nexport type ExperimentListType = {\n  [uid: string]: ExperimentType\n}\n\nexport type ExperimentType = {\n  uid: string\n  functions: {\n    [nodeId: string]: ExperimentFunction\n  }\n  name: string\n  timestamp: string\n  hasNWB: boolean\n}\n\nexport type ExperimentFunction = {\n  name: string\n  nodeId: string\n  status: EXPERIMENTS_STATUS\n  hasNWB: boolean\n}\n\nexport type EXPERIMENTS_STATUS = 'success' | 'error' | 'running'\n\nexport interface Experiment {\n  uid: string\n  name: string\n  timestamp: string\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  ExperimentsDTO,\n  getExperimentsApi,\n  deleteExperimentByUidApi,\n  importExperimentByUidApi,\n  deleteExperimentByListApi,\n} from 'api/experiments/Experiments'\nimport { RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_SLICE_NAME } from './ExperimentsType'\n\nexport const getExperiments = createAsyncThunk<ExperimentsDTO, undefined>(\n  `${EXPERIMENTS_SLICE_NAME}/getExperiments`,\n  async (_, thunkAPI) => {\n    try {\n      const response = await getExperimentsApi()\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByUid = createAsyncThunk<boolean, string>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByList = createAsyncThunk<boolean, string[]>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByList`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByListApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const importExperimentByUid = createAsyncThunk<RunPostData, string>(\n  `${EXPERIMENTS_SLICE_NAME}/importExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await importExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { createAction } from '@reduxjs/toolkit'\n\nimport { INPUT_NODE_SLICE_NAME } from './InputNodeType'\n\nexport const setInputNodeFilePath = createAction<{\n  nodeId: string\n  filePath: string | string[]\n}>(`${INPUT_NODE_SLICE_NAME}/setInputNodeFilePath`)\n","import { FlowElement, isNode, Node } from 'react-flow-renderer'\nimport {\n  AlgorithmNodeData,\n  NodeData,\n  NODE_TYPE_SET,\n  InputNodeData,\n} from './FlowElementType'\n\nexport function isNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<NodeData> {\n  return node != null && isNode(node) && node.data != null\n}\n\nexport function isAlgorithmNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<AlgorithmNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.ALGORITHM\n}\n\nexport function isInputNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<InputNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.INPUT\n}\n\nexport function getLabelByPath(filePath: string | string[]) {\n  if (Array.isArray(filePath)) {\n    if (filePath.length === 0) {\n      return ''\n    } else if (filePath.length === 1) {\n      return getFileName(filePath[0])\n    } else {\n      return getFileName(filePath[0]) + ` ... and ${filePath.length - 1} files`\n    }\n  } else {\n    return getFileName(filePath)\n  }\n}\n\nexport function getFileName(filePath: string) {\n  return filePath.split('/').reverse()[0]\n}\n","import type { Node } from 'react-flow-renderer'\nimport {\n  isInputNodeData,\n  isAlgorithmNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport type {\n  NodePostDataType,\n  InputNodePostData,\n  AlgorithmNodePostData,\n} from './Run'\n\nexport function isInputNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<InputNodePostData> {\n  return isInputNodeData(node)\n}\n\nexport function isAlgorithmNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<AlgorithmNodePostData> {\n  return isAlgorithmNodeData(node)\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport const FILE_TREE_TYPE_SET = {\n  IMAGE: 'image',\n  CSV: 'csv',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  ALL: 'all',\n} as const\n\nexport type FILE_TREE_TYPE =\n  typeof FILE_TREE_TYPE_SET[keyof typeof FILE_TREE_TYPE_SET]\n\nexport type TreeNodeTypeDTO = DirNodeDTO | FileNodeDTO\n\nexport interface NodeBaseDTO {\n  path: string\n  name: string\n  isdir: boolean\n}\n\nexport interface DirNodeDTO extends NodeBaseDTO {\n  isdir: true\n  nodes: TreeNodeTypeDTO[]\n}\n\nexport interface FileNodeDTO extends NodeBaseDTO {\n  isdir: false\n}\n\nexport async function getFilesTreeApi(\n  fileType: FILE_TREE_TYPE,\n): Promise<TreeNodeTypeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/files`, {\n    params: {\n      file_type: fileType,\n    },\n  })\n  return response.data\n}\n\nexport async function uploadFileApi(\n  fileName: string,\n  config: {\n    onUploadProgress: (progressEvent: any) => void\n  },\n  formData: FormData,\n): Promise<{ file_path: string }> {\n  const response = await axios.post(\n    `${BASE_URL}/files/upload/${fileName}`,\n    formData,\n    config,\n  )\n  return response.data\n}\n","export const FILE_UPLOADER_SLICE_NAME = 'fileUploader'\n\nexport type FileUploader = {\n  [id: string]: FileUploaderType\n}\n\nexport type FileUploaderType = {\n  path?: string\n  fileName?: string\n  isUninitialized: boolean\n  pending: boolean\n  fulfilled: boolean\n  uploadingProgress?: number\n  error?: string\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { uploadFileApi } from 'api/files/Files'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\nimport { FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\n\nexport const setUploadProgress = createAction<{\n  requestId: string\n  progess: number\n  total: number\n}>(`${FILE_UPLOADER_SLICE_NAME}/setUploadProgress`)\n\nexport const uploadFile = createAsyncThunk<\n  {\n    resultPath: string\n  },\n  {\n    requestId: string\n    nodeId?: string\n    fileName: string\n    formData: FormData\n    fileType?: FILE_TYPE\n  }\n>(\n  `${FILE_UPLOADER_SLICE_NAME}/uploadFile`,\n  async ({ requestId, fileName, formData }, thunkAPI) => {\n    try {\n      const config = getUploadConfig((percent, total) => {\n        thunkAPI.dispatch(\n          setUploadProgress({\n            requestId,\n            progess: percent,\n            total,\n          }),\n        )\n      })\n      const response = await uploadFileApi(fileName, config, formData)\n      return {\n        resultPath: response.file_path,\n      }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nfunction getUploadConfig(\n  onUpdateProgressFn: (percent: number, totalSize: number) => void,\n) {\n  return {\n    onUploadProgress: function (progressEvent: any) {\n      const percentCompleted = Math.round(\n        (progressEvent.loaded * 100) / progressEvent.total,\n      )\n      onUpdateProgressFn(percentCompleted, progressEvent.total)\n    },\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  Elements,\n  removeElements,\n  Position,\n  isNode,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport {\n  FLOW_ELEMENT_SLICE_NAME,\n  FlowElement,\n  NODE_TYPE_SET,\n  NodeData,\n  ElementCoord,\n} from './FlowElementType'\nimport {\n  INITIAL_ALGO_STYLE,\n  INITIAL_DATA_STYLE,\n  INITIAL_IMAGE_ELEMENT_ID,\n  INITIAL_IMAGE_ELEMENT_NAME,\n  REACT_FLOW_NODE_TYPE_KEY,\n} from 'const/flowchart'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { addAlgorithmNode, addInputNode } from './FlowElementActions'\nimport { getLabelByPath } from './FlowElementUtils'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\n\nconst initialElements: Elements<NodeData> = [\n  {\n    id: INITIAL_IMAGE_ELEMENT_ID,\n    type: REACT_FLOW_NODE_TYPE_KEY.ImageFileNode,\n    data: {\n      type: NODE_TYPE_SET.INPUT,\n      label: INITIAL_IMAGE_ELEMENT_NAME,\n    },\n    style: INITIAL_DATA_STYLE,\n    position: { x: 50, y: 150 },\n  },\n]\n\nconst initialFlowPosition: FlowTransform = {\n  x: 0,\n  y: 0,\n  zoom: 0.7,\n}\n\nconst initialElementCoord: ElementCoord = {\n  x: 100,\n  y: 150,\n}\n\nconst initialState: FlowElement = {\n  flowElements: initialElements,\n  flowPosition: initialFlowPosition,\n  elementCoord: initialElementCoord,\n}\n\nexport const flowElementSlice = createSlice({\n  name: FLOW_ELEMENT_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFlowPosition: (state, action: PayloadAction<FlowTransform>) => {\n      state.flowPosition = action.payload\n    },\n    setFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = action.payload\n    },\n    deleteFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = removeElements(action.payload, state.flowElements)\n    },\n    deleteFlowElementsById: (state, action: PayloadAction<string>) => {\n      const element = state.flowElements.find(\n        (edge) => edge.id === action.payload,\n      )\n      if (element !== undefined) {\n        state.flowElements = removeElements([element], state.flowElements)\n      }\n    },\n    editFlowElementPositionById: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        coord: {\n          x: number\n          y: number\n        }\n      }>,\n    ) => {\n      let { nodeId, coord } = action.payload\n      const elementIdx = state.flowElements.findIndex(\n        (ele) => ele.id === nodeId,\n      )\n      const targetItem = state.flowElements[elementIdx]\n      if (isNode(targetItem)) {\n        targetItem.position = coord\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        let { node } = action.meta.arg\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_ALGO_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        let { node } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_DATA_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowElements.push({ ...node, position: node.position })\n        } else {\n          state.flowElements.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(setInputNodeFilePath, (state, action) => {\n        let { nodeId, filePath } = action.payload\n        const label = getLabelByPath(filePath)\n        const elementIdx = state.flowElements.findIndex(\n          (ele) => ele.id === nodeId,\n        )\n        const targetNode = state.flowElements[elementIdx]\n        if (targetNode.data != null) {\n          targetNode.data.label = label\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const elementIdx = state.flowElements.findIndex(\n            (ele) => ele.id === nodeId,\n          )\n          const targetNode = state.flowElements[elementIdx]\n          if (targetNode.data != null) {\n            targetNode.data.label = getLabelByPath(action.payload.resultPath)\n          }\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.flowPosition = initialFlowPosition\n        state.elementCoord = initialElementCoord\n        const newNodeList: Elements<NodeData> = Object.values(\n          action.payload.nodeDict,\n        ).map((node) => {\n          if (isInputNodePostData(node)) {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'input',\n              },\n            }\n          } else {\n            return {\n              ...node,\n              data: {\n                label: node.data?.label ?? '',\n                type: node.data?.type ?? 'algorithm',\n              },\n            }\n          }\n        })\n        state.flowElements = newNodeList.concat(\n          Object.values(action.payload.edgeDict),\n        )\n      }),\n})\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nfunction updateElementCoord(state: FlowElement) {\n  const { x } = state.elementCoord\n  if (x > 800) {\n    state.elementCoord.x = 300\n    state.elementCoord.y += 100\n  } else {\n    state.elementCoord.x += 250\n    state.elementCoord.y += getRandomArbitrary(-20, 20)\n  }\n}\n\nexport const {\n  setFlowPosition,\n  setFlowElements,\n  deleteFlowElements,\n  deleteFlowElementsById,\n  editFlowElementPositionById,\n} = flowElementSlice.actions\n\nexport default flowElementSlice.reducer\n","import { RootState } from 'store/store'\nimport { isNodeData } from './FlowElementUtils'\n\nexport const selectFlowElements = (state: RootState) =>\n  state.flowElement.flowElements\n\nexport const selectFlowPosition = (state: RootState) =>\n  state.flowElement.flowPosition\n\nexport const selectElementCoord = (state: RootState) =>\n  state.flowElement.elementCoord\n\nexport const selectNodeById = (nodeId: string) => (state: RootState) =>\n  selectFlowElements(state)\n    .filter(isNodeData)\n    .find((node) => node.id === nodeId)\n\nexport const selectNodeTypeById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.type\n\nexport const selectNodeLabelById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.label\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getNWBParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/nwb`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const NWB_SLICE_NAME = 'NWB'\n\nexport type NWBType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getNWBParamsApi } from 'api/nwb/NWB'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { NWB_SLICE_NAME } from './NWBType'\n\nexport const getNWBParams = createAsyncThunk<ParamDTO, void>(\n  `${NWB_SLICE_NAME}/getNWBParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getNWBParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getNWBParams } from './NWBAction'\nimport { NWBType, NWB_SLICE_NAME } from './NWBType'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\n\nconst initialState: NWBType = {\n  params: {},\n}\n\nexport const nwbSlice = createSlice({\n  name: NWB_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const targetNode = getChildParam(path, state.params)\n      if (targetNode != null) {\n        targetNode.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNWBParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = nwbSlice.actions\n\nexport default nwbSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\n\ntype RightDrawer = {\n  open: boolean\n  mode: RIGHT_DRAWER_MODE_TYPE\n  currendNodeId: string | null\n}\n\nexport const RIGHT_DRAWER_MODE = {\n  NONE: 'none',\n  NWB: 'nwb',\n  PARAM_FORM: 'paramForm',\n  SNAKEMAKE: 'snakemake',\n} as const\n\nexport type RIGHT_DRAWER_MODE_TYPE =\n  typeof RIGHT_DRAWER_MODE[keyof typeof RIGHT_DRAWER_MODE]\n\nconst initialState: RightDrawer = {\n  open: false,\n  mode: RIGHT_DRAWER_MODE.NONE,\n  currendNodeId: null,\n}\nexport const rightDrawerSlice = createSlice({\n  name: 'rightDrawer',\n  initialState,\n  reducers: {\n    openRightDrawer: (state, action: PayloadAction<RIGHT_DRAWER_MODE_TYPE>) => {\n      state.open = true\n      state.mode = action.payload\n    },\n    closeRightDrawer: (state) => {\n      state.open = false\n      state.mode = RIGHT_DRAWER_MODE.NONE\n    },\n    toggleParamForm: (state, action: PayloadAction<string>) => {\n      if (\n        state.open &&\n        state.mode === RIGHT_DRAWER_MODE.PARAM_FORM &&\n        state.currendNodeId === action.payload\n      ) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n        state.currendNodeId = null\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.PARAM_FORM\n        state.currendNodeId = action.payload\n      }\n    },\n    toggleNwb: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.NWB) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.NWB\n      }\n      state.currendNodeId = null\n    },\n    toggleSnakemake: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.SNAKEMAKE) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.SNAKEMAKE\n      }\n      state.currendNodeId = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteFlowElements, (state, action) => {\n        if (\n          action.payload.findIndex((elm) => elm.id === state.currendNodeId) > 0\n        ) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (action.payload === state.currendNodeId) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, () => {\n        return initialState\n      })\n  },\n})\n\nexport const {\n  toggleParamForm,\n  toggleNwb,\n  toggleSnakemake,\n  openRightDrawer,\n  closeRightDrawer,\n} = rightDrawerSlice.actions\n\nexport default rightDrawerSlice.reducer\n","export function arrayEqualityFn<T>(a: T[], b: T[]) {\n  return a === b || (a.length === b.length && a.every((v, i) => v === b[i]))\n}\n\nexport function twoDimarrayEqualityFn<T>(a: T[][], b: T[][]) {\n  return (\n    a === b ||\n    (a.length === b.length && a.every((v, i) => arrayEqualityFn(v, b[i])))\n  )\n}\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nexport const selectNwb = (state: RootState) => state.nwb\n\nexport const selectNwbParams = (state: RootState) => selectNwb(state).params\n\nexport const selectNwbParamsKeyList = (state: RootState) =>\n  Object.keys(selectNwb(state).params)\n\nexport const selectNwbParam = (paramKey: string) => (state: RootState) =>\n  selectNwb(state).params[paramKey]\n\nexport const selectNwbParamsValue = (path: string) => (state: RootState) => {\n  const params = selectNwb(state).params\n  if (params != null) {\n    const target = getChildParam(path, params)\n    return target?.value\n  } else {\n    throw new Error('Param is null')\n  }\n}\n","import MuiAccordion, { AccordionProps } from '@mui/material/Accordion'\nimport { styled } from '@mui/material/styles'\n\nexport const Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: '1px solid',\n  borderColor: theme.palette.divider,\n  boxShadow: 'none',\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}))\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport Switch from '@mui/material/Switch'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport Typography from '@mui/material/Typography'\n\nimport { isParamChild } from 'utils/param/ParamUtils'\nimport { ParamType } from 'utils/param/ParamType'\nimport { RootState } from 'store/store'\nimport { Accordion } from 'components/common/Accordion'\n\ntype ParamSelectorType = (paramKey: string) => (state: RootState) => ParamType\ntype ParamValueSelectorType = (path: string) => (state: RootState) => unknown\ntype ParamUpdateActionCreatorType = (\n  path: string,\n  newValue: unknown,\n) => AnyAction\n\nexport type CreateParamFormItemComponentProps = {\n  paramSelector: ParamSelectorType\n  paramValueSelector: ParamValueSelectorType\n  paramUpdateActionCreator: ParamUpdateActionCreatorType\n}\n\nexport function createParamFormItemComponent({\n  paramSelector,\n  paramValueSelector,\n  paramUpdateActionCreator,\n}: CreateParamFormItemComponentProps): React.FC<{ paramKey: string }> {\n  function useParamValueUpdate(\n    path: string,\n  ): [unknown, (newValue: unknown) => AnyAction] {\n    const value = useSelector(paramValueSelector(path))\n    const updateParamAction = (newValue: unknown) => {\n      return paramUpdateActionCreator(path, newValue)\n    }\n    return [value, updateParamAction]\n  }\n  const ParamItemForString = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    const onChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(updateParamAction(newValue))\n    }\n    return <TextField value={value} onChange={onChange} multiline />\n  })\n  const ParamItemForNumber = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue =\n          event.target.value === '' ? '' : Number(event.target.value)\n        if (typeof newValue === 'number') {\n          dispatch(updateParamAction(newValue))\n        }\n      }\n      return (\n        <TextField\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={value}\n          onChange={onChange}\n        />\n      )\n    } else {\n      return null\n    }\n  })\n  const ParamItemForBoolean = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'boolean') {\n      const onChange = () => {\n        dispatch(updateParamAction(!value))\n      }\n      return <Switch checked={value} onChange={onChange} />\n    } else {\n      return null\n    }\n  })\n  const ParamItemForValueType = React.memo<ParamChildItemProps>(({ path }) => {\n    const [value] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      return <ParamItemForNumber path={path} />\n    } else if (typeof value === 'string') {\n      return <ParamItemForString path={path} />\n    } else if (typeof value === 'boolean') {\n      return <ParamItemForBoolean path={path} />\n    } else {\n      return <ParamItemForString path={path} />\n    }\n  })\n  const ParamChildItem = React.memo<ParamChildItemProps & { name: string }>(\n    ({ path, name }) => {\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            marginTop: (theme) => theme.spacing(2),\n            marginBottom: (theme) => theme.spacing(2),\n            alignItems: 'center',\n            overflow: 'scroll',\n          }}\n        >\n          <Box\n            style={{ verticalAlign: 'middle' }}\n            sx={{\n              flexGrow: 1,\n              width: '50%',\n            }}\n          >\n            <Typography style={{ overflow: 'scroll' }}>{name}</Typography>\n          </Box>\n          <Box sx={{ width: '50%' }}>\n            <ParamItemForValueType path={path} />\n          </Box>\n        </Box>\n      )\n    },\n  )\n  const ParamItem = React.memo<ParamItemProps>(({ paramKey, param }) => {\n    if (isParamChild(param)) {\n      return <ParamChildItem path={param.path} name={paramKey} />\n    } else {\n      return (\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            {paramKey}\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              {Object.entries(param.children).map(([paramKey, param], i) => (\n                <ParamItem param={param} paramKey={paramKey} />\n              ))}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      )\n    }\n  })\n  return React.memo<{ paramKey: string }>(({ paramKey }) => {\n    const param = useSelector(paramSelector(paramKey)) // 一階層目\n    return <ParamItem paramKey={paramKey} param={param} />\n  })\n}\n\ntype ParamItemProps = {\n  paramKey: string\n  param: ParamType\n}\n\ntype ParamChildItemProps = {\n  path: string\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\nimport { updateParam } from 'store/slice/NWB/NWBSlice'\nimport { getNWBParams } from 'store/slice/NWB/NWBAction'\nimport { toggleNwb } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectNwbParam,\n  selectNwbParamsKeyList,\n  selectNwbParamsValue,\n} from 'store/slice/NWB/NWBSelectors'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const NWBSettingButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleNwb())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      NWB setting\n    </Button>\n  )\n})\n\nexport const NWBSettingContents = React.memo(() => {\n  const dispatch = useDispatch()\n\n  const paramKeyList = useSelector(selectNwbParamsKeyList, arrayEqualityFn)\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getNWBParams())\n    }\n  })\n\n  return (\n    <div className=\"nwbParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectNwbParam,\n    paramValueSelector: selectNwbParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getSnakemakeParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/snakemake`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const SNAKEMAKE_SLICE_NAME = 'Snakemake'\n\nexport type SnakemakeType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getSnakemakeParamsApi } from 'api/snakemake/Snakemake'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nexport const getSnakemakeParams = createAsyncThunk<ParamDTO, void>(\n  `${SNAKEMAKE_SLICE_NAME}/getSnakemakeParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = getSnakemakeParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport { getSnakemakeParams } from './SnakemakeAction'\nimport { SnakemakeType, SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nconst initialState: SnakemakeType = {\n  params: {},\n}\n\nexport const SnakemakeSlice = createSlice({\n  name: SNAKEMAKE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const target = getChildParam(path, state.params)\n      if (target != null) {\n        target.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getSnakemakeParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = SnakemakeSlice.actions\n\nexport default SnakemakeSlice.reducer\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nconst selectSnakemake = (state: RootState) => state.snakemake\nexport const selectSnakemakeParams = (state: RootState) =>\n  selectSnakemake(state).params\n\nexport const selectSnakemakeParamsKeyList = (state: RootState) =>\n  Object.keys(selectSnakemakeParams(state))\n\nexport const selectSnakemakeParam = (paramKey: string) => (state: RootState) =>\n  selectSnakemakeParams(state)[paramKey]\n\nexport const selectSnakemakeParamsValue =\n  (path: string) => (state: RootState) => {\n    const params = selectSnakemakeParams(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('Param is null')\n    }\n  }\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\n\nimport { updateParam } from 'store/slice/Snakemake/SnakemakeSlice'\nimport { getSnakemakeParams } from 'store/slice/Snakemake/SnakemakeAction'\nimport { toggleSnakemake } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport {\n  selectSnakemakeParam,\n  selectSnakemakeParamsKeyList,\n  selectSnakemakeParamsValue,\n} from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const SnakemakeButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleSnakemake())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      Snakemake\n    </Button>\n  )\n})\n\nexport const SnakemakeContents = React.memo(() => {\n  const dispatch = useDispatch()\n  const paramKeyList = useSelector(\n    selectSnakemakeParamsKeyList,\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getSnakemakeParams())\n    }\n  })\n  return (\n    <div className=\"SnakemakeParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectSnakemakeParam,\n    paramValueSelector: selectSnakemakeParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import { RunPostData } from 'api/run/Run'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\n\nexport const PIPELINE_SLICE_NAME = 'pipeline'\n\nexport type Pipeline = {\n  run: PipelineType\n  currentPipeline?: {\n    uid: string\n  }\n  runBtn: RUN_BTN_TYPE\n}\n\nexport const RUN_STATUS = {\n  /**\n   * 未実行\n   */\n  START_UNINITIALIZED: 'StartUninitialized',\n  /**\n   * 開始リクエスト中\n   */\n  START_PENDING: 'StartPending',\n  /**\n   * 開始できなかった\n   */\n  START_ERROR: 'StartError',\n  /**\n   * 正常に開始した\n   */\n  START_SUCCESS: 'StartSuccess',\n  /**\n   * 全て終了\n   */\n  FINISHED: 'Finished',\n  /**\n   * 途中終了\n   */\n  ABORTED: 'Aborted',\n  /**\n   * キャンセルされた\n   */\n  CANCELED: 'Canceled',\n} as const\n\nexport type RUN_STATUS_TYPE = typeof RUN_STATUS[keyof typeof RUN_STATUS]\n\nexport type PipelineType =\n  | StartedPipeline\n  | {\n      status:\n        | typeof RUN_STATUS.START_ERROR\n        | typeof RUN_STATUS.START_PENDING\n        | typeof RUN_STATUS.START_UNINITIALIZED\n    }\n\nexport type StartedPipeline = {\n  uid: string\n  status:\n    | typeof RUN_STATUS.START_SUCCESS\n    | typeof RUN_STATUS.FINISHED\n    | typeof RUN_STATUS.ABORTED\n    | typeof RUN_STATUS.CANCELED\n  runPostData: RunPostData\n  runResult: RunResult\n}\n\nexport type RunResult = {\n  [nodeId: string]: NodeResult\n}\n\nexport type NodeResult = NodeResultPending | NodeResultSuccess | NodeResultError\n\nexport const NODE_RESULT_STATUS = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PENDING: 'pending',\n} as const\n\nexport type NODE_RESULT_STATUS_TYPE =\n  typeof NODE_RESULT_STATUS[keyof typeof NODE_RESULT_STATUS]\n\nexport interface NodeResultBaseType<T extends NODE_RESULT_STATUS_TYPE> {\n  status: T\n  message?: string\n  name: string\n}\n\nexport interface NodeResultPending\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.PENDING> {}\n\nexport interface NodeResultSuccess\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.SUCCESS> {\n  outputPaths: OutputPaths\n}\n\nexport type OutputPaths = {\n  [outputKey: string]: {\n    path: string\n    type: DATA_TYPE\n  }\n}\n\nexport interface NodeResultError\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.ERROR> {\n  message: string\n}\n\nexport const RUN_BTN_OPTIONS = {\n  RUN_NEW: 1,\n  RUN_ALREADY: 2,\n} as const\n\nexport type RUN_BTN_TYPE = typeof RUN_BTN_OPTIONS[keyof typeof RUN_BTN_OPTIONS]\n\nexport const RUN_BTN_LABELS = {\n  [RUN_BTN_OPTIONS.RUN_NEW]: 'RUN ALL',\n  [RUN_BTN_OPTIONS.RUN_ALREADY]: 'RUN',\n} as const\n","import {\n  HeatMapData,\n  TimeSeriesData,\n  BarData,\n  CsvData,\n  RoiData,\n  ImageData,\n  ScatterData,\n  HTMLData,\n} from 'api/outputs/Outputs'\n\nexport const DISPLAY_DATA_SLICE_NAME = 'displayData'\n\nexport type DisplayData = {\n  timeSeries: {\n    [filePath: string]: TimeSeriesDisplayData\n  }\n  heatMap: {\n    [filePath: string]: HeatMapDisplayData\n  }\n  image: {\n    [filePath: string]: ImageDisplayData\n  }\n  csv: {\n    [filePath: string]: CsvDisplayData\n  }\n  roi: {\n    [filePath: string]: RoiDisplayData\n  }\n  scatter: {\n    [filePath: string]: ScatterDisplayData\n  }\n  bar: {\n    [filePath: string]: BarDisplayData\n  }\n  // hdf5: {\n  //   [filePath: string]: HDF5DisplayData\n  // }\n  html: {\n    [filePath: string]: HTMLDisplayData\n  }\n}\n\nexport const DATA_TYPE_SET = {\n  TIME_SERIES: 'timeSeries',\n  HEAT_MAP: 'heatMap',\n  IMAGE: 'image',\n  CSV: 'csv',\n  ROI: 'roi',\n  SCATTER: 'scatter',\n  BAR: 'bar',\n  HDF5: 'hdf5',\n  HTML: 'html',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type DATA_TYPE = typeof DATA_TYPE_SET[keyof typeof DATA_TYPE_SET]\n\ninterface BaseDisplay<T extends DATA_TYPE, Data> {\n  type: T\n  data: Data\n  pending: boolean\n  error: string | null\n  fulfilled: boolean\n}\n\nexport interface TimeSeriesDisplayData\n  extends BaseDisplay<'timeSeries', TimeSeriesData> {\n  xrange: number[]\n  std: TimeSeriesData\n}\n\nexport interface HeatMapDisplayData\n  extends BaseDisplay<'heatMap', HeatMapData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface ImageDisplayData extends BaseDisplay<'image', ImageData> {}\n\nexport interface CsvDisplayData extends BaseDisplay<'csv', CsvData> {\n  // columns: string[]\n}\n\nexport interface RoiDisplayData extends BaseDisplay<'roi', RoiData> {\n  roiUniqueList: string[]\n}\n\nexport interface ScatterDisplayData\n  extends BaseDisplay<'scatter', ScatterData> {}\n\nexport interface BarDisplayData extends BaseDisplay<'bar', BarData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface HTMLDisplayData extends BaseDisplay<'html', HTMLData> {}\n","import { DATA_TYPE, DATA_TYPE_SET } from './DisplayDataType'\n\n/**\n * サーバーサイドの値をマッピング\n */\nexport function toDataType(value: string): DATA_TYPE {\n  switch (value) {\n    case 'images':\n      return DATA_TYPE_SET.IMAGE\n    case 'timeseries':\n      return DATA_TYPE_SET.TIME_SERIES\n    case 'heatmap':\n      return DATA_TYPE_SET.HEAT_MAP\n    case 'roi':\n      return DATA_TYPE_SET.ROI\n    case 'scatter':\n      return DATA_TYPE_SET.SCATTER\n    case 'bar':\n      return DATA_TYPE_SET.BAR\n    case 'html':\n      return DATA_TYPE_SET.HTML\n    default:\n      throw new Error(`failed to map dataType: ${value}`)\n  }\n}\n","import { RunPostData, RunResultDTO, OutputPathsDTO } from 'api/run/Run'\n\nimport { toDataType } from '../DisplayData/DisplayDataUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  RunResult,\n  OutputPaths,\n  NODE_RESULT_STATUS,\n  PipelineType,\n  RUN_STATUS,\n  StartedPipeline,\n  NodeResultPending,\n  NodeResultError,\n  NodeResultSuccess,\n  NodeResult,\n} from './PipelineType'\n\nexport function isNodeResultPending(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultPending {\n  return nodeResult.status === NODE_RESULT_STATUS.PENDING\n}\n\nexport function isNodeResultSuccess(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultSuccess {\n  return nodeResult.status === NODE_RESULT_STATUS.SUCCESS\n}\n\nexport function isNodeResultError(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultError {\n  return nodeResult.status === NODE_RESULT_STATUS.ERROR\n}\n\nexport function isStartedPipeline(\n  pipeline: PipelineType,\n): pipeline is StartedPipeline {\n  return (\n    pipeline.status === RUN_STATUS.START_SUCCESS ||\n    pipeline.status === RUN_STATUS.FINISHED ||\n    pipeline.status === RUN_STATUS.ABORTED\n  )\n}\n\nexport function getInitialRunResult(runPostData: RunPostData) {\n  const initialResult: RunResult = {}\n  Object.values(runPostData.nodeDict)\n    .filter(({ data }) => data?.type === NODE_TYPE_SET.ALGORITHM)\n    .forEach(({ id, data }) => {\n      initialResult[id] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: data?.label ?? '',\n      }\n    })\n  return initialResult\n}\n\nexport function convertToRunResult(dto: RunResultDTO) {\n  const result: RunResult = {}\n  Object.entries(dto).forEach(([nodeId, nodeResultDto]) => {\n    const outputPath = nodeResultDto.outputPaths\n    if (nodeResultDto.status === 'success' && outputPath != null) {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.SUCCESS,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n        outputPaths: convertToOutputPath(outputPath),\n      }\n    } else {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.ERROR,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n      }\n    }\n  })\n  return result\n}\n\nfunction convertToOutputPath(dto: OutputPathsDTO) {\n  const result: OutputPaths = {}\n  Object.entries(dto).forEach(([functionPath, value]) => {\n    result[functionPath] = {\n      path: value.path,\n      type: toDataType(value.type),\n    }\n  })\n  return result\n}\n","import { RootState } from 'store/store'\n\nimport {\n  NodeResult,\n  NodeResultPending,\n  NodeResultSuccess,\n  RUN_STATUS,\n} from './PipelineType'\nimport {\n  isNodeResultPending,\n  isStartedPipeline,\n  isNodeResultSuccess,\n} from './PipelineUtils'\n\nexport const selectPipelineLatestUid = (state: RootState) => {\n  return state.pipeline.currentPipeline?.uid\n}\n\nexport const selectStartedPipeline = (state: RootState) => {\n  return state.pipeline.run\n}\n\nexport const selectPipelineRunBtn = (state: RootState) => {\n  return state.pipeline.runBtn\n}\n\nexport const selectRunResultPendingList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.values(pipeline.runResult).filter(isNodeResultPending)\n  } else {\n    return []\n  }\n}\n\nexport const selectRunResultPendingNodeIdList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => ({ nodeId, nodeResult }))\n      .filter(isNodeResultPendingAndNodeId)\n      .map(({ nodeId }) => nodeId)\n  } else {\n    return []\n  }\n}\n\nfunction isNodeResultPendingAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultPending\n} {\n  return isNodeResultPending(arg.nodeResult)\n}\n\nexport const selectPipelineStatus = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status\n}\n\nexport const selectPipelineIsCanceled = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.CANCELED\n}\n\nexport const selectPipelineIsStartedSuccess = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.START_SUCCESS\n}\n\nexport const selectPipelineNodeResultSuccessList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => {\n        return {\n          nodeId,\n          nodeResult,\n        }\n      })\n      .filter(isNodeResultSuccessAndNodeId)\n  } else {\n    return []\n  }\n}\n\n// selectPipelineNodeResultSuccessListの返り値の型を正しく認識させるためだけに作った\nfunction isNodeResultSuccessAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultSuccess\n} {\n  return isNodeResultSuccess(arg.nodeResult)\n}\n\nexport const selectPipelineNodeResultStatus =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].status\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultMessage =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].message\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultOutputKeyList =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return Object.keys(nodeResult.outputPaths)\n      }\n    }\n    return []\n  }\n\nconst selectPipelineNodeResultOutputPaths =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return nodeResult.outputPaths\n      }\n    }\n    throw new Error(`key error. nodeId:${nodeId}`)\n  }\n\nexport const selectPipelineNodeResultOutputFilePath =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].path\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n\nexport const selectPipelineNodeResultOutputFileDataType =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].type\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n","import axios from 'axios'\nimport type { Edge, Node } from 'react-flow-renderer'\n\nimport { BASE_URL } from 'const/API'\nimport type {\n  AlgorithmNodeData,\n  InputNodeData,\n} from 'store/slice/FlowElement/FlowElementType'\nimport type { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport type { ParamMap } from 'utils/param/ParamType'\n\nexport type RunPostData = {\n  name: string\n  nodeDict: NodeDict\n  edgeDict: EdgeDict\n  nwbParam: ParamMap\n  snakemakeParam: ParamMap\n  forceRunList: { nodeId: string; name: string }[]\n}\n\nexport type NodeDict = {\n  [nodeId: string]: Node<NodePostDataType>\n}\n\nexport type EdgeDict = {\n  [nodeId: string]: Edge\n}\n\nexport type NodePostDataType = AlgorithmNodePostData | InputNodePostData\n\nexport interface InputNodePostData extends InputNodeData {\n  path: string | string[]\n  fileType: FILE_TYPE\n  param?: {\n    [key: string]: unknown\n  }\n  hdf5Path?: string\n}\n\nexport interface AlgorithmNodePostData extends AlgorithmNodeData {\n  path: string\n  param: ParamMap\n}\n\nexport async function runApi(data: RunPostData): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run`, data)\n  return response.data\n}\n\nexport async function runByUidApi(\n  uid: string,\n  data: Omit<RunPostData, 'name'>,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${uid}`, data)\n  return response.data\n}\n\nexport type RunResultDTO = {\n  [nodeId: string]: {\n    status: string\n    message: string\n    name: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type OutputPathsDTO = {\n  [outputKey: string]: {\n    path: string\n    type: string\n  }\n}\n\nexport async function runResult(data: {\n  uid: string\n  pendingNodeIdList: string[]\n}): Promise<RunResultDTO> {\n  const { uid, pendingNodeIdList } = data\n  const response = await axios.post(`${BASE_URL}/run/result/${uid}`, {\n    pendingNodeIdList,\n  })\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { ThunkApiConfig } from 'store/store'\nimport { PIPELINE_SLICE_NAME } from './PipelineType'\nimport {\n  runApi,\n  runByUidApi,\n  runResult,\n  RunResultDTO,\n  RunPostData,\n} from 'api/run/Run'\nimport {\n  selectPipelineLatestUid,\n  selectRunResultPendingNodeIdList,\n} from './PipelineSelectors'\n\nexport const run = createAsyncThunk<\n  string,\n  { runPostData: RunPostData },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/run`, async ({ runPostData }, thunkAPI) => {\n  try {\n    const responseData = await runApi(runPostData)\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const runByCurrentUid = createAsyncThunk<\n  string,\n  { runPostData: Omit<RunPostData, 'name'> },\n  ThunkApiConfig\n>(\n  `${PIPELINE_SLICE_NAME}/runByCurrentUid`,\n  async ({ runPostData }, thunkAPI) => {\n    const currentUid = selectPipelineLatestUid(thunkAPI.getState())\n    if (currentUid != null) {\n      try {\n        const responseData = await runByUidApi(currentUid, runPostData)\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    } else {\n      return thunkAPI.rejectWithValue('currentUid dose not exist.')\n    }\n  },\n)\n\nexport const pollRunResult = createAsyncThunk<\n  RunResultDTO,\n  {\n    uid: string\n  },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/pollRunResult`, async ({ uid }, thunkAPI) => {\n  const pendingNodeIdList = selectRunResultPendingNodeIdList(\n    thunkAPI.getState(),\n  )\n  try {\n    const responseData = await runResult({ uid, pendingNodeIdList })\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { pollRunResult, run, runByCurrentUid } from './PipelineActions'\nimport {\n  Pipeline,\n  PIPELINE_SLICE_NAME,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n  RUN_STATUS,\n} from './PipelineType'\n\nimport {\n  getInitialRunResult,\n  convertToRunResult,\n  isNodeResultPending,\n} from './PipelineUtils'\n\nconst initialState: Pipeline = {\n  run: {\n    status: RUN_STATUS.START_UNINITIALIZED,\n  },\n  runBtn: RUN_BTN_OPTIONS.RUN_NEW,\n}\n\nexport const pipelineSlice = createSlice({\n  name: PIPELINE_SLICE_NAME,\n  initialState,\n  reducers: {\n    cancelPipeline(state) {\n      state.run.status = RUN_STATUS.CANCELED\n    },\n    setRunBtnOption: (\n      state,\n      action: PayloadAction<{\n        runBtnOption: RUN_BTN_TYPE\n      }>,\n    ) => {\n      state.runBtn = action.payload.runBtnOption\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.run.status === RUN_STATUS.START_SUCCESS) {\n          state.run.runResult = {\n            ...state.run.runResult, // pendingのNodeResultはそのままでsuccessもしくはerrorのみ上書き\n            ...convertToRunResult(action.payload),\n          }\n          const runResultPendingList = Object.values(\n            state.run.runResult,\n          ).filter(isNodeResultPending)\n          if (runResultPendingList.length === 0) {\n            // 終了\n            state.run.status = RUN_STATUS.FINISHED\n          }\n        }\n      })\n      .addCase(pollRunResult.rejected, (state, action) => {\n        state.run.status = RUN_STATUS.ABORTED\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.meta.arg,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addMatcher(\n        isAnyOf(run.pending, runByCurrentUid.pending),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_PENDING,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          const uid = action.payload\n          state.run = {\n            uid,\n            status: RUN_STATUS.START_SUCCESS,\n            runResult: getInitialRunResult({ name: '', ...runPostData }),\n            runPostData: { name: '', ...runPostData },\n          }\n          state.currentPipeline = {\n            uid: action.payload,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.rejected, runByCurrentUid.rejected),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_ERROR,\n          }\n        },\n      )\n  },\n})\n\nexport const { cancelPipeline, setRunBtnOption } = pipelineSlice.actions\n\nexport default pipelineSlice.reducer\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\nimport Grow from '@mui/material/Grow'\nimport Paper from '@mui/material/Paper'\nimport Popper from '@mui/material/Popper'\nimport MenuItem from '@mui/material/MenuItem'\nimport MenuList from '@mui/material/MenuList'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nimport { useSnackbar } from 'notistack'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport {\n  RUN_BTN_LABELS,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n} from 'store/slice/Pipeline/PipelineType'\nimport { selectPipelineRunBtn } from 'store/slice/Pipeline/PipelineSelectors'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\n\nexport const RunButtons = React.memo<UseRunPipelineReturnType>((props) => {\n  const {\n    uid,\n    isStartedSuccess,\n    filePathIsUndefined,\n    handleCancelPipeline,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const runBtnOption = useSelector(selectPipelineRunBtn)\n\n  const [dialogOpen, setDialogOpen] = React.useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n  const handleClick = () => {\n    if (!filePathIsUndefined) {\n      if (runBtnOption === RUN_BTN_OPTIONS.RUN_NEW) {\n        setDialogOpen(true)\n      } else {\n        handleRunPipelineByUid()\n      }\n    } else {\n      enqueueSnackbar('please select input file', { variant: 'error' })\n    }\n  }\n  const onClickDialogRun = (name: string) => {\n    handleRunPipeline(name)\n    setDialogOpen(false)\n  }\n  const onClickCancel = () => {\n    handleCancelPipeline()\n  }\n  const [menuOpen, setMenuOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLDivElement>(null)\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    option: RUN_BTN_TYPE,\n  ) => {\n    dispatch(setRunBtnOption({ runBtnOption: option }))\n    setMenuOpen(false)\n  }\n  const handleToggle = () => {\n    setMenuOpen((prevOpen) => !prevOpen)\n  }\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n    setMenuOpen(false)\n  }\n  const uidExists = uid != null\n  return (\n    <>\n      <ButtonGroup\n        sx={{\n          margin: 1,\n        }}\n        variant=\"contained\"\n        ref={anchorRef}\n        disabled={isStartedSuccess}\n      >\n        <Button onClick={handleClick}>{RUN_BTN_LABELS[runBtnOption]}</Button>\n        <Button size=\"small\" onClick={handleToggle}>\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={menuOpen}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList>\n                  {Object.values(RUN_BTN_OPTIONS).map((option) => (\n                    <MenuItem\n                      key={option}\n                      disabled={\n                        !uidExists && option === RUN_BTN_OPTIONS.RUN_ALREADY\n                      }\n                      selected={option === runBtnOption}\n                      onClick={(event) => handleMenuItemClick(event, option)}\n                    >\n                      {RUN_BTN_LABELS[option]}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n      <Button\n        variant=\"outlined\"\n        endIcon={<CloseIcon />}\n        onClick={onClickCancel}\n        sx={{\n          margin: 1,\n          marginRight: 4,\n        }}\n      >\n        Cancel\n      </Button>\n      <RunDialog\n        open={dialogOpen}\n        handleRun={onClickDialogRun}\n        handleClose={() => setDialogOpen(false)}\n      />\n    </>\n  )\n})\n\nconst RunDialog = React.memo<{\n  open: boolean\n  handleRun: (name: string) => void\n  handleClose: () => void\n}>(({ open, handleClose, handleRun }) => {\n  const [name, setName] = React.useState('New flow')\n  const [error, setError] = React.useState<string | null>(null)\n  const onClickRun = () => {\n    if (name !== '') {\n      handleRun(name)\n    } else {\n      setError('name is empty')\n    }\n  }\n  const onChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    if (event.target.value !== '') {\n      setError(null)\n    }\n  }\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Name and run flowchart</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"name\"\n          autoFocus\n          margin=\"dense\"\n          fullWidth\n          variant=\"standard\"\n          onChange={onChangeName}\n          error={error != null}\n          helperText={error}\n          value={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"inherit\" variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button onClick={onClickRun} color=\"primary\" variant=\"outlined\">\n          Run\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","import React from 'react'\nimport Box from '@mui/material/Box'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { NWBSettingButton } from './FlowChart/NWB'\nimport { SnakemakeButton } from './FlowChart/Snakemake'\nimport { RunButtons } from './RunButtons'\n\nexport const ToolBar = React.memo<UseRunPipelineReturnType>((props) => (\n  <Box\n    style={{\n      position: 'absolute',\n      float: 'right',\n      textAlign: 'right',\n      top: -7,\n      right: 10,\n      zIndex: 4,\n      textTransform: 'none',\n    }}\n  >\n    <SnakemakeButton />\n    <NWBSettingButton />\n    <RunButtons {...props} />\n  </Box>\n))\n","import {\n  CsvInputNode,\n  ImageInputNode,\n  HDF5InputNode,\n  InputNodeType,\n  FILE_TYPE_SET,\n} from './InputNodeType'\n\nexport function isImageInputNode(\n  inputNode: InputNodeType,\n): inputNode is ImageInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.IMAGE\n}\n\nexport function isCsvInputNode(\n  inputNode: InputNodeType,\n): inputNode is CsvInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.CSV\n}\n\nexport function isHDF5InputNode(\n  inputNode: InputNodeType,\n): inputNode is HDF5InputNode {\n  return inputNode.fileType === FILE_TYPE_SET.HDF5\n}\n","import { RootState } from 'store/store'\nimport {\n  isHDF5InputNode,\n  isCsvInputNode,\n  isImageInputNode,\n} from './InputNodeUtils'\n\nexport const selectInputNode = (state: RootState) => state.inputNode\n\nexport const selectInputNodeById = (nodeId: string) => (state: RootState) =>\n  state.inputNode[nodeId]\n\nexport const selectInputNodeDefined = (nodeId: string) => (state: RootState) =>\n  Object.keys(state.inputNode).includes(nodeId)\n\nexport const selectInputNodeFileType = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).fileType\n\nexport const selectInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) =>\n    selectInputNodeById(nodeId)(state).selectedFilePath\n\nexport const selectCsvInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isCsvInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectImageInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isImageInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectHDF5InputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectFilePathIsUndefined = (state: RootState) =>\n  Object.values(state.inputNode).filter((inputNode) => {\n    if (isHDF5InputNode(inputNode)) {\n      return inputNode.selectedFilePath == null || inputNode.hdf5Path == null\n    } else {\n      const filePath = inputNode.selectedFilePath\n      if (Array.isArray(filePath)) {\n        return filePath.length === 0\n      } else {\n        return filePath == null\n      }\n    }\n  }).length > 0\n\nexport const selectInputNodeParam = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).param\n\nconst selectCsvInputNodeParam = (nodeId: string) => (state: RootState) => {\n  const inputNode = selectInputNodeById(nodeId)(state)\n  if (isCsvInputNode(inputNode)) {\n    return inputNode.param\n  } else {\n    throw new Error(`The InputNode is not CsvInputNode. (nodeId: ${nodeId})`)\n  }\n}\n\nexport const selectCsvInputNodeParamSetHeader =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setHeader\n\nexport const selectCsvInputNodeParamSetIndex =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setIndex\n\nexport const selectCsvInputNodeParamTranspose =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).transpose\n\nexport const selectInputNodeHDF5Path =\n  (nodeId: string) => (state: RootState) => {\n    const item = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(item)) {\n      return item.hdf5Path\n    } else {\n      return undefined\n    }\n  }\n","import { useSelector } from 'react-redux'\nimport { selectHandleTypeColor } from 'store/slice/HandleTypeColor/HandleTypeColorSelectors'\n\nexport function useHandleColor(type: string) {\n  const color = useSelector(selectHandleTypeColor(type))\n  return color\n}\n","import { RootState } from '../../store'\n\nexport const selectHandleTypeColor = (key: string) => (state: RootState) => {\n  if (state.handleColor.colorMap[key] != null) {\n    return state.handleColor.colorMap[key]\n  } else {\n    return undefined\n  }\n}\n","import React from 'react'\nimport LinearProgress, {\n  LinearProgressProps,\n} from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\n\nexport const LinearProgressWithLabel = React.memo<\n  LinearProgressProps & { value: number }\n>((props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  )\n})\n","import { FileUploaderType } from './FileUploaderType'\n\nexport const inistialUploaderState: FileUploaderType = {\n  path: undefined,\n  fileName: undefined,\n  isUninitialized: true,\n  pending: false,\n  fulfilled: false,\n  uploadingProgress: undefined,\n  error: undefined,\n}\n","import { RootState } from 'store/store'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nexport const selectFileUploader = (id: string) => (state: RootState) => {\n  if (Object.keys(state.fileUploader).includes(id)) {\n    return state.fileUploader[id]\n  } else {\n    return inistialUploaderState\n  }\n}\n\nexport const selectUploadFilePath = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).path\n\nexport const selectUploadFileName = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fileName\n\nexport const selectFileUploadIsUninitialized =\n  (id: string) => (state: RootState) =>\n    selectFileUploader(id)(state).isUninitialized\n\nexport const selectFileUploadIsPending = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).pending\n\nexport const selectFileUploadIsFulfilled = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fulfilled\n\nexport const selectFileUploadProgress = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).uploadingProgress\n\nexport const selectFileUploadError = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).error\n","import { nanoid } from '@reduxjs/toolkit'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uploadFile } from './FileUploaderActions'\nimport {\n  selectFileUploadIsPending,\n  selectUploadFilePath,\n  selectFileUploadIsFulfilled,\n  selectFileUploadProgress,\n  selectFileUploadIsUninitialized,\n  selectFileUploadError,\n} from './FileUploaderSelectors'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\ntype UseFileUploaderProps = {\n  fileType?: FILE_TYPE\n  nodeId?: string\n}\n\nexport function useFileUploader({ fileType, nodeId }: UseFileUploaderProps) {\n  const dispatch = useDispatch()\n  const id = React.useRef(nanoid())\n  const onUploadFile = React.useCallback(\n    (formData: FormData, fileName: string) => {\n      dispatch(\n        uploadFile({\n          requestId: id.current,\n          nodeId,\n          fileName,\n          formData,\n          fileType,\n        }),\n      )\n    },\n    [dispatch, fileType, nodeId],\n  )\n  const uninitialized = useSelector(selectFileUploadIsUninitialized(id.current))\n  const filePath = useSelector(selectUploadFilePath(id.current))\n  const pending = useSelector(selectFileUploadIsPending(id.current))\n  const fulfilled = useSelector(selectFileUploadIsFulfilled(id.current))\n  const progress = useSelector(selectFileUploadProgress(id.current))\n  const error = useSelector(selectFileUploadError(id.current))\n  return {\n    filePath,\n    uninitialized,\n    pending,\n    fulfilled,\n    progress,\n    error,\n    onUploadFile,\n  }\n}\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { RootState } from '../../store'\n\nexport const selectFilesTree =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) => {\n    if (state.filesTree[fileType] != null) {\n      return state.filesTree[fileType]\n    } else {\n      return undefined\n    }\n  }\n\nexport const selectFilesTreeNodes =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.tree\n\nexport const selectFilesIsLatest =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLatest ?? false\n\nexport const selectFilesIsLoading =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLoading ?? false\n","export const FILES_TREE_SLICE_NAME = 'filesTree'\n\nexport type TreeNodeType = DirNode | FileNode\n\nexport interface NodeBase {\n  path: string\n  name: string\n  isDir: boolean\n}\n\nexport interface DirNode extends NodeBase {\n  isDir: true\n  nodes: TreeNodeType[]\n}\n\nexport interface FileNode extends NodeBase {\n  isDir: false\n}\n\nexport interface FilesTree {\n  [fileType: string]: {\n    isLatest: boolean\n    isLoading: boolean\n    tree: TreeNodeType[]\n  }\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  FILE_TREE_TYPE,\n  getFilesTreeApi,\n  TreeNodeTypeDTO,\n} from 'api/files/Files'\n\nimport { FILES_TREE_SLICE_NAME } from './FilesTreeType'\n\nexport const getFilesTree = createAsyncThunk<TreeNodeTypeDTO[], FILE_TREE_TYPE>(\n  `${FILES_TREE_SLICE_NAME}/getFilesTree`,\n  async (fileType, thunkAPI) => {\n    try {\n      const response = await getFilesTreeApi(fileType)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { TreeNodeTypeDTO } from 'api/files/Files'\nimport { TreeNodeType } from './FilesTreeType'\n\nexport function convertToTreeNodeType(dto: TreeNodeTypeDTO[]): TreeNodeType[] {\n  return dto.map((node) =>\n    node.isdir\n      ? {\n          path: node.path,\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n        }\n      : {\n          path: node.path,\n          name: node.name,\n          isDir: false,\n        },\n  )\n}\n\nexport function isDirNodeByPath(path: string, tree: TreeNodeType[]): boolean {\n  const node = getNodeByPath(path, tree)\n  if (node != null) {\n    return node.isDir\n  } else {\n    throw new Error(`failed to get node: ${path}`)\n  }\n}\n\nexport function getNodeByPath(\n  path: string,\n  tree: TreeNodeType[],\n): TreeNodeType | null {\n  let targetNode: TreeNodeType | null = null\n  for (const node of tree) {\n    if (path === node.path) {\n      targetNode = node\n      break\n    } else {\n      if (node.isDir) {\n        targetNode = getNodeByPath(path, node.nodes)\n        if (targetNode != null) {\n          break\n        }\n      }\n    }\n  }\n  return targetNode\n}\n","import Dialog from '@mui/material/Dialog'\nimport { useDispatch, useSelector } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\nimport Checkbox, { CheckboxProps } from '@mui/material/Checkbox'\n\nimport Box from '@mui/material/Box'\nimport { useTheme } from '@mui/material/styles'\nimport React from 'react'\n\nimport {\n  selectFilesIsLatest,\n  selectFilesIsLoading,\n  selectFilesTreeNodes,\n} from 'store/slice/FilesTree/FilesTreeSelectors'\nimport { getFilesTree } from 'store/slice/FilesTree/FilesTreeAction'\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { TreeNodeType } from 'store/slice/FilesTree/FilesTreeType'\nimport {\n  getNodeByPath,\n  isDirNodeByPath,\n} from 'store/slice/FilesTree/FilesTreeUtils'\n\ntype FileSelectDialogProps = {\n  initialFilePath: string[] | string\n  onClickOk: (path: string[] | string) => void\n  fileType?: FILE_TREE_TYPE\n  title?: string\n  open: boolean\n  onClickCancel: () => void\n  onClose?: () => void\n  multiSelect: boolean\n}\n\nexport const FileSelectDialog = React.memo<FileSelectDialogProps>(\n  function FileSelectDialog({\n    open,\n    initialFilePath,\n    onClickCancel,\n    onClickOk,\n    onClose,\n    title,\n    fileType = FILE_TREE_TYPE_SET.ALL,\n    multiSelect,\n  }) {\n    React.useEffect(() => {\n      setSelectedFilePath(initialFilePath)\n    }, [initialFilePath])\n    const [selectedFilePath, setSelectedFilePath] =\n      React.useState(initialFilePath)\n    const onCancel = () => {\n      setSelectedFilePath(initialFilePath) // 選択内容を反映させない\n      onClickCancel()\n    }\n    const onOk = () => {\n      onClickOk(selectedFilePath)\n    }\n    const theme = useTheme()\n    return (\n      <Dialog open={open} onClose={onClose} fullWidth>\n        <DialogTitle>{title ?? 'Select File'}</DialogTitle>\n        <DialogContent dividers>\n          <div\n            style={{\n              height: 300,\n              overflow: 'auto',\n              marginBottom: theme.spacing(1),\n              border: '1px solid',\n              padding: theme.spacing(1),\n              borderColor: theme.palette.divider,\n            }}\n          >\n            <FileTreeView\n              setSelectedFilePath={setSelectedFilePath}\n              multiSelect={multiSelect}\n              fileType={fileType}\n              selectedFilePath={selectedFilePath}\n            />\n          </div>\n          <Typography variant=\"subtitle1\">Select File</Typography>\n          <FilePathSelectedListView path={selectedFilePath} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  },\n)\n\nconst FileTreeView = React.memo<{\n  setSelectedFilePath: (path: string[] | string) => void\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  fileType: FILE_TREE_TYPE\n}>(({ setSelectedFilePath, selectedFilePath, fileType, multiSelect }) => {\n  const [tree, isLoading] = useFileTree(fileType)\n  const onNodeSelectHandler = (\n    event: React.SyntheticEvent,\n    nodeIds: Array<string> | string,\n  ) => {\n    if (!multiSelect && tree != null) {\n      // multiSelectがfalseの場合、ディレクトリは選択しない\n      const path = nodeIds as string\n      if (!isDirNodeByPath(path, tree)) {\n        setSelectedFilePath(path)\n      }\n    }\n  }\n  // multiSelectでチェックボックスを使用する時用のハンドラ\n  const onCheckFile = (path: string) => {\n    if (Array.isArray(selectedFilePath)) {\n      if (selectedFilePath.includes(path)) {\n        setSelectedFilePath(\n          selectedFilePath.filter((selectedPath) => path !== selectedPath),\n        )\n      } else {\n        setSelectedFilePath(selectedFilePath.concat(path))\n      }\n    }\n  }\n  const onCheckDir = (path: string, checked: boolean) => {\n    if (tree != null && Array.isArray(selectedFilePath)) {\n      const node = getNodeByPath(path, tree)\n      if (node != null && node.isDir) {\n        const childrenFilePathList = node.nodes\n          .filter((node) => !node.isDir)\n          .map((node) => node.path)\n        if (checked) {\n          setSelectedFilePath(\n            // concat時の重複を削除\n            Array.from(new Set(selectedFilePath.concat(childrenFilePathList))),\n          )\n        } else {\n          setSelectedFilePath(\n            selectedFilePath.filter(\n              (selectedPath) => !childrenFilePathList.includes(selectedPath),\n            ),\n          )\n        }\n      }\n    }\n  }\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView\n        disableSelection={multiSelect}\n        multiSelect={multiSelect}\n        onNodeSelect={onNodeSelectHandler}\n      >\n        {tree?.map((node) => (\n          <TreeNode\n            node={node}\n            selectedFilePath={selectedFilePath}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: TreeNodeType\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  onCheckFile: (path: string) => void\n  onCheckDir: (path: string, checked: boolean) => void\n}>(({ node, selectedFilePath, multiSelect, onCheckDir, onCheckFile }) => {\n  if (node.isDir) {\n    const allChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => selectedFilePath.includes(filePath))\n    const allNotChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => !selectedFilePath.includes(filePath))\n    const indeterminate = !(allChecked || allNotChecked)\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={\n          multiSelect && node.nodes.filter((node) => !node.isDir).length > 0 ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                indeterminate,\n                checked: allChecked,\n                onClick: (e) => {\n                  e.stopPropagation() // on/offのクリックにつられてTreeを開閉させないようにする\n                },\n                onChange: (e) => onCheckDir(node.path, e.target.checked),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode\n            node={childNode}\n            selectedFilePath={selectedFilePath}\n            key={i}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={\n          multiSelect ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                checked:\n                  Array.isArray(selectedFilePath) &&\n                  selectedFilePath.includes(node.path),\n                onChange: () => onCheckFile(node.path),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n        onClick={() => onCheckFile(node.path)}\n      />\n    )\n  }\n})\n\nconst TreeItemLabel = React.memo<{\n  label: string\n  checkboxProps: CheckboxProps\n}>(({ label, checkboxProps }) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box flexGrow={1}>{label}</Box>\n      <Box>\n        <Checkbox\n          {...checkboxProps}\n          disableRipple\n          size=\"small\"\n          sx={{\n            marginRight: '4px',\n            padding: '2px',\n          }}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectedListView = React.memo<{ path: string | string[] }>(\n  ({ path }) => {\n    return (\n      <Typography variant=\"subtitle2\">\n        {!!path\n          ? Array.isArray(path)\n            ? path.map((text) => <li>{text}</li>)\n            : path\n          : '---'}\n      </Typography>\n    )\n  },\n)\n\nfunction useFileTree(\n  fileType: FILE_TREE_TYPE,\n): [TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectFilesTreeNodes(fileType))\n  const isLatest = useSelector(selectFilesIsLatest(fileType))\n  const isLoading = useSelector(selectFilesIsLoading(fileType))\n  React.useEffect(() => {\n    if (!isLatest && !isLoading) {\n      dispatch(getFilesTree(fileType))\n    }\n  }, [isLatest, isLoading, fileType, dispatch])\n  return [tree, isLoading]\n}\n","import React from 'react'\nimport { Button, Typography } from '@mui/material'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { LinearProgressWithLabel } from './LinerProgressWithLabel'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { getLabelByPath } from 'store/slice/FlowElement/FlowElementUtils'\nimport { FileSelectDialog } from 'components/common/FileSelectDialog'\n\nexport const FileSelect = React.memo<{\n  multiSelect?: boolean\n  filePath: string | string[]\n  fileType: FILE_TYPE\n  nodeId?: string\n  onChangeFilePath: (path: string | string[]) => void\n}>(({ multiSelect = false, filePath, nodeId, fileType, onChangeFilePath }) => {\n  const {\n    // filePath: uploadedFilePath,\n    onUploadFile,\n    pending,\n    uninitialized,\n    progress,\n    error,\n  } = useFileUploader({ fileType, nodeId })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n  return (\n    <>\n      {!uninitialized && pending && progress != null && (\n        <div style={{ marginLeft: 2, marginRight: 2 }}>\n          <LinearProgressWithLabel value={progress} />\n        </div>\n      )}\n      <FileSelectImple\n        multiSelect={multiSelect}\n        filePath={filePath}\n        onSelectFile={onChangeFilePath}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={fileType}\n        selectButtonLabel={`Select ${fileType}`}\n      />\n      {error != null && (\n        <Typography variant=\"caption\" color=\"error\">\n          {error}\n        </Typography>\n      )}\n    </>\n  )\n})\n\ntype FileSelectImpleProps = {\n  multiSelect?: boolean\n  filePath: string | string[]\n  onUploadFile: (formData: FormData, fileName: string) => void\n  onSelectFile: (path: string | string[]) => void\n  fileTreeType?: FILE_TREE_TYPE\n  selectButtonLabel?: string\n  uploadButtonLabel?: string\n}\n\nexport const FileSelectImple = React.memo<FileSelectImpleProps>(\n  ({\n    multiSelect = false,\n    filePath,\n    onSelectFile,\n    onUploadFile,\n    fileTreeType,\n    selectButtonLabel,\n    uploadButtonLabel,\n  }) => {\n    const onFileInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.preventDefault()\n      if (event.target.files != null && event.target.files[0] != null) {\n        const file = event.target.files[0]\n        const formData = new FormData()\n        formData.append('file', file)\n        const fileName = file.name\n        onUploadFile(formData, fileName)\n      }\n    }\n    const inputRef = React.useRef<HTMLInputElement>(null)\n    const onClick = () => {\n      if (inputRef.current != null) {\n        inputRef.current.click()\n      }\n    }\n    const [open, setOpen] = React.useState(false)\n    const accept = getFileInputAccept(fileTreeType)\n    const fileName = getLabelByPath(filePath)\n    return (\n      <div\n        style={{\n          padding: 5,\n        }}\n      >\n        <ButtonGroup size=\"small\" style={{ marginRight: 4 }}>\n          <Button variant=\"outlined\" onClick={() => setOpen(true)}>\n            {!!selectButtonLabel ? selectButtonLabel : 'Select File'}\n          </Button>\n          <Button onClick={onClick} variant=\"outlined\">\n            {!!uploadButtonLabel ? uploadButtonLabel : 'or Upload'}\n          </Button>\n        </ButtonGroup>\n        <div>\n          <input\n            ref={inputRef}\n            type=\"file\"\n            onChange={onFileInputChange}\n            accept={accept}\n            style={{\n              visibility: 'hidden',\n              width: 0,\n              height: 0,\n            }}\n          />\n          <Typography className=\"selectFilePath\" variant=\"caption\">\n            {!!fileName ? fileName : 'No file is selected.'}\n          </Typography>\n        </div>\n        <FileSelectDialog\n          multiSelect={multiSelect}\n          initialFilePath={filePath}\n          open={open}\n          onClickOk={(path) => {\n            onSelectFile(path)\n            setOpen(false)\n          }}\n          onClickCancel={() => {\n            setOpen(false)\n          }}\n          onClose={() => setOpen(false)}\n          fileType={fileTreeType}\n        />\n      </div>\n    )\n  },\n)\n\nfunction getFileInputAccept(fileType: FILE_TREE_TYPE | undefined) {\n  switch (fileType) {\n    case FILE_TREE_TYPE_SET.IMAGE:\n      return '.tif,.tiff'\n    case FILE_TREE_TYPE_SET.CSV:\n      return '.csv'\n    case FILE_TREE_TYPE_SET.HDF5:\n      return '.hdf5,.nwb'\n    default:\n      return undefined\n  }\n}\n","import { Connection } from 'react-flow-renderer'\n\nexport function toHandleId(nodeId: string, name: string, type: string) {\n  return `${nodeId}--${name}--${type}`\n}\n\nexport function getHandleType(handleId: string) {\n  return handleId.split('--')[2]\n}\n\nexport function isValidConnection(connection: Connection) {\n  if (connection.sourceHandle != null && connection.targetHandle != null) {\n    return (\n      getHandleType(connection.sourceHandle) ===\n      getHandleType(connection.targetHandle)\n    )\n  } else {\n    return true\n  }\n}\n","import React, { CSSProperties } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport {\n  selectImageInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { FileSelect } from './FileSelect'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\n// Connection部分のレイアウト\nconst sourceHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  top: 15,\n  border: '1px solid',\n  // borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const ImageFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <ImageFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst ImageFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected: elementSelected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectImageInputNodeSelectedFilePath(nodeId),\n      (a, b) => (a != null && b != null ? arrayEqualityFn(a, b) : a === b),\n    )\n    const onChangeFilePath = (path: string[]) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n\n    const theme = useTheme()\n    const returnType = 'ImageData'\n    const imageColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '250px',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          multiSelect\n          onChangeFilePath={(path) => {\n            if (Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.IMAGE}\n          filePath={filePath ?? []}\n        />\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'image', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: imageColor,\n          }}\n          isValidConnection={isValidConnection}\n        />\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nconst selectDisplayData = (state: RootState) => state.displayData\n\nexport const selectTimeSeriesData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].data\n\nexport const selectTimeSeriesXrange =\n  (filePath: string) => (state: RootState) =>\n    selectDisplayData(state).timeSeries[filePath].xrange\n\nexport const selectTimeSeriesStd = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].std\n\nexport const selectTimeSeriesDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).timeSeries).includes(filePath)\n\nexport const selectTimeSeriesDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].pending\n\nexport const selectTimeSeriesDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].fulfilled\n\nexport const selectTimeSeriesDataError =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).timeSeries[filePath].error\n      : null\n\nexport const selectHeatMapData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].data\n\nexport const selectHeatMapColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].columns\n\nexport const selectHeatMapIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].index\n\nexport const selectHeatMapDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).heatMap).includes(filePath)\n\nexport const selectHeatMapDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].pending\n\nexport const selectHeatMapDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].fulfilled\n\nexport const selectHeatMapDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).heatMap[filePath].error\n      : null\n\nexport const selectImageData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).image[filePath]\n\nexport const selectImageDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).image).includes(filePath)\n\nexport const selectImageDataError = (filePath: string) => (state: RootState) =>\n  selectImageDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).image[filePath].error\n    : null\n\nexport const selectImageDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].pending\n\nexport const selectImageDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].fulfilled\n\nexport const selectImageDataMaxSize =\n  (filePath: string) => (state: RootState) => {\n    if (!selectImageDataIsPending(filePath)(state)) {\n      return selectImageData(filePath)(state).data.length - 1\n    } else {\n      return 0\n    }\n  }\n\nexport const selectActiveImageData =\n  (filePath: string, activeIndex: number) => (state: RootState) => {\n    return selectImageData(filePath)(state).data[activeIndex]\n  }\n\nexport const selectCsvData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).csv[filePath].data\n\nexport const selectCsvDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).csv).includes(filePath)\n\nexport const selectCsvDataError = (filePath: string) => (state: RootState) =>\n  selectCsvDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).csv[filePath].error\n    : null\n\nexport const selectCsvDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].pending\n\nexport const selectCsvDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].fulfilled\n\nexport const selectRoiData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).roi[filePath]?.data[0] ?? []\n\nexport const selectRoiDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).roi).includes(filePath)\n\nexport const selectRoiDataError = (filePath: string) => (state: RootState) =>\n  selectRoiDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).roi[filePath].error\n    : null\n\nexport const selectRoiDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].pending\n\nexport const selectRoiDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].fulfilled\n\nexport const selectRoiUniqueList = (filePath: string) => (state: RootState) => {\n  if (selectRoiDataIsFulfilled(filePath)(state)) {\n    return selectDisplayData(state).roi[filePath].roiUniqueList\n  }\n  return null\n}\n\nexport const selectScatterData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).scatter[filePath]?.data ?? []\n\nexport const selectScatterDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).scatter).includes(filePath)\n\nexport const selectScatterDataError =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).scatter[filePath].error\n      : null\n\nexport const selectScatterDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].pending\n\nexport const selectScatterDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].fulfilled\n\nexport const selectBarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.data ?? []\n\nexport const selectBarIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.index ?? []\n\nexport const selectBarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).bar).includes(filePath)\n\nexport const selectBarDataError = (filePath: string) => (state: RootState) =>\n  selectBarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).bar[filePath].error\n    : null\n\nexport const selectBarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].pending\n\nexport const selectBarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].fulfilled\n\nexport const selectHTMLData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).html[filePath]?.data ?? ''\n\nexport const selectHTMLDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).html).includes(filePath)\n\nexport const selectHTMLDataError = (filePath: string) => (state: RootState) =>\n  selectHTMLDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).html[filePath].error\n    : null\n\nexport const selectHTMLDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].pending\n\nexport const selectHTMLDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].fulfilled\n","import { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\n\nexport const VISUALIZE_ITEM_SLICE_NAME = 'visualaizeItem'\n\nexport type VisualaizeItem = {\n  selectedItemId: number | null\n  items: {\n    [itemId: number]: VisualaizeItemType\n  }\n  layout: ItemLayout\n}\n\nexport type ItemLayout = number[][] // itemIdをrow,columnで並べる\n\nexport type VisualaizeItemType = DisplayDataItem\n\nexport interface ItemBaseType<T extends VISUALIZE_ITEM_TYPE> {\n  itemType: T\n  width: number\n  height: number\n}\n\nexport type ColorType = {\n  rgb: string\n  offset: string\n}\n\nexport const VISUALIZE_ITEM_TYPE_SET = {\n  DISPLAY_DATA: 'displayData',\n} as const\n\nexport type VISUALIZE_ITEM_TYPE =\n  typeof VISUALIZE_ITEM_TYPE_SET[keyof typeof VISUALIZE_ITEM_TYPE_SET]\n\nexport type DisplayDataItem =\n  | ImageItem\n  | TimeSeriesItem\n  | HeatMapItem\n  | CsvItem\n  | RoiItem\n  | ScatterItem\n  | BarItem\n  | HDF5Item\n  | HTMLItem\n  | FluoItem\n  | BehaviorItem\n\nexport interface DisplayDataItemBaseType extends ItemBaseType<'displayData'> {\n  filePath: string | null\n  nodeId: string | null\n  dataType: DATA_TYPE | null\n  isWorkflowDialog: boolean\n  saveFileName: string\n  saveFormat: string\n}\n\nexport interface ImageItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.IMAGE\n  activeIndex: number\n  startIndex: number\n  endIndex: number\n  showticklabels: boolean\n  zsmooth: string | boolean\n  showline: boolean\n  showgrid: boolean\n  showscale: boolean\n  colors: ColorType[]\n  alpha: number\n  roiItem: RoiItem | null\n  roiAlpha: number\n  duration: number\n  clickedDataId?: string\n}\n\nexport interface TimeSeriesItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.TIME_SERIES\n  offset: boolean\n  span: number\n  showgrid: boolean\n  showline: boolean\n  showticklabels: boolean\n  zeroline: boolean\n  xrange: {\n    left: number | undefined\n    right: number | undefined\n  }\n  maxIndex: number\n  refImageItemId: number | null\n  drawOrderList: string[]\n}\n\nexport interface HeatMapItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HEAT_MAP\n  showscale: boolean\n  colors: ColorType[]\n}\nexport interface CsvItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.CSV\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\nexport interface RoiItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.ROI\n  // colors: ColorType[]\n}\n\nexport interface ScatterItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.SCATTER\n  xIndex: string\n  yIndex: string\n}\n\nexport interface BarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BAR\n  index: string\n}\n\nexport interface HDF5Item extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HDF5\n}\n\nexport interface HTMLItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HTML\n}\n\nexport interface FluoItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.FLUO\n}\n\nexport interface BehaviorItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BEHAVIOR\n}\n","import { DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  VisualaizeItemType,\n  DisplayDataItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  ImageItem,\n  TimeSeriesItem,\n  HeatMapItem,\n  RoiItem,\n  ScatterItem,\n  CsvItem,\n  BarItem,\n} from './VisualizeItemType'\n\nexport function isDisplayDataItem(\n  item: VisualaizeItemType,\n): item is DisplayDataItem {\n  return item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA\n}\n\nexport function isImageItem(item: VisualaizeItemType): item is ImageItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.IMAGE\n  )\n}\n\nexport function isTimeSeriesItem(\n  item: VisualaizeItemType,\n): item is TimeSeriesItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.TIME_SERIES\n  )\n}\n\nexport function isCsvItem(item: VisualaizeItemType): item is CsvItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.CSV\n  )\n}\n\nexport function isHeatMapItem(item: VisualaizeItemType): item is HeatMapItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HEAT_MAP\n  )\n}\n\nexport function isRoiItem(item: VisualaizeItemType): item is RoiItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.ROI\n  )\n}\n\nexport function isScatterItem(item: VisualaizeItemType): item is ScatterItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.SCATTER\n  )\n}\n\nexport function isBarItem(item: VisualaizeItemType): item is BarItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.BAR\n  )\n}\n","import { RootState } from 'store/store'\nimport {\n  selectRoiData,\n  selectRoiUniqueList,\n  selectTimeSeriesData,\n  selectTimeSeriesDataIsInitialized,\n} from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport {\n  isDisplayDataItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isHeatMapItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const selectSelectedVisualizeItemId = (state: RootState) =>\n  state.visualaizeItem.selectedItemId\n\nexport const selectVisualizeImageItemIdList = (state: RootState) =>\n  Object.keys(state.visualaizeItem.items)\n    .map(Number)\n    .filter((itemId) => {\n      const item = selectVisualizeItemById(itemId)(state)\n      return isImageItem(item) && !item.isWorkflowDialog\n    })\n\nexport const selectVisualizeItems = (state: RootState) =>\n  state.visualaizeItem.items\n\nexport const selectVisualizeItemById = (itemId: number) => (state: RootState) =>\n  state.visualaizeItem.items[itemId]\n\nexport const selectVisualizeItemLayout = (state: RootState) =>\n  state.visualaizeItem.layout\n\nexport const selectVisualizeItemIsWorkflowDialog =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).isWorkflowDialog\n  }\n\nexport const selectVisualizeItemIdForWorkflowDialog =\n  (nodeId: string, filePath: string, dataType: DATA_TYPE) =>\n  (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    let targetItemId: null | number = null\n    for (const [itemId, value] of Object.entries(items)) {\n      if (\n        value.nodeId === nodeId &&\n        value.filePath === filePath &&\n        value.dataType === dataType &&\n        value.isWorkflowDialog\n      ) {\n        targetItemId = Number(itemId)\n      }\n    }\n    return targetItemId\n  }\n\nexport const selectVisualizeItemWidth =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).width\n  }\n\nexport const selectVisualizeItemHeight =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).height\n  }\n\nexport const selectVisualizeItemType = (itemId: number) => (state: RootState) =>\n  selectVisualizeItemById(itemId)(state).itemType\n\nexport const selectVisualizeDataType =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.dataType\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataNodeId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.nodeId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeSaveFilename =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFileName\n  }\n\nexport const selectVisualizeSaveFormat =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFormat\n  }\n\nexport const selectImageItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemNodeId = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.nodeId ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemFilePath = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.filePath ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemShowticklabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemZsmooth =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.zsmooth\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemStartIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.startIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemEndIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.endIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemColors = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.colors\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemActiveIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.activeIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemAlpha = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.alpha\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemRoiAlpha =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.roiAlpha\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemRoiFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      if (item.roiItem) {\n        return item.roiItem.filePath\n      } else {\n        return null\n      }\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemDuration =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.duration\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemOffset =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.offset\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemSpan =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.span\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowTickLabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemZeroLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.zeroline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemXrange =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.xrange\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemDrawOrderList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.drawOrderList\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectTimeSeriesItemRefImageItemId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.refImageItemId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemRefRoiUniqueList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      if (item.refImageItemId != null) {\n        const imageItem = selectVisualizeItems(state)[item.refImageItemId]\n        if (isImageItem(imageItem) && imageItem.roiItem?.filePath != null) {\n          return selectRoiUniqueList(imageItem.roiItem.filePath)(state)\n        }\n      }\n      return null\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemKeys =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const path = selectTimeSeriesItemFilePath(itemId)(state)\n      if (path != null && selectTimeSeriesDataIsInitialized(path)(state)) {\n        const dataKeys = Object.keys(selectTimeSeriesData(path)(state))\n        const roiUniqueList =\n          selectTimeSeriesItemRefRoiUniqueList(itemId)(state)\n        if (roiUniqueList != null) {\n          return dataKeys.filter((key) => roiUniqueList.includes(key))\n        } else {\n          return dataKeys\n        }\n      } else {\n        return []\n      }\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectRoiItemIndex =\n  (itemId: number, roiFilePath: string | null) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const maxIdx = item.maxIndex\n      if (maxIdx !== 0) {\n        return maxIdx\n      }\n    }\n\n    if (roiFilePath !== null) {\n      return selectRoiItemMaxNumber(roiFilePath)(state)\n    } else {\n      return 0\n    }\n  }\n\nexport const selectRoiItemMaxNumber =\n  (roiFilePath: string) => (state: RootState) => {\n    const roiData = selectRoiData(roiFilePath)(state)\n    if (roiData.length !== 0) {\n      return Math.max(...roiData.map((arr) => Math.max(...arr)))\n    } else {\n      return 0\n    }\n  }\n\nexport const selectHeatMapItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectHeatMapItemColors =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.colors\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemTranspose =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.transpose\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetHeader =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.setHeader\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isCsvItem(item)) {\n    return item.setIndex\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectBarItemIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isBarItem(item)) {\n    return item.index\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectScatterItemXIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.xIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectScatterItemYIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.yIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectDisplayDataIsSingle =\n  (itemId: number) => (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    const item = items[itemId]\n    const targetFilePath = item.filePath\n    return (\n      Object.values(items).filter((value) => value.filePath === targetFilePath)\n        .length === 1\n    )\n  }\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type TimeSeriesData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getTimeSeriesInitDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/inittimedata/${path}`)\n  return response.data\n}\n\nexport async function getTimeSeriesDataByIdApi(\n  path: string,\n  index: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/timedata/${path}`, {\n    params: {\n      index: index,\n    },\n  })\n  return response.data\n}\n\nexport async function getTimeSeriesAllDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/alltimedata/${path}`)\n  return response.data\n}\n\nexport type HeatMapData = number[][]\n\nexport async function getHeatMapDataApi(\n  path: string,\n): Promise<{ data: HeatMapData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`)\n  return response.data\n}\n\nexport type ImageData = number[][][]\n\nexport async function getImageDataApi(\n  path: string,\n  params: {\n    startIndex?: number\n    endIndex?: number\n  },\n): Promise<{ data: ImageData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n    params: {\n      start_index: params.startIndex,\n      end_index: params.endIndex,\n    },\n  })\n  return response.data\n}\n\nexport type CsvData = number[][]\n\nexport async function getCsvDataApi(path: string): Promise<{ data: CsvData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/csv/${path}`)\n  return response.data\n}\n\nexport type RoiData = number[][][]\n\nexport async function getRoiDataApi(path: string): Promise<{ data: RoiData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {})\n  return response.data\n}\n\nexport type ScatterData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getScatterDataApi(\n  path: string,\n): Promise<{ data: ScatterData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type BarData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getBarDataApi(\n  path: string,\n): Promise<{ data: BarData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type HTMLData = string\n\nexport async function getHTMLDataApi(\n  path: string,\n): Promise<{ data: HTMLData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/html/${path}`, {})\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  TimeSeriesData,\n  CsvData,\n  RoiData,\n  ScatterData,\n  BarData,\n  HTMLData,\n  ImageData,\n  HeatMapData,\n  getTimeSeriesInitDataApi,\n  getTimeSeriesDataByIdApi,\n  getTimeSeriesAllDataApi,\n  getHeatMapDataApi,\n  getImageDataApi,\n  getCsvDataApi,\n  getRoiDataApi,\n  getScatterDataApi,\n  getBarDataApi,\n  getHTMLDataApi,\n} from 'api/outputs/Outputs'\nimport { DISPLAY_DATA_SLICE_NAME } from './DisplayDataType'\n\nexport const getTimeSeriesInitData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; itemId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesInitData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesInitDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesDataById = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; index: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesDataById`,\n  async ({ path, index }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesDataByIdApi(path, index)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesAllData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesAllData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesAllDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHeatMapData = createAsyncThunk<\n  { data: HeatMapData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHeatMapData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHeatMapDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getImageData = createAsyncThunk<\n  { data: ImageData },\n  { path: string; startIndex?: number; endIndex?: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getImageData`,\n  async ({ path, startIndex, endIndex }, thunkAPI) => {\n    try {\n      const response = await getImageDataApi(path, { startIndex, endIndex })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getCsvData = createAsyncThunk<\n  {\n    data: CsvData\n  },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getCsvData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getCsvDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getRoiData = createAsyncThunk<{ data: RoiData }, { path: string }>(\n  `${DISPLAY_DATA_SLICE_NAME}/getRoiData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getRoiDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getScatterData = createAsyncThunk<\n  { data: ScatterData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getScatterData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getScatterDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getBarData = createAsyncThunk<\n  { data: BarData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getBarData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getBarDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getHTMLData = createAsyncThunk<\n  { data: HTMLData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHTMLData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHTMLDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { ThunkApiConfig } from 'store/store'\nimport { getTimeSeriesDataById } from '../DisplayData/DisplayDataActions'\nimport { selectRoiData } from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport { selectVisualizeItems } from './VisualizeItemSelectors'\nimport { VISUALIZE_ITEM_SLICE_NAME } from './VisualizeItemType'\nimport { isImageItem, isTimeSeriesItem } from './VisualizeItemUtils'\n\nexport const setImageItemClikedDataId = createAsyncThunk<\n  void,\n  { itemId: number; clickedDataId: string },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setImageItemClikedDataId`,\n  ({ itemId, clickedDataId }, thunkAPI) => {\n    const items = selectVisualizeItems(thunkAPI.getState())\n    Object.values(items).forEach((item) => {\n      if (\n        isTimeSeriesItem(item) &&\n        item.filePath != null &&\n        item.refImageItemId === itemId &&\n        !item.drawOrderList.includes(clickedDataId)\n      ) {\n        thunkAPI.dispatch(\n          getTimeSeriesDataById({ path: item.filePath, index: clickedDataId }),\n        )\n      }\n    })\n  },\n)\n\nexport const selectingImageArea = createAsyncThunk<\n  string[],\n  {\n    itemId: number\n    range: {\n      x: number[]\n      y: number[]\n    }\n  },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/selectingImageArea`,\n  ({ itemId, range }, thunkAPI) => {\n    const { x, y } = range\n    const [x1, x2] = x.map(Math.round)\n    const [y1, y2] = y.map(Math.round)\n    const selectedZList: string[] = []\n    const items = selectVisualizeItems(thunkAPI.getState())\n    const imageItem = items[itemId]\n    if (isImageItem(imageItem) && imageItem.roiItem != null) {\n      const roiFilePath = imageItem.roiItem.filePath\n      if (roiFilePath != null) {\n        const roiData = selectRoiData(roiFilePath)(thunkAPI.getState())\n        for (let x = x1; x <= x2; x++) {\n          for (let y = y1; y <= y2; y++) {\n            const z = roiData[y][x]\n            if (z != null) {\n              const zNum = String(z) // indexとidのずれを回避\n              if (!selectedZList.includes(zNum)) {\n                selectedZList.push(zNum)\n              }\n            }\n          }\n        }\n        Object.values(items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            const path = item.filePath\n            selectedZList.forEach((selectedZ) => {\n              thunkAPI.dispatch(\n                getTimeSeriesDataById({\n                  path,\n                  index: String(selectedZ),\n                }),\n              )\n            })\n          }\n        })\n      }\n    }\n    return selectedZList\n  },\n)\n\ntype DeleteOption =\n  | {\n      deleteData: true\n      dataType: DATA_TYPE\n      filePath: string\n    }\n  | { deleteData: false }\n\ntype DeleteDisplayItemArgs = {\n  itemId: number\n} & DeleteOption\n\nexport const deleteDisplayItem = createAction<DeleteDisplayItemArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/deleteDisplayItem`,\n)\n\ntype SetNewDisplayDataPathArgs = {\n  itemId: number\n  filePath: string\n  nodeId: string | null\n  dataType?: DATA_TYPE\n} & (\n  | {\n      deleteData: true\n      prevFilePath: string\n      prevDataType: DATA_TYPE\n    }\n  | { deleteData: false }\n)\n\nexport const setNewDisplayDataPath = createAction<SetNewDisplayDataPathArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setNewDisplayDataPath`,\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  deleteDisplayItem,\n  selectingImageArea,\n  setImageItemClikedDataId,\n  setNewDisplayDataPath,\n} from './VisualizeItemActions'\n\nimport {\n  HeatMapItem,\n  ImageItem,\n  CsvItem,\n  TimeSeriesItem,\n  RoiItem,\n  ScatterItem,\n  VisualaizeItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  BarItem,\n  HDF5Item,\n  HTMLItem,\n  FluoItem,\n  BehaviorItem,\n  VISUALIZE_ITEM_SLICE_NAME,\n} from './VisualizeItemType'\nimport {\n  isDisplayDataItem,\n  isHeatMapItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const initialState: VisualaizeItem = {\n  items: {},\n  selectedItemId: null,\n  layout: [],\n}\nconst displayDataCommonInitialValue = {\n  itemType: VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA,\n  filePath: null,\n  nodeId: null,\n  width: 500,\n  height: 500,\n  isWorkflowDialog: false,\n  saveFileName: 'newPlot',\n  saveFormat: 'png',\n}\nconst imageItemInitialValue: ImageItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.IMAGE,\n  startIndex: 1,\n  endIndex: 10,\n  showticklabels: false,\n  showline: true,\n  zsmooth: 'best',\n  showgrid: false,\n  showscale: false,\n  colors: [\n    { rgb: `rgb(0, 0, 0)`, offset: '0' },\n    { rgb: `rgb(255, 255, 255)`, offset: '1.0' },\n  ],\n  activeIndex: 0,\n  alpha: 1.0,\n  roiItem: null,\n  roiAlpha: 1.0,\n  duration: 500,\n}\nconst timeSeriesItemInitialValue: TimeSeriesItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.TIME_SERIES,\n  offset: true,\n  span: 5,\n  showgrid: true,\n  showline: true,\n  showticklabels: true,\n  zeroline: false,\n  xrange: {\n    left: undefined,\n    right: undefined,\n  },\n  maxIndex: 0,\n  drawOrderList: [],\n  refImageItemId: null,\n}\nconst heatMapItemInitialValue: HeatMapItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HEAT_MAP,\n  showscale: true,\n  colors: [\n    { rgb: `rgb(0, 0, 255)`, offset: '0' },\n    { rgb: `rgb(200, 200, 200)`, offset: '0.5' },\n    { rgb: `rgb(255, 0, 0)`, offset: '1.0' },\n  ],\n}\nconst csvItemInitialValue: CsvItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.CSV,\n  setHeader: null,\n  setIndex: false,\n  transpose: false,\n}\nconst roiItemInitialValue: RoiItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.ROI,\n}\nconst scatterItemInitialValue: ScatterItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.SCATTER,\n  xIndex: '0',\n  yIndex: '1',\n}\nconst barItemInitialValue: BarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BAR,\n  index: '0',\n}\nconst hdf5ItemInitialValue: HDF5Item = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HDF5,\n}\nconst htmlItemInitialValue: HTMLItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HTML,\n}\nconst fluoItemInitialValue: FluoItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.FLUO,\n}\nconst behaviorItemInitialValue: BehaviorItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BEHAVIOR,\n}\n\nfunction getDisplayDataItemInitialValue(dataType: DATA_TYPE) {\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return imageItemInitialValue\n    case DATA_TYPE_SET.HEAT_MAP:\n      return heatMapItemInitialValue\n    case DATA_TYPE_SET.TIME_SERIES:\n      return timeSeriesItemInitialValue\n    case DATA_TYPE_SET.CSV:\n      return csvItemInitialValue\n    case DATA_TYPE_SET.ROI:\n      return roiItemInitialValue\n    case DATA_TYPE_SET.SCATTER:\n      return scatterItemInitialValue\n    case DATA_TYPE_SET.BAR:\n      return barItemInitialValue\n    case DATA_TYPE_SET.HDF5:\n      return hdf5ItemInitialValue\n    case DATA_TYPE_SET.HTML:\n      return htmlItemInitialValue\n    case DATA_TYPE_SET.FLUO:\n      return fluoItemInitialValue\n    case DATA_TYPE_SET.BEHAVIOR:\n      return behaviorItemInitialValue\n  }\n}\n\nexport const visualaizeItemSlice = createSlice({\n  name: VISUALIZE_ITEM_SLICE_NAME,\n  initialState,\n  reducers: {\n    pushInitialItemToNewRow: (state) => {\n      const newItemId = addInitialItemFn(state)\n      state.layout.push([newItemId])\n    },\n    insertInitialItemToNextColumn: (state, action: PayloadAction<number>) => {\n      const newItemId = addInitialItemFn(state)\n      const targetItemId = action.payload\n      const targetRowIndex = state.layout.findIndex((row) =>\n        row.includes(targetItemId),\n      )\n      const targetColumnIndex =\n        state.layout[targetRowIndex].indexOf(targetItemId)\n      state.layout[targetRowIndex].splice(targetColumnIndex + 1, 0, newItemId)\n    },\n    addItemForWorkflowDialog: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        filePath: string\n        dataType: DATA_TYPE\n      }>,\n    ) => {\n      const { nodeId, filePath, dataType } = action.payload\n      const maxId = getMaxItemId(state)\n      const newItemId = maxId != null ? maxId + 1 : 0\n      state.items[newItemId] = {\n        ...getDisplayDataItemInitialValue(dataType),\n        isWorkflowDialog: true,\n        nodeId,\n        filePath,\n      }\n    },\n    deleteAllItemForWorkflowDialog: (state) => {\n      const targetItemIdList = Object.entries(state.items)\n        .filter(([itemId, value]) => value.isWorkflowDialog)\n        .map(([itemId, value]) => Number(itemId))\n      targetItemIdList.forEach(\n        (targetItemId) => delete state.items[targetItemId],\n      )\n    },\n    setItemSize: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        width: number\n        height: number\n      }>,\n    ) => {\n      const { itemId, width, height } = action.payload\n      const targetItem = state.items[itemId]\n      targetItem.width = width\n      targetItem.height = height\n    },\n    selectItem: (state, action: PayloadAction<number>) => {\n      state.selectedItemId = action.payload\n    },\n    setRoiItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        Object.values(state.items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            item.drawOrderList = []\n          }\n        })\n\n        if (targetItem.roiItem != null) {\n          targetItem.roiItem.filePath = filePath\n          targetItem.roiItem.nodeId = nodeId\n        } else {\n          targetItem.roiItem = {\n            ...roiItemInitialValue,\n            filePath,\n            nodeId,\n          }\n        }\n      }\n    },\n    setFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isDisplayDataItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      } else {\n        throw new Error('error')\n      }\n    },\n    setSaveFormat: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFormat: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFormat = action.payload.saveFormat\n    },\n    setSaveFileName: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFileName: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFileName = action.payload.saveFileName\n    },\n    setImageItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setTimeSeriesItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setHeatMapItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    resetImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex?: number\n        endIndex?: number\n      }>,\n    ) => {\n      resetImageActiveIndexFn(state, action.payload)\n    },\n    incrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex++\n      }\n    },\n    decrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex--\n      }\n    },\n    setImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        activeIndex: number\n      }>,\n    ) => {\n      const { itemId, activeIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex = activeIndex\n      }\n    },\n    setImageItemShowticklabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setImageItemZsmooth: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zsmooth: string | boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.zsmooth = action.payload.zsmooth\n      }\n    },\n    setImageItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setImageItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setImageItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setImageItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setImageItemStartIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.startIndex = action.payload.startIndex\n      }\n    },\n    setImageItemEndIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        endIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.endIndex = action.payload.endIndex\n      }\n    },\n    setImageItemAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        alpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.alpha = action.payload.alpha\n      }\n    },\n    setImageItemRoiAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        roiAlpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.roiAlpha = action.payload.roiAlpha\n      }\n    },\n    setImageItemDuration: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        duration: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.duration = action.payload.duration\n      }\n    },\n    setTimeSeriesItemOffset: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        offset: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.offset = action.payload.offset\n      }\n    },\n    setTimeSeriesItemSpan: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        span: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.span = action.payload.span\n      }\n    },\n    setTimeSeriesItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setTimeSeriesItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setTimeSeriesItemShowTickLabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setTimeSeriesItemZeroLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zeroline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.zeroline = action.payload.zeroline\n      }\n    },\n    setTimeSeriesItemXrangeLeft: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        left: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.left = action.payload.left\n      }\n    },\n    setTimeSeriesItemXrangeRight: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        right: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.right = action.payload.right\n      }\n    },\n    setTimeSeriesItemDrawOrderList: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        drawOrderList: string[]\n      }>,\n    ) => {\n      const { itemId, drawOrderList } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.drawOrderList = drawOrderList\n      }\n    },\n    setTimeSeriesItemMaxIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        maxIndex: number\n      }>,\n    ) => {\n      const { itemId, maxIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.maxIndex = maxIndex\n      }\n    },\n    setTimeSeriesRefImageItemId: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        refImageItemId: number | null\n      }>,\n    ) => {\n      const { itemId, refImageItemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.refImageItemId = refImageItemId ?? null\n        targetItem.drawOrderList = []\n      }\n    },\n    setHeatMapItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setHeatMapItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setCsvItemTranspose: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        transpose: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.transpose = action.payload.transpose\n      }\n    },\n    setCsvItemSetHeader: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setHeader: number | null\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setHeader = action.payload.setHeader\n      }\n    },\n    setCsvItemSetIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setIndex: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setIndex = action.payload.setIndex\n      }\n    },\n    setScatterItemXIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        xIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.xIndex = action.payload.xIndex\n      }\n    },\n    setScatterItemYIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        yIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.yIndex = action.payload.yIndex\n      }\n    },\n    setBarItemIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        index: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isBarItem(targetItem)) {\n        targetItem.index = action.payload.index\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        const itemId = action.payload.itemId\n\n        if (isImageItem(state.items[itemId])) {\n          Object.values(state.items).forEach((item) => {\n            if (isTimeSeriesItem(item) && item.refImageItemId === itemId) {\n              item.refImageItemId = null\n            }\n          })\n        }\n\n        delete state.items[itemId]\n        if (itemId === state.selectedItemId) {\n          state.selectedItemId = null\n        }\n        state.layout.forEach((row, i) => {\n          const index = row.indexOf(itemId)\n          if (index !== -1) {\n            row.splice(index, 1)\n          }\n          if (row.length === 0) {\n            state.layout.splice(i, 1)\n          }\n        })\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        const { itemId, filePath, nodeId, dataType } = action.payload\n        const targetItem = state.items[itemId]\n        if (isDisplayDataItem(targetItem)) {\n          if (dataType != null) {\n            state.items[itemId] = {\n              ...getDisplayDataItemInitialValue(dataType),\n              width: targetItem.width,\n              height: targetItem.height,\n              filePath,\n              nodeId,\n            }\n          } else {\n            targetItem.filePath = filePath\n            targetItem.nodeId = nodeId\n          }\n        } else {\n          throw new Error('invalid VisualaizeItemType')\n        }\n        resetImageActiveIndexFn(state, { itemId })\n      })\n      .addCase(setImageItemClikedDataId.fulfilled, (state, action) => {\n        const { itemId: imageItemId, clickedDataId } = action.meta.arg\n        const targetItem = state.items[imageItemId]\n        if (isImageItem(targetItem)) {\n          targetItem.clickedDataId = clickedDataId\n        }\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId &&\n              !item.drawOrderList.includes(clickedDataId)\n            ) {\n              item.drawOrderList.push(clickedDataId)\n            }\n          }\n        })\n      })\n      .addCase(selectingImageArea.fulfilled, (state, action) => {\n        const { itemId: imageItemId } = action.meta.arg\n        const selectedZList = action.payload\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId\n            ) {\n              item.drawOrderList = selectedZList\n            }\n          }\n        })\n      })\n  },\n})\n\nfunction getMaxItemId(state: VisualaizeItem) {\n  const idList = Object.keys(state.items).map((key) => Number(key))\n  const maxId =\n    idList.length > 0 ? idList.reduce((a, b) => Math.max(a, b)) : null\n  return maxId\n}\n\nfunction addInitialItemFn(state: VisualaizeItem) {\n  const maxId = getMaxItemId(state)\n  const nextId = maxId != null ? maxId + 1 : 0\n  state.items[nextId] = getDisplayDataItemInitialValue(DATA_TYPE_SET.IMAGE)\n  state.selectedItemId = nextId\n  return nextId\n}\n\nfunction resetImageActiveIndexFn(\n  state: VisualaizeItem,\n  args: {\n    itemId: number\n  },\n) {\n  const { itemId } = args\n  const targetItem = state.items[itemId]\n  if (isImageItem(targetItem)) {\n    targetItem.activeIndex = 0\n  }\n}\n\nexport const {\n  pushInitialItemToNewRow,\n  insertInitialItemToNextColumn,\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n  setItemSize,\n  selectItem,\n  setFilePath,\n  setSaveFormat,\n  setSaveFileName,\n  setHeatMapItemFilePath,\n  setImageItemFilePath,\n  setTimeSeriesItemFilePath,\n  setRoiItemFilePath,\n  resetImageActiveIndex,\n  incrementImageActiveIndex,\n  decrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowLine,\n  setImageItemShowGrid,\n  setImageItemShowScale,\n  setImageItemColors,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemAlpha,\n  setImageItemRoiAlpha,\n  setImageItemDuration,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemDrawOrderList,\n  setTimeSeriesItemMaxIndex,\n  setTimeSeriesRefImageItemId,\n  setHeatMapItemShowScale,\n  setHeatMapItemColors,\n  setCsvItemTranspose,\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n  setBarItemIndex,\n} = visualaizeItemSlice.actions\n\nexport default visualaizeItemSlice.reducer\n","import React from 'react'\nimport { DATA_TYPE } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const DisplayDataContext = React.createContext<{\n  nodeId: string | null\n  filePath: string\n  dataType: DATA_TYPE\n  itemId: number\n}>({ nodeId: '', filePath: '', dataType: 'csv', itemId: NaN })\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectHeatMapColumns,\n  selectHeatMapData,\n  selectHeatMapDataError,\n  selectHeatMapDataIsFulfilled,\n  selectHeatMapDataIsInitialized,\n  selectHeatMapDataIsPending,\n  selectHeatMapIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHeatMapData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const HeatMapPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHeatMapDataIsPending(path))\n  const isInitialized = useSelector(selectHeatMapDataIsInitialized(path))\n  const error = useSelector(selectHeatMapDataError(path))\n  const isFulfilled = useSelector(selectHeatMapDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHeatMapData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HeatMapImple />\n  } else {\n    return null\n  }\n})\n\nconst HeatMapImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const heatMapData = useSelector(selectHeatMapData(path), heatMapDataEqualtyFn)\n  const columns = useSelector(selectHeatMapColumns(path))\n  const index = useSelector(selectHeatMapIndex(path))\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const colorscale = useSelector(selectHeatMapItemColors(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      heatMapData != null\n        ? [\n            {\n              z: heatMapData,\n              x: columns,\n              y: index,\n              type: 'heatmap',\n              name: 'heatmap',\n              colorscale: colorscale.map((value) => {\n                let offset: number = parseFloat(value.offset)\n                const offsets: number[] = colorscale.map((v) => {\n                  return parseFloat(v.offset)\n                })\n                // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n                if (offset === Math.max(...offsets)) {\n                  offset = 1.0\n                }\n                if (offset === Math.min(...offsets)) {\n                  offset = 0.0\n                }\n                return [offset, value.rgb]\n              }),\n              hoverongaps: false,\n              showlegend: true,\n              showscale: showscale,\n            },\n          ]\n        : [],\n    [heatMapData, showscale, colorscale, columns, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction heatMapDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, { useCallback, useEffect } from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from 'store/store'\nimport { Datum, LayoutAxis, PlotData, PlotSelectionEvent } from 'plotly.js'\nimport createColormap from 'colormap'\nimport { Button, LinearProgress, TextField, Typography } from '@mui/material'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport Slider from '@mui/material/Slider'\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport { DisplayDataContext } from '../DataContext'\n\nimport {\n  selectImageDataError,\n  selectImageDataIsInitialized,\n  selectImageDataIsPending,\n  selectImageDataIsFulfilled,\n  selectActiveImageData,\n  selectRoiData,\n  selectImageDataMaxSize,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getImageData,\n  getRoiData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowLine,\n  selectImageItemShowGrid,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemActiveIndex,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectRoiItemFilePath,\n  selectRoiItemIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemDuration,\n  selectVisualizeItemWidth,\n  selectVisualizeItemHeight,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  incrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemDuration,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  selectingImageArea,\n  setImageItemClikedDataId,\n} from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const ImagePlot = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const isPending = useSelector(selectImageDataIsPending(path))\n  const isInitialized = useSelector(selectImageDataIsInitialized(path))\n  const isFulfilled = useSelector(selectImageDataIsFulfilled(path))\n  const error = useSelector(selectImageDataError(path))\n\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(\n        getImageData({\n          path,\n          startIndex: startIndex ?? 1,\n          endIndex: endIndex ?? 10,\n        }),\n      )\n    }\n    if (roiFilePath != null) {\n      dispatch(getRoiData({ path: roiFilePath }))\n    }\n  }, [dispatch, isInitialized, path, startIndex, endIndex, roiFilePath])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ImagePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ImagePlotImple = React.memo(() => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const activeIndex = useSelector(selectImageItemActiveIndex(itemId))\n  return <ImagePlotChart activeIndex={activeIndex} />\n})\n\nconst ImagePlotChart = React.memo<{\n  activeIndex: number\n}>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(\n    selectActiveImageData(path, activeIndex),\n    imageDataEqualtyFn,\n  )\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const roiData = useSelector(\n    (state: RootState) =>\n      roiFilePath != null ? selectRoiData(roiFilePath)(state) : [],\n    imageDataEqualtyFn,\n  )\n\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const colorscale = useSelector(selectImageItemColors(itemId))\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const timeDataMaxIndex = useSelector(selectRoiItemIndex(itemId, roiFilePath))\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscaleRoi = createColormap({\n    colormap: 'jet',\n    nshades: 100, //timeDataMaxIndex >= 6 ? timeDataMaxIndex : 6,\n    format: 'rgba',\n    alpha: 1.0,\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'images',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          const rgb = value.rgb\n            .replace(/[^0-9,]/g, '')\n            .split(',')\n            .map((x) => Number(x))\n          const hex = rgba2hex(rgb, alpha)\n          return [offset, hex]\n        }),\n        hoverongaps: false,\n        showscale: showscale,\n        zsmooth: zsmooth, // ['best', 'fast', false]\n        // showlegend: true,\n      },\n      {\n        z: roiData,\n        type: 'heatmap',\n        name: 'roi',\n        hovertemplate: 'cell id: %{z}',\n        colorscale: [...Array(timeDataMaxIndex)].map((_, i) => {\n          const new_i = Math.floor(((i % 10) * 10 + i / 10) % 100)\n          const offset = i / (timeDataMaxIndex - 1)\n          const rgba = colorscaleRoi[new_i]\n          const hex = rgba2hex(rgba, roiAlpha)\n          return [offset, hex]\n        }),\n        zmin: 1,\n        zmax: timeDataMaxIndex,\n        hoverongaps: false,\n        zsmooth: false,\n        showscale: false,\n      },\n    ],\n    [\n      imageData,\n      roiData,\n      zsmooth,\n      showscale,\n      colorscale,\n      colorscaleRoi,\n      timeDataMaxIndex,\n      roiAlpha,\n      alpha,\n    ],\n  )\n\n  const [selectMode, setSelectMode] = React.useState(false)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectMode(event.target.checked)\n  }\n  // debounceでイベントを間引きする。onSelectedはそれっぽい名前だが動かなかった。\n  const onSelecting = debounce((event: PlotSelectionEvent) => {\n    if (event.range != null) {\n      dispatch(selectingImageArea({ itemId, range: event.range }))\n    }\n  })\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 130,\n      margin: {\n        t: 30, // top\n        l: 100, // left\n        b: 20, // bottom\n      },\n      dragmode: selectMode ? 'select' : 'pan',\n      xaxis: {\n        autorange: true,\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n        showticklabels: showticklabels,\n      },\n      yaxis: {\n        automargin: true,\n        autorange: 'reversed',\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n        showticklabels: showticklabels, // todo\n      },\n    }),\n    [showgrid, showline, showticklabels, width, height, selectMode],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n      // scale: number;\n      // format: 'png' | 'svg' | 'jpeg' | 'webp';\n      // height: number;\n      // width: number;\n    },\n  }\n\n  const onClick = (event: any) => {\n    const points: PlotDatum = event.points[0]\n    if (points.curveNumber >= 1) {\n      dispatch(\n        setImageItemClikedDataId({\n          itemId,\n          clickedDataId: points.z.toString(),\n        }),\n      )\n    }\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <PlayBack activeIndex={activeIndex} />\n        </Box>\n        <FormControlLabel\n          sx={{ m: 1 }}\n          control={<Switch checked={selectMode} onChange={handleChange} />}\n          label=\"drag select\"\n        />\n      </Box>\n      <PlotlyChart\n        data={data}\n        layout={layout}\n        config={config}\n        onClick={onClick}\n        onSelecting={onSelecting}\n      />\n    </div>\n  )\n})\n\nconst PlayBack = React.memo<{ activeIndex: number }>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const maxSize = useSelector(selectImageDataMaxSize(path))\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const duration = useSelector(selectImageItemDuration(itemId))\n\n  const onSliderChange = (\n    event: Event,\n    value: number | number[],\n    activeThumb: number,\n  ) => {\n    if (typeof value === 'number') {\n      const newIndex = value - startIndex\n      if (newIndex >= 0 && newIndex !== activeIndex) {\n        dispatch(setImageActiveIndex({ itemId, activeIndex: newIndex }))\n      }\n    }\n  }\n\n  const intervalRef = React.useRef<null | NodeJS.Timeout>(null)\n\n  useEffect(() => {\n    if (intervalRef.current !== null) {\n      if (activeIndex >= maxSize) {\n        clearInterval(intervalRef.current)\n        intervalRef.current = null\n      }\n    }\n  }, [activeIndex, maxSize])\n\n  const onPlayClick = useCallback(() => {\n    if (activeIndex >= maxSize) {\n      dispatch(setImageActiveIndex({ itemId, activeIndex: 0 }))\n    }\n    if (maxSize > 1 && intervalRef.current === null) {\n      intervalRef.current = setInterval(() => {\n        dispatch(incrementImageActiveIndex({ itemId }))\n      }, duration)\n    }\n  }, [activeIndex, maxSize, dispatch, duration, itemId])\n\n  const onPauseClick = () => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current)\n      intervalRef.current = null\n    }\n  }\n\n  const onDurationChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue =\n        event.target.value === '' ? '' : Number(event.target.value)\n      if (typeof newValue === 'number') {\n        dispatch(setImageItemDuration({ itemId, duration: newValue }))\n      }\n    },\n    [dispatch, itemId],\n  )\n  return (\n    <>\n      <Button variant=\"outlined\" onClick={onPlayClick}>\n        Play\n      </Button>\n      <Button variant=\"outlined\" onClick={onPauseClick}>\n        Pause\n      </Button>\n      <TextField\n        label=\"dur[msec]\"\n        type=\"number\"\n        inputProps={{\n          step: 100,\n          min: 0,\n          max: 1000,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onDurationChange}\n        value={duration}\n      />\n      <Slider\n        aria-label=\"Custom marks\"\n        defaultValue={20}\n        value={startIndex + activeIndex}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        marks\n        min={startIndex}\n        max={maxSize === 0 ? 0 : endIndex}\n        onChange={onSliderChange}\n      />\n    </>\n  )\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\ninterface PlotDatum {\n  curveNumber: number\n  data: PlotData\n  customdata: Datum\n  pointIndex: number\n  pointNumber: number\n  x: Datum\n  xaxis: LayoutAxis\n  y: Datum\n  yaxis: LayoutAxis\n  z: number\n}\n\nfunction rgba2hex(rgba: number[], alpha: number) {\n  const r = rgba[0]\n  const g = rgba[1]\n  const b = rgba[2]\n  const a = alpha\n\n  var outParts = [\n    r.toString(16),\n    g.toString(16),\n    b.toString(16),\n    Math.round(a * 255)\n      .toString(16)\n      .substring(0, 2),\n  ]\n\n  // Pad single-digit output values\n  outParts.forEach(function (part, i) {\n    if (part.length === 1) {\n      outParts[i] = '0' + part\n    }\n  })\n\n  return `#${outParts.join('')}`\n}\n\nfunction debounce<T extends (...args: any[]) => unknown>(\n  callback: T,\n  delay = 500,\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout\n  return (...args) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => callback(...args), delay)\n  }\n}\n","import React from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectRoiData,\n  selectRoiDataError,\n  selectRoiDataIsFulfilled,\n  selectRoiDataIsInitialized,\n  selectRoiDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { getRoiData } from 'store/slice/DisplayData/DisplayDataActions'\nimport createColormap from 'colormap'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const RoiPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isPending = useSelector(selectRoiDataIsPending(path))\n  const isInitialized = useSelector(selectRoiDataIsInitialized(path))\n  const isFulfilled = useSelector(selectRoiDataIsFulfilled(path))\n  const error = useSelector(selectRoiDataError(path))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getRoiData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <RoiPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst RoiPlotImple = React.memo<{}>(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(selectRoiData(path), imageDataEqualtyFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscale: ColorType[] = createColormap({\n    colormap: 'jet',\n    nshades: 10,\n    format: 'hex',\n    alpha: 1,\n  }).map((v, idx) => {\n    return { rgb: v, offset: String(idx / 9) }\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'roi',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          return [offset, value.rgb]\n        }),\n        hoverongaps: false,\n        // zsmooth: zsmooth, // ['best', 'fast', false]\n        zsmooth: false,\n        showlegend: true,\n      },\n    ],\n    [imageData, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      xaxis: {\n        autorange: true,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n      },\n      yaxis: {\n        autorange: 'reversed',\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n      },\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectScatterData,\n  selectScatterDataError,\n  selectScatterDataIsFulfilled,\n  selectScatterDataIsInitialized,\n  selectScatterDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getScatterData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { ScatterData } from 'api/outputs/Outputs'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const ScatterPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectScatterDataIsPending(path))\n  const isInitialized = useSelector(selectScatterDataIsInitialized(path))\n  const error = useSelector(selectScatterDataError(path))\n  const isFulfilled = useSelector(selectScatterDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getScatterData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ScatterPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ScatterPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const scatterData = useSelector(\n    selectScatterData(path),\n    scatterDataEqualityFn,\n  )\n\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: scatterData[xIndex],\n        y: scatterData[yIndex],\n        type: 'scatter',\n        mode: 'markers', //'markers+text',\n        text: Object.keys(scatterData[xIndex]),\n        textposition: 'top center',\n        textfont: {\n          family: 'Raleway, sans-serif',\n        },\n        marker: {\n          size: 5,\n          color: Object.keys(scatterData[xIndex]),\n        },\n      },\n    ],\n    [scatterData, xIndex, yIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      xaxis: {\n        title: {\n          text: `x: ${xIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: `y: ${yIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n    }),\n    [xIndex, yIndex, width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <XIndex dataKeys={Object.keys(scatterData)} />\n          <YIndex dataKeys={Object.keys(scatterData)} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst XIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemXIndex({\n        itemId,\n        xIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>xIndex</InputLabel>\n      <Select label=\"smooth\" value={xIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst YIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemYIndex({\n        itemId,\n        yIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>yIndex</InputLabel>\n      <Select label=\"smooth\" value={yIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction scatterDataEqualityFn(\n  a: ScatterData | undefined,\n  b: ScatterData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectCsvData,\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { CsvData } from 'api/outputs/Outputs'\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const CsvPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <CsvPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst CsvPlotImple = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  return (\n    <PresentationalCsvPlot\n      path={path}\n      transpose={transpose}\n      setHeader={setHeader}\n      setIndex={setIndex}\n    />\n  )\n})\n\n/**\n * CsvFileNodeの設定時に表示するプレビューでも使用することを想定\n *\n * DisplayDataContextに依存しない\n */\nexport const PresentationalCsvPlot = React.memo<{\n  path: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ path, transpose, setIndex, setHeader }) => {\n  const data = useSelector(\n    selectCsvData(path),\n    (a: CsvData | undefined, b: CsvData | undefined) => {\n      if (a != null && b != null) {\n        return twoDimarrayEqualityFn(a, b)\n      } else {\n        return a === undefined && b === undefined\n      }\n    },\n  )\n\n  const csvData = React.useMemo(() => {\n    if (transpose) {\n      return data[0].map((col, i) => data.map((row) => row[i]))\n    }\n    return data\n  }, [data, transpose])\n\n  const header: GridColDef[] = React.useMemo(() => {\n    const headerData = () => {\n      if (setHeader === null) {\n        return csvData[0]\n      } else {\n        if (setHeader >= csvData.length) {\n          return csvData[csvData.length - 1]\n        } else {\n          return csvData[setHeader]\n        }\n      }\n    }\n\n    if (setIndex) {\n      return [\n        { field: 'col0', headerName: 'index', width: 150 },\n        ...headerData().map((value, idx) => {\n          return {\n            field: `col${idx + 1}`,\n            headerName: `${setHeader === null ? idx : value}`,\n            width: 150,\n          }\n        }),\n      ]\n    } else {\n      return headerData().map((value, idx) => {\n        return {\n          field: `col${idx + 1}`,\n          headerName: `${setHeader === null ? idx : value}`,\n          width: 150,\n        }\n      })\n    }\n  }, [csvData, setHeader, setIndex])\n  const rows = csvData\n    .map((row, row_id) => {\n      let rowObj = Object.fromEntries(\n        [row_id, ...row].map((value, index) => {\n          return [`col${index}`, value]\n        }),\n      )\n      rowObj['id'] = row_id\n      return rowObj\n    })\n    .filter(\n      (value, idx) =>\n        setHeader === null || (setHeader !== null && idx > setHeader),\n    )\n\n  return (\n    <div style={{ height: 300, width: '100%' }}>\n      <DataGrid rows={rows} columns={header} />\n    </div>\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LegendClickEvent } from 'plotly.js'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectTimeSeriesData,\n  selectTimeSeriesDataError,\n  selectTimeSeriesDataIsFulfilled,\n  selectTimeSeriesDataIsInitialized,\n  selectTimeSeriesDataIsPending,\n  selectTimeSeriesStd,\n  selectTimeSeriesXrange,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getTimeSeriesDataById,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { TimeSeriesData } from 'api/outputs/Outputs'\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectTimeSeriesItemKeys,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport createColormap from 'colormap'\nimport { setTimeSeriesItemDrawOrderList } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const TimeSeriesPlot = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectTimeSeriesDataIsPending(path))\n  const isInitialized = useSelector(selectTimeSeriesDataIsInitialized(path))\n  const error = useSelector(selectTimeSeriesDataError(path))\n  const isFulfilled = useSelector(selectTimeSeriesDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getTimeSeriesInitData({ path, itemId }))\n    }\n  }, [dispatch, isInitialized, path, itemId])\n\n  if (!isInitialized) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isPending || isFulfilled) {\n    return <TimeSeriesPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst TimeSeriesPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  // 0番のデータとkeysだけをとってくる\n  const dispatch = useDispatch()\n  const timeSeriesData = useSelector(\n    selectTimeSeriesData(path),\n    timeSeriesDataEqualityFn,\n  )\n\n  const dataXrange = useSelector(selectTimeSeriesXrange(path))\n  const dataStd = useSelector(selectTimeSeriesStd(path))\n\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n  const drawOrderList = useSelector(selectTimeSeriesItemDrawOrderList(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const dataKeys = useSelector(selectTimeSeriesItemKeys(itemId))\n\n  const colorScale = createColormap({\n    colormap: 'jet',\n    nshades: 100, //maxIndex >= 6 ? maxIndex : 6,\n    format: 'hex',\n    alpha: 1,\n  })\n\n  const data = React.useMemo(() => {\n    return Object.fromEntries(\n      dataKeys.map((key) => {\n        let y = dataXrange.map((x) => timeSeriesData[key][x])\n        const i = Number(key) - 1\n        const new_i = Math.floor((i % 10) * 10 + i / 10) % 100\n        if (drawOrderList.includes(key) && offset) {\n          const activeIdx: number = drawOrderList.findIndex((v) => v === key)\n          const mean: number = y.reduce((a, b) => a + b) / y.length\n          const std: number =\n            span *\n            Math.sqrt(y.reduce((a, b) => a + Math.pow(b - mean, 2)) / y.length)\n          y = y.map((value) => (value - mean) / (std + 1e-10) + activeIdx)\n        }\n\n        return [\n          key,\n          {\n            name: key,\n            x: dataXrange,\n            y: y,\n            visible: drawOrderList.includes(key) ? true : 'legendonly',\n            line: { color: colorScale[new_i] },\n            error_y: {\n              type: 'data',\n              array:\n                !offset && Object.keys(dataStd).includes(key)\n                  ? Object.values(dataStd[key])\n                  : null,\n              visible: true,\n            },\n          },\n        ]\n      }),\n    )\n  }, [\n    timeSeriesData,\n    drawOrderList,\n    offset,\n    span,\n    colorScale,\n    dataStd,\n    dataXrange,\n    dataKeys,\n  ])\n\n  const annotations = React.useMemo(() => {\n    return drawOrderList.map((value) => {\n      return {\n        x: Number(dataXrange[dataXrange.length - 1]) + dataXrange.length / 10,\n        y: data[value].y[dataXrange.length - 1],\n        xref: 'x',\n        yref: 'y',\n        text: `cell: ${value}`,\n        arrowhead: 1,\n        ax: 0,\n        ay: -10,\n      }\n    })\n  }, [data, drawOrderList, dataXrange])\n\n  const layout = React.useMemo(\n    () => ({\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      width: width,\n      height: height - 50,\n      xaxis: {\n        range: [xrange.left, xrange.right],\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      yaxis: {\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      annotations: annotations,\n    }),\n    [\n      xrange,\n      showgrid,\n      showline,\n      showticklabels,\n      zeroline,\n      annotations,\n      width,\n      height,\n    ],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  const onLegendClick = (event: LegendClickEvent) => {\n    const clickNumber = dataKeys[event.curveNumber]\n\n    const newDrawOrderList = drawOrderList.includes(clickNumber)\n      ? drawOrderList.filter((value) => value !== clickNumber)\n      : [...drawOrderList, clickNumber]\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    // set DisplayNumbers\n    if (!drawOrderList.includes(clickNumber)) {\n      dispatch(getTimeSeriesDataById({ path, index: clickNumber }))\n    }\n\n    return false\n  }\n\n  return (\n    <PlotlyChart\n      data={Object.values(data)}\n      layout={layout}\n      config={config}\n      onLegendClick={onLegendClick}\n    />\n  )\n})\n\nfunction timeSeriesDataEqualityFn(\n  a: TimeSeriesData | undefined,\n  b: TimeSeriesData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.entries(a)\n    const bArray = Object.entries(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every(([aKey, aValue], i) => {\n          const [bKey, bValue] = bArray[i]\n          return bKey === aKey && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction nestEqualityFun(\n  a: {\n    [key: number]: number\n  },\n  b: {\n    [key: number]: number\n  },\n) {\n  const aArray = Object.entries(a)\n  const bArray = Object.entries(b)\n  return (\n    a === b ||\n    (aArray.length === bArray.length &&\n      aArray.every(([aKey, aValue], i) => {\n        const [bKey, bValue] = bArray[i]\n        return bKey === aKey && bValue === aValue\n      }))\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectBarData,\n  selectBarDataError,\n  selectBarDataIsFulfilled,\n  selectBarDataIsInitialized,\n  selectBarDataIsPending,\n  selectBarIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getBarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { BarData } from 'api/outputs/Outputs'\nimport {\n  selectBarItemIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setBarItemIndex } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const BarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectBarDataIsPending(path))\n  const isInitialized = useSelector(selectBarDataIsInitialized(path))\n  const error = useSelector(selectBarDataError(path))\n  const isFulfilled = useSelector(selectBarDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getBarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <BarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst BarPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const barData = useSelector(selectBarData(path), barDataEqualityFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const index = useSelector(selectBarItemIndex(itemId))\n  const dataKeys = useSelector(selectBarIndex(path))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: Object.keys(barData[index]),\n        y: Object.values(barData[index]),\n        type: 'bar',\n      },\n    ],\n    [barData, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <SelectIndex dataKeys={dataKeys} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst SelectIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const index = useSelector(selectBarItemIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setBarItemIndex({\n        itemId,\n        index: event.target.value,\n      }),\n    )\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>index</InputLabel>\n      <Select label=\"smooth\" value={`${index}`} onChange={handleChange}>\n        {dataKeys.map((v, i) => (\n          <MenuItem value={i}>{v}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction barDataEqualityFn(a: BarData | undefined, b: BarData | undefined) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHTMLData,\n  selectHTMLDataError,\n  selectHTMLDataIsFulfilled,\n  selectHTMLDataIsInitialized,\n  selectHTMLDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHTMLData } from 'store/slice/DisplayData/DisplayDataActions'\n\nexport const HTMLPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHTMLDataIsPending(path))\n  const isInitialized = useSelector(selectHTMLDataIsInitialized(path))\n  const error = useSelector(selectHTMLDataError(path))\n  const isFulfilled = useSelector(selectHTMLDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHTMLData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HTMLPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HTMLPlotImple = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const htmlData = useSelector(selectHTMLData(path))\n\n  return (\n    <div\n      dangerouslySetInnerHTML={{ __html: htmlData }}\n      style={{\n        overflow: 'scroll',\n        display: 'flex',\n        height: '90%',\n      }}\n    />\n  )\n})\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectVisualizeDataFilePath,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { DisplayDataContext } from './DataContext'\nimport { HeatMapPlot } from './Plot/HeatMapPlot'\nimport { ImagePlot } from './Plot/ImagePlot'\nimport { RoiPlot } from './Plot/RoiPlot'\nimport { ScatterPlot } from './Plot/ScatterPlot'\nimport { CsvPlot } from './Plot/CsvPlot'\nimport { TimeSeriesPlot } from './Plot/TimeSeriesPlot'\nimport { BarPlot } from './Plot/BarPlot'\nimport { HTMLPlot } from './Plot/HTMLPlot'\n\nexport const DisplayDataItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const nodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  if (filePath != null && dataType != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{ nodeId, filePath, dataType, itemId }}\n      >\n        <DisplayPlot dataType={dataType} />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n\nconst DisplayPlot = React.memo<{\n  dataType: DATA_TYPE\n}>(({ dataType }) => {\n  switch (dataType) {\n    case DATA_TYPE_SET.CSV:\n      return <CsvPlot />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesPlot />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatMapPlot />\n    case DATA_TYPE_SET.IMAGE:\n      return <ImagePlot />\n    case DATA_TYPE_SET.ROI:\n      return <RoiPlot />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterPlot />\n    case DATA_TYPE_SET.BAR:\n      return <BarPlot />\n    case DATA_TYPE_SET.HTML:\n      return <HTMLPlot />\n    default:\n      return null\n  }\n})\n","import { useDispatch, useSelector } from 'react-redux'\nimport Tabs, { tabsClasses } from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box'\nimport React from 'react'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { selectAlgorithmName } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectPipelineNodeResultOutputKeyList,\n  selectPipelineNodeResultOutputFileDataType,\n  selectPipelineNodeResultOutputFilePath,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { selectVisualizeItemIdForWorkflowDialog } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { DisplayDataItem } from 'components/Visualize/DisplayDataItem'\n\nexport const AlgorithmOutputDialog = React.memo<{\n  open: boolean\n  onClose: () => void\n  nodeId: string\n}>(({ open, onClose, nodeId }) => {\n  const dispatch = useDispatch()\n  const closeFn = () => {\n    onClose()\n    dispatch(deleteAllItemForWorkflowDialog())\n  }\n  return (\n    <Dialog open={open} onClose={closeFn} fullWidth>\n      <TitleWithCloseButton onClose={closeFn} nodeId={nodeId} />\n      <DialogContent\n        dividers\n        sx={{\n          pt: 1,\n          px: 2,\n        }}\n      >\n        {open && <OutputViewer nodeId={nodeId} />}\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nconst TitleWithCloseButton = React.memo<{\n  onClose: () => void\n  nodeId: string\n}>(({ nodeId, onClose }) => {\n  const nodeName = useSelector(selectAlgorithmName(nodeId))\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }}>\n      Output of {nodeName}\n      <IconButton\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 10,\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </DialogTitle>\n  )\n})\n\nconst OutputViewer = React.memo<{ nodeId: string }>(({ nodeId }) => {\n  const outputKeyList = useSelector(\n    selectPipelineNodeResultOutputKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  const [selectedOutoutKey, setSelectedOutputKey] = React.useState(\n    outputKeyList[0],\n  )\n  return (\n    <>\n      <OutputSelectTabs\n        outputKeyList={outputKeyList}\n        selectedOutoutKey={selectedOutoutKey}\n        onSelectOutput={setSelectedOutputKey}\n      />\n      <DisplayDataView nodeId={nodeId} outputKey={selectedOutoutKey} />\n    </>\n  )\n})\n\nconst OutputSelectTabs = React.memo<{\n  selectedOutoutKey: string\n  outputKeyList: string[]\n  onSelectOutput: (selectedKey: string) => void\n}>(({ selectedOutoutKey, outputKeyList, onSelectOutput }) => {\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    onSelectOutput(newValue)\n  }\n  return (\n    <Tabs\n      value={selectedOutoutKey}\n      onChange={handleChange}\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n      sx={{\n        [`& .${tabsClasses.scrollButtons}`]: {\n          '&.Mui-disabled': { opacity: 0.3 },\n        },\n      }}\n    >\n      {outputKeyList.map((outputKey) => (\n        <Tab\n          value={outputKey}\n          label={outputKey}\n          sx={{\n            textTransform: 'none',\n          }}\n        />\n      ))}\n    </Tabs>\n  )\n})\n\nconst DisplayDataView = React.memo<{ nodeId: string; outputKey: string }>(\n  ({ nodeId, outputKey }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectPipelineNodeResultOutputFilePath(nodeId, outputKey),\n    )\n    const dataType = useSelector(\n      selectPipelineNodeResultOutputFileDataType(nodeId, outputKey),\n    )\n    const itemId = useSelector(\n      selectVisualizeItemIdForWorkflowDialog(nodeId, filePath, dataType),\n    )\n    React.useEffect(() => {\n      if (itemId === null) {\n        dispatch(addItemForWorkflowDialog({ nodeId, filePath, dataType }))\n      }\n    }, [dispatch, nodeId, filePath, dataType, itemId])\n    return (\n      <Box\n        sx={{\n          mx: 1,\n          my: 2,\n        }}\n      >\n        {itemId != null && <DisplayDataItem itemId={itemId} />}\n      </Box>\n    )\n  },\n)\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport {\n  alpha,\n  Typography,\n  useTheme,\n  Tooltip,\n  FormHelperText,\n  IconButton,\n  Button,\n  LinearProgress,\n  ButtonGroup,\n} from '@mui/material'\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded'\nimport ErrorIcon from '@mui/icons-material/Error'\nimport Popover from '@mui/material/Popover'\n\nimport { AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  selectAlgoArgs,\n  selectAlgoReturns,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { selectAlgorithmNodeDefined } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { toggleParamForm } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultMessage,\n  selectPipelineNodeResultStatus,\n  selectPipelineStatus,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\nimport {\n  NODE_RESULT_STATUS,\n  RUN_STATUS,\n} from 'store/slice/Pipeline/PipelineType'\nimport { AlgorithmOutputDialog } from './AlgorithmOutputDialog'\n\nconst leftHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\nconst rightHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\n\nexport const AlgorithmNode = React.memo<NodeProps<NodeData>>((element) => {\n  const defined = useSelector(selectAlgorithmNodeDefined(element.id))\n  if (defined) {\n    return <AlgorithmNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst AlgorithmNodeImple = React.memo<NodeProps<NodeData>>(\n  ({ id: nodeId, selected: elementSelected, isConnectable, data }) => {\n    const theme = useTheme()\n    const dispatch = useDispatch()\n\n    const onClickParamButton = () => {\n      dispatch(toggleParamForm(nodeId))\n    }\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    const [open, setOpen] = React.useState(false)\n    const onCloseOutputDialog = () => {\n      setOpen(false)\n    }\n    const onClickOutputButton = () => {\n      setOpen(true)\n    }\n\n    const status = useStatus(nodeId)\n\n    return (\n      <div\n        style={{\n          width: '100%',\n          height: '110%',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.15)\n            : undefined,\n          border: '1px solid',\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <AlgoName nodeId={nodeId} data={data} />\n        <ButtonGroup sx={{ mx: 1 }}>\n          <Button size=\"small\" onClick={onClickParamButton}>\n            Param\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={onClickOutputButton}\n            disabled={status !== NODE_RESULT_STATUS.SUCCESS}\n          >\n            Output\n          </Button>\n          <AlgorithmOutputDialog\n            nodeId={nodeId}\n            open={open}\n            onClose={onCloseOutputDialog}\n          />\n        </ButtonGroup>\n        <AlgoArgs nodeId={nodeId} />\n        <AlgoReturns nodeId={nodeId} isConnectable={isConnectable} />\n        <Message nodeId={nodeId} />\n      </div>\n    )\n  },\n)\n\nconst AlgoName = React.memo<{\n  nodeId: string\n  data: NodeData\n}>(({ nodeId, data }) => {\n  const theme = useTheme()\n  const status = useStatus(nodeId)\n  const pipelineStatus = useSelector(selectPipelineStatus)\n  return (\n    <div\n      style={{\n        padding: 8,\n        paddingLeft: 8,\n      }}\n      className=\"algoName\"\n    >\n      {pipelineStatus === RUN_STATUS.START_SUCCESS &&\n        status === NODE_RESULT_STATUS.PENDING && <LinearProgress />}\n      <Typography\n        style={{\n          textAlign: 'left',\n          color:\n            status === NODE_RESULT_STATUS.ERROR\n              ? theme.palette.error.main\n              : undefined,\n        }}\n      >\n        {data.label}\n      </Typography>\n    </div>\n  )\n})\n\nconst AlgoArgs = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const algoArgs = useSelector(selectAlgoArgs(nodeId), algoInfoListEqualtyFn)\n\n  return (\n    <>\n      {algoArgs != null\n        ? algoArgs\n            .filter((info) => info.type !== 'params')\n            .map((algoInfo, i) => {\n              return <ArgHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n            })\n        : null}\n    </>\n  )\n})\n\nconst AlgoReturns = React.memo<{\n  nodeId: string\n  isConnectable: boolean\n}>(({ nodeId, isConnectable }) => {\n  const algoReturns = useSelector(\n    selectAlgoReturns(nodeId),\n    algoInfoListEqualtyFn,\n  )\n  return (\n    <>\n      {algoReturns != null ? (\n        algoReturns?.map((algoInfo, i) => {\n          return <ReturnHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n        })\n      ) : (\n        // algoReturns.lengthが0の場合の応急処置\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={`${nodeId}`}\n          style={{\n            ...rightHandleStyle,\n            top: 15,\n          }}\n          isConnectable={isConnectable}\n        />\n      )}\n    </>\n  )\n})\n\ntype HandleProps = {\n  algoInfo: AlgorithmInfo\n  nodeId: string\n  i: number\n}\n\nfunction hexToRgb(hex: string | undefined, isNone: boolean | undefined) {\n  if (hex !== undefined) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n    if (result !== null) {\n      if (isNone) {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 0.55)`\n      } else {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 1)`\n      }\n    } else {\n      return undefined\n    }\n  } else {\n    return undefined\n  }\n}\n\nconst ArgHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type, isNone }, nodeId, i }) => {\n    const hex_color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    const rgb_color = hexToRgb(hex_color, isNone)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"target\"\n        position={Position.Left}\n        id={id}\n        style={{\n          ...leftHandleStyle,\n          background: rgb_color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"left-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst ReturnHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type }, nodeId, i }) => {\n    const color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"source\"\n        position={Position.Right}\n        id={id}\n        style={{\n          ...rightHandleStyle,\n          background: color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"right-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst Message = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const status = useStatus(nodeId)\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const errorMsg = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultMessage(nodeId)(state) ?? null\n      : null,\n  )\n\n  const anchorElRef = React.useRef<HTMLButtonElement | null>(null)\n  const [open, setOpen] = React.useState(false)\n  const theme = useTheme()\n\n  if (status === NODE_RESULT_STATUS.ERROR) {\n    return (\n      <>\n        <IconButton\n          ref={anchorElRef}\n          onClick={() => setOpen((prevOpen) => !prevOpen)}\n          size=\"small\"\n          style={{ color: theme.palette.error.main, float: 'right' }}\n        >\n          <ErrorIcon />\n        </IconButton>\n        <Popover\n          open={open}\n          anchorEl={anchorElRef.current}\n          onClose={() => setOpen(false)}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n        >\n          <div style={{ margin: 8 }}>\n            <FormHelperText error={true}>{errorMsg}</FormHelperText>\n          </div>\n        </Popover>\n      </>\n    )\n  } else if (status === NODE_RESULT_STATUS.SUCCESS) {\n    return <CheckCircleRoundedIcon color=\"success\" sx={{ float: 'right' }} />\n  } else {\n    return null\n  }\n})\n\nfunction algoInfoListEqualtyFn(\n  a: AlgorithmInfo[] | undefined,\n  b: AlgorithmInfo[] | undefined,\n) {\n  if (a != null && b != null) {\n    return (\n      a === b ||\n      (a.length === b.length &&\n        a.every((v, i) => v.type === b[i].type && v.name === b[i].name))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction useStatus(nodeId: string) {\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const status = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultStatus(nodeId)(state)\n      : 'uninitialized',\n  )\n  return status\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { INITIAL_IMAGE_ELEMENT_ID } from 'const/flowchart'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\nimport { addInputNode } from '../FlowElement/FlowElementActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { setInputNodeFilePath } from './InputNodeActions'\nimport {\n  CsvInputParamType,\n  FILE_TYPE_SET,\n  InputNode,\n  INPUT_NODE_SLICE_NAME,\n} from './InputNodeType'\nimport { isCsvInputNode, isHDF5InputNode } from './InputNodeUtils'\n\nconst initialState: InputNode = {\n  [INITIAL_IMAGE_ELEMENT_ID]: {\n    fileType: FILE_TYPE_SET.IMAGE,\n    param: {},\n  },\n}\n\nexport const inputNodeSlice = createSlice({\n  name: INPUT_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    deleteInputNode(state, action: PayloadAction<string>) {\n      delete state[action.payload]\n    },\n    setCsvInputNodeParam(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: CsvInputParamType\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId]\n      if (isCsvInputNode(inputNode)) {\n        inputNode.param = param\n      }\n    },\n    setInputNodeHDF5Path(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n      }>,\n    ) {\n      const { nodeId, path } = action.payload\n      const item = state[nodeId]\n      if (isHDF5InputNode(item)) {\n        item.hdf5Path = path\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(setInputNodeFilePath, (state, action) => {\n        const { nodeId, filePath } = action.payload\n        const targetNode = state[nodeId]\n        targetNode.selectedFilePath = filePath\n        if (isHDF5InputNode(targetNode)) {\n          targetNode.hdf5Path = undefined\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        const { node, fileType } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          switch (fileType) {\n            case FILE_TYPE_SET.CSV:\n              state[node.id] = {\n                fileType,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.IMAGE:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.HDF5:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.FLUO:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.BEHAVIOR:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.INPUT) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isInputNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.IMAGE,\n                  selectedFilePath: node.data.path as string[],\n                  param: {},\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.CSV,\n                  selectedFilePath: node.data.path as string,\n                  param: node.data.param as CsvInputParamType,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.HDF5,\n                  hdf5Path: node.data.hdf5Path,\n                  selectedFilePath: node.data.path as string,\n                  param: {},\n                }\n              }\n            }\n          })\n        return newState\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const { resultPath } = action.payload\n          const target = state[nodeId]\n          if (target.fileType === FILE_TYPE_SET.IMAGE) {\n            target.selectedFilePath = [resultPath]\n          } else {\n            target.selectedFilePath = resultPath\n          }\n        }\n      }),\n})\n\nexport const { setCsvInputNodeParam, setInputNodeHDF5Path } =\n  inputNodeSlice.actions\n\nexport default inputNodeSlice.reducer\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Switch,\n  FormControlLabel,\n  TextField,\n  Box,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeParamSetHeader,\n  selectCsvInputNodeParamSetIndex,\n  selectCsvInputNodeParamTranspose,\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setCsvInputNodeParam } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { PresentationalCsvPlot } from 'components/Visualize/Plot/CsvPlot'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const CsvFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <CsvFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst CsvFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'csv', 'CsvData')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nexport const ParamSettingDialog = React.memo<{\n  nodeId: string\n  filePath: string\n}>(({ nodeId, filePath }) => {\n  const [open, setOpen] = React.useState(false)\n  // OK時のみStoreに反映させるため一時的な値をuseStateで保持しておく。\n  // useStateの初期値はselectorで取得。\n  const [setHeader, setSetHeader] = React.useState(\n    useSelector(selectCsvInputNodeParamSetHeader(nodeId)),\n  )\n  const [setIndex, setSetIndex] = React.useState(\n    useSelector(selectCsvInputNodeParamSetIndex(nodeId)),\n  )\n  const [transpose, setTranspose] = React.useState(\n    useSelector(selectCsvInputNodeParamTranspose(nodeId)),\n  )\n  const dispatch = useDispatch()\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(\n      setCsvInputNodeParam({\n        nodeId,\n        param: { setHeader, setIndex, transpose },\n      }),\n    )\n  }\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>Settings</Button>\n      <Dialog open={open}>\n        <DialogTitle>Csv Setting</DialogTitle>\n        <DialogContent dividers>\n          <Box sx={{ display: 'flex', p: 1, m: 1, alignItems: 'flex-start' }}>\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={transpose}\n                  onChange={(event) => setTranspose(event.target.checked)}\n                />\n              }\n              label=\"Transpose\"\n            />\n            <TextField\n              label=\"header\"\n              sx={{\n                width: 100,\n                margin: (theme) => theme.spacing(0, 1, 0, 1),\n              }}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(event) => {\n                const value = Number(event.target.value)\n                if (value >= 0) {\n                  setSetHeader(value)\n                }\n              }}\n              value={setHeader}\n            />\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={setIndex}\n                  onChange={(event) => setSetIndex(event.target.checked)}\n                />\n              }\n              label=\"Set Index\"\n            />\n          </Box>\n          <Typography variant=\"h6\">Preview</Typography>\n          <CsvPreview\n            filePath={filePath}\n            transpose={transpose}\n            setHeader={setHeader}\n            setIndex={setIndex}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onClickOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst CsvPreview = React.memo<{\n  filePath: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ filePath: path, ...otherProps }) => {\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PresentationalCsvPlot path={path} {...otherProps} />\n  } else {\n    return null\n  }\n})\n","import { RootState } from '../../store'\n\nexport const selectHDF5 = (state: RootState) => {\n  if (state.hdf5 != null) {\n    return state.hdf5\n  } else {\n    return undefined\n  }\n}\n\nexport const selectHDF5Nodes = () => (state: RootState) =>\n  selectHDF5(state)?.tree\n\nexport const selectHDF5IsLoading = () => (state: RootState) =>\n  selectHDF5(state)?.isLoading ?? false\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type HDF5TreeDTO = HDF5DirDTO | HDF5FileDTO\n\nexport interface HDF5DirDTO {\n  isDir: true\n  name: string\n  nodes: HDF5TreeDTO[]\n  path: string\n}\n\nexport interface HDF5FileDTO {\n  isDir: false\n  name: string\n  shape: [number]\n  path: string\n  nbytes: string\n}\n\nexport async function getHDF5TreeApi(path: string): Promise<HDF5TreeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/hdf5/${path}`)\n  return response.data\n}\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nexport const HDF5_SLICE_NAME = 'hdf5'\n\nexport interface HDF5Tree {\n  isLoading: boolean\n  tree: HDF5TreeNodeType[]\n}\n\nexport type HDF5TreeNodeType = HDF5TreeDTO\n\nexport const HDF5_TYPE_SET = {\n  ALL: 'all',\n} as const\n\nexport type HDF5_TYPE = typeof HDF5_TYPE_SET[keyof typeof HDF5_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getHDF5TreeApi, HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nimport { HDF5_SLICE_NAME } from './HDF5Type'\n\nexport const getHDF5Tree = createAsyncThunk<HDF5TreeDTO[], { path: string }>(\n  `${HDF5_SLICE_NAME}/getHDF5Tree`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getHDF5TreeApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\n\nimport { alpha, useTheme } from '@mui/material/styles'\nimport Dialog from '@mui/material/Dialog'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectHDF5InputNodeSelectedFilePath,\n  selectInputNodeDefined,\n  selectInputNodeHDF5Path,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeHDF5Path } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectHDF5IsLoading,\n  selectHDF5Nodes,\n} from 'store/slice/HDF5/HDF5Selectors'\nimport { getHDF5Tree } from 'store/slice/HDF5/HDF5Action'\nimport { HDF5TreeNodeType } from 'store/slice/HDF5/HDF5Type'\nimport { Typography } from '@mui/material'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const HDF5FileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <HDF5FileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst HDF5FileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.HDF5}\n        filePath={filePath ?? ''}\n      />\n      {filePath !== undefined && <ItemSelect nodeId={nodeId} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'hdf5', 'HDF5Data')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nconst ItemSelect = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [open, setOpen] = React.useState(false)\n\n  const structureFileName = useSelector(selectInputNodeHDF5Path(nodeId))\n\n  return (\n    <>\n      <Button variant=\"outlined\" size=\"small\" onClick={() => setOpen(true)}>\n        {'Structure'}\n      </Button>\n      <Typography className=\"selectFilePath\" variant=\"caption\">\n        {!!structureFileName ? structureFileName : 'No structure is selected.'}\n      </Typography>\n\n      <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\n        <DialogTitle>{'Select File'}</DialogTitle>\n        <Structure nodeId={nodeId} />\n        <DialogActions>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"inherit\"\n            variant=\"outlined\"\n          >\n            cancel\n          </Button>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"primary\"\n            variant=\"outlined\"\n            autoFocus\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst Structure = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const theme = useTheme()\n  return (\n    <DialogContent dividers>\n      <div\n        style={{\n          height: 300,\n          overflow: 'auto',\n          marginBottom: theme.spacing(1),\n          border: '1px solid',\n          padding: theme.spacing(1),\n          borderColor: theme.palette.divider,\n        }}\n      >\n        <FileTreeView nodeId={nodeId} />\n      </div>\n    </DialogContent>\n  )\n})\n\nconst FileTreeView = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [tree, isLoading] = useHDF5Tree(nodeId)\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView>\n        {tree?.map((node) => (\n          <TreeNode node={node} nodeId={nodeId} />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: HDF5TreeNodeType\n  nodeId: string\n}>(({ node, nodeId }) => {\n  const dispatch = useDispatch()\n\n  const onClickFile = (path: string) => {\n    dispatch(setInputNodeHDF5Path({ nodeId, path }))\n  }\n\n  if (node.isDir) {\n    // Directory\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={node.name}\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode node={childNode} key={i} nodeId={nodeId} />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    // File\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={node.name + `   (shape=${node.shape}, nbytes=${node.nbytes})`}\n        onClick={() => onClickFile(node.path)}\n      />\n    )\n  }\n})\n\nfunction useHDF5Tree(\n  nodeId: string,\n): [HDF5TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectHDF5Nodes())\n  const isLoading = useSelector(selectHDF5IsLoading())\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  React.useEffect(() => {\n    if (!isLoading && filePath) {\n      dispatch(getHDF5Tree({ path: filePath }))\n    }\n  }, [isLoading, filePath, dispatch])\n  return [tree, isLoading]\n}\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const FluoFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <FluoFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst FluoFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n  const returnType = 'FluoData'\n  const fluoColor = useHandleColor(returnType)\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'fluo', returnType)}\n        style={{\n          ...sourceHandleStyle,\n          background: fluoColor,\n        }}\n      />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const BehaviorFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <BehaviorFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst BehaviorFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n    const onChangeFilePath = (path: string) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n    const theme = useTheme()\n    const returnType = 'BehaviorData'\n    const behaviorColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '230px',\n          background: selected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          onChangeFilePath={(path) => {\n            if (!Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.CSV}\n          filePath={filePath ?? ''}\n        />\n        {!!filePath && (\n          <ParamSettingDialog nodeId={nodeId} filePath={filePath} />\n        )}\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'behavior', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: behaviorColor,\n          }}\n        />\n      </div>\n    )\n  },\n)\n","import { ImageFileNode } from 'components/FlowChart/FlowChartNode/ImageFileNode'\nimport { AlgorithmNode } from 'components/FlowChart/FlowChartNode/AlgorithmNode'\nimport { CsvFileNode } from 'components/FlowChart/FlowChartNode/CsvFileNode'\nimport { HDF5FileNode } from 'components/FlowChart/FlowChartNode/HDF5FileNode'\nimport { FluoFileNode } from 'components/FlowChart/FlowChartNode/FluoFileNode'\nimport { BehaviorFileNode } from 'components/FlowChart/FlowChartNode/BehaviorFileNode'\n\nimport { CustomEdge } from 'components/FlowChart/CustomEdge'\n\nexport const reactFlowNodeTypes = {\n  ImageFileNode,\n  CsvFileNode,\n  HDF5FileNode,\n  AlgorithmNode,\n  FluoFileNode,\n  BehaviorFileNode,\n} as const\n\nexport const reactFlowEdgeTypes = {\n  buttonedge: CustomEdge,\n} as const\n","import { useDispatch } from 'react-redux'\nimport {\n  EdgeProps,\n  getBezierPath,\n  getMarkerEnd,\n  getEdgeCenter,\n} from 'react-flow-renderer'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport 'style/flowbutton.css'\n\nconst foreignObjectSize = 40\n\nexport const CustomEdge: React.FC<EdgeProps> = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  arrowHeadType,\n  markerEndId,\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  })\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId)\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  })\n\n  const dispatch = useDispatch()\n\n  const onEdgeClick = () => {\n    dispatch(deleteFlowElementsById(id))\n  }\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <foreignObject\n        width={foreignObjectSize}\n        height={foreignObjectSize}\n        x={edgeCenterX - foreignObjectSize / 2}\n        y={edgeCenterY - foreignObjectSize / 2}\n        className=\"edgebutton-foreignobject\"\n      >\n        <button className=\"flowbutton\" onClick={onEdgeClick}>\n          ×\n        </button>\n      </foreignObject>\n    </>\n  )\n}\n","import React, { DragEvent, MouseEvent } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  Controls,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  OnLoadParams,\n  FlowTransform,\n} from 'react-flow-renderer'\nimport { useDrop } from 'react-dnd'\n\nimport 'style/flow.css'\nimport {\n  deleteFlowElements,\n  editFlowElementPositionById,\n  setFlowElements,\n  setFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectFlowElements,\n  selectFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { ToolBar } from 'components/ToolBar'\nimport {\n  reactFlowEdgeTypes,\n  reactFlowNodeTypes,\n} from './FlowChartNode/ReactFlowNodeTypesConst'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\n\nexport const ReactFlowComponent = React.memo<UseRunPipelineReturnType>(\n  (props) => {\n    const flowElements = useSelector(selectFlowElements)\n    const dispatch = useDispatch()\n\n    const onConnect = (params: Connection | Edge) => {\n      dispatch(\n        setFlowElements(\n          addEdge(\n            {\n              ...params,\n              animated: false,\n              style: { width: 5 },\n              type: 'buttonedge',\n            },\n            flowElements,\n          ),\n        ),\n      )\n    }\n\n    const onElementsRemove = (elementsToRemove: Elements) => {\n      dispatch(deleteFlowElements(elementsToRemove))\n    }\n\n    const onDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    const onNodeDragStop = (event: MouseEvent, node: Node) => {\n      dispatch(\n        editFlowElementPositionById({\n          nodeId: node.id,\n          coord: { x: node.position.x, y: node.position.y },\n        }),\n      )\n    }\n\n    const flowPosition = useSelector(selectFlowPosition)\n\n    const onMoveEnd = (event: FlowTransform | undefined) => {\n      if (event !== undefined) {\n        dispatch(setFlowPosition(event))\n      }\n    }\n\n    const [reactFlowInstance, setReactFlowInstance] =\n      React.useState<OnLoadParams>()\n\n    const onLoad = (reactFlowInstance: OnLoadParams) =>\n      setReactFlowInstance(reactFlowInstance)\n    const wrapparRef = React.useRef<HTMLDivElement>(null)\n    const [, drop] = useDrop<\n      TreeItemDragObject,\n      TreeItemDropResult,\n      TreeItemCollectedProps\n    >(\n      () => ({\n        accept: DND_ITEM_TYPE_SET.TREE_ITEM,\n        drop: (_, monitor) => {\n          let position: TreeItemDropResult['position'] = undefined\n          const monitorOffset = monitor.getClientOffset()\n          if (\n            wrapparRef.current != null &&\n            monitorOffset != null &&\n            reactFlowInstance != null\n          ) {\n            position = reactFlowInstance.project({\n              x: monitorOffset.x - wrapparRef.current.offsetLeft - 40,\n              y: monitorOffset.y - wrapparRef.current.offsetTop - 40,\n            })\n          }\n          return { position }\n        },\n      }),\n      [reactFlowInstance],\n    )\n    return (\n      <div className=\"flow\">\n        <ReactFlowProvider>\n          <div className=\"reactflow-wrapper\" ref={wrapparRef}>\n            <ReactFlow\n              ref={drop}\n              elements={flowElements}\n              onElementsRemove={onElementsRemove}\n              onConnect={onConnect}\n              onLoad={onLoad}\n              onDragOver={onDragOver}\n              onNodeDragStop={onNodeDragStop}\n              nodeTypes={reactFlowNodeTypes}\n              edgeTypes={reactFlowEdgeTypes}\n              defaultPosition={[flowPosition.x, flowPosition.y]}\n              defaultZoom={flowPosition.zoom}\n              onMoveEnd={onMoveEnd}\n            >\n              <ToolBar {...props} />\n              <Controls />\n            </ReactFlow>\n          </div>\n        </ReactFlowProvider>\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nexport const selectRightDrawerIsOpen = (state: RootState) =>\n  state.rightDrawer.open\n\nexport const selectRightDrawerMode = (state: RootState) =>\n  state.rightDrawer.mode\n\nexport const selectRightDrawerCurrentNodeId = (state: RootState) =>\n  state.rightDrawer.currendNodeId\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const ALGORITHM_NODE_SLICE_NAME = 'algorithmNode'\n\nexport type AlgorithmNode = {\n  [nodeId: string]: AlgrithmNodeType\n}\n\ntype AlgrithmNodeType = {\n  functionPath: string\n  name: string\n  params: ParamMap | null\n  isUpdated: boolean\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getAlgoParamsApi } from 'api/params/Params'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { ALGORITHM_NODE_SLICE_NAME } from './AlgorithmNodeType'\n\nexport const getAlgoParams = createAsyncThunk<\n  ParamDTO,\n  { nodeId: string; algoName: string }\n>(\n  `${ALGORITHM_NODE_SLICE_NAME}/getAlgoParams`,\n  async ({ algoName }, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoParamsApi(algoName)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\n\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { getAlgoParams } from './AlgorithmNodeActions'\nimport { ALGORITHM_NODE_SLICE_NAME, AlgorithmNode } from './AlgorithmNodeType'\nimport { isAlgorithmNodePostData } from 'api/run/RunUtils'\nimport { run, runByCurrentUid } from '../Pipeline/PipelineActions'\nimport { addAlgorithmNode } from '../FlowElement/FlowElementActions'\n\nconst initialState: AlgorithmNode = {}\n\nexport const algorithmNodeSlice = createSlice({\n  name: ALGORITHM_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { nodeId, path, newValue } = action.payload\n      const param = state[nodeId].params\n      if (param != null) {\n        const target = getChildParam(path, param)\n        if (target != null) {\n          target.value = newValue\n          state[nodeId].isUpdated = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAlgoParams.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        state[nodeId].params = convertToParamMap(action.payload)\n      })\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        const { node, functionPath, name } = action.meta.arg\n        const params = action.payload\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          state[node.id] = {\n            functionPath,\n            name,\n            params: convertToParamMap(params),\n            isUpdated: false,\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: AlgorithmNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isAlgorithmNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              newState[node.id] = {\n                name: node.data.label,\n                functionPath: node.data.path,\n                params: node.data.param,\n                isUpdated: false,\n              }\n            }\n          })\n        return newState\n      })\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          Object.values(runPostData.nodeDict)\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              state[node.id].isUpdated = false\n            })\n        },\n      )\n  },\n})\n\nexport const { updateParam } = algorithmNodeSlice.actions\nexport default algorithmNodeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Typography from '@mui/material/Typography'\n\nimport {\n  selectAlgorithmName,\n  selectAlgorithmParamsExit,\n  selectAlgorithmParamsKeyList,\n  selectAlgorithmParamsValue,\n  selectAlgorithmParam,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { updateParam } from 'store/slice/AlgorithmNode/AlgorithmNodeSlice'\nimport { getAlgoParams } from 'store/slice/AlgorithmNode/AlgorithmNodeActions'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { ParamFormContext } from './RightDrawer'\n\nexport const AlgorithmParamForm = React.memo(() => {\n  const nodeId = React.useContext(ParamFormContext)\n  const dispatch = useDispatch()\n  const algoName = useSelector(selectAlgorithmName(nodeId))\n  const algoParamIsLoaded = useSelector(selectAlgorithmParamsExit(nodeId))\n  const paramKeyList = useSelector(\n    selectAlgorithmParamsKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (!algoParamIsLoaded) {\n      dispatch(getAlgoParams({ nodeId, algoName }))\n    }\n  }, [dispatch, nodeId, algoName, algoParamIsLoaded])\n  return (\n    <div style={{ padding: 8 }}>\n      <Typography variant=\"h5\">{algoName}</Typography>\n      <div style={{ paddingLeft: 8 }}>\n        {paramKeyList.map((paramKey) => (\n          <ParamItem key={paramKey} paramKey={paramKey} />\n        ))}\n      </div>\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const nodeId = React.useContext(ParamFormContext)\n  const Component = createParamFormItemComponent({\n    paramSelector: (paramKey) => selectAlgorithmParam(nodeId, paramKey),\n    paramValueSelector: (path) => selectAlgorithmParamsValue(nodeId, path),\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ nodeId, path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Divider from '@mui/material/Divider'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport Box from '@mui/material/Box'\nimport {\n  selectRightDrawerCurrentNodeId,\n  selectRightDrawerIsOpen,\n  selectRightDrawerMode,\n} from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport {\n  closeRightDrawer,\n  RIGHT_DRAWER_MODE,\n} from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { NWBSettingContents } from './NWB'\nimport { RootState } from 'store/store'\nimport { AlgorithmParamForm } from './AlgorithmParamForm'\nimport { SnakemakeContents } from './Snakemake'\n\nconst RightDrawer: React.FC = () => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(closeRightDrawer())\n  const title = useSelector((state: RootState) => {\n    const mode = selectRightDrawerMode(state)\n    switch (mode) {\n      case RIGHT_DRAWER_MODE.NWB:\n        return 'NWB Setting'\n      case RIGHT_DRAWER_MODE.PARAM_FORM:\n        return 'Param From'\n      case RIGHT_DRAWER_MODE.SNAKEMAKE:\n        return 'Snakemake'\n      default:\n        return 'none'\n    }\n  })\n  return (\n    <StyledDrawer open={open} anchor=\"right\" variant=\"persistent\">\n      <Toolbar />\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton color=\"inherit\" onClick={onClick} size=\"large\">\n          <ChevronRightIcon />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Box>\n      <Divider />\n      <MainContents>\n        <Contents />\n      </MainContents>\n    </StyledDrawer>\n  )\n}\n\nconst Contents: React.FC = () => {\n  const mode = useSelector(selectRightDrawerMode)\n  switch (mode) {\n    case RIGHT_DRAWER_MODE.NWB:\n      return <NWBSettingContents />\n    case RIGHT_DRAWER_MODE.PARAM_FORM:\n      return <ParamFormConetent />\n    case RIGHT_DRAWER_MODE.SNAKEMAKE:\n      return <SnakemakeContents />\n    default:\n      return null\n  }\n}\n\n/**\n * nodeId\n */\nexport const ParamFormContext = React.createContext<string>('')\n\nconst ParamFormConetent: React.FC = () => {\n  const nodeId = useSelector(selectRightDrawerCurrentNodeId)\n  if (nodeId != null) {\n    return (\n      <ParamFormContext.Provider value={nodeId}>\n        <AlgorithmParamForm />\n      </ParamFormContext.Provider>\n    )\n  } else {\n    return null\n  }\n}\n\nexport const rightDrawerWidth = 320\n\nconst StyledDrawer = styled(Drawer)({\n  width: rightDrawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: rightDrawerWidth,\n  },\n})\n\nconst MainContents = styled('main')({\n  height: '100%',\n})\n\nexport default RightDrawer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport { default as MuiToolbar } from '@mui/material/Toolbar'\nimport { styled } from '@mui/material/styles'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport { AlgorithmTreeView } from './TreeView'\nimport { ReactFlowComponent } from './ReactFlowComponent'\nimport RightDrawer, { rightDrawerWidth } from './RightDrawer'\nimport { selectRightDrawerIsOpen } from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\n\nconst FlowChart = React.memo<UseRunPipelineReturnType>((props) => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  return (\n    <RootDiv>\n      <DndProvider backend={HTML5Backend}>\n        <StyledDrawer variant=\"permanent\">\n          <MuiToolbar />\n          <DrawerContents>\n            <AlgorithmTreeView />\n          </DrawerContents>\n        </StyledDrawer>\n\n        <MainContents open={open}>\n          <MuiToolbar />\n          <ReactFlowComponent {...props} />\n        </MainContents>\n      </DndProvider>\n      <RightDrawer />\n    </RootDiv>\n  )\n})\n\nexport const drawerWidth = 240\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n})\n\nconst StyledDrawer = styled(Drawer)({\n  width: drawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n})\n\nconst DrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')<{ open: boolean }>(\n  ({ theme }) => ({\n    flexDirection: 'column',\n    flexGrow: 1,\n    height: '90vh',\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -rightDrawerWidth,\n  }),\n  ({ open, theme }) =>\n    open\n      ? {\n          transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n          marginRight: 0,\n        }\n      : undefined,\n)\n\nexport default FlowChart\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport AddIcon from '@mui/icons-material/Add'\nimport Button from '@mui/material/Button'\nimport { pushInitialItemToNewRow } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const VisualizeItemAddButton: React.FC = () => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(pushInitialItemToNewRow())\n  }\n  return (\n    <StyledPaper elevation={1} variant=\"outlined\">\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height=\"100%\"\n      >\n        <StyledButton onClick={onClick}>\n          <AddIcon fontSize=\"large\" color=\"primary\" />\n        </StyledButton>\n      </Box>\n    </StyledPaper>\n  )\n}\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  width: 260,\n  height: 255,\n  border: 'dashed',\n  borderWidth: 2,\n  borderColor: theme.palette.divider,\n  margin: theme.spacing(1),\n}))\n\nconst StyledButton = styled(Button)({\n  width: '100%',\n  height: '100%',\n})\n","import React from 'react'\n\nexport function useMouseDragHandler(\n  onMouseDown: (event: React.MouseEvent) => {\n    onMouseMove: (this: Document, event: MouseEvent) => void\n    onMouseUp: (this: Document, event: MouseEvent) => void\n  },\n  dependencies: React.DependencyList,\n) {\n  return React.useCallback(\n    (event: React.MouseEvent) => {\n      const { onMouseMove, onMouseUp } = onMouseDown(event)\n      document.addEventListener('mousemove', onMouseMove)\n      document.addEventListener(\n        'mouseup',\n        (event) => {\n          document.removeEventListener('mousemove', onMouseMove)\n          onMouseUp.call(document, event)\n        },\n        { once: true },\n      )\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dependencies],\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport Menu from '@mui/material/Menu'\nimport MenuItem from '@mui/material/MenuItem'\nimport ListItemText from '@mui/material/ListItemText'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport AddIcon from '@mui/icons-material/Add'\nimport {\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { insertInitialItemToNextColumn } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { deleteDisplayItem } from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const DisplayDataItemLayoutMenuIcon = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onClickDeleteMenu = () => {\n    // visualize Itemで同じpathのデータ個数を調べて、1だったら、displayも削除\n    dispatch(\n      deleteDisplayItem(\n        isSingleData && filePath != null && dataType != null\n          ? { itemId, deleteData: true, filePath, dataType }\n          : { itemId, deleteData: false },\n      ),\n    )\n  }\n  const onClickInsertMenu = () => {\n    dispatch(insertInitialItemToNextColumn(itemId))\n  }\n  return (\n    <PresentationalLayoutMenuIcon\n      onClickDeleteMenu={onClickDeleteMenu}\n      onClickInsertMenu={onClickInsertMenu}\n    />\n  )\n})\n\nconst PresentationalLayoutMenuIcon = React.memo<{\n  onClickDeleteMenu: () => void\n  onClickInsertMenu: () => void\n}>(({ onClickDeleteMenu, onClickInsertMenu }) => {\n  const [open, setOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLButtonElement>(null)\n  const onClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.stopPropagation() // 親divのonClickを反応させないため\n    setOpen((prevOpen) => !prevOpen)\n  }\n  const onClose = () => {\n    setOpen(false)\n  }\n  const onClickDeleteMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickDeleteMenu()\n    setOpen(false)\n  }\n  const onClickInsertMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickInsertMenu()\n    setOpen(false)\n  }\n  return (\n    <>\n      <IconButton ref={anchorRef} onClick={onClick}>\n        <MoreVertIcon />\n      </IconButton>\n      <Menu anchorEl={anchorRef.current} open={open} onClose={onClose}>\n        <MenuItem onClick={onClickInsertMenuFn}>\n          <ListItemIcon>\n            <AddIcon />\n          </ListItemIcon>\n          <ListItemText>Insert into next column</ListItemText>\n        </MenuItem>\n        <MenuItem onClick={onClickDeleteMenuFn}>\n          <ListItemIcon>\n            <DeleteIcon />\n          </ListItemIcon>\n          <ListItemText>Delete</ListItemText>\n        </MenuItem>\n      </Menu>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport FormControl from '@mui/material/FormControl'\nimport MenuItem from '@mui/material/MenuItem'\nimport InputLabel from '@mui/material/InputLabel'\nimport FormHelperText from '@mui/material/FormHelperText'\nimport Select from '@mui/material/Select'\nimport ListSubheader from '@mui/material/ListSubheader'\n\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { RootState } from 'store/store'\nimport { selectInputNode } from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { selectNodeLabelById } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultSuccessList,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { getFileName } from 'store/slice/FlowElement/FlowElementUtils'\n\nexport const FilePathSelect: React.FC<{\n  dataType?: DATA_TYPE\n  selectedNodeId: string | null\n  selectedFilePath: string | null\n  onSelect: (nodeId: string, filePath: string, dataType: DATA_TYPE) => void\n  label?: string\n}> = ({ dataType, selectedNodeId, selectedFilePath, onSelect, label }) => {\n  const inputNodeFilePathInfoList = useSelector(\n    (state: RootState) => {\n      const inputNodes = selectInputNode(state)\n      return Object.entries(inputNodes)\n        .map(([nodeId, inputNode]) => ({\n          nodeId,\n          filePath: inputNode.selectedFilePath,\n          fileType: inputNode.fileType,\n          dataType: toDataTypeFromFileType(inputNode.fileType),\n          nodeName: selectNodeLabelById(nodeId)(state),\n        }))\n        .filter(({ filePath }) => filePath != null)\n        .filter(({ dataType: inputNodeDataType }) =>\n          dataType != null ? inputNodeDataType === dataType : true,\n        )\n    },\n    // todo 比較関数\n  )\n\n  const latestUid = useSelector(selectPipelineLatestUid)\n\n  const algorithmNodeOutputPathInfoList = useSelector((state: RootState) => {\n    if (latestUid != null) {\n      const runResult = selectPipelineNodeResultSuccessList(state)\n      return runResult.map(({ nodeId, nodeResult }) => {\n        return {\n          nodeId,\n          nodeName: selectNodeLabelById(nodeId)(state),\n          paths: Object.entries(nodeResult.outputPaths)\n            .map(([outputKey, value]) => {\n              return {\n                outputKey,\n                filePath: value.path,\n                type: value.type,\n              }\n            })\n            .filter(({ type }) =>\n              dataType != null ? type === dataType : true,\n            ),\n        }\n      })\n    } else {\n      return []\n    }\n  })\n\n  const [open, setOpen] = React.useState(false)\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const onSelectHandle = (\n    nodeId: string,\n    filePath: string,\n    dataType: DATA_TYPE,\n  ) => {\n    onSelect(nodeId, filePath, dataType)\n    handleClose()\n  }\n\n  const menuItemList: React.ReactElement[] = []\n  inputNodeFilePathInfoList.forEach((pathInfo) => {\n    const filePath = pathInfo.filePath\n    if (Array.isArray(filePath)) {\n      filePath.forEach((pathElm) => {\n        menuItemList.push(\n          <MenuItem\n            value={`${pathInfo.nodeId}/${pathElm}`}\n            onClick={() =>\n              onSelectHandle(pathInfo.nodeId, pathElm ?? '', pathInfo.dataType)\n            }\n            key={pathInfo.nodeId}\n          >\n            {getFileName(pathElm)}\n          </MenuItem>,\n        )\n      })\n    } else {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${pathInfo.filePath}`}\n          onClick={() =>\n            onSelectHandle(pathInfo.nodeId, filePath ?? '', pathInfo.dataType)\n          }\n          key={pathInfo.nodeId}\n        >\n          {pathInfo.nodeName}\n        </MenuItem>,\n      )\n    }\n  })\n  algorithmNodeOutputPathInfoList.forEach((pathInfo) => {\n    menuItemList.push(<ListSubheader>{pathInfo.nodeName}</ListSubheader>)\n    pathInfo.paths.forEach((outputPath, i) => {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${outputPath.filePath}`}\n          onClick={() =>\n            onSelectHandle(\n              pathInfo.nodeId,\n              outputPath.filePath,\n              outputPath.type,\n            )\n          }\n          key={`${pathInfo.nodeId}/${outputPath.filePath}`}\n        >\n          {outputPath.outputKey}\n        </MenuItem>,\n      )\n    })\n  })\n\n  return (\n    <FormControl style={{ minWidth: 150, maxWidth: 220 }} variant=\"standard\">\n      <InputLabel>{!!label ? label : 'Select Item'}</InputLabel>\n      <Select\n        value={`${selectedNodeId}/${selectedFilePath}`}\n        open={open}\n        onClose={handleClose}\n        onOpen={handleOpen}\n      >\n        {menuItemList}\n      </Select>\n      {inputNodeFilePathInfoList.length +\n        algorithmNodeOutputPathInfoList.length ===\n        0 && <FormHelperText error={true}>no data</FormHelperText>}\n    </FormControl>\n  )\n}\n\nfunction toDataTypeFromFileType(fileType: FILE_TYPE) {\n  switch (fileType) {\n    case FILE_TYPE_SET.IMAGE:\n      return DATA_TYPE_SET.IMAGE\n    case FILE_TYPE_SET.CSV:\n      return DATA_TYPE_SET.CSV\n    case FILE_TYPE_SET.HDF5:\n      return DATA_TYPE_SET.HDF5\n    case FILE_TYPE_SET.FLUO:\n      return DATA_TYPE_SET.FLUO\n    case FILE_TYPE_SET.BEHAVIOR:\n      return DATA_TYPE_SET.BEHAVIOR\n  }\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport FormControl from '@mui/material/FormControl'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { RootState } from 'store/store'\nimport {\n  selectDisplayDataIsSingle,\n  selectImageItemFilePath,\n  selectRoiItemFilePath,\n  selectRoiItemNodeId,\n  selectSelectedVisualizeItemId,\n  selectTimeSeriesItemRefImageItemId,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n  selectVisualizeImageItemIdList,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  selectItem,\n  setItemSize,\n  setRoiItemFilePath,\n  setTimeSeriesRefImageItemId,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { useMouseDragHandler } from 'components/utils/MouseDragUtil'\nimport { DisplayDataItemLayoutMenuIcon } from './VisualizeItemLayoutMenuIcon'\nimport { DisplayDataItem } from './DisplayDataItem'\nimport { FilePathSelect } from './FilePathSelect'\n\nexport const VisualizeItem = React.memo<{ itemId: number }>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(selectItem(itemId))\n  }\n  const isSelected = useSelector(\n    (state: RootState) => selectSelectedVisualizeItemId(state) === itemId,\n  )\n  const { size, onMouseDownX, onMouseDownY, onMouseDownXY } =\n    useItemDragResize(itemId)\n  return (\n    <Box sx={{ m: 1, display: 'flex', flexDirection: 'row' }}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Paper\n          variant=\"outlined\"\n          key={itemId}\n          onClick={onClick}\n          sx={{\n            width: `${size.width}px`,\n            height: `${size.height}px`,\n            p: 1,\n            borderColor: (theme) =>\n              isSelected ? theme.palette.primary.light : undefined,\n          }}\n        >\n          <ItemHeader itemId={itemId} />\n          <DisplayDataItem itemId={itemId} />\n        </Paper>\n        <Box\n          sx={{\n            display: 'flex',\n          }}\n        >\n          <Box\n            sx={{\n              flexGrow: 1,\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              cursor: 'row-resize',\n            }}\n            onMouseDown={onMouseDownY}\n          />\n          <Box\n            sx={{\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              width: '12px',\n              cursor: 'nwse-resize',\n            }}\n            onMouseDown={onMouseDownXY}\n          />\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Box\n          sx={{\n            flexGrow: 1,\n            position: 'relative',\n            left: '-2px',\n            width: '4px',\n            cursor: 'col-resize',\n          }}\n          onMouseDown={onMouseDownX}\n        />\n        <Box\n          sx={{\n            position: 'relative',\n            height: '12px',\n            width: '4px',\n            left: '-2px',\n            cursor: 'nwse-resize',\n          }}\n          onMouseDown={onMouseDownXY}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst ItemHeader = React.memo<{ itemId: number }>(({ itemId }) => {\n  const itemDataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <Box display=\"flex\" justifyContent=\"flex-end\">\n      <Box flexGrow={1}>\n        <>ID: {itemId}</>\n        <FilePathSelectItem itemId={itemId} />\n      </Box>\n      {itemDataType === DATA_TYPE_SET.TIME_SERIES && (\n        <Box flexGrow={1}>\n          <RefImageItemIdSelect itemId={itemId} />\n        </Box>\n      )}\n      {itemDataType === DATA_TYPE_SET.IMAGE && (\n        <Box flexGrow={1}>\n          <RoiSelect itemId={itemId} />\n        </Box>\n      )}\n      <Box>\n        <DisplayDataItemLayoutMenuIcon itemId={itemId} />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const selectedNodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const selectedFilePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFilePath = (\n    nodeId: string,\n    newFilePath: string,\n    newDataType: DATA_TYPE,\n  ) => {\n    const basePayload = {\n      itemId,\n      nodeId,\n      filePath: newFilePath,\n      dataType: newDataType,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && selectedFilePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: dataType,\n              prevFilePath: selectedFilePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n\n  return (\n    <FilePathSelect\n      selectedNodeId={selectedNodeId}\n      selectedFilePath={selectedFilePath}\n      onSelect={onSelectFilePath}\n    />\n  )\n})\n\nconst RefImageItemIdSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const itemIdList = useSelector(\n    selectVisualizeImageItemIdList,\n    arrayEqualityFn,\n  )\n  const onChangeRefImageItemId = (event: SelectChangeEvent) => {\n    const value = Number(event.target.value)\n    dispatch(\n      setTimeSeriesRefImageItemId({\n        itemId,\n        refImageItemId: isNaN(value) ? null : value,\n      }),\n    )\n  }\n  const selectedRefImageItemId = useSelector(\n    selectTimeSeriesItemRefImageItemId(itemId),\n  )\n  return (\n    <FormControl fullWidth variant=\"standard\">\n      <InputLabel>ref image</InputLabel>\n      <Select\n        value={String(selectedRefImageItemId)}\n        onChange={onChangeRefImageItemId}\n      >\n        <MenuItem value={undefined}>{'None'}</MenuItem>\n        {itemIdList.map((value) => (\n          <MenuItem value={value}>{value}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst MIN_WIDTH = 200\nconst MIN_HEIFHT = 150\n\nfunction useItemDragResize(itemId: number) {\n  const dispatch = useDispatch()\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const [movingSize, setMovingSize] = React.useState({ width, height })\n  const onCommitSize = React.useCallback(\n    (size: { width: number; height: number }) =>\n      dispatch(setItemSize({ itemId, ...size })),\n    [dispatch, itemId],\n  )\n  const onMouseDownX = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          setMovingSize((size) => ({ ...size, width: movingWidth }))\n          movingX = moveEvent.screenX\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, width: movingWidth })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownY = useMouseDragHandler(\n    (downEvent) => {\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize((size) => ({ ...size, height: movingHeight }))\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownXY = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize({ width: movingWidth, height: movingHeight })\n          movingX = moveEvent.screenX\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ width: movingWidth, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  return {\n    size: movingSize,\n    onMouseDownX,\n    onMouseDownY,\n    onMouseDownXY,\n  }\n}\n\nconst RoiSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const roiItemNodeId = useSelector(selectRoiItemNodeId(itemId))\n  const roiItemFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const onSelectRoiFilePath = (nodeId: string, filePath: string) => {\n    dispatch(setRoiItemFilePath({ itemId, nodeId, filePath }))\n  }\n  return (\n    <FilePathSelect\n      selectedFilePath={roiItemFilePath}\n      selectedNodeId={roiItemNodeId}\n      onSelect={onSelectRoiFilePath}\n      dataType={DATA_TYPE_SET.ROI}\n      label={'Select Roi'}\n    />\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { selectVisualizeItemLayout } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nimport { VisualizeItemAddButton } from './VisualizeItemAddButton'\nimport { VisualizeItem } from './VisualizeItem'\n\nexport const FlexItemList: React.FC = () => {\n  const layout = useSelector(selectVisualizeItemLayout, twoDimarrayEqualityFn)\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"column\" p={1} m={1}>\n      {layout.map((row) => (\n        <Box display=\"flex\" flexDirection=\"row\">\n          {row.map((itemId) => (\n            <VisualizeItem itemId={itemId} key={itemId} />\n          ))}\n        </Box>\n      ))}\n      <VisualizeItemAddButton />\n    </Box>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { GradientPickerPopover } from 'react-linear-gradient-picker'\nimport { SketchPicker } from 'react-color'\nimport { PALETTE_COLOR_SHAPE_TYPE } from 'react-linear-gradient-picker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const GradientColorPicker = React.memo<{\n  colors: { rgb: string; offset: string }[]\n  dispatchSetColor: (colorCode: ColorType[]) => void\n}>(({ colors, dispatchSetColor }) => {\n  const palette: PALETTE_COLOR_SHAPE_TYPE[] = colors.map((value) => {\n    return {\n      offset: value.offset,\n      color: value.rgb,\n    }\n  })\n\n  const onPaletteChange = (palette: PALETTE_COLOR_SHAPE_TYPE[]) => {\n    const colorCode = palette.map((value) => {\n      const color = value.color\n      const rgbStr = color.replace(/[^0-9,]/g, '').split(',')\n      const rgb = {\n        r: Number(rgbStr[0]),\n        g: Number(rgbStr[1]),\n        b: Number(rgbStr[2]),\n      }\n      return {\n        rgb: `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`,\n        offset: value.offset,\n      }\n    })\n    dispatchSetColor(colorCode)\n  }\n\n  const [open, setOpen] = useState(false)\n\n  return (\n    <GradientPickerPopover\n      open={open}\n      setOpen={() => setOpen(!open)}\n      // showAnglePicker={true}\n      width={150}\n      maxStops={10}\n      paletteHeight={25}\n      palette={palette}\n      onPaletteChange={onPaletteChange}\n      flatStyle={true}\n    >\n      <WrappedSketchPicker />\n    </GradientPickerPopover>\n  )\n})\n\ntype WrapperPropTypes = {\n  onSelect?: (color: string, opacity?: number) => void\n  color?: string\n}\n\nconst WrappedSketchPicker: React.FC<WrapperPropTypes> = ({\n  onSelect,\n  color,\n}) => {\n  return (\n    <SketchPicker\n      color={color}\n      width=\"150px\"\n      // styles={{width: \"10px\"}}\n      onChange={(c) => {\n        const { r, g, b, a } = c.rgb\n        onSelect?.(`rgb(${r}, ${g}, ${b})`, a)\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport TextField from '@mui/material/TextField'\n\nimport {\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setSaveFileName,\n  setSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\n\nexport const SaveFig: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(setSaveFormat({ itemId, saveFormat: event.target.value }))\n  }\n  const onChangeFileName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setSaveFileName({ itemId, saveFileName: event.target.value }))\n  }\n\n  return (\n    <>\n      <h3>SaveFig</h3>\n      <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel>format</InputLabel>\n        <Select label=\"smooth\" value={saveFormat} onChange={handleChange}>\n          <MenuItem value={'svg'}>svg</MenuItem>\n          <MenuItem value={'png'}>png</MenuItem>\n          <MenuItem value={'jpeg'}>jpeg</MenuItem>\n          <MenuItem value={'webp'}>webp</MenuItem>\n        </Select>\n      </FormControl>\n      <TextField\n        label={'Filename'}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeFileName}\n        value={saveFileName}\n      />\n    </>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Switch from '@mui/material/Switch'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\n\nimport {\n  selectImageItemShowGrid,\n  selectImageItemShowLine,\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemFilePath,\n  selectDisplayDataIsSingle,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setImageItemShowGrid,\n  setImageItemShowLine,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowScale,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemColors,\n  resetImageActiveIndex,\n  setImageItemRoiAlpha,\n  setImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\nimport { FileSelectImple } from 'components/FlowChart/FlowChartNode/FileSelect'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { Box, TextField } from '@mui/material'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\nimport Button from '@mui/material/Button'\nimport { getImageData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { SaveFig } from './SaveFig'\n\nexport const ImageItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectImageFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.IMAGE,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.IMAGE })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  const colors = useSelector(selectImageItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setImageItemColors({ itemId, colors: colorCode }))\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectImageFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.IMAGE}\n        selectButtonLabel=\"Select Image\"\n      />\n      <StartEndIndex />\n      <Showticklabels />\n      <ShowLine />\n      <ShowGrid />\n      <ShowScale />\n      <Zsmooth />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <Alpha />\n      <RoiAlpha />\n      <SaveFig />\n    </div>\n  )\n}\n\nconst Showticklabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setImageItemShowticklabels({ itemId, showticklabels: !showticklabels }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"Showticklabels\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"ShowLine\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"ShowGrid\"\n    />\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"ShowScale\"\n    />\n  )\n}\n\nconst Zsmooth: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string | boolean>) => {\n    dispatch(setImageItemZsmooth({ itemId, zsmooth: event.target.value }))\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>smooth</InputLabel>\n      <Select label=\"smooth\" value={zsmooth} onChange={handleChange}>\n        <MenuItem value={'best'}>best</MenuItem>\n        <MenuItem value={'fast'}>fast</MenuItem>\n        <MenuItem value={'false'}>False</MenuItem>\n      </Select>\n    </FormControl>\n  )\n}\n\nconst Alpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const inputError = !(alpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemAlpha({ itemId, alpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        label={'image alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={alpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst RoiAlpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const inputError = !(roiAlpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemRoiAlpha({ itemId, roiAlpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        label={'roi alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={roiAlpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst StartEndIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const [startIndex, onChangeStartIndex] = React.useState(\n    useSelector(selectImageItemStartIndex(itemId)),\n  )\n  const [endIndex, onChangeEndIndex] = React.useState(\n    useSelector(selectImageItemEndIndex(itemId)),\n  )\n  const inputError = !(startIndex > 0)\n  const dispatch = useDispatch()\n  const onStartChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeStartIndex(newValue)\n    }\n  }\n  const onEndChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeEndIndex(newValue)\n    }\n  }\n\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n  const onClickButton = () => {\n    if (startIndex > 0) {\n      dispatch(setImageItemStartIndex({ itemId, startIndex }))\n      dispatch(setImageItemEndIndex({ itemId, endIndex }))\n      dispatch(resetImageActiveIndex({ itemId, startIndex, endIndex }))\n      if (filePath !== null) {\n        dispatch(\n          getImageData({\n            path: filePath,\n            startIndex: startIndex ?? 1,\n            endIndex: endIndex ?? 10,\n          }),\n        )\n      }\n    }\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>\n      <TextField\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 1,\n          min: 0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onStartChange}\n        value={startIndex}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n      ~\n      <TextField\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onEndChange}\n        value={endIndex}\n      />\n      <Button\n        size=\"small\"\n        className=\"ctrl_btn\"\n        variant=\"contained\"\n        onClick={onClickButton}\n      >\n        load\n      </Button>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FileSelectImple } from 'components/FlowChart/FlowChartNode/FileSelect'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { FormControlLabel, Switch, TextField } from '@mui/material'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const CsvItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const dispatch = useDispatch()\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.CSV,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.CSV })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.CSV}\n        selectButtonLabel=\"Select CSV\"\n      />\n      <Transpose />\n      <SetHeader />\n      <SetIndex />\n    </div>\n  )\n}\n\nconst Transpose: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemTranspose({ itemId, transpose: !transpose }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={transpose} onChange={toggleChecked} />}\n      label=\"transpose\"\n    />\n  )\n}\n\nconst SetHeader: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeSetHeader = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value === '' ? null : Number(event.target.value)\n    if (newValue === null || newValue >= 0) {\n      dispatch(setCsvItemSetHeader({ itemId, setHeader: newValue }))\n    }\n  }\n\n  return (\n    <>\n      <TextField\n        label=\"header\"\n        sx={{\n          width: 100,\n          margin: (theme) => theme.spacing(0, 1, 0, 1),\n        }}\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeSetHeader}\n        value={setHeader}\n      />\n    </>\n  )\n}\n\nconst SetIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemSetIndex({ itemId, setIndex: !setIndex }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={setIndex} onChange={toggleChecked} />}\n      label=\"setIndex\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FormControlLabel, Switch } from '@mui/material'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setHeatMapItemColors,\n  setHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { SaveFig } from './SaveFig'\n\nexport const HeatmapItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const colors = useSelector(selectHeatMapItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setHeatMapItemColors({ itemId, colors: colorCode }))\n  }\n  return (\n    <>\n      <ShowScale />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <SaveFig />\n    </>\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setHeatMapItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"showscale\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  AccordionDetails,\n  AccordionSummary,\n  FormControlLabel,\n  Switch,\n  TextField,\n} from '@mui/material'\nimport Box from '@mui/material/Box'\nimport Checkbox from '@mui/material/Checkbox'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectTimeSeriesItemFilePath,\n  selectTimeSeriesItemKeys,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemDrawOrderList,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  getTimeSeriesAllData,\n  getTimeSeriesDataById,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { Accordion } from 'components/common/Accordion'\n\nimport { SaveFig } from './SaveFig'\n\nexport const TimeSeriesItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <Offset />\n      <Span />\n      <ShowGrid />\n      <ShowLine />\n      <ShowTickLabels />\n      <ZeroLine />\n      <Xrange />\n      <LegendSelect />\n      <SaveFig />\n    </div>\n  )\n}\n\nconst Offset: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemOffset({ itemId, offset: !offset }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={offset} onChange={toggleChecked} />}\n      label=\"offset\"\n    />\n  )\n}\n\nconst Span: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n\n  const dispatch = useDispatch()\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number' && newValue > 0) {\n      dispatch(setTimeSeriesItemSpan({ itemId, span: newValue }))\n    }\n  }\n  return (\n    <FormControlLabel\n      control={\n        <TextField\n          type=\"number\"\n          style={{ width: '6vw' }}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={onChange}\n          defaultValue={span}\n        />\n      }\n      label=\"offset std\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"showgrid\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"showline\"\n    />\n  )\n}\n\nconst ShowTickLabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setTimeSeriesItemShowTickLabels({\n        itemId,\n        showticklabels: !showticklabels,\n      }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"showticklabels\"\n    />\n  )\n}\n\nconst ZeroLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemZeroLine({ itemId, zeroline: !zeroline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={zeroline} onChange={toggleChecked} />}\n      label=\"zeroline\"\n    />\n  )\n}\n\nconst Xrange: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeLeft = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newLeft = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newLeft === 'number') {\n      dispatch(setTimeSeriesItemXrangeLeft({ itemId, left: newLeft }))\n    }\n  }\n  const onChangeRight = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newRight = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newRight === 'number') {\n      dispatch(setTimeSeriesItemXrangeRight({ itemId, right: newRight }))\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <>\n          <TextField\n            label=\"left\"\n            style={{ width: 50 }}\n            type=\"number\"\n            inputProps={{\n              step: 1,\n              min: 0,\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeLeft}\n            defaultValue={xrange.left}\n          />\n          <TextField\n            label=\"right\"\n            style={{ width: 50 }}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeRight}\n            defaultValue={xrange.right}\n          />\n        </>\n      }\n      label=\"\"\n    />\n  )\n}\n\nconst LegendSelect: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  // const drawIndexMap = useSelector(selectTimeSeriesItemDrawIndexMap(itemId))\n  const dataKeys = useSelector(\n    selectTimeSeriesItemKeys(itemId),\n    arrayEqualityFn,\n  )\n  const drawOrderList = useSelector(\n    selectTimeSeriesItemDrawOrderList(itemId),\n    arrayEqualityFn,\n  )\n  const filePath = useSelector(selectTimeSeriesItemFilePath(itemId))\n\n  const allHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: event.target.checked ? dataKeys : [],\n      }),\n    )\n\n    if (event.target.checked && filePath !== null) {\n      dispatch(getTimeSeriesAllData({ path: filePath }))\n    }\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const index = event.target.value\n    const newDrawOrderList = event.target.checked\n      ? [...drawOrderList, index]\n      : drawOrderList.filter((value) => value !== index)\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    if (filePath !== null) {\n      dispatch(getTimeSeriesDataById({ path: filePath, index: index }))\n    }\n  }\n\n  const drawIndexMap = Object.fromEntries(\n    dataKeys.map((v) => {\n      if (drawOrderList.includes(v)) {\n        return [v, true]\n      } else {\n        return [v, false]\n      }\n    }),\n  )\n\n  const children = (\n    <Box sx={{ display: 'flex', flexDirection: 'column', ml: 3 }}>\n      {dataKeys.map((key) => (\n        <FormControlLabel\n          key={`${key}`}\n          label={`Index ${key}`}\n          control={\n            <Checkbox\n              checked={drawIndexMap[key]}\n              onChange={handleChange}\n              value={key}\n            />\n          }\n        />\n      ))}\n    </Box>\n  )\n\n  return (\n    <Accordion sx={{ mt: 2 }} TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        Legend select\n      </AccordionSummary>\n      <AccordionDetails>\n        <>\n          <FormControlLabel\n            label=\"All Check\"\n            control={\n              <Checkbox\n                checked={Object.values(drawIndexMap).every((v) => {\n                  return v\n                })}\n                onChange={allHandleChange}\n              />\n            }\n          />\n          {children}\n        </>\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","import React from 'react'\n// import { useSelector, useDispatch } from 'react-redux'\n// import { SelectedItemIdContext } from '../VisualizeItemEditor'\n// import { selectRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n// import { setRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n// import { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\n// import { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n// import { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const RoiItemEditor: React.FC = () => {\n  // const itemId = React.useContext(SelectedItemIdContext)\n  // const dispatch = useDispatch()\n  // const { onUploadFile } = useFileUploader(FILE_TYPE_SET.CSV)\n  // const onUploadFileHandle = (formData: FormData, fileName: string) => {\n  //   onUploadFile(formData, fileName)\n  // }\n\n  // const colors = useSelector(selectRoiItemColors(itemId))\n  // const dispathSetColor = (colorCode: ColorType[]) => {\n  //   dispatch(setRoiItemColors({ itemId, colors: colorCode }))\n  // }\n\n  return (\n    <>\n      {/* <GradientColorPicker /> */}\n      {/* <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} /> */}\n    </>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const ScatterItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const BarItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport {\n  selectSelectedVisualizeItemId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { ImageItemEditor } from './Editor/ImageItemEditor'\nimport { CsvItemEditor } from './Editor/CsvItemEditor'\nimport { HeatmapItemEditor } from './Editor/HeatmapItemEditor'\nimport { TimeSeriesItemEditor } from './Editor/TimeSeriesItemEditor'\nimport { RoiItemEditor } from './Editor/RoiItemEditor'\nimport { ScatterItemEditor } from './Editor/ScatterItemEditor'\nimport { BarItemEditor } from './Editor/BarItemEditor'\n\nexport const VisualizeItemEditor = () => {\n  const selectedItemId = useSelector(selectSelectedVisualizeItemId)\n  return (\n    <>\n      {selectedItemId != null ? (\n        <SelectedItemIdContext.Provider value={selectedItemId}>\n          <Box m={1}>\n            <DisplayDataItemEditor />\n          </Box>\n        </SelectedItemIdContext.Provider>\n      ) : (\n        'Please select item...'\n      )}\n    </>\n  )\n}\n\nexport const SelectedItemIdContext = React.createContext<number>(NaN)\n\nconst DisplayDataItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <div style={{ marginTop: 8 }}>\n      <DisplayEditor dataType={dataType} />\n    </div>\n  )\n}\n\nconst DisplayEditor: React.FC<{\n  dataType: DATA_TYPE | null\n}> = ({ dataType }) => {\n  /* 他のtypeのEditorも必要になったら追加する */\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return <ImageItemEditor />\n    case DATA_TYPE_SET.CSV:\n      return <CsvItemEditor />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatmapItemEditor />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesItemEditor />\n    case DATA_TYPE_SET.ROI:\n      return <RoiItemEditor />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterItemEditor />\n    case DATA_TYPE_SET.BAR:\n      return <BarItemEditor />\n    case DATA_TYPE_SET.HTML:\n      return <div>html editor</div>\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport { default as MuiToolbar } from '@mui/material/Toolbar'\nimport { styled } from '@mui/material/styles'\nimport { drawerWidth } from 'components/FlowChart/FlowChart'\nimport { FlexItemList } from './FlexItemList'\nimport { VisualizeItemEditor } from './VisualizeItemEditor'\n\nconst Visualize: React.FC = () => {\n  return (\n    <RootDiv>\n      <StyledDrawer variant=\"permanent\">\n        <MuiToolbar />\n        <StyledDrawerContents>\n          <VisualizeItemEditor />\n        </StyledDrawerContents>\n      </StyledDrawer>\n      <MainContents>\n        <MuiToolbar />\n        <FlexItemList />\n      </MainContents>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n})\n\nconst StyledDrawer = styled(Drawer)({\n  width: drawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n})\n\nconst StyledDrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')({\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n  height: '100vh',\n})\n\nexport default Visualize\n","import { RootState } from 'store/store'\nimport { EXPERIMENTS_STATUS } from './ExperimentsType'\n\nconst selectExperiments = (state: RootState) => state.experiments\n\nexport const selectExperimentsSatusIsUninitialized = (state: RootState) =>\n  selectExperiments(state).status === 'uninitialized'\n\nexport const selectExperimentsSatusIsPending = (state: RootState) =>\n  selectExperiments(state).status === 'pending'\n\nexport const selectExperimentsSatusIsFulfilled = (state: RootState) =>\n  selectExperiments(state).status === 'fulfilled'\n\nexport const selectExperimentsSatusIsError = (state: RootState) =>\n  selectExperiments(state).status === 'error'\n\nexport const selectExperimentsErrorMessage = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'error') {\n    return experiments.message\n  } else {\n    throw new Error('experiments status is not error')\n  }\n}\n\nexport const selectExperimentList = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'fulfilled') {\n    return experiments.experimentList\n  } else {\n    throw new Error('experiments status is not fulfilled')\n  }\n}\n\nexport const selectExperimentUidList = (state: RootState) =>\n  Object.keys(selectExperimentList(state))\n\nexport const selectExperiment = (uid: string) => (state: RootState) =>\n  selectExperimentList(state)[uid]\n\nexport const selectExperimentTimeStamp = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).timestamp\n\nexport const selectExperimentName = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).name\n\nexport const selectExperimentHasNWB = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).hasNWB\n\nexport const selectExperimentStatus =\n  (uid: string) =>\n  (state: RootState): EXPERIMENTS_STATUS => {\n    const functions = selectExperimentList(state)[uid].functions\n    const statusList = Object.values(functions).map((f) => f.status)\n    if (statusList.findIndex((status) => status === 'error') >= 0) {\n      return 'error'\n    } else if (statusList.findIndex((status) => status === 'running') >= 0) {\n      return 'running'\n    } else {\n      return 'success'\n    }\n  }\n\nexport const selectExperimentCheckList =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionNodeIdList =\n  (uid: string) => (state: RootState) =>\n    Object.keys(selectExperimentList(state)[uid].functions)\n\nexport const selectExperimentFunction =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentList(state)[uid].functions[nodeId]\n\nexport const selectExperimentFunctionName =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).name\n\nexport const selectExperimentFunctionStatus =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionHasNWB =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).hasNWB\n","import React from 'react'\nimport DoneIcon from '@mui/icons-material/Done'\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline'\nimport HorizontalRuleIcon from '@mui/icons-material/HorizontalRule'\n\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport const ExperimentStatusIcon = React.memo<{ status: EXPERIMENTS_STATUS }>(\n  ({ status }) => {\n    switch (status) {\n      case 'error':\n        return <ErrorOutlineIcon color=\"error\" />\n      case 'success':\n        return <DoneIcon color=\"success\" />\n      case 'running':\n        return <HorizontalRuleIcon color=\"inherit\" />\n    }\n  },\n)\n","import React, { useState, useRef } from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport GetAppIcon from '@mui/icons-material/GetApp'\n\nimport {\n  downloadExperimentConfigApi,\n  downloadExperimentNwbApi,\n} from 'api/experiments/Experiments'\n\nimport { ExperimentUidContext } from '../ExperimentTable'\n\nexport const NWBDownloadButton = React.memo<{\n  name: string\n  nodeId?: string\n  hasNWB: boolean\n}>(({ name, nodeId, hasNWB }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n\n  const onClick = async () => {\n    try {\n      const responseData = await downloadExperimentNwbApi(uid, nodeId)\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      throw new Error('Download Error')\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick} color=\"primary\" disabled={!hasNWB}>\n        <GetAppIcon />\n      </IconButton>\n      <a href={url} download={`${name}.nwb`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n\nexport const ConfigDownloadButton = React.memo(() => {\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n\n  const onClick = async () => {\n    try {\n      const responseData = await downloadExperimentConfigApi(uid)\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      throw new Error('Download Error')\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick}>\n        <GetAppIcon color=\"primary\" />\n      </IconButton>\n      <a href={url} download={`config.yaml`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport Collapse from '@mui/material/Collapse'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Typography from '@mui/material/Typography'\n\nimport { ExperimentUidContext } from './ExperimentTable'\nimport {\n  selectExperimentFunctionHasNWB,\n  selectExperimentFunctionName,\n  selectExperimentFunctionNodeIdList,\n  selectExperimentFunctionStatus,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { NWBDownloadButton } from './Button/DownloadButton'\n\nexport const CollapsibleTable = React.memo<{\n  open: boolean\n}>(({ open }) => {\n  return (\n    <TableRow>\n      <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={10}>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Box margin={1}>\n            <Typography variant=\"h6\" gutterBottom component=\"div\">\n              Details\n            </Typography>\n            <Table size=\"small\" aria-label=\"purchases\">\n              <Head />\n              <Body />\n            </Table>\n          </Box>\n        </Collapse>\n      </TableCell>\n    </TableRow>\n  )\n})\n\nconst Head = React.memo(() => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>Function</TableCell>\n        <TableCell>nodeID</TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>NWB</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst Body = React.memo(() => {\n  const uid = React.useContext(ExperimentUidContext)\n  const nodeIdList = useSelector(\n    selectExperimentFunctionNodeIdList(uid),\n    arrayEqualityFn,\n  )\n  return (\n    <TableBody>\n      {nodeIdList.map((nodeId) => (\n        <TableRowOfFunction nodeId={nodeId} />\n      ))}\n    </TableBody>\n  )\n})\n\nconst TableRowOfFunction = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const name = useSelector(selectExperimentFunctionName(uid, nodeId))\n  const status = useSelector(selectExperimentFunctionStatus(uid, nodeId))\n  const hasNWB = useSelector(selectExperimentFunctionHasNWB(uid, nodeId))\n\n  return (\n    <TableRow key={nodeId}>\n      <TableCell component=\"th\" scope=\"row\">\n        {name}\n      </TableCell>\n      <TableCell>{nodeId}</TableCell>\n      <TableCell>\n        <ExperimentStatusIcon status={status} />\n      </TableCell>\n      <TableCell>\n        <NWBDownloadButton name={name} nodeId={nodeId} hasNWB={hasNWB} />\n      </TableCell>\n    </TableRow>\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport IconButton from '@mui/material/IconButton'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline'\nimport { selectExperimentName } from 'store/slice/Experiments/ExperimentsSelectors'\nimport { deleteExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineIsStartedSuccess,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\n\nexport const DeleteButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const uid = React.useContext(ExperimentUidContext)\n  const isRunning = useSelector((state: RootState) => {\n    const currentUid = selectPipelineLatestUid(state)\n    const isPending = selectPipelineIsStartedSuccess(state)\n    return uid === currentUid && isPending\n  })\n  const name = useSelector(selectExperimentName(uid))\n  const [open, setOpen] = React.useState(false)\n\n  const onClickOpen = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(deleteExperimentByUid(uid))\n  }\n  return (\n    <>\n      <IconButton onClick={onClickOpen} disabled={isRunning} color=\"error\">\n        <DeleteOutlineIcon />\n      </IconButton>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete {name}?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport { useSnackbar } from 'notistack'\nimport { importExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { AppDispatch } from 'store/store'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport ReplyIcon from '@mui/icons-material/Reply'\n\nexport const ImportButton = React.memo(() => {\n  const dispatch: AppDispatch = useDispatch()\n  const uid = React.useContext(ExperimentUidContext)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = () => {\n    dispatch(importExperimentByUid(uid))\n      .unwrap()\n      .then(() =>\n        enqueueSnackbar('Successfully imported.', { variant: 'success' }),\n      )\n  }\n  return (\n    <IconButton onClick={onClick}>\n      <ReplyIcon />\n    </IconButton>\n  )\n})\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\nimport Alert from '@mui/material/Alert'\nimport AlertTitle from '@mui/material/AlertTitle'\nimport IconButton from '@mui/material/IconButton'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport ReplayIcon from '@mui/icons-material/Replay'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport {\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  TableSortLabel,\n} from '@mui/material'\n\nimport { CollapsibleTable } from './CollapsibleTable'\nimport {\n  selectExperimentsSatusIsUninitialized,\n  selectExperimentsSatusIsFulfilled,\n  selectExperimentTimeStamp,\n  selectExperimentName,\n  selectExperimentStatus,\n  selectExperimentsSatusIsError,\n  selectExperimentsErrorMessage,\n  selectExperimentList,\n  selectExperimentHasNWB,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport {\n  deleteExperimentByList,\n  getExperiments,\n} from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { Experiment } from 'store/slice/Experiments/ExperimentsType'\nimport { DeleteButton } from './Button/DeleteButton'\nimport {\n  NWBDownloadButton,\n  ConfigDownloadButton,\n} from './Button/DownloadButton'\nimport { ImportButton } from './Button/ImportButton'\n\nexport const ExperimentUidContext = React.createContext<string>('')\n\nexport const ExperimentTable: React.FC = () => {\n  const isUninitialized = useSelector(selectExperimentsSatusIsUninitialized)\n  const isFulfilled = useSelector(selectExperimentsSatusIsFulfilled)\n  const isError = useSelector(selectExperimentsSatusIsError)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (isUninitialized) {\n      dispatch(getExperiments())\n    }\n  }, [dispatch, isUninitialized])\n  if (isFulfilled) {\n    return <TableImple />\n  } else if (isError) {\n    return <ExperimentsErrorView />\n  } else {\n    return null\n  }\n}\n\nconst ExperimentsErrorView: React.FC = () => {\n  const message = useSelector(selectExperimentsErrorMessage)\n  return (\n    <Alert severity=\"error\">\n      <AlertTitle>failed to get experiments...</AlertTitle>\n      {message}\n    </Alert>\n  )\n}\n\nconst TableImple = React.memo(() => {\n  const experimentList = useSelector(selectExperimentList)\n  const dispatch = useDispatch()\n  const onClickReload = () => {\n    dispatch(getExperiments())\n  }\n  const [order, setOrder] = React.useState<Order>('asc')\n  const [sortTarget, setSortTarget] =\n    React.useState<keyof Experiment>('timestamp')\n  const sortHandler =\n    (property: keyof Experiment) => (event: React.MouseEvent<unknown>) => {\n      const isAsc = sortTarget === property && order === 'asc'\n      setOrder(isAsc ? 'desc' : 'asc')\n      setSortTarget(property)\n    }\n\n  const [checkedList, setCheckedList] = useState<string[]>([])\n  const [open, setOpen] = React.useState(false)\n\n  const onCheckBoxClick = (uid: string) => {\n    if (checkedList.includes(uid)) {\n      setCheckedList(checkedList.filter((v) => v !== uid))\n    } else {\n      setCheckedList([...checkedList, uid])\n    }\n  }\n  const onClickDelete = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    dispatch(deleteExperimentByList(checkedList))\n    setCheckedList([])\n    setOpen(false)\n  }\n\n  return (\n    <Box>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        <Button\n          sx={{\n            marginBottom: (theme) => theme.spacing(1),\n          }}\n          variant=\"outlined\"\n          endIcon={<ReplayIcon />}\n          onClick={onClickReload}\n        >\n          Reload\n        </Button>\n        <Button\n          sx={{\n            marginBottom: (theme) => theme.spacing(1),\n          }}\n          variant=\"outlined\"\n          color=\"error\"\n          endIcon={<DeleteIcon />}\n          onClick={onClickDelete}\n          disabled={checkedList.length === 0}\n        >\n          Delete\n        </Button>\n      </Box>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <TableContainer component={Paper} elevation={0} variant=\"outlined\">\n        <Table aria-label=\"collapsible table\">\n          <HeadItem order={order} sortHandler={sortHandler} />\n          <TableBody>\n            {Object.values(experimentList)\n              .sort(getComparator(order, sortTarget))\n              .map((expData) => (\n                <ExperimentUidContext.Provider\n                  value={expData.uid}\n                  key={expData.uid}\n                >\n                  <RowItem onCheckBoxClick={onCheckBoxClick} />\n                </ExperimentUidContext.Provider>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  )\n})\n\nconst HeadItem = React.memo<{\n  order: Order\n  sortHandler: any\n}>(({ order, sortHandler }) => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell />\n        <TableCell />\n        <TableCell>\n          <TableSortLabel\n            active\n            direction={order}\n            onClick={sortHandler('timestamp')}\n          >\n            Timestamp\n          </TableSortLabel>\n        </TableCell>\n        <TableCell>\n          <TableSortLabel active direction={order} onClick={sortHandler('uid')}>\n            ID\n          </TableSortLabel>\n        </TableCell>\n        <TableCell>\n          <TableSortLabel\n            active\n            direction={order}\n            onClick={sortHandler('name')}\n          >\n            Name\n          </TableSortLabel>\n        </TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>Reproduce</TableCell>\n        <TableCell>SnakeFile</TableCell>\n        <TableCell>NWB</TableCell>\n        <TableCell>Delete</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst RowItem = React.memo<{\n  onCheckBoxClick: (uid: string) => void\n}>(({ onCheckBoxClick }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const timestamp = useSelector(selectExperimentTimeStamp(uid))\n  const status = useSelector(selectExperimentStatus(uid))\n  const name = useSelector(selectExperimentName(uid))\n  const hasNWB = useSelector(selectExperimentHasNWB(uid))\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      <TableRow\n        sx={{\n          '& > *': {\n            borderBottom: 'unset',\n          },\n          [`& .${tableCellClasses.root}`]: {\n            borderBottomWidth: 0,\n          },\n        }}\n      >\n        <TableCell>\n          <Checkbox onChange={() => onCheckBoxClick(uid)} />\n        </TableCell>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {timestamp}\n        </TableCell>\n        <TableCell>{uid}</TableCell>\n        <TableCell>{name}</TableCell>\n        <TableCell>\n          <ExperimentStatusIcon status={status} />\n        </TableCell>\n        <TableCell>\n          <ImportButton />\n        </TableCell>\n        <TableCell>\n          <ConfigDownloadButton />\n        </TableCell>\n        <TableCell>\n          <NWBDownloadButton name={uid} hasNWB={hasNWB} />\n        </TableCell>\n        <TableCell>\n          <DeleteButton />\n        </TableCell>\n      </TableRow>\n      <CollapsibleTable open={open} />\n    </React.Fragment>\n  )\n})\n\ntype Order = 'asc' | 'desc'\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string },\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n","import React from 'react'\nimport { default as MuiToolbar } from '@mui/material/Toolbar'\nimport { ExperimentTable } from './ExperimentTable'\n\nconst Experiment = React.memo(() => {\n  return (\n    <div style={{ display: 'flex' }}>\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1,\n          height: '100vh',\n          padding: 16,\n        }}\n      >\n        <MuiToolbar />\n        <ExperimentTable />\n      </main>\n    </div>\n  )\n})\n\nexport default Experiment\n","import { isEdge, Node } from 'react-flow-renderer'\n\nimport {\n  AlgorithmNodePostData,\n  EdgeDict,\n  InputNodePostData,\n  NodeDict,\n  RunPostData,\n} from 'api/run/Run'\n\nimport { RootState } from 'store/store'\n\nimport {\n  selectAlgorithmFunctionPath,\n  selectAlgorithmIsUpdated,\n  selectAlgorithmName,\n  selectAlgorithmParams,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { selectFlowElements } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  isAlgorithmNodeData,\n  isNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport { selectNwbParams } from 'store/slice/NWB/NWBSelectors'\nimport { selectPipelineNodeResultStatus } from 'store/slice/Pipeline/PipelineSelectors'\nimport { NODE_RESULT_STATUS } from 'store/slice/Pipeline/PipelineType'\nimport { selectSnakemakeParams } from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { NODE_TYPE_SET } from 'store/slice/FlowElement/FlowElementType'\nimport {\n  selectInputNodeFileType,\n  selectInputNodeHDF5Path,\n  selectInputNodeParam,\n  selectInputNodeSelectedFilePath,\n} from 'store/slice/InputNode/InputNodeSelectors'\n\nexport const selectRunPostData = (state: RootState) => {\n  const nwbParam = selectNwbParams(state)\n  const snakemakeParam = selectSnakemakeParams(state)\n  const edgeDictForRun = selectEdgeDictForRun(state)\n  const nodeDictForRun = selectNodeDictForRun(state)\n  const forceRunList = selectForceRunList(state)\n  const runPostData: Omit<RunPostData, 'name'> = {\n    nwbParam,\n    snakemakeParam,\n    edgeDict: edgeDictForRun,\n    nodeDict: nodeDictForRun,\n    forceRunList,\n  }\n  return runPostData\n}\n\n/**\n * 前回の結果で、エラーまたはParamに変更があるnodeのリストを返す\n */\nconst selectForceRunList = (state: RootState) => {\n  const elements = selectFlowElements(state)\n  return elements\n    .filter(isAlgorithmNodeData)\n    .filter((node) => {\n      const isUpdated = selectAlgorithmIsUpdated(node.id)(state)\n      const status = selectPipelineNodeResultStatus(node.id)(state)\n      return isUpdated || status === NODE_RESULT_STATUS.ERROR\n    })\n    .map((node) => ({\n      nodeId: node.id,\n      name: selectAlgorithmName(node.id)(state),\n    }))\n}\n\nconst selectNodeDictForRun = (state: RootState): NodeDict => {\n  const elements = selectFlowElements(state)\n  const nodeDict: NodeDict = {}\n  elements.filter(isNodeData).forEach((node) => {\n    if (isAlgorithmNodeData(node)) {\n      const param = selectAlgorithmParams(node.id)(state) ?? {}\n      const functionPath = selectAlgorithmFunctionPath(node.id)(state)\n      const algorithmNodePostData: Node<AlgorithmNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.ALGORITHM,\n          path: functionPath,\n          param,\n        },\n      }\n      nodeDict[node.id] = algorithmNodePostData\n    } else {\n      const filePath = selectInputNodeSelectedFilePath(node.id)(state)\n      const fileType = selectInputNodeFileType(node.id)(state)\n      const param = selectInputNodeParam(node.id)(state)\n      const hdf5Path = selectInputNodeHDF5Path(node.id)(state)\n      const inputNodePosyData: Node<InputNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.INPUT,\n          path: filePath ?? '',\n          param,\n          hdf5Path: hdf5Path,\n          fileType,\n        },\n      }\n      nodeDict[node.id] = inputNodePosyData\n    }\n  })\n  return nodeDict\n}\n\nconst selectEdgeDictForRun = (state: RootState) => {\n  const edgeDict: EdgeDict = {}\n  selectFlowElements(state)\n    .filter(isEdge)\n    .forEach((edge) => {\n      edgeDict[edge.id] = edge\n    })\n  return edgeDict\n}\n","export default __webpack_public_path__ + \"static/media/optinist.e44efe32.png\";","import React from 'react'\nimport AppBar from '@mui/material/AppBar'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Typography from '@mui/material/Typography'\nimport Toolbar from '@mui/material/Toolbar'\nimport { styled } from '@mui/material/styles'\nimport FlowChart from './FlowChart/FlowChart'\nimport Visualize from './Visualize/Visualize'\nimport Experiment from './Experiment/Experiment'\nimport { useRunPipeline } from 'store/slice/Pipeline/PipelineHook'\nimport optinistLogo from './optinist.png'\n\nconst Layout: React.FC = () => {\n  const [value, setValue] = React.useState(0)\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue)\n  }\n\n  const runPipeline = useRunPipeline() // タブ切り替えによって結果取得処理が止まってしまうのを回避するため、タブの親レイヤーで呼び出している\n\n  return (\n    <RootDiv>\n      <StyledAppBar position=\"fixed\" color=\"inherit\">\n        <Toolbar variant=\"dense\">\n          <img src={optinistLogo} alt=\"optinist\" width={75} height={50} />\n          <Tabs\n            sx={{ width: '100%' }}\n            value={value}\n            onChange={handleChange}\n            centered\n            textColor=\"primary\"\n          >\n            <Tab label=\"Workflow\" {...a11yProps(0)} />\n            <Tab label=\"Visualize\" {...a11yProps(1)} />\n            <Tab label=\"Record\" {...a11yProps(2)} />\n          </Tabs>\n        </Toolbar>\n      </StyledAppBar>\n      <TabPanel value={value} index={0}>\n        <FlowChart {...runPipeline} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Visualize />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Experiment />\n      </TabPanel>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  backgroundColor: theme.palette.background.paper,\n}))\n\nconst StyledAppBar = styled(AppBar)(({ theme }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  backgroundColor: '#E1DEDB',\n}))\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: any\n  value: any\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Typography>{children}</Typography>}\n    </div>\n  )\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { selectRunPostData } from 'store/selectors/run/RunSelectors'\nimport {\n  selectPipelineIsCanceled,\n  selectPipelineIsStartedSuccess,\n  selectPipelineLatestUid,\n  selectPipelineStatus,\n} from './PipelineSelectors'\nimport { run, pollRunResult, runByCurrentUid } from './PipelineActions'\nimport { cancelPipeline } from './PipelineSlice'\nimport { selectFilePathIsUndefined } from '../InputNode/InputNodeSelectors'\nimport { useSnackbar } from 'notistack'\nimport { RUN_STATUS } from './PipelineType'\n\nconst POLLING_INTERVAL = 5000\n\nexport type UseRunPipelineReturnType = ReturnType<typeof useRunPipeline>\n\nexport function useRunPipeline() {\n  const dispatch = useDispatch()\n  const uid = useSelector(selectPipelineLatestUid)\n  const isCanceled = useSelector(selectPipelineIsCanceled)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n  const filePathIsUndefined = useSelector(selectFilePathIsUndefined)\n  const runPostData = useSelector(selectRunPostData)\n  const handleRunPipeline = React.useCallback(\n    (name: string) => {\n      dispatch(run({ runPostData: { name, ...runPostData, forceRunList: [] } }))\n    },\n    [dispatch, runPostData],\n  )\n  const handleRunPipelineByUid = React.useCallback(() => {\n    dispatch(runByCurrentUid({ runPostData }))\n  }, [dispatch, runPostData])\n  const handleCancelPipeline = React.useCallback(() => {\n    if (uid != null) {\n      dispatch(cancelPipeline())\n    }\n  }, [dispatch, uid])\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isStartedSuccess && !isCanceled && uid != null) {\n        dispatch(pollRunResult({ uid: uid }))\n      }\n    }, POLLING_INTERVAL)\n    return () => {\n      clearInterval(intervalId)\n    }\n  }, [dispatch, uid, isCanceled, isStartedSuccess])\n  const status = useSelector(selectPipelineStatus)\n  const { enqueueSnackbar } = useSnackbar()\n  // タブ移動による再レンダリングするたびにスナックバーが実行されてしまう挙動を回避するために前回の値を保持\n  const [prevStatus, setPrevStatus] = React.useState(status)\n  React.useEffect(() => {\n    if (prevStatus !== status) {\n      if (status === RUN_STATUS.FINISHED) {\n        enqueueSnackbar('Finished', { variant: 'success' })\n      } else if (status === RUN_STATUS.ABORTED) {\n        enqueueSnackbar('Aborted', { variant: 'error' })\n      } else if (status === RUN_STATUS.CANCELED) {\n        enqueueSnackbar('Canceled', { variant: 'info' })\n      }\n      setPrevStatus(status)\n    }\n  }, [status, prevStatus, enqueueSnackbar])\n  return {\n    filePathIsUndefined,\n    uid,\n    status,\n    isStartedSuccess,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n    handleCancelPipeline,\n  }\n}\n","import React from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport Close from '@mui/icons-material/Close'\nimport { SnackbarProvider, SnackbarKey, useSnackbar } from 'notistack'\n\nimport AppLayout from './components/Layout'\n\nconst App: React.FC = () => {\n  return (\n    <SnackbarProvider\n      maxSnack={5}\n      action={(snackbarKey) => (\n        <SnackbarCloseButton snackbarKey={snackbarKey} />\n      )}\n    >\n      <AppLayout />\n    </SnackbarProvider>\n  )\n}\n\nconst SnackbarCloseButton: React.FC<{ snackbarKey: SnackbarKey }> = ({\n  snackbarKey,\n}) => {\n  const { closeSnackbar } = useSnackbar()\n  return (\n    <IconButton onClick={() => closeSnackbar(snackbarKey)} size=\"large\">\n      <Close style={{ color: 'white' }} />\n    </IconButton>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  ALGORITHM_LIST_SLICE_NAME,\n  AlgorithmListType,\n} from './AlgorithmListType'\nimport { getAlgoList } from './AlgorithmListActions'\nimport { convertToAlgoListType } from './AlgorithmListUtils'\n\nexport const initialState: AlgorithmListType = {\n  isLatest: false,\n  tree: {},\n}\n\nexport const algorithmListSlice = createSlice({\n  name: ALGORITHM_LIST_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlgoList.fulfilled, (state, action) => {\n      state.tree = convertToAlgoListType(action.payload)\n      state.isLatest = true\n    })\n  },\n})\n\nexport default algorithmListSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n  DisplayData,\n  DISPLAY_DATA_SLICE_NAME,\n} from './DisplayDataType'\nimport {\n  getCsvData,\n  getHeatMapData,\n  getImageData,\n  getTimeSeriesDataById,\n  getTimeSeriesAllData,\n  getRoiData,\n  getScatterData,\n  getBarData,\n  getHTMLData,\n  getTimeSeriesInitData,\n} from './DisplayDataActions'\nimport {\n  deleteDisplayItem,\n  setNewDisplayDataPath,\n} from '../VisualizeItem/VisualizeItemActions'\n\nconst initialState: DisplayData = {\n  timeSeries: {},\n  heatMap: {},\n  image: {},\n  csv: {},\n  roi: {},\n  scatter: {},\n  bar: {},\n  html: {},\n}\n\nexport const displayDataSlice = createSlice({\n  name: DISPLAY_DATA_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        if (action.payload.deleteData) {\n          const { filePath, dataType } = action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        if (action.payload.deleteData) {\n          const { prevDataType: dataType, prevFilePath: filePath } =\n            action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(getTimeSeriesDataById.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesDataById.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesDataById.fulfilled, (state, action) => {\n        const { path, index } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].data[index] = action.payload.data[index]\n        if (action.payload.std[index] !== undefined) {\n          state.timeSeries[path].std[index] = action.payload.std[index]\n        }\n      })\n      .addCase(getTimeSeriesAllData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesAllData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesAllData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        if (action.payload.std !== undefined) {\n          state.timeSeries[path].std = action.payload.std\n        }\n      })\n      .addCase(getTimeSeriesInitData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesInitData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesInitData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        state.timeSeries[path].std = action.payload.std\n      })\n      .addCase(getHeatMapData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHeatMapData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getImageData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getCsvData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getRoiData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getRoiData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        const { data } = action.payload\n\n        // 計算\n        const roi1Ddata: number[] = data[0]\n          .map((row) =>\n            Array.from(new Set(row.filter((value) => value != null))),\n          )\n          .flat()\n        const roiUniqueIdList = Array.from(new Set(roi1Ddata))\n          .sort((n1, n2) => n1 - n2)\n          .map(String)\n\n        state.roi[path] = {\n          type: 'roi',\n          data: data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n          roiUniqueList: roiUniqueIdList,\n        }\n      })\n      .addCase(getRoiData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getScatterData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getBarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n  },\n})\n\nfunction deleteDisplayDataFn(\n  state: DisplayData,\n  filePath: string,\n  dataType: DATA_TYPE,\n) {\n  if (dataType === DATA_TYPE_SET.IMAGE) {\n    delete state.image[filePath]\n  } else if (dataType === DATA_TYPE_SET.TIME_SERIES) {\n    delete state.timeSeries[filePath]\n  } else if (dataType === DATA_TYPE_SET.CSV) {\n    delete state.csv[filePath]\n  } else if (dataType === DATA_TYPE_SET.HEAT_MAP) {\n    delete state.heatMap[filePath]\n    // } else if (dataType === DATA_TYPE_SET.ROI) {\n    //   delete state.roi[filePath]\n  } else if (dataType === DATA_TYPE_SET.SCATTER) {\n    delete state.scatter[filePath]\n  } else if (dataType === DATA_TYPE_SET.BAR) {\n    delete state.bar[filePath]\n  } else if (dataType === DATA_TYPE_SET.HTML) {\n    delete state.html[filePath]\n  }\n}\n\nexport default displayDataSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { FileUploader, FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\nimport { setUploadProgress, uploadFile } from './FileUploaderActions'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nconst initialState: FileUploader = {}\n\nexport const fileUploaderSlice = createSlice({\n  name: FILE_UPLOADER_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFileUploaderStateById(state, action: PayloadAction<string>) {\n      state[action.payload] = inistialUploaderState\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(setUploadProgress, (state, action) => {\n        const { progess, requestId } = action.payload\n        state[requestId].uploadingProgress = progess\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileName, requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          fileName,\n          isUninitialized: false,\n          pending: true,\n          fulfilled: false,\n          uploadingProgress: 0,\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { requestId } = action.meta.arg\n        const { resultPath } = action.payload\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          path: resultPath,\n          pending: false,\n          fulfilled: true,\n        }\n      })\n      .addCase(uploadFile.rejected, (state, action) => {\n        const { requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          pending: false,\n          fulfilled: false,\n          error: action.error.message,\n        }\n      })\n  },\n})\n\nexport const { setFileUploaderStateById } = fileUploaderSlice.actions\n\nexport default fileUploaderSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { uploadFile } from 'store/slice/FileUploader/FileUploaderActions'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { getFilesTree } from './FilesTreeAction'\nimport { FilesTree, FILES_TREE_SLICE_NAME } from './FilesTreeType'\nimport { convertToTreeNodeType } from './FilesTreeUtils'\n\nexport const initialState: FilesTree = {}\nexport const filesTreeSlice = createSlice({\n  name: FILES_TREE_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getFilesTree.pending, (state, action) => {\n        const fileType = action.meta.arg\n        state[fileType] = {\n          isLoading: true,\n          isLatest: false,\n          tree: [],\n        }\n      })\n      .addCase(getFilesTree.fulfilled, (state, action) => {\n        const fileTreeType = action.meta.arg\n        state[fileTreeType].tree = convertToTreeNodeType(action.payload)\n        state[fileTreeType].isLatest = true\n        state[fileTreeType].isLoading = false\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          if (state[FILE_TREE_TYPE_SET.IMAGE] != null) {\n            state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.IMAGE] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          if (state[FILE_TREE_TYPE_SET.CSV] != null) {\n            state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.CSV] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          if (state[FILE_TREE_TYPE_SET.HDF5] != null) {\n            state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.HDF5] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else {\n          if (state[FILE_TREE_TYPE_SET.ALL] != null) {\n            state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.ALL] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n        } else {\n          state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n        }\n      })\n  },\n})\n\nexport default filesTreeSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as MuiColors from '@mui/material/colors'\n\nexport type HandleTypeColor = {\n  colorMap: { [type: string]: string }\n  /**\n   * HANDLE_COLOR_PRESET_MAPのkey\n   */\n  nextKey: number\n}\n\nconst initialState: HandleTypeColor = {\n  colorMap: {\n    ImageData: MuiColors.red[500],\n    IscellData: MuiColors.indigo[500],\n    TimeSeriesData: MuiColors.yellow[500],\n    Suite2pData: MuiColors.green[500],\n    FluoData: MuiColors.orange[500],\n    BehaviorData: MuiColors.yellow[500],\n  },\n  nextKey: 0,\n}\n\nconst SLICE_NAME = 'handleTypeColor'\n\nexport const handleTypeColorSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {},\n})\n\nexport default handleTypeColorSlice.reducer\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\nimport { HDF5TreeNodeType } from './HDF5Type'\n\nexport function convertToTreeNodeType(dto: HDF5TreeDTO[]): HDF5TreeNodeType[] {\n  return dto.map((node) =>\n    node.isDir\n      ? {\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n          path: node.path,\n        }\n      : {\n          name: node.name,\n          isDir: false,\n          shape: node.shape,\n          path: node.path,\n          nbytes: node.nbytes,\n        },\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { getHDF5Tree } from './HDF5Action'\nimport { HDF5Tree, HDF5_SLICE_NAME } from './HDF5Type'\nimport { convertToTreeNodeType } from './HDF5Utils'\n\nconst initialState: HDF5Tree = {\n  isLoading: false,\n  tree: [],\n}\nexport const HDF5Slice = createSlice({\n  name: HDF5_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHDF5Tree.pending, (state, action) => {\n        state = {\n          isLoading: true,\n          tree: [],\n        }\n      })\n      .addCase(getHDF5Tree.fulfilled, (state, action) => {\n        state.tree = convertToTreeNodeType(action.payload)\n        state.isLoading = false\n      })\n  },\n})\n\nexport default HDF5Slice.reducer\n","import type { ExperimentDTO, ExperimentsDTO } from 'api/experiments/Experiments'\nimport type {\n  ExperimentListType,\n  ExperimentType,\n  ExperimentFunction,\n  EXPERIMENTS_STATUS,\n} from './ExperimentsType'\n\nexport function convertToExperimentListType(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n\nexport function convertToExperimentType(dto: ExperimentDTO): ExperimentType {\n  const functions: { [nodeId: string]: ExperimentFunction } = {}\n  Object.entries(dto.function).forEach(([_, value]) => {\n    functions[value.unique_id] = {\n      name: value.name,\n      nodeId: value.unique_id,\n      status: convertToExperimentStatus(value.success),\n      hasNWB: value.hasNWB,\n    }\n  })\n  return {\n    uid: dto.unique_id,\n    timestamp: dto.timestamp,\n    name: dto.name,\n    hasNWB: dto.hasNWB,\n    functions,\n  }\n}\n\nfunction convertToExperimentStatus(dto: string): EXPERIMENTS_STATUS {\n  switch (dto) {\n    case 'running':\n      return 'running'\n    case 'success':\n      return 'success'\n    case 'error':\n      return 'error'\n    default:\n      throw new Error('failed to convert to EXPERIMENTS_STATUS')\n  }\n}\n\nexport function convertToFlowChartList(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { EXPERIMENTS_SLICE_NAME, Experiments } from './ExperimentsType'\nimport {\n  getExperiments,\n  deleteExperimentByUid,\n  deleteExperimentByList,\n} from './ExperimentsActions'\nimport { convertToExperimentListType } from './ExperimentsUtils'\nimport {\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from '../Pipeline/PipelineActions'\n\nexport const initialState: Experiments = {\n  status: 'uninitialized',\n}\n\nexport const experimentsSlice = createSlice({\n  name: EXPERIMENTS_SLICE_NAME,\n  initialState: initialState as Experiments,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getExperiments.pending, () => {\n        return {\n          status: 'pending',\n        }\n      })\n      .addCase(getExperiments.fulfilled, (state, action) => {\n        const experimentList = convertToExperimentListType(action.payload)\n        return {\n          status: 'fulfilled',\n          experimentList,\n        }\n      })\n      .addCase(getExperiments.rejected, (state, action) => {\n        return {\n          status: 'error',\n          message: action.error.message,\n        }\n      })\n      .addCase(deleteExperimentByUid.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          delete state.experimentList[action.meta.arg]\n        }\n      })\n      .addCase(deleteExperimentByList.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          action.meta.arg.map((v) => delete state.experimentList[v])\n        }\n      })\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          const uid = action.meta.arg.uid\n          const target = state.experimentList[uid]\n          Object.entries(action.payload).forEach(([nodeId, value]) => {\n            if (value.status === 'success') {\n              target.functions[nodeId].status = 'success'\n            } else if (value.status === 'error') {\n              target.functions[nodeId].status = 'error'\n            }\n          })\n        }\n      })\n      .addMatcher(isAnyOf(run.fulfilled, runByCurrentUid.fulfilled), () => {\n        return {\n          status: 'uninitialized',\n        }\n      })\n  },\n})\n\nexport default experimentsSlice.reducer\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit'\nimport {\n  algorithmListReducer,\n  algorithmNodeReducer,\n  displayDataReducer,\n  fileUploaderReducer,\n  flowElementReducer,\n  inputNodeReducer,\n  nwbReducer,\n  filesTreeReducer,\n  handleTypeColorReducer,\n  rightDrawerReducer,\n  visualaizeItemReducer,\n  snakemakeReducer,\n  pipelineReducer,\n  hdf5Reducer,\n  experimentsReducer,\n} from './slice'\n\nexport const rootReducer = combineReducers({\n  algorithmList: algorithmListReducer,\n  algorithmNode: algorithmNodeReducer,\n  displayData: displayDataReducer,\n  fileUploader: fileUploaderReducer,\n  flowElement: flowElementReducer,\n  inputNode: inputNodeReducer,\n  handleColor: handleTypeColorReducer,\n  filesTree: filesTreeReducer,\n  nwb: nwbReducer,\n  rightDrawer: rightDrawerReducer,\n  visualaizeItem: visualaizeItemReducer,\n  snakemake: snakemakeReducer,\n  pipeline: pipelineReducer,\n  hdf5: hdf5Reducer,\n  experiments: experimentsReducer,\n})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\nexport type ThunkApiConfig<T = unknown, PendingMeta = unknown> = {\n  state: RootState\n  dispatch: AppDispatch\n  rejectValue: T\n  penfingMeta: PendingMeta\n}\n","import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme({\n  components: {\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiSelect: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from 'store/store'\n\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './Theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}