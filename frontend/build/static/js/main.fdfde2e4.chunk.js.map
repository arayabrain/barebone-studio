{"version":3,"sources":["utils/param/ParamUtils.ts","store/slice/AlgorithmNode/AlgorithmNodeSelectors.ts","store/slice/AlgorithmList/AlgorithmListUtils.ts","store/slice/AlgorithmList/AlgorithmListSelectors.ts","store/slice/AlgorithmList/AlgorithmListType.ts","const/API.ts","api/algolist/AlgoList.ts","store/slice/AlgorithmList/AlgorithmListActions.ts","store/slice/InputNode/InputNodeType.ts","store/slice/FlowElement/FlowElementType.ts","api/params/Params.ts","store/slice/FlowElement/FlowElementActions.ts","utils/nanoid/NanoIdUtils.ts","const/flowchart.ts","components/FlowChart/TreeView.tsx","api/experiments/Experiments.ts","store/slice/Experiments/ExperimentsType.ts","store/slice/Experiments/ExperimentsActions.ts","store/slice/InputNode/InputNodeActions.ts","store/slice/FlowElement/FlowElementUtils.ts","api/run/RunUtils.ts","api/files/Files.ts","store/slice/FileUploader/FileUploaderType.ts","store/slice/FileUploader/FileUploaderActions.ts","store/slice/FlowElement/FlowElementSlice.ts","store/slice/FlowElement/FlowElementSelectors.ts","api/nwb/NWB.ts","store/slice/NWB/NWBType.ts","store/slice/NWB/NWBAction.ts","store/slice/NWB/NWBSlice.ts","store/slice/RightDrawer/RightDrawerSlice.ts","utils/EqualityUtils.ts","store/slice/NWB/NWBSelectors.ts","components/Accordion.tsx","components/ParamFormItemCreator.tsx","components/FlowChart/NWB.tsx","api/snakemake/Snakemake.ts","store/slice/Snakemake/SnakemakeType.ts","store/slice/Snakemake/SnakemakeAction.ts","store/slice/Snakemake/SnakemakeSlice.ts","store/slice/Snakemake/SnakemakeSelectors.ts","components/FlowChart/Snakemake.tsx","store/slice/Pipeline/PipelineType.ts","store/slice/DisplayData/DisplayDataType.ts","store/slice/DisplayData/DisplayDataUtils.ts","store/slice/Pipeline/PipelineUtils.ts","store/slice/Pipeline/PipelineSelectors.ts","api/run/Run.ts","store/slice/Pipeline/PipelineActions.ts","store/slice/Pipeline/PipelineSlice.ts","components/RunButtons.tsx","components/ToolBar.tsx","store/slice/InputNode/InputNodeUtils.ts","store/slice/InputNode/InputNodeSelectors.ts","components/FlowChart/FlowChartNode/HandleColorHook.ts","store/slice/HandleTypeColor/HandleTypeColorSelectors.ts","store/slice/FilesTree/FilesTreeSelectors.ts","store/slice/FilesTree/FilesTreeType.ts","store/slice/FilesTree/FilesTreeAction.ts","store/slice/FilesTree/FilesTreeUtils.ts","components/FileSelectDialog.tsx","components/FlowChart/FlowChartNode/LinerProgressWithLabel.tsx","store/slice/FileUploader/FileUploaderInitlalState.ts","store/slice/FileUploader/FileUploaderSelectors.ts","store/slice/FileUploader/FileUploaderHook.ts","components/FlowChart/FlowChartNode/FileSelect.tsx","components/FlowChart/FlowChartNode/FlowChartUtils.ts","components/FlowChart/FlowChartNode/ImageFileNode.tsx","store/slice/DisplayData/DisplayDataSelectors.ts","store/slice/VisualizeItem/VisualizeItemType.ts","store/slice/VisualizeItem/VisualizeItemUtils.ts","store/slice/VisualizeItem/VisualizeItemSelectors.ts","api/outputs/Outputs.ts","store/slice/DisplayData/DisplayDataActions.ts","store/slice/VisualizeItem/VisualizeItemActions.ts","store/slice/VisualizeItem/VisualizeItemSlice.ts","components/Visualize/DataContext.tsx","components/Visualize/Plot/HeatMapPlot.tsx","components/Visualize/Plot/ImagePlot.tsx","components/Visualize/Plot/RoiPlot.tsx","components/Visualize/Plot/ScatterPlot.tsx","components/Visualize/Plot/CsvPlot.tsx","components/Visualize/Plot/TimeSeriesPlot.tsx","components/Visualize/Plot/BarPlot.tsx","components/Visualize/Plot/HTMLPlot.tsx","components/Visualize/DisplayDataItem.tsx","components/FlowChart/FlowChartNode/AlgorithmOutputDialog.tsx","components/FlowChart/FlowChartNode/AlgorithmNode.tsx","store/slice/InputNode/InputNodeSlice.ts","components/FlowChart/FlowChartNode/CsvFileNode.tsx","store/slice/HDF5/HDF5Selectors.ts","api/hdf5/HDF5.ts","store/slice/HDF5/HDF5Type.ts","store/slice/HDF5/HDF5Action.ts","components/FlowChart/FlowChartNode/HDF5FileNode.tsx","components/FlowChart/FlowChartNode/FluoFileNode.tsx","components/FlowChart/FlowChartNode/BehaviorFileNode.tsx","components/FlowChart/FlowChartNode/ReactFlowNodeTypesConst.ts","components/FlowChart/CustomEdge.tsx","components/FlowChart/ReactFlowComponent.tsx","store/slice/RightDrawer/RightDrawerSelectors.ts","store/slice/AlgorithmNode/AlgorithmNodeType.ts","store/slice/AlgorithmNode/AlgorithmNodeActions.ts","store/slice/AlgorithmNode/AlgorithmNodeSlice.ts","components/FlowChart/AlgorithmParamForm.tsx","components/FlowChart/RightDrawer.tsx","components/FlowChart/FlowChart.tsx","components/Visualize/VisualizeItemAddButton.tsx","components/Visualize/VisualizeItemLayoutMenuIcon.tsx","components/Visualize/FilePathSelect.tsx","components/Visualize/VisualizeItem.tsx","components/Visualize/FlexItemList.tsx","components/Visualize/Editor/GradientColorPicker.tsx","components/Visualize/Editor/ImageItemEditor.tsx","components/Visualize/Editor/CsvItemEditor.tsx","components/Visualize/Editor/HeatmapItemEditor.tsx","components/Visualize/Editor/TimeSeriesItemEditor.tsx","components/Visualize/Editor/RoiItemEditor.tsx","components/Visualize/Editor/ScatterItemEditor.tsx","components/Visualize/Editor/BarItemEditor.tsx","components/Visualize/VisualizeItemEditor.tsx","components/Visualize/Visualize.tsx","store/slice/Experiments/ExperimentsSelectors.ts","components/Experiment/ExperimentStatusIcon.tsx","components/Experiment/Button/DownloadButton.tsx","components/Experiment/CollapsibleTable.tsx","components/Experiment/Button/DeleteButton.tsx","components/Experiment/Button/ImportButton.tsx","components/Experiment/ExperimentTable.tsx","components/Experiment/Experiment.tsx","store/selectors/run/RunSelectors.ts","components/optinist.png","components/Layout.tsx","store/slice/Pipeline/PipelineHook.ts","App.tsx","reportWebVitals.ts","store/slice/AlgorithmList/AlgorithmListSlice.ts","store/slice/DisplayData/DisplayDataSlice.ts","store/slice/FileUploader/FileUploaderSlice.ts","store/slice/FilesTree/FilesTreeSlice.ts","store/slice/HandleTypeColor/HandleTypeColorSlice.ts","store/slice/HDF5/HDF5Utils.ts","store/slice/HDF5/HDF5Slice.ts","store/slice/Experiments/ExperimentsUtils.ts","store/slice/Experiments/ExperimentsSlice.ts","store/store.ts","Theme.ts","index.tsx"],"names":["getChildParam","path","ParamMap","result","Object","values","node","isParamChild","children","param","type","convertToParamMap","dto","keyList","entries","forEach","name","value","kList","Array","isArray","isDictObject","concat","join","push","selectAlgorithmNodeById","nodeId","state","algorithmNode","selectAlgorithmName","selectAlgorithmParams","params","isAlgoChild","algoNode","getAlgoChild","algoList","algoName","convertToAlgoListType","prototype","hasOwnProperty","call","functionPath","args","returns","selectAlgorithmList","algorithmList","selectAlgorithmListIsLated","isLatest","selectAlgorithmListTree","tree","ALGORITHM_LIST_SLICE_NAME","HOST","process","PORT","BASE_URL","getAlgoListApi","a","axios","get","response","data","getAlgoList","createAsyncThunk","_","thunkAPI","rejectWithValue","INPUT_NODE_SLICE_NAME","FILE_TYPE_SET","FLOW_ELEMENT_SLICE_NAME","NODE_TYPE_SET","getAlgoParamsApi","addAlgorithmNode","addInputNode","createAction","nanoid","customAlphabet","getNanoId","INITIAL_IMAGE_ELEMENT_ID","INITIAL_ALGO_STYLE","width","height","padding","borderRadius","INITIAL_DATA_STYLE","border","REACT_FLOW_NODE_TYPE_KEY","AlgorithmTreeView","React","memo","dispatch","useDispatch","useSelector","useEffect","TreeView","sx","flexGrow","defaultCollapseIcon","defaultExpandIcon","TreeItem","label","InputNodeComponent","fileName","nodeName","fileType","map","i","AlgoNodeComponent","onAlgoNodeClick","newNode","id","toFixed","LeafItem","AddButton","onClick","nodeType","reactFlowNodeType","onDataNodeClick","IconButton","style","size","Typography","variant","textOverflow","overflow","display","styled","treeItemClasses","iconContainer","margin","getExperimentsApi","deleteExperimentByUidApi","uid","delete","deleteExperimentByListApi","uidList","post","importExperimentByUidApi","downloadExperimentNwbApi","responseType","downloadExperimentConfigApi","EXPERIMENTS_SLICE_NAME","getExperiments","deleteExperimentByUid","deleteExperimentByList","importExperimentByUid","setInputNodeFilePath","isNodeData","isNode","isAlgorithmNodeData","getLabelByPath","filePath","length","getFileName","split","reverse","isInputNodePostData","isInputNodeData","isAlgorithmNodePostData","FILE_TREE_TYPE_SET","getFilesTreeApi","file_type","uploadFileApi","config","formData","FILE_UPLOADER_SLICE_NAME","setUploadProgress","uploadFile","requestId","getUploadConfig","percent","total","progess","resultPath","file_path","onUpdateProgressFn","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","initialFlowPosition","x","y","zoom","initialElementCoord","initialState","flowElements","position","flowPosition","elementCoord","flowElementSlice","createSlice","reducers","setFlowPosition","action","payload","setFlowElements","deleteFlowElements","removeElements","deleteFlowElementsById","element","find","edge","undefined","editFlowElementPositionById","coord","elementIdx","findIndex","ele","targetItem","extraReducers","builder","addCase","fulfilled","meta","arg","targetPosition","Position","Left","sourcePosition","Right","newPosition","updateElementCoord","targetNode","newNodeList","nodeList","edgeList","min","max","random","actions","selectFlowElements","flowElement","selectFlowPosition","selectNodeById","filter","selectNodeLabelById","getNWBParamsApi","getNWBParams","nwbSlice","updateParam","newValue","RIGHT_DRAWER_MODE","open","mode","currendNodeId","rightDrawerSlice","openRightDrawer","closeRightDrawer","toggleParamForm","toggleNwb","toggleSnakemake","elm","arrayEqualityFn","b","every","v","twoDimarrayEqualityFn","selectNwb","nwb","selectNwbParamsKeyList","keys","selectNwbParam","paramKey","selectNwbParamsValue","target","Error","Accordion","props","disableGutters","elevation","square","borderColor","theme","palette","divider","boxShadow","borderBottom","createParamFormItemComponent","paramSelector","paramValueSelector","paramUpdateActionCreator","useParamValueUpdate","ParamItemForString","updateParamAction","TextField","onChange","e","multiline","ParamItemForNumber","InputLabelProps","shrink","event","Number","ParamItemForBoolean","Switch","checked","ParamItemForValueType","ParamChildItem","Box","marginTop","spacing","marginBottom","alignItems","verticalAlign","ParamItem","AccordionSummary","expandIcon","AccordionDetails","NWBSettingButton","Button","endIcon","NWBSettingContents","paramKeyList","className","Component","getSnakemakeParamsApi","SNAKEMAKE_SLICE_NAME","getSnakemakeParams","SnakemakeSlice","selectSnakemakeParams","snakemake","selectSnakemake","selectSnakemakeParamsKeyList","selectSnakemakeParam","selectSnakemakeParamsValue","SnakemakeButton","SnakemakeContents","PIPELINE_SLICE_NAME","RUN_STATUS","NODE_RESULT_STATUS","RUN_BTN_OPTIONS","RUN_NEW","RUN_ALREADY","RUN_BTN_LABELS","DISPLAY_DATA_SLICE_NAME","DATA_TYPE_SET","toDataType","isNodeResultPending","nodeResult","status","isNodeResultSuccess","isStartedPipeline","pipeline","getInitialRunResult","runPostData","initialResult","convertToOutputPath","selectPipelineLatestUid","currentPipeline","selectStartedPipeline","run","selectPipelineRunBtn","runBtn","selectRunResultPendingNodeIdList","runResult","isNodeResultPendingAndNodeId","selectPipelineStatus","selectPipelineIsCanceled","selectPipelineIsStartedSuccess","isNodeResultSuccessAndNodeId","selectPipelineNodeResultStatus","includes","selectPipelineNodeResultOutputPaths","outputPaths","runApi","runByUidApi","pendingNodeIdList","responseData","runByCurrentUid","currentUid","getState","pollRunResult","pipelineSlice","cancelPipeline","setRunBtnOption","runBtnOption","nodeResultDto","outputPath","message","convertToRunResult","rejected","addMatcher","isAnyOf","pending","RunButtons","isStartedSuccess","filePathIsUndefined","handleCancelPipeline","handleRunPipeline","handleRunPipelineByUid","useState","dialogOpen","setDialogOpen","enqueueSnackbar","useSnackbar","menuOpen","setMenuOpen","anchorRef","useRef","handleClose","current","contains","uidExists","ButtonGroup","ref","disabled","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","option","MenuItem","selected","handleMenuItemClick","marginRight","RunDialog","handleRun","setName","error","setError","Dialog","onClose","DialogTitle","DialogContent","autoFocus","fullWidth","helperText","DialogActions","color","ToolBar","float","textAlign","top","right","zIndex","textTransform","isCsvInputNode","inputNode","isHDF5InputNode","selectInputNodeById","selectInputNodeDefined","selectCsvInputNodeSelectedFilePath","selectedFilePath","selectImageInputNodeSelectedFilePath","selectHDF5InputNodeSelectedFilePath","selectFilePathIsUndefined","selectCsvInputNodeParam","selectInputNodeHDF5Path","item","hdf5Path","useHandleColor","key","handleColor","colorMap","selectFilesTree","filesTree","FILES_TREE_SLICE_NAME","getFilesTree","convertToTreeNodeType","isdir","isDir","nodes","getNodeByPath","FileSelectDialog","initialFilePath","onClickCancel","onClickOk","title","multiSelect","setSelectedFilePath","useTheme","dividers","FileTreeView","FilePathSelectedListView","selectFilesTreeNodes","selectFilesIsLatest","isLoading","selectFilesIsLoading","useFileTree","onCheckFile","selectedPath","onCheckDir","childrenFilePathList","from","Set","LinearProgress","disableSelection","onNodeSelect","nodeIds","isDirNodeByPath","TreeNode","allChecked","allNotChecked","indeterminate","icon","htmlColor","TreeItemLabel","checkboxProps","stopPropagation","childNode","fontSize","Checkbox","disableRipple","text","LinearProgressWithLabel","mr","minWidth","inistialUploaderState","isUninitialized","uploadingProgress","selectFileUploader","fileUploader","useFileUploader","onUploadFile","useCallback","uninitialized","selectFileUploadIsUninitialized","selectUploadFilePath","selectFileUploadIsPending","selectFileUploadIsFulfilled","progress","selectFileUploadProgress","selectFileUploadError","FileSelect","onChangeFilePath","marginLeft","FileSelectImple","onSelectFile","fileTreeType","selectButtonLabel","uploadButtonLabel","inputRef","setOpen","accept","getFileInputAccept","click","preventDefault","files","file","FormData","append","visibility","toHandleId","getHandleType","handleId","isValidConnection","connection","sourceHandle","targetHandle","sourceHandleStyle","ImageFileNode","ImageFileNodeImple","elementSelected","returnType","imageColor","background","alpha","primary","light","selectDisplayData","displayData","selectTimeSeriesData","timeSeries","selectTimeSeriesDataIsInitialized","selectHeatMapDataIsInitialized","heatMap","selectImageData","image","selectImageDataIsInitialized","selectImageDataIsPending","selectCsvDataIsInitialized","csv","selectCsvDataError","selectCsvDataIsPending","selectCsvDataIsFulfilled","selectRoiData","roi","selectRoiDataIsInitialized","selectRoiDataIsFulfilled","selectScatterDataIsInitialized","scatter","selectBarDataIsInitialized","bar","selectHTMLDataIsInitialized","html","VISUALIZE_ITEM_SLICE_NAME","VISUALIZE_ITEM_TYPE_SET","isDisplayDataItem","itemType","isImageItem","dataType","isTimeSeriesItem","isCsvItem","isHeatMapItem","isScatterItem","selectSelectedVisualizeItemId","visualaizeItem","selectedItemId","selectVisualizeImageItemIdList","items","itemId","selectVisualizeItemById","isWorkflowDialog","selectVisualizeItems","selectVisualizeItemLayout","layout","selectVisualizeItemWidth","selectVisualizeItemHeight","selectVisualizeDataType","selectVisualizeDataNodeId","selectVisualizeDataFilePath","selectImageItemFilePath","selectTimeSeriesItemFilePath","selectRoiItemFilePath","roiItem","selectImageItemShowticklabels","showticklabels","selectImageItemZsmooth","zsmooth","selectImageItemStartIndex","startIndex","selectImageItemEndIndex","endIndex","selectImageItemShowLine","showline","selectImageItemShowGrid","showgrid","selectImageItemShowScale","showscale","selectImageItemColors","colors","selectImageItemAlpha","selectImageItemRoiAlpha","roiAlpha","selectImageItemSaveFilename","saveFileName","selectImageItemSaveFormat","saveFormat","selectTimeSeriesItemOffset","offset","selectTimeSeriesItemSpan","span","selectTimeSeriesItemShowGrid","selectTimeSeriesItemShowLine","selectTimeSeriesItemShowTickLabels","selectTimeSeriesItemZeroLine","zeroline","selectTimeSeriesItemXrange","xrange","selectTimeSeriesItemDrawOrderList","drawOrderList","selectTimeSeriesItemRefRoiUniqueList","refImageItemId","imageItem","roiUniqueList","selectTimeSeriesItemKeys","dataKeys","selectRoiItemMaxNumber","roiFilePath","roiData","arr","selectHeatMapItemShowScale","selectHeatMapItemColors","selectCsvItemTranspose","transpose","selectCsvItemSetHeader","setHeader","selectCsvItemSetIndex","setIndex","selectScatterItemXIndex","xIndex","selectScatterItemYIndex","yIndex","selectDisplayDataIsSingle","targetFilePath","getTimeSeriesInitDataApi","getTimeSeriesDataByIdApi","index","getTimeSeriesAllDataApi","getHeatMapDataApi","getImageDataApi","start_index","end_index","getCsvDataApi","getRoiDataApi","getScatterDataApi","getBarDataApi","getHTMLDataApi","getTimeSeriesInitData","getTimeSeriesDataById","getTimeSeriesAllData","getHeatMapData","getImageData","getCsvData","getRoiData","getScatterData","getBarData","getHTMLData","setImageItemClikedDataId","clickedDataId","selectingImageArea","range","x1","x2","y1","y2","selectedZList","z","zNum","String","selectedZ","deleteDisplayItem","setNewDisplayDataPath","displayDataCommonInitialValue","imageItemInitialValue","rgb","activeIndex","duration","timeSeriesItemInitialValue","left","maxIndex","heatMapItemInitialValue","csvItemInitialValue","roiItemInitialValue","scatterItemInitialValue","barItemInitialValue","hdf5ItemInitialValue","htmlItemInitialValue","fluoItemInitialValue","behaviorItemInitialValue","getDisplayDataItemInitialValue","visualaizeItemSlice","pushInitialItemToNewRow","newItemId","addInitialItemFn","insertInitialItemToNextColumn","targetItemId","targetRowIndex","row","targetColumnIndex","indexOf","splice","addItemForWorkflowDialog","maxId","getMaxItemId","deleteAllItemForWorkflowDialog","setItemSize","selectItem","setRoiItemFilePath","setFilePath","setImageItemFilePath","setTimeSeriesItemFilePath","setHeatMapItemFilePath","resetImageActiveIndex","resetImageActiveIndexFn","incrementImageActiveIndex","decrementImageActiveIndex","setImageActiveIndex","setImageItemShowticklabels","setImageItemZsmooth","setImageItemShowLine","setImageItemShowGrid","setImageItemShowScale","setImageItemColors","setImageItemStartIndex","setImageItemEndIndex","setImageItemAlpha","setImageItemRoiAlpha","setImageItemDuration","setImageItemSaveFormat","setImageItemSaveFileName","setTimeSeriesItemOffset","setTimeSeriesItemSpan","setTimeSeriesItemShowGrid","setTimeSeriesItemShowLine","setTimeSeriesItemShowTickLabels","setTimeSeriesItemZeroLine","setTimeSeriesItemXrangeLeft","setTimeSeriesItemXrangeRight","setTimeSeriesItemDrawOrderList","setTimeSeriesItemMaxIndex","setTimeSeriesRefImageItemId","setHeatMapItemShowScale","setHeatMapItemColors","setCsvItemTranspose","setCsvItemSetHeader","setCsvItemSetIndex","setScatterItemXIndex","setScatterItemYIndex","imageItemId","idList","reduce","nextId","DisplayDataContext","createContext","NaN","HeatMapPlot","useContext","isPending","isInitialized","selectHeatMapDataError","isFulfilled","selectHeatMapDataIsFulfilled","HeatMapImple","heatMapData","heatMapDataEqualtyFn","colorscale","useMemo","parseFloat","offsets","hoverongaps","showlegend","dragmode","t","l","autosize","displayModeBar","responsive","ImagePlot","selectImageDataError","ImagePlotImple","selectImageItemActiveIndex","ImagePlotChart","imageData","selectActiveImageData","imageDataEqualtyFn","timeDataMaxIndex","maxIdx","selectRoiItemIndex","colorscaleRoi","createColormap","colormap","nshades","format","rgba2hex","replace","hovertemplate","new_i","floor","zmin","zmax","selectMode","setSelectMode","onSelecting","callback","timeoutId","delay","clearTimeout","setTimeout","debounce","xaxis","autorange","autotick","ticks","yaxis","automargin","toImageButtonOptions","filename","ml","PlayBack","FormControlLabel","m","control","points","curveNumber","toString","maxSize","selectImageItemDuration","intervalRef","clearInterval","onPlayClick","setInterval","onDurationChange","inputProps","step","Slider","defaultValue","valueLabelDisplay","marks","activeThumb","newIndex","rgba","r","g","outParts","substring","part","RoiPlot","selectRoiDataError","RoiPlotImple","idx","ScatterPlot","selectScatterDataError","selectScatterDataIsFulfilled","ScatterPlotImple","scatterData","scatterDataEqualityFn","textposition","textfont","family","marker","font","aArray","bArray","aKey","CsvPlot","CsvPlotImple","PresentationalCsvPlot","csvData","col","header","headerData","field","headerName","rows","row_id","rowObj","fromEntries","columns","TimeSeriesPlot","selectTimeSeriesDataError","selectTimeSeriesDataIsFulfilled","TimeSeriesPlotImple","timeSeriesData","timeSeriesDataEqualityFn","dataXrange","dataStd","std","selectTimeSeriesStd","colorScale","activeIdx","mean","sqrt","pow","visible","line","error_y","array","annotations","xref","yref","arrowhead","ax","ay","onLegendClick","clickNumber","newDrawOrderList","aValue","bKey","bValue","nestEqualityFun","BarPlot","selectBarDataError","selectBarDataIsFulfilled","BarPlotImple","barData","barDataEqualityFn","HTMLPlot","selectHTMLDataError","selectHTMLDataIsFulfilled","HTMLPlotImple","htmlData","dangerouslySetInnerHTML","__html","DisplayDataItem","Provider","DisplayPlot","AlgorithmOutputDialog","closeFn","TitleWithCloseButton","pt","px","OutputViewer","p","outputKeyList","selectPipelineNodeResultOutputKeyList","selectedOutoutKey","setSelectedOutputKey","OutputSelectTabs","onSelectOutput","DisplayDataView","outputKey","Tabs","scrollButtons","tabsClasses","opacity","Tab","selectPipelineNodeResultOutputFilePath","selectPipelineNodeResultOutputFileDataType","selectVisualizeItemIdForWorkflowDialog","mx","my","leftHandleStyle","rightHandleStyle","AlgorithmNode","AlgorithmNodeImple","isConnectable","useStatus","AlgoName","AlgoArgs","AlgoReturns","Message","paddingLeft","main","algoArgs","algoListChild","selectAlgoArgs","algoInfoListEqualtyFn","info","algoInfo","ArgHandle","algoReturns","selectAlgoReturns","ReturnHandle","isNone","hex_color","isHover","setHover","rgb_color","hex","exec","parseInt","hexToRgb","onMouseEnter","onMouseLeave","Tooltip","arrow","latestUid","errorMsg","selectPipelineNodeResultMessage","anchorElRef","Popover","anchorOrigin","vertical","horizontal","FormHelperText","inputNodeSlice","deleteInputNode","setCsvInputNodeParam","setInputNodeHDF5Path","newState","CsvFileNode","CsvFileNodeImple","ParamSettingDialog","selectCsvInputNodeParamSetHeader","setSetHeader","selectCsvInputNodeParamSetIndex","setSetIndex","selectCsvInputNodeParamTranspose","setTranspose","CsvPreview","otherProps","selectHDF5","hdf5","getHDF5TreeApi","HDF5_SLICE_NAME","getHDF5Tree","HDF5FileNode","HDF5FileNodeImple","ItemSelect","structureFileName","Structure","useHDF5Tree","shape","nbytes","FluoFileNode","FluoFileNodeImple","fluoColor","BehaviorFileNode","BehaviorFileNodeImple","behaviorColor","reactFlowNodeTypes","reactFlowEdgeTypes","buttonedge","sourceX","sourceY","targetX","targetY","arrowHeadType","markerEndId","edgePath","getBezierPath","markerEnd","getMarkerEnd","getEdgeCenter","edgeCenterX","edgeCenterY","d","foreignObjectSize","ReactFlowComponent","elements","onElementsRemove","elementsToRemove","onConnect","addEdge","animated","onDragOver","dataTransfer","dropEffect","onNodeDragStop","nodeTypes","edgeTypes","defaultPosition","defaultZoom","onMoveEnd","selectRightDrawerIsOpen","rightDrawer","selectRightDrawerMode","selectRightDrawerCurrentNodeId","ALGORITHM_NODE_SLICE_NAME","getAlgoParams","algorithmNodeSlice","isUpdated","AlgorithmParamForm","ParamFormContext","algoParamIsLoaded","selectAlgorithmParamsExit","selectAlgorithmParamsKeyList","selectAlgorithmParam","selectAlgorithmParamsValue","Contents","ParamFormConetent","StyledDrawer","Drawer","flexShrink","drawerClasses","paper","MainContents","RightDrawer","anchor","Toolbar","Divider","FlowChart","RootDiv","DrawerContents","drawerWidth","flexDirection","transitions","create","easing","sharp","leavingScreen","easeOut","enteringScreen","VisualizeItemAddButton","StyledPaper","justifyContent","StyledButton","borderWidth","DisplayDataItemLayoutMenuIcon","isSingleData","PresentationalLayoutMenuIcon","onClickDeleteMenu","deleteData","onClickInsertMenu","Menu","ListItemIcon","ListItemText","FilePathSelect","selectedNodeId","onSelect","inputNodeFilePathInfoList","inputNodes","selectInputNode","toDataTypeFromFileType","inputNodeDataType","algorithmNodeOutputPathInfoList","selectPipelineNodeResultSuccessList","paths","onSelectHandle","menuItemList","pathInfo","pathElm","ListSubheader","FormControl","maxWidth","InputLabel","Select","onOpen","VisualizeItem","isSelected","movingSize","setMovingSize","onCommitSize","onMouseDownX","useMouseDragHandler","downEvent","movingX","screenX","movingWidth","onMouseMove","moveEvent","newWidth","MIN_WIDTH","onMouseUp","onMouseDownY","movingY","screenY","movingHeight","newHeight","MIN_HEIFHT","onMouseDownXY","useItemDragResize","ItemHeader","cursor","onMouseDown","itemDataType","FilePathSelectItem","RefImageItemIdSelect","RoiSelect","newFilePath","newDataType","basePayload","prevDataType","prevFilePath","itemIdList","selectedRefImageItemId","selectTimeSeriesItemRefImageItemId","isNaN","dependencies","document","addEventListener","removeEventListener","once","roiItemNodeId","selectRoiItemNodeId","roiItemFilePath","FlexItemList","flexWrap","GradientColorPicker","dispatchSetColor","maxStops","paletteHeight","onPaletteChange","colorCode","rgbStr","flatStyle","WrappedSketchPicker","c","ImageItemEditor","SelectedItemIdContext","newPath","onSelectImageFile","Showticklabels","ShowLine","ShowGrid","ShowScale","Zsmooth","Alpha","inputError","RoiAlpha","SaveFig","StartEndIndex","onChangeStartIndex","onChangeEndIndex","CsvItemEditor","Transpose","SetHeader","SetIndex","HeatmapItemEditor","TimeSeriesItemEditor","Offset","Span","ShowTickLabels","ZeroLine","Xrange","newLeft","newRight","LegendSelect","handleChange","drawIndexMap","mt","unmountOnExit","RoiItemEditor","ScatterItemEditor","XIndex","YIndex","BarItemEditor","VisualizeItemEditor","DisplayDataItemEditor","DisplayEditor","StyledDrawerContents","Visualize","selectExperiments","experiments","selectExperimentsSatusIsUninitialized","selectExperimentsSatusIsFulfilled","selectExperimentsSatusIsError","selectExperimentsErrorMessage","selectExperimentList","experimentList","selectExperiment","selectExperimentName","selectExperimentFunction","functions","ExperimentStatusIcon","NWBDownloadButton","ExperimentUidContext","url","setFileUrl","URL","createObjectURL","Blob","revokeObjectURL","href","download","ConfigDownloadButton","CollapsibleTable","TableRow","TableCell","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","gutterBottom","component","Table","Head","Body","TableHead","nodeIdList","selectExperimentFunctionNodeIdList","TableBody","TableRowOfFunction","selectExperimentFunctionName","selectExperimentFunctionStatus","scope","DeleteButton","ImportButton","unwrap","then","ExperimentTable","isError","TableImple","ExperimentsErrorView","Alert","severity","AlertTitle","order","setOrder","sortTarget","setSortTarget","checkedList","setCheckedList","onCheckBoxClick","TableContainer","HeadItem","sortHandler","property","sort","getComparator","expData","RowItem","TableSortLabel","active","direction","timestamp","selectExperimentTimeStamp","statusList","f","selectExperimentStatus","Fragment","tableCellClasses","root","borderBottomWidth","orderBy","descendingComparator","Experiment","selectRunPostData","nwbParam","selectNwbParams","snakemakeParam","edgeListForRun","isEdge","selectEdgeListForRun","selectNodePostDataListForRun","forceRunList","selectForceRunList","selectInputNodeSelectedFilePath","selectInputNodeFileType","selectInputNodeParam","backgroundColor","StyledAppBar","AppBar","drawer","TabPanel","other","hidden","a11yProps","Layout","setValue","runPipeline","isCanceled","intervalId","prevStatus","setPrevStatus","useRunPipeline","src","optinistLogo","alt","centered","textColor","SnackbarCloseButton","snackbarKey","closeSnackbar","App","maxSnack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","algorithmListSlice","deleteDisplayDataFn","displayDataSlice","roi1Ddata","flat","roiUniqueIdList","n1","n2","fileUploaderSlice","setFileUploaderStateById","currentState","filesTreeSlice","ImageData","MuiColors","IscellData","TimeSeriesData","Suite2pData","FluoData","BehaviorData","nextKey","handleTypeColorSlice","HDF5Slice","convertToExperimentType","function","unique_id","postion","convertToExperimentStatus","success","experimentsSlice","convertToExperimentListType","rootReducer","combineReducers","algorithmListReducer","algorithmNodeReducer","displayDataReducer","fileUploaderReducer","flowElementReducer","inputNodeReducer","handleTypeColorReducer","filesTreeReducer","nwbReducer","rightDrawerReducer","visualaizeItemReducer","snakemakeReducer","pipelineReducer","hdf5Reducer","experimentsReducer","store","configureStore","reducer","createTheme","components","MuiTextField","defaultProps","MuiSelect","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.fdfde2e4.chunk.js","sourcesContent":["import {\n  ParamDTO,\n  ParamChild,\n  ParamParent,\n  ParamType,\n  ParamMap,\n} from './ParamType'\n\nexport function getChildParam(\n  path: string,\n  ParamMap: ParamMap,\n): ParamChild | null {\n  let result: ParamChild | null = null\n  for (const node of Object.values(ParamMap)) {\n    if (isParamChild(node)) {\n      if (node.path === path) {\n        result = node\n      }\n    } else {\n      result = getChildParam(path, node.children)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function isParamChild(param: ParamType): param is ParamChild {\n  return param.type === 'child'\n}\n\nexport function isParamParent(param: ParamType): param is ParamParent {\n  return param.type === 'parent'\n}\n\nfunction isDictObject(value: unknown): value is { [key: string]: unknown } {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst PATH_SEPARATOR = '/'\n\nexport function convertToParamMap(dto: ParamDTO, keyList?: string[]): ParamMap {\n  const ParamMap: ParamMap = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    const kList = keyList ?? []\n    if (isDictObject(value)) {\n      kList.push(name)\n      ParamMap[name] = {\n        type: 'parent',\n        children: convertToParamMap(value, kList),\n      }\n    } else {\n      ParamMap[name] = {\n        type: 'child',\n        value,\n        path: kList.concat([name]).join(PATH_SEPARATOR),\n      }\n    }\n  })\n  return ParamMap\n}\n\nexport function equalsParamMap(a: ParamMap, b: ParamMap) {\n  if (a === b) {\n    return true\n  }\n  const aArray = Object.keys(a)\n  const bArray = Object.keys(b)\n  return (\n    aArray.length === bArray.length &&\n    aArray.every((aKey) => {\n      const aValue = a[aKey]\n      const bValue = b[aKey]\n      return equalsParam(aValue, bValue)\n    })\n  )\n}\n\nfunction equalsParam(a: ParamType, b: ParamType): boolean {\n  if (a === b) {\n    return true\n  }\n  if (isParamChild(a) && isParamChild(b)) {\n    return equalsParamChild(a, b)\n  } else if (isParamParent(a) && isParamParent(b)) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      aArray.length === bArray.length &&\n      aArray.every((aKey) => {\n        const aValue = a.children[aKey]\n        const bValue = b.children[aKey]\n        return equalsParam(aValue, bValue)\n      })\n    )\n  } else {\n    return false\n  }\n}\n\nfunction equalsParamChild(a: ParamChild, b: ParamChild) {\n  return a.path === b.path && a.value === b.value\n}\n","import { RootState } from 'store/store'\n\nimport { getChildParam } from 'utils/param/ParamUtils'\n\nexport const selectAlgorithmNode = (state: RootState) => state.algorithmNode\n\nexport const selectAlgorithmNodeById = (nodeId: string) => (state: RootState) =>\n  state.algorithmNode[nodeId]\n\nexport const selectAlgorithmNodeDefined =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(state.algorithmNode).includes(nodeId)\n\nexport const selectAlgorithmFunctionPath =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).functionPath\n\nexport const selectAlgorithmName = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).name\n\nexport const selectAlgorithmParams = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).params\n\nexport const selectAlgorithmIsUpdated =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).isUpdated\n\nexport const selectAlgorithmParamsExit =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).params !== null\n\nexport const selectAlgorithmParamsKeyList =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(selectAlgorithmNodeById(nodeId)(state)?.params ?? {})\n\nexport const selectAlgorithmParamsValue =\n  (nodeId: string, path: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmParam =\n  (nodeId: string, paramKey: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      return params[paramKey]\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n","import { AlgoListDTO, AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  AlgorithmNodeType,\n  AlgorithmChild,\n  AlgorithmParent,\n  AlgorithmListTree,\n} from './AlgorithmListType'\n\nexport function isAlgoChild(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmChild {\n  return algoNode.type === 'child'\n}\n\nexport function isAlgoParent(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmParent {\n  return algoNode.type === 'parent'\n}\n\nexport function getAlgoChild(\n  algoList: AlgorithmListTree,\n  algoName: string,\n): AlgorithmChild | null {\n  let result: AlgorithmChild | null = null\n  for (const [name, node] of Object.entries(algoList)) {\n    if (isAlgoChild(node)) {\n      if (name === algoName) {\n        result = node\n      }\n    } else {\n      result = getAlgoChild(node.children, algoName)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function convertToAlgoListType(dto: AlgoListDTO) {\n  const algoList: AlgorithmListTree = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    if (Object.prototype.hasOwnProperty.call(value, 'children')) {\n      algoList[name] = {\n        type: 'parent',\n        children: convertToAlgoListType(\n          (\n            value as {\n              children: AlgoListDTO\n            }\n          ).children as AlgoListDTO,\n        ),\n      }\n    } else {\n      const dto = value as {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n      algoList[name] = {\n        type: 'child',\n        functionPath: dto.path,\n        args: dto.args,\n        returns: dto.returns,\n      }\n    }\n  })\n  return algoList\n}\n","import { RootState } from 'store/store'\nimport { selectAlgorithmName } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { getAlgoChild } from './AlgorithmListUtils'\n\nexport const selectAlgorithmList = (state: RootState) => state.algorithmList\n\nexport const selectAlgorithmListIsLated = (state: RootState) =>\n  selectAlgorithmList(state).isLatest\n\nexport const selectAlgorithmListTree = (state: RootState) =>\n  selectAlgorithmList(state).tree\n\nexport const selectAlgoArgs = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.args\n  } else {\n    return undefined\n  }\n}\n\nexport const selectAlgoReturns = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.returns\n  } else {\n    return undefined\n  }\n}\n","import { AlgorithmInfo } from 'api/algolist/AlgoList'\n\nexport const ALGORITHM_LIST_SLICE_NAME = 'algorithmList'\n\nexport type AlgorithmListType = {\n  isLatest: boolean\n  tree: AlgorithmListTree\n}\n\nexport type AlgorithmListTree = {\n  [algoName: string]: AlgorithmNodeType\n}\n\nexport type AlgorithmNodeType = AlgorithmChild | AlgorithmParent\nexport type AlgorithmChild = {\n  type: 'child'\n  args: AlgorithmInfo[]\n  returns: AlgorithmInfo[]\n  functionPath: string\n}\nexport type AlgorithmParent = {\n  type: 'parent'\n  children: {\n    [name: string]: AlgorithmNodeType\n  }\n}\n","const HOST = process.env.REACT_APP_SERVER_HOST\nconst PORT = process.env.REACT_APP_SERVER_PORT\n\nexport const BASE_URL = `http://${HOST}:${PORT}`\nexport const WS_BASE_URL = `ws://${HOST}:${PORT}`\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type AlgoListDTO = {\n  [name: string]:\n    | {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n    | { children: AlgoListDTO }\n}\n\nexport type AlgorithmInfo = {\n  name: string\n  type: string\n  isNone?: boolean\n}\n\nexport async function getAlgoListApi(): Promise<AlgoListDTO> {\n  const response = await axios.get(`${BASE_URL}/algolist`)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { ALGORITHM_LIST_SLICE_NAME } from './AlgorithmListType'\nimport { AlgoListDTO, getAlgoListApi } from 'api/algolist/AlgoList'\n\nexport const getAlgoList = createAsyncThunk<AlgoListDTO, void>(\n  `${ALGORITHM_LIST_SLICE_NAME}/getAlgoList`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoListApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","export const INPUT_NODE_SLICE_NAME = 'inputNode'\n\nexport const FILE_TYPE_SET = {\n  CSV: 'csv',\n  IMAGE: 'image',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type FILE_TYPE = typeof FILE_TYPE_SET[keyof typeof FILE_TYPE_SET]\n\nexport type InputNode = {\n  [nodeId: string]: InputNodeType\n}\n\nexport type InputNodeType = CsvInputNode | ImageInputNode | HDF5InputNode\n\ninterface InputNodeBaseType<\n  T extends FILE_TYPE,\n  P extends { [key: string]: unknown },\n> {\n  fileType: T\n  selectedFilePath?: string | string[]\n  param: P\n}\n\nexport type CsvInputParamType = {\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\n\nexport interface CsvInputNode\n  extends InputNodeBaseType<'csv', CsvInputParamType> {\n  selectedFilePath?: string\n}\n\nexport interface ImageInputNode extends InputNodeBaseType<'image', {}> {\n  selectedFilePath?: string[]\n}\n\nexport interface HDF5InputNode extends InputNodeBaseType<'hdf5', {}> {\n  selectedFilePath?: string\n  hdf5Path?: string\n}\n","import { Elements, FlowTransform } from 'react-flow-renderer'\n\nexport const FLOW_ELEMENT_SLICE_NAME = 'flowElement'\n\nexport const NODE_TYPE_SET = {\n  INPUT: 'input',\n  ALGORITHM: 'algorithm',\n} as const\n\nexport type NODE_TYPE = typeof NODE_TYPE_SET[keyof typeof NODE_TYPE_SET]\n\nexport type NodeData = AlgorithmNodeData | InputNodeData\n\ninterface NodeDataBaseType<T extends NODE_TYPE> {\n  label: string\n  type: T\n}\n\nexport interface InputNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.INPUT> {}\n\nexport interface AlgorithmNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.ALGORITHM> {}\n\nexport interface ElementCoord {\n  x: number\n  y: number\n}\n\nexport interface FlowElement {\n  flowElements: Elements<NodeData>\n  flowPosition: FlowTransform\n  elementCoord: ElementCoord\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getAlgoParamsApi(algoName: string): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/params/${algoName}`)\n  return response.data\n}\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Node } from 'react-flow-renderer'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { FLOW_ELEMENT_SLICE_NAME, NodeData } from './FlowElementType'\nimport { getAlgoParamsApi } from 'api/params/Params'\n\nexport const addAlgorithmNode = createAsyncThunk<\n  ParamDTO,\n  {\n    node: Omit<Node<NodeData>, 'position'>\n    functionPath: string\n    name: string\n  }\n>(`${FLOW_ELEMENT_SLICE_NAME}/addAlgorithmNode`, async ({ name }, thunkAPI) => {\n  try {\n    const response = await getAlgoParamsApi(name)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const addInputNode = createAction<{\n  node: Omit<Node<NodeData>, 'position'>\n  fileType: FILE_TYPE\n}>(`${FLOW_ELEMENT_SLICE_NAME}/addInputNode`)\n","import { customAlphabet } from 'nanoid/non-secure'\n\nconst nanoid = customAlphabet('0123456789abcdefghijklmnopqrstuvwxyz', 10)\n\nexport const getNanoId = () => {\n  return nanoid()\n}\n","export const INITIAL_IMAGE_ELEMENT_ID = 'input_0'\nexport const INITIAL_IMAGE_ELEMENT_NAME = 'NoName'\n\nexport const INITIAL_ALGO_STYLE: React.CSSProperties = {\n  width: 180,\n  height: 100,\n  padding: 0,\n  borderRadius: 0,\n} as const\n\nexport const INITIAL_DATA_STYLE: React.CSSProperties = {\n  border: '1px solid #777',\n  height: 120,\n} as const\n\nexport const REACT_FLOW_NODE_TYPE_KEY = {\n  ImageFileNode: 'ImageFileNode',\n  CsvFileNode: 'CsvFileNode',\n  HDF5FileNode: 'HDF5FileNode',\n  FluoFileNode: 'FluoFileNode',\n  AlgorithmNode: 'AlgorithmNode',\n  BehaviorFileNode: 'BehaviorFileNode',\n} as const\n\nexport type REACT_FLOW_NODE_TYPE =\n  typeof REACT_FLOW_NODE_TYPE_KEY[keyof typeof REACT_FLOW_NODE_TYPE_KEY]\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem'\nimport { styled, Typography } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport IconButton from '@mui/material/IconButton'\nimport AddIcon from '@mui/icons-material/Add'\n\nimport {\n  selectAlgorithmListIsLated,\n  selectAlgorithmListTree,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { AlgorithmNodeType } from 'store/slice/AlgorithmList/AlgorithmListType'\nimport { isAlgoChild } from 'store/slice/AlgorithmList/AlgorithmListUtils'\nimport { getAlgoList } from 'store/slice/AlgorithmList/AlgorithmListActions'\nimport { FILE_TYPE, FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  NODE_TYPE,\n  NODE_TYPE_SET,\n} from 'store/slice/FlowElement/FlowElementType'\nimport {\n  addAlgorithmNode,\n  addInputNode,\n} from 'store/slice/FlowElement/FlowElementActions'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport { REACT_FLOW_NODE_TYPE, REACT_FLOW_NODE_TYPE_KEY } from 'const/flowchart'\n\nexport const AlgorithmTreeView = React.memo(() => {\n  const dispatch = useDispatch()\n  const algoList = useSelector(selectAlgorithmListTree)\n  const isLatest = useSelector(selectAlgorithmListIsLated)\n\n  useEffect(() => {\n    if (!isLatest) {\n      dispatch(getAlgoList())\n    }\n  }, [dispatch, isLatest])\n\n  const onAlgoNodeClick = (nodeName: string, functionPath: string) => {\n    const name = nodeName\n    const newNode = {\n      id: `${name}_${getNanoId()}`,\n      type: 'AlgorithmNode',\n      data: { label: name, type: NODE_TYPE_SET.ALGORITHM },\n    }\n    dispatch(\n      addAlgorithmNode({\n        node: newNode,\n        name,\n        functionPath,\n      }),\n    )\n  }\n\n  return (\n    <TreeView\n      sx={{\n        flexGrow: 1,\n        height: '100%',\n      }}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId=\"Data\" label=\"Data\">\n        <InputNodeComponent\n          fileName={'image'}\n          nodeName={'imageData'}\n          fileType={FILE_TYPE_SET.IMAGE}\n        />\n        <InputNodeComponent\n          fileName={'csv'}\n          nodeName={'csvData'}\n          fileType={FILE_TYPE_SET.CSV}\n        />\n        <InputNodeComponent\n          fileName={'hdf5'}\n          nodeName={'hdf5Data'}\n          fileType={FILE_TYPE_SET.HDF5}\n        />\n        <InputNodeComponent\n          fileName={'fluo'}\n          nodeName={'fluoData'}\n          fileType={FILE_TYPE_SET.FLUO}\n        />\n        <InputNodeComponent\n          fileName={'behavior'}\n          nodeName={'behaviorData'}\n          fileType={FILE_TYPE_SET.BEHAVIOR}\n        />\n      </TreeItem>\n      <TreeItem nodeId=\"Algorithm\" label=\"Algorithm\">\n        {Object.entries(algoList).map(([name, node], i) => (\n          <AlgoNodeComponent\n            name={name}\n            node={node}\n            onAlgoNodeClick={(name, functionPath) =>\n              onAlgoNodeClick(name, functionPath)\n            }\n            key={i.toFixed()}\n          />\n        ))}\n      </TreeItem>\n    </TreeView>\n  )\n})\n\nconst InputNodeComponent = React.memo<{\n  fileName: string\n  nodeName: string\n  fileType: FILE_TYPE\n}>(({ fileName, nodeName, fileType }) => {\n  const dispatch = useDispatch()\n\n  const onDataNodeClick = (\n    nodeType: NODE_TYPE,\n    nodeName: string,\n    fileType: FILE_TYPE,\n  ) => {\n    let reactFlowNodeType: REACT_FLOW_NODE_TYPE | '' = ''\n    switch (fileType) {\n      case FILE_TYPE_SET.CSV:\n        reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.CsvFileNode\n        break\n      case FILE_TYPE_SET.IMAGE:\n        reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.ImageFileNode\n        fileType = FILE_TYPE_SET.IMAGE\n        break\n      case FILE_TYPE_SET.HDF5:\n        reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.HDF5FileNode\n        fileType = FILE_TYPE_SET.HDF5\n        break\n      case FILE_TYPE_SET.FLUO:\n        reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.FluoFileNode\n        fileType = FILE_TYPE_SET.FLUO\n        break\n      case FILE_TYPE_SET.BEHAVIOR:\n        reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.BehaviorFileNode\n        fileType = FILE_TYPE_SET.BEHAVIOR\n        break\n    }\n    const newNode = {\n      id: `input_${getNanoId()}`,\n      type: reactFlowNodeType,\n      data: { label: nodeName, type: nodeType },\n    }\n    dispatch(addInputNode({ node: newNode, fileType }))\n  }\n\n  return (\n    <LeafItem\n      nodeId={fileName}\n      label={\n        <AddButton\n          name={fileName}\n          onClick={() =>\n            onDataNodeClick(NODE_TYPE_SET.INPUT, nodeName, fileType)\n          }\n        />\n      }\n    />\n  )\n})\n\nconst AlgoNodeComponent = React.memo<{\n  name: string\n  node: AlgorithmNodeType\n  onAlgoNodeClick: (nodeName: string, functionPath: string) => void\n}>(({ name, node, onAlgoNodeClick }) => {\n  if (isAlgoChild(node)) {\n    return (\n      <LeafItem\n        nodeId={name}\n        label={\n          <AddButton\n            name={name}\n            onClick={() => onAlgoNodeClick(name, node.functionPath)}\n          />\n        }\n      />\n    )\n  } else {\n    return (\n      <TreeItem nodeId={name} label={name}>\n        {Object.entries(node.children).map(([name, node], i) => (\n          <AlgoNodeComponent\n            name={name}\n            node={node}\n            key={i.toFixed()}\n            onAlgoNodeClick={(name, functionPath) =>\n              onAlgoNodeClick(name, functionPath)\n            }\n          />\n        ))}\n      </TreeItem>\n    )\n  }\n})\n\nconst AddButton = React.memo<{\n  name: string\n  onClick: () => void\n}>(({ name, onClick }) => {\n  return (\n    <>\n      <IconButton aria-label=\"add\" style={{ padding: 2 }} size=\"large\">\n        <AddIcon onClick={() => onClick()} />\n      </IconButton>\n      <Typography\n        variant=\"inherit\"\n        style={{\n          textOverflow: 'ellipsis',\n          overflow: 'visible',\n          width: '8rem',\n          display: 'inline-block',\n        }}\n      >\n        {name}\n      </Typography>\n    </>\n  )\n})\n\n// 未使用icon分の幅を消す\nconst LeafItem = styled(TreeItem)({\n  [`& .${treeItemClasses.iconContainer}`]: {\n    margin: 0,\n    width: 0,\n  },\n})\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { RunPostData } from 'api/run/Run'\n\nexport type ExperimentsDTO = {\n  [uid: string]: ExperimentDTO\n}\n\nexport type ExperimentDTO = {\n  function: {\n    [uid: string]: {\n      name: string\n      position: {\n        x: number\n        y: number\n      }\n      success: string\n      unique_id: string\n    }\n  }\n  name: string\n  success: string\n  timestamp: string\n  unique_id: string\n}\n\nexport async function getExperimentsApi(): Promise<ExperimentsDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments`)\n  return response.data\n}\n\nexport async function deleteExperimentByUidApi(uid: string): Promise<boolean> {\n  const response = await axios.delete(`${BASE_URL}/experiments/${uid}`)\n  return response.data\n}\n\nexport async function deleteExperimentByListApi(\n  uidList: Array<string>,\n): Promise<boolean> {\n  const response = await axios.post(`${BASE_URL}/experiments/delete`, {\n    uidList,\n  })\n  return response.data\n}\n\nexport async function importExperimentByUidApi(\n  uid: string,\n): Promise<RunPostData> {\n  const response = await axios.get(`${BASE_URL}/experiments/import/${uid}`)\n  return response.data\n}\n\nexport async function downloadExperimentNwbApi(uid: string) {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/download/nwb/${uid}`,\n    {\n      responseType: 'blob',\n    },\n  )\n  return response.data\n}\n\nexport async function downloadExperimentConfigApi(uid: string) {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/download/config/${uid}`,\n    {\n      responseType: 'blob',\n    },\n  )\n  return response.data\n}\n","export const EXPERIMENTS_SLICE_NAME = 'experiments'\n\nexport type Experiments =\n  | {\n      status: 'fulfilled'\n      experimentList: ExperimentListType\n    }\n  | {\n      status: 'uninitialized'\n    }\n  | {\n      status: 'pending'\n    }\n  | {\n      status: 'error'\n      message?: string\n    }\n\nexport type ExperimentListType = {\n  [uid: string]: ExperimentType\n}\n\nexport type ExperimentType = {\n  uid: string\n  functions: {\n    [nodeId: string]: ExperimentFunction\n  }\n  name: string\n  timestamp: string\n}\n\nexport type ExperimentFunction = {\n  name: string\n  nodeId: string\n  postion: {\n    x: number\n    y: number\n  }\n  status: EXPERIMENTS_STATUS\n}\n\nexport type EXPERIMENTS_STATUS = 'success' | 'error' | 'running'\n\nexport interface Experiment {\n  uid: string\n  name: string\n  timestamp: string\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  ExperimentsDTO,\n  getExperimentsApi,\n  deleteExperimentByUidApi,\n  importExperimentByUidApi,\n  deleteExperimentByListApi,\n} from 'api/experiments/Experiments'\nimport { RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_SLICE_NAME } from './ExperimentsType'\n\nexport const getExperiments = createAsyncThunk<ExperimentsDTO, undefined>(\n  `${EXPERIMENTS_SLICE_NAME}/getExperiments`,\n  async (_, thunkAPI) => {\n    try {\n      const response = await getExperimentsApi()\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByUid = createAsyncThunk<boolean, string>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByList = createAsyncThunk<boolean, string[]>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByList`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByListApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const importExperimentByUid = createAsyncThunk<RunPostData, string>(\n  `${EXPERIMENTS_SLICE_NAME}/importExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await importExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { createAction } from '@reduxjs/toolkit'\n\nimport { INPUT_NODE_SLICE_NAME } from './InputNodeType'\n\nexport const setInputNodeFilePath = createAction<{\n  nodeId: string\n  filePath: string | string[]\n}>(`${INPUT_NODE_SLICE_NAME}/setInputNodeFilePath`)\n","import { FlowElement, isNode, Node } from 'react-flow-renderer'\nimport {\n  AlgorithmNodeData,\n  NodeData,\n  NODE_TYPE_SET,\n  InputNodeData,\n} from './FlowElementType'\n\nexport function isNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<NodeData> {\n  return node != null && isNode(node) && node.data != null\n}\n\nexport function isAlgorithmNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<AlgorithmNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.ALGORITHM\n}\n\nexport function isInputNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<InputNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.INPUT\n}\n\nexport function getLabelByPath(filePath: string | string[]) {\n  if (Array.isArray(filePath)) {\n    if (filePath.length === 0) {\n      return ''\n    } else if (filePath.length === 1) {\n      return getFileName(filePath[0])\n    } else {\n      return getFileName(filePath[0]) + ` ... and ${filePath.length - 1} files`\n    }\n  } else {\n    return getFileName(filePath)\n  }\n}\n\nexport function getFileName(filePath: string) {\n  return filePath.split('/').reverse()[0]\n}\n","import type { Node } from 'react-flow-renderer'\nimport {\n  isInputNodeData,\n  isAlgorithmNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport type {\n  NodePostDataType,\n  InputNodePostData,\n  AlgorithmNodePostData,\n} from './Run'\n\nexport function isInputNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<InputNodePostData> {\n  return isInputNodeData(node)\n}\n\nexport function isAlgorithmNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<AlgorithmNodePostData> {\n  return isAlgorithmNodeData(node)\n}\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport const FILE_TREE_TYPE_SET = {\n  IMAGE: 'image',\n  CSV: 'csv',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  ALL: 'all',\n} as const\n\nexport type FILE_TREE_TYPE =\n  typeof FILE_TREE_TYPE_SET[keyof typeof FILE_TREE_TYPE_SET]\n\nexport type TreeNodeTypeDTO = DirNodeDTO | FileNodeDTO\n\nexport interface NodeBaseDTO {\n  path: string\n  name: string\n  isdir: boolean\n}\n\nexport interface DirNodeDTO extends NodeBaseDTO {\n  isdir: true\n  nodes: TreeNodeTypeDTO[]\n}\n\nexport interface FileNodeDTO extends NodeBaseDTO {\n  isdir: false\n}\n\nexport async function getFilesTreeApi(\n  fileType: FILE_TREE_TYPE,\n): Promise<TreeNodeTypeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/files`, {\n    params: {\n      file_type: fileType,\n    },\n  })\n  return response.data\n}\n\nexport async function uploadFileApi(\n  fileName: string,\n  config: {\n    onUploadProgress: (progressEvent: any) => void\n  },\n  formData: FormData,\n): Promise<{ file_path: string }> {\n  const response = await axios.post(\n    `${BASE_URL}/files/upload/${fileName}`,\n    formData,\n    config,\n  )\n  return response.data\n}\n","export const FILE_UPLOADER_SLICE_NAME = 'fileUploader'\n\nexport type FileUploader = {\n  [id: string]: FileUploaderType\n}\n\nexport type FileUploaderType = {\n  path?: string\n  fileName?: string\n  isUninitialized: boolean\n  pending: boolean\n  fulfilled: boolean\n  uploadingProgress?: number\n  error?: string\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { uploadFileApi } from 'api/files/Files'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\nimport { FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\n\nexport const setUploadProgress = createAction<{\n  requestId: string\n  progess: number\n  total: number\n}>(`${FILE_UPLOADER_SLICE_NAME}/setUploadProgress`)\n\nexport const uploadFile = createAsyncThunk<\n  {\n    resultPath: string\n  },\n  {\n    requestId: string\n    nodeId?: string\n    fileName: string\n    formData: FormData\n    fileType?: FILE_TYPE\n  }\n>(\n  `${FILE_UPLOADER_SLICE_NAME}/uploadFile`,\n  async ({ requestId, fileName, formData }, thunkAPI) => {\n    try {\n      const config = getUploadConfig((percent, total) => {\n        thunkAPI.dispatch(\n          setUploadProgress({\n            requestId,\n            progess: percent,\n            total,\n          }),\n        )\n      })\n      const response = await uploadFileApi(fileName, config, formData)\n      return {\n        resultPath: response.file_path,\n      }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nfunction getUploadConfig(\n  onUpdateProgressFn: (percent: number, totalSize: number) => void,\n) {\n  return {\n    onUploadProgress: function (progressEvent: any) {\n      const percentCompleted = Math.round(\n        (progressEvent.loaded * 100) / progressEvent.total,\n      )\n      onUpdateProgressFn(percentCompleted, progressEvent.total)\n    },\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  Elements,\n  removeElements,\n  Position,\n  isNode,\n  FlowTransform,\n  XYPosition,\n} from 'react-flow-renderer'\nimport {\n  FLOW_ELEMENT_SLICE_NAME,\n  FlowElement,\n  NODE_TYPE_SET,\n  NodeData,\n  ElementCoord,\n} from './FlowElementType'\nimport {\n  INITIAL_ALGO_STYLE,\n  INITIAL_DATA_STYLE,\n  INITIAL_IMAGE_ELEMENT_ID,\n  INITIAL_IMAGE_ELEMENT_NAME,\n  REACT_FLOW_NODE_TYPE_KEY,\n} from 'const/flowchart'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { addAlgorithmNode, addInputNode } from './FlowElementActions'\nimport { getLabelByPath } from './FlowElementUtils'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\n\nconst initialElements: Elements<NodeData> = [\n  {\n    id: INITIAL_IMAGE_ELEMENT_ID,\n    type: REACT_FLOW_NODE_TYPE_KEY.ImageFileNode,\n    data: {\n      type: NODE_TYPE_SET.INPUT,\n      label: INITIAL_IMAGE_ELEMENT_NAME,\n    },\n    style: INITIAL_DATA_STYLE,\n    position: { x: 50, y: 150 },\n  },\n]\n\nconst initialFlowPosition: FlowTransform = {\n  x: 0,\n  y: 0,\n  zoom: 0.7,\n}\n\nconst initialElementCoord: ElementCoord = {\n  x: 100,\n  y: 150,\n}\n\nconst initialState: FlowElement = {\n  flowElements: initialElements,\n  flowPosition: initialFlowPosition,\n  elementCoord: initialElementCoord,\n}\n\nexport const flowElementSlice = createSlice({\n  name: FLOW_ELEMENT_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFlowPosition: (state, action: PayloadAction<FlowTransform>) => {\n      state.flowPosition = action.payload\n    },\n    setFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = action.payload\n    },\n    deleteFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = removeElements(action.payload, state.flowElements)\n    },\n    deleteFlowElementsById: (state, action: PayloadAction<string>) => {\n      const element = state.flowElements.find(\n        (edge) => edge.id === action.payload,\n      )\n      if (element !== undefined) {\n        state.flowElements = removeElements([element], state.flowElements)\n      }\n    },\n    editFlowElementPositionById: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        coord: {\n          x: number\n          y: number\n        }\n      }>,\n    ) => {\n      let { nodeId, coord } = action.payload\n      const elementIdx = state.flowElements.findIndex(\n        (ele) => ele.id === nodeId,\n      )\n      const targetItem = state.flowElements[elementIdx]\n      if (isNode(targetItem)) {\n        targetItem.position = coord\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        let { node } = action.meta.arg\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_ALGO_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        const newPosition: XYPosition = state.elementCoord\n        state.flowElements.push({ ...node, position: newPosition })\n        updateElementCoord(state)\n      })\n      .addCase(addInputNode, (state, action) => {\n        let { node } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_DATA_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        const newPosition: XYPosition = state.elementCoord\n        state.flowElements.push({ ...node, position: newPosition })\n        updateElementCoord(state)\n      })\n      .addCase(setInputNodeFilePath, (state, action) => {\n        let { nodeId, filePath } = action.payload\n        const label = getLabelByPath(filePath)\n        const elementIdx = state.flowElements.findIndex(\n          (ele) => ele.id === nodeId,\n        )\n        const targetNode = state.flowElements[elementIdx]\n        if (targetNode.data != null) {\n          targetNode.data.label = label\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const elementIdx = state.flowElements.findIndex(\n            (ele) => ele.id === nodeId,\n          )\n          const targetNode = state.flowElements[elementIdx]\n          if (targetNode.data != null) {\n            targetNode.data.label = getLabelByPath(action.payload.resultPath)\n          }\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.flowPosition = initialFlowPosition\n        state.elementCoord = initialElementCoord\n        const newNodeList: Elements<NodeData> = action.payload.nodeList.map(\n          (node) => {\n            if (isInputNodePostData(node)) {\n              return {\n                ...node,\n                data: {\n                  label: node.data?.label ?? '',\n                  type: node.data?.type ?? 'input',\n                },\n              }\n            } else {\n              return {\n                ...node,\n                data: {\n                  label: node.data?.label ?? '',\n                  type: node.data?.type ?? 'algorithm',\n                },\n              }\n            }\n          },\n        )\n        state.flowElements = newNodeList.concat(action.payload.edgeList)\n      }),\n})\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nfunction updateElementCoord(state: FlowElement) {\n  const { x } = state.elementCoord\n  if (x > 800) {\n    state.elementCoord.x = 300\n    state.elementCoord.y += 100\n  } else {\n    state.elementCoord.x += 250\n    state.elementCoord.y += getRandomArbitrary(-20, 20)\n  }\n}\n\nexport const {\n  setFlowPosition,\n  setFlowElements,\n  deleteFlowElements,\n  deleteFlowElementsById,\n  editFlowElementPositionById,\n} = flowElementSlice.actions\n\nexport default flowElementSlice.reducer\n","import { isEdge } from 'react-flow-renderer'\nimport { RootState } from 'store/store'\nimport { isNodeData } from './FlowElementUtils'\n\nexport const selectFlowElements = (state: RootState) =>\n  state.flowElement.flowElements\n\nexport const selectFlowPosition = (state: RootState) =>\n  state.flowElement.flowPosition\n\nexport const selectElementCoord = (state: RootState) =>\n  state.flowElement.elementCoord\n\nexport const selectNodeById = (nodeId: string) => (state: RootState) =>\n  selectFlowElements(state)\n    .filter(isNodeData)\n    .find((node) => node.id === nodeId)\n\nexport const selectNodeTypeById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.type\n\nexport const selectNodeLabelById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.label\n\nexport const selectEdgeListForRun = (state: RootState) =>\n  selectFlowElements(state).filter(isEdge)\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getNWBParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/nwb`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const NWB_SLICE_NAME = 'NWB'\n\nexport type NWBType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getNWBParamsApi } from 'api/nwb/NWB'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { NWB_SLICE_NAME } from './NWBType'\n\nexport const getNWBParams = createAsyncThunk<ParamDTO, void>(\n  `${NWB_SLICE_NAME}/getNWBParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getNWBParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getNWBParams } from './NWBAction'\nimport { NWBType, NWB_SLICE_NAME } from './NWBType'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\n\nconst initialState: NWBType = {\n  params: {},\n}\n\nexport const nwbSlice = createSlice({\n  name: NWB_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const targetNode = getChildParam(path, state.params)\n      if (targetNode != null) {\n        targetNode.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNWBParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = nwbSlice.actions\n\nexport default nwbSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\n\ntype RightDrawer = {\n  open: boolean\n  mode: RIGHT_DRAWER_MODE_TYPE\n  currendNodeId: string | null\n}\n\nexport const RIGHT_DRAWER_MODE = {\n  NONE: 'none',\n  NWB: 'nwb',\n  PARAM_FORM: 'paramForm',\n  SNAKEMAKE: 'snakemake',\n} as const\n\nexport type RIGHT_DRAWER_MODE_TYPE =\n  typeof RIGHT_DRAWER_MODE[keyof typeof RIGHT_DRAWER_MODE]\n\nconst initialState: RightDrawer = {\n  open: false,\n  mode: RIGHT_DRAWER_MODE.NONE,\n  currendNodeId: null,\n}\nexport const rightDrawerSlice = createSlice({\n  name: 'rightDrawer',\n  initialState,\n  reducers: {\n    openRightDrawer: (state, action: PayloadAction<RIGHT_DRAWER_MODE_TYPE>) => {\n      state.open = true\n      state.mode = action.payload\n    },\n    closeRightDrawer: (state) => {\n      state.open = false\n      state.mode = RIGHT_DRAWER_MODE.NONE\n    },\n    toggleParamForm: (state, action: PayloadAction<string>) => {\n      if (\n        state.open &&\n        state.mode === RIGHT_DRAWER_MODE.PARAM_FORM &&\n        state.currendNodeId === action.payload\n      ) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n        state.currendNodeId = null\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.PARAM_FORM\n        state.currendNodeId = action.payload\n      }\n    },\n    toggleNwb: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.NWB) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.NWB\n      }\n      state.currendNodeId = null\n    },\n    toggleSnakemake: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.SNAKEMAKE) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.SNAKEMAKE\n      }\n      state.currendNodeId = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteFlowElements, (state, action) => {\n        if (\n          action.payload.findIndex((elm) => elm.id === state.currendNodeId) > 0\n        ) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (action.payload === state.currendNodeId) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, () => {\n        return initialState\n      })\n  },\n})\n\nexport const {\n  toggleParamForm,\n  toggleNwb,\n  toggleSnakemake,\n  openRightDrawer,\n  closeRightDrawer,\n} = rightDrawerSlice.actions\n\nexport default rightDrawerSlice.reducer\n","export function arrayEqualityFn<T>(a: T[], b: T[]) {\n  return a === b || (a.length === b.length && a.every((v, i) => v === b[i]))\n}\n\nexport function twoDimarrayEqualityFn<T>(a: T[][], b: T[][]) {\n  return (\n    a === b ||\n    (a.length === b.length && a.every((v, i) => arrayEqualityFn(v, b[i])))\n  )\n}\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nexport const selectNwb = (state: RootState) => state.nwb\n\nexport const selectNwbParams = (state: RootState) => selectNwb(state).params\n\nexport const selectNwbParamsKeyList = (state: RootState) =>\n  Object.keys(selectNwb(state).params)\n\nexport const selectNwbParam = (paramKey: string) => (state: RootState) =>\n  selectNwb(state).params[paramKey]\n\nexport const selectNwbParamsValue = (path: string) => (state: RootState) => {\n  const params = selectNwb(state).params\n  if (params != null) {\n    const target = getChildParam(path, params)\n    return target?.value\n  } else {\n    throw new Error('Param is null')\n  }\n}\n","import MuiAccordion, { AccordionProps } from '@mui/material/Accordion'\nimport { styled } from '@mui/material/styles'\n\nexport const Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: '1px solid',\n  borderColor: theme.palette.divider,\n  boxShadow: 'none',\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}))\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport Switch from '@mui/material/Switch'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport Typography from '@mui/material/Typography'\n\nimport { isParamChild } from 'utils/param/ParamUtils'\nimport { ParamType } from 'utils/param/ParamType'\nimport { RootState } from 'store/store'\nimport { Accordion } from 'components/Accordion'\n\ntype ParamSelectorType = (paramKey: string) => (state: RootState) => ParamType\ntype ParamValueSelectorType = (path: string) => (state: RootState) => unknown\ntype ParamUpdateActionCreatorType = (\n  path: string,\n  newValue: unknown,\n) => AnyAction\n\nexport type CreateParamFormItemComponentProps = {\n  paramSelector: ParamSelectorType\n  paramValueSelector: ParamValueSelectorType\n  paramUpdateActionCreator: ParamUpdateActionCreatorType\n}\n\nexport function createParamFormItemComponent({\n  paramSelector,\n  paramValueSelector,\n  paramUpdateActionCreator,\n}: CreateParamFormItemComponentProps): React.FC<{ paramKey: string }> {\n  function useParamValueUpdate(\n    path: string,\n  ): [unknown, (newValue: unknown) => AnyAction] {\n    const value = useSelector(paramValueSelector(path))\n    const updateParamAction = (newValue: unknown) => {\n      return paramUpdateActionCreator(path, newValue)\n    }\n    return [value, updateParamAction]\n  }\n  const ParamItemForString = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    const onChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(updateParamAction(newValue))\n    }\n    return <TextField value={value} onChange={onChange} multiline />\n  })\n  const ParamItemForNumber = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue =\n          event.target.value === '' ? '' : Number(event.target.value)\n        if (typeof newValue === 'number') {\n          dispatch(updateParamAction(newValue))\n        }\n      }\n      return (\n        <TextField\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={value}\n          onChange={onChange}\n        />\n      )\n    } else {\n      return null\n    }\n  })\n  const ParamItemForBoolean = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'boolean') {\n      const onChange = () => {\n        dispatch(updateParamAction(!value))\n      }\n      return <Switch checked={value} onChange={onChange} />\n    } else {\n      return null\n    }\n  })\n  const ParamItemForValueType = React.memo<ParamChildItemProps>(({ path }) => {\n    const [value] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      return <ParamItemForNumber path={path} />\n    } else if (typeof value === 'string') {\n      return <ParamItemForString path={path} />\n    } else if (typeof value === 'boolean') {\n      return <ParamItemForBoolean path={path} />\n    } else {\n      return <ParamItemForString path={path} />\n    }\n  })\n  const ParamChildItem = React.memo<ParamChildItemProps & { name: string }>(\n    ({ path, name }) => {\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            marginTop: (theme) => theme.spacing(2),\n            marginBottom: (theme) => theme.spacing(2),\n            alignItems: 'center',\n            overflow: 'scroll',\n          }}\n        >\n          <Box\n            style={{ verticalAlign: 'middle' }}\n            sx={{\n              flexGrow: 1,\n              width: '50%',\n            }}\n          >\n            <Typography style={{ overflow: 'scroll' }}>{name}</Typography>\n          </Box>\n          <Box sx={{ width: '50%' }}>\n            <ParamItemForValueType path={path} />\n          </Box>\n        </Box>\n      )\n    },\n  )\n  const ParamItem = React.memo<ParamItemProps>(({ paramKey, param }) => {\n    if (isParamChild(param)) {\n      return <ParamChildItem path={param.path} name={paramKey} />\n    } else {\n      return (\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            {paramKey}\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              {Object.entries(param.children).map(([paramKey, param], i) => (\n                <ParamItem param={param} paramKey={paramKey} />\n              ))}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      )\n    }\n  })\n  return React.memo<{ paramKey: string }>(({ paramKey }) => {\n    const param = useSelector(paramSelector(paramKey)) // 一階層目\n    return <ParamItem paramKey={paramKey} param={param} />\n  })\n}\n\ntype ParamItemProps = {\n  paramKey: string\n  param: ParamType\n}\n\ntype ParamChildItemProps = {\n  path: string\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\nimport { updateParam } from 'store/slice/NWB/NWBSlice'\nimport { getNWBParams } from 'store/slice/NWB/NWBAction'\nimport { toggleNwb } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectNwbParam,\n  selectNwbParamsKeyList,\n  selectNwbParamsValue,\n} from 'store/slice/NWB/NWBSelectors'\nimport { createParamFormItemComponent } from 'components/ParamFormItemCreator'\n\nexport const NWBSettingButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleNwb())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      NWB setting\n    </Button>\n  )\n})\n\nexport const NWBSettingContents = React.memo(() => {\n  const dispatch = useDispatch()\n\n  const paramKeyList = useSelector(selectNwbParamsKeyList, arrayEqualityFn)\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getNWBParams())\n    }\n  })\n\n  return (\n    <div className=\"nwbParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectNwbParam,\n    paramValueSelector: selectNwbParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getSnakemakeParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/snakemake`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const SNAKEMAKE_SLICE_NAME = 'Snakemake'\n\nexport type SnakemakeType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getSnakemakeParamsApi } from 'api/snakemake/Snakemake'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nexport const getSnakemakeParams = createAsyncThunk<ParamDTO, void>(\n  `${SNAKEMAKE_SLICE_NAME}/getSnakemakeParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = getSnakemakeParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport { getSnakemakeParams } from './SnakemakeAction'\nimport { SnakemakeType, SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nconst initialState: SnakemakeType = {\n  params: {},\n}\n\nexport const SnakemakeSlice = createSlice({\n  name: SNAKEMAKE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const target = getChildParam(path, state.params)\n      if (target != null) {\n        target.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getSnakemakeParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = SnakemakeSlice.actions\n\nexport default SnakemakeSlice.reducer\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nconst selectSnakemake = (state: RootState) => state.snakemake\nexport const selectSnakemakeParams = (state: RootState) =>\n  selectSnakemake(state).params\n\nexport const selectSnakemakeParamsKeyList = (state: RootState) =>\n  Object.keys(selectSnakemakeParams(state))\n\nexport const selectSnakemakeParam = (paramKey: string) => (state: RootState) =>\n  selectSnakemakeParams(state)[paramKey]\n\nexport const selectSnakemakeParamsValue =\n  (path: string) => (state: RootState) => {\n    const params = selectSnakemakeParams(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('Param is null')\n    }\n  }\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\n\nimport { updateParam } from 'store/slice/Snakemake/SnakemakeSlice'\nimport { getSnakemakeParams } from 'store/slice/Snakemake/SnakemakeAction'\nimport { toggleSnakemake } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport {\n  selectSnakemakeParam,\n  selectSnakemakeParamsKeyList,\n  selectSnakemakeParamsValue,\n} from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from 'components/ParamFormItemCreator'\n\nexport const SnakemakeButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleSnakemake())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      Snakemake\n    </Button>\n  )\n})\n\nexport const SnakemakeContents = React.memo(() => {\n  const dispatch = useDispatch()\n  const paramKeyList = useSelector(\n    selectSnakemakeParamsKeyList,\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getSnakemakeParams())\n    }\n  })\n  return (\n    <div className=\"SnakemakeParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectSnakemakeParam,\n    paramValueSelector: selectSnakemakeParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import { RunPostData } from 'api/run/Run'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\n\nexport const PIPELINE_SLICE_NAME = 'pipeline'\n\nexport type Pipeline = {\n  run: PipelineType\n  currentPipeline?: {\n    uid: string\n  }\n  runBtn: RUN_BTN_TYPE\n}\n\nexport const RUN_STATUS = {\n  /**\n   * 未実行\n   */\n  START_UNINITIALIZED: 'StartUninitialized',\n  /**\n   * 開始リクエスト中\n   */\n  START_PENDING: 'StartPending',\n  /**\n   * 開始できなかった\n   */\n  START_ERROR: 'StartError',\n  /**\n   * 正常に開始した\n   */\n  START_SUCCESS: 'StartSuccess',\n  /**\n   * 全て終了\n   */\n  FINISHED: 'Finished',\n  /**\n   * 途中終了\n   */\n  ABORTED: 'Aborted',\n  /**\n   * キャンセルされた\n   */\n  CANCELED: 'Canceled',\n} as const\n\nexport type RUN_STATUS_TYPE = typeof RUN_STATUS[keyof typeof RUN_STATUS]\n\nexport type PipelineType =\n  | StartedPipeline\n  | {\n      status:\n        | typeof RUN_STATUS.START_ERROR\n        | typeof RUN_STATUS.START_PENDING\n        | typeof RUN_STATUS.START_UNINITIALIZED\n    }\n\nexport type StartedPipeline = {\n  uid: string\n  status:\n    | typeof RUN_STATUS.START_SUCCESS\n    | typeof RUN_STATUS.FINISHED\n    | typeof RUN_STATUS.ABORTED\n    | typeof RUN_STATUS.CANCELED\n  runPostData: RunPostData\n  runResult: RunResult\n}\n\nexport type RunResult = {\n  [nodeId: string]: NodeResult\n}\n\nexport type NodeResult = NodeResultPending | NodeResultSuccess | NodeResultError\n\nexport const NODE_RESULT_STATUS = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PENDING: 'pending',\n} as const\n\nexport type NODE_RESULT_STATUS_TYPE =\n  typeof NODE_RESULT_STATUS[keyof typeof NODE_RESULT_STATUS]\n\nexport interface NodeResultBaseType<T extends NODE_RESULT_STATUS_TYPE> {\n  status: T\n  message?: string\n  name: string\n}\n\nexport interface NodeResultPending\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.PENDING> {}\n\nexport interface NodeResultSuccess\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.SUCCESS> {\n  outputPaths: OutputPaths\n}\n\nexport type OutputPaths = {\n  [outputKey: string]: {\n    path: string\n    type: DATA_TYPE\n  }\n}\n\nexport interface NodeResultError\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.ERROR> {\n  message: string\n}\n\nexport const RUN_BTN_OPTIONS = {\n  RUN_NEW: 1,\n  RUN_ALREADY: 2,\n} as const\n\nexport type RUN_BTN_TYPE = typeof RUN_BTN_OPTIONS[keyof typeof RUN_BTN_OPTIONS]\n\nexport const RUN_BTN_LABELS = {\n  [RUN_BTN_OPTIONS.RUN_NEW]: 'RUN ALL',\n  [RUN_BTN_OPTIONS.RUN_ALREADY]: 'RUN',\n} as const\n","import {\n  HeatMapData,\n  TimeSeriesData,\n  BarData,\n  CsvData,\n  RoiData,\n  ImageData,\n  ScatterData,\n  HTMLData,\n} from 'api/outputs/Outputs'\n\nexport const DISPLAY_DATA_SLICE_NAME = 'displayData'\n\nexport type DisplayData = {\n  timeSeries: {\n    [filePath: string]: TimeSeriesDisplayData\n  }\n  heatMap: {\n    [filePath: string]: HeatMapDisplayData\n  }\n  image: {\n    [filePath: string]: ImageDisplayData\n  }\n  csv: {\n    [filePath: string]: CsvDisplayData\n  }\n  roi: {\n    [filePath: string]: RoiDisplayData\n  }\n  scatter: {\n    [filePath: string]: ScatterDisplayData\n  }\n  bar: {\n    [filePath: string]: BarDisplayData\n  }\n  // hdf5: {\n  //   [filePath: string]: HDF5DisplayData\n  // }\n  html: {\n    [filePath: string]: HTMLDisplayData\n  }\n}\n\nexport const DATA_TYPE_SET = {\n  TIME_SERIES: 'timeSeries',\n  HEAT_MAP: 'heatMap',\n  IMAGE: 'image',\n  CSV: 'csv',\n  ROI: 'roi',\n  SCATTER: 'scatter',\n  BAR: 'bar',\n  HDF5: 'hdf5',\n  HTML: 'html',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type DATA_TYPE = typeof DATA_TYPE_SET[keyof typeof DATA_TYPE_SET]\n\ninterface BaseDisplay<T extends DATA_TYPE, Data> {\n  type: T\n  data: Data\n  pending: boolean\n  error: string | null\n  fulfilled: boolean\n}\n\nexport interface TimeSeriesDisplayData\n  extends BaseDisplay<'timeSeries', TimeSeriesData> {\n  xrange: number[]\n  std: TimeSeriesData\n}\n\nexport interface HeatMapDisplayData\n  extends BaseDisplay<'heatMap', HeatMapData> {}\n\nexport interface ImageDisplayData extends BaseDisplay<'image', ImageData> {}\n\nexport interface CsvDisplayData extends BaseDisplay<'csv', CsvData> {\n  // columns: string[]\n}\n\nexport interface RoiDisplayData extends BaseDisplay<'roi', RoiData> {\n  roiUniqueList: string[]\n}\n\nexport interface ScatterDisplayData\n  extends BaseDisplay<'scatter', ScatterData> {}\n\nexport interface BarDisplayData extends BaseDisplay<'bar', BarData> {}\n\nexport interface HTMLDisplayData extends BaseDisplay<'html', HTMLData> {}\n","import { DATA_TYPE, DATA_TYPE_SET } from './DisplayDataType'\n\n/**\n * サーバーサイドの値をマッピング\n */\nexport function toDataType(value: string): DATA_TYPE {\n  switch (value) {\n    case 'images':\n      return DATA_TYPE_SET.IMAGE\n    case 'timeseries':\n      return DATA_TYPE_SET.TIME_SERIES\n    case 'heatmap':\n      return DATA_TYPE_SET.HEAT_MAP\n    case 'roi':\n      return DATA_TYPE_SET.ROI\n    case 'scatter':\n      return DATA_TYPE_SET.SCATTER\n    case 'bar':\n      return DATA_TYPE_SET.BAR\n    case 'html':\n      return DATA_TYPE_SET.HTML\n    default:\n      throw new Error(`failed to map dataType: ${value}`)\n  }\n}\n","import { RunPostData, RunResultDTO, OutputPathsDTO } from 'api/run/Run'\n\nimport { toDataType } from '../DisplayData/DisplayDataUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  RunResult,\n  OutputPaths,\n  NODE_RESULT_STATUS,\n  PipelineType,\n  RUN_STATUS,\n  StartedPipeline,\n  NodeResultPending,\n  NodeResultError,\n  NodeResultSuccess,\n  NodeResult,\n} from './PipelineType'\n\nexport function isNodeResultPending(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultPending {\n  return nodeResult.status === NODE_RESULT_STATUS.PENDING\n}\n\nexport function isNodeResultSuccess(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultSuccess {\n  return nodeResult.status === NODE_RESULT_STATUS.SUCCESS\n}\n\nexport function isNodeResultError(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultError {\n  return nodeResult.status === NODE_RESULT_STATUS.ERROR\n}\n\nexport function isStartedPipeline(\n  pipeline: PipelineType,\n): pipeline is StartedPipeline {\n  return (\n    pipeline.status === RUN_STATUS.START_SUCCESS ||\n    pipeline.status === RUN_STATUS.FINISHED ||\n    pipeline.status === RUN_STATUS.ABORTED\n  )\n}\n\nexport function getInitialRunResult(runPostData: RunPostData) {\n  const initialResult: RunResult = {}\n  runPostData.nodeList\n    .filter(({ data }) => data?.type === NODE_TYPE_SET.ALGORITHM)\n    .forEach(({ id, data }) => {\n      initialResult[id] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: data?.label ?? '',\n      }\n    })\n  return initialResult\n}\n\nexport function convertToRunResult(dto: RunResultDTO) {\n  const result: RunResult = {}\n  Object.entries(dto).forEach(([nodeId, nodeResultDto]) => {\n    const outputPath = nodeResultDto.outputPaths\n    if (nodeResultDto.status === 'success' && outputPath != null) {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.SUCCESS,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n        outputPaths: convertToOutputPath(outputPath),\n      }\n    } else {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.ERROR,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n      }\n    }\n  })\n  return result\n}\n\nfunction convertToOutputPath(dto: OutputPathsDTO) {\n  const result: OutputPaths = {}\n  Object.entries(dto).forEach(([functionPath, value]) => {\n    result[functionPath] = {\n      path: value.path,\n      type: toDataType(value.type),\n    }\n  })\n  return result\n}\n","import { RootState } from 'store/store'\n\nimport {\n  NodeResult,\n  NodeResultPending,\n  NodeResultSuccess,\n  RUN_STATUS,\n} from './PipelineType'\nimport {\n  isNodeResultPending,\n  isStartedPipeline,\n  isNodeResultSuccess,\n} from './PipelineUtils'\n\nexport const selectPipelineLatestUid = (state: RootState) => {\n  return state.pipeline.currentPipeline?.uid\n}\n\nexport const selectStartedPipeline = (state: RootState) => {\n  return state.pipeline.run\n}\n\nexport const selectPipelineRunBtn = (state: RootState) => {\n  return state.pipeline.runBtn\n}\n\nexport const selectRunResultPendingList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.values(pipeline.runResult).filter(isNodeResultPending)\n  } else {\n    return []\n  }\n}\n\nexport const selectRunResultPendingNodeIdList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => ({ nodeId, nodeResult }))\n      .filter(isNodeResultPendingAndNodeId)\n      .map(({ nodeId }) => nodeId)\n  } else {\n    return []\n  }\n}\n\nfunction isNodeResultPendingAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultPending\n} {\n  return isNodeResultPending(arg.nodeResult)\n}\n\nexport const selectPipelineStatus = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status\n}\n\nexport const selectPipelineIsCanceled = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.CANCELED\n}\n\nexport const selectPipelineIsStartedSuccess = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.START_SUCCESS\n}\n\nexport const selectPipelineNodeResultSuccessList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => {\n        return {\n          nodeId,\n          nodeResult,\n        }\n      })\n      .filter(isNodeResultSuccessAndNodeId)\n  } else {\n    return []\n  }\n}\n\n// selectPipelineNodeResultSuccessListの返り値の型を正しく認識させるためだけに作った\nfunction isNodeResultSuccessAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultSuccess\n} {\n  return isNodeResultSuccess(arg.nodeResult)\n}\n\nexport const selectPipelineNodeResultStatus =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].status\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultMessage =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].message\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultOutputKeyList =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return Object.keys(nodeResult.outputPaths)\n      }\n    }\n    return []\n  }\n\nconst selectPipelineNodeResultOutputPaths =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return nodeResult.outputPaths\n      }\n    }\n    throw new Error(`key error. nodeId:${nodeId}`)\n  }\n\nexport const selectPipelineNodeResultOutputFilePath =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].path\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n\nexport const selectPipelineNodeResultOutputFileDataType =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].type\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n","import axios from 'axios'\nimport type { Edge, Node } from 'react-flow-renderer'\n\nimport { BASE_URL } from 'const/API'\nimport type {\n  AlgorithmNodeData,\n  InputNodeData,\n} from 'store/slice/FlowElement/FlowElementType'\nimport type { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport type { ParamMap } from 'utils/param/ParamType'\n\nexport type RunPostData = {\n  name: string\n  nodeList: Node<NodePostDataType>[]\n  edgeList: Edge[]\n  nwbParam: ParamMap\n  snakemakeParam: ParamMap\n  forceRunList: { nodeId: string; name: string }[]\n}\n\nexport type NodePostDataType = AlgorithmNodePostData | InputNodePostData\n\nexport interface InputNodePostData extends InputNodeData {\n  path: string | string[]\n  fileType: FILE_TYPE\n  param?: {\n    [key: string]: unknown\n  }\n  hdf5Path?: string\n}\n\nexport interface AlgorithmNodePostData extends AlgorithmNodeData {\n  path: string\n  param: ParamMap\n}\n\nexport async function runApi(data: RunPostData): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run`, data)\n  return response.data\n}\n\nexport async function runByUidApi(\n  uid: string,\n  data: Omit<RunPostData, 'name'>,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${uid}`, data)\n  return response.data\n}\n\nexport type RunResultDTO = {\n  [nodeId: string]: {\n    status: string\n    message: string\n    name: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type OutputPathsDTO = {\n  [outputKey: string]: {\n    path: string\n    type: string\n  }\n}\n\nexport async function runResult(data: {\n  uid: string\n  pendingNodeIdList: string[]\n}): Promise<RunResultDTO> {\n  const { uid, pendingNodeIdList } = data\n  const response = await axios.post(`${BASE_URL}/run/result/${uid}`, {\n    pendingNodeIdList,\n  })\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { ThunkApiConfig } from 'store/store'\nimport { PIPELINE_SLICE_NAME } from './PipelineType'\nimport {\n  runApi,\n  runByUidApi,\n  runResult,\n  RunResultDTO,\n  RunPostData,\n} from 'api/run/Run'\nimport {\n  selectPipelineLatestUid,\n  selectRunResultPendingNodeIdList,\n} from './PipelineSelectors'\n\nexport const run = createAsyncThunk<\n  string,\n  { runPostData: RunPostData },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/run`, async ({ runPostData }, thunkAPI) => {\n  try {\n    const responseData = await runApi(runPostData)\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const runByCurrentUid = createAsyncThunk<\n  string,\n  { runPostData: Omit<RunPostData, 'name'> },\n  ThunkApiConfig\n>(\n  `${PIPELINE_SLICE_NAME}/runByCurrentUid`,\n  async ({ runPostData }, thunkAPI) => {\n    const currentUid = selectPipelineLatestUid(thunkAPI.getState())\n    if (currentUid != null) {\n      try {\n        const responseData = await runByUidApi(currentUid, runPostData)\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    } else {\n      return thunkAPI.rejectWithValue('currentUid dose not exist.')\n    }\n  },\n)\n\nexport const pollRunResult = createAsyncThunk<\n  RunResultDTO,\n  {\n    uid: string\n  },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/pollRunResult`, async ({ uid }, thunkAPI) => {\n  const pendingNodeIdList = selectRunResultPendingNodeIdList(\n    thunkAPI.getState(),\n  )\n  try {\n    const responseData = await runResult({ uid, pendingNodeIdList })\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { pollRunResult, run, runByCurrentUid } from './PipelineActions'\nimport {\n  Pipeline,\n  PIPELINE_SLICE_NAME,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n  RUN_STATUS,\n} from './PipelineType'\n\nimport {\n  getInitialRunResult,\n  convertToRunResult,\n  isNodeResultPending,\n} from './PipelineUtils'\n\nconst initialState: Pipeline = {\n  run: {\n    status: RUN_STATUS.START_UNINITIALIZED,\n  },\n  runBtn: RUN_BTN_OPTIONS.RUN_NEW,\n}\n\nexport const pipelineSlice = createSlice({\n  name: PIPELINE_SLICE_NAME,\n  initialState,\n  reducers: {\n    cancelPipeline(state) {\n      state.run.status = RUN_STATUS.CANCELED\n    },\n    setRunBtnOption: (\n      state,\n      action: PayloadAction<{\n        runBtnOption: RUN_BTN_TYPE\n      }>,\n    ) => {\n      state.runBtn = action.payload.runBtnOption\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.run.status === RUN_STATUS.START_SUCCESS) {\n          state.run.runResult = {\n            ...state.run.runResult, // pendingのNodeResultはそのままでsuccessもしくはerrorのみ上書き\n            ...convertToRunResult(action.payload),\n          }\n          const runResultPendingList = Object.values(\n            state.run.runResult,\n          ).filter(isNodeResultPending)\n          if (runResultPendingList.length === 0) {\n            // 終了\n            state.run.status = RUN_STATUS.FINISHED\n          }\n        }\n      })\n      .addCase(pollRunResult.rejected, (state, action) => {\n        state.run.status = RUN_STATUS.ABORTED\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.meta.arg,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addMatcher(\n        isAnyOf(run.pending, runByCurrentUid.pending),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_PENDING,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          const uid = action.payload\n          state.run = {\n            uid,\n            status: RUN_STATUS.START_SUCCESS,\n            runResult: getInitialRunResult({ name: '', ...runPostData }),\n            runPostData: { name: '', ...runPostData },\n          }\n          state.currentPipeline = {\n            uid: action.payload,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.rejected, runByCurrentUid.rejected),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_ERROR,\n          }\n        },\n      )\n  },\n})\n\nexport const { cancelPipeline, setRunBtnOption } = pipelineSlice.actions\n\nexport default pipelineSlice.reducer\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\nimport Grow from '@mui/material/Grow'\nimport Paper from '@mui/material/Paper'\nimport Popper from '@mui/material/Popper'\nimport MenuItem from '@mui/material/MenuItem'\nimport MenuList from '@mui/material/MenuList'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nimport { useSnackbar } from 'notistack'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport {\n  RUN_BTN_LABELS,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n} from 'store/slice/Pipeline/PipelineType'\nimport { selectPipelineRunBtn } from 'store/slice/Pipeline/PipelineSelectors'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\n\nexport const RunButtons = React.memo<UseRunPipelineReturnType>((props) => {\n  const {\n    uid,\n    isStartedSuccess,\n    filePathIsUndefined,\n    handleCancelPipeline,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const runBtnOption = useSelector(selectPipelineRunBtn)\n\n  const [dialogOpen, setDialogOpen] = React.useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n  const handleClick = () => {\n    if (!filePathIsUndefined) {\n      if (runBtnOption === RUN_BTN_OPTIONS.RUN_NEW) {\n        setDialogOpen(true)\n      } else {\n        handleRunPipelineByUid()\n      }\n    } else {\n      enqueueSnackbar('please select input file', { variant: 'error' })\n    }\n  }\n  const onClickDialogRun = (name: string) => {\n    handleRunPipeline(name)\n    setDialogOpen(false)\n  }\n  const onClickCancel = () => {\n    handleCancelPipeline()\n  }\n  const [menuOpen, setMenuOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLDivElement>(null)\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    option: RUN_BTN_TYPE,\n  ) => {\n    dispatch(setRunBtnOption({ runBtnOption: option }))\n    setMenuOpen(false)\n  }\n  const handleToggle = () => {\n    setMenuOpen((prevOpen) => !prevOpen)\n  }\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n    setMenuOpen(false)\n  }\n  const uidExists = uid != null\n  return (\n    <>\n      <ButtonGroup\n        sx={{\n          margin: 1,\n        }}\n        variant=\"contained\"\n        ref={anchorRef}\n        disabled={isStartedSuccess}\n      >\n        <Button onClick={handleClick}>{RUN_BTN_LABELS[runBtnOption]}</Button>\n        <Button size=\"small\" onClick={handleToggle}>\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={menuOpen}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList>\n                  {Object.values(RUN_BTN_OPTIONS).map((option) => (\n                    <MenuItem\n                      key={option}\n                      disabled={\n                        !uidExists && option === RUN_BTN_OPTIONS.RUN_ALREADY\n                      }\n                      selected={option === runBtnOption}\n                      onClick={(event) => handleMenuItemClick(event, option)}\n                    >\n                      {RUN_BTN_LABELS[option]}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n      <Button\n        variant=\"outlined\"\n        endIcon={<CloseIcon />}\n        onClick={onClickCancel}\n        sx={{\n          margin: 1,\n          marginRight: 4,\n        }}\n      >\n        Cancel\n      </Button>\n      <RunDialog\n        open={dialogOpen}\n        handleRun={onClickDialogRun}\n        handleClose={() => setDialogOpen(false)}\n      />\n    </>\n  )\n})\n\nconst RunDialog = React.memo<{\n  open: boolean\n  handleRun: (name: string) => void\n  handleClose: () => void\n}>(({ open, handleClose, handleRun }) => {\n  const [name, setName] = React.useState('New flow')\n  const [error, setError] = React.useState<string | null>(null)\n  const onClickRun = () => {\n    if (name !== '') {\n      handleRun(name)\n    } else {\n      setError('name is empty')\n    }\n  }\n  const onChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    if (event.target.value !== '') {\n      setError(null)\n    }\n  }\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Name and run flowchart</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"name\"\n          autoFocus\n          margin=\"dense\"\n          fullWidth\n          variant=\"standard\"\n          onChange={onChangeName}\n          error={error != null}\n          helperText={error}\n          value={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"inherit\" variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button onClick={onClickRun} color=\"primary\" variant=\"outlined\">\n          Run\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","import React from 'react'\nimport Box from '@mui/material/Box'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { NWBSettingButton } from './FlowChart/NWB'\nimport { SnakemakeButton } from './FlowChart/Snakemake'\nimport { RunButtons } from './RunButtons'\n\nexport const ToolBar = React.memo<UseRunPipelineReturnType>((props) => (\n  <Box\n    style={{\n      position: 'absolute',\n      float: 'right',\n      textAlign: 'right',\n      top: -7,\n      right: 10,\n      zIndex: 4,\n      textTransform: 'none',\n    }}\n  >\n    <SnakemakeButton />\n    <NWBSettingButton />\n    <RunButtons {...props} />\n  </Box>\n))\n","import {\n  CsvInputNode,\n  ImageInputNode,\n  HDF5InputNode,\n  InputNodeType,\n  FILE_TYPE_SET,\n} from './InputNodeType'\n\nexport function isImageInputNode(\n  inputNode: InputNodeType,\n): inputNode is ImageInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.IMAGE\n}\n\nexport function isCsvInputNode(\n  inputNode: InputNodeType,\n): inputNode is CsvInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.CSV\n}\n\nexport function isHDF5InputNode(\n  inputNode: InputNodeType,\n): inputNode is HDF5InputNode {\n  return inputNode.fileType === FILE_TYPE_SET.HDF5\n}\n","import { RootState } from 'store/store'\nimport {\n  isHDF5InputNode,\n  isCsvInputNode,\n  isImageInputNode,\n} from './InputNodeUtils'\n\nexport const selectInputNode = (state: RootState) => state.inputNode\n\nexport const selectInputNodeById = (nodeId: string) => (state: RootState) =>\n  state.inputNode[nodeId]\n\nexport const selectInputNodeDefined = (nodeId: string) => (state: RootState) =>\n  Object.keys(state.inputNode).includes(nodeId)\n\nexport const selectInputNodeFileType = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).fileType\n\nexport const selectInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) =>\n    selectInputNodeById(nodeId)(state).selectedFilePath\n\nexport const selectCsvInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isCsvInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectImageInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isImageInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectHDF5InputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectFilePathIsUndefined = (state: RootState) =>\n  Object.values(state.inputNode).filter(\n    (inputNode) => inputNode.selectedFilePath === undefined,\n  ).length > 0\n\nexport const selectInputNodeParam = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).param\n\nconst selectCsvInputNodeParam = (nodeId: string) => (state: RootState) => {\n  const inputNode = selectInputNodeById(nodeId)(state)\n  if (isCsvInputNode(inputNode)) {\n    return inputNode.param\n  } else {\n    throw new Error(`The InputNode is not CsvInputNode. (nodeId: ${nodeId})`)\n  }\n}\n\nexport const selectCsvInputNodeParamSetHeader =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setHeader\n\nexport const selectCsvInputNodeParamSetIndex =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setIndex\n\nexport const selectCsvInputNodeParamTranspose =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).transpose\n\nexport const selectInputNodeHDF5Path =\n  (nodeId: string) => (state: RootState) => {\n    const item = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(item)) {\n      return item.hdf5Path\n    } else {\n      return undefined\n    }\n  }\n","import { useSelector } from 'react-redux'\nimport { selectHandleTypeColor } from 'store/slice/HandleTypeColor/HandleTypeColorSelectors'\n\nexport function useHandleColor(type: string) {\n  const color = useSelector(selectHandleTypeColor(type))\n  return color\n}\n","import { RootState } from '../../store'\n\nexport const selectHandleTypeColor = (key: string) => (state: RootState) => {\n  if (state.handleColor.colorMap[key] != null) {\n    return state.handleColor.colorMap[key]\n  } else {\n    return undefined\n  }\n}\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { RootState } from '../../store'\n\nexport const selectFilesTree =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) => {\n    if (state.filesTree[fileType] != null) {\n      return state.filesTree[fileType]\n    } else {\n      return undefined\n    }\n  }\n\nexport const selectFilesTreeNodes =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.tree\n\nexport const selectFilesIsLatest =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLatest ?? false\n\nexport const selectFilesIsLoading =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLoading ?? false\n","export const FILES_TREE_SLICE_NAME = 'filesTree'\n\nexport type TreeNodeType = DirNode | FileNode\n\nexport interface NodeBase {\n  path: string\n  name: string\n  isDir: boolean\n}\n\nexport interface DirNode extends NodeBase {\n  isDir: true\n  nodes: TreeNodeType[]\n}\n\nexport interface FileNode extends NodeBase {\n  isDir: false\n}\n\nexport interface FilesTree {\n  [fileType: string]: {\n    isLatest: boolean\n    isLoading: boolean\n    tree: TreeNodeType[]\n  }\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  FILE_TREE_TYPE,\n  getFilesTreeApi,\n  TreeNodeTypeDTO,\n} from 'api/files/Files'\n\nimport { FILES_TREE_SLICE_NAME } from './FilesTreeType'\n\nexport const getFilesTree = createAsyncThunk<TreeNodeTypeDTO[], FILE_TREE_TYPE>(\n  `${FILES_TREE_SLICE_NAME}/getFilesTree`,\n  async (fileType, thunkAPI) => {\n    try {\n      const response = await getFilesTreeApi(fileType)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { TreeNodeTypeDTO } from 'api/files/Files'\nimport { TreeNodeType } from './FilesTreeType'\n\nexport function convertToTreeNodeType(dto: TreeNodeTypeDTO[]): TreeNodeType[] {\n  return dto.map((node) =>\n    node.isdir\n      ? {\n          path: node.path,\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n        }\n      : {\n          path: node.path,\n          name: node.name,\n          isDir: false,\n        },\n  )\n}\n\nexport function isDirNodeByPath(path: string, tree: TreeNodeType[]): boolean {\n  const node = getNodeByPath(path, tree)\n  if (node != null) {\n    return node.isDir\n  } else {\n    throw new Error(`failed to get node: ${path}`)\n  }\n}\n\nexport function getNodeByPath(\n  path: string,\n  tree: TreeNodeType[],\n): TreeNodeType | null {\n  let targetNode: TreeNodeType | null = null\n  for (const node of tree) {\n    if (path === node.path) {\n      targetNode = node\n      break\n    } else {\n      if (node.isDir) {\n        targetNode = getNodeByPath(path, node.nodes)\n        if (targetNode != null) {\n          break\n        }\n      }\n    }\n  }\n  return targetNode\n}\n","import Dialog from '@mui/material/Dialog'\nimport { useDispatch, useSelector } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\nimport Checkbox, { CheckboxProps } from '@mui/material/Checkbox'\n\nimport Box from '@mui/material/Box'\nimport { useTheme } from '@mui/material/styles'\nimport React from 'react'\n\nimport {\n  selectFilesIsLatest,\n  selectFilesIsLoading,\n  selectFilesTreeNodes,\n} from 'store/slice/FilesTree/FilesTreeSelectors'\nimport { getFilesTree } from 'store/slice/FilesTree/FilesTreeAction'\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { TreeNodeType } from 'store/slice/FilesTree/FilesTreeType'\nimport {\n  getNodeByPath,\n  isDirNodeByPath,\n} from 'store/slice/FilesTree/FilesTreeUtils'\n\ntype FileSelectDialogProps = {\n  initialFilePath: string[] | string\n  onClickOk: (path: string[] | string) => void\n  fileType?: FILE_TREE_TYPE\n  title?: string\n  open: boolean\n  onClickCancel: () => void\n  onClose?: () => void\n  multiSelect: boolean\n}\n\nexport const FileSelectDialog = React.memo<FileSelectDialogProps>(\n  function FileSelectDialog({\n    open,\n    initialFilePath,\n    onClickCancel,\n    onClickOk,\n    onClose,\n    title,\n    fileType = FILE_TREE_TYPE_SET.ALL,\n    multiSelect,\n  }) {\n    React.useEffect(() => {\n      setSelectedFilePath(initialFilePath)\n    }, [initialFilePath])\n    const [selectedFilePath, setSelectedFilePath] =\n      React.useState(initialFilePath)\n    const onCancel = () => {\n      setSelectedFilePath(initialFilePath) // 選択内容を反映させない\n      onClickCancel()\n    }\n    const onOk = () => {\n      onClickOk(selectedFilePath)\n    }\n    const theme = useTheme()\n    return (\n      <Dialog open={open} onClose={onClose} fullWidth>\n        <DialogTitle>{title ?? 'Select File'}</DialogTitle>\n        <DialogContent dividers>\n          <div\n            style={{\n              height: 300,\n              overflow: 'auto',\n              marginBottom: theme.spacing(1),\n              border: '1px solid',\n              padding: theme.spacing(1),\n              borderColor: theme.palette.divider,\n            }}\n          >\n            <FileTreeView\n              setSelectedFilePath={setSelectedFilePath}\n              multiSelect={multiSelect}\n              fileType={fileType}\n              selectedFilePath={selectedFilePath}\n            />\n          </div>\n          <Typography variant=\"subtitle1\">Select File</Typography>\n          <FilePathSelectedListView path={selectedFilePath} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  },\n)\n\nconst FileTreeView = React.memo<{\n  setSelectedFilePath: (path: string[] | string) => void\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  fileType: FILE_TREE_TYPE\n}>(({ setSelectedFilePath, selectedFilePath, fileType, multiSelect }) => {\n  const [tree, isLoading] = useFileTree(fileType)\n  const onNodeSelectHandler = (\n    event: React.SyntheticEvent,\n    nodeIds: Array<string> | string,\n  ) => {\n    if (!multiSelect && tree != null) {\n      // multiSelectがfalseの場合、ディレクトリは選択しない\n      const path = nodeIds as string\n      if (!isDirNodeByPath(path, tree)) {\n        setSelectedFilePath(path)\n      }\n    }\n  }\n  // multiSelectでチェックボックスを使用する時用のハンドラ\n  const onCheckFile = (path: string) => {\n    if (Array.isArray(selectedFilePath)) {\n      if (selectedFilePath.includes(path)) {\n        setSelectedFilePath(\n          selectedFilePath.filter((selectedPath) => path !== selectedPath),\n        )\n      } else {\n        setSelectedFilePath(selectedFilePath.concat(path))\n      }\n    }\n  }\n  const onCheckDir = (path: string, checked: boolean) => {\n    if (tree != null && Array.isArray(selectedFilePath)) {\n      const node = getNodeByPath(path, tree)\n      if (node != null && node.isDir) {\n        const childrenFilePathList = node.nodes\n          .filter((node) => !node.isDir)\n          .map((node) => node.path)\n        if (checked) {\n          setSelectedFilePath(\n            // concat時の重複を削除\n            Array.from(new Set(selectedFilePath.concat(childrenFilePathList))),\n          )\n        } else {\n          setSelectedFilePath(\n            selectedFilePath.filter(\n              (selectedPath) => !childrenFilePathList.includes(selectedPath),\n            ),\n          )\n        }\n      }\n    }\n  }\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView\n        disableSelection={multiSelect}\n        multiSelect={multiSelect}\n        onNodeSelect={onNodeSelectHandler}\n      >\n        {tree?.map((node) => (\n          <TreeNode\n            node={node}\n            selectedFilePath={selectedFilePath}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: TreeNodeType\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  onCheckFile: (path: string) => void\n  onCheckDir: (path: string, checked: boolean) => void\n}>(({ node, selectedFilePath, multiSelect, onCheckDir, onCheckFile }) => {\n  if (node.isDir) {\n    const allChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => selectedFilePath.includes(filePath))\n    const allNotChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => !selectedFilePath.includes(filePath))\n    const indeterminate = !(allChecked || allNotChecked)\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={\n          multiSelect && node.nodes.filter((node) => !node.isDir).length > 0 ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                indeterminate,\n                checked: allChecked,\n                onClick: (e) => {\n                  e.stopPropagation() // on/offのクリックにつられてTreeを開閉させないようにする\n                },\n                onChange: (e) => onCheckDir(node.path, e.target.checked),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode\n            node={childNode}\n            selectedFilePath={selectedFilePath}\n            key={i}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={\n          multiSelect ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                checked:\n                  Array.isArray(selectedFilePath) &&\n                  selectedFilePath.includes(node.path),\n                onChange: () => onCheckFile(node.path),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n        onClick={() => onCheckFile(node.path)}\n      />\n    )\n  }\n})\n\nconst TreeItemLabel = React.memo<{\n  label: string\n  checkboxProps: CheckboxProps\n}>(({ label, checkboxProps }) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box flexGrow={1}>{label}</Box>\n      <Box>\n        <Checkbox\n          {...checkboxProps}\n          disableRipple\n          size=\"small\"\n          sx={{\n            marginRight: '4px',\n            padding: '2px',\n          }}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectedListView = React.memo<{ path: string | string[] }>(\n  ({ path }) => {\n    return (\n      <Typography variant=\"subtitle2\">\n        {!!path\n          ? Array.isArray(path)\n            ? path.map((text) => <li>{text}</li>)\n            : path\n          : '---'}\n      </Typography>\n    )\n  },\n)\n\nfunction useFileTree(\n  fileType: FILE_TREE_TYPE,\n): [TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectFilesTreeNodes(fileType))\n  const isLatest = useSelector(selectFilesIsLatest(fileType))\n  const isLoading = useSelector(selectFilesIsLoading(fileType))\n  React.useEffect(() => {\n    if (!isLatest && !isLoading) {\n      dispatch(getFilesTree(fileType))\n    }\n  }, [isLatest, isLoading, fileType, dispatch])\n  return [tree, isLoading]\n}\n","import React from 'react'\nimport LinearProgress, {\n  LinearProgressProps,\n} from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\n\nexport const LinearProgressWithLabel = React.memo<\n  LinearProgressProps & { value: number }\n>((props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  )\n})\n","import { FileUploaderType } from './FileUploaderType'\n\nexport const inistialUploaderState: FileUploaderType = {\n  path: undefined,\n  fileName: undefined,\n  isUninitialized: true,\n  pending: false,\n  fulfilled: false,\n  uploadingProgress: undefined,\n  error: undefined,\n}\n","import { RootState } from 'store/store'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nexport const selectFileUploader = (id: string) => (state: RootState) => {\n  if (Object.keys(state.fileUploader).includes(id)) {\n    return state.fileUploader[id]\n  } else {\n    return inistialUploaderState\n  }\n}\n\nexport const selectUploadFilePath = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).path\n\nexport const selectUploadFileName = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fileName\n\nexport const selectFileUploadIsUninitialized =\n  (id: string) => (state: RootState) =>\n    selectFileUploader(id)(state).isUninitialized\n\nexport const selectFileUploadIsPending = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).pending\n\nexport const selectFileUploadIsFulfilled = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fulfilled\n\nexport const selectFileUploadProgress = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).uploadingProgress\n\nexport const selectFileUploadError = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).error\n","import { nanoid } from '@reduxjs/toolkit'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uploadFile } from './FileUploaderActions'\nimport {\n  selectFileUploadIsPending,\n  selectUploadFilePath,\n  selectFileUploadIsFulfilled,\n  selectFileUploadProgress,\n  selectFileUploadIsUninitialized,\n  selectFileUploadError,\n} from './FileUploaderSelectors'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\ntype UseFileUploaderProps = {\n  fileType?: FILE_TYPE\n  nodeId?: string\n}\n\nexport function useFileUploader({ fileType, nodeId }: UseFileUploaderProps) {\n  const dispatch = useDispatch()\n  const id = React.useRef(nanoid())\n  const onUploadFile = React.useCallback(\n    (formData: FormData, fileName: string) => {\n      dispatch(\n        uploadFile({\n          requestId: id.current,\n          nodeId,\n          fileName,\n          formData,\n          fileType,\n        }),\n      )\n    },\n    [dispatch, fileType, nodeId],\n  )\n  const uninitialized = useSelector(selectFileUploadIsUninitialized(id.current))\n  const filePath = useSelector(selectUploadFilePath(id.current))\n  const pending = useSelector(selectFileUploadIsPending(id.current))\n  const fulfilled = useSelector(selectFileUploadIsFulfilled(id.current))\n  const progress = useSelector(selectFileUploadProgress(id.current))\n  const error = useSelector(selectFileUploadError(id.current))\n  return {\n    filePath,\n    uninitialized,\n    pending,\n    fulfilled,\n    progress,\n    error,\n    onUploadFile,\n  }\n}\n","import React from 'react'\nimport { Button, Typography } from '@mui/material'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nimport { FileSelectDialog } from 'components/FileSelectDialog'\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { LinearProgressWithLabel } from './LinerProgressWithLabel'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { getLabelByPath } from 'store/slice/FlowElement/FlowElementUtils'\n\nexport const FileSelect = React.memo<{\n  multiSelect?: boolean\n  filePath: string | string[]\n  fileType: FILE_TYPE\n  nodeId?: string\n  onChangeFilePath: (path: string | string[]) => void\n}>(({ multiSelect = false, filePath, nodeId, fileType, onChangeFilePath }) => {\n  const {\n    // filePath: uploadedFilePath,\n    onUploadFile,\n    pending,\n    uninitialized,\n    progress,\n    error,\n  } = useFileUploader({ fileType, nodeId })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n  return (\n    <>\n      {!uninitialized && pending && progress != null && (\n        <div style={{ marginLeft: 2, marginRight: 2 }}>\n          <LinearProgressWithLabel value={progress} />\n        </div>\n      )}\n      <FileSelectImple\n        multiSelect={multiSelect}\n        filePath={filePath}\n        onSelectFile={onChangeFilePath}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={fileType}\n        selectButtonLabel={`Select ${fileType}`}\n      />\n      {error != null && (\n        <Typography variant=\"caption\" color=\"error\">\n          {error}\n        </Typography>\n      )}\n    </>\n  )\n})\n\ntype FileSelectImpleProps = {\n  multiSelect?: boolean\n  filePath: string | string[]\n  onUploadFile: (formData: FormData, fileName: string) => void\n  onSelectFile: (path: string | string[]) => void\n  fileTreeType?: FILE_TREE_TYPE\n  selectButtonLabel?: string\n  uploadButtonLabel?: string\n}\n\nexport const FileSelectImple = React.memo<FileSelectImpleProps>(\n  ({\n    multiSelect = false,\n    filePath,\n    onSelectFile,\n    onUploadFile,\n    fileTreeType,\n    selectButtonLabel,\n    uploadButtonLabel,\n  }) => {\n    const onFileInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.preventDefault()\n      if (event.target.files != null && event.target.files[0] != null) {\n        const file = event.target.files[0]\n        const formData = new FormData()\n        formData.append('file', file)\n        const fileName = file.name\n        onUploadFile(formData, fileName)\n      }\n    }\n    const inputRef = React.useRef<HTMLInputElement>(null)\n    const onClick = () => {\n      if (inputRef.current != null) {\n        inputRef.current.click()\n      }\n    }\n    const [open, setOpen] = React.useState(false)\n    const accept = getFileInputAccept(fileTreeType)\n    const fileName = getLabelByPath(filePath)\n    return (\n      <div\n        style={{\n          padding: 5,\n        }}\n      >\n        <ButtonGroup size=\"small\" style={{ marginRight: 4 }}>\n          <Button variant=\"outlined\" onClick={() => setOpen(true)}>\n            {!!selectButtonLabel ? selectButtonLabel : 'Select File'}\n          </Button>\n          <Button onClick={onClick} variant=\"outlined\">\n            {!!uploadButtonLabel ? uploadButtonLabel : 'or Upload'}\n          </Button>\n        </ButtonGroup>\n        <div>\n          <input\n            ref={inputRef}\n            type=\"file\"\n            onChange={onFileInputChange}\n            accept={accept}\n            style={{\n              visibility: 'hidden',\n              width: 0,\n              height: 0,\n            }}\n          />\n          <Typography className=\"selectFilePath\" variant=\"caption\">\n            {!!fileName ? fileName : 'No file is selected.'}\n          </Typography>\n        </div>\n        <FileSelectDialog\n          multiSelect={multiSelect}\n          initialFilePath={filePath}\n          open={open}\n          onClickOk={(path) => {\n            onSelectFile(path)\n            setOpen(false)\n          }}\n          onClickCancel={() => {\n            setOpen(false)\n          }}\n          onClose={() => setOpen(false)}\n          fileType={fileTreeType}\n        />\n      </div>\n    )\n  },\n)\n\nfunction getFileInputAccept(fileType: FILE_TREE_TYPE | undefined) {\n  switch (fileType) {\n    case FILE_TREE_TYPE_SET.IMAGE:\n      return '.tif'\n    case FILE_TREE_TYPE_SET.CSV:\n      return '.csv'\n    case FILE_TREE_TYPE_SET.HDF5:\n      return '.hdf5,.nwb'\n    default:\n      return undefined\n  }\n}\n","import { Connection } from 'react-flow-renderer'\n\nexport function toHandleId(nodeId: string, name: string, type: string) {\n  return `${nodeId}--${name}--${type}`\n}\n\nexport function getHandleType(handleId: string) {\n  return handleId.split('--')[2]\n}\n\nexport function isValidConnection(connection: Connection) {\n  if (connection.sourceHandle != null && connection.targetHandle != null) {\n    return (\n      getHandleType(connection.sourceHandle) ===\n      getHandleType(connection.targetHandle)\n    )\n  } else {\n    return true\n  }\n}\n","import React, { CSSProperties } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport {\n  selectImageInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { FileSelect } from './FileSelect'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\n// Connection部分のレイアウト\nconst sourceHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  top: 15,\n  border: '1px solid',\n  // borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const ImageFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <ImageFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst ImageFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected: elementSelected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectImageInputNodeSelectedFilePath(nodeId),\n      (a, b) => (a != null && b != null ? arrayEqualityFn(a, b) : a === b),\n    )\n    const onChangeFilePath = (path: string[]) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n\n    const theme = useTheme()\n    const returnType = 'ImageData'\n    const imageColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '250px',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          multiSelect\n          onChangeFilePath={(path) => {\n            if (Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.IMAGE}\n          filePath={filePath ?? []}\n        />\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'image', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: imageColor,\n          }}\n          isValidConnection={isValidConnection}\n        />\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nconst selectDisplayData = (state: RootState) => state.displayData\n\nexport const selectTimeSeriesData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].data\n\nexport const selectTimeSeriesXrange =\n  (filePath: string) => (state: RootState) =>\n    selectDisplayData(state).timeSeries[filePath].xrange\n\nexport const selectTimeSeriesStd = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].std\n\nexport const selectTimeSeriesDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).timeSeries).includes(filePath)\n\nexport const selectTimeSeriesDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].pending\n\nexport const selectTimeSeriesDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].fulfilled\n\nexport const selectTimeSeriesDataError =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).timeSeries[filePath].error\n      : null\n\nexport const selectHeatMapData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].data\n\nexport const selectHeatMapDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).heatMap).includes(filePath)\n\nexport const selectHeatMapDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].pending\n\nexport const selectHeatMapDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].fulfilled\n\nexport const selectHeatMapDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).heatMap[filePath].error\n      : null\n\nexport const selectImageData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).image[filePath]\n\nexport const selectImageDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).image).includes(filePath)\n\nexport const selectImageDataError = (filePath: string) => (state: RootState) =>\n  selectImageDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).image[filePath].error\n    : null\n\nexport const selectImageDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].pending\n\nexport const selectImageDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].fulfilled\n\nexport const selectImageDataMaxSize =\n  (filePath: string) => (state: RootState) => {\n    if (!selectImageDataIsPending(filePath)(state)) {\n      return selectImageData(filePath)(state).data.length - 1\n    } else {\n      return 0\n    }\n  }\n\nexport const selectActiveImageData =\n  (filePath: string, activeIndex: number) => (state: RootState) => {\n    return selectImageData(filePath)(state).data[activeIndex]\n  }\n\nexport const selectCsvData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).csv[filePath].data\n\nexport const selectCsvDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).csv).includes(filePath)\n\nexport const selectCsvDataError = (filePath: string) => (state: RootState) =>\n  selectCsvDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).csv[filePath].error\n    : null\n\nexport const selectCsvDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].pending\n\nexport const selectCsvDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].fulfilled\n\nexport const selectRoiData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).roi[filePath]?.data[0] ?? []\n\nexport const selectRoiDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).roi).includes(filePath)\n\nexport const selectRoiDataError = (filePath: string) => (state: RootState) =>\n  selectRoiDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).roi[filePath].error\n    : null\n\nexport const selectRoiDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].pending\n\nexport const selectRoiDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].fulfilled\n\nexport const selectRoiUniqueList = (filePath: string) => (state: RootState) => {\n  if (selectRoiDataIsFulfilled(filePath)(state)) {\n    return selectDisplayData(state).roi[filePath].roiUniqueList\n  }\n  return null\n}\n\nexport const selectScatterData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).scatter[filePath]?.data ?? []\n\nexport const selectScatterDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).scatter).includes(filePath)\n\nexport const selectScatterDataError =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).scatter[filePath].error\n      : null\n\nexport const selectScatterDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].pending\n\nexport const selectScatterDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].fulfilled\n\nexport const selectBarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.data ?? []\n\nexport const selectBarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).bar).includes(filePath)\n\nexport const selectBarDataError = (filePath: string) => (state: RootState) =>\n  selectBarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).bar[filePath].error\n    : null\n\nexport const selectBarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].pending\n\nexport const selectBarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].fulfilled\n\nexport const selectHTMLData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).html[filePath]?.data ?? ''\n\nexport const selectHTMLDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).html).includes(filePath)\n\nexport const selectHTMLDataError = (filePath: string) => (state: RootState) =>\n  selectHTMLDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).html[filePath].error\n    : null\n\nexport const selectHTMLDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].pending\n\nexport const selectHTMLDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].fulfilled\n","import { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\n\nexport const VISUALIZE_ITEM_SLICE_NAME = 'visualaizeItem'\n\nexport type VisualaizeItem = {\n  selectedItemId: number | null\n  items: {\n    [itemId: number]: VisualaizeItemType\n  }\n  layout: ItemLayout\n}\n\nexport type ItemLayout = number[][] // itemIdをrow,columnで並べる\n\nexport type VisualaizeItemType = DisplayDataItem\n\nexport interface ItemBaseType<T extends VISUALIZE_ITEM_TYPE> {\n  itemType: T\n  width: number\n  height: number\n}\n\nexport type ColorType = {\n  rgb: string\n  offset: string\n}\n\nexport const VISUALIZE_ITEM_TYPE_SET = {\n  DISPLAY_DATA: 'displayData',\n} as const\n\nexport type VISUALIZE_ITEM_TYPE =\n  typeof VISUALIZE_ITEM_TYPE_SET[keyof typeof VISUALIZE_ITEM_TYPE_SET]\n\nexport type DisplayDataItem =\n  | ImageItem\n  | TimeSeriesItem\n  | HeatMapItem\n  | CsvItem\n  | RoiItem\n  | ScatterItem\n  | BarItem\n  | HDF5Item\n  | HTMLItem\n  | FluoItem\n  | BehaviorItem\n\nexport interface DisplayDataItemBaseType extends ItemBaseType<'displayData'> {\n  filePath: string | null\n  nodeId: string | null\n  dataType: DATA_TYPE | null\n  isWorkflowDialog: boolean\n}\n\nexport interface ImageItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.IMAGE\n  activeIndex: number\n  startIndex: number\n  endIndex: number\n  showticklabels: boolean\n  zsmooth: string | boolean\n  showline: boolean\n  showgrid: boolean\n  showscale: boolean\n  colors: ColorType[]\n  alpha: number\n  roiItem: RoiItem | null\n  roiAlpha: number\n  duration: number\n  clickedDataId?: string\n  saveFileName: string\n  saveFormat: string\n}\n\nexport interface TimeSeriesItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.TIME_SERIES\n  offset: boolean\n  span: number\n  showgrid: boolean\n  showline: boolean\n  showticklabels: boolean\n  zeroline: boolean\n  xrange: {\n    left: number | undefined\n    right: number | undefined\n  }\n  maxIndex: number\n  refImageItemId: number | null\n  drawOrderList: string[]\n}\n\nexport interface HeatMapItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HEAT_MAP\n  showscale: boolean\n  colors: ColorType[]\n}\nexport interface CsvItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.CSV\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\nexport interface RoiItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.ROI\n  // colors: ColorType[]\n}\n\nexport interface ScatterItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.SCATTER\n  xIndex: number\n  yIndex: number\n}\n\nexport interface BarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BAR\n}\n\nexport interface HDF5Item extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HDF5\n}\n\nexport interface HTMLItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HTML\n}\n\nexport interface FluoItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.FLUO\n}\n\nexport interface BehaviorItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BEHAVIOR\n}\n","import { DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  VisualaizeItemType,\n  DisplayDataItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  ImageItem,\n  TimeSeriesItem,\n  HeatMapItem,\n  RoiItem,\n  ScatterItem,\n  CsvItem,\n} from './VisualizeItemType'\n\nexport function isDisplayDataItem(\n  item: VisualaizeItemType,\n): item is DisplayDataItem {\n  return item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA\n}\n\nexport function isImageItem(item: VisualaizeItemType): item is ImageItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.IMAGE\n  )\n}\n\nexport function isTimeSeriesItem(\n  item: VisualaizeItemType,\n): item is TimeSeriesItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.TIME_SERIES\n  )\n}\n\nexport function isCsvItem(item: VisualaizeItemType): item is CsvItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.CSV\n  )\n}\n\nexport function isHeatMapItem(item: VisualaizeItemType): item is HeatMapItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HEAT_MAP\n  )\n}\n\nexport function isRoiItem(item: VisualaizeItemType): item is RoiItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.ROI\n  )\n}\n\nexport function isScatterItem(item: VisualaizeItemType): item is ScatterItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.SCATTER\n  )\n}\n","import { RootState } from 'store/store'\nimport {\n  selectRoiData,\n  selectRoiUniqueList,\n  selectTimeSeriesData,\n  selectTimeSeriesDataIsInitialized,\n} from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport {\n  isDisplayDataItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isHeatMapItem,\n  isCsvItem,\n  isScatterItem,\n} from './VisualizeItemUtils'\n\nexport const selectSelectedVisualizeItemId = (state: RootState) =>\n  state.visualaizeItem.selectedItemId\n\nexport const selectVisualizeImageItemIdList = (state: RootState) =>\n  Object.keys(state.visualaizeItem.items)\n    .map(Number)\n    .filter((itemId) => {\n      const item = selectVisualizeItemById(itemId)(state)\n      return isImageItem(item) && !item.isWorkflowDialog\n    })\n\nexport const selectVisualizeItems = (state: RootState) =>\n  state.visualaizeItem.items\n\nexport const selectVisualizeItemById = (itemId: number) => (state: RootState) =>\n  state.visualaizeItem.items[itemId]\n\nexport const selectVisualizeItemLayout = (state: RootState) =>\n  state.visualaizeItem.layout\n\nexport const selectVisualizeItemIsWorkflowDialog =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).isWorkflowDialog\n  }\n\nexport const selectVisualizeItemIdForWorkflowDialog =\n  (nodeId: string, filePath: string, dataType: DATA_TYPE) =>\n  (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    let targetItemId: null | number = null\n    for (const [itemId, value] of Object.entries(items)) {\n      if (\n        value.nodeId === nodeId &&\n        value.filePath === filePath &&\n        value.dataType === dataType &&\n        value.isWorkflowDialog\n      ) {\n        targetItemId = Number(itemId)\n      }\n    }\n    return targetItemId\n  }\n\nexport const selectVisualizeItemWidth =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).width\n  }\n\nexport const selectVisualizeItemHeight =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).height\n  }\n\nexport const selectVisualizeItemType = (itemId: number) => (state: RootState) =>\n  selectVisualizeItemById(itemId)(state).itemType\n\nexport const selectVisualizeDataType =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.dataType\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataNodeId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.nodeId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemNodeId = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.nodeId ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemFilePath = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.filePath ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemShowticklabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemZsmooth =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.zsmooth\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemStartIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.startIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemEndIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.endIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemColors = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.colors\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemActiveIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.activeIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemAlpha = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.alpha\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemRoiAlpha =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.roiAlpha\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemRoiFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      if (item.roiItem) {\n        return item.roiItem.filePath\n      } else {\n        return null\n      }\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemDuration =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.duration\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemSaveFilename =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.saveFileName\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemSaveFormat =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.saveFormat\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemOffset =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.offset\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemSpan =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.span\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowTickLabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemZeroLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.zeroline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemXrange =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.xrange\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemDrawOrderList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.drawOrderList\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectTimeSeriesItemRefImageItemId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.refImageItemId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemRefRoiUniqueList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      if (item.refImageItemId != null) {\n        const imageItem = selectVisualizeItems(state)[item.refImageItemId]\n        if (isImageItem(imageItem) && imageItem.roiItem?.filePath != null) {\n          return selectRoiUniqueList(imageItem.roiItem.filePath)(state)\n        }\n      }\n      return null\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemKeys =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const path = selectTimeSeriesItemFilePath(itemId)(state)\n      if (path != null && selectTimeSeriesDataIsInitialized(path)(state)) {\n        const dataKeys = Object.keys(selectTimeSeriesData(path)(state))\n        const roiUniqueList =\n          selectTimeSeriesItemRefRoiUniqueList(itemId)(state)\n        if (roiUniqueList != null) {\n          return dataKeys.filter((key) => roiUniqueList.includes(key))\n        } else {\n          return dataKeys\n        }\n      } else {\n        return []\n      }\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectRoiItemIndex =\n  (itemId: number, roiFilePath: string | null) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const maxIdx = item.maxIndex\n      if (maxIdx !== 0) {\n        return maxIdx\n      }\n    }\n\n    if (roiFilePath !== null) {\n      return selectRoiItemMaxNumber(roiFilePath)(state)\n    } else {\n      return 0\n    }\n  }\n\nexport const selectRoiItemMaxNumber =\n  (roiFilePath: string) => (state: RootState) => {\n    const roiData = selectRoiData(roiFilePath)(state)\n    if (roiData.length !== 0) {\n      return Math.max(...roiData.map((arr) => Math.max(...arr)))\n    } else {\n      return 0\n    }\n  }\n\nexport const selectHeatMapItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectHeatMapItemColors =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.colors\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemTranspose =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.transpose\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetHeader =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.setHeader\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isCsvItem(item)) {\n    return item.setIndex\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectScatterItemXIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.xIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectScatterItemYIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.yIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectDisplayDataIsSingle =\n  (itemId: number) => (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    const item = items[itemId]\n    const targetFilePath = item.filePath\n    return (\n      Object.values(items).filter((value) => value.filePath === targetFilePath)\n        .length === 1\n    )\n  }\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type TimeSeriesData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getTimeSeriesInitDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/inittimedata/${path}`)\n  return response.data\n}\n\nexport async function getTimeSeriesDataByIdApi(\n  path: string,\n  index: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/timedata/${path}`, {\n    params: {\n      index: index,\n    },\n  })\n  return response.data\n}\n\nexport async function getTimeSeriesAllDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/alltimedata/${path}`)\n  return response.data\n}\n\nexport type HeatMapData = number[][]\n\nexport async function getHeatMapDataApi(\n  path: string,\n): Promise<{ data: HeatMapData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`)\n  return response.data\n}\n\nexport type ImageData = number[][][]\n\nexport async function getImageDataApi(\n  path: string,\n  params: {\n    startIndex?: number\n    endIndex?: number\n  },\n): Promise<{ data: ImageData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n    params: {\n      start_index: params.startIndex,\n      end_index: params.endIndex,\n    },\n  })\n  return response.data\n}\n\nexport type CsvData = number[][]\n\nexport async function getCsvDataApi(path: string): Promise<{ data: CsvData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/csv/${path}`)\n  return response.data\n}\n\nexport type RoiData = number[][][]\n\nexport async function getRoiDataApi(path: string): Promise<{ data: RoiData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {})\n  return response.data\n}\n\nexport type ScatterData = number[][][]\n\nexport async function getScatterDataApi(\n  path: string,\n): Promise<{ data: ScatterData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type BarData = number[][][]\n\nexport async function getBarDataApi(path: string): Promise<{ data: BarData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type HTMLData = string\n\nexport async function getHTMLDataApi(\n  path: string,\n): Promise<{ data: HTMLData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/html/${path}`, {})\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  TimeSeriesData,\n  CsvData,\n  RoiData,\n  ScatterData,\n  BarData,\n  HTMLData,\n  ImageData,\n  HeatMapData,\n  getTimeSeriesInitDataApi,\n  getTimeSeriesDataByIdApi,\n  getTimeSeriesAllDataApi,\n  getHeatMapDataApi,\n  getImageDataApi,\n  getCsvDataApi,\n  getRoiDataApi,\n  getScatterDataApi,\n  getBarDataApi,\n  getHTMLDataApi,\n} from 'api/outputs/Outputs'\nimport { DISPLAY_DATA_SLICE_NAME } from './DisplayDataType'\n\nexport const getTimeSeriesInitData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; itemId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesInitData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesInitDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesDataById = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; index: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesDataById`,\n  async ({ path, index }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesDataByIdApi(path, index)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesAllData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesAllData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesAllDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHeatMapData = createAsyncThunk<\n  { data: HeatMapData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHeatMapData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHeatMapDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getImageData = createAsyncThunk<\n  { data: ImageData },\n  { path: string; startIndex?: number; endIndex?: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getImageData`,\n  async ({ path, startIndex, endIndex }, thunkAPI) => {\n    try {\n      const response = await getImageDataApi(path, { startIndex, endIndex })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getCsvData = createAsyncThunk<\n  {\n    data: CsvData\n  },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getCsvData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getCsvDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getRoiData = createAsyncThunk<{ data: RoiData }, { path: string }>(\n  `${DISPLAY_DATA_SLICE_NAME}/getRoiData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getRoiDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getScatterData = createAsyncThunk<\n  { data: ScatterData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getScatterData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getScatterDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getBarData = createAsyncThunk<{ data: BarData }, { path: string }>(\n  `${DISPLAY_DATA_SLICE_NAME}/getBarData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getBarDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHTMLData = createAsyncThunk<\n  { data: HTMLData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHTMLData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHTMLDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { ThunkApiConfig } from 'store/store'\nimport { getTimeSeriesDataById } from '../DisplayData/DisplayDataActions'\nimport { selectRoiData } from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport { selectVisualizeItems } from './VisualizeItemSelectors'\nimport { VISUALIZE_ITEM_SLICE_NAME } from './VisualizeItemType'\nimport { isImageItem, isTimeSeriesItem } from './VisualizeItemUtils'\n\nexport const setImageItemClikedDataId = createAsyncThunk<\n  void,\n  { itemId: number; clickedDataId: string },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setImageItemClikedDataId`,\n  ({ itemId, clickedDataId }, thunkAPI) => {\n    const items = selectVisualizeItems(thunkAPI.getState())\n    Object.values(items).forEach((item) => {\n      if (\n        isTimeSeriesItem(item) &&\n        item.filePath != null &&\n        item.refImageItemId === itemId &&\n        !item.drawOrderList.includes(clickedDataId)\n      ) {\n        thunkAPI.dispatch(\n          getTimeSeriesDataById({ path: item.filePath, index: clickedDataId }),\n        )\n      }\n    })\n  },\n)\n\nexport const selectingImageArea = createAsyncThunk<\n  string[],\n  {\n    itemId: number\n    range: {\n      x: number[]\n      y: number[]\n    }\n  },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/selectingImageArea`,\n  ({ itemId, range }, thunkAPI) => {\n    const { x, y } = range\n    const [x1, x2] = x.map(Math.round)\n    const [y1, y2] = y.map(Math.round)\n    const selectedZList: string[] = []\n    const items = selectVisualizeItems(thunkAPI.getState())\n    const imageItem = items[itemId]\n    if (isImageItem(imageItem) && imageItem.roiItem != null) {\n      const roiFilePath = imageItem.roiItem.filePath\n      if (roiFilePath != null) {\n        const roiData = selectRoiData(roiFilePath)(thunkAPI.getState())\n        for (let x = x1; x <= x2; x++) {\n          for (let y = y1; y <= y2; y++) {\n            const z = roiData[y][x]\n            if (z != null) {\n              const zNum = String(z) // indexとidのずれを回避\n              if (!selectedZList.includes(zNum)) {\n                selectedZList.push(zNum)\n              }\n            }\n          }\n        }\n        Object.values(items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            const path = item.filePath\n            selectedZList.forEach((selectedZ) => {\n              thunkAPI.dispatch(\n                getTimeSeriesDataById({\n                  path,\n                  index: String(selectedZ),\n                }),\n              )\n            })\n          }\n        })\n      }\n    }\n    return selectedZList\n  },\n)\n\ntype DeleteOption =\n  | {\n      deleteData: true\n      dataType: DATA_TYPE\n      filePath: string\n    }\n  | { deleteData: false }\n\ntype DeleteDisplayItemArgs = {\n  itemId: number\n} & DeleteOption\n\nexport const deleteDisplayItem = createAction<DeleteDisplayItemArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/deleteDisplayItem`,\n)\n\ntype SetNewDisplayDataPathArgs = {\n  itemId: number\n  filePath: string\n  nodeId: string | null\n  dataType?: DATA_TYPE\n} & (\n  | {\n      deleteData: true\n      prevFilePath: string\n      prevDataType: DATA_TYPE\n    }\n  | { deleteData: false }\n)\n\nexport const setNewDisplayDataPath = createAction<SetNewDisplayDataPathArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setNewDisplayDataPath`,\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  deleteDisplayItem,\n  selectingImageArea,\n  setImageItemClikedDataId,\n  setNewDisplayDataPath,\n} from './VisualizeItemActions'\n\nimport {\n  HeatMapItem,\n  ImageItem,\n  CsvItem,\n  TimeSeriesItem,\n  RoiItem,\n  ScatterItem,\n  VisualaizeItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  BarItem,\n  HDF5Item,\n  HTMLItem,\n  FluoItem,\n  BehaviorItem,\n  VISUALIZE_ITEM_SLICE_NAME,\n} from './VisualizeItemType'\nimport {\n  isDisplayDataItem,\n  isHeatMapItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isCsvItem,\n  isScatterItem,\n} from './VisualizeItemUtils'\n\nexport const initialState: VisualaizeItem = {\n  items: {},\n  selectedItemId: null,\n  layout: [],\n}\nconst displayDataCommonInitialValue = {\n  itemType: VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA,\n  filePath: null,\n  nodeId: null,\n  width: 500,\n  height: 500,\n  isWorkflowDialog: false,\n}\nconst imageItemInitialValue: ImageItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.IMAGE,\n  startIndex: 1,\n  endIndex: 10,\n  showticklabels: false,\n  showline: true,\n  zsmooth: 'best',\n  showgrid: false,\n  showscale: false,\n  colors: [\n    { rgb: `rgb(0, 0, 0)`, offset: '0' },\n    { rgb: `rgb(255, 255, 255)`, offset: '1.0' },\n  ],\n  activeIndex: 0,\n  alpha: 1.0,\n  roiItem: null,\n  roiAlpha: 1.0,\n  duration: 500,\n  saveFileName: 'newPlot',\n  saveFormat: 'png',\n}\nconst timeSeriesItemInitialValue: TimeSeriesItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.TIME_SERIES,\n  offset: true,\n  span: 5,\n  showgrid: true,\n  showline: true,\n  showticklabels: true,\n  zeroline: false,\n  xrange: {\n    left: undefined,\n    right: undefined,\n  },\n  maxIndex: 0,\n  drawOrderList: [],\n  refImageItemId: null,\n}\nconst heatMapItemInitialValue: HeatMapItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HEAT_MAP,\n  showscale: true,\n  colors: [\n    { rgb: `rgb(0, 0, 255)`, offset: '0' },\n    { rgb: `rgb(200, 200, 200)`, offset: '0.5' },\n    { rgb: `rgb(255, 0, 0)`, offset: '1.0' },\n  ],\n}\nconst csvItemInitialValue: CsvItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.CSV,\n  setHeader: null,\n  setIndex: false,\n  transpose: false,\n}\nconst roiItemInitialValue: RoiItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.ROI,\n}\nconst scatterItemInitialValue: ScatterItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.SCATTER,\n  xIndex: 0,\n  yIndex: 1,\n}\nconst barItemInitialValue: BarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BAR,\n}\nconst hdf5ItemInitialValue: HDF5Item = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HDF5,\n}\nconst htmlItemInitialValue: HTMLItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HTML,\n}\nconst fluoItemInitialValue: FluoItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.FLUO,\n}\nconst behaviorItemInitialValue: BehaviorItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BEHAVIOR,\n}\n\nfunction getDisplayDataItemInitialValue(dataType: DATA_TYPE) {\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return imageItemInitialValue\n    case DATA_TYPE_SET.HEAT_MAP:\n      return heatMapItemInitialValue\n    case DATA_TYPE_SET.TIME_SERIES:\n      return timeSeriesItemInitialValue\n    case DATA_TYPE_SET.CSV:\n      return csvItemInitialValue\n    case DATA_TYPE_SET.ROI:\n      return roiItemInitialValue\n    case DATA_TYPE_SET.SCATTER:\n      return scatterItemInitialValue\n    case DATA_TYPE_SET.BAR:\n      return barItemInitialValue\n    case DATA_TYPE_SET.HDF5:\n      return hdf5ItemInitialValue\n    case DATA_TYPE_SET.HTML:\n      return htmlItemInitialValue\n    case DATA_TYPE_SET.FLUO:\n      return fluoItemInitialValue\n    case DATA_TYPE_SET.BEHAVIOR:\n      return behaviorItemInitialValue\n  }\n}\n\nexport const visualaizeItemSlice = createSlice({\n  name: VISUALIZE_ITEM_SLICE_NAME,\n  initialState,\n  reducers: {\n    pushInitialItemToNewRow: (state) => {\n      const newItemId = addInitialItemFn(state)\n      state.layout.push([newItemId])\n    },\n    insertInitialItemToNextColumn: (state, action: PayloadAction<number>) => {\n      const newItemId = addInitialItemFn(state)\n      const targetItemId = action.payload\n      const targetRowIndex = state.layout.findIndex((row) =>\n        row.includes(targetItemId),\n      )\n      const targetColumnIndex =\n        state.layout[targetRowIndex].indexOf(targetItemId)\n      state.layout[targetRowIndex].splice(targetColumnIndex + 1, 0, newItemId)\n    },\n    addItemForWorkflowDialog: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        filePath: string\n        dataType: DATA_TYPE\n      }>,\n    ) => {\n      const { nodeId, filePath, dataType } = action.payload\n      const maxId = getMaxItemId(state)\n      const newItemId = maxId != null ? maxId + 1 : 0\n      state.items[newItemId] = {\n        ...getDisplayDataItemInitialValue(dataType),\n        isWorkflowDialog: true,\n        nodeId,\n        filePath,\n      }\n    },\n    deleteAllItemForWorkflowDialog: (state) => {\n      const targetItemIdList = Object.entries(state.items)\n        .filter(([itemId, value]) => value.isWorkflowDialog)\n        .map(([itemId, value]) => Number(itemId))\n      targetItemIdList.forEach(\n        (targetItemId) => delete state.items[targetItemId],\n      )\n    },\n    setItemSize: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        width: number\n        height: number\n      }>,\n    ) => {\n      const { itemId, width, height } = action.payload\n      const targetItem = state.items[itemId]\n      targetItem.width = width\n      targetItem.height = height\n    },\n    selectItem: (state, action: PayloadAction<number>) => {\n      state.selectedItemId = action.payload\n    },\n    setRoiItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        Object.values(state.items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            item.drawOrderList = []\n          }\n        })\n\n        if (targetItem.roiItem != null) {\n          targetItem.roiItem.filePath = filePath\n          targetItem.roiItem.nodeId = nodeId\n        } else {\n          targetItem.roiItem = {\n            ...roiItemInitialValue,\n            filePath,\n            nodeId,\n          }\n        }\n      }\n    },\n    setFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isDisplayDataItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      } else {\n        throw new Error('error')\n      }\n    },\n    setImageItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setTimeSeriesItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setHeatMapItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    resetImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex?: number\n        endIndex?: number\n      }>,\n    ) => {\n      resetImageActiveIndexFn(state, action.payload)\n    },\n    incrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex++\n      }\n    },\n    decrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex--\n      }\n    },\n    setImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        activeIndex: number\n      }>,\n    ) => {\n      const { itemId, activeIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex = activeIndex\n      }\n    },\n    setImageItemShowticklabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setImageItemZsmooth: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zsmooth: string | boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.zsmooth = action.payload.zsmooth\n      }\n    },\n    setImageItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setImageItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setImageItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setImageItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setImageItemStartIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.startIndex = action.payload.startIndex\n      }\n    },\n    setImageItemEndIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        endIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.endIndex = action.payload.endIndex\n      }\n    },\n    setImageItemAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        alpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.alpha = action.payload.alpha\n      }\n    },\n    setImageItemRoiAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        roiAlpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.roiAlpha = action.payload.roiAlpha\n      }\n    },\n    setImageItemDuration: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        duration: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.duration = action.payload.duration\n      }\n    },\n    setImageItemSaveFormat: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFormat: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.saveFormat = action.payload.saveFormat\n      }\n    },\n    setImageItemSaveFileName: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFileName: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.saveFileName = action.payload.saveFileName\n      }\n    },\n    setTimeSeriesItemOffset: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        offset: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.offset = action.payload.offset\n      }\n    },\n    setTimeSeriesItemSpan: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        span: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.span = action.payload.span\n      }\n    },\n    setTimeSeriesItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setTimeSeriesItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setTimeSeriesItemShowTickLabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setTimeSeriesItemZeroLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zeroline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.zeroline = action.payload.zeroline\n      }\n    },\n    setTimeSeriesItemXrangeLeft: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        left: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.left = action.payload.left\n      }\n    },\n    setTimeSeriesItemXrangeRight: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        right: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.right = action.payload.right\n      }\n    },\n    setTimeSeriesItemDrawOrderList: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        drawOrderList: string[]\n      }>,\n    ) => {\n      const { itemId, drawOrderList } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.drawOrderList = drawOrderList\n      }\n    },\n    setTimeSeriesItemMaxIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        maxIndex: number\n      }>,\n    ) => {\n      const { itemId, maxIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.maxIndex = maxIndex\n      }\n    },\n    setTimeSeriesRefImageItemId: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        refImageItemId: number | null\n      }>,\n    ) => {\n      const { itemId, refImageItemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.refImageItemId = refImageItemId ?? null\n        targetItem.drawOrderList = []\n      }\n    },\n    setHeatMapItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setHeatMapItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setCsvItemTranspose: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        transpose: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.transpose = action.payload.transpose\n      }\n    },\n    setCsvItemSetHeader: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setHeader: number | null\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setHeader = action.payload.setHeader\n      }\n    },\n    setCsvItemSetIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setIndex: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setIndex = action.payload.setIndex\n      }\n    },\n    setScatterItemXIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        xIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.xIndex = action.payload.xIndex\n      }\n    },\n    setScatterItemYIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        yIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.yIndex = action.payload.yIndex\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        const itemId = action.payload.itemId\n\n        if (isImageItem(state.items[itemId])) {\n          Object.values(state.items).forEach((item) => {\n            if (isTimeSeriesItem(item) && item.refImageItemId === itemId) {\n              item.refImageItemId = null\n            }\n          })\n        }\n\n        delete state.items[itemId]\n        if (itemId === state.selectedItemId) {\n          state.selectedItemId = null\n        }\n        state.layout.forEach((row, i) => {\n          const index = row.indexOf(itemId)\n          if (index !== -1) {\n            row.splice(index, 1)\n          }\n          if (row.length === 0) {\n            state.layout.splice(i, 1)\n          }\n        })\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        const { itemId, filePath, nodeId, dataType } = action.payload\n        const targetItem = state.items[itemId]\n        if (isDisplayDataItem(targetItem)) {\n          if (dataType != null) {\n            state.items[itemId] = {\n              ...getDisplayDataItemInitialValue(dataType),\n              width: targetItem.width,\n              height: targetItem.height,\n              filePath,\n              nodeId,\n            }\n          } else {\n            targetItem.filePath = filePath\n            targetItem.nodeId = nodeId\n          }\n        } else {\n          throw new Error('invalid VisualaizeItemType')\n        }\n        resetImageActiveIndexFn(state, { itemId })\n      })\n      .addCase(setImageItemClikedDataId.fulfilled, (state, action) => {\n        const { itemId: imageItemId, clickedDataId } = action.meta.arg\n        const targetItem = state.items[imageItemId]\n        if (isImageItem(targetItem)) {\n          targetItem.clickedDataId = clickedDataId\n        }\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId &&\n              !item.drawOrderList.includes(clickedDataId)\n            ) {\n              item.drawOrderList.push(clickedDataId)\n            }\n          }\n        })\n      })\n      .addCase(selectingImageArea.fulfilled, (state, action) => {\n        const { itemId: imageItemId } = action.meta.arg\n        const selectedZList = action.payload\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId\n            ) {\n              item.drawOrderList = selectedZList\n            }\n          }\n        })\n      })\n  },\n})\n\nfunction getMaxItemId(state: VisualaizeItem) {\n  const idList = Object.keys(state.items).map((key) => Number(key))\n  const maxId =\n    idList.length > 0 ? idList.reduce((a, b) => Math.max(a, b)) : null\n  return maxId\n}\n\nfunction addInitialItemFn(state: VisualaizeItem) {\n  const maxId = getMaxItemId(state)\n  const nextId = maxId != null ? maxId + 1 : 0\n  state.items[nextId] = getDisplayDataItemInitialValue(DATA_TYPE_SET.IMAGE)\n  state.selectedItemId = nextId\n  return nextId\n}\n\nfunction resetImageActiveIndexFn(\n  state: VisualaizeItem,\n  args: {\n    itemId: number\n  },\n) {\n  const { itemId } = args\n  const targetItem = state.items[itemId]\n  if (isImageItem(targetItem)) {\n    targetItem.activeIndex = 0\n  }\n}\n\nexport const {\n  pushInitialItemToNewRow,\n  insertInitialItemToNextColumn,\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n  setItemSize,\n  selectItem,\n  setFilePath,\n  setHeatMapItemFilePath,\n  setImageItemFilePath,\n  setTimeSeriesItemFilePath,\n  setRoiItemFilePath,\n  resetImageActiveIndex,\n  incrementImageActiveIndex,\n  decrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowLine,\n  setImageItemShowGrid,\n  setImageItemShowScale,\n  setImageItemColors,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemAlpha,\n  setImageItemRoiAlpha,\n  setImageItemDuration,\n  setImageItemSaveFormat,\n  setImageItemSaveFileName,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemDrawOrderList,\n  setTimeSeriesItemMaxIndex,\n  setTimeSeriesRefImageItemId,\n  setHeatMapItemShowScale,\n  setHeatMapItemColors,\n  setCsvItemTranspose,\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} = visualaizeItemSlice.actions\n\nexport default visualaizeItemSlice.reducer\n","import React from 'react'\nimport { DATA_TYPE } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const DisplayDataContext = React.createContext<{\n  nodeId: string | null\n  filePath: string\n  dataType: DATA_TYPE\n  itemId: number\n}>({ nodeId: '', filePath: '', dataType: 'csv', itemId: NaN })\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectHeatMapData,\n  selectHeatMapDataError,\n  selectHeatMapDataIsFulfilled,\n  selectHeatMapDataIsInitialized,\n  selectHeatMapDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHeatMapData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const HeatMapPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHeatMapDataIsPending(path))\n  const isInitialized = useSelector(selectHeatMapDataIsInitialized(path))\n  const error = useSelector(selectHeatMapDataError(path))\n  const isFulfilled = useSelector(selectHeatMapDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHeatMapData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HeatMapImple />\n  } else {\n    return null\n  }\n})\n\nconst HeatMapImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const heatMapData = useSelector(selectHeatMapData(path), heatMapDataEqualtyFn)\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const colorscale = useSelector(selectHeatMapItemColors(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      heatMapData != null\n        ? [\n            {\n              z: heatMapData,\n              x: heatMapData.map((_, i) => i),\n              y: heatMapData[0].map((_, i) => i),\n              type: 'heatmap',\n              name: 'heatmap',\n              colorscale: colorscale.map((value) => {\n                let offset: number = parseFloat(value.offset)\n                const offsets: number[] = colorscale.map((v) => {\n                  return parseFloat(v.offset)\n                })\n                // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n                if (offset === Math.max(...offsets)) {\n                  offset = 1.0\n                }\n                if (offset === Math.min(...offsets)) {\n                  offset = 0.0\n                }\n                return [offset, value.rgb]\n              }),\n              hoverongaps: false,\n              showlegend: true,\n              showscale: showscale,\n            },\n          ]\n        : [],\n    [heatMapData, showscale, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n  }\n\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction heatMapDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, { useCallback, useEffect } from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from 'store/store'\nimport { Datum, LayoutAxis, PlotData, PlotSelectionEvent } from 'plotly.js'\nimport createColormap from 'colormap'\nimport { Button, LinearProgress, TextField, Typography } from '@mui/material'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport Slider from '@mui/material/Slider'\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport { DisplayDataContext } from '../DataContext'\n\nimport {\n  selectImageDataError,\n  selectImageDataIsInitialized,\n  selectImageDataIsPending,\n  selectImageDataIsFulfilled,\n  selectActiveImageData,\n  selectRoiData,\n  selectImageDataMaxSize,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getImageData,\n  getRoiData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowLine,\n  selectImageItemShowGrid,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemActiveIndex,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectRoiItemFilePath,\n  selectRoiItemIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemDuration,\n  selectVisualizeItemWidth,\n  selectVisualizeItemHeight,\n  selectImageItemSaveFilename,\n  selectImageItemSaveFormat,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  incrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemDuration,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  selectingImageArea,\n  setImageItemClikedDataId,\n} from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const ImagePlot = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const isPending = useSelector(selectImageDataIsPending(path))\n  const isInitialized = useSelector(selectImageDataIsInitialized(path))\n  const isFulfilled = useSelector(selectImageDataIsFulfilled(path))\n  const error = useSelector(selectImageDataError(path))\n\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(\n        getImageData({\n          path,\n          startIndex: startIndex ?? 1,\n          endIndex: endIndex ?? 10,\n        }),\n      )\n    }\n    if (roiFilePath != null) {\n      dispatch(getRoiData({ path: roiFilePath }))\n    }\n  }, [dispatch, isInitialized, path, startIndex, endIndex, roiFilePath])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ImagePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ImagePlotImple = React.memo(() => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const activeIndex = useSelector(selectImageItemActiveIndex(itemId))\n  return <ImagePlotChart activeIndex={activeIndex} />\n})\n\nconst ImagePlotChart = React.memo<{\n  activeIndex: number\n}>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(\n    selectActiveImageData(path, activeIndex),\n    imageDataEqualtyFn,\n  )\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const roiData = useSelector(\n    (state: RootState) =>\n      roiFilePath != null ? selectRoiData(roiFilePath)(state) : [],\n    imageDataEqualtyFn,\n  )\n\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const colorscale = useSelector(selectImageItemColors(itemId))\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const timeDataMaxIndex = useSelector(selectRoiItemIndex(itemId, roiFilePath))\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscaleRoi = createColormap({\n    colormap: 'jet',\n    nshades: 100, //timeDataMaxIndex >= 6 ? timeDataMaxIndex : 6,\n    format: 'rgba',\n    alpha: 1.0,\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'images',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          const rgb = value.rgb\n            .replace(/[^0-9,]/g, '')\n            .split(',')\n            .map((x) => Number(x))\n          const hex = rgba2hex(rgb, alpha)\n          return [offset, hex]\n        }),\n        hoverongaps: false,\n        showscale: showscale,\n        zsmooth: zsmooth, // ['best', 'fast', false]\n        // showlegend: true,\n      },\n      {\n        z: roiData,\n        type: 'heatmap',\n        name: 'roi',\n        hovertemplate: 'cell id: %{z}',\n        colorscale: [...Array(timeDataMaxIndex)].map((_, i) => {\n          const new_i = Math.floor(((i % 10) * 10 + i / 10) % 100)\n          const offset = i / (timeDataMaxIndex - 1)\n          const rgba = colorscaleRoi[new_i]\n          const hex = rgba2hex(rgba, roiAlpha)\n          return [offset, hex]\n        }),\n        zmin: 1,\n        zmax: timeDataMaxIndex,\n        hoverongaps: false,\n        zsmooth: false,\n        showscale: false,\n      },\n    ],\n    [\n      imageData,\n      roiData,\n      zsmooth,\n      showscale,\n      colorscale,\n      colorscaleRoi,\n      timeDataMaxIndex,\n      roiAlpha,\n      alpha,\n    ],\n  )\n\n  const [selectMode, setSelectMode] = React.useState(false)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectMode(event.target.checked)\n  }\n  // debounceでイベントを間引きする。onSelectedはそれっぽい名前だが動かなかった。\n  const onSelecting = debounce((event: PlotSelectionEvent) => {\n    if (event.range != null) {\n      dispatch(selectingImageArea({ itemId, range: event.range }))\n    }\n  })\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: selectMode ? 'select' : 'pan',\n      xaxis: {\n        autorange: true,\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n        showticklabels: showticklabels,\n      },\n      yaxis: {\n        automargin: true,\n        autorange: 'reversed',\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n        showticklabels: showticklabels, // todo\n      },\n    }),\n    [showgrid, showline, showticklabels, width, height, selectMode],\n  )\n\n  const saveFileName = useSelector(selectImageItemSaveFilename(itemId))\n  const saveFormat = useSelector(selectImageItemSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n      // scale: number;\n      // format: 'png' | 'svg' | 'jpeg' | 'webp';\n      // height: number;\n      // width: number;\n    },\n  }\n\n  const onClick = (event: any) => {\n    const points: PlotDatum = event.points[0]\n    if (points.curveNumber >= 1) {\n      dispatch(\n        setImageItemClikedDataId({\n          itemId,\n          clickedDataId: points.z.toString(),\n        }),\n      )\n    }\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <PlayBack activeIndex={activeIndex} />\n        </Box>\n        <FormControlLabel\n          sx={{ m: 1 }}\n          control={<Switch checked={selectMode} onChange={handleChange} />}\n          label=\"drag select\"\n        />\n      </Box>\n      <PlotlyChart\n        data={data}\n        layout={layout}\n        config={config}\n        onClick={onClick}\n        onSelecting={onSelecting}\n      />\n    </div>\n  )\n})\n\nconst PlayBack = React.memo<{ activeIndex: number }>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const maxSize = useSelector(selectImageDataMaxSize(path))\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const duration = useSelector(selectImageItemDuration(itemId))\n\n  const onSliderChange = (\n    event: Event,\n    value: number | number[],\n    activeThumb: number,\n  ) => {\n    if (typeof value === 'number') {\n      const newIndex = value - startIndex\n      if (newIndex >= 0 && newIndex !== activeIndex) {\n        dispatch(setImageActiveIndex({ itemId, activeIndex: newIndex }))\n      }\n    }\n  }\n\n  const intervalRef = React.useRef<null | NodeJS.Timeout>(null)\n\n  useEffect(() => {\n    if (intervalRef.current !== null) {\n      if (activeIndex >= maxSize) {\n        clearInterval(intervalRef.current)\n        intervalRef.current = null\n      }\n    }\n  }, [activeIndex, maxSize])\n\n  const onPlayClick = useCallback(() => {\n    if (activeIndex >= maxSize) {\n      dispatch(setImageActiveIndex({ itemId, activeIndex: 0 }))\n    }\n    if (maxSize > 1 && intervalRef.current === null) {\n      intervalRef.current = setInterval(() => {\n        dispatch(incrementImageActiveIndex({ itemId }))\n      }, duration)\n    }\n  }, [activeIndex, maxSize, dispatch, duration, itemId])\n\n  const onPauseClick = () => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current)\n      intervalRef.current = null\n    }\n  }\n\n  const onDurationChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue =\n        event.target.value === '' ? '' : Number(event.target.value)\n      if (typeof newValue === 'number') {\n        dispatch(setImageItemDuration({ itemId, duration: newValue }))\n      }\n    },\n    [dispatch, itemId],\n  )\n  return (\n    <>\n      <Button variant=\"outlined\" onClick={onPlayClick}>\n        Play\n      </Button>\n      <Button variant=\"outlined\" onClick={onPauseClick}>\n        Pause\n      </Button>\n      <TextField\n        type=\"number\"\n        inputProps={{\n          step: 100,\n          min: 0,\n          max: 1000,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onDurationChange}\n        value={duration}\n      />\n      <Slider\n        aria-label=\"Custom marks\"\n        defaultValue={20}\n        value={startIndex + activeIndex}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        marks\n        min={startIndex}\n        max={maxSize === 0 ? 0 : endIndex}\n        onChange={onSliderChange}\n      />\n    </>\n  )\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\ninterface PlotDatum {\n  curveNumber: number\n  data: PlotData\n  customdata: Datum\n  pointIndex: number\n  pointNumber: number\n  x: Datum\n  xaxis: LayoutAxis\n  y: Datum\n  yaxis: LayoutAxis\n  z: number\n}\n\nfunction rgba2hex(rgba: number[], alpha: number) {\n  const r = rgba[0]\n  const g = rgba[1]\n  const b = rgba[2]\n  const a = alpha\n\n  var outParts = [\n    r.toString(16),\n    g.toString(16),\n    b.toString(16),\n    Math.round(a * 255)\n      .toString(16)\n      .substring(0, 2),\n  ]\n\n  // Pad single-digit output values\n  outParts.forEach(function (part, i) {\n    if (part.length === 1) {\n      outParts[i] = '0' + part\n    }\n  })\n\n  return `#${outParts.join('')}`\n}\n\nfunction debounce<T extends (...args: any[]) => unknown>(\n  callback: T,\n  delay = 500,\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout\n  return (...args) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => callback(...args), delay)\n  }\n}\n","import React from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectRoiData,\n  selectRoiDataError,\n  selectRoiDataIsFulfilled,\n  selectRoiDataIsInitialized,\n  selectRoiDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { getRoiData } from 'store/slice/DisplayData/DisplayDataActions'\nimport createColormap from 'colormap'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const RoiPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isPending = useSelector(selectRoiDataIsPending(path))\n  const isInitialized = useSelector(selectRoiDataIsInitialized(path))\n  const isFulfilled = useSelector(selectRoiDataIsFulfilled(path))\n  const error = useSelector(selectRoiDataError(path))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getRoiData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <RoiPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst RoiPlotImple = React.memo<{}>(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(selectRoiData(path), imageDataEqualtyFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscale: ColorType[] = createColormap({\n    colormap: 'jet',\n    nshades: 10,\n    format: 'hex',\n    alpha: 1,\n  }).map((v, idx) => {\n    return { rgb: v, offset: String(idx / 9) }\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'roi',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          return [offset, value.rgb]\n        }),\n        hoverongaps: false,\n        // zsmooth: zsmooth, // ['best', 'fast', false]\n        zsmooth: false,\n        showlegend: true,\n      },\n    ],\n    [imageData, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      xaxis: {\n        autorange: true,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n      },\n      yaxis: {\n        autorange: 'reversed',\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n      },\n    }),\n    [width, height],\n  )\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n  }\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectScatterData,\n  selectScatterDataError,\n  selectScatterDataIsFulfilled,\n  selectScatterDataIsInitialized,\n  selectScatterDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getScatterData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { ScatterData } from 'api/outputs/Outputs'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const ScatterPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectScatterDataIsPending(path))\n  const isInitialized = useSelector(selectScatterDataIsInitialized(path))\n  const error = useSelector(selectScatterDataError(path))\n  const isFulfilled = useSelector(selectScatterDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getScatterData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ScatterPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ScatterPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const scatterData = useSelector(\n    selectScatterData(path),\n    scatterDataEqualityFn,\n  )\n\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n  const maxIndex = Object.keys(scatterData).length - 1\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x:\n          xIndex < maxIndex\n            ? Object.values(scatterData[xIndex])\n            : Object.values(scatterData[maxIndex]),\n        y:\n          yIndex < maxIndex\n            ? Object.values(scatterData[yIndex])\n            : Object.values(scatterData[maxIndex]),\n        type: 'scatter',\n        mode: 'markers', //'markers+text',\n        text: Object.keys(scatterData[0]),\n        textposition: 'top center',\n        textfont: {\n          family: 'Raleway, sans-serif',\n        },\n        marker: {\n          size: 5,\n          color: Object.keys(scatterData[0]),\n        },\n      },\n    ],\n    [scatterData, xIndex, yIndex, maxIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      xaxis: {\n        title: {\n          text: `x: ${\n            xIndex < Object.keys(scatterData).length ? xIndex : maxIndex\n          }`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: `y: ${\n            yIndex < Object.keys(scatterData).length ? yIndex : maxIndex\n          }`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n    }),\n    [xIndex, yIndex, maxIndex, scatterData, width, height],\n  )\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n  }\n\n  return (\n    <div>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nfunction scatterDataEqualityFn(\n  a: ScatterData | undefined,\n  b: ScatterData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectCsvData,\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { CsvData } from 'api/outputs/Outputs'\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const CsvPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <CsvPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst CsvPlotImple = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  return (\n    <PresentationalCsvPlot\n      path={path}\n      transpose={transpose}\n      setHeader={setHeader}\n      setIndex={setIndex}\n    />\n  )\n})\n\n/**\n * CsvFileNodeの設定時に表示するプレビューでも使用することを想定\n *\n * DisplayDataContextに依存しない\n */\nexport const PresentationalCsvPlot = React.memo<{\n  path: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ path, transpose, setIndex, setHeader }) => {\n  const data = useSelector(\n    selectCsvData(path),\n    (a: CsvData | undefined, b: CsvData | undefined) => {\n      if (a != null && b != null) {\n        return twoDimarrayEqualityFn(a, b)\n      } else {\n        return a === undefined && b === undefined\n      }\n    },\n  )\n\n  const csvData = React.useMemo(() => {\n    if (transpose) {\n      return data[0].map((col, i) => data.map((row) => row[i]))\n    }\n    return data\n  }, [data, transpose])\n\n  const header: GridColDef[] = React.useMemo(() => {\n    const headerData = () => {\n      if (setHeader === null) {\n        return csvData[0]\n      } else {\n        if (setHeader >= csvData.length) {\n          return csvData[csvData.length - 1]\n        } else {\n          return csvData[setHeader]\n        }\n      }\n    }\n\n    if (setIndex) {\n      return [\n        { field: 'col0', headerName: 'index', width: 150 },\n        ...headerData().map((value, idx) => {\n          return {\n            field: `col${idx + 1}`,\n            headerName: `${setHeader === null ? idx : value}`,\n            width: 150,\n          }\n        }),\n      ]\n    } else {\n      return headerData().map((value, idx) => {\n        return {\n          field: `col${idx + 1}`,\n          headerName: `${setHeader === null ? idx : value}`,\n          width: 150,\n        }\n      })\n    }\n  }, [csvData, setHeader, setIndex])\n  const rows = csvData\n    .map((row, row_id) => {\n      let rowObj = Object.fromEntries(\n        [row_id, ...row].map((value, index) => {\n          return [`col${index}`, value]\n        }),\n      )\n      rowObj['id'] = row_id\n      return rowObj\n    })\n    .filter(\n      (value, idx) =>\n        setHeader === null || (setHeader !== null && idx > setHeader),\n    )\n\n  return (\n    <div style={{ height: 300, width: '100%' }}>\n      <DataGrid rows={rows} columns={header} />\n    </div>\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LegendClickEvent } from 'plotly.js'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectTimeSeriesData,\n  selectTimeSeriesDataError,\n  selectTimeSeriesDataIsFulfilled,\n  selectTimeSeriesDataIsInitialized,\n  selectTimeSeriesDataIsPending,\n  selectTimeSeriesStd,\n  selectTimeSeriesXrange,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getTimeSeriesDataById,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { TimeSeriesData } from 'api/outputs/Outputs'\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectTimeSeriesItemKeys,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport createColormap from 'colormap'\nimport { setTimeSeriesItemDrawOrderList } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const TimeSeriesPlot = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectTimeSeriesDataIsPending(path))\n  const isInitialized = useSelector(selectTimeSeriesDataIsInitialized(path))\n  const error = useSelector(selectTimeSeriesDataError(path))\n  const isFulfilled = useSelector(selectTimeSeriesDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getTimeSeriesInitData({ path, itemId }))\n    }\n  }, [dispatch, isInitialized, path, itemId])\n\n  if (!isInitialized) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isPending || isFulfilled) {\n    return <TimeSeriesPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst TimeSeriesPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  // 0番のデータとkeysだけをとってくる\n  const dispatch = useDispatch()\n  const timeSeriesData = useSelector(\n    selectTimeSeriesData(path),\n    timeSeriesDataEqualityFn,\n  )\n\n  const dataXrange = useSelector(selectTimeSeriesXrange(path))\n  const dataStd = useSelector(selectTimeSeriesStd(path))\n\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n  const drawOrderList = useSelector(selectTimeSeriesItemDrawOrderList(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const dataKeys = useSelector(selectTimeSeriesItemKeys(itemId))\n\n  const colorScale = createColormap({\n    colormap: 'jet',\n    nshades: 100, //maxIndex >= 6 ? maxIndex : 6,\n    format: 'hex',\n    alpha: 1,\n  })\n\n  const data = React.useMemo(() => {\n    return Object.fromEntries(\n      dataKeys.map((key) => {\n        let y = Object.values(timeSeriesData[key])\n        const i = Number(key) - 1\n        const new_i = Math.floor((i % 10) * 10 + i / 10) % 100\n        if (drawOrderList.includes(key) && offset) {\n          const activeIdx: number = drawOrderList.findIndex((v) => v === key)\n          const mean: number = y.reduce((a, b) => a + b) / y.length\n          const std: number =\n            span *\n            Math.sqrt(y.reduce((a, b) => a + Math.pow(b - mean, 2)) / y.length)\n          y = y.map((value) => (value - mean) / (std + 1e-10) + activeIdx)\n        }\n\n        return [\n          key,\n          {\n            name: key,\n            x: dataXrange,\n            y: y,\n            visible: drawOrderList.includes(key) ? true : 'legendonly',\n            line: { color: colorScale[new_i] },\n            error_y: {\n              type: 'data',\n              array:\n                !offset && Object.keys(dataStd).includes(key)\n                  ? Object.values(dataStd[key])\n                  : null,\n              visible: true,\n            },\n          },\n        ]\n      }),\n    )\n  }, [\n    timeSeriesData,\n    drawOrderList,\n    offset,\n    span,\n    colorScale,\n    dataStd,\n    dataXrange,\n    dataKeys,\n  ])\n\n  const annotations = React.useMemo(() => {\n    return drawOrderList.map((value) => {\n      return {\n        x: Number(dataXrange[dataXrange.length - 1]) + dataXrange.length / 10,\n        y: data[value].y[dataXrange.length - 1],\n        xref: 'x',\n        yref: 'y',\n        text: `cell: ${value}`,\n        arrowhead: 1,\n        ax: 0,\n        ay: -10,\n      }\n    })\n  }, [data, drawOrderList, dataXrange])\n\n  const layout = React.useMemo(\n    () => ({\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      width: width,\n      height: height - 50,\n      xaxis: {\n        range: [xrange.left, xrange.right],\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      yaxis: {\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      annotations: annotations,\n    }),\n    [\n      xrange,\n      showgrid,\n      showline,\n      showticklabels,\n      zeroline,\n      annotations,\n      width,\n      height,\n    ],\n  )\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n  }\n\n  const onLegendClick = (event: LegendClickEvent) => {\n    const clickNumber = dataKeys[event.curveNumber]\n\n    const newDrawOrderList = drawOrderList.includes(clickNumber)\n      ? drawOrderList.filter((value) => value !== clickNumber)\n      : [...drawOrderList, clickNumber]\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    // set DisplayNumbers\n    if (!drawOrderList.includes(clickNumber)) {\n      dispatch(getTimeSeriesDataById({ path, index: clickNumber }))\n    }\n\n    return false\n  }\n\n  return (\n    <PlotlyChart\n      data={Object.values(data)}\n      layout={layout}\n      config={config}\n      onLegendClick={onLegendClick}\n    />\n  )\n})\n\nfunction timeSeriesDataEqualityFn(\n  a: TimeSeriesData | undefined,\n  b: TimeSeriesData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.entries(a)\n    const bArray = Object.entries(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every(([aKey, aValue], i) => {\n          const [bKey, bValue] = bArray[i]\n          return bKey === aKey && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction nestEqualityFun(\n  a: {\n    [key: number]: number\n  },\n  b: {\n    [key: number]: number\n  },\n) {\n  const aArray = Object.entries(a)\n  const bArray = Object.entries(b)\n  return (\n    a === b ||\n    (aArray.length === bArray.length &&\n      aArray.every(([aKey, aValue], i) => {\n        const [bKey, bValue] = bArray[i]\n        return bKey === aKey && bValue === aValue\n      }))\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectBarData,\n  selectBarDataError,\n  selectBarDataIsFulfilled,\n  selectBarDataIsInitialized,\n  selectBarDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getBarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { BarData } from 'api/outputs/Outputs'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const BarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectBarDataIsPending(path))\n  const isInitialized = useSelector(selectBarDataIsInitialized(path))\n  const error = useSelector(selectBarDataError(path))\n  const isFulfilled = useSelector(selectBarDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getBarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <BarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst BarPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const barData = useSelector(selectBarData(path), barDataEqualityFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: Object.keys(barData[0]),\n        y: Object.values(barData[0]),\n        type: 'bar',\n      },\n    ],\n    [barData],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n  }\n\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction barDataEqualityFn(a: BarData | undefined, b: BarData | undefined) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHTMLData,\n  selectHTMLDataError,\n  selectHTMLDataIsFulfilled,\n  selectHTMLDataIsInitialized,\n  selectHTMLDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHTMLData } from 'store/slice/DisplayData/DisplayDataActions'\n\nexport const HTMLPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHTMLDataIsPending(path))\n  const isInitialized = useSelector(selectHTMLDataIsInitialized(path))\n  const error = useSelector(selectHTMLDataError(path))\n  const isFulfilled = useSelector(selectHTMLDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHTMLData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HTMLPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HTMLPlotImple = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const htmlData = useSelector(selectHTMLData(path))\n\n  return <div dangerouslySetInnerHTML={{ __html: htmlData }} />\n})\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectVisualizeDataFilePath,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { DisplayDataContext } from './DataContext'\nimport { HeatMapPlot } from './Plot/HeatMapPlot'\nimport { ImagePlot } from './Plot/ImagePlot'\nimport { RoiPlot } from './Plot/RoiPlot'\nimport { ScatterPlot } from './Plot/ScatterPlot'\nimport { CsvPlot } from './Plot/CsvPlot'\nimport { TimeSeriesPlot } from './Plot/TimeSeriesPlot'\nimport { BarPlot } from './Plot/BarPlot'\nimport { HTMLPlot } from './Plot/HTMLPlot'\n\nexport const DisplayDataItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const nodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  if (filePath != null && dataType != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{ nodeId, filePath, dataType, itemId }}\n      >\n        <DisplayPlot dataType={dataType} />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n\nconst DisplayPlot = React.memo<{\n  dataType: DATA_TYPE\n}>(({ dataType }) => {\n  switch (dataType) {\n    case DATA_TYPE_SET.CSV:\n      return <CsvPlot />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesPlot />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatMapPlot />\n    case DATA_TYPE_SET.IMAGE:\n      return <ImagePlot />\n    case DATA_TYPE_SET.ROI:\n      return <RoiPlot />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterPlot />\n    case DATA_TYPE_SET.BAR:\n      return <BarPlot />\n    case DATA_TYPE_SET.HTML:\n      return <HTMLPlot />\n    default:\n      return null\n  }\n})\n","import { useDispatch, useSelector } from 'react-redux'\nimport Tabs, { tabsClasses } from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box'\nimport React from 'react'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { selectAlgorithmName } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectPipelineNodeResultOutputKeyList,\n  selectPipelineNodeResultOutputFileDataType,\n  selectPipelineNodeResultOutputFilePath,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { selectVisualizeItemIdForWorkflowDialog } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { DisplayDataItem } from 'components/Visualize/DisplayDataItem'\n\nexport const AlgorithmOutputDialog = React.memo<{\n  open: boolean\n  onClose: () => void\n  nodeId: string\n}>(({ open, onClose, nodeId }) => {\n  const dispatch = useDispatch()\n  const closeFn = () => {\n    onClose()\n    dispatch(deleteAllItemForWorkflowDialog())\n  }\n  return (\n    <Dialog open={open} onClose={closeFn} fullWidth>\n      <TitleWithCloseButton onClose={closeFn} nodeId={nodeId} />\n      <DialogContent\n        dividers\n        sx={{\n          pt: 1,\n          px: 2,\n        }}\n      >\n        {open && <OutputViewer nodeId={nodeId} />}\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nconst TitleWithCloseButton = React.memo<{\n  onClose: () => void\n  nodeId: string\n}>(({ nodeId, onClose }) => {\n  const nodeName = useSelector(selectAlgorithmName(nodeId))\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }}>\n      Output of {nodeName}\n      <IconButton\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 10,\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </DialogTitle>\n  )\n})\n\nconst OutputViewer = React.memo<{ nodeId: string }>(({ nodeId }) => {\n  const outputKeyList = useSelector(\n    selectPipelineNodeResultOutputKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  const [selectedOutoutKey, setSelectedOutputKey] = React.useState(\n    outputKeyList[0],\n  )\n  return (\n    <>\n      <OutputSelectTabs\n        outputKeyList={outputKeyList}\n        selectedOutoutKey={selectedOutoutKey}\n        onSelectOutput={setSelectedOutputKey}\n      />\n      <DisplayDataView nodeId={nodeId} outputKey={selectedOutoutKey} />\n    </>\n  )\n})\n\nconst OutputSelectTabs = React.memo<{\n  selectedOutoutKey: string\n  outputKeyList: string[]\n  onSelectOutput: (selectedKey: string) => void\n}>(({ selectedOutoutKey, outputKeyList, onSelectOutput }) => {\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    onSelectOutput(newValue)\n  }\n  return (\n    <Tabs\n      value={selectedOutoutKey}\n      onChange={handleChange}\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n      sx={{\n        [`& .${tabsClasses.scrollButtons}`]: {\n          '&.Mui-disabled': { opacity: 0.3 },\n        },\n      }}\n    >\n      {outputKeyList.map((outputKey) => (\n        <Tab\n          value={outputKey}\n          label={outputKey}\n          sx={{\n            textTransform: 'none',\n          }}\n        />\n      ))}\n    </Tabs>\n  )\n})\n\nconst DisplayDataView = React.memo<{ nodeId: string; outputKey: string }>(\n  ({ nodeId, outputKey }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectPipelineNodeResultOutputFilePath(nodeId, outputKey),\n    )\n    const dataType = useSelector(\n      selectPipelineNodeResultOutputFileDataType(nodeId, outputKey),\n    )\n    const itemId = useSelector(\n      selectVisualizeItemIdForWorkflowDialog(nodeId, filePath, dataType),\n    )\n    React.useEffect(() => {\n      if (itemId === null) {\n        dispatch(addItemForWorkflowDialog({ nodeId, filePath, dataType }))\n      }\n    }, [dispatch, nodeId, filePath, dataType, itemId])\n    return (\n      <Box\n        sx={{\n          mx: 1,\n          my: 2,\n        }}\n      >\n        {itemId != null && <DisplayDataItem itemId={itemId} />}\n      </Box>\n    )\n  },\n)\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport {\n  alpha,\n  Typography,\n  useTheme,\n  Tooltip,\n  FormHelperText,\n  IconButton,\n  Button,\n  LinearProgress,\n  ButtonGroup,\n} from '@mui/material'\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded'\nimport ErrorIcon from '@mui/icons-material/Error'\nimport Popover from '@mui/material/Popover'\n\nimport { AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  selectAlgoArgs,\n  selectAlgoReturns,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { selectAlgorithmNodeDefined } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { toggleParamForm } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultMessage,\n  selectPipelineNodeResultStatus,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\nimport { NODE_RESULT_STATUS } from 'store/slice/Pipeline/PipelineType'\nimport { AlgorithmOutputDialog } from './AlgorithmOutputDialog'\n\nconst leftHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\nconst rightHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\n\nexport const AlgorithmNode = React.memo<NodeProps<NodeData>>((element) => {\n  const defined = useSelector(selectAlgorithmNodeDefined(element.id))\n  if (defined) {\n    return <AlgorithmNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst AlgorithmNodeImple = React.memo<NodeProps<NodeData>>(\n  ({ id: nodeId, selected: elementSelected, isConnectable, data }) => {\n    const theme = useTheme()\n    const dispatch = useDispatch()\n\n    const onClickParamButton = () => {\n      dispatch(toggleParamForm(nodeId))\n    }\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    const [open, setOpen] = React.useState(false)\n    const onCloseOutputDialog = () => {\n      setOpen(false)\n    }\n    const onClickOutputButton = () => {\n      setOpen(true)\n    }\n\n    const status = useStatus(nodeId)\n\n    return (\n      <div\n        style={{\n          width: '100%',\n          height: '110%',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.15)\n            : undefined,\n          border: '1px solid',\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <AlgoName nodeId={nodeId} data={data} />\n        <ButtonGroup sx={{ mx: 1 }}>\n          <Button size=\"small\" onClick={onClickParamButton}>\n            Param\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={onClickOutputButton}\n            disabled={status !== NODE_RESULT_STATUS.SUCCESS}\n          >\n            Output\n          </Button>\n          <AlgorithmOutputDialog\n            nodeId={nodeId}\n            open={open}\n            onClose={onCloseOutputDialog}\n          />\n        </ButtonGroup>\n        <AlgoArgs nodeId={nodeId} />\n        <AlgoReturns nodeId={nodeId} isConnectable={isConnectable} />\n        <Message nodeId={nodeId} />\n      </div>\n    )\n  },\n)\n\nconst AlgoName = React.memo<{\n  nodeId: string\n  data: NodeData\n}>(({ nodeId, data }) => {\n  const theme = useTheme()\n  const status = useStatus(nodeId)\n  return (\n    <div\n      style={{\n        padding: 8,\n        paddingLeft: 8,\n      }}\n      className=\"algoName\"\n    >\n      {status === NODE_RESULT_STATUS.PENDING && <LinearProgress />}\n      <Typography\n        style={{\n          textAlign: 'left',\n          color:\n            status === NODE_RESULT_STATUS.ERROR\n              ? theme.palette.error.main\n              : undefined,\n        }}\n      >\n        {data.label}\n      </Typography>\n    </div>\n  )\n})\n\nconst AlgoArgs = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const algoArgs = useSelector(selectAlgoArgs(nodeId), algoInfoListEqualtyFn)\n\n  return (\n    <>\n      {algoArgs != null\n        ? algoArgs\n            .filter((info) => info.type !== 'params')\n            .map((algoInfo, i) => {\n              return <ArgHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n            })\n        : null}\n    </>\n  )\n})\n\nconst AlgoReturns = React.memo<{\n  nodeId: string\n  isConnectable: boolean\n}>(({ nodeId, isConnectable }) => {\n  const algoReturns = useSelector(\n    selectAlgoReturns(nodeId),\n    algoInfoListEqualtyFn,\n  )\n  return (\n    <>\n      {algoReturns != null ? (\n        algoReturns?.map((algoInfo, i) => {\n          return <ReturnHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n        })\n      ) : (\n        // algoReturns.lengthが0の場合の応急処置\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={`${nodeId}`}\n          style={{\n            ...rightHandleStyle,\n            top: 15,\n          }}\n          isConnectable={isConnectable}\n        />\n      )}\n    </>\n  )\n})\n\ntype HandleProps = {\n  algoInfo: AlgorithmInfo\n  nodeId: string\n  i: number\n}\n\nfunction hexToRgb(hex: string | undefined, isNone: boolean | undefined) {\n  if (hex !== undefined) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n    if (result !== null) {\n      if (isNone) {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 0.55)`\n      } else {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 1)`\n      }\n    } else {\n      return undefined\n    }\n  } else {\n    return undefined\n  }\n}\n\nconst ArgHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type, isNone }, nodeId, i }) => {\n    const hex_color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    const rgb_color = hexToRgb(hex_color, isNone)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"target\"\n        position={Position.Left}\n        id={id}\n        style={{\n          ...leftHandleStyle,\n          background: rgb_color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"left-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst ReturnHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type }, nodeId, i }) => {\n    const color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"source\"\n        position={Position.Right}\n        id={id}\n        style={{\n          ...rightHandleStyle,\n          background: color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"right-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst Message = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const status = useStatus(nodeId)\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const errorMsg = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultMessage(nodeId)(state) ?? null\n      : null,\n  )\n\n  const anchorElRef = React.useRef<HTMLButtonElement | null>(null)\n  const [open, setOpen] = React.useState(false)\n  const theme = useTheme()\n\n  if (status === NODE_RESULT_STATUS.ERROR) {\n    return (\n      <>\n        <IconButton\n          ref={anchorElRef}\n          onClick={() => setOpen((prevOpen) => !prevOpen)}\n          size=\"small\"\n          style={{ color: theme.palette.error.main, float: 'right' }}\n        >\n          <ErrorIcon />\n        </IconButton>\n        <Popover\n          open={open}\n          anchorEl={anchorElRef.current}\n          onClose={() => setOpen(false)}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n        >\n          <div style={{ margin: 8 }}>\n            <FormHelperText error={true}>{errorMsg}</FormHelperText>\n          </div>\n        </Popover>\n      </>\n    )\n  } else if (status === NODE_RESULT_STATUS.SUCCESS) {\n    return <CheckCircleRoundedIcon color=\"success\" sx={{ float: 'right' }} />\n  } else {\n    return null\n  }\n})\n\nfunction algoInfoListEqualtyFn(\n  a: AlgorithmInfo[] | undefined,\n  b: AlgorithmInfo[] | undefined,\n) {\n  if (a != null && b != null) {\n    return (\n      a === b ||\n      (a.length === b.length &&\n        a.every((v, i) => v.type === b[i].type && v.name === b[i].name))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction useStatus(nodeId: string) {\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const status = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultStatus(nodeId)(state)\n      : 'uninitialized',\n  )\n  return status\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { INITIAL_IMAGE_ELEMENT_ID } from 'const/flowchart'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\nimport { addInputNode } from '../FlowElement/FlowElementActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { setInputNodeFilePath } from './InputNodeActions'\nimport {\n  CsvInputParamType,\n  FILE_TYPE_SET,\n  InputNode,\n  INPUT_NODE_SLICE_NAME,\n} from './InputNodeType'\nimport { isCsvInputNode, isHDF5InputNode } from './InputNodeUtils'\n\nconst initialState: InputNode = {\n  [INITIAL_IMAGE_ELEMENT_ID]: {\n    fileType: FILE_TYPE_SET.IMAGE,\n    param: {},\n  },\n}\n\nexport const inputNodeSlice = createSlice({\n  name: INPUT_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    deleteInputNode(state, action: PayloadAction<string>) {\n      delete state[action.payload]\n    },\n    setCsvInputNodeParam(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: CsvInputParamType\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId]\n      if (isCsvInputNode(inputNode)) {\n        inputNode.param = param\n      }\n    },\n    setInputNodeHDF5Path(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n      }>,\n    ) {\n      const { nodeId, path } = action.payload\n      const item = state[nodeId]\n      if (isHDF5InputNode(item)) {\n        item.hdf5Path = path\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(setInputNodeFilePath, (state, action) => {\n        const { nodeId, filePath } = action.payload\n        state[nodeId].selectedFilePath = filePath\n      })\n      .addCase(addInputNode, (state, action) => {\n        const { node, fileType } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          switch (fileType) {\n            case FILE_TYPE_SET.CSV:\n              state[node.id] = {\n                fileType,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.IMAGE:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.HDF5:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.FLUO:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.BEHAVIOR:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.INPUT) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        action.payload.nodeList.filter(isInputNodePostData).forEach((node) => {\n          if (node.data != null) {\n            if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n              newState[node.id] = {\n                fileType: FILE_TYPE_SET.IMAGE,\n                selectedFilePath: node.data.path as string[],\n                param: {},\n              }\n            } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n              newState[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                selectedFilePath: node.data.path as string,\n                param: node.data.param as CsvInputParamType,\n              }\n            } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n              newState[node.id] = {\n                fileType: FILE_TYPE_SET.HDF5,\n                hdf5Path: node.data.hdf5Path,\n                selectedFilePath: node.data.path as string,\n                param: {},\n              }\n            }\n          }\n        })\n        return newState\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const { resultPath } = action.payload\n          const target = state[nodeId]\n          if (target.fileType === FILE_TYPE_SET.IMAGE) {\n            target.selectedFilePath = [resultPath]\n          } else {\n            target.selectedFilePath = resultPath\n          }\n        }\n      }),\n})\n\nexport const { setCsvInputNodeParam, setInputNodeHDF5Path } =\n  inputNodeSlice.actions\n\nexport default inputNodeSlice.reducer\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Switch,\n  FormControlLabel,\n  TextField,\n  Box,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeParamSetHeader,\n  selectCsvInputNodeParamSetIndex,\n  selectCsvInputNodeParamTranspose,\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setCsvInputNodeParam } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { PresentationalCsvPlot } from 'components/Visualize/Plot/CsvPlot'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const CsvFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <CsvFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst CsvFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'csv', 'CsvData')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nexport const ParamSettingDialog = React.memo<{\n  nodeId: string\n  filePath: string\n}>(({ nodeId, filePath }) => {\n  const [open, setOpen] = React.useState(false)\n  // OK時のみStoreに反映させるため一時的な値をuseStateで保持しておく。\n  // useStateの初期値はselectorで取得。\n  const [setHeader, setSetHeader] = React.useState(\n    useSelector(selectCsvInputNodeParamSetHeader(nodeId)),\n  )\n  const [setIndex, setSetIndex] = React.useState(\n    useSelector(selectCsvInputNodeParamSetIndex(nodeId)),\n  )\n  const [transpose, setTranspose] = React.useState(\n    useSelector(selectCsvInputNodeParamTranspose(nodeId)),\n  )\n  const dispatch = useDispatch()\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(\n      setCsvInputNodeParam({\n        nodeId,\n        param: { setHeader, setIndex, transpose },\n      }),\n    )\n  }\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>Settings</Button>\n      <Dialog open={open}>\n        <DialogTitle>Csv Setting</DialogTitle>\n        <DialogContent dividers>\n          <Box sx={{ display: 'flex', p: 1, m: 1, alignItems: 'flex-start' }}>\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={transpose}\n                  onChange={(event) => setTranspose(event.target.checked)}\n                />\n              }\n              label=\"Transpose\"\n            />\n            <TextField\n              label=\"header\"\n              sx={{\n                width: 100,\n                margin: (theme) => theme.spacing(0, 1, 0, 1),\n              }}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(event) => {\n                const value = Number(event.target.value)\n                if (value >= 0) {\n                  setSetHeader(value)\n                }\n              }}\n              value={setHeader}\n            />\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={setIndex}\n                  onChange={(event) => setSetIndex(event.target.checked)}\n                />\n              }\n              label=\"Set Index\"\n            />\n          </Box>\n          <Typography variant=\"h6\">Preview</Typography>\n          <CsvPreview\n            filePath={filePath}\n            transpose={transpose}\n            setHeader={setHeader}\n            setIndex={setIndex}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onClickOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst CsvPreview = React.memo<{\n  filePath: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ filePath: path, ...otherProps }) => {\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PresentationalCsvPlot path={path} {...otherProps} />\n  } else {\n    return null\n  }\n})\n","import { RootState } from '../../store'\n\nexport const selectHDF5 = (state: RootState) => {\n  if (state.hdf5 != null) {\n    return state.hdf5\n  } else {\n    return undefined\n  }\n}\n\nexport const selectHDF5Nodes = () => (state: RootState) =>\n  selectHDF5(state)?.tree\n\nexport const selectHDF5IsLoading = () => (state: RootState) =>\n  selectHDF5(state)?.isLoading ?? false\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type HDF5TreeDTO = HDF5DirDTO | HDF5FileDTO\n\nexport interface HDF5DirDTO {\n  isDir: true\n  name: string\n  nodes: HDF5TreeDTO[]\n  path: string\n}\n\nexport interface HDF5FileDTO {\n  isDir: false\n  name: string\n  shape: [number]\n  path: string\n  nbytes: string\n}\n\nexport async function getHDF5TreeApi(path: string): Promise<HDF5TreeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/hdf5/${path}`)\n  return response.data\n}\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nexport const HDF5_SLICE_NAME = 'hdf5'\n\nexport interface HDF5Tree {\n  isLoading: boolean\n  tree: HDF5TreeNodeType[]\n}\n\nexport type HDF5TreeNodeType = HDF5TreeDTO\n\nexport const HDF5_TYPE_SET = {\n  ALL: 'all',\n} as const\n\nexport type HDF5_TYPE = typeof HDF5_TYPE_SET[keyof typeof HDF5_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getHDF5TreeApi, HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nimport { HDF5_SLICE_NAME } from './HDF5Type'\n\nexport const getHDF5Tree = createAsyncThunk<HDF5TreeDTO[], { path: string }>(\n  `${HDF5_SLICE_NAME}/getHDF5Tree`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getHDF5TreeApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\n\nimport { alpha, useTheme } from '@mui/material/styles'\nimport Dialog from '@mui/material/Dialog'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectHDF5InputNodeSelectedFilePath,\n  selectInputNodeDefined,\n  selectInputNodeHDF5Path,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeHDF5Path } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectHDF5IsLoading,\n  selectHDF5Nodes,\n} from 'store/slice/HDF5/HDF5Selectors'\nimport { getHDF5Tree } from 'store/slice/HDF5/HDF5Action'\nimport { HDF5TreeNodeType } from 'store/slice/HDF5/HDF5Type'\nimport { Typography } from '@mui/material'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const HDF5FileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <HDF5FileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst HDF5FileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.HDF5}\n        filePath={filePath ?? ''}\n      />\n      {filePath !== undefined && <ItemSelect nodeId={nodeId} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'hdf5', 'HDF5Data')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nconst ItemSelect = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [open, setOpen] = React.useState(false)\n\n  const structureFileName = useSelector(selectInputNodeHDF5Path(nodeId))\n\n  return (\n    <>\n      <Button variant=\"outlined\" size=\"small\" onClick={() => setOpen(true)}>\n        {'Structure'}\n      </Button>\n      <Typography className=\"selectFilePath\" variant=\"caption\">\n        {!!structureFileName ? structureFileName : 'No structure is selected.'}\n      </Typography>\n\n      <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\n        <DialogTitle>{'Select File'}</DialogTitle>\n        <Structure nodeId={nodeId} />\n        <DialogActions>\n          <Button onClick={() => setOpen(false)} variant=\"outlined\">\n            cancel\n          </Button>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"primary\"\n            variant=\"outlined\"\n            autoFocus\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst Structure = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const theme = useTheme()\n  return (\n    <DialogContent dividers>\n      <div\n        style={{\n          height: 300,\n          overflow: 'auto',\n          marginBottom: theme.spacing(1),\n          border: '1px solid',\n          padding: theme.spacing(1),\n          borderColor: theme.palette.divider,\n        }}\n      >\n        <FileTreeView nodeId={nodeId} />\n      </div>\n    </DialogContent>\n  )\n})\n\nconst FileTreeView = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [tree, isLoading] = useHDF5Tree(nodeId)\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView>\n        {tree?.map((node) => (\n          <TreeNode node={node} nodeId={nodeId} />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: HDF5TreeNodeType\n  nodeId: string\n}>(({ node, nodeId }) => {\n  const dispatch = useDispatch()\n\n  const onClickFile = (path: string) => {\n    dispatch(setInputNodeHDF5Path({ nodeId, path }))\n  }\n\n  if (node.isDir) {\n    // Directory\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={node.name}\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode node={childNode} key={i} nodeId={nodeId} />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    // File\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={node.name + `   (shape=${node.shape}, nbytes=${node.nbytes})`}\n        onClick={() => onClickFile(node.path)}\n      />\n    )\n  }\n})\n\nfunction useHDF5Tree(\n  nodeId: string,\n): [HDF5TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectHDF5Nodes())\n  const isLoading = useSelector(selectHDF5IsLoading())\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  React.useEffect(() => {\n    if (!isLoading && filePath) {\n      dispatch(getHDF5Tree({ path: filePath }))\n    }\n  }, [isLoading, filePath, dispatch])\n  return [tree, isLoading]\n}\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const FluoFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <FluoFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst FluoFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n  const returnType = 'FluoData'\n  const fluoColor = useHandleColor(returnType)\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'fluo', returnType)}\n        style={{\n          ...sourceHandleStyle,\n          background: fluoColor,\n        }}\n      />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const BehaviorFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <BehaviorFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst BehaviorFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n    const onChangeFilePath = (path: string) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n    const theme = useTheme()\n    const returnType = 'BehaviorData'\n    const behaviorColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '230px',\n          background: selected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          onChangeFilePath={(path) => {\n            if (!Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.CSV}\n          filePath={filePath ?? ''}\n        />\n        {!!filePath && (\n          <ParamSettingDialog nodeId={nodeId} filePath={filePath} />\n        )}\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'behavior', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: behaviorColor,\n          }}\n        />\n      </div>\n    )\n  },\n)\n","import { ImageFileNode } from 'components/FlowChart/FlowChartNode/ImageFileNode'\nimport { AlgorithmNode } from 'components/FlowChart/FlowChartNode/AlgorithmNode'\nimport { CsvFileNode } from 'components/FlowChart/FlowChartNode/CsvFileNode'\nimport { HDF5FileNode } from 'components/FlowChart/FlowChartNode/HDF5FileNode'\nimport { FluoFileNode } from 'components/FlowChart/FlowChartNode/FluoFileNode'\nimport { BehaviorFileNode } from 'components/FlowChart/FlowChartNode/BehaviorFileNode'\n\nimport { CustomEdge } from 'components/FlowChart/CustomEdge'\n\nexport const reactFlowNodeTypes = {\n  ImageFileNode,\n  CsvFileNode,\n  HDF5FileNode,\n  AlgorithmNode,\n  FluoFileNode,\n  BehaviorFileNode,\n} as const\n\nexport const reactFlowEdgeTypes = {\n  buttonedge: CustomEdge,\n} as const\n","import { useDispatch } from 'react-redux'\nimport {\n  EdgeProps,\n  getBezierPath,\n  getMarkerEnd,\n  getEdgeCenter,\n} from 'react-flow-renderer'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport 'style/flowbutton.css'\n\nconst foreignObjectSize = 40\n\nexport const CustomEdge: React.FC<EdgeProps> = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  arrowHeadType,\n  markerEndId,\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  })\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId)\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  })\n\n  const dispatch = useDispatch()\n\n  const onEdgeClick = () => {\n    dispatch(deleteFlowElementsById(id))\n  }\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <foreignObject\n        width={foreignObjectSize}\n        height={foreignObjectSize}\n        x={edgeCenterX - foreignObjectSize / 2}\n        y={edgeCenterY - foreignObjectSize / 2}\n        className=\"edgebutton-foreignobject\"\n      >\n        <button className=\"flowbutton\" onClick={onEdgeClick}>\n          ×\n        </button>\n      </foreignObject>\n    </>\n  )\n}\n","import React, { DragEvent, MouseEvent } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  Controls,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  FlowTransform,\n} from 'react-flow-renderer'\n\nimport 'style/flow.css'\nimport {\n  deleteFlowElements,\n  editFlowElementPositionById,\n  setFlowElements,\n  setFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectFlowElements,\n  selectFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { ToolBar } from 'components/ToolBar'\nimport {\n  reactFlowEdgeTypes,\n  reactFlowNodeTypes,\n} from './FlowChartNode/ReactFlowNodeTypesConst'\n\nexport const ReactFlowComponent = React.memo<UseRunPipelineReturnType>(\n  (props) => {\n    const flowElements = useSelector(selectFlowElements)\n    const dispatch = useDispatch()\n\n    const onConnect = (params: Connection | Edge) => {\n      dispatch(\n        setFlowElements(\n          addEdge(\n            {\n              ...params,\n              animated: false,\n              style: { width: 5 },\n              type: 'buttonedge',\n            },\n            flowElements,\n          ),\n        ),\n      )\n    }\n\n    const onElementsRemove = (elementsToRemove: Elements) => {\n      dispatch(deleteFlowElements(elementsToRemove))\n    }\n\n    const onDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    const onNodeDragStop = (event: MouseEvent, node: Node) => {\n      dispatch(\n        editFlowElementPositionById({\n          nodeId: node.id,\n          coord: { x: node.position.x, y: node.position.y },\n        }),\n      )\n    }\n\n    const flowPosition = useSelector(selectFlowPosition)\n\n    const onMoveEnd = (event: FlowTransform | undefined) => {\n      if (event !== undefined) {\n        dispatch(setFlowPosition(event))\n      }\n    }\n\n    return (\n      <div className=\"flow\">\n        <ReactFlowProvider>\n          <div className=\"reactflow-wrapper\">\n            <ReactFlow\n              elements={flowElements}\n              onElementsRemove={onElementsRemove}\n              onConnect={onConnect}\n              onDragOver={onDragOver}\n              onNodeDragStop={onNodeDragStop}\n              nodeTypes={reactFlowNodeTypes}\n              edgeTypes={reactFlowEdgeTypes}\n              defaultPosition={[flowPosition.x, flowPosition.y]}\n              defaultZoom={flowPosition.zoom}\n              onMoveEnd={onMoveEnd}\n            >\n              <ToolBar {...props} />\n              <Controls />\n            </ReactFlow>\n          </div>\n        </ReactFlowProvider>\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nexport const selectRightDrawerIsOpen = (state: RootState) =>\n  state.rightDrawer.open\n\nexport const selectRightDrawerMode = (state: RootState) =>\n  state.rightDrawer.mode\n\nexport const selectRightDrawerCurrentNodeId = (state: RootState) =>\n  state.rightDrawer.currendNodeId\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const ALGORITHM_NODE_SLICE_NAME = 'algorithmNode'\n\nexport type AlgorithmNode = {\n  [nodeId: string]: AlgrithmNodeType\n}\n\ntype AlgrithmNodeType = {\n  functionPath: string\n  name: string\n  params: ParamMap | null\n  isUpdated: boolean\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getAlgoParamsApi } from 'api/params/Params'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { ALGORITHM_NODE_SLICE_NAME } from './AlgorithmNodeType'\n\nexport const getAlgoParams = createAsyncThunk<\n  ParamDTO,\n  { nodeId: string; algoName: string }\n>(\n  `${ALGORITHM_NODE_SLICE_NAME}/getAlgoParams`,\n  async ({ algoName }, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoParamsApi(algoName)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\n\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { getAlgoParams } from './AlgorithmNodeActions'\nimport { ALGORITHM_NODE_SLICE_NAME, AlgorithmNode } from './AlgorithmNodeType'\nimport { isAlgorithmNodePostData } from 'api/run/RunUtils'\nimport { run, runByCurrentUid } from '../Pipeline/PipelineActions'\nimport { addAlgorithmNode } from '../FlowElement/FlowElementActions'\n\nconst initialState: AlgorithmNode = {}\n\nexport const algorithmNodeSlice = createSlice({\n  name: ALGORITHM_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { nodeId, path, newValue } = action.payload\n      const param = state[nodeId].params\n      if (param != null) {\n        const target = getChildParam(path, param)\n        if (target != null) {\n          target.value = newValue\n          state[nodeId].isUpdated = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAlgoParams.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        state[nodeId].params = convertToParamMap(action.payload)\n      })\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        const { node, functionPath, name } = action.meta.arg\n        const params = action.payload\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          state[node.id] = {\n            functionPath,\n            name,\n            params: convertToParamMap(params),\n            isUpdated: false,\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: AlgorithmNode = {}\n        action.payload.nodeList\n          .filter(isAlgorithmNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              newState[node.id] = {\n                name: node.data.label,\n                functionPath: node.data.path,\n                params: node.data.param,\n                isUpdated: false,\n              }\n            }\n          })\n        return newState\n      })\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          runPostData.nodeList\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              state[node.id].isUpdated = false\n            })\n        },\n      )\n  },\n})\n\nexport const { updateParam } = algorithmNodeSlice.actions\nexport default algorithmNodeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Typography from '@mui/material/Typography'\n\nimport {\n  selectAlgorithmName,\n  selectAlgorithmParamsExit,\n  selectAlgorithmParamsKeyList,\n  selectAlgorithmParamsValue,\n  selectAlgorithmParam,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { updateParam } from 'store/slice/AlgorithmNode/AlgorithmNodeSlice'\nimport { getAlgoParams } from 'store/slice/AlgorithmNode/AlgorithmNodeActions'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from '../ParamFormItemCreator'\nimport { ParamFormContext } from './RightDrawer'\n\nexport const AlgorithmParamForm = React.memo(() => {\n  const nodeId = React.useContext(ParamFormContext)\n  const dispatch = useDispatch()\n  const algoName = useSelector(selectAlgorithmName(nodeId))\n  const algoParamIsLoaded = useSelector(selectAlgorithmParamsExit(nodeId))\n  const paramKeyList = useSelector(\n    selectAlgorithmParamsKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (!algoParamIsLoaded) {\n      dispatch(getAlgoParams({ nodeId, algoName }))\n    }\n  }, [dispatch, nodeId, algoName, algoParamIsLoaded])\n  return (\n    <div style={{ padding: 8 }}>\n      <Typography variant=\"h5\">{algoName}</Typography>\n      <div style={{ paddingLeft: 8 }}>\n        {paramKeyList.map((paramKey) => (\n          <ParamItem key={paramKey} paramKey={paramKey} />\n        ))}\n      </div>\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const nodeId = React.useContext(ParamFormContext)\n  const Component = createParamFormItemComponent({\n    paramSelector: (paramKey) => selectAlgorithmParam(nodeId, paramKey),\n    paramValueSelector: (path) => selectAlgorithmParamsValue(nodeId, path),\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ nodeId, path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Divider from '@mui/material/Divider'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport Box from '@mui/material/Box'\nimport {\n  selectRightDrawerCurrentNodeId,\n  selectRightDrawerIsOpen,\n  selectRightDrawerMode,\n} from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport {\n  closeRightDrawer,\n  RIGHT_DRAWER_MODE,\n} from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { NWBSettingContents } from './NWB'\nimport { RootState } from 'store/store'\nimport { AlgorithmParamForm } from './AlgorithmParamForm'\nimport { SnakemakeContents } from './Snakemake'\n\nconst RightDrawer: React.FC = () => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(closeRightDrawer())\n  const title = useSelector((state: RootState) => {\n    const mode = selectRightDrawerMode(state)\n    switch (mode) {\n      case RIGHT_DRAWER_MODE.NWB:\n        return 'NWB Setting'\n      case RIGHT_DRAWER_MODE.PARAM_FORM:\n        return 'Param From'\n      case RIGHT_DRAWER_MODE.SNAKEMAKE:\n        return 'Snakemake'\n      default:\n        return 'none'\n    }\n  })\n  return (\n    <StyledDrawer open={open} anchor=\"right\" variant=\"persistent\">\n      <Toolbar />\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton color=\"inherit\" onClick={onClick} size=\"large\">\n          <ChevronRightIcon />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Box>\n      <Divider />\n      <MainContents>\n        <Contents />\n      </MainContents>\n    </StyledDrawer>\n  )\n}\n\nconst Contents: React.FC = () => {\n  const mode = useSelector(selectRightDrawerMode)\n  switch (mode) {\n    case RIGHT_DRAWER_MODE.NWB:\n      return <NWBSettingContents />\n    case RIGHT_DRAWER_MODE.PARAM_FORM:\n      return <ParamFormConetent />\n    case RIGHT_DRAWER_MODE.SNAKEMAKE:\n      return <SnakemakeContents />\n    default:\n      return null\n  }\n}\n\n/**\n * nodeId\n */\nexport const ParamFormContext = React.createContext<string>('')\n\nconst ParamFormConetent: React.FC = () => {\n  const nodeId = useSelector(selectRightDrawerCurrentNodeId)\n  if (nodeId != null) {\n    return (\n      <ParamFormContext.Provider value={nodeId}>\n        <AlgorithmParamForm />\n      </ParamFormContext.Provider>\n    )\n  } else {\n    return null\n  }\n}\n\nexport const rightDrawerWidth = 320\n\nconst StyledDrawer = styled(Drawer)({\n  width: rightDrawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: rightDrawerWidth,\n  },\n})\n\nconst MainContents = styled('main')({\n  height: '100%',\n})\n\nexport default RightDrawer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport { default as MuiToolbar } from '@mui/material/Toolbar'\nimport { styled } from '@mui/material/styles'\nimport { AlgorithmTreeView } from './TreeView'\nimport { ReactFlowComponent } from './ReactFlowComponent'\nimport RightDrawer, { rightDrawerWidth } from './RightDrawer'\nimport { selectRightDrawerIsOpen } from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\n\nconst FlowChart = React.memo<UseRunPipelineReturnType>((props) => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  return (\n    <RootDiv>\n      <StyledDrawer variant=\"permanent\">\n        <MuiToolbar />\n        <DrawerContents>\n          <AlgorithmTreeView />\n        </DrawerContents>\n      </StyledDrawer>\n\n      <MainContents open={open}>\n        <MuiToolbar />\n        <ReactFlowComponent {...props} />\n      </MainContents>\n      <RightDrawer />\n    </RootDiv>\n  )\n})\n\nexport const drawerWidth = 240\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n})\n\nconst StyledDrawer = styled(Drawer)({\n  width: drawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n})\n\nconst DrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')<{ open: boolean }>(\n  ({ theme }) => ({\n    flexDirection: 'column',\n    flexGrow: 1,\n    height: '90vh',\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -rightDrawerWidth,\n  }),\n  ({ open, theme }) =>\n    open\n      ? {\n          transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n          marginRight: 0,\n        }\n      : undefined,\n)\n\nexport default FlowChart\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport AddIcon from '@mui/icons-material/Add'\nimport Button from '@mui/material/Button'\nimport { pushInitialItemToNewRow } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const VisualizeItemAddButton: React.FC = () => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(pushInitialItemToNewRow())\n  }\n  return (\n    <StyledPaper elevation={1} variant=\"outlined\">\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height=\"100%\"\n      >\n        <StyledButton onClick={onClick}>\n          <AddIcon fontSize=\"large\" color=\"primary\" />\n        </StyledButton>\n      </Box>\n    </StyledPaper>\n  )\n}\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  width: 260,\n  height: 255,\n  border: 'dashed',\n  borderWidth: 2,\n  borderColor: theme.palette.divider,\n  margin: theme.spacing(1),\n}))\n\nconst StyledButton = styled(Button)({\n  width: '100%',\n  height: '100%',\n})\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport Menu from '@mui/material/Menu'\nimport MenuItem from '@mui/material/MenuItem'\nimport ListItemText from '@mui/material/ListItemText'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport AddIcon from '@mui/icons-material/Add'\nimport {\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { insertInitialItemToNextColumn } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { deleteDisplayItem } from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const DisplayDataItemLayoutMenuIcon = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onClickDeleteMenu = () => {\n    // visualize Itemで同じpathのデータ個数を調べて、1だったら、displayも削除\n    dispatch(\n      deleteDisplayItem(\n        isSingleData && filePath != null && dataType != null\n          ? { itemId, deleteData: true, filePath, dataType }\n          : { itemId, deleteData: false },\n      ),\n    )\n  }\n  const onClickInsertMenu = () => {\n    dispatch(insertInitialItemToNextColumn(itemId))\n  }\n  return (\n    <PresentationalLayoutMenuIcon\n      onClickDeleteMenu={onClickDeleteMenu}\n      onClickInsertMenu={onClickInsertMenu}\n    />\n  )\n})\n\nconst PresentationalLayoutMenuIcon = React.memo<{\n  onClickDeleteMenu: () => void\n  onClickInsertMenu: () => void\n}>(({ onClickDeleteMenu, onClickInsertMenu }) => {\n  const [open, setOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLButtonElement>(null)\n  const onClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.stopPropagation() // 親divのonClickを反応させないため\n    setOpen((prevOpen) => !prevOpen)\n  }\n  const onClose = () => {\n    setOpen(false)\n  }\n  const onClickDeleteMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickDeleteMenu()\n    setOpen(false)\n  }\n  const onClickInsertMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickInsertMenu()\n    setOpen(false)\n  }\n  return (\n    <>\n      <IconButton ref={anchorRef} onClick={onClick}>\n        <MoreVertIcon />\n      </IconButton>\n      <Menu anchorEl={anchorRef.current} open={open} onClose={onClose}>\n        <MenuItem onClick={onClickInsertMenuFn}>\n          <ListItemIcon>\n            <AddIcon />\n          </ListItemIcon>\n          <ListItemText>Insert into next column</ListItemText>\n        </MenuItem>\n        <MenuItem onClick={onClickDeleteMenuFn}>\n          <ListItemIcon>\n            <DeleteIcon />\n          </ListItemIcon>\n          <ListItemText>Delete</ListItemText>\n        </MenuItem>\n      </Menu>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport FormControl from '@mui/material/FormControl'\nimport MenuItem from '@mui/material/MenuItem'\nimport InputLabel from '@mui/material/InputLabel'\nimport FormHelperText from '@mui/material/FormHelperText'\nimport Select from '@mui/material/Select'\nimport ListSubheader from '@mui/material/ListSubheader'\n\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { RootState } from 'store/store'\nimport { selectInputNode } from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { selectNodeLabelById } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultSuccessList,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { getFileName } from 'store/slice/FlowElement/FlowElementUtils'\n\nexport const FilePathSelect: React.FC<{\n  dataType?: DATA_TYPE\n  selectedNodeId: string | null\n  selectedFilePath: string | null\n  onSelect: (nodeId: string, filePath: string, dataType: DATA_TYPE) => void\n  label?: string\n}> = ({ dataType, selectedNodeId, selectedFilePath, onSelect, label }) => {\n  const inputNodeFilePathInfoList = useSelector(\n    (state: RootState) => {\n      const inputNodes = selectInputNode(state)\n      return Object.entries(inputNodes)\n        .map(([nodeId, inputNode]) => ({\n          nodeId,\n          filePath: inputNode.selectedFilePath,\n          fileType: inputNode.fileType,\n          dataType: toDataTypeFromFileType(inputNode.fileType),\n          nodeName: selectNodeLabelById(nodeId)(state),\n        }))\n        .filter(({ filePath }) => filePath != null)\n        .filter(({ dataType: inputNodeDataType }) =>\n          dataType != null ? inputNodeDataType === dataType : true,\n        )\n    },\n    // todo 比較関数\n  )\n\n  const latestUid = useSelector(selectPipelineLatestUid)\n\n  const algorithmNodeOutputPathInfoList = useSelector((state: RootState) => {\n    if (latestUid != null) {\n      const runResult = selectPipelineNodeResultSuccessList(state)\n      return runResult.map(({ nodeId, nodeResult }) => {\n        return {\n          nodeId,\n          nodeName: selectNodeLabelById(nodeId)(state),\n          paths: Object.entries(nodeResult.outputPaths)\n            .map(([outputKey, value]) => {\n              return {\n                outputKey,\n                filePath: value.path,\n                type: value.type,\n              }\n            })\n            .filter(({ type }) =>\n              dataType != null ? type === dataType : true,\n            ),\n        }\n      })\n    } else {\n      return []\n    }\n  })\n\n  const [open, setOpen] = React.useState(false)\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const onSelectHandle = (\n    nodeId: string,\n    filePath: string,\n    dataType: DATA_TYPE,\n  ) => {\n    onSelect(nodeId, filePath, dataType)\n    handleClose()\n  }\n\n  const menuItemList: React.ReactElement[] = []\n  inputNodeFilePathInfoList.forEach((pathInfo) => {\n    const filePath = pathInfo.filePath\n    if (Array.isArray(filePath)) {\n      filePath.forEach((pathElm) => {\n        menuItemList.push(\n          <MenuItem\n            value={`${pathInfo.nodeId}/${pathElm}`}\n            onClick={() =>\n              onSelectHandle(pathInfo.nodeId, pathElm ?? '', pathInfo.dataType)\n            }\n            key={pathInfo.nodeId}\n          >\n            {getFileName(pathElm)}\n          </MenuItem>,\n        )\n      })\n    } else {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${pathInfo.filePath}`}\n          onClick={() =>\n            onSelectHandle(pathInfo.nodeId, filePath ?? '', pathInfo.dataType)\n          }\n          key={pathInfo.nodeId}\n        >\n          {pathInfo.nodeName}\n        </MenuItem>,\n      )\n    }\n  })\n  algorithmNodeOutputPathInfoList.forEach((pathInfo) => {\n    menuItemList.push(<ListSubheader>{pathInfo.nodeName}</ListSubheader>)\n    pathInfo.paths.forEach((outputPath, i) => {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${outputPath.filePath}`}\n          onClick={() =>\n            onSelectHandle(\n              pathInfo.nodeId,\n              outputPath.filePath,\n              outputPath.type,\n            )\n          }\n          key={`${pathInfo.nodeId}/${outputPath.filePath}`}\n        >\n          {outputPath.outputKey}\n        </MenuItem>,\n      )\n    })\n  })\n\n  return (\n    <FormControl style={{ minWidth: 150, maxWidth: 220 }} variant=\"standard\">\n      <InputLabel>{!!label ? label : 'Select Item'}</InputLabel>\n      <Select\n        value={`${selectedNodeId}/${selectedFilePath}`}\n        open={open}\n        onClose={handleClose}\n        onOpen={handleOpen}\n      >\n        {menuItemList}\n      </Select>\n      {inputNodeFilePathInfoList.length +\n        algorithmNodeOutputPathInfoList.length ===\n        0 && <FormHelperText error={true}>no data</FormHelperText>}\n    </FormControl>\n  )\n}\n\nfunction toDataTypeFromFileType(fileType: FILE_TYPE) {\n  switch (fileType) {\n    case FILE_TYPE_SET.IMAGE:\n      return DATA_TYPE_SET.IMAGE\n    case FILE_TYPE_SET.CSV:\n      return DATA_TYPE_SET.CSV\n    case FILE_TYPE_SET.HDF5:\n      return DATA_TYPE_SET.HDF5\n    case FILE_TYPE_SET.FLUO:\n      return DATA_TYPE_SET.FLUO\n    case FILE_TYPE_SET.BEHAVIOR:\n      return DATA_TYPE_SET.BEHAVIOR\n  }\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport FormControl from '@mui/material/FormControl'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\nimport {\n  selectDisplayDataIsSingle,\n  selectImageItemFilePath,\n  selectRoiItemFilePath,\n  selectRoiItemNodeId,\n  selectSelectedVisualizeItemId,\n  selectTimeSeriesItemRefImageItemId,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n  selectVisualizeImageItemIdList,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nimport { DisplayDataItemLayoutMenuIcon } from './VisualizeItemLayoutMenuIcon'\nimport { DisplayDataItem } from './DisplayDataItem'\nimport {\n  selectItem,\n  setItemSize,\n  setRoiItemFilePath,\n  setTimeSeriesRefImageItemId,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { RootState } from 'store/store'\nimport { FilePathSelect } from './FilePathSelect'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const VisualizeItem = React.memo<{ itemId: number }>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(selectItem(itemId))\n  }\n  const isSelected = useSelector(\n    (state: RootState) => selectSelectedVisualizeItemId(state) === itemId,\n  )\n  const { size, onMouseDownX, onMouseDownY, onMouseDownXY } =\n    useItemDragResize(itemId)\n  return (\n    <Box sx={{ m: 1, display: 'flex', flexDirection: 'row' }}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Paper\n          variant=\"outlined\"\n          key={itemId}\n          onClick={onClick}\n          sx={{\n            width: `${size.width}px`,\n            height: `${size.height}px`,\n            p: 1,\n            borderColor: (theme) =>\n              isSelected ? theme.palette.primary.light : undefined,\n          }}\n        >\n          <ItemHeader itemId={itemId} />\n          <DisplayDataItem itemId={itemId} />\n        </Paper>\n        <Box\n          sx={{\n            display: 'flex',\n          }}\n        >\n          <Box\n            sx={{\n              flexGrow: 1,\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              cursor: 'row-resize',\n            }}\n            onMouseDown={onMouseDownY}\n          />\n          <Box\n            sx={{\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              width: '12px',\n              cursor: 'nwse-resize',\n            }}\n            onMouseDown={onMouseDownXY}\n          />\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Box\n          sx={{\n            flexGrow: 1,\n            position: 'relative',\n            left: '-2px',\n            width: '4px',\n            cursor: 'col-resize',\n          }}\n          onMouseDown={onMouseDownX}\n        />\n        <Box\n          sx={{\n            position: 'relative',\n            height: '12px',\n            width: '4px',\n            left: '-2px',\n            cursor: 'nwse-resize',\n          }}\n          onMouseDown={onMouseDownXY}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst ItemHeader = React.memo<{ itemId: number }>(({ itemId }) => {\n  const itemDataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <Box display=\"flex\" justifyContent=\"flex-end\">\n      <Box flexGrow={1}>\n        <>ID: {itemId}</>\n        <FilePathSelectItem itemId={itemId} />\n      </Box>\n      {itemDataType === DATA_TYPE_SET.TIME_SERIES && (\n        <Box flexGrow={1}>\n          <RefImageItemIdSelect itemId={itemId} />\n        </Box>\n      )}\n      {itemDataType === DATA_TYPE_SET.IMAGE && (\n        <Box flexGrow={1}>\n          <RoiSelect itemId={itemId} />\n        </Box>\n      )}\n      <Box>\n        <DisplayDataItemLayoutMenuIcon itemId={itemId} />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const selectedNodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const selectedFilePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFilePath = (\n    nodeId: string,\n    newFilePath: string,\n    newDataType: DATA_TYPE,\n  ) => {\n    const basePayload = {\n      itemId,\n      nodeId,\n      filePath: newFilePath,\n      dataType: newDataType,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && selectedFilePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: dataType,\n              prevFilePath: selectedFilePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n\n  return (\n    <FilePathSelect\n      selectedNodeId={selectedNodeId}\n      selectedFilePath={selectedFilePath}\n      onSelect={onSelectFilePath}\n    />\n  )\n})\n\nconst RefImageItemIdSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const itemIdList = useSelector(\n    selectVisualizeImageItemIdList,\n    arrayEqualityFn,\n  )\n  const onChangeRefImageItemId = (event: SelectChangeEvent) => {\n    const value = Number(event.target.value)\n    dispatch(\n      setTimeSeriesRefImageItemId({\n        itemId,\n        refImageItemId: isNaN(value) ? null : value,\n      }),\n    )\n  }\n  const selectedRefImageItemId = useSelector(\n    selectTimeSeriesItemRefImageItemId(itemId),\n  )\n  return (\n    <FormControl fullWidth variant=\"standard\">\n      <InputLabel>ref image</InputLabel>\n      <Select\n        value={String(selectedRefImageItemId)}\n        onChange={onChangeRefImageItemId}\n      >\n        <MenuItem value={undefined}>{'None'}</MenuItem>\n        {itemIdList.map((value) => (\n          <MenuItem value={value}>{value}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst MIN_WIDTH = 200\nconst MIN_HEIFHT = 150\n\nfunction useItemDragResize(itemId: number) {\n  const dispatch = useDispatch()\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const [movingSize, setMovingSize] = React.useState({ width, height })\n  const onCommitSize = React.useCallback(\n    (size: { width: number; height: number }) =>\n      dispatch(setItemSize({ itemId, ...size })),\n    [dispatch, itemId],\n  )\n  const onMouseDownX = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          setMovingSize((size) => ({ ...size, width: movingWidth }))\n          movingX = moveEvent.screenX\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, width: movingWidth })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownY = useMouseDragHandler(\n    (downEvent) => {\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize((size) => ({ ...size, height: movingHeight }))\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownXY = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize({ width: movingWidth, height: movingHeight })\n          movingX = moveEvent.screenX\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ width: movingWidth, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  return {\n    size: movingSize,\n    onMouseDownX,\n    onMouseDownY,\n    onMouseDownXY,\n  }\n}\n\nfunction useMouseDragHandler(\n  onMouseDown: (event: React.MouseEvent) => {\n    onMouseMove: (this: Document, event: MouseEvent) => void\n    onMouseUp: (this: Document, event: MouseEvent) => void\n  },\n  dependencies: React.DependencyList,\n) {\n  return React.useCallback(\n    (event: React.MouseEvent) => {\n      const { onMouseMove, onMouseUp } = onMouseDown(event)\n      document.addEventListener('mousemove', onMouseMove)\n      document.addEventListener(\n        'mouseup',\n        (event) => {\n          document.removeEventListener('mousemove', onMouseMove)\n          onMouseUp.call(document, event)\n        },\n        { once: true },\n      )\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dependencies],\n  )\n}\n\nconst RoiSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const roiItemNodeId = useSelector(selectRoiItemNodeId(itemId))\n  const roiItemFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const onSelectRoiFilePath = (nodeId: string, filePath: string) => {\n    dispatch(setRoiItemFilePath({ itemId, nodeId, filePath }))\n  }\n  return (\n    <FilePathSelect\n      selectedFilePath={roiItemFilePath}\n      selectedNodeId={roiItemNodeId}\n      onSelect={onSelectRoiFilePath}\n      dataType={DATA_TYPE_SET.ROI}\n      label={'Select Roi'}\n    />\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { selectVisualizeItemLayout } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nimport { VisualizeItemAddButton } from './VisualizeItemAddButton'\nimport { VisualizeItem } from './VisualizeItem'\n\nexport const FlexItemList: React.FC = () => {\n  const layout = useSelector(selectVisualizeItemLayout, twoDimarrayEqualityFn)\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"column\" p={1} m={1}>\n      {layout.map((row) => (\n        <Box display=\"flex\" flexDirection=\"row\">\n          {row.map((itemId) => (\n            <VisualizeItem itemId={itemId} key={itemId} />\n          ))}\n        </Box>\n      ))}\n      <VisualizeItemAddButton />\n    </Box>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { GradientPickerPopover } from 'react-linear-gradient-picker'\nimport { SketchPicker } from 'react-color'\nimport { PALETTE_COLOR_SHAPE_TYPE } from 'react-linear-gradient-picker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const GradientColorPicker = React.memo<{\n  colors: { rgb: string; offset: string }[]\n  dispatchSetColor: (colorCode: ColorType[]) => void\n}>(({ colors, dispatchSetColor }) => {\n  const palette: PALETTE_COLOR_SHAPE_TYPE[] = colors.map((value) => {\n    return {\n      offset: value.offset,\n      color: value.rgb,\n    }\n  })\n\n  const onPaletteChange = (palette: PALETTE_COLOR_SHAPE_TYPE[]) => {\n    const colorCode = palette.map((value) => {\n      const color = value.color\n      const rgbStr = color.replace(/[^0-9,]/g, '').split(',')\n      const rgb = {\n        r: Number(rgbStr[0]),\n        g: Number(rgbStr[1]),\n        b: Number(rgbStr[2]),\n      }\n      return {\n        rgb: `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`,\n        offset: value.offset,\n      }\n    })\n    dispatchSetColor(colorCode)\n  }\n\n  const [open, setOpen] = useState(false)\n\n  return (\n    <GradientPickerPopover\n      open={open}\n      setOpen={() => setOpen(!open)}\n      // showAnglePicker={true}\n      width={150}\n      maxStops={10}\n      paletteHeight={25}\n      palette={palette}\n      onPaletteChange={onPaletteChange}\n      flatStyle={true}\n    >\n      <WrappedSketchPicker />\n    </GradientPickerPopover>\n  )\n})\n\ntype WrapperPropTypes = {\n  onSelect?: (color: string, opacity?: number) => void\n  color?: string\n}\n\nconst WrappedSketchPicker: React.FC<WrapperPropTypes> = ({\n  onSelect,\n  color,\n}) => {\n  return (\n    <SketchPicker\n      color={color}\n      width=\"150px\"\n      // styles={{width: \"10px\"}}\n      onChange={(c) => {\n        const { r, g, b, a } = c.rgb\n        onSelect?.(`rgb(${r}, ${g}, ${b})`, a)\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Switch from '@mui/material/Switch'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\n\nimport {\n  selectImageItemShowGrid,\n  selectImageItemShowLine,\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemFilePath,\n  selectDisplayDataIsSingle,\n  selectImageItemSaveFilename,\n  selectImageItemSaveFormat,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setImageItemShowGrid,\n  setImageItemShowLine,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowScale,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemColors,\n  resetImageActiveIndex,\n  setImageItemRoiAlpha,\n  setImageItemSaveFileName,\n  setImageItemSaveFormat,\n  setImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\nimport { FileSelectImple } from 'components/FlowChart/FlowChartNode/FileSelect'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { Box, TextField } from '@mui/material'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\nimport Button from '@mui/material/Button'\nimport { getImageData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const ImageItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectImageFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.IMAGE,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.IMAGE })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  const colors = useSelector(selectImageItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setImageItemColors({ itemId, colors: colorCode }))\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectImageFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.IMAGE}\n        selectButtonLabel=\"Select Image\"\n      />\n      <StartEndIndex />\n      <Showticklabels />\n      <ShowLine />\n      <ShowGrid />\n      <ShowScale />\n      <Zsmooth />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <Alpha />\n      <RoiAlpha />\n      <SaveFig />\n    </div>\n  )\n}\n\nconst Showticklabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setImageItemShowticklabels({ itemId, showticklabels: !showticklabels }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"Showticklabels\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"ShowLine\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"ShowGrid\"\n    />\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"ShowScale\"\n    />\n  )\n}\n\nconst Zsmooth: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string | boolean>) => {\n    dispatch(setImageItemZsmooth({ itemId, zsmooth: event.target.value }))\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>smooth</InputLabel>\n      <Select label=\"smooth\" value={zsmooth} onChange={handleChange}>\n        <MenuItem value={'best'}>best</MenuItem>\n        <MenuItem value={'fast'}>fast</MenuItem>\n        <MenuItem value={'false'}>False</MenuItem>\n      </Select>\n    </FormControl>\n  )\n}\n\nconst Alpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const inputError = !(alpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemAlpha({ itemId, alpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        label={'image alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={alpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst RoiAlpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const inputError = !(roiAlpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemRoiAlpha({ itemId, roiAlpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        label={'roi alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={roiAlpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst SaveFig: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const saveFileName = useSelector(selectImageItemSaveFilename(itemId))\n  const saveFormat = useSelector(selectImageItemSaveFormat(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(setImageItemSaveFormat({ itemId, saveFormat: event.target.value }))\n  }\n  const onChangeFileName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      setImageItemSaveFileName({ itemId, saveFileName: event.target.value }),\n    )\n  }\n\n  return (\n    <>\n      <h3>SaveFig</h3>\n      <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel>format</InputLabel>\n        <Select label=\"smooth\" value={saveFormat} onChange={handleChange}>\n          <MenuItem value={'svg'}>svg</MenuItem>\n          <MenuItem value={'png'}>png</MenuItem>\n          <MenuItem value={'jpeg'}>jpeg</MenuItem>\n          <MenuItem value={'webp'}>webp</MenuItem>\n        </Select>\n      </FormControl>\n      <TextField\n        label={'Filename'}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeFileName}\n        value={saveFileName}\n      />\n    </>\n  )\n}\n\nconst StartEndIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const [startIndex, onChangeStartIndex] = React.useState(\n    useSelector(selectImageItemStartIndex(itemId)),\n  )\n  const [endIndex, onChangeEndIndex] = React.useState(\n    useSelector(selectImageItemEndIndex(itemId)),\n  )\n  const inputError = !(startIndex > 0)\n  const dispatch = useDispatch()\n  const onStartChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeStartIndex(newValue)\n    }\n  }\n  const onEndChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeEndIndex(newValue)\n    }\n  }\n\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n  const onClickButton = () => {\n    if (startIndex > 0) {\n      dispatch(setImageItemStartIndex({ itemId, startIndex }))\n      dispatch(setImageItemEndIndex({ itemId, endIndex }))\n      dispatch(resetImageActiveIndex({ itemId, startIndex, endIndex }))\n      if (filePath !== null) {\n        dispatch(\n          getImageData({\n            path: filePath,\n            startIndex: startIndex ?? 1,\n            endIndex: endIndex ?? 10,\n          }),\n        )\n      }\n    }\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>\n      <TextField\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 1,\n          min: 0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onStartChange}\n        value={startIndex}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n      ~\n      <TextField\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onEndChange}\n        value={endIndex}\n      />\n      <Button\n        size=\"small\"\n        className=\"ctrl_btn\"\n        variant=\"contained\"\n        onClick={onClickButton}\n      >\n        load\n      </Button>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FileSelectImple } from 'components/FlowChart/FlowChartNode/FileSelect'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { FormControlLabel, Switch, TextField } from '@mui/material'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const CsvItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const dispatch = useDispatch()\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.CSV,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.CSV })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.CSV}\n        selectButtonLabel=\"Select CSV\"\n      />\n      <Transpose />\n      <SetHeader />\n      <SetIndex />\n    </div>\n  )\n}\n\nconst Transpose: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemTranspose({ itemId, transpose: !transpose }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={transpose} onChange={toggleChecked} />}\n      label=\"transpose\"\n    />\n  )\n}\n\nconst SetHeader: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeSetHeader = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value === '' ? null : Number(event.target.value)\n    if (newValue === null || newValue >= 0) {\n      dispatch(setCsvItemSetHeader({ itemId, setHeader: newValue }))\n    }\n  }\n\n  return (\n    <>\n      <TextField\n        label=\"header\"\n        sx={{\n          width: 100,\n          margin: (theme) => theme.spacing(0, 1, 0, 1),\n        }}\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeSetHeader}\n        value={setHeader}\n      />\n    </>\n  )\n}\n\nconst SetIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemSetIndex({ itemId, setIndex: !setIndex }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={setIndex} onChange={toggleChecked} />}\n      label=\"setIndex\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FormControlLabel, Switch } from '@mui/material'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setHeatMapItemColors,\n  setHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const HeatmapItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const colors = useSelector(selectHeatMapItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setHeatMapItemColors({ itemId, colors: colorCode }))\n  }\n  return (\n    <>\n      <ShowScale />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n    </>\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setHeatMapItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"showscale\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  AccordionDetails,\n  AccordionSummary,\n  FormControlLabel,\n  Switch,\n  TextField,\n} from '@mui/material'\nimport Box from '@mui/material/Box'\nimport Checkbox from '@mui/material/Checkbox'\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectTimeSeriesItemFilePath,\n  selectTimeSeriesItemKeys,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemDrawOrderList,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  getTimeSeriesAllData,\n  getTimeSeriesDataById,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { Accordion } from 'components/Accordion'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\nexport const TimeSeriesItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <Offset />\n      <Span />\n      <ShowGrid />\n      <ShowLine />\n      <ShowTickLabels />\n      <ZeroLine />\n      <Xrange />\n      <LegendSelect />\n    </div>\n  )\n}\n\nconst Offset: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemOffset({ itemId, offset: !offset }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={offset} onChange={toggleChecked} />}\n      label=\"offset\"\n    />\n  )\n}\n\nconst Span: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n\n  const dispatch = useDispatch()\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number' && newValue > 0) {\n      dispatch(setTimeSeriesItemSpan({ itemId, span: newValue }))\n    }\n  }\n  return (\n    <FormControlLabel\n      control={\n        <TextField\n          type=\"number\"\n          style={{ width: '6vw' }}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={onChange}\n          defaultValue={span}\n        />\n      }\n      label=\"offset std\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"showgrid\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"showline\"\n    />\n  )\n}\n\nconst ShowTickLabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setTimeSeriesItemShowTickLabels({\n        itemId,\n        showticklabels: !showticklabels,\n      }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"showticklabels\"\n    />\n  )\n}\n\nconst ZeroLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemZeroLine({ itemId, zeroline: !zeroline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={zeroline} onChange={toggleChecked} />}\n      label=\"zeroline\"\n    />\n  )\n}\n\nconst Xrange: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeLeft = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newLeft = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newLeft === 'number') {\n      dispatch(setTimeSeriesItemXrangeLeft({ itemId, left: newLeft }))\n    }\n  }\n  const onChangeRight = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newRight = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newRight === 'number') {\n      dispatch(setTimeSeriesItemXrangeRight({ itemId, right: newRight }))\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <>\n          left:\n          <TextField\n            style={{ width: 50 }}\n            type=\"number\"\n            inputProps={{\n              step: 1,\n              min: 0,\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeLeft}\n            defaultValue={xrange.left}\n          />\n          right:\n          <TextField\n            style={{ width: 50 }}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeRight}\n            defaultValue={xrange.right}\n          />\n        </>\n      }\n      label=\"\"\n    />\n  )\n}\n\nconst LegendSelect: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  // const drawIndexMap = useSelector(selectTimeSeriesItemDrawIndexMap(itemId))\n  const dataKeys = useSelector(\n    selectTimeSeriesItemKeys(itemId),\n    arrayEqualityFn,\n  )\n  const drawOrderList = useSelector(\n    selectTimeSeriesItemDrawOrderList(itemId),\n    arrayEqualityFn,\n  )\n  const filePath = useSelector(selectTimeSeriesItemFilePath(itemId))\n\n  const allHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: event.target.checked ? dataKeys : [],\n      }),\n    )\n\n    if (event.target.checked && filePath !== null) {\n      dispatch(getTimeSeriesAllData({ path: filePath }))\n    }\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const index = event.target.value\n    const newDrawOrderList = event.target.checked\n      ? [...drawOrderList, index]\n      : drawOrderList.filter((value) => value !== index)\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    if (filePath !== null) {\n      dispatch(getTimeSeriesDataById({ path: filePath, index: index }))\n    }\n  }\n\n  const drawIndexMap = Object.fromEntries(\n    dataKeys.map((v) => {\n      if (drawOrderList.includes(v)) {\n        return [v, true]\n      } else {\n        return [v, false]\n      }\n    }),\n  )\n\n  const children = (\n    <Box sx={{ display: 'flex', flexDirection: 'column', ml: 3 }}>\n      {dataKeys.map((key) => (\n        <FormControlLabel\n          key={`${key}`}\n          label={`Index ${key}`}\n          control={\n            <Checkbox\n              checked={drawIndexMap[key]}\n              onChange={handleChange}\n              value={key}\n            />\n          }\n        />\n      ))}\n    </Box>\n  )\n\n  return (\n    <Accordion sx={{ mt: 2 }} TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        Legend select\n      </AccordionSummary>\n      <AccordionDetails>\n        <>\n          <FormControlLabel\n            label=\"All Check\"\n            control={\n              <Checkbox\n                checked={Object.values(drawIndexMap).every((v) => {\n                  return v\n                })}\n                onChange={allHandleChange}\n              />\n            }\n          />\n          {children}\n        </>\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","import React from 'react'\n// import { useSelector, useDispatch } from 'react-redux'\n// import { SelectedItemIdContext } from '../VisualizeItemEditor'\n// import { selectRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n// import { setRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n// import { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\n// import { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n// import { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const RoiItemEditor: React.FC = () => {\n  // const itemId = React.useContext(SelectedItemIdContext)\n  // const dispatch = useDispatch()\n  // const { onUploadFile } = useFileUploader(FILE_TYPE_SET.CSV)\n  // const onUploadFileHandle = (formData: FormData, fileName: string) => {\n  //   onUploadFile(formData, fileName)\n  // }\n\n  // const colors = useSelector(selectRoiItemColors(itemId))\n  // const dispathSetColor = (colorCode: ColorType[]) => {\n  //   dispatch(setRoiItemColors({ itemId, colors: colorCode }))\n  // }\n\n  return (\n    <>\n      {/* <GradientColorPicker /> */}\n      {/* <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} /> */}\n    </>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FormControlLabel, TextField } from '@mui/material'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nexport const ScatterItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <XIndex />\n      <YIndex />\n    </div>\n  )\n}\n\nconst XIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeXIndex = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value === '' ? null : Number(event.target.value)\n    if (newValue !== null && newValue >= 0) {\n      dispatch(setScatterItemXIndex({ itemId, xIndex: newValue }))\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <>\n          <TextField\n            style={{ width: 50 }}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeXIndex}\n            defaultValue={xIndex}\n          />\n          xIndex\n        </>\n      }\n      label=\"\"\n    />\n  )\n}\n\nconst YIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeYIndex = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value === '' ? null : Number(event.target.value)\n    if (newValue !== null && newValue >= 0) {\n      dispatch(setScatterItemYIndex({ itemId, yIndex: newValue }))\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <>\n          <TextField\n            style={{ width: 50 }}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeYIndex}\n            defaultValue={yIndex}\n          />\n          yIndex\n        </>\n      }\n      label=\"\"\n    />\n  )\n}\n","import React from 'react'\n\nexport const BarItemEditor: React.FC = () => {\n  return <div style={{ margin: '10px', padding: 10 }}></div>\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport {\n  selectSelectedVisualizeItemId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { ImageItemEditor } from './Editor/ImageItemEditor'\nimport { CsvItemEditor } from './Editor/CsvItemEditor'\nimport { HeatmapItemEditor } from './Editor/HeatmapItemEditor'\nimport { TimeSeriesItemEditor } from './Editor/TimeSeriesItemEditor'\nimport { RoiItemEditor } from './Editor/RoiItemEditor'\nimport { ScatterItemEditor } from './Editor/ScatterItemEditor'\nimport { BarItemEditor } from './Editor/BarItemEditor'\n\nexport const VisualizeItemEditor = () => {\n  const selectedItemId = useSelector(selectSelectedVisualizeItemId)\n  return (\n    <>\n      {selectedItemId != null ? (\n        <SelectedItemIdContext.Provider value={selectedItemId}>\n          <Box m={1}>\n            <DisplayDataItemEditor />\n          </Box>\n        </SelectedItemIdContext.Provider>\n      ) : (\n        'Please select item...'\n      )}\n    </>\n  )\n}\n\nexport const SelectedItemIdContext = React.createContext<number>(NaN)\n\nconst DisplayDataItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <div style={{ marginTop: 8 }}>\n      <DisplayEditor dataType={dataType} />\n    </div>\n  )\n}\n\nconst DisplayEditor: React.FC<{\n  dataType: DATA_TYPE | null\n}> = ({ dataType }) => {\n  /* 他のtypeのEditorも必要になったら追加する */\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return <ImageItemEditor />\n    case DATA_TYPE_SET.CSV:\n      return <CsvItemEditor />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatmapItemEditor />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesItemEditor />\n    case DATA_TYPE_SET.ROI:\n      return <RoiItemEditor />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterItemEditor />\n    case DATA_TYPE_SET.BAR:\n      return <BarItemEditor />\n    case DATA_TYPE_SET.HTML:\n      return <div>html editor</div>\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport { default as MuiToolbar } from '@mui/material/Toolbar'\nimport { styled } from '@mui/material/styles'\nimport { drawerWidth } from 'components/FlowChart/FlowChart'\nimport { FlexItemList } from './FlexItemList'\nimport { VisualizeItemEditor } from './VisualizeItemEditor'\n\nconst Visualize: React.FC = () => {\n  return (\n    <RootDiv>\n      <StyledDrawer variant=\"permanent\">\n        <MuiToolbar />\n        <StyledDrawerContents>\n          <VisualizeItemEditor />\n        </StyledDrawerContents>\n      </StyledDrawer>\n      <MainContents>\n        <MuiToolbar />\n        <FlexItemList />\n      </MainContents>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n})\n\nconst StyledDrawer = styled(Drawer)({\n  width: drawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n})\n\nconst StyledDrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')({\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n  height: '100vh',\n})\n\nexport default Visualize\n","import { RootState } from 'store/store'\nimport { EXPERIMENTS_STATUS } from './ExperimentsType'\n\nconst selectExperiments = (state: RootState) => state.experiments\n\nexport const selectExperimentsSatusIsUninitialized = (state: RootState) =>\n  selectExperiments(state).status === 'uninitialized'\n\nexport const selectExperimentsSatusIsPending = (state: RootState) =>\n  selectExperiments(state).status === 'pending'\n\nexport const selectExperimentsSatusIsFulfilled = (state: RootState) =>\n  selectExperiments(state).status === 'fulfilled'\n\nexport const selectExperimentsSatusIsError = (state: RootState) =>\n  selectExperiments(state).status === 'error'\n\nexport const selectExperimentsErrorMessage = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'error') {\n    return experiments.message\n  } else {\n    throw new Error('experiments status is not error')\n  }\n}\n\nexport const selectExperimentList = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'fulfilled') {\n    return experiments.experimentList\n  } else {\n    throw new Error('experiments status is not fulfilled')\n  }\n}\n\nexport const selectExperimentUidList = (state: RootState) =>\n  Object.keys(selectExperimentList(state))\n\nexport const selectExperiment = (uid: string) => (state: RootState) =>\n  selectExperimentList(state)[uid]\n\nexport const selectExperimentTimeStamp = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).timestamp\n\nexport const selectExperimentName = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).name\n\nexport const selectExperimentStatus =\n  (uid: string) =>\n  (state: RootState): EXPERIMENTS_STATUS => {\n    const functions = selectExperimentList(state)[uid].functions\n    const statusList = Object.values(functions).map((f) => f.status)\n    if (statusList.findIndex((status) => status === 'error') >= 0) {\n      return 'error'\n    } else if (statusList.findIndex((status) => status === 'running') >= 0) {\n      return 'running'\n    } else {\n      return 'success'\n    }\n  }\n\nexport const selectExperimentCheckList =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionNodeIdList =\n  (uid: string) => (state: RootState) =>\n    Object.keys(selectExperimentList(state)[uid].functions)\n\nexport const selectExperimentFunction =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentList(state)[uid].functions[nodeId]\n\nexport const selectExperimentFunctionName =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).name\n\nexport const selectExperimentFunctionStatus =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n","import React from 'react'\nimport DoneIcon from '@mui/icons-material/Done'\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline'\nimport HorizontalRuleIcon from '@mui/icons-material/HorizontalRule'\n\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport const ExperimentStatusIcon = React.memo<{ status: EXPERIMENTS_STATUS }>(\n  ({ status }) => {\n    switch (status) {\n      case 'error':\n        return <ErrorOutlineIcon color=\"error\" />\n      case 'success':\n        return <DoneIcon color=\"success\" />\n      case 'running':\n        return <HorizontalRuleIcon color=\"inherit\" />\n    }\n  },\n)\n","import React, { useState, useRef } from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport GetAppIcon from '@mui/icons-material/GetApp'\n\nimport {\n  downloadExperimentConfigApi,\n  downloadExperimentNwbApi,\n} from 'api/experiments/Experiments'\n\nimport { ExperimentUidContext } from '../ExperimentTable'\n\nexport const NWBDownloadButton = React.memo<{\n  name: string\n}>(({ name }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n\n  const onClick = async () => {\n    try {\n      const responseData = await downloadExperimentNwbApi(uid)\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      throw new Error('Download Error')\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick}>\n        <GetAppIcon color=\"primary\" />\n      </IconButton>\n      <a href={url} download={`${name}.nwb`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n\nexport const ConfigDownloadButton = React.memo(() => {\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n\n  const onClick = async () => {\n    try {\n      const responseData = await downloadExperimentConfigApi(uid)\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      throw new Error('Download Error')\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick}>\n        <GetAppIcon color=\"primary\" />\n      </IconButton>\n      <a href={url} download={`config.yaml`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport Collapse from '@mui/material/Collapse'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Typography from '@mui/material/Typography'\n\nimport { ExperimentUidContext } from './ExperimentTable'\nimport {\n  selectExperimentFunctionName,\n  selectExperimentFunctionNodeIdList,\n  selectExperimentFunctionStatus,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { NWBDownloadButton } from './Button/DownloadButton'\n\nexport const CollapsibleTable = React.memo<{\n  open: boolean\n}>(({ open }) => {\n  return (\n    <TableRow>\n      <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={10}>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Box margin={1}>\n            <Typography variant=\"h6\" gutterBottom component=\"div\">\n              Details\n            </Typography>\n            <Table size=\"small\" aria-label=\"purchases\">\n              <Head />\n              <Body />\n            </Table>\n          </Box>\n        </Collapse>\n      </TableCell>\n    </TableRow>\n  )\n})\n\nconst Head = React.memo(() => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>Function</TableCell>\n        <TableCell>nodeID</TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>NWB</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst Body = React.memo(() => {\n  const uid = React.useContext(ExperimentUidContext)\n  const nodeIdList = useSelector(\n    selectExperimentFunctionNodeIdList(uid),\n    arrayEqualityFn,\n  )\n  return (\n    <TableBody>\n      {nodeIdList.map((nodeId) => (\n        <TableRowOfFunction nodeId={nodeId} />\n      ))}\n    </TableBody>\n  )\n})\n\nconst TableRowOfFunction = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const name = useSelector(selectExperimentFunctionName(uid, nodeId))\n  const status = useSelector(selectExperimentFunctionStatus(uid, nodeId))\n  return (\n    <TableRow key={nodeId}>\n      <TableCell component=\"th\" scope=\"row\">\n        {name}\n      </TableCell>\n      <TableCell>{nodeId}</TableCell>\n      <TableCell>\n        <ExperimentStatusIcon status={status} />\n      </TableCell>\n      <TableCell>\n        <NWBDownloadButton name={name} />\n      </TableCell>\n    </TableRow>\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport IconButton from '@mui/material/IconButton'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline'\nimport { selectExperimentName } from 'store/slice/Experiments/ExperimentsSelectors'\nimport { deleteExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentUidContext } from '../ExperimentTable'\n\nexport const DeleteButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const uid = React.useContext(ExperimentUidContext)\n\n  const name = useSelector(selectExperimentName(uid))\n  const [open, setOpen] = React.useState(false)\n\n  const onClickOpen = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(deleteExperimentByUid(uid))\n  }\n  return (\n    <>\n      <IconButton onClick={onClickOpen}>\n        <DeleteOutlineIcon color=\"error\" />\n      </IconButton>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete {name}?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport { useSnackbar } from 'notistack'\nimport { importExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { AppDispatch } from 'store/store'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport ReplyIcon from '@mui/icons-material/Reply'\n\nexport const ImportButton = React.memo(() => {\n  const dispatch: AppDispatch = useDispatch()\n  const uid = React.useContext(ExperimentUidContext)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = () => {\n    dispatch(importExperimentByUid(uid))\n      .unwrap()\n      .then(() =>\n        enqueueSnackbar('Successfully imported.', { variant: 'success' }),\n      )\n  }\n  return (\n    <IconButton onClick={onClick}>\n      <ReplyIcon />\n    </IconButton>\n  )\n})\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\nimport Alert from '@mui/material/Alert'\nimport AlertTitle from '@mui/material/AlertTitle'\nimport IconButton from '@mui/material/IconButton'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport ReplayIcon from '@mui/icons-material/Replay'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport {\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  TableSortLabel,\n} from '@mui/material'\n\nimport { CollapsibleTable } from './CollapsibleTable'\nimport {\n  selectExperimentsSatusIsUninitialized,\n  selectExperimentsSatusIsFulfilled,\n  selectExperimentTimeStamp,\n  selectExperimentName,\n  selectExperimentStatus,\n  selectExperimentsSatusIsError,\n  selectExperimentsErrorMessage,\n  selectExperimentList,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport {\n  deleteExperimentByList,\n  getExperiments,\n} from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { Experiment } from 'store/slice/Experiments/ExperimentsType'\nimport { DeleteButton } from './Button/DeleteButton'\nimport {\n  NWBDownloadButton,\n  ConfigDownloadButton,\n} from './Button/DownloadButton'\nimport { ImportButton } from './Button/ImportButton'\n\nexport const ExperimentUidContext = React.createContext<string>('')\n\nexport const ExperimentTable: React.FC = () => {\n  const isUninitialized = useSelector(selectExperimentsSatusIsUninitialized)\n  const isFulfilled = useSelector(selectExperimentsSatusIsFulfilled)\n  const isError = useSelector(selectExperimentsSatusIsError)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (isUninitialized) {\n      dispatch(getExperiments())\n    }\n  }, [dispatch, isUninitialized])\n  if (isFulfilled) {\n    return <TableImple />\n  } else if (isError) {\n    return <ExperimentsErrorView />\n  } else {\n    return null\n  }\n}\n\nconst ExperimentsErrorView: React.FC = () => {\n  const message = useSelector(selectExperimentsErrorMessage)\n  return (\n    <Alert severity=\"error\">\n      <AlertTitle>failed to get experiments...</AlertTitle>\n      {message}\n    </Alert>\n  )\n}\n\nconst TableImple = React.memo(() => {\n  const experimentList = useSelector(selectExperimentList)\n  const dispatch = useDispatch()\n  const onClickReload = () => {\n    dispatch(getExperiments())\n  }\n  const [order, setOrder] = React.useState<Order>('asc')\n  const [sortTarget, setSortTarget] =\n    React.useState<keyof Experiment>('timestamp')\n  const sortHandler =\n    (property: keyof Experiment) => (event: React.MouseEvent<unknown>) => {\n      const isAsc = sortTarget === property && order === 'asc'\n      setOrder(isAsc ? 'desc' : 'asc')\n      setSortTarget(property)\n    }\n\n  const [checkedList, setCheckedList] = useState<string[]>([])\n  const [open, setOpen] = React.useState(false)\n\n  const onCheckBoxClick = (uid: string) => {\n    if (checkedList.includes(uid)) {\n      setCheckedList(checkedList.filter((v) => v !== uid))\n    } else {\n      setCheckedList([...checkedList, uid])\n    }\n  }\n  const onClickDelete = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    dispatch(deleteExperimentByList(checkedList))\n    setCheckedList([])\n    setOpen(false)\n  }\n\n  return (\n    <Box>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        <Button\n          sx={{\n            marginBottom: (theme) => theme.spacing(1),\n          }}\n          variant=\"outlined\"\n          endIcon={<ReplayIcon />}\n          onClick={onClickReload}\n        >\n          Reload\n        </Button>\n        <Button\n          sx={{\n            marginBottom: (theme) => theme.spacing(1),\n          }}\n          variant=\"outlined\"\n          color=\"error\"\n          endIcon={<DeleteIcon />}\n          onClick={onClickDelete}\n          disabled={checkedList.length === 0}\n        >\n          Delete\n        </Button>\n      </Box>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <TableContainer component={Paper} elevation={0} variant=\"outlined\">\n        <Table aria-label=\"collapsible table\">\n          <HeadItem order={order} sortHandler={sortHandler} />\n          <TableBody>\n            {Object.values(experimentList)\n              .sort(getComparator(order, sortTarget))\n              .map((expData) => (\n                <ExperimentUidContext.Provider\n                  value={expData.uid}\n                  key={expData.uid}\n                >\n                  <RowItem onCheckBoxClick={onCheckBoxClick} />\n                </ExperimentUidContext.Provider>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  )\n})\n\nconst HeadItem = React.memo<{\n  order: Order\n  sortHandler: any\n}>(({ order, sortHandler }) => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell />\n        <TableCell />\n        <TableCell>\n          <TableSortLabel\n            active\n            direction={order}\n            onClick={sortHandler('timestamp')}\n          >\n            Timestamp\n          </TableSortLabel>\n        </TableCell>\n        <TableCell>\n          <TableSortLabel active direction={order} onClick={sortHandler('uid')}>\n            ID\n          </TableSortLabel>\n        </TableCell>\n        <TableCell>\n          <TableSortLabel\n            active\n            direction={order}\n            onClick={sortHandler('name')}\n          >\n            Name\n          </TableSortLabel>\n        </TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>Reproduce</TableCell>\n        <TableCell>workflow</TableCell>\n        <TableCell>NWB</TableCell>\n        <TableCell>Delete</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst RowItem = React.memo<{\n  onCheckBoxClick: (uid: string) => void\n}>(({ onCheckBoxClick }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const timestamp = useSelector(selectExperimentTimeStamp(uid))\n  const status = useSelector(selectExperimentStatus(uid))\n  const name = useSelector(selectExperimentName(uid))\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      <TableRow\n        sx={{\n          '& > *': {\n            borderBottom: 'unset',\n          },\n          [`& .${tableCellClasses.root}`]: {\n            borderBottomWidth: 0,\n          },\n        }}\n      >\n        <TableCell>\n          <Checkbox onChange={() => onCheckBoxClick(uid)} />\n        </TableCell>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {timestamp}\n        </TableCell>\n        <TableCell>{uid}</TableCell>\n        <TableCell>{name}</TableCell>\n        <TableCell>\n          <ExperimentStatusIcon status={status} />\n        </TableCell>\n        <TableCell>\n          <ImportButton />\n        </TableCell>\n        <TableCell>\n          <ConfigDownloadButton />\n        </TableCell>\n        <TableCell>\n          <NWBDownloadButton name={uid} />\n        </TableCell>\n        <TableCell>\n          <DeleteButton />\n        </TableCell>\n      </TableRow>\n      <CollapsibleTable open={open} />\n    </React.Fragment>\n  )\n})\n\ntype Order = 'asc' | 'desc'\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string },\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n","import React from 'react'\nimport { default as MuiToolbar } from '@mui/material/Toolbar'\nimport { ExperimentTable } from './ExperimentTable'\n\nconst Experiment = React.memo(() => {\n  return (\n    <div style={{ display: 'flex' }}>\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1,\n          height: '100vh',\n          padding: 16,\n        }}\n      >\n        <MuiToolbar />\n        <ExperimentTable />\n      </main>\n    </div>\n  )\n})\n\nexport default Experiment\n","import { Node } from 'react-flow-renderer'\n\nimport {\n  AlgorithmNodePostData,\n  InputNodePostData,\n  NodePostDataType,\n  RunPostData,\n} from 'api/run/Run'\n\nimport { RootState } from 'store/store'\n\nimport {\n  selectAlgorithmFunctionPath,\n  selectAlgorithmIsUpdated,\n  selectAlgorithmName,\n  selectAlgorithmParams,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectEdgeListForRun,\n  selectFlowElements,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  isAlgorithmNodeData,\n  isNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport { selectNwbParams } from 'store/slice/NWB/NWBSelectors'\nimport { selectPipelineNodeResultStatus } from 'store/slice/Pipeline/PipelineSelectors'\nimport { NODE_RESULT_STATUS } from 'store/slice/Pipeline/PipelineType'\nimport { selectSnakemakeParams } from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { NODE_TYPE_SET } from 'store/slice/FlowElement/FlowElementType'\nimport {\n  selectInputNodeFileType,\n  selectInputNodeHDF5Path,\n  selectInputNodeParam,\n  selectInputNodeSelectedFilePath,\n} from 'store/slice/InputNode/InputNodeSelectors'\n\nexport const selectRunPostData = (state: RootState) => {\n  const nwbParam = selectNwbParams(state)\n  const snakemakeParam = selectSnakemakeParams(state)\n  const edgeListForRun = selectEdgeListForRun(state)\n  const nodePostDataList = selectNodePostDataListForRun(state)\n  const forceRunList = selectForceRunList(state)\n  const runPostData: Omit<RunPostData, 'name'> = {\n    nwbParam,\n    snakemakeParam,\n    edgeList: edgeListForRun,\n    nodeList: nodePostDataList,\n    forceRunList,\n  }\n  return runPostData\n}\n\n/**\n * 前回の結果で、エラーまたはParamに変更があるnodeのリストを返す\n */\nconst selectForceRunList = (state: RootState) => {\n  const elements = selectFlowElements(state)\n  return elements\n    .filter(isAlgorithmNodeData)\n    .filter((node) => {\n      const isUpdated = selectAlgorithmIsUpdated(node.id)(state)\n      const status = selectPipelineNodeResultStatus(node.id)(state)\n      return isUpdated || status === NODE_RESULT_STATUS.ERROR\n    })\n    .map((node) => ({\n      nodeId: node.id,\n      name: selectAlgorithmName(node.id)(state),\n    }))\n}\n\nconst selectNodePostDataListForRun = (\n  state: RootState,\n): Node<NodePostDataType>[] => {\n  const elements = selectFlowElements(state)\n  const nodeList = elements.filter(isNodeData).map((node) => {\n    if (isAlgorithmNodeData(node)) {\n      const param = selectAlgorithmParams(node.id)(state) ?? {}\n      const functionPath = selectAlgorithmFunctionPath(node.id)(state)\n      const algorithmNodePostData: Node<AlgorithmNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.ALGORITHM,\n          path: functionPath,\n          param,\n        },\n      }\n      return algorithmNodePostData\n    } else {\n      const filePath = selectInputNodeSelectedFilePath(node.id)(state)\n      const fileType = selectInputNodeFileType(node.id)(state)\n      const param = selectInputNodeParam(node.id)(state)\n      const hdf5Path = selectInputNodeHDF5Path(node.id)(state)\n      const inputNodePosyData: Node<InputNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.INPUT,\n          path: filePath ?? '',\n          param,\n          hdf5Path: hdf5Path,\n          fileType,\n        },\n      }\n      return inputNodePosyData\n    }\n  })\n  return nodeList\n}\n","export default __webpack_public_path__ + \"static/media/optinist.e44efe32.png\";","import React from 'react'\nimport AppBar from '@mui/material/AppBar'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Typography from '@mui/material/Typography'\nimport Toolbar from '@mui/material/Toolbar'\nimport { styled } from '@mui/material/styles'\nimport FlowChart from './FlowChart/FlowChart'\nimport Visualize from './Visualize/Visualize'\nimport Experiment from './Experiment/Experiment'\nimport { useRunPipeline } from 'store/slice/Pipeline/PipelineHook'\nimport optinistLogo from './optinist.png'\n\nconst Layout: React.FC = () => {\n  const [value, setValue] = React.useState(0)\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue)\n  }\n\n  const runPipeline = useRunPipeline() // タブ切り替えによって結果取得処理が止まってしまうのを回避するため、タブの親レイヤーで呼び出している\n\n  return (\n    <RootDiv>\n      <StyledAppBar position=\"fixed\" color=\"inherit\">\n        <Toolbar variant=\"dense\">\n          <img src={optinistLogo} alt=\"optinist\" width={85} height={50} />\n          <Tabs\n            sx={{ width: '100%' }}\n            value={value}\n            onChange={handleChange}\n            centered\n            textColor=\"primary\"\n          >\n            <Tab label=\"Workflow\" {...a11yProps(0)} />\n            <Tab label=\"Visualize\" {...a11yProps(1)} />\n            <Tab label=\"Record\" {...a11yProps(2)} />\n          </Tabs>\n        </Toolbar>\n      </StyledAppBar>\n      <TabPanel value={value} index={0}>\n        <FlowChart {...runPipeline} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Visualize />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Experiment />\n      </TabPanel>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  backgroundColor: theme.palette.background.paper,\n}))\n\nconst StyledAppBar = styled(AppBar)(({ theme }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  backgroundColor: '#C3EBE1',\n}))\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: any\n  value: any\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Typography>{children}</Typography>}\n    </div>\n  )\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { selectRunPostData } from 'store/selectors/run/RunSelectors'\nimport {\n  selectPipelineIsCanceled,\n  selectPipelineIsStartedSuccess,\n  selectPipelineLatestUid,\n  selectPipelineStatus,\n} from './PipelineSelectors'\nimport { run, pollRunResult, runByCurrentUid } from './PipelineActions'\nimport { cancelPipeline } from './PipelineSlice'\nimport { selectFilePathIsUndefined } from '../InputNode/InputNodeSelectors'\nimport { useSnackbar } from 'notistack'\nimport { RUN_STATUS } from './PipelineType'\n\nconst POLLING_INTERVAL = 5000\n\nexport type UseRunPipelineReturnType = ReturnType<typeof useRunPipeline>\n\nexport function useRunPipeline() {\n  const dispatch = useDispatch()\n  const uid = useSelector(selectPipelineLatestUid)\n  const isCanceled = useSelector(selectPipelineIsCanceled)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n  const filePathIsUndefined = useSelector(selectFilePathIsUndefined)\n  const runPostData = useSelector(selectRunPostData)\n  const handleRunPipeline = React.useCallback(\n    (name: string) => {\n      dispatch(run({ runPostData: { name, ...runPostData, forceRunList: [] } }))\n    },\n    [dispatch, runPostData],\n  )\n  const handleRunPipelineByUid = React.useCallback(() => {\n    dispatch(runByCurrentUid({ runPostData }))\n  }, [dispatch, runPostData])\n  const handleCancelPipeline = React.useCallback(() => {\n    if (uid != null) {\n      dispatch(cancelPipeline())\n    }\n  }, [dispatch, uid])\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isStartedSuccess && !isCanceled && uid != null) {\n        dispatch(pollRunResult({ uid: uid }))\n      }\n    }, POLLING_INTERVAL)\n    return () => {\n      clearInterval(intervalId)\n    }\n  }, [dispatch, uid, isCanceled, isStartedSuccess])\n  const status = useSelector(selectPipelineStatus)\n  const { enqueueSnackbar } = useSnackbar()\n  // タブ移動による再レンダリングするたびにスナックバーが実行されてしまう挙動を回避するために前回の値を保持\n  const [prevStatus, setPrevStatus] = React.useState(status)\n  React.useEffect(() => {\n    if (prevStatus !== status) {\n      if (status === RUN_STATUS.FINISHED) {\n        enqueueSnackbar('Finished', { variant: 'success' })\n      } else if (status === RUN_STATUS.ABORTED) {\n        enqueueSnackbar('Aborted', { variant: 'error' })\n      } else if (status === RUN_STATUS.CANCELED) {\n        enqueueSnackbar('Canceled', { variant: 'info' })\n      }\n      setPrevStatus(status)\n    }\n  }, [status, prevStatus, enqueueSnackbar])\n  return {\n    filePathIsUndefined,\n    uid,\n    status,\n    isStartedSuccess,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n    handleCancelPipeline,\n  }\n}\n","import React from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport Close from '@mui/icons-material/Close'\nimport { SnackbarProvider, SnackbarKey, useSnackbar } from 'notistack'\n\nimport AppLayout from './components/Layout'\n\nconst App: React.FC = () => {\n  return (\n    <SnackbarProvider\n      maxSnack={5}\n      action={(snackbarKey) => (\n        <SnackbarCloseButton snackbarKey={snackbarKey} />\n      )}\n    >\n      <AppLayout />\n    </SnackbarProvider>\n  )\n}\n\nconst SnackbarCloseButton: React.FC<{ snackbarKey: SnackbarKey }> = ({\n  snackbarKey,\n}) => {\n  const { closeSnackbar } = useSnackbar()\n  return (\n    <IconButton onClick={() => closeSnackbar(snackbarKey)} size=\"large\">\n      <Close style={{ color: 'white' }} />\n    </IconButton>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  ALGORITHM_LIST_SLICE_NAME,\n  AlgorithmListType,\n} from './AlgorithmListType'\nimport { getAlgoList } from './AlgorithmListActions'\nimport { convertToAlgoListType } from './AlgorithmListUtils'\n\nexport const initialState: AlgorithmListType = {\n  isLatest: false,\n  tree: {},\n}\n\nexport const algorithmListSlice = createSlice({\n  name: ALGORITHM_LIST_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlgoList.fulfilled, (state, action) => {\n      state.tree = convertToAlgoListType(action.payload)\n      state.isLatest = true\n    })\n  },\n})\n\nexport default algorithmListSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n  DisplayData,\n  DISPLAY_DATA_SLICE_NAME,\n} from './DisplayDataType'\nimport {\n  getCsvData,\n  getHeatMapData,\n  getImageData,\n  getTimeSeriesDataById,\n  getTimeSeriesAllData,\n  getRoiData,\n  getScatterData,\n  getBarData,\n  getHTMLData,\n  getTimeSeriesInitData,\n} from './DisplayDataActions'\nimport {\n  deleteDisplayItem,\n  setNewDisplayDataPath,\n} from '../VisualizeItem/VisualizeItemActions'\n\nconst initialState: DisplayData = {\n  timeSeries: {},\n  heatMap: {},\n  image: {},\n  csv: {},\n  roi: {},\n  scatter: {},\n  bar: {},\n  html: {},\n}\n\nexport const displayDataSlice = createSlice({\n  name: DISPLAY_DATA_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        if (action.payload.deleteData) {\n          const { filePath, dataType } = action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        if (action.payload.deleteData) {\n          const { prevDataType: dataType, prevFilePath: filePath } =\n            action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(getTimeSeriesDataById.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesDataById.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesDataById.fulfilled, (state, action) => {\n        const { path, index } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].data[index] = action.payload.data[index]\n        if (action.payload.std[index] !== undefined) {\n          state.timeSeries[path].std[index] = action.payload.std[index]\n        }\n      })\n      .addCase(getTimeSeriesAllData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesAllData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesAllData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        if (action.payload.std !== undefined) {\n          state.timeSeries[path].std = action.payload.std\n        }\n      })\n      .addCase(getTimeSeriesInitData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesInitData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesInitData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        state.timeSeries[path].std = action.payload.std\n      })\n      .addCase(getHeatMapData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getImageData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getImageData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getCsvData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getRoiData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getRoiData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        const { data } = action.payload\n\n        // 計算\n        const roi1Ddata: number[] = data[0]\n          .map((row) =>\n            Array.from(new Set(row.filter((value) => value != null))),\n          )\n          .flat()\n        const roiUniqueIdList = Array.from(new Set(roi1Ddata))\n          .sort((n1, n2) => n1 - n2)\n          .map(String)\n\n        state.roi[path] = {\n          type: 'roi',\n          data: data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n          roiUniqueList: roiUniqueIdList,\n        }\n      })\n      .addCase(getRoiData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getScatterData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getBarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getBarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHTMLData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n  },\n})\n\nfunction deleteDisplayDataFn(\n  state: DisplayData,\n  filePath: string,\n  dataType: DATA_TYPE,\n) {\n  if (dataType === DATA_TYPE_SET.IMAGE) {\n    delete state.image[filePath]\n  } else if (dataType === DATA_TYPE_SET.TIME_SERIES) {\n    delete state.timeSeries[filePath]\n  } else if (dataType === DATA_TYPE_SET.CSV) {\n    delete state.csv[filePath]\n  } else if (dataType === DATA_TYPE_SET.HEAT_MAP) {\n    delete state.heatMap[filePath]\n    // } else if (dataType === DATA_TYPE_SET.ROI) {\n    //   delete state.roi[filePath]\n  } else if (dataType === DATA_TYPE_SET.SCATTER) {\n    delete state.scatter[filePath]\n  } else if (dataType === DATA_TYPE_SET.BAR) {\n    delete state.bar[filePath]\n  } else if (dataType === DATA_TYPE_SET.HTML) {\n    delete state.html[filePath]\n  }\n}\n\nexport default displayDataSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { FileUploader, FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\nimport { setUploadProgress, uploadFile } from './FileUploaderActions'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nconst initialState: FileUploader = {}\n\nexport const fileUploaderSlice = createSlice({\n  name: FILE_UPLOADER_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFileUploaderStateById(state, action: PayloadAction<string>) {\n      state[action.payload] = inistialUploaderState\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(setUploadProgress, (state, action) => {\n        const { progess, requestId } = action.payload\n        state[requestId].uploadingProgress = progess\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileName, requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          fileName,\n          isUninitialized: false,\n          pending: true,\n          fulfilled: false,\n          uploadingProgress: 0,\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { requestId } = action.meta.arg\n        const { resultPath } = action.payload\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          path: resultPath,\n          pending: false,\n          fulfilled: true,\n        }\n      })\n      .addCase(uploadFile.rejected, (state, action) => {\n        const { requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          pending: false,\n          fulfilled: false,\n          error: action.error.message,\n        }\n      })\n  },\n})\n\nexport const { setFileUploaderStateById } = fileUploaderSlice.actions\n\nexport default fileUploaderSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { uploadFile } from 'store/slice/FileUploader/FileUploaderActions'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { getFilesTree } from './FilesTreeAction'\nimport { FilesTree, FILES_TREE_SLICE_NAME } from './FilesTreeType'\nimport { convertToTreeNodeType } from './FilesTreeUtils'\n\nexport const initialState: FilesTree = {}\nexport const filesTreeSlice = createSlice({\n  name: FILES_TREE_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getFilesTree.pending, (state, action) => {\n        const fileType = action.meta.arg\n        state[fileType] = {\n          isLoading: true,\n          isLatest: false,\n          tree: [],\n        }\n      })\n      .addCase(getFilesTree.fulfilled, (state, action) => {\n        const fileTreeType = action.meta.arg\n        state[fileTreeType].tree = convertToTreeNodeType(action.payload)\n        state[fileTreeType].isLatest = true\n        state[fileTreeType].isLoading = false\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          if (state[FILE_TREE_TYPE_SET.IMAGE] != null) {\n            state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.IMAGE] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          if (state[FILE_TREE_TYPE_SET.CSV] != null) {\n            state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.CSV] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          if (state[FILE_TREE_TYPE_SET.HDF5] != null) {\n            state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.HDF5] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else {\n          if (state[FILE_TREE_TYPE_SET.ALL] != null) {\n            state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.ALL] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n        } else {\n          state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n        }\n      })\n  },\n})\n\nexport default filesTreeSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as MuiColors from '@mui/material/colors'\n\nexport type HandleTypeColor = {\n  colorMap: { [type: string]: string }\n  /**\n   * HANDLE_COLOR_PRESET_MAPのkey\n   */\n  nextKey: number\n}\n\nconst initialState: HandleTypeColor = {\n  colorMap: {\n    ImageData: MuiColors.red[500],\n    IscellData: MuiColors.indigo[500],\n    TimeSeriesData: MuiColors.yellow[500],\n    Suite2pData: MuiColors.green[500],\n    FluoData: MuiColors.orange[500],\n    BehaviorData: MuiColors.yellow[500],\n  },\n  nextKey: 0,\n}\n\nconst SLICE_NAME = 'handleTypeColor'\n\nexport const handleTypeColorSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {},\n})\n\nexport default handleTypeColorSlice.reducer\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\nimport { HDF5TreeNodeType } from './HDF5Type'\n\nexport function convertToTreeNodeType(dto: HDF5TreeDTO[]): HDF5TreeNodeType[] {\n  return dto.map((node) =>\n    node.isDir\n      ? {\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n          path: node.path,\n        }\n      : {\n          name: node.name,\n          isDir: false,\n          shape: node.shape,\n          path: node.path,\n          nbytes: node.nbytes,\n        },\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { getHDF5Tree } from './HDF5Action'\nimport { HDF5Tree, HDF5_SLICE_NAME } from './HDF5Type'\nimport { convertToTreeNodeType } from './HDF5Utils'\n\nconst initialState: HDF5Tree = {\n  isLoading: false,\n  tree: [],\n}\nexport const HDF5Slice = createSlice({\n  name: HDF5_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHDF5Tree.pending, (state, action) => {\n        state = {\n          isLoading: true,\n          tree: [],\n        }\n      })\n      .addCase(getHDF5Tree.fulfilled, (state, action) => {\n        state.tree = convertToTreeNodeType(action.payload)\n        state.isLoading = false\n      })\n  },\n})\n\nexport default HDF5Slice.reducer\n","import type { ExperimentDTO, ExperimentsDTO } from 'api/experiments/Experiments'\nimport type {\n  ExperimentListType,\n  ExperimentType,\n  ExperimentFunction,\n  EXPERIMENTS_STATUS,\n} from './ExperimentsType'\n\nexport function convertToExperimentListType(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n\nexport function convertToExperimentType(dto: ExperimentDTO): ExperimentType {\n  const functions: { [nodeId: string]: ExperimentFunction } = {}\n  Object.entries(dto.function).forEach(([_, value]) => {\n    functions[value.unique_id] = {\n      name: value.name,\n      nodeId: value.unique_id,\n      postion: value.position,\n      status: convertToExperimentStatus(value.success),\n    }\n  })\n  return {\n    uid: dto.unique_id,\n    timestamp: dto.timestamp,\n    name: dto.name,\n    functions,\n  }\n}\n\nfunction convertToExperimentStatus(dto: string): EXPERIMENTS_STATUS {\n  switch (dto) {\n    case 'running':\n      return 'running'\n    case 'success':\n      return 'success'\n    case 'error':\n      return 'error'\n    default:\n      throw new Error('failed to convert to EXPERIMENTS_STATUS')\n  }\n}\n\nexport function convertToFlowChartList(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { EXPERIMENTS_SLICE_NAME, Experiments } from './ExperimentsType'\nimport {\n  getExperiments,\n  deleteExperimentByUid,\n  deleteExperimentByList,\n} from './ExperimentsActions'\nimport { convertToExperimentListType } from './ExperimentsUtils'\nimport {\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from '../Pipeline/PipelineActions'\n\nexport const initialState: Experiments = {\n  status: 'uninitialized',\n}\n\nexport const experimentsSlice = createSlice({\n  name: EXPERIMENTS_SLICE_NAME,\n  initialState: initialState as Experiments,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getExperiments.pending, () => {\n        return {\n          status: 'pending',\n        }\n      })\n      .addCase(getExperiments.fulfilled, (state, action) => {\n        const experimentList = convertToExperimentListType(action.payload)\n        return {\n          status: 'fulfilled',\n          experimentList,\n        }\n      })\n      .addCase(getExperiments.rejected, (state, action) => {\n        return {\n          status: 'error',\n          message: action.error.message,\n        }\n      })\n      .addCase(deleteExperimentByUid.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          delete state.experimentList[action.meta.arg]\n        }\n      })\n      .addCase(deleteExperimentByList.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          action.meta.arg.map((v) => delete state.experimentList[v])\n        }\n      })\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          const uid = action.meta.arg.uid\n          const target = state.experimentList[uid]\n          Object.entries(action.payload).forEach(([nodeId, value]) => {\n            if (value.status === 'success') {\n              target.functions[nodeId].status = 'success'\n            } else if (value.status === 'error') {\n              target.functions[nodeId].status = 'error'\n            }\n          })\n        }\n      })\n      .addMatcher(isAnyOf(run.fulfilled, runByCurrentUid.fulfilled), () => {\n        return {\n          status: 'uninitialized',\n        }\n      })\n  },\n})\n\nexport default experimentsSlice.reducer\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit'\nimport {\n  algorithmListReducer,\n  algorithmNodeReducer,\n  displayDataReducer,\n  fileUploaderReducer,\n  flowElementReducer,\n  inputNodeReducer,\n  nwbReducer,\n  filesTreeReducer,\n  handleTypeColorReducer,\n  rightDrawerReducer,\n  visualaizeItemReducer,\n  snakemakeReducer,\n  pipelineReducer,\n  hdf5Reducer,\n  experimentsReducer,\n} from './slice'\n\nexport const rootReducer = combineReducers({\n  algorithmList: algorithmListReducer,\n  algorithmNode: algorithmNodeReducer,\n  displayData: displayDataReducer,\n  fileUploader: fileUploaderReducer,\n  flowElement: flowElementReducer,\n  inputNode: inputNodeReducer,\n  handleColor: handleTypeColorReducer,\n  filesTree: filesTreeReducer,\n  nwb: nwbReducer,\n  rightDrawer: rightDrawerReducer,\n  visualaizeItem: visualaizeItemReducer,\n  snakemake: snakemakeReducer,\n  pipeline: pipelineReducer,\n  hdf5: hdf5Reducer,\n  experiments: experimentsReducer,\n})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\nexport type ThunkApiConfig<T = unknown, PendingMeta = unknown> = {\n  state: RootState\n  dispatch: AppDispatch\n  rejectValue: T\n  penfingMeta: PendingMeta\n}\n","import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme({\n  components: {\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiSelect: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from 'store/store'\n\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './Theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}