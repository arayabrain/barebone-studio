{"version":3,"sources":["store/utils/param/ParamUtils.ts","store/slice/AlgorithmNode/AlgorithmNodeSelectors.ts","store/slice/AlgorithmList/AlgorithmListUtils.ts","store/slice/AlgorithmList/AlgorithmListSelectors.ts","store/slice/AlgorithmList/AlgorithmListType.ts","const/API.ts","store/slice/AlgorithmList/AlgorithmListActions.ts","store/slice/InputNode/InputNodeType.ts","store/slice/FlowElement/FlowElementType.ts","store/slice/FlowElement/FlowElementActions.ts","store/utils/nanoid/NanoIdUtils.ts","const/flowchart.ts","components/FlowChart/TreeView.tsx","api/experiments/Experiments.ts","store/slice/Experiments/ExperimentsType.ts","store/slice/Experiments/ExperimentsActions.ts","store/slice/InputNode/InputNodeActions.ts","store/slice/FlowElement/FlowElementUtils.ts","api/run/RunUtils.ts","store/slice/FileUploader/FileUploaderType.ts","store/slice/FileUploader/FileUploaderActions.ts","store/slice/FlowElement/FlowElementSlice.ts","store/slice/FlowElement/FlowElementSelectors.ts","store/slice/NWB/NWBAction.ts","store/slice/NWB/NWBType.ts","store/slice/NWB/NWBSlice.ts","store/slice/RightDrawer/RightDrawerSlice.ts","utils/EqualityUtils.ts","store/slice/NWB/NWBSelectors.ts","components/Accordion.tsx","components/ParamFormItemCreator.tsx","components/FlowChart/NWB.tsx","store/slice/Snakemake/SnakemakeType.ts","store/slice/Snakemake/SnakemakeAction.ts","store/slice/Snakemake/SnakemakeSlice.ts","store/slice/Snakemake/SnakemakeSelectors.ts","components/FlowChart/Snakemake.tsx","store/slice/Pipeline/PipelineType.ts","store/slice/DisplayData/DisplayDataType.ts","store/slice/DisplayData/DisplayDataUtils.ts","store/slice/Pipeline/PipelineUtils.ts","store/slice/Pipeline/PipelineSelectors.ts","api/run/Run.ts","store/slice/Pipeline/PipelineActions.ts","store/slice/Pipeline/PipelineSlice.ts","components/RunButtons.tsx","components/ToolBar.tsx","store/slice/InputNode/InputNodeUtils.ts","store/slice/InputNode/InputNodeSelectors.ts","components/FlowChart/FlowChartNode/HandleColorHook.ts","store/slice/HandleTypeColor/HandleTypeColorSelectors.ts","store/slice/FilesTree/FilesTreeSelectors.ts","store/slice/FilesTree/FilesTreeType.ts","store/slice/FilesTree/FilesTreeAction.ts","store/slice/FilesTree/FilesTreeUtils.ts","components/FileSelectDialog.tsx","components/FlowChart/FlowChartNode/LinerProgressWithLabel.tsx","store/slice/FileUploader/FileUploaderInitlalState.ts","store/slice/FileUploader/FileUploaderSelectors.ts","store/slice/FileUploader/FileUploaderHook.ts","components/FlowChart/FlowChartNode/FileSelect.tsx","components/FlowChart/FlowChartNode/FlowChartUtils.ts","components/FlowChart/FlowChartNode/ImageFileNode.tsx","store/slice/DisplayData/DisplayDataSelectors.ts","store/slice/VisualizeItem/VisualizeItemType.ts","store/slice/VisualizeItem/VisualizeItemUtils.ts","store/slice/VisualizeItem/VisualizeItemSelectors.ts","store/slice/DisplayData/DisplayDataActions.ts","store/slice/VisualizeItem/VisualizeItemActions.ts","store/slice/VisualizeItem/VisualizeItemSlice.ts","components/Visualize/DataContext.tsx","components/Visualize/Plot/HeatMapPlot.tsx","components/Visualize/Plot/ImagePlot.tsx","components/Visualize/Plot/RoiPlot.tsx","components/Visualize/Plot/ScatterPlot.tsx","components/Visualize/Plot/CsvPlot.tsx","components/Visualize/Plot/TimeSeriesPlot.tsx","components/Visualize/Plot/BarPlot.tsx","components/Visualize/Plot/HTMLPlot.tsx","components/Visualize/DisplayDataItem.tsx","components/FlowChart/FlowChartNode/AlgorithmOutputDialog.tsx","components/FlowChart/FlowChartNode/AlgorithmNode.tsx","store/slice/InputNode/InputNodeSlice.ts","components/FlowChart/FlowChartNode/CsvFileNode.tsx","store/slice/HDF5/HDF5Selectors.ts","store/slice/HDF5/HDF5Type.ts","store/slice/HDF5/HDF5Action.ts","components/FlowChart/FlowChartNode/HDF5FileNode.tsx","components/FlowChart/FlowChartNode/FluoFileNode.tsx","components/FlowChart/FlowChartNode/BehaviorFileNode.tsx","components/FlowChart/FlowChartNode/ReactFlowNodeTypesConst.ts","components/FlowChart/CustomEdge.tsx","components/FlowChart/ReactFlowComponent.tsx","store/slice/RightDrawer/RightDrawerSelectors.ts","store/slice/AlgorithmNode/AlgorithmNodeType.ts","store/slice/AlgorithmNode/AlgorithmNodeActions.ts","store/slice/AlgorithmNode/AlgorithmNodeSlice.ts","components/FlowChart/AlgorithmParamForm.tsx","components/FlowChart/RightDrawer.tsx","components/FlowChart/FlowChart.tsx","components/Visualize/VisualizeItemAddButton.tsx","components/Visualize/VisualizeItemLayoutMenuIcon.tsx","components/Visualize/FilePathSelect.tsx","components/Visualize/VisualizeItem.tsx","components/Visualize/FlexItemList.tsx","components/Visualize/Editor/GradientColorPicker.tsx","components/Visualize/Editor/ImageItemEditor.tsx","components/Visualize/Editor/CsvItemEditor.tsx","components/Visualize/Editor/HeatmapItemEditor.tsx","components/Visualize/Editor/TimeSeriesItemEditor.tsx","components/Visualize/Editor/RoiItemEditor.tsx","components/Visualize/Editor/ScatterItemEditor.tsx","components/Visualize/Editor/BarItemEditor.tsx","components/Visualize/VisualizeItemEditor.tsx","components/Visualize/Visualize.tsx","store/slice/Experiments/ExperimentsSelectors.ts","components/Experiment/ExperimentStatusIcon.tsx","components/Experiment/Button/DownloadButton.tsx","components/Experiment/CollapsibleTable.tsx","components/Experiment/Button/DeleteButton.tsx","components/Experiment/Button/ImportButton.tsx","components/Experiment/ExperimentTable.tsx","components/Experiment/Experiment.tsx","store/selectors/run/RunSelectors.ts","components/optinist.png","components/Layout.tsx","store/slice/Pipeline/PipelineHook.ts","App.tsx","reportWebVitals.ts","store/slice/AlgorithmList/AlgorithmListSlice.ts","store/slice/DisplayData/DisplayDataSlice.ts","store/slice/FileUploader/FileUploaderSlice.ts","store/slice/FilesTree/FilesTreeSlice.ts","store/slice/HandleTypeColor/HandleTypeColorSlice.ts","store/slice/HDF5/HDF5Utils.ts","store/slice/HDF5/HDF5Slice.ts","store/slice/Experiments/ExperimentsUtils.ts","store/slice/Experiments/ExperimentsSlice.ts","store/store.ts","Theme.ts","index.tsx"],"names":["getChildParam","path","ParamMap","result","Object","values","node","isParamChild","children","param","type","convertToParamMap","dto","keyList","entries","forEach","name","value","kList","Array","isArray","isDictObject","concat","join","push","selectAlgorithmNodeById","nodeId","state","algorithmNode","selectAlgorithmName","selectAlgorithmParams","params","isAlgoChild","algoNode","getAlgoChild","algoList","algoName","convertToAlgoListType","prototype","hasOwnProperty","call","functionPath","args","returns","selectAlgorithmList","algorithmList","selectAlgorithmListIsLated","isLatest","selectAlgorithmListTree","tree","ALGORITHM_LIST_SLICE_NAME","HOST","process","PORT","BASE_URL","getAlgoList","createAsyncThunk","_","thunkAPI","a","rejectWithValue","axios","get","response","data","INPUT_NODE_SLICE_NAME","FILE_TYPE_SET","FLOW_ELEMENT_SLICE_NAME","NODE_TYPE_SET","addAlgorithmNode","addInputNode","createAction","nanoid","customAlphabet","getNanoId","INITIAL_IMAGE_ELEMENT_ID","INITIAL_ALGO_STYLE","width","height","padding","borderRadius","INITIAL_DATA_STYLE","border","REACT_FLOW_NODE_TYPE_KEY","AlgorithmTreeView","React","memo","dispatch","useDispatch","useSelector","useEffect","TreeView","sx","flexGrow","defaultCollapseIcon","defaultExpandIcon","TreeItem","label","InputNodeComponent","fileName","nodeName","fileType","map","i","AlgoNodeComponent","onAlgoNodeClick","newNode","id","toFixed","LeafItem","AddButton","onClick","nodeType","reactFlowNodeType","onDataNodeClick","IconButton","style","size","Typography","variant","textOverflow","overflow","display","styled","treeItemClasses","iconContainer","margin","getExperimentsApi","deleteExperimentByUidApi","uid","delete","deleteExperimentByListApi","uidList","post","importExperimentByUidApi","EXPERIMENTS_SLICE_NAME","getExperiments","deleteExperimentByUid","deleteExperimentByList","importExperimentByUid","setInputNodeFilePath","isNodeData","isNode","isAlgorithmNodeData","getLabelByPath","filePath","length","getFileName","split","reverse","isInputNodePostData","isInputNodeData","isAlgorithmNodePostData","FILE_UPLOADER_SLICE_NAME","setUploadProgress","uploadFile","requestId","formData","config","getUploadConfig","percent","total","progess","resultPath","file_path","onUpdateProgressFn","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","initialFlowPosition","x","y","zoom","initialElementCoord","initialState","flowElements","position","flowPosition","elementCoord","flowElementSlice","createSlice","reducers","setFlowPosition","action","payload","setFlowElements","deleteFlowElements","removeElements","deleteFlowElementsById","element","find","edge","undefined","editFlowElementPositionById","coord","elementIdx","findIndex","ele","targetItem","extraReducers","builder","addCase","fulfilled","meta","arg","targetPosition","Position","Left","sourcePosition","Right","newPosition","updateElementCoord","targetNode","newNodeList","nodeList","edgeList","min","max","random","actions","selectFlowElements","flowElement","selectFlowPosition","selectNodeById","filter","selectNodeLabelById","getNWBParams","nwbSlice","updateParam","newValue","RIGHT_DRAWER_MODE","open","mode","currendNodeId","rightDrawerSlice","openRightDrawer","closeRightDrawer","toggleParamForm","toggleNwb","toggleSnakemake","elm","arrayEqualityFn","b","every","v","twoDimarrayEqualityFn","selectNwb","nwb","selectNwbParamsKeyList","keys","selectNwbParam","paramKey","selectNwbParamsValue","target","Error","Accordion","props","disableGutters","elevation","square","borderColor","theme","palette","divider","boxShadow","borderBottom","createParamFormItemComponent","paramSelector","paramValueSelector","paramUpdateActionCreator","useParamValueUpdate","ParamItemForString","updateParamAction","TextField","onChange","e","multiline","ParamItemForNumber","InputLabelProps","shrink","event","Number","ParamItemForBoolean","Switch","checked","ParamItemForValueType","ParamChildItem","Box","marginTop","spacing","marginBottom","alignItems","verticalAlign","ParamItem","AccordionSummary","expandIcon","AccordionDetails","NWBSettingButton","Button","endIcon","NWBSettingContents","paramKeyList","className","Component","SNAKEMAKE_SLICE_NAME","getSnakemakeParams","SnakemakeSlice","selectSnakemakeParams","snakemake","selectSnakemake","selectSnakemakeParamsKeyList","selectSnakemakeParam","selectSnakemakeParamsValue","SnakemakeButton","SnakemakeContents","PIPELINE_SLICE_NAME","RUN_STATUS","NODE_RESULT_STATUS","RUN_BTN_OPTIONS","RUN_NEW","RUN_ALREADY","RUN_BTN_LABELS","DISPLAY_DATA_SLICE_NAME","DATA_TYPE_SET","toDataType","isNodeResultPending","nodeResult","status","isNodeResultSuccess","isStartedPipeline","pipeline","getInitialRunResult","runPostData","initialResult","convertToOutputPath","selectPipelineLatestUid","currentPipeline","selectStartedPipeline","run","selectPipelineRunBtn","runBtn","selectRunResultPendingNodeIdList","runResult","isNodeResultPendingAndNodeId","selectPipelineStatus","selectPipelineIsCanceled","selectPipelineIsStartedSuccess","isNodeResultSuccessAndNodeId","selectPipelineNodeResultStatus","includes","selectPipelineNodeResultOutputPaths","outputPaths","runApi","runByUidApi","pendingNodeIdList","responseData","runByCurrentUid","currentUid","getState","pollRunResult","pipelineSlice","cancelPipeline","setRunBtnOption","runBtnOption","nodeResultDto","outputPath","message","convertToRunResult","rejected","addMatcher","isAnyOf","pending","RunButtons","isStartedSuccess","filePathIsUndefined","handleCancelPipeline","handleRunPipeline","handleRunPipelineByUid","useState","dialogOpen","setDialogOpen","enqueueSnackbar","useSnackbar","menuOpen","setMenuOpen","anchorRef","useRef","handleClose","current","contains","uidExists","ButtonGroup","ref","disabled","prevOpen","Popper","anchorEl","role","transition","disablePortal","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","option","MenuItem","selected","handleMenuItemClick","marginRight","RunDialog","handleRun","setName","error","setError","Dialog","onClose","DialogTitle","DialogContent","autoFocus","fullWidth","helperText","DialogActions","color","ToolBar","float","textAlign","top","right","zIndex","textTransform","isCsvInputNode","inputNode","isHDF5InputNode","selectInputNodeById","selectInputNodeDefined","selectCsvInputNodeSelectedFilePath","selectedFilePath","selectImageInputNodeSelectedFilePath","selectHDF5InputNodeSelectedFilePath","selectFilePathIsUndefined","selectCsvInputNodeParam","selectInputNodeHDF5Path","item","hdf5Path","useHandleColor","key","handleColor","colorMap","selectFilesTree","filesTree","FILES_TREE_SLICE_NAME","FILE_TREE_TYPE_SET","getFilesTree","file_type","convertToTreeNodeType","isdir","isDir","nodes","getNodeByPath","FileSelectDialog","initialFilePath","onClickCancel","onClickOk","title","multiSelect","setSelectedFilePath","useTheme","dividers","FileTreeView","FilePathSelectedListView","selectFilesTreeNodes","selectFilesIsLatest","isLoading","selectFilesIsLoading","useFileTree","onCheckFile","selectedPath","onCheckDir","childrenFilePathList","from","Set","LinearProgress","disableSelection","onNodeSelect","nodeIds","isDirNodeByPath","TreeNode","allChecked","allNotChecked","indeterminate","icon","htmlColor","TreeItemLabel","checkboxProps","stopPropagation","childNode","fontSize","Checkbox","disableRipple","text","LinearProgressWithLabel","mr","minWidth","inistialUploaderState","isUninitialized","uploadingProgress","selectFileUploader","fileUploader","useFileUploader","onUploadFile","useCallback","uninitialized","selectFileUploadIsUninitialized","selectUploadFilePath","selectFileUploadIsPending","selectFileUploadIsFulfilled","progress","selectFileUploadProgress","selectFileUploadError","FileSelect","onChangeFilePath","marginLeft","FileSelectImple","onSelectFile","fileTreeType","selectButtonLabel","uploadButtonLabel","inputRef","setOpen","accept","getFileInputAccept","click","preventDefault","files","file","FormData","append","visibility","toHandleId","getHandleType","handleId","isValidConnection","connection","sourceHandle","targetHandle","sourceHandleStyle","ImageFileNode","ImageFileNodeImple","elementSelected","returnType","imageColor","background","alpha","primary","light","selectDisplayData","displayData","selectTimeSeriesDataIsInitialized","timeSeries","selectHeatMapDataIsInitialized","heatMap","selectImageData","image","selectImageDataIsInitialized","selectImageDataIsPending","selectCsvDataIsInitialized","csv","selectCsvDataError","selectCsvDataIsPending","selectCsvDataIsFulfilled","selectRoiData","roi","selectRoiDataIsInitialized","selectRoiDataIsFulfilled","selectScatterDataIsInitialized","scatter","selectBarDataIsInitialized","bar","selectHTMLDataIsInitialized","html","VISUALIZE_ITEM_SLICE_NAME","VISUALIZE_ITEM_TYPE_SET","isDisplayDataItem","itemType","isImageItem","dataType","isTimeSeriesItem","isCsvItem","isHeatMapItem","isScatterItem","selectSelectedVisualizeItemId","visualaizeItem","selectedItemId","selectVisualizeImageItemIdList","items","itemId","selectVisualizeItems","isWorkflowDialog","selectVisualizeItemLayout","layout","selectVisualizeItemWidth","selectVisualizeItemHeight","selectVisualizeDataType","selectVisualizeDataNodeId","selectVisualizeDataFilePath","selectImageItemFilePath","selectRoiItemFilePath","roiItem","selectImageItemShowticklabels","showticklabels","selectImageItemZsmooth","zsmooth","selectImageItemStartIndex","startIndex","selectImageItemEndIndex","endIndex","selectImageItemShowLine","showline","selectImageItemShowGrid","showgrid","selectImageItemShowScale","showscale","selectImageItemColors","colors","selectImageItemAlpha","selectImageItemRoiAlpha","roiAlpha","selectImageItemSaveFilename","saveFileName","selectImageItemSaveFormat","saveFormat","selectTimeSeriesItemOffset","offset","selectTimeSeriesItemSpan","span","selectTimeSeriesItemShowGrid","selectTimeSeriesItemShowLine","selectTimeSeriesItemShowTickLabels","selectTimeSeriesItemZeroLine","zeroline","selectTimeSeriesItemXrange","xrange","selectTimeSeriesItemDrawOrderList","drawOrderList","selectTimeSeriesItemRefRoiUniqueList","refImageItemId","imageItem","roiUniqueList","selectTimeSeriesItemDrawIndexMap","drawIndexMap","selectTimeSeriesItemKeys","selectRoiItemMaxNumber","roiFilePath","roiData","arr","selectHeatMapItemShowScale","selectHeatMapItemColors","selectCsvItemTranspose","transpose","selectCsvItemSetHeader","setHeader","selectCsvItemSetIndex","setIndex","selectScatterItemXIndex","xIndex","selectScatterItemYIndex","yIndex","selectDisplayDataIsSingle","targetFilePath","getTimeSeriesInitData","getTimeSeriesDataById","index","getTimeSeriesAllData","getHeatMapData","getImageData","start_index","end_index","getCsvData","getRoiData","getScatterData","getBarData","getHTMLData","setImageItemClikedDataId","clickedDataId","selectingImageArea","range","x1","x2","y1","y2","selectedZList","z","zNum","String","selectedZ","deleteDisplayItem","setNewDisplayDataPath","displayDataCommonInitialValue","imageItemInitialValue","rgb","activeIndex","duration","timeSeriesItemInitialValue","left","maxIndex","heatMapItemInitialValue","csvItemInitialValue","roiItemInitialValue","scatterItemInitialValue","barItemInitialValue","hdf5ItemInitialValue","htmlItemInitialValue","fluoItemInitialValue","behaviorItemInitialValue","getDisplayDataItemInitialValue","visualaizeItemSlice","pushInitialItemToNewRow","newItemId","addInitialItemFn","insertInitialItemToNextColumn","targetItemId","targetRowIndex","row","targetColumnIndex","indexOf","splice","addItemForWorkflowDialog","getMaxItemId","deleteAllItemForWorkflowDialog","setItemSize","selectItem","setRoiItemFilePath","fromEntries","setFilePath","setImageItemFilePath","setTimeSeriesItemFilePath","setHeatMapItemFilePath","resetImageActiveIndex","resetImageActiveIndexFn","incrementImageActiveIndex","decrementImageActiveIndex","setImageActiveIndex","setImageItemShowticklabels","setImageItemZsmooth","setImageItemShowLine","setImageItemShowGrid","setImageItemShowScale","setImageItemColors","setImageItemStartIndex","setImageItemEndIndex","setImageItemAlpha","setImageItemRoiAlpha","setImageItemDuration","setImageItemSaveFormat","setImageItemSaveFileName","setTimeSeriesItemOffset","setTimeSeriesItemSpan","setTimeSeriesItemShowGrid","setTimeSeriesItemShowLine","setTimeSeriesItemShowTickLabels","setTimeSeriesItemZeroLine","setTimeSeriesItemXrangeLeft","setTimeSeriesItemXrangeRight","setTimeSeriesItemDrawOrderList","setTimeSeriesItemDrawIndexMap","setTimeSeriesItemMaxIndex","setTimeSeriesRefImageItemId","setHeatMapItemShowScale","setHeatMapItemColors","setCsvItemTranspose","setCsvItemSetHeader","setCsvItemSetIndex","setScatterItemXIndex","setScatterItemYIndex","imageItemId","correctZList","idList","reduce","nextId","DisplayDataContext","createContext","NaN","HeatMapPlot","useContext","isPending","isInitialized","selectHeatMapDataError","isFulfilled","selectHeatMapDataIsFulfilled","HeatMapImple","heatMapData","heatMapDataEqualtyFn","colorscale","useMemo","parseFloat","offsets","hoverongaps","showlegend","dragmode","t","l","autosize","displayModeBar","responsive","ImagePlot","selectImageDataError","ImagePlotImple","selectImageItemActiveIndex","ImagePlotChart","imageData","selectActiveImageData","imageDataEqualtyFn","timeDataMaxIndex","maxIdx","selectRoiItemIndex","colorscaleRoi","createColormap","colormap","nshades","format","rgba2hex","replace","hovertemplate","new_i","floor","zmin","zmax","selectMode","setSelectMode","onSelecting","callback","timeoutId","delay","clearTimeout","setTimeout","debounce","xaxis","autorange","autotick","ticks","yaxis","automargin","toImageButtonOptions","filename","ml","PlayBack","FormControlLabel","m","control","points","curveNumber","toString","maxSize","selectImageItemDuration","intervalRef","clearInterval","onPlayClick","setInterval","onDurationChange","inputProps","step","Slider","defaultValue","valueLabelDisplay","marks","activeThumb","newIndex","rgba","r","g","outParts","substring","part","RoiPlot","selectRoiDataError","RoiPlotImple","idx","ScatterPlot","selectScatterDataError","selectScatterDataIsFulfilled","ScatterPlotImple","scatterData","scatterDataEqualityFn","textposition","textfont","family","marker","font","aArray","bArray","aKey","CsvPlot","CsvPlotImple","PresentationalCsvPlot","csvData","col","header","headerData","field","headerName","rows","row_id","rowObj","columns","TimeSeriesPlot","selectTimeSeriesDataError","selectTimeSeriesDataIsFulfilled","TimeSeriesPlotImple","timeSeriesData","timeSeriesDataEqualityFn","dataXrange","selectTimeSeriesXrange","dataStd","std","selectTimeSeriesStd","dataKeys","colorScale","activeIdx","mean","sqrt","pow","visible","line","error_y","array","annotations","xref","yref","arrowhead","ax","ay","onLegendClick","clickNumber","newDrawOrderList","newDrawIndexMap","aValue","bKey","bValue","nestEqualityFun","BarPlot","selectBarDataError","selectBarDataIsFulfilled","BarPlotImple","barData","barDataEqualityFn","HTMLPlot","selectHTMLDataError","selectHTMLDataIsFulfilled","HTMLPlotImple","htmlData","dangerouslySetInnerHTML","__html","DisplayDataItem","Provider","DisplayPlot","AlgorithmOutputDialog","closeFn","TitleWithCloseButton","pt","px","OutputViewer","p","outputKeyList","selectPipelineNodeResultOutputKeyList","selectedOutoutKey","setSelectedOutputKey","OutputSelectTabs","onSelectOutput","DisplayDataView","outputKey","Tabs","scrollButtons","tabsClasses","opacity","Tab","selectPipelineNodeResultOutputFilePath","selectPipelineNodeResultOutputFileDataType","selectVisualizeItemIdForWorkflowDialog","mx","my","leftHandleStyle","rightHandleStyle","AlgorithmNode","AlgorithmNodeImple","isConnectable","useStatus","AlgoName","AlgoArgs","AlgoReturns","Message","paddingLeft","main","algoArgs","algoListChild","selectAlgoArgs","algoInfoListEqualtyFn","info","algoInfo","ArgHandle","algoReturns","selectAlgoReturns","ReturnHandle","isNone","hex_color","isHover","setHover","rgb_color","hex","exec","parseInt","hexToRgb","onMouseEnter","onMouseLeave","Tooltip","arrow","latestUid","errorMsg","selectPipelineNodeResultMessage","anchorElRef","Popover","anchorOrigin","vertical","horizontal","FormHelperText","inputNodeSlice","deleteInputNode","setCsvInputNodeParam","setInputNodeHDF5Path","newState","CsvFileNode","CsvFileNodeImple","ParamSettingDialog","selectCsvInputNodeParamSetHeader","setSetHeader","selectCsvInputNodeParamSetIndex","setSetIndex","selectCsvInputNodeParamTranspose","setTranspose","CsvPreview","otherProps","selectHDF5","hdf5","HDF5_SLICE_NAME","getHDF5Tree","HDF5FileNode","HDF5FileNodeImple","ItemSelect","structureFileName","Structure","useHDF5Tree","shape","nbytes","FluoFileNode","FluoFileNodeImple","fluoColor","BehaviorFileNode","BehaviorFileNodeImple","behaviorColor","reactFlowNodeTypes","reactFlowEdgeTypes","buttonedge","sourceX","sourceY","targetX","targetY","arrowHeadType","markerEndId","edgePath","getBezierPath","markerEnd","getMarkerEnd","getEdgeCenter","edgeCenterX","edgeCenterY","d","foreignObjectSize","ReactFlowComponent","elements","onElementsRemove","elementsToRemove","onConnect","addEdge","animated","onDragOver","dataTransfer","dropEffect","onNodeDragStop","nodeTypes","edgeTypes","defaultPosition","defaultZoom","onMoveEnd","selectRightDrawerIsOpen","rightDrawer","selectRightDrawerMode","selectRightDrawerCurrentNodeId","ALGORITHM_NODE_SLICE_NAME","getAlgoParams","algorithmNodeSlice","isUpdated","AlgorithmParamForm","ParamFormContext","algoParamIsLoaded","selectAlgorithmParamsExit","selectAlgorithmParamsKeyList","selectAlgorithmParam","selectAlgorithmParamsValue","Contents","ParamFormConetent","StyledDrawer","Drawer","flexShrink","drawerClasses","paper","MainContents","RightDrawer","anchor","Toolbar","Divider","FlowChart","RootDiv","DrawerContents","drawerWidth","flexDirection","transitions","create","easing","sharp","leavingScreen","easeOut","enteringScreen","VisualizeItemAddButton","StyledPaper","justifyContent","StyledButton","borderWidth","DisplayDataItemLayoutMenuIcon","isSingleData","PresentationalLayoutMenuIcon","onClickDeleteMenu","deleteData","onClickInsertMenu","Menu","ListItemIcon","ListItemText","FilePathSelect","selectedNodeId","onSelect","inputNodeFilePathInfoList","inputNodes","selectInputNode","toDataTypeFromFileType","inputNodeDataType","algorithmNodeOutputPathInfoList","selectPipelineNodeResultSuccessList","paths","onSelectHandle","menuItemList","pathInfo","pathElm","ListSubheader","FormControl","maxWidth","InputLabel","Select","onOpen","VisualizeItem","isSelected","movingSize","setMovingSize","onCommitSize","onMouseDownX","useMouseDragHandler","downEvent","movingX","screenX","movingWidth","onMouseMove","moveEvent","newWidth","MIN_WIDTH","onMouseUp","onMouseDownY","movingY","screenY","movingHeight","newHeight","MIN_HEIFHT","onMouseDownXY","useItemDragResize","ItemHeader","cursor","onMouseDown","itemDataType","FilePathSelectItem","RefImageItemIdSelect","RoiSelect","newFilePath","newDataType","basePayload","prevDataType","prevFilePath","itemIdList","selectedRefImageItemId","selectTimeSeriesItemRefImageItemId","isNaN","dependencies","document","addEventListener","removeEventListener","once","roiItemNodeId","selectRoiItemNodeId","roiItemFilePath","FlexItemList","flexWrap","GradientColorPicker","dispatchSetColor","maxStops","paletteHeight","onPaletteChange","colorCode","rgbStr","flatStyle","WrappedSketchPicker","c","ImageItemEditor","SelectedItemIdContext","newPath","onSelectImageFile","Showticklabels","ShowLine","ShowGrid","ShowScale","Zsmooth","Alpha","inputError","RoiAlpha","SaveFig","StartEndIndex","onChangeStartIndex","onChangeEndIndex","CsvItemEditor","Transpose","SetHeader","SetIndex","HeatmapItemEditor","TimeSeriesItemEditor","Offset","Span","ShowTickLabels","ZeroLine","Xrange","newLeft","newRight","LegendSelect","selectTimeSeriesItemFilePath","handleChange","mt","unmountOnExit","RoiItemEditor","ScatterItemEditor","XIndex","YIndex","BarItemEditor","VisualizeItemEditor","DisplayDataItemEditor","DisplayEditor","StyledDrawerContents","Visualize","selectExperiments","experiments","selectExperimentsSatusIsUninitialized","selectExperimentsSatusIsFulfilled","selectExperimentsSatusIsError","selectExperimentsErrorMessage","selectExperimentList","experimentList","selectExperiment","selectExperimentName","selectExperimentFunction","functions","ExperimentStatusIcon","NWBDownloadButton","ExperimentUidContext","url","setFileUrl","responseType","URL","createObjectURL","Blob","revokeObjectURL","href","download","ConfigDownloadButton","CollapsibleTable","TableRow","TableCell","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","gutterBottom","component","Table","Head","Body","TableHead","nodeIdList","selectExperimentFunctionNodeIdList","TableBody","TableRowOfFunction","selectExperimentFunctionName","selectExperimentFunctionStatus","scope","DeleteButton","ImportButton","unwrap","then","ExperimentTable","isError","TableImple","ExperimentsErrorView","Alert","severity","AlertTitle","order","setOrder","sortTarget","setSortTarget","checkedList","setCheckedList","onCheckBoxClick","TableContainer","HeadItem","sortHandler","property","sort","getComparator","expData","RowItem","TableSortLabel","active","direction","timestamp","selectExperimentTimeStamp","statusList","f","selectExperimentStatus","Fragment","tableCellClasses","root","borderBottomWidth","orderBy","descendingComparator","Experiment","selectRunPostData","nwbParam","selectNwbParams","snakemakeParam","edgeListForRun","isEdge","selectEdgeListForRun","selectNodePostDataListForRun","forceRunList","selectForceRunList","selectInputNodeSelectedFilePath","selectInputNodeFileType","selectInputNodeParam","backgroundColor","StyledAppBar","AppBar","drawer","TabPanel","other","hidden","a11yProps","Layout","setValue","runPipeline","isCanceled","intervalId","prevStatus","setPrevStatus","useRunPipeline","src","optinistLogo","alt","centered","textColor","SnackbarCloseButton","snackbarKey","closeSnackbar","App","maxSnack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","algorithmListSlice","deleteDisplayDataFn","displayDataSlice","roi1Ddata","flat","roiUniqueIdList","n1","n2","fileUploaderSlice","setFileUploaderStateById","currentState","filesTreeSlice","ImageData","MuiColors","IscellData","TimeSeriesData","Suite2pData","FluoData","BehaviorData","nextKey","handleTypeColorSlice","HDF5Slice","convertToExperimentType","function","unique_id","postion","convertToExperimentStatus","success","experimentsSlice","convertToExperimentListType","rootReducer","combineReducers","algorithmListReducer","algorithmNodeReducer","displayDataReducer","fileUploaderReducer","flowElementReducer","inputNodeReducer","handleTypeColorReducer","filesTreeReducer","nwbReducer","rightDrawerReducer","visualaizeItemReducer","snakemakeReducer","pipelineReducer","hdf5Reducer","experimentsReducer","store","configureStore","reducer","createTheme","components","MuiTextField","defaultProps","MuiSelect","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.14d02aad.chunk.js","sourcesContent":["import {\n  ParamDTO,\n  ParamChild,\n  ParamParent,\n  ParamType,\n  ParamMap,\n} from './ParamType'\n\nexport function getChildParam(\n  path: string,\n  ParamMap: ParamMap,\n): ParamChild | null {\n  let result: ParamChild | null = null\n  for (const node of Object.values(ParamMap)) {\n    if (isParamChild(node)) {\n      if (node.path === path) {\n        result = node\n      }\n    } else {\n      result = getChildParam(path, node.children)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function isParamChild(param: ParamType): param is ParamChild {\n  return param.type === 'child'\n}\n\nexport function isParamParent(param: ParamType): param is ParamParent {\n  return param.type === 'parent'\n}\n\nfunction isDictObject(value: unknown): value is { [key: string]: unknown } {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst PATH_SEPARATOR = '/'\n\nexport function convertToParamMap(dto: ParamDTO, keyList?: string[]): ParamMap {\n  const ParamMap: ParamMap = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    const kList = keyList ?? []\n    if (isDictObject(value)) {\n      kList.push(name)\n      ParamMap[name] = {\n        type: 'parent',\n        children: convertToParamMap(value, kList),\n      }\n    } else {\n      ParamMap[name] = {\n        type: 'child',\n        value,\n        path: kList.concat([name]).join(PATH_SEPARATOR),\n      }\n    }\n  })\n  return ParamMap\n}\n\nexport function equalsParamMap(a: ParamMap, b: ParamMap) {\n  if (a === b) {\n    return true\n  }\n  const aArray = Object.keys(a)\n  const bArray = Object.keys(b)\n  return (\n    aArray.length === bArray.length &&\n    aArray.every((aKey) => {\n      const aValue = a[aKey]\n      const bValue = b[aKey]\n      return equalsParam(aValue, bValue)\n    })\n  )\n}\n\nfunction equalsParam(a: ParamType, b: ParamType): boolean {\n  if (a === b) {\n    return true\n  }\n  if (isParamChild(a) && isParamChild(b)) {\n    return equalsParamChild(a, b)\n  } else if (isParamParent(a) && isParamParent(b)) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      aArray.length === bArray.length &&\n      aArray.every((aKey) => {\n        const aValue = a.children[aKey]\n        const bValue = b.children[aKey]\n        return equalsParam(aValue, bValue)\n      })\n    )\n  } else {\n    return false\n  }\n}\n\nfunction equalsParamChild(a: ParamChild, b: ParamChild) {\n  return a.path === b.path && a.value === b.value\n}\n","import { RootState } from 'store/store'\n\nimport { getChildParam } from 'store/utils/param/ParamUtils'\n\nexport const selectAlgorithmNode = (state: RootState) => state.algorithmNode\n\nexport const selectAlgorithmNodeById = (nodeId: string) => (state: RootState) =>\n  state.algorithmNode[nodeId]\n\nexport const selectAlgorithmNodeDefined =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(state.algorithmNode).includes(nodeId)\n\nexport const selectAlgorithmFunctionPath =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).functionPath\n\nexport const selectAlgorithmName = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).name\n\nexport const selectAlgorithmParams = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).params\n\nexport const selectAlgorithmIsUpdated =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).isUpdated\n\nexport const selectAlgorithmParamsExit =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).params !== null\n\nexport const selectAlgorithmParamsKeyList =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(selectAlgorithmNodeById(nodeId)(state)?.params ?? {})\n\nexport const selectAlgorithmParamsValue =\n  (nodeId: string, path: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmParam =\n  (nodeId: string, paramKey: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      return params[paramKey]\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n","import {\n  AlgorithmNodeType,\n  AlgoListDTO,\n  AlgorithmInfo,\n  AlgorithmChild,\n  AlgorithmParent,\n  AlgorithmListTree,\n} from './AlgorithmListType'\n\nexport function isAlgoChild(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmChild {\n  return algoNode.type === 'child'\n}\n\nexport function isAlgoParent(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmParent {\n  return algoNode.type === 'parent'\n}\n\nexport function getAlgoChild(\n  algoList: AlgorithmListTree,\n  algoName: string,\n): AlgorithmChild | null {\n  let result: AlgorithmChild | null = null\n  for (const [name, node] of Object.entries(algoList)) {\n    if (isAlgoChild(node)) {\n      if (name === algoName) {\n        result = node\n      }\n    } else {\n      result = getAlgoChild(node.children, algoName)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function convertToAlgoListType(dto: AlgoListDTO) {\n  const algoList: AlgorithmListTree = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    if (Object.prototype.hasOwnProperty.call(value, 'children')) {\n      algoList[name] = {\n        type: 'parent',\n        children: convertToAlgoListType(\n          (\n            value as {\n              children: AlgoListDTO\n            }\n          ).children as AlgoListDTO,\n        ),\n      }\n    } else {\n      const dto = value as {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n      algoList[name] = {\n        type: 'child',\n        functionPath: dto.path,\n        args: dto.args,\n        returns: dto.returns,\n      }\n    }\n  })\n  return algoList\n}\n","import { RootState } from 'store/store'\nimport { selectAlgorithmName } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { getAlgoChild } from './AlgorithmListUtils'\n\nexport const selectAlgorithmList = (state: RootState) => state.algorithmList\n\nexport const selectAlgorithmListIsLated = (state: RootState) =>\n  selectAlgorithmList(state).isLatest\n\nexport const selectAlgorithmListTree = (state: RootState) =>\n  selectAlgorithmList(state).tree\n\nexport const selectAlgoArgs = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.args\n  } else {\n    return undefined\n  }\n}\n\nexport const selectAlgoReturns = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.returns\n  } else {\n    return undefined\n  }\n}\n","export const ALGORITHM_LIST_SLICE_NAME = 'algorithmList'\n\nexport type AlgorithmListType = {\n  isLatest: boolean\n  tree: AlgorithmListTree\n}\n\nexport type AlgorithmListTree = {\n  [algoName: string]: AlgorithmNodeType\n}\n\nexport type AlgorithmNodeType = AlgorithmChild | AlgorithmParent\nexport type AlgorithmChild = {\n  type: 'child'\n  args: AlgorithmInfo[]\n  returns: AlgorithmInfo[]\n  functionPath: string\n}\nexport type AlgorithmParent = {\n  type: 'parent'\n  children: {\n    [name: string]: AlgorithmNodeType\n  }\n}\nexport type AlgorithmInfo = {\n  name: string\n  type: string\n  isNone?: boolean\n}\n\nexport type AlgoListDTO = {\n  [name: string]:\n    | {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n    | { children: AlgoListDTO }\n}\n","const HOST = process.env.REACT_APP_SERVER_HOST\nconst PORT = process.env.REACT_APP_SERVER_PORT\n\nexport const BASE_URL = `http://${HOST}:${PORT}`\nexport const WS_BASE_URL = `ws://${HOST}:${PORT}`\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios'\nimport { AlgoListDTO, ALGORITHM_LIST_SLICE_NAME } from './AlgorithmListType'\nimport { BASE_URL } from 'const/API'\n\nexport const getAlgoList = createAsyncThunk<AlgoListDTO, void>(\n  `${ALGORITHM_LIST_SLICE_NAME}/getAlgoList`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await axios.get(`${BASE_URL}/algolist`)\n      return response.data\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","export const INPUT_NODE_SLICE_NAME = 'inputNode'\n\nexport const FILE_TYPE_SET = {\n  CSV: 'csv',\n  IMAGE: 'image',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type FILE_TYPE = typeof FILE_TYPE_SET[keyof typeof FILE_TYPE_SET]\n\nexport type InputNode = {\n  [nodeId: string]: InputNodeType\n}\n\nexport type InputNodeType = CsvInputNode | ImageInputNode | HDF5InputNode\n\ninterface InputNodeBaseType<\n  T extends FILE_TYPE,\n  P extends { [key: string]: unknown },\n> {\n  fileType: T\n  selectedFilePath?: string | string[]\n  param: P\n}\n\nexport type CsvInputParamType = {\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\n\nexport interface CsvInputNode\n  extends InputNodeBaseType<'csv', CsvInputParamType> {\n  selectedFilePath?: string\n}\n\nexport interface ImageInputNode extends InputNodeBaseType<'image', {}> {\n  selectedFilePath?: string[]\n}\n\nexport interface HDF5InputNode extends InputNodeBaseType<'hdf5', {}> {\n  selectedFilePath?: string\n  hdf5Path?: string\n}\n","import { Elements, FlowTransform } from 'react-flow-renderer'\n\nexport const FLOW_ELEMENT_SLICE_NAME = 'flowElement'\n\nexport const NODE_TYPE_SET = {\n  INPUT: 'input',\n  ALGORITHM: 'algorithm',\n} as const\n\nexport type NODE_TYPE = typeof NODE_TYPE_SET[keyof typeof NODE_TYPE_SET]\n\nexport type NodeData = AlgorithmNodeData | InputNodeData\n\ninterface NodeDataBaseType<T extends NODE_TYPE> {\n  label: string\n  type: T\n}\n\nexport interface InputNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.INPUT> {}\n\nexport interface AlgorithmNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.ALGORITHM> {}\n\nexport interface ElementCoord {\n  x: number\n  y: number\n}\n\nexport interface FlowElement {\n  flowElements: Elements<NodeData>\n  flowPosition: FlowTransform\n  elementCoord: ElementCoord\n}\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Node } from 'react-flow-renderer'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'store/utils/param/ParamType'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { FLOW_ELEMENT_SLICE_NAME, NodeData } from './FlowElementType'\n\nexport const addAlgorithmNode = createAsyncThunk<\n  ParamDTO,\n  {\n    node: Omit<Node<NodeData>, 'position'>\n    functionPath: string\n    name: string\n  }\n>(`${FLOW_ELEMENT_SLICE_NAME}/addAlgorithmNode`, async ({ name }, thunkAPI) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/params/${name}`)\n    return response.data\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const addInputNode = createAction<{\n  node: Omit<Node<NodeData>, 'position'>\n  fileType: FILE_TYPE\n}>(`${FLOW_ELEMENT_SLICE_NAME}/addInputNode`)\n","import { customAlphabet } from 'nanoid/non-secure'\n\nconst nanoid = customAlphabet('0123456789abcdefghijklmnopqrstuvwxyz', 10)\n\nexport const getNanoId = () => {\n  return nanoid()\n}\n","export const INITIAL_IMAGE_ELEMENT_ID = 'input_0'\nexport const INITIAL_IMAGE_ELEMENT_NAME = 'NoName'\n\nexport const INITIAL_ALGO_STYLE: React.CSSProperties = {\n  width: 180,\n  height: 100,\n  padding: 0,\n  borderRadius: 0,\n} as const\n\nexport const INITIAL_DATA_STYLE: React.CSSProperties = {\n  border: '1px solid #777',\n  height: 120,\n} as const\n\nexport const REACT_FLOW_NODE_TYPE_KEY = {\n  ImageFileNode: 'ImageFileNode',\n  CsvFileNode: 'CsvFileNode',\n  HDF5FileNode: 'HDF5FileNode',\n  FluoFileNode: 'FluoFileNode',\n  AlgorithmNode: 'AlgorithmNode',\n  BehaviorFileNode: 'BehaviorFileNode',\n} as const\n\nexport type REACT_FLOW_NODE_TYPE =\n  typeof REACT_FLOW_NODE_TYPE_KEY[keyof typeof REACT_FLOW_NODE_TYPE_KEY]\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem'\nimport { styled, Typography } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport IconButton from '@mui/material/IconButton'\nimport AddIcon from '@mui/icons-material/Add'\n\nimport {\n  selectAlgorithmListIsLated,\n  selectAlgorithmListTree,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { AlgorithmNodeType } from 'store/slice/AlgorithmList/AlgorithmListType'\nimport { isAlgoChild } from 'store/slice/AlgorithmList/AlgorithmListUtils'\nimport { getAlgoList } from 'store/slice/AlgorithmList/AlgorithmListActions'\nimport { FILE_TYPE, FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  NODE_TYPE,\n  NODE_TYPE_SET,\n} from 'store/slice/FlowElement/FlowElementType'\nimport {\n  addAlgorithmNode,\n  addInputNode,\n} from 'store/slice/FlowElement/FlowElementActions'\nimport { getNanoId } from 'store/utils/nanoid/NanoIdUtils'\nimport { REACT_FLOW_NODE_TYPE, REACT_FLOW_NODE_TYPE_KEY } from 'const/flowchart'\n\nexport const AlgorithmTreeView = React.memo(() => {\n  const dispatch = useDispatch()\n  const algoList = useSelector(selectAlgorithmListTree)\n  const isLatest = useSelector(selectAlgorithmListIsLated)\n\n  useEffect(() => {\n    if (!isLatest) {\n      dispatch(getAlgoList())\n    }\n  }, [dispatch, isLatest])\n\n  const onAlgoNodeClick = (nodeName: string, functionPath: string) => {\n    const name = nodeName\n    const newNode = {\n      id: `${name}_${getNanoId()}`,\n      type: 'AlgorithmNode',\n      data: { label: name, type: NODE_TYPE_SET.ALGORITHM },\n    }\n    dispatch(\n      addAlgorithmNode({\n        node: newNode,\n        name,\n        functionPath,\n      }),\n    )\n  }\n\n  return (\n    <TreeView\n      sx={{\n        flexGrow: 1,\n        height: '100%',\n      }}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId=\"Data\" label=\"Data\">\n        <InputNodeComponent\n          fileName={'image'}\n          nodeName={'imageData'}\n          fileType={FILE_TYPE_SET.IMAGE}\n        />\n        <InputNodeComponent\n          fileName={'csv'}\n          nodeName={'csvData'}\n          fileType={FILE_TYPE_SET.CSV}\n        />\n        <InputNodeComponent\n          fileName={'hdf5'}\n          nodeName={'hdf5Data'}\n          fileType={FILE_TYPE_SET.HDF5}\n        />\n        <InputNodeComponent\n          fileName={'fluo'}\n          nodeName={'fluoData'}\n          fileType={FILE_TYPE_SET.FLUO}\n        />\n        <InputNodeComponent\n          fileName={'behavior'}\n          nodeName={'behaviorData'}\n          fileType={FILE_TYPE_SET.BEHAVIOR}\n        />\n      </TreeItem>\n      <TreeItem nodeId=\"Algorithm\" label=\"Algorithm\">\n        {Object.entries(algoList).map(([name, node], i) => (\n          <AlgoNodeComponent\n            name={name}\n            node={node}\n            onAlgoNodeClick={(name, functionPath) =>\n              onAlgoNodeClick(name, functionPath)\n            }\n            key={i.toFixed()}\n          />\n        ))}\n      </TreeItem>\n    </TreeView>\n  )\n})\n\nconst InputNodeComponent = React.memo<{\n  fileName: string\n  nodeName: string\n  fileType: FILE_TYPE\n}>(({ fileName, nodeName, fileType }) => {\n  const dispatch = useDispatch()\n\n  const onDataNodeClick = (\n    nodeType: NODE_TYPE,\n    nodeName: string,\n    fileType: FILE_TYPE,\n  ) => {\n    let reactFlowNodeType: REACT_FLOW_NODE_TYPE | '' = ''\n    switch (fileType) {\n      case FILE_TYPE_SET.CSV:\n        reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.CsvFileNode\n        break\n      case FILE_TYPE_SET.IMAGE:\n        reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.ImageFileNode\n        fileType = FILE_TYPE_SET.IMAGE\n        break\n      case FILE_TYPE_SET.HDF5:\n        reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.HDF5FileNode\n        fileType = FILE_TYPE_SET.HDF5\n        break\n      case FILE_TYPE_SET.FLUO:\n        reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.FluoFileNode\n        fileType = FILE_TYPE_SET.FLUO\n        break\n      case FILE_TYPE_SET.BEHAVIOR:\n        reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.BehaviorFileNode\n        fileType = FILE_TYPE_SET.BEHAVIOR\n        break\n    }\n    const newNode = {\n      id: `input_${getNanoId()}`,\n      type: reactFlowNodeType,\n      data: { label: nodeName, type: nodeType },\n    }\n    dispatch(addInputNode({ node: newNode, fileType }))\n  }\n\n  return (\n    <LeafItem\n      nodeId={fileName}\n      label={\n        <AddButton\n          name={fileName}\n          onClick={() =>\n            onDataNodeClick(NODE_TYPE_SET.INPUT, nodeName, fileType)\n          }\n        />\n      }\n    />\n  )\n})\n\nconst AlgoNodeComponent = React.memo<{\n  name: string\n  node: AlgorithmNodeType\n  onAlgoNodeClick: (nodeName: string, functionPath: string) => void\n}>(({ name, node, onAlgoNodeClick }) => {\n  if (isAlgoChild(node)) {\n    return (\n      <LeafItem\n        nodeId={name}\n        label={\n          <AddButton\n            name={name}\n            onClick={() => onAlgoNodeClick(name, node.functionPath)}\n          />\n        }\n      />\n    )\n  } else {\n    return (\n      <TreeItem nodeId={name} label={name}>\n        {Object.entries(node.children).map(([name, node], i) => (\n          <AlgoNodeComponent\n            name={name}\n            node={node}\n            key={i.toFixed()}\n            onAlgoNodeClick={(name, functionPath) =>\n              onAlgoNodeClick(name, functionPath)\n            }\n          />\n        ))}\n      </TreeItem>\n    )\n  }\n})\n\nconst AddButton = React.memo<{\n  name: string\n  onClick: () => void\n}>(({ name, onClick }) => {\n  return (\n    <>\n      <IconButton aria-label=\"add\" style={{ padding: 2 }} size=\"large\">\n        <AddIcon onClick={() => onClick()} />\n      </IconButton>\n      <Typography\n        variant=\"inherit\"\n        style={{\n          textOverflow: 'ellipsis',\n          overflow: 'visible',\n          width: '8rem',\n          display: 'inline-block',\n        }}\n      >\n        {name}\n      </Typography>\n    </>\n  )\n})\n\n// 未使用icon分の幅を消す\nconst LeafItem = styled(TreeItem)({\n  [`& .${treeItemClasses.iconContainer}`]: {\n    margin: 0,\n    width: 0,\n  },\n})\n","import { RunPostData } from 'api/run/Run'\nimport axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type ExperimentsDTO = {\n  [uid: string]: ExperimentDTO\n}\n\nexport type ExperimentDTO = {\n  function: {\n    [uid: string]: {\n      name: string\n      position: {\n        x: number\n        y: number\n      }\n      success: string\n      unique_id: string\n    }\n  }\n  name: string\n  success: string\n  timestamp: string\n  unique_id: string\n}\n\nexport async function getExperimentsApi(): Promise<ExperimentsDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments`)\n  return response.data\n}\n\n// export async function getExperimentByUid(uid: string): Promise<{\n//   // todo\n// }> {\n//   const response = await axios.get(`${BASE_URL}/experiments/${uid}`)\n//   return response.data\n// }\n\nexport async function deleteExperimentByUidApi(uid: string): Promise<boolean> {\n  const response = await axios.delete(`${BASE_URL}/experiments/${uid}`)\n  return response.data\n}\n\nexport async function deleteExperimentByListApi(\n  uidList: Array<string>,\n): Promise<boolean> {\n  const response = await axios.post(`${BASE_URL}/experiments/delete`, {\n    uidList,\n  })\n  return response.data\n}\n\nexport async function importExperimentByUidApi(\n  uid: string,\n): Promise<RunPostData> {\n  const response = await axios.get(`${BASE_URL}/experiments/import/${uid}`)\n  return response.data\n}\n\n// export async function downloadExperimentByUidApi(uid: string): Promise<void> {\n//   const response = await axios.get(`${BASE_URL}/experiments/download/${uid}`)\n//   const url = URL.createObjectURL(new Blob([response.data]))\n//   URL.revokeObjectURL(url)\n// }\n","export const EXPERIMENTS_SLICE_NAME = 'experiments'\n\nexport type Experiments =\n  | {\n      status: 'fulfilled'\n      experimentList: ExperimentListType\n    }\n  | {\n      status: 'uninitialized'\n    }\n  | {\n      status: 'pending'\n    }\n  | {\n      status: 'error'\n      message?: string\n    }\n\nexport type ExperimentListType = {\n  [uid: string]: ExperimentType\n}\n\nexport type ExperimentType = {\n  uid: string\n  functions: {\n    [nodeId: string]: ExperimentFunction\n  }\n  name: string\n  timestamp: string\n}\n\nexport type ExperimentFunction = {\n  name: string\n  nodeId: string\n  postion: {\n    x: number\n    y: number\n  }\n  status: EXPERIMENTS_STATUS\n}\n\nexport type EXPERIMENTS_STATUS = 'success' | 'error' | 'running'\n\nexport interface Experiment {\n  uid: string\n  name: string\n  timestamp: string\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  ExperimentsDTO,\n  getExperimentsApi,\n  deleteExperimentByUidApi,\n  importExperimentByUidApi,\n  deleteExperimentByListApi,\n} from 'api/experiments/Experiments'\nimport { RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_SLICE_NAME } from './ExperimentsType'\n\nexport const getExperiments = createAsyncThunk<ExperimentsDTO, undefined>(\n  `${EXPERIMENTS_SLICE_NAME}/getExperiments`,\n  async (_, thunkAPI) => {\n    try {\n      const response = await getExperimentsApi()\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByUid = createAsyncThunk<boolean, string>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByList = createAsyncThunk<boolean, string[]>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByList`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByListApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const importExperimentByUid = createAsyncThunk<RunPostData, string>(\n  `${EXPERIMENTS_SLICE_NAME}/importExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await importExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { createAction } from '@reduxjs/toolkit'\n\nimport { INPUT_NODE_SLICE_NAME } from './InputNodeType'\n\nexport const setInputNodeFilePath = createAction<{\n  nodeId: string\n  filePath: string | string[]\n}>(`${INPUT_NODE_SLICE_NAME}/setInputNodeFilePath`)\n","import { FlowElement, isNode, Node } from 'react-flow-renderer'\nimport {\n  AlgorithmNodeData,\n  NodeData,\n  NODE_TYPE_SET,\n  InputNodeData,\n} from './FlowElementType'\n\nexport function isNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<NodeData> {\n  return node != null && isNode(node) && node.data != null\n}\n\nexport function isAlgorithmNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<AlgorithmNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.ALGORITHM\n}\n\nexport function isInputNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<InputNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.INPUT\n}\n\nexport function getLabelByPath(filePath: string | string[]) {\n  if (Array.isArray(filePath)) {\n    if (filePath.length === 0) {\n      return ''\n    } else if (filePath.length === 1) {\n      return getFileName(filePath[0])\n    } else {\n      return getFileName(filePath[0]) + ` ... and ${filePath.length - 1} files`\n    }\n  } else {\n    return getFileName(filePath)\n  }\n}\n\nexport function getFileName(filePath: string) {\n  return filePath.split('/').reverse()[0]\n}\n","import type { Node } from 'react-flow-renderer'\nimport {\n  isInputNodeData,\n  isAlgorithmNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport type {\n  NodePostDataType,\n  InputNodePostData,\n  AlgorithmNodePostData,\n} from './Run'\n\nexport function isInputNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<InputNodePostData> {\n  return isInputNodeData(node)\n}\n\nexport function isAlgorithmNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<AlgorithmNodePostData> {\n  return isAlgorithmNodeData(node)\n}\n","export const FILE_UPLOADER_SLICE_NAME = 'fileUploader'\n\nexport type FileUploader = {\n  [id: string]: FileUploaderType\n}\n\nexport type FileUploaderType = {\n  path?: string\n  fileName?: string\n  isUninitialized: boolean\n  pending: boolean\n  fulfilled: boolean\n  uploadingProgress?: number\n  error?: string\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\nimport { FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\n\nexport const setUploadProgress = createAction<{\n  requestId: string\n  progess: number\n  total: number\n}>(`${FILE_UPLOADER_SLICE_NAME}/setUploadProgress`)\n\nexport const uploadFile = createAsyncThunk<\n  {\n    resultPath: string\n  },\n  {\n    requestId: string\n    nodeId?: string\n    fileName: string\n    formData: FormData\n    fileType?: FILE_TYPE\n  }\n>(\n  `${FILE_UPLOADER_SLICE_NAME}/uploadFile`,\n  async ({ requestId, fileName, formData }, thunkAPI) => {\n    try {\n      const config = getUploadConfig((percent, total) => {\n        thunkAPI.dispatch(\n          setUploadProgress({\n            requestId,\n            progess: percent,\n            total,\n          }),\n        )\n      })\n      const response = await axios.post(\n        `${BASE_URL}/files/upload/${fileName}`,\n        formData,\n        config,\n      )\n      const data = response.data\n      return {\n        resultPath: data.file_path,\n      }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nfunction getUploadConfig(\n  onUpdateProgressFn: (percent: number, totalSize: number) => void,\n) {\n  return {\n    onUploadProgress: function (progressEvent: any) {\n      const percentCompleted = Math.round(\n        (progressEvent.loaded * 100) / progressEvent.total,\n      )\n      onUpdateProgressFn(percentCompleted, progressEvent.total)\n    },\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  Elements,\n  removeElements,\n  Position,\n  isNode,\n  FlowTransform,\n  XYPosition,\n} from 'react-flow-renderer'\nimport {\n  FLOW_ELEMENT_SLICE_NAME,\n  FlowElement,\n  NODE_TYPE_SET,\n  NodeData,\n  ElementCoord,\n} from './FlowElementType'\nimport {\n  INITIAL_ALGO_STYLE,\n  INITIAL_DATA_STYLE,\n  INITIAL_IMAGE_ELEMENT_ID,\n  INITIAL_IMAGE_ELEMENT_NAME,\n  REACT_FLOW_NODE_TYPE_KEY,\n} from 'const/flowchart'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { addAlgorithmNode, addInputNode } from './FlowElementActions'\nimport { getLabelByPath } from './FlowElementUtils'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\n\nconst initialElements: Elements<NodeData> = [\n  {\n    id: INITIAL_IMAGE_ELEMENT_ID,\n    type: REACT_FLOW_NODE_TYPE_KEY.ImageFileNode,\n    data: {\n      type: NODE_TYPE_SET.INPUT,\n      label: INITIAL_IMAGE_ELEMENT_NAME,\n    },\n    style: INITIAL_DATA_STYLE,\n    position: { x: 50, y: 150 },\n  },\n]\n\nconst initialFlowPosition: FlowTransform = {\n  x: 0,\n  y: 0,\n  zoom: 0.7,\n}\n\nconst initialElementCoord: ElementCoord = {\n  x: 100,\n  y: 150,\n}\n\nconst initialState: FlowElement = {\n  flowElements: initialElements,\n  flowPosition: initialFlowPosition,\n  elementCoord: initialElementCoord,\n}\n\nexport const flowElementSlice = createSlice({\n  name: FLOW_ELEMENT_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFlowPosition: (state, action: PayloadAction<FlowTransform>) => {\n      state.flowPosition = action.payload\n    },\n    setFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = action.payload\n    },\n    deleteFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = removeElements(action.payload, state.flowElements)\n    },\n    deleteFlowElementsById: (state, action: PayloadAction<string>) => {\n      const element = state.flowElements.find(\n        (edge) => edge.id === action.payload,\n      )\n      if (element !== undefined) {\n        state.flowElements = removeElements([element], state.flowElements)\n      }\n    },\n    editFlowElementPositionById: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        coord: {\n          x: number\n          y: number\n        }\n      }>,\n    ) => {\n      let { nodeId, coord } = action.payload\n      const elementIdx = state.flowElements.findIndex(\n        (ele) => ele.id === nodeId,\n      )\n      const targetItem = state.flowElements[elementIdx]\n      if (isNode(targetItem)) {\n        targetItem.position = coord\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        let { node } = action.meta.arg\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_ALGO_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        const newPosition: XYPosition = state.elementCoord\n        state.flowElements.push({ ...node, position: newPosition })\n        updateElementCoord(state)\n      })\n      .addCase(addInputNode, (state, action) => {\n        let { node } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_DATA_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        const newPosition: XYPosition = state.elementCoord\n        state.flowElements.push({ ...node, position: newPosition })\n        updateElementCoord(state)\n      })\n      .addCase(setInputNodeFilePath, (state, action) => {\n        let { nodeId, filePath } = action.payload\n        const label = getLabelByPath(filePath)\n        const elementIdx = state.flowElements.findIndex(\n          (ele) => ele.id === nodeId,\n        )\n        const targetNode = state.flowElements[elementIdx]\n        if (targetNode.data != null) {\n          targetNode.data.label = label\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const elementIdx = state.flowElements.findIndex(\n            (ele) => ele.id === nodeId,\n          )\n          const targetNode = state.flowElements[elementIdx]\n          if (targetNode.data != null) {\n            targetNode.data.label = getLabelByPath(action.payload.resultPath)\n          }\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.flowPosition = initialFlowPosition\n        state.elementCoord = initialElementCoord\n        const newNodeList: Elements<NodeData> = action.payload.nodeList.map(\n          (node) => {\n            if (isInputNodePostData(node)) {\n              return {\n                ...node,\n                data: {\n                  label: node.data?.label ?? '',\n                  type: node.data?.type ?? 'input',\n                },\n              }\n            } else {\n              return {\n                ...node,\n                data: {\n                  label: node.data?.label ?? '',\n                  type: node.data?.type ?? 'algorithm',\n                },\n              }\n            }\n          },\n        )\n        state.flowElements = newNodeList.concat(action.payload.edgeList)\n      }),\n})\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nfunction updateElementCoord(state: FlowElement) {\n  const { x } = state.elementCoord\n  if (x > 800) {\n    state.elementCoord.x = 300\n    state.elementCoord.y += 100\n  } else {\n    state.elementCoord.x += 250\n    state.elementCoord.y += getRandomArbitrary(-20, 20)\n  }\n}\n\nexport const {\n  setFlowPosition,\n  setFlowElements,\n  deleteFlowElements,\n  deleteFlowElementsById,\n  editFlowElementPositionById,\n} = flowElementSlice.actions\n\nexport default flowElementSlice.reducer\n","import { isEdge } from 'react-flow-renderer'\nimport { RootState } from 'store/store'\nimport { isNodeData } from './FlowElementUtils'\n\nexport const selectFlowElements = (state: RootState) =>\n  state.flowElement.flowElements\n\nexport const selectFlowPosition = (state: RootState) =>\n  state.flowElement.flowPosition\n\nexport const selectElementCoord = (state: RootState) =>\n  state.flowElement.elementCoord\n\nexport const selectNodeById = (nodeId: string) => (state: RootState) =>\n  selectFlowElements(state)\n    .filter(isNodeData)\n    .find((node) => node.id === nodeId)\n\nexport const selectNodeTypeById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.type\n\nexport const selectNodeLabelById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.label\n\nexport const selectEdgeListForRun = (state: RootState) =>\n  selectFlowElements(state).filter(isEdge)\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { NWB_SLICE_NAME } from './NWBType'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'store/utils/param/ParamType'\n\nexport const getNWBParams = createAsyncThunk<ParamDTO, void>(\n  `${NWB_SLICE_NAME}/getNWBParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await axios.get(`${BASE_URL}/nwb`)\n      return response.data\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { ParamMap } from 'store/utils/param/ParamType'\n\nexport const NWB_SLICE_NAME = 'NWB'\n\nexport type NWBType = {\n  params: ParamMap\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getNWBParams } from './NWBAction'\nimport { NWBType, NWB_SLICE_NAME } from './NWBType'\nimport { convertToParamMap, getChildParam } from 'store/utils/param/ParamUtils'\n\nconst initialState: NWBType = {\n  params: {},\n}\n\nexport const nwbSlice = createSlice({\n  name: NWB_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const targetNode = getChildParam(path, state.params)\n      if (targetNode != null) {\n        targetNode.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNWBParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = nwbSlice.actions\n\nexport default nwbSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\n\ntype RightDrawer = {\n  open: boolean\n  mode: RIGHT_DRAWER_MODE_TYPE\n  currendNodeId: string | null\n}\n\nexport const RIGHT_DRAWER_MODE = {\n  NONE: 'none',\n  NWB: 'nwb',\n  PARAM_FORM: 'paramForm',\n  SNAKEMAKE: 'snakemake',\n} as const\n\nexport type RIGHT_DRAWER_MODE_TYPE =\n  typeof RIGHT_DRAWER_MODE[keyof typeof RIGHT_DRAWER_MODE]\n\nconst initialState: RightDrawer = {\n  open: false,\n  mode: RIGHT_DRAWER_MODE.NONE,\n  currendNodeId: null,\n}\nexport const rightDrawerSlice = createSlice({\n  name: 'rightDrawer',\n  initialState,\n  reducers: {\n    openRightDrawer: (state, action: PayloadAction<RIGHT_DRAWER_MODE_TYPE>) => {\n      state.open = true\n      state.mode = action.payload\n    },\n    closeRightDrawer: (state) => {\n      state.open = false\n      state.mode = RIGHT_DRAWER_MODE.NONE\n    },\n    toggleParamForm: (state, action: PayloadAction<string>) => {\n      if (\n        state.open &&\n        state.mode === RIGHT_DRAWER_MODE.PARAM_FORM &&\n        state.currendNodeId === action.payload\n      ) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n        state.currendNodeId = null\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.PARAM_FORM\n        state.currendNodeId = action.payload\n      }\n    },\n    toggleNwb: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.NWB) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.NWB\n      }\n      state.currendNodeId = null\n    },\n    toggleSnakemake: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.SNAKEMAKE) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.SNAKEMAKE\n      }\n      state.currendNodeId = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteFlowElements, (state, action) => {\n        if (\n          action.payload.findIndex((elm) => elm.id === state.currendNodeId) > 0\n        ) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (action.payload === state.currendNodeId) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, () => {\n        return initialState\n      })\n  },\n})\n\nexport const {\n  toggleParamForm,\n  toggleNwb,\n  toggleSnakemake,\n  openRightDrawer,\n  closeRightDrawer,\n} = rightDrawerSlice.actions\n\nexport default rightDrawerSlice.reducer\n","export function arrayEqualityFn<T>(a: T[], b: T[]) {\n  return a === b || (a.length === b.length && a.every((v, i) => v === b[i]))\n}\n\nexport function twoDimarrayEqualityFn<T>(a: T[][], b: T[][]) {\n  return (\n    a === b ||\n    (a.length === b.length && a.every((v, i) => arrayEqualityFn(v, b[i])))\n  )\n}\n","import { getChildParam } from 'store/utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nexport const selectNwb = (state: RootState) => state.nwb\n\nexport const selectNwbParams = (state: RootState) => selectNwb(state).params\n\nexport const selectNwbParamsKeyList = (state: RootState) =>\n  Object.keys(selectNwb(state).params)\n\nexport const selectNwbParam = (paramKey: string) => (state: RootState) =>\n  selectNwb(state).params[paramKey]\n\nexport const selectNwbParamsValue = (path: string) => (state: RootState) => {\n  const params = selectNwb(state).params\n  if (params != null) {\n    const target = getChildParam(path, params)\n    return target?.value\n  } else {\n    throw new Error('Param is null')\n  }\n}\n","import MuiAccordion, { AccordionProps } from '@mui/material/Accordion'\nimport { styled } from '@mui/material/styles'\n\nexport const Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: '1px solid',\n  borderColor: theme.palette.divider,\n  boxShadow: 'none',\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}))\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport Switch from '@mui/material/Switch'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport Typography from '@mui/material/Typography'\n\nimport { isParamChild } from 'store/utils/param/ParamUtils'\nimport { ParamType } from 'store/utils/param/ParamType'\nimport { RootState } from 'store/store'\nimport { Accordion } from 'components/Accordion'\n\ntype ParamSelectorType = (paramKey: string) => (state: RootState) => ParamType\ntype ParamValueSelectorType = (path: string) => (state: RootState) => unknown\ntype ParamUpdateActionCreatorType = (\n  path: string,\n  newValue: unknown,\n) => AnyAction\n\nexport type CreateParamFormItemComponentProps = {\n  paramSelector: ParamSelectorType\n  paramValueSelector: ParamValueSelectorType\n  paramUpdateActionCreator: ParamUpdateActionCreatorType\n}\n\nexport function createParamFormItemComponent({\n  paramSelector,\n  paramValueSelector,\n  paramUpdateActionCreator,\n}: CreateParamFormItemComponentProps): React.FC<{ paramKey: string }> {\n  function useParamValueUpdate(\n    path: string,\n  ): [unknown, (newValue: unknown) => AnyAction] {\n    const value = useSelector(paramValueSelector(path))\n    const updateParamAction = (newValue: unknown) => {\n      return paramUpdateActionCreator(path, newValue)\n    }\n    return [value, updateParamAction]\n  }\n  const ParamItemForString = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    const onChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(updateParamAction(newValue))\n    }\n    return <TextField value={value} onChange={onChange} multiline />\n  })\n  const ParamItemForNumber = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue =\n          event.target.value === '' ? '' : Number(event.target.value)\n        if (typeof newValue === 'number') {\n          dispatch(updateParamAction(newValue))\n        }\n      }\n      return (\n        <TextField\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={value}\n          onChange={onChange}\n        />\n      )\n    } else {\n      return null\n    }\n  })\n  const ParamItemForBoolean = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'boolean') {\n      const onChange = () => {\n        dispatch(updateParamAction(!value))\n      }\n      return <Switch checked={value} onChange={onChange} />\n    } else {\n      return null\n    }\n  })\n  const ParamItemForValueType = React.memo<ParamChildItemProps>(({ path }) => {\n    const [value] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      return <ParamItemForNumber path={path} />\n    } else if (typeof value === 'string') {\n      return <ParamItemForString path={path} />\n    } else if (typeof value === 'boolean') {\n      return <ParamItemForBoolean path={path} />\n    } else {\n      return <ParamItemForString path={path} />\n    }\n  })\n  const ParamChildItem = React.memo<ParamChildItemProps & { name: string }>(\n    ({ path, name }) => {\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            marginTop: (theme) => theme.spacing(2),\n            marginBottom: (theme) => theme.spacing(2),\n            alignItems: 'center',\n            overflow: 'scroll',\n          }}\n        >\n          <Box\n            style={{ verticalAlign: 'middle' }}\n            sx={{\n              flexGrow: 1,\n              width: '50%',\n            }}\n          >\n            <Typography style={{ overflow: 'scroll' }}>{name}</Typography>\n          </Box>\n          <Box sx={{ width: '50%' }}>\n            <ParamItemForValueType path={path} />\n          </Box>\n        </Box>\n      )\n    },\n  )\n  const ParamItem = React.memo<ParamItemProps>(({ paramKey, param }) => {\n    if (isParamChild(param)) {\n      return <ParamChildItem path={param.path} name={paramKey} />\n    } else {\n      return (\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            {paramKey}\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              {Object.entries(param.children).map(([paramKey, param], i) => (\n                <ParamItem param={param} paramKey={paramKey} />\n              ))}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      )\n    }\n  })\n  return React.memo<{ paramKey: string }>(({ paramKey }) => {\n    const param = useSelector(paramSelector(paramKey)) // 一階層目\n    return <ParamItem paramKey={paramKey} param={param} />\n  })\n}\n\ntype ParamItemProps = {\n  paramKey: string\n  param: ParamType\n}\n\ntype ParamChildItemProps = {\n  path: string\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\nimport { updateParam } from 'store/slice/NWB/NWBSlice'\nimport { getNWBParams } from 'store/slice/NWB/NWBAction'\nimport { toggleNwb } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectNwbParam,\n  selectNwbParamsKeyList,\n  selectNwbParamsValue,\n} from 'store/slice/NWB/NWBSelectors'\nimport { createParamFormItemComponent } from 'components/ParamFormItemCreator'\n\nexport const NWBSettingButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleNwb())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      NWB setting\n    </Button>\n  )\n})\n\nexport const NWBSettingContents = React.memo(() => {\n  const dispatch = useDispatch()\n\n  const paramKeyList = useSelector(selectNwbParamsKeyList, arrayEqualityFn)\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getNWBParams())\n    }\n  })\n\n  return (\n    <div className=\"nwbParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectNwbParam,\n    paramValueSelector: selectNwbParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import { ParamMap } from 'store/utils/param/ParamType'\n\nexport const SNAKEMAKE_SLICE_NAME = 'Snakemake'\n\nexport type SnakemakeType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'store/utils/param/ParamType'\n\nexport const getSnakemakeParams = createAsyncThunk<ParamDTO, void>(\n  `${SNAKEMAKE_SLICE_NAME}/getSnakemakeParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await axios.get(`${BASE_URL}/snakemake`)\n      return response.data\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { convertToParamMap, getChildParam } from 'store/utils/param/ParamUtils'\nimport { getSnakemakeParams } from './SnakemakeAction'\nimport { SnakemakeType, SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nconst initialState: SnakemakeType = {\n  params: {},\n}\n\nexport const SnakemakeSlice = createSlice({\n  name: SNAKEMAKE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const target = getChildParam(path, state.params)\n      if (target != null) {\n        target.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getSnakemakeParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = SnakemakeSlice.actions\n\nexport default SnakemakeSlice.reducer\n","import { getChildParam } from 'store/utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nconst selectSnakemake = (state: RootState) => state.snakemake\nexport const selectSnakemakeParams = (state: RootState) =>\n  selectSnakemake(state).params\n\nexport const selectSnakemakeParamsKeyList = (state: RootState) =>\n  Object.keys(selectSnakemakeParams(state))\n\nexport const selectSnakemakeParam = (paramKey: string) => (state: RootState) =>\n  selectSnakemakeParams(state)[paramKey]\n\nexport const selectSnakemakeParamsValue =\n  (path: string) => (state: RootState) => {\n    const params = selectSnakemakeParams(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('Param is null')\n    }\n  }\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\n\nimport { updateParam } from 'store/slice/Snakemake/SnakemakeSlice'\nimport { getSnakemakeParams } from 'store/slice/Snakemake/SnakemakeAction'\nimport { toggleSnakemake } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport {\n  selectSnakemakeParam,\n  selectSnakemakeParamsKeyList,\n  selectSnakemakeParamsValue,\n} from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from 'components/ParamFormItemCreator'\n\nexport const SnakemakeButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleSnakemake())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      Snakemake\n    </Button>\n  )\n})\n\nexport const SnakemakeContents = React.memo(() => {\n  const dispatch = useDispatch()\n  const paramKeyList = useSelector(\n    selectSnakemakeParamsKeyList,\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getSnakemakeParams())\n    }\n  })\n  return (\n    <div className=\"SnakemakeParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectSnakemakeParam,\n    paramValueSelector: selectSnakemakeParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import { RunPostData } from 'api/run/Run'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\n\nexport const PIPELINE_SLICE_NAME = 'pipeline'\n\nexport type Pipeline = {\n  run: PipelineType\n  currentPipeline?: {\n    uid: string\n  }\n  runBtn: RUN_BTN_TYPE\n}\n\nexport const RUN_STATUS = {\n  /**\n   * 未実行\n   */\n  START_UNINITIALIZED: 'StartUninitialized',\n  /**\n   * 開始リクエスト中\n   */\n  START_PENDING: 'StartPending',\n  /**\n   * 開始できなかった\n   */\n  START_ERROR: 'StartError',\n  /**\n   * 正常に開始した\n   */\n  START_SUCCESS: 'StartSuccess',\n  /**\n   * 全て終了\n   */\n  FINISHED: 'Finished',\n  /**\n   * 途中終了\n   */\n  ABORTED: 'Aborted',\n  /**\n   * キャンセルされた\n   */\n  CANCELED: 'Canceled',\n} as const\n\nexport type RUN_STATUS_TYPE = typeof RUN_STATUS[keyof typeof RUN_STATUS]\n\nexport type PipelineType =\n  | StartedPipeline\n  | {\n      status:\n        | typeof RUN_STATUS.START_ERROR\n        | typeof RUN_STATUS.START_PENDING\n        | typeof RUN_STATUS.START_UNINITIALIZED\n    }\n\nexport type StartedPipeline = {\n  uid: string\n  status:\n    | typeof RUN_STATUS.START_SUCCESS\n    | typeof RUN_STATUS.FINISHED\n    | typeof RUN_STATUS.ABORTED\n    | typeof RUN_STATUS.CANCELED\n  runPostData: RunPostData\n  runResult: RunResult\n}\n\nexport type RunResult = {\n  [nodeId: string]: NodeResult\n}\n\nexport type NodeResult = NodeResultPending | NodeResultSuccess | NodeResultError\n\nexport const NODE_RESULT_STATUS = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PENDING: 'pending',\n} as const\n\nexport type NODE_RESULT_STATUS_TYPE =\n  typeof NODE_RESULT_STATUS[keyof typeof NODE_RESULT_STATUS]\n\nexport interface NodeResultBaseType<T extends NODE_RESULT_STATUS_TYPE> {\n  status: T\n  message?: string\n  name: string\n}\n\nexport interface NodeResultPending\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.PENDING> {}\n\nexport interface NodeResultSuccess\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.SUCCESS> {\n  outputPaths: OutputPaths\n}\n\nexport type OutputPaths = {\n  [outputKey: string]: {\n    path: string\n    type: DATA_TYPE\n  }\n}\n\nexport interface NodeResultError\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.ERROR> {\n  message: string\n}\n\nexport const RUN_BTN_OPTIONS = {\n  RUN_NEW: 1,\n  RUN_ALREADY: 2,\n} as const\n\nexport type RUN_BTN_TYPE = typeof RUN_BTN_OPTIONS[keyof typeof RUN_BTN_OPTIONS]\n\nexport const RUN_BTN_LABELS = {\n  [RUN_BTN_OPTIONS.RUN_NEW]: 'RUN ALL',\n  [RUN_BTN_OPTIONS.RUN_ALREADY]: 'RUN',\n} as const\n","export const DISPLAY_DATA_SLICE_NAME = 'displayData'\n\nexport type DisplayData = {\n  timeSeries: {\n    [filePath: string]: TimeSeriesDisplayData\n  }\n  heatMap: {\n    [filePath: string]: HeatMapDisplayData\n  }\n  image: {\n    [filePath: string]: ImageDisplayData\n  }\n  csv: {\n    [filePath: string]: CsvDisplayData\n  }\n  roi: {\n    [filePath: string]: RoiDisplayData\n  }\n  scatter: {\n    [filePath: string]: ScatterDisplayData\n  }\n  bar: {\n    [filePath: string]: BarDisplayData\n  }\n  hdf5: {\n    [filePath: string]: HDF5DisplayData\n  }\n  html: {\n    [filePath: string]: HTMLDisplayData\n  }\n}\n\nexport const DATA_TYPE_SET = {\n  TIME_SERIES: 'timeSeries',\n  HEAT_MAP: 'heatMap',\n  IMAGE: 'image',\n  CSV: 'csv',\n  ROI: 'roi',\n  SCATTER: 'scatter',\n  BAR: 'bar',\n  HDF5: 'hdf5',\n  HTML: 'html',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type DATA_TYPE = typeof DATA_TYPE_SET[keyof typeof DATA_TYPE_SET]\n\ninterface BaseDisplay<T extends DATA_TYPE, Data> {\n  type: T\n  data: Data\n  pending: boolean\n  error: string | null\n  fulfilled: boolean\n}\n\nexport interface TimeSeriesDisplayData\n  extends BaseDisplay<'timeSeries', TimeSeriesData> {\n  xrange: number[]\n  std: TimeSeriesData\n}\nexport type TimeSeriesData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport interface HeatMapDisplayData\n  extends BaseDisplay<'heatMap', HeatMapData> {}\nexport type HeatMapData = number[][]\n\nexport interface ImageDisplayData extends BaseDisplay<'image', ImageData> {}\nexport type ImageData = number[][][]\n\nexport interface CsvDisplayData extends BaseDisplay<'csv', CsvData> {\n  // columns: string[]\n}\nexport type CsvData = number[][]\n\nexport interface RoiDisplayData extends BaseDisplay<'roi', RoiData> {\n  roiUniqueList: string[]\n}\nexport type RoiData = number[][][]\n\nexport interface ScatterDisplayData\n  extends BaseDisplay<'scatter', ScatterData> {}\nexport type ScatterData = number[][][]\n\nexport interface BarDisplayData extends BaseDisplay<'bar', BarData> {}\nexport type BarData = number[][][]\n\nexport interface HDF5DisplayData extends BaseDisplay<'hdf5', HDF5Data> {}\nexport type HDF5Data = number[][][]\n\nexport interface HTMLDisplayData extends BaseDisplay<'html', HTMLData> {}\nexport type HTMLData = string\n","import { DATA_TYPE, DATA_TYPE_SET } from './DisplayDataType'\n\n/**\n * サーバーサイドの値をマッピング\n */\nexport function toDataType(value: string): DATA_TYPE {\n  switch (value) {\n    case 'images':\n      return DATA_TYPE_SET.IMAGE\n    case 'timeseries':\n      return DATA_TYPE_SET.TIME_SERIES\n    case 'heatmap':\n      return DATA_TYPE_SET.HEAT_MAP\n    case 'roi':\n      return DATA_TYPE_SET.ROI\n    case 'scatter':\n      return DATA_TYPE_SET.SCATTER\n    case 'bar':\n      return DATA_TYPE_SET.BAR\n    case 'html':\n      return DATA_TYPE_SET.HTML\n    default:\n      throw new Error(`failed to map dataType: ${value}`)\n  }\n}\n","import { RunPostData, RunResultDTO, OutputPathsDTO } from 'api/run/Run'\n\nimport { toDataType } from '../DisplayData/DisplayDataUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  RunResult,\n  OutputPaths,\n  NODE_RESULT_STATUS,\n  PipelineType,\n  RUN_STATUS,\n  StartedPipeline,\n  NodeResultPending,\n  NodeResultError,\n  NodeResultSuccess,\n  NodeResult,\n} from './PipelineType'\n\nexport function isNodeResultPending(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultPending {\n  return nodeResult.status === NODE_RESULT_STATUS.PENDING\n}\n\nexport function isNodeResultSuccess(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultSuccess {\n  return nodeResult.status === NODE_RESULT_STATUS.SUCCESS\n}\n\nexport function isNodeResultError(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultError {\n  return nodeResult.status === NODE_RESULT_STATUS.ERROR\n}\n\nexport function isStartedPipeline(\n  pipeline: PipelineType,\n): pipeline is StartedPipeline {\n  return (\n    pipeline.status === RUN_STATUS.START_SUCCESS ||\n    pipeline.status === RUN_STATUS.FINISHED ||\n    pipeline.status === RUN_STATUS.ABORTED\n  )\n}\n\nexport function getInitialRunResult(runPostData: RunPostData) {\n  const initialResult: RunResult = {}\n  runPostData.nodeList\n    .filter(({ data }) => data?.type === NODE_TYPE_SET.ALGORITHM)\n    .forEach(({ id, data }) => {\n      initialResult[id] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: data?.label ?? '',\n      }\n    })\n  return initialResult\n}\n\nexport function convertToRunResult(dto: RunResultDTO) {\n  const result: RunResult = {}\n  Object.entries(dto).forEach(([nodeId, nodeResultDto]) => {\n    const outputPath = nodeResultDto.outputPaths\n    if (nodeResultDto.status === 'success' && outputPath != null) {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.SUCCESS,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n        outputPaths: convertToOutputPath(outputPath),\n      }\n    } else {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.ERROR,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n      }\n    }\n  })\n  return result\n}\n\nfunction convertToOutputPath(dto: OutputPathsDTO) {\n  const result: OutputPaths = {}\n  Object.entries(dto).forEach(([functionPath, value]) => {\n    result[functionPath] = {\n      path: value.path,\n      type: toDataType(value.type),\n    }\n  })\n  return result\n}\n","import { RootState } from 'store/store'\n\nimport {\n  NodeResult,\n  NodeResultPending,\n  NodeResultSuccess,\n  RUN_STATUS,\n} from './PipelineType'\nimport {\n  isNodeResultPending,\n  isStartedPipeline,\n  isNodeResultSuccess,\n} from './PipelineUtils'\n\nexport const selectPipelineLatestUid = (state: RootState) => {\n  return state.pipeline.currentPipeline?.uid\n}\n\nexport const selectStartedPipeline = (state: RootState) => {\n  return state.pipeline.run\n}\n\nexport const selectPipelineRunBtn = (state: RootState) => {\n  return state.pipeline.runBtn\n}\n\nexport const selectRunResultPendingList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.values(pipeline.runResult).filter(isNodeResultPending)\n  } else {\n    return []\n  }\n}\n\nexport const selectRunResultPendingNodeIdList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => ({ nodeId, nodeResult }))\n      .filter(isNodeResultPendingAndNodeId)\n      .map(({ nodeId }) => nodeId)\n  } else {\n    return []\n  }\n}\n\nfunction isNodeResultPendingAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultPending\n} {\n  return isNodeResultPending(arg.nodeResult)\n}\n\nexport const selectPipelineStatus = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status\n}\n\nexport const selectPipelineIsCanceled = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.CANCELED\n}\n\nexport const selectPipelineIsStartedSuccess = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.START_SUCCESS\n}\n\nexport const selectPipelineNodeResultSuccessList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => {\n        return {\n          nodeId,\n          nodeResult,\n        }\n      })\n      .filter(isNodeResultSuccessAndNodeId)\n  } else {\n    return []\n  }\n}\n\n// selectPipelineNodeResultSuccessListの返り値の型を正しく認識させるためだけに作った\nfunction isNodeResultSuccessAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultSuccess\n} {\n  return isNodeResultSuccess(arg.nodeResult)\n}\n\nexport const selectPipelineNodeResultStatus =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].status\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultMessage =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].message\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultOutputKeyList =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return Object.keys(nodeResult.outputPaths)\n      }\n    }\n    return []\n  }\n\nconst selectPipelineNodeResultOutputPaths =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return nodeResult.outputPaths\n      }\n    }\n    throw new Error(`key error. nodeId:${nodeId}`)\n  }\n\nexport const selectPipelineNodeResultOutputFilePath =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].path\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n\nexport const selectPipelineNodeResultOutputFileDataType =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].type\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nimport type { Edge, Node } from 'react-flow-renderer'\nimport type {\n  AlgorithmNodeData,\n  InputNodeData,\n} from 'store/slice/FlowElement/FlowElementType'\nimport type { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport type { ParamMap } from 'store/utils/param/ParamType'\n\nexport type RunPostData = {\n  name: string\n  nodeList: Node<NodePostDataType>[]\n  edgeList: Edge[]\n  nwbParam: ParamMap\n  snakemakeParam: ParamMap\n  forceRunList: { nodeId: string; name: string }[]\n}\n\nexport type NodePostDataType = AlgorithmNodePostData | InputNodePostData\n\nexport interface InputNodePostData extends InputNodeData {\n  path: string | string[]\n  fileType: FILE_TYPE\n  param?: {\n    [key: string]: unknown\n  }\n  hdf5Path?: string\n}\n\nexport interface AlgorithmNodePostData extends AlgorithmNodeData {\n  path: string\n  param: ParamMap\n}\n\nexport async function runApi(data: RunPostData): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run`, data)\n  return response.data\n}\n\nexport async function runByUidApi(\n  uid: string,\n  data: Omit<RunPostData, 'name'>,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${uid}`, data)\n  return response.data\n}\n\nexport type RunResultDTO = {\n  [nodeId: string]: {\n    status: string\n    message: string\n    name: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type OutputPathsDTO = {\n  [outputKey: string]: {\n    path: string\n    type: string\n  }\n}\n\nexport async function runResult(data: {\n  uid: string\n  pendingNodeIdList: string[]\n}): Promise<RunResultDTO> {\n  const { uid, pendingNodeIdList } = data\n  const response = await axios.post(`${BASE_URL}/run/result/${uid}`, {\n    pendingNodeIdList,\n  })\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { ThunkApiConfig } from 'store/store'\nimport { PIPELINE_SLICE_NAME } from './PipelineType'\nimport {\n  runApi,\n  runByUidApi,\n  runResult,\n  RunResultDTO,\n  RunPostData,\n} from 'api/run/Run'\nimport {\n  selectPipelineLatestUid,\n  selectRunResultPendingNodeIdList,\n} from './PipelineSelectors'\n\nexport const run = createAsyncThunk<\n  string,\n  { runPostData: RunPostData },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/run`, async ({ runPostData }, thunkAPI) => {\n  try {\n    const responseData = await runApi(runPostData)\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const runByCurrentUid = createAsyncThunk<\n  string,\n  { runPostData: Omit<RunPostData, 'name'> },\n  ThunkApiConfig\n>(\n  `${PIPELINE_SLICE_NAME}/runByCurrentUid`,\n  async ({ runPostData }, thunkAPI) => {\n    const currentUid = selectPipelineLatestUid(thunkAPI.getState())\n    if (currentUid != null) {\n      try {\n        const responseData = await runByUidApi(currentUid, runPostData)\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    } else {\n      return thunkAPI.rejectWithValue('currentUid dose not exist.')\n    }\n  },\n)\n\nexport const pollRunResult = createAsyncThunk<\n  RunResultDTO,\n  {\n    uid: string\n  },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/pollRunResult`, async ({ uid }, thunkAPI) => {\n  const pendingNodeIdList = selectRunResultPendingNodeIdList(\n    thunkAPI.getState(),\n  )\n  try {\n    const responseData = await runResult({ uid, pendingNodeIdList })\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { pollRunResult, run, runByCurrentUid } from './PipelineActions'\nimport {\n  Pipeline,\n  PIPELINE_SLICE_NAME,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n  RUN_STATUS,\n} from './PipelineType'\n\nimport {\n  getInitialRunResult,\n  convertToRunResult,\n  isNodeResultPending,\n} from './PipelineUtils'\n\nconst initialState: Pipeline = {\n  run: {\n    status: RUN_STATUS.START_UNINITIALIZED,\n  },\n  runBtn: RUN_BTN_OPTIONS.RUN_NEW,\n}\n\nexport const pipelineSlice = createSlice({\n  name: PIPELINE_SLICE_NAME,\n  initialState,\n  reducers: {\n    cancelPipeline(state) {\n      state.run.status = RUN_STATUS.CANCELED\n    },\n    setRunBtnOption: (\n      state,\n      action: PayloadAction<{\n        runBtnOption: RUN_BTN_TYPE\n      }>,\n    ) => {\n      state.runBtn = action.payload.runBtnOption\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.run.status === RUN_STATUS.START_SUCCESS) {\n          state.run.runResult = {\n            ...state.run.runResult, // pendingのNodeResultはそのままでsuccessもしくはerrorのみ上書き\n            ...convertToRunResult(action.payload),\n          }\n          const runResultPendingList = Object.values(\n            state.run.runResult,\n          ).filter(isNodeResultPending)\n          if (runResultPendingList.length === 0) {\n            // 終了\n            state.run.status = RUN_STATUS.FINISHED\n          }\n        }\n      })\n      .addCase(pollRunResult.rejected, (state, action) => {\n        state.run.status = RUN_STATUS.ABORTED\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.meta.arg,\n        }\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addMatcher(\n        isAnyOf(run.pending, runByCurrentUid.pending),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_PENDING,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          const uid = action.payload\n          state.run = {\n            uid,\n            status: RUN_STATUS.START_SUCCESS,\n            runResult: getInitialRunResult({ name: '', ...runPostData }),\n            runPostData: { name: '', ...runPostData },\n          }\n          state.currentPipeline = {\n            uid: action.payload,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.rejected, runByCurrentUid.rejected),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_ERROR,\n          }\n        },\n      )\n  },\n})\n\nexport const { cancelPipeline, setRunBtnOption } = pipelineSlice.actions\n\nexport default pipelineSlice.reducer\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\nimport Grow from '@mui/material/Grow'\nimport Paper from '@mui/material/Paper'\nimport Popper from '@mui/material/Popper'\nimport MenuItem from '@mui/material/MenuItem'\nimport MenuList from '@mui/material/MenuList'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nimport { useSnackbar } from 'notistack'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport {\n  RUN_BTN_LABELS,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n} from 'store/slice/Pipeline/PipelineType'\nimport { selectPipelineRunBtn } from 'store/slice/Pipeline/PipelineSelectors'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\n\nexport const RunButtons = React.memo<UseRunPipelineReturnType>((props) => {\n  const {\n    uid,\n    isStartedSuccess,\n    filePathIsUndefined,\n    handleCancelPipeline,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const runBtnOption = useSelector(selectPipelineRunBtn)\n\n  const [dialogOpen, setDialogOpen] = React.useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n  const handleClick = () => {\n    if (!filePathIsUndefined) {\n      if (runBtnOption === RUN_BTN_OPTIONS.RUN_NEW) {\n        setDialogOpen(true)\n      } else {\n        handleRunPipelineByUid()\n      }\n    } else {\n      enqueueSnackbar('please select input file', { variant: 'error' })\n    }\n  }\n  const onClickDialogRun = (name: string) => {\n    handleRunPipeline(name)\n    setDialogOpen(false)\n  }\n  const onClickCancel = () => {\n    handleCancelPipeline()\n  }\n  const [menuOpen, setMenuOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLDivElement>(null)\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    option: RUN_BTN_TYPE,\n  ) => {\n    dispatch(setRunBtnOption({ runBtnOption: option }))\n    setMenuOpen(false)\n  }\n  const handleToggle = () => {\n    setMenuOpen((prevOpen) => !prevOpen)\n  }\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n    setMenuOpen(false)\n  }\n  const uidExists = uid != null\n  return (\n    <>\n      <ButtonGroup\n        sx={{\n          margin: 1,\n        }}\n        variant=\"contained\"\n        ref={anchorRef}\n        disabled={isStartedSuccess}\n      >\n        <Button onClick={handleClick}>{RUN_BTN_LABELS[runBtnOption]}</Button>\n        <Button size=\"small\" onClick={handleToggle}>\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={menuOpen}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList>\n                  {Object.values(RUN_BTN_OPTIONS).map((option) => (\n                    <MenuItem\n                      key={option}\n                      disabled={\n                        !uidExists && option === RUN_BTN_OPTIONS.RUN_ALREADY\n                      }\n                      selected={option === runBtnOption}\n                      onClick={(event) => handleMenuItemClick(event, option)}\n                    >\n                      {RUN_BTN_LABELS[option]}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n      <Button\n        variant=\"outlined\"\n        endIcon={<CloseIcon />}\n        onClick={onClickCancel}\n        sx={{\n          margin: 1,\n          marginRight: 4,\n        }}\n      >\n        Cancel\n      </Button>\n      <RunDialog\n        open={dialogOpen}\n        handleRun={onClickDialogRun}\n        handleClose={() => setDialogOpen(false)}\n      />\n    </>\n  )\n})\n\nconst RunDialog = React.memo<{\n  open: boolean\n  handleRun: (name: string) => void\n  handleClose: () => void\n}>(({ open, handleClose, handleRun }) => {\n  const [name, setName] = React.useState('New flow')\n  const [error, setError] = React.useState<string | null>(null)\n  const onClickRun = () => {\n    if (name !== '') {\n      handleRun(name)\n    } else {\n      setError('name is empty')\n    }\n  }\n  const onChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    if (event.target.value !== '') {\n      setError(null)\n    }\n  }\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Name and run flowchart</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"name\"\n          autoFocus\n          margin=\"dense\"\n          fullWidth\n          variant=\"standard\"\n          onChange={onChangeName}\n          error={error != null}\n          helperText={error}\n          value={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"inherit\" variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button onClick={onClickRun} color=\"primary\" variant=\"outlined\">\n          Run\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","import React from 'react'\nimport Box from '@mui/material/Box'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { NWBSettingButton } from './FlowChart/NWB'\nimport { SnakemakeButton } from './FlowChart/Snakemake'\nimport { RunButtons } from './RunButtons'\n\nexport const ToolBar = React.memo<UseRunPipelineReturnType>((props) => (\n  <Box\n    style={{\n      position: 'absolute',\n      float: 'right',\n      textAlign: 'right',\n      top: -7,\n      right: 10,\n      zIndex: 4,\n      textTransform: 'none',\n    }}\n  >\n    <SnakemakeButton />\n    <NWBSettingButton />\n    <RunButtons {...props} />\n  </Box>\n))\n","import {\n  CsvInputNode,\n  ImageInputNode,\n  HDF5InputNode,\n  InputNodeType,\n  FILE_TYPE_SET,\n} from './InputNodeType'\n\nexport function isImageInputNode(\n  inputNode: InputNodeType,\n): inputNode is ImageInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.IMAGE\n}\n\nexport function isCsvInputNode(\n  inputNode: InputNodeType,\n): inputNode is CsvInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.CSV\n}\n\nexport function isHDF5InputNode(\n  inputNode: InputNodeType,\n): inputNode is HDF5InputNode {\n  return inputNode.fileType === FILE_TYPE_SET.HDF5\n}\n","import { RootState } from 'store/store'\nimport {\n  isHDF5InputNode,\n  isCsvInputNode,\n  isImageInputNode,\n} from './InputNodeUtils'\n\nexport const selectInputNode = (state: RootState) => state.inputNode\n\nexport const selectInputNodeById = (nodeId: string) => (state: RootState) =>\n  state.inputNode[nodeId]\n\nexport const selectInputNodeDefined = (nodeId: string) => (state: RootState) =>\n  Object.keys(state.inputNode).includes(nodeId)\n\nexport const selectInputNodeFileType = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).fileType\n\nexport const selectInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) =>\n    selectInputNodeById(nodeId)(state).selectedFilePath\n\nexport const selectCsvInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isCsvInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectImageInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isImageInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectHDF5InputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectFilePathIsUndefined = (state: RootState) =>\n  Object.values(state.inputNode).filter(\n    (inputNode) => inputNode.selectedFilePath === undefined,\n  ).length > 0\n\nexport const selectInputNodeParam = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).param\n\nconst selectCsvInputNodeParam = (nodeId: string) => (state: RootState) => {\n  const inputNode = selectInputNodeById(nodeId)(state)\n  if (isCsvInputNode(inputNode)) {\n    return inputNode.param\n  } else {\n    throw new Error(`The InputNode is not CsvInputNode. (nodeId: ${nodeId})`)\n  }\n}\n\nexport const selectCsvInputNodeParamSetHeader =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setHeader\n\nexport const selectCsvInputNodeParamSetIndex =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setIndex\n\nexport const selectCsvInputNodeParamTranspose =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).transpose\n\nexport const selectInputNodeHDF5Path =\n  (nodeId: string) => (state: RootState) => {\n    const item = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(item)) {\n      return item.hdf5Path\n    } else {\n      return undefined\n    }\n  }\n","import { useSelector } from 'react-redux'\nimport { selectHandleTypeColor } from 'store/slice/HandleTypeColor/HandleTypeColorSelectors'\n\nexport function useHandleColor(type: string) {\n  const color = useSelector(selectHandleTypeColor(type))\n  return color\n}\n","import { RootState } from '../../store'\n\nexport const selectHandleTypeColor = (key: string) => (state: RootState) => {\n  if (state.handleColor.colorMap[key] != null) {\n    return state.handleColor.colorMap[key]\n  } else {\n    return undefined\n  }\n}\n","import { RootState } from '../../store'\nimport { FILE_TREE_TYPE } from './FilesTreeType'\n\nexport const selectFilesTree =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) => {\n    if (state.filesTree[fileType] != null) {\n      return state.filesTree[fileType]\n    } else {\n      return undefined\n    }\n  }\n\nexport const selectFilesTreeNodes =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.tree\n\nexport const selectFilesIsLatest =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLatest ?? false\n\nexport const selectFilesIsLoading =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLoading ?? false\n","export const FILES_TREE_SLICE_NAME = 'filesTree'\n\nexport type TreeNodeTypeDTO = DirNodeDTO | FileNodeDTO\n\nexport interface NodeBaseDTO {\n  path: string\n  name: string\n  isdir: boolean\n}\n\nexport interface DirNodeDTO extends NodeBaseDTO {\n  isdir: true\n  nodes: TreeNodeTypeDTO[]\n}\n\nexport interface FileNodeDTO extends NodeBaseDTO {\n  isdir: false\n}\n\nexport type TreeNodeType = DirNode | FileNode\n\nexport interface NodeBase {\n  path: string\n  name: string\n  isDir: boolean\n}\n\nexport interface DirNode extends NodeBase {\n  isDir: true\n  nodes: TreeNodeType[]\n}\n\nexport interface FileNode extends NodeBase {\n  isDir: false\n}\n\nexport interface FilesTree {\n  [fileType: string]: {\n    isLatest: boolean\n    isLoading: boolean\n    tree: TreeNodeType[]\n  }\n}\n\nexport const FILE_TREE_TYPE_SET = {\n  IMAGE: 'image',\n  CSV: 'csv',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  ALL: 'all',\n} as const\n\nexport type FILE_TREE_TYPE =\n  typeof FILE_TREE_TYPE_SET[keyof typeof FILE_TREE_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\n\nimport {\n  FILES_TREE_SLICE_NAME,\n  FILE_TREE_TYPE,\n  TreeNodeTypeDTO,\n} from './FilesTreeType'\n\nexport const getFilesTree = createAsyncThunk<TreeNodeTypeDTO[], FILE_TREE_TYPE>(\n  `${FILES_TREE_SLICE_NAME}/getFilesTree`,\n  async (fileType, thunkAPI) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/files`, {\n        params: {\n          file_type: fileType,\n        },\n      })\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { TreeNodeTypeDTO, TreeNodeType } from './FilesTreeType'\n\nexport function convertToTreeNodeType(dto: TreeNodeTypeDTO[]): TreeNodeType[] {\n  return dto.map((node) =>\n    node.isdir\n      ? {\n          path: node.path,\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n        }\n      : {\n          path: node.path,\n          name: node.name,\n          isDir: false,\n        },\n  )\n}\n\nexport function isDirNodeByPath(path: string, tree: TreeNodeType[]): boolean {\n  const node = getNodeByPath(path, tree)\n  if (node != null) {\n    return node.isDir\n  } else {\n    throw new Error(`failed to get node: ${path}`)\n  }\n}\n\nexport function getNodeByPath(\n  path: string,\n  tree: TreeNodeType[],\n): TreeNodeType | null {\n  let targetNode: TreeNodeType | null = null\n  for (const node of tree) {\n    if (path === node.path) {\n      targetNode = node\n      break\n    } else {\n      if (node.isDir) {\n        targetNode = getNodeByPath(path, node.nodes)\n        if (targetNode != null) {\n          break\n        }\n      }\n    }\n  }\n  return targetNode\n}\n","import Dialog from '@mui/material/Dialog'\nimport { useDispatch, useSelector } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\nimport Checkbox, { CheckboxProps } from '@mui/material/Checkbox'\n\nimport Box from '@mui/material/Box'\nimport { useTheme } from '@mui/material/styles'\nimport React from 'react'\n\nimport {\n  selectFilesIsLatest,\n  selectFilesIsLoading,\n  selectFilesTreeNodes,\n} from 'store/slice/FilesTree/FilesTreeSelectors'\nimport { getFilesTree } from 'store/slice/FilesTree/FilesTreeAction'\nimport {\n  FILE_TREE_TYPE,\n  FILE_TREE_TYPE_SET,\n  TreeNodeType,\n} from 'store/slice/FilesTree/FilesTreeType'\nimport {\n  getNodeByPath,\n  isDirNodeByPath,\n} from 'store/slice/FilesTree/FilesTreeUtils'\n\ntype FileSelectDialogProps = {\n  initialFilePath: string[] | string\n  onClickOk: (path: string[] | string) => void\n  fileType?: FILE_TREE_TYPE\n  title?: string\n  open: boolean\n  onClickCancel: () => void\n  onClose?: () => void\n  multiSelect: boolean\n}\n\nexport const FileSelectDialog = React.memo<FileSelectDialogProps>(\n  function FileSelectDialog({\n    open,\n    initialFilePath,\n    onClickCancel,\n    onClickOk,\n    onClose,\n    title,\n    fileType = FILE_TREE_TYPE_SET.ALL,\n    multiSelect,\n  }) {\n    React.useEffect(() => {\n      setSelectedFilePath(initialFilePath)\n    }, [initialFilePath])\n    const [selectedFilePath, setSelectedFilePath] =\n      React.useState(initialFilePath)\n    const onCancel = () => {\n      setSelectedFilePath(initialFilePath) // 選択内容を反映させない\n      onClickCancel()\n    }\n    const onOk = () => {\n      onClickOk(selectedFilePath)\n    }\n    const theme = useTheme()\n    return (\n      <Dialog open={open} onClose={onClose} fullWidth>\n        <DialogTitle>{title ?? 'Select File'}</DialogTitle>\n        <DialogContent dividers>\n          <div\n            style={{\n              height: 300,\n              overflow: 'auto',\n              marginBottom: theme.spacing(1),\n              border: '1px solid',\n              padding: theme.spacing(1),\n              borderColor: theme.palette.divider,\n            }}\n          >\n            <FileTreeView\n              setSelectedFilePath={setSelectedFilePath}\n              multiSelect={multiSelect}\n              fileType={fileType}\n              selectedFilePath={selectedFilePath}\n            />\n          </div>\n          <Typography variant=\"subtitle1\">Select File</Typography>\n          <FilePathSelectedListView path={selectedFilePath} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  },\n)\n\nconst FileTreeView = React.memo<{\n  setSelectedFilePath: (path: string[] | string) => void\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  fileType: FILE_TREE_TYPE\n}>(({ setSelectedFilePath, selectedFilePath, fileType, multiSelect }) => {\n  const [tree, isLoading] = useFileTree(fileType)\n  const onNodeSelectHandler = (\n    event: React.SyntheticEvent,\n    nodeIds: Array<string> | string,\n  ) => {\n    if (!multiSelect && tree != null) {\n      // multiSelectがfalseの場合、ディレクトリは選択しない\n      const path = nodeIds as string\n      if (!isDirNodeByPath(path, tree)) {\n        setSelectedFilePath(path)\n      }\n    }\n  }\n  // multiSelectでチェックボックスを使用する時用のハンドラ\n  const onCheckFile = (path: string) => {\n    if (Array.isArray(selectedFilePath)) {\n      if (selectedFilePath.includes(path)) {\n        setSelectedFilePath(\n          selectedFilePath.filter((selectedPath) => path !== selectedPath),\n        )\n      } else {\n        setSelectedFilePath(selectedFilePath.concat(path))\n      }\n    }\n  }\n  const onCheckDir = (path: string, checked: boolean) => {\n    if (tree != null && Array.isArray(selectedFilePath)) {\n      const node = getNodeByPath(path, tree)\n      if (node != null && node.isDir) {\n        const childrenFilePathList = node.nodes\n          .filter((node) => !node.isDir)\n          .map((node) => node.path)\n        if (checked) {\n          setSelectedFilePath(\n            // concat時の重複を削除\n            Array.from(new Set(selectedFilePath.concat(childrenFilePathList))),\n          )\n        } else {\n          setSelectedFilePath(\n            selectedFilePath.filter(\n              (selectedPath) => !childrenFilePathList.includes(selectedPath),\n            ),\n          )\n        }\n      }\n    }\n  }\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView\n        disableSelection={multiSelect}\n        multiSelect={multiSelect}\n        onNodeSelect={onNodeSelectHandler}\n      >\n        {tree?.map((node) => (\n          <TreeNode\n            node={node}\n            selectedFilePath={selectedFilePath}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: TreeNodeType\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  onCheckFile: (path: string) => void\n  onCheckDir: (path: string, checked: boolean) => void\n}>(({ node, selectedFilePath, multiSelect, onCheckDir, onCheckFile }) => {\n  if (node.isDir) {\n    const allChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => selectedFilePath.includes(filePath))\n    const allNotChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => !selectedFilePath.includes(filePath))\n    const indeterminate = !(allChecked || allNotChecked)\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={\n          multiSelect && node.nodes.filter((node) => !node.isDir).length > 0 ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                indeterminate,\n                checked: allChecked,\n                onClick: (e) => {\n                  e.stopPropagation() // on/offのクリックにつられてTreeを開閉させないようにする\n                },\n                onChange: (e) => onCheckDir(node.path, e.target.checked),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode\n            node={childNode}\n            selectedFilePath={selectedFilePath}\n            key={i}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={\n          multiSelect ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                checked:\n                  Array.isArray(selectedFilePath) &&\n                  selectedFilePath.includes(node.path),\n                onChange: () => onCheckFile(node.path),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n        onClick={() => onCheckFile(node.path)}\n      />\n    )\n  }\n})\n\nconst TreeItemLabel = React.memo<{\n  label: string\n  checkboxProps: CheckboxProps\n}>(({ label, checkboxProps }) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box flexGrow={1}>{label}</Box>\n      <Box>\n        <Checkbox\n          {...checkboxProps}\n          disableRipple\n          size=\"small\"\n          sx={{\n            marginRight: '4px',\n            padding: '2px',\n          }}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectedListView = React.memo<{ path: string | string[] }>(\n  ({ path }) => {\n    return (\n      <Typography variant=\"subtitle2\">\n        {!!path\n          ? Array.isArray(path)\n            ? path.map((text) => <li>{text}</li>)\n            : path\n          : '---'}\n      </Typography>\n    )\n  },\n)\n\nfunction useFileTree(\n  fileType: FILE_TREE_TYPE,\n): [TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectFilesTreeNodes(fileType))\n  const isLatest = useSelector(selectFilesIsLatest(fileType))\n  const isLoading = useSelector(selectFilesIsLoading(fileType))\n  React.useEffect(() => {\n    if (!isLatest && !isLoading) {\n      dispatch(getFilesTree(fileType))\n    }\n  }, [isLatest, isLoading, fileType, dispatch])\n  return [tree, isLoading]\n}\n","import React from 'react'\nimport LinearProgress, {\n  LinearProgressProps,\n} from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\n\nexport const LinearProgressWithLabel = React.memo<\n  LinearProgressProps & { value: number }\n>((props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  )\n})\n","import { FileUploaderType } from './FileUploaderType'\n\nexport const inistialUploaderState: FileUploaderType = {\n  path: undefined,\n  fileName: undefined,\n  isUninitialized: true,\n  pending: false,\n  fulfilled: false,\n  uploadingProgress: undefined,\n  error: undefined,\n}\n","import { RootState } from 'store/store'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nexport const selectFileUploader = (id: string) => (state: RootState) => {\n  if (Object.keys(state.fileUploader).includes(id)) {\n    return state.fileUploader[id]\n  } else {\n    return inistialUploaderState\n  }\n}\n\nexport const selectUploadFilePath = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).path\n\nexport const selectUploadFileName = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fileName\n\nexport const selectFileUploadIsUninitialized =\n  (id: string) => (state: RootState) =>\n    selectFileUploader(id)(state).isUninitialized\n\nexport const selectFileUploadIsPending = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).pending\n\nexport const selectFileUploadIsFulfilled = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fulfilled\n\nexport const selectFileUploadProgress = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).uploadingProgress\n\nexport const selectFileUploadError = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).error\n","import { nanoid } from '@reduxjs/toolkit'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uploadFile } from './FileUploaderActions'\nimport {\n  selectFileUploadIsPending,\n  selectUploadFilePath,\n  selectFileUploadIsFulfilled,\n  selectFileUploadProgress,\n  selectFileUploadIsUninitialized,\n  selectFileUploadError,\n} from './FileUploaderSelectors'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\ntype UseFileUploaderProps = {\n  fileType?: FILE_TYPE\n  nodeId?: string\n}\n\nexport function useFileUploader({ fileType, nodeId }: UseFileUploaderProps) {\n  const dispatch = useDispatch()\n  const id = React.useRef(nanoid())\n  const onUploadFile = React.useCallback(\n    (formData: FormData, fileName: string) => {\n      dispatch(\n        uploadFile({\n          requestId: id.current,\n          nodeId,\n          fileName,\n          formData,\n          fileType,\n        }),\n      )\n    },\n    [dispatch, fileType, nodeId],\n  )\n  const uninitialized = useSelector(selectFileUploadIsUninitialized(id.current))\n  const filePath = useSelector(selectUploadFilePath(id.current))\n  const pending = useSelector(selectFileUploadIsPending(id.current))\n  const fulfilled = useSelector(selectFileUploadIsFulfilled(id.current))\n  const progress = useSelector(selectFileUploadProgress(id.current))\n  const error = useSelector(selectFileUploadError(id.current))\n  return {\n    filePath,\n    uninitialized,\n    pending,\n    fulfilled,\n    progress,\n    error,\n    onUploadFile,\n  }\n}\n","import React from 'react'\nimport { Button, Typography } from '@mui/material'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nimport { FileSelectDialog } from 'components/FileSelectDialog'\nimport {\n  FILE_TREE_TYPE,\n  FILE_TREE_TYPE_SET,\n} from 'store/slice/FilesTree/FilesTreeType'\nimport { LinearProgressWithLabel } from './LinerProgressWithLabel'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { getLabelByPath } from 'store/slice/FlowElement/FlowElementUtils'\n\nexport const FileSelect = React.memo<{\n  multiSelect?: boolean\n  filePath: string | string[]\n  fileType: FILE_TYPE\n  nodeId?: string\n  onChangeFilePath: (path: string | string[]) => void\n}>(({ multiSelect = false, filePath, nodeId, fileType, onChangeFilePath }) => {\n  const {\n    // filePath: uploadedFilePath,\n    onUploadFile,\n    pending,\n    uninitialized,\n    progress,\n    error,\n  } = useFileUploader({ fileType, nodeId })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n  return (\n    <>\n      {!uninitialized && pending && progress != null && (\n        <div style={{ marginLeft: 2, marginRight: 2 }}>\n          <LinearProgressWithLabel value={progress} />\n        </div>\n      )}\n      <FileSelectImple\n        multiSelect={multiSelect}\n        filePath={filePath}\n        onSelectFile={onChangeFilePath}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={fileType}\n        selectButtonLabel={`Select ${fileType}`}\n      />\n      {error != null && (\n        <Typography variant=\"caption\" color=\"error\">\n          {error}\n        </Typography>\n      )}\n    </>\n  )\n})\n\ntype FileSelectImpleProps = {\n  multiSelect?: boolean\n  filePath: string | string[]\n  onUploadFile: (formData: FormData, fileName: string) => void\n  onSelectFile: (path: string | string[]) => void\n  fileTreeType?: FILE_TREE_TYPE\n  selectButtonLabel?: string\n  uploadButtonLabel?: string\n}\n\nexport const FileSelectImple = React.memo<FileSelectImpleProps>(\n  ({\n    multiSelect = false,\n    filePath,\n    onSelectFile,\n    onUploadFile,\n    fileTreeType,\n    selectButtonLabel,\n    uploadButtonLabel,\n  }) => {\n    const onFileInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.preventDefault()\n      if (event.target.files != null && event.target.files[0] != null) {\n        const file = event.target.files[0]\n        const formData = new FormData()\n        formData.append('file', file)\n        const fileName = file.name\n        onUploadFile(formData, fileName)\n      }\n    }\n    const inputRef = React.useRef<HTMLInputElement>(null)\n    const onClick = () => {\n      if (inputRef.current != null) {\n        inputRef.current.click()\n      }\n    }\n    const [open, setOpen] = React.useState(false)\n    const accept = getFileInputAccept(fileTreeType)\n    const fileName = getLabelByPath(filePath)\n    return (\n      <div\n        style={{\n          padding: 5,\n        }}\n      >\n        <ButtonGroup size=\"small\" style={{ marginRight: 4 }}>\n          <Button variant=\"outlined\" onClick={() => setOpen(true)}>\n            {!!selectButtonLabel ? selectButtonLabel : 'Select File'}\n          </Button>\n          <Button onClick={onClick} variant=\"outlined\">\n            {!!uploadButtonLabel ? uploadButtonLabel : 'or Upload'}\n          </Button>\n        </ButtonGroup>\n        <div>\n          <input\n            ref={inputRef}\n            type=\"file\"\n            onChange={onFileInputChange}\n            accept={accept}\n            style={{\n              visibility: 'hidden',\n              width: 0,\n              height: 0,\n            }}\n          />\n          <Typography className=\"selectFilePath\" variant=\"caption\">\n            {!!fileName ? fileName : 'No file is selected.'}\n          </Typography>\n        </div>\n        <FileSelectDialog\n          multiSelect={multiSelect}\n          initialFilePath={filePath}\n          open={open}\n          onClickOk={(path) => {\n            onSelectFile(path)\n            setOpen(false)\n          }}\n          onClickCancel={() => {\n            setOpen(false)\n          }}\n          onClose={() => setOpen(false)}\n          fileType={fileTreeType}\n        />\n      </div>\n    )\n  },\n)\n\nfunction getFileInputAccept(fileType: FILE_TREE_TYPE | undefined) {\n  switch (fileType) {\n    case FILE_TREE_TYPE_SET.IMAGE:\n      return '.tif'\n    case FILE_TREE_TYPE_SET.CSV:\n      return '.csv'\n    case FILE_TREE_TYPE_SET.HDF5:\n      return '.hdf5,.nwb'\n    default:\n      return undefined\n  }\n}\n","import { Connection } from 'react-flow-renderer'\n\nexport function toHandleId(nodeId: string, name: string, type: string) {\n  return `${nodeId}--${name}--${type}`\n}\n\nexport function getHandleType(handleId: string) {\n  return handleId.split('--')[2]\n}\n\nexport function isValidConnection(connection: Connection) {\n  if (connection.sourceHandle != null && connection.targetHandle != null) {\n    return (\n      getHandleType(connection.sourceHandle) ===\n      getHandleType(connection.targetHandle)\n    )\n  } else {\n    return true\n  }\n}\n","import React, { CSSProperties } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport {\n  selectImageInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { FileSelect } from './FileSelect'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\n// Connection部分のレイアウト\nconst sourceHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  top: 15,\n  border: '1px solid',\n  // borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const ImageFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <ImageFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst ImageFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected: elementSelected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectImageInputNodeSelectedFilePath(nodeId),\n      (a, b) => (a != null && b != null ? arrayEqualityFn(a, b) : a === b),\n    )\n    const onChangeFilePath = (path: string[]) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n\n    const theme = useTheme()\n    const returnType = 'ImageData'\n    const imageColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '250px',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          multiSelect\n          onChangeFilePath={(path) => {\n            if (Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.IMAGE}\n          filePath={filePath ?? []}\n        />\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'image', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: imageColor,\n          }}\n          isValidConnection={isValidConnection}\n        />\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nconst selectDisplayData = (state: RootState) => state.displayData\n\nexport const selectTimeSeriesData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].data\n\nexport const selectTimeSeriesXrange =\n  (filePath: string) => (state: RootState) =>\n    selectDisplayData(state).timeSeries[filePath].xrange\n\nexport const selectTimeSeriesStd = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].std\n\nexport const selectTimeSeriesDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).timeSeries).includes(filePath)\n\nexport const selectTimeSeriesDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].pending\n\nexport const selectTimeSeriesDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].fulfilled\n\nexport const selectTimeSeriesDataError =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).timeSeries[filePath].error\n      : null\n\nexport const selectHeatMapData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].data\n\nexport const selectHeatMapDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).heatMap).includes(filePath)\n\nexport const selectHeatMapDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].pending\n\nexport const selectHeatMapDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].fulfilled\n\nexport const selectHeatMapDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).heatMap[filePath].error\n      : null\n\nexport const selectImageData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).image[filePath]\n\nexport const selectImageDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).image).includes(filePath)\n\nexport const selectImageDataError = (filePath: string) => (state: RootState) =>\n  selectImageDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).image[filePath].error\n    : null\n\nexport const selectImageDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].pending\n\nexport const selectImageDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].fulfilled\n\nexport const selectImageDataMaxSize =\n  (filePath: string) => (state: RootState) => {\n    if (!selectImageDataIsPending(filePath)(state)) {\n      return selectImageData(filePath)(state).data.length - 1\n    } else {\n      return 0\n    }\n  }\n\nexport const selectActiveImageData =\n  (filePath: string, activeIndex: number) => (state: RootState) => {\n    return selectImageData(filePath)(state).data[activeIndex]\n  }\n\nexport const selectCsvData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).csv[filePath].data\n\nexport const selectCsvDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).csv).includes(filePath)\n\nexport const selectCsvDataError = (filePath: string) => (state: RootState) =>\n  selectCsvDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).csv[filePath].error\n    : null\n\nexport const selectCsvDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].pending\n\nexport const selectCsvDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].fulfilled\n\nexport const selectRoiData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).roi[filePath]?.data[0] ?? []\n\nexport const selectRoiDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).roi).includes(filePath)\n\nexport const selectRoiDataError = (filePath: string) => (state: RootState) =>\n  selectRoiDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).roi[filePath].error\n    : null\n\nexport const selectRoiDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].pending\n\nexport const selectRoiDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].fulfilled\n\nexport const selectRoiUniqueList = (filePath: string) => (state: RootState) => {\n  if (selectRoiDataIsFulfilled(filePath)(state)) {\n    return selectDisplayData(state).roi[filePath].roiUniqueList\n  }\n  return null\n}\n\nexport const selectScatterData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).scatter[filePath]?.data ?? []\n\nexport const selectScatterDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).scatter).includes(filePath)\n\nexport const selectScatterDataError =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).scatter[filePath].error\n      : null\n\nexport const selectScatterDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].pending\n\nexport const selectScatterDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].fulfilled\n\nexport const selectBarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.data ?? []\n\nexport const selectBarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).bar).includes(filePath)\n\nexport const selectBarDataError = (filePath: string) => (state: RootState) =>\n  selectBarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).bar[filePath].error\n    : null\n\nexport const selectBarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].pending\n\nexport const selectBarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].fulfilled\n\nexport const selectHTMLData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).html[filePath]?.data ?? ''\n\nexport const selectHTMLDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).html).includes(filePath)\n\nexport const selectHTMLDataError = (filePath: string) => (state: RootState) =>\n  selectHTMLDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).html[filePath].error\n    : null\n\nexport const selectHTMLDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].pending\n\nexport const selectHTMLDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].fulfilled\n","import { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\n\nexport const VISUALIZE_ITEM_SLICE_NAME = 'visualaizeItem'\n\nexport type VisualaizeItem = {\n  selectedItemId: number | null\n  items: {\n    [itemId: number]: VisualaizeItemType\n  }\n  layout: ItemLayout\n}\n\nexport type ItemLayout = number[][] // itemIdをrow,columnで並べる\n\nexport type VisualaizeItemType = DisplayDataItem\n\nexport interface ItemBaseType<T extends VISUALIZE_ITEM_TYPE> {\n  itemType: T\n  width: number\n  height: number\n}\n\nexport type ColorType = {\n  rgb: string\n  offset: string\n}\n\nexport const VISUALIZE_ITEM_TYPE_SET = {\n  DISPLAY_DATA: 'displayData',\n} as const\n\nexport type VISUALIZE_ITEM_TYPE =\n  typeof VISUALIZE_ITEM_TYPE_SET[keyof typeof VISUALIZE_ITEM_TYPE_SET]\n\nexport type DisplayDataItem =\n  | ImageItem\n  | TimeSeriesItem\n  | HeatMapItem\n  | CsvItem\n  | RoiItem\n  | ScatterItem\n  | BarItem\n  | HDF5Item\n  | HTMLItem\n  | FluoItem\n  | BehaviorItem\n\nexport interface DisplayDataItemBaseType extends ItemBaseType<'displayData'> {\n  filePath: string | null\n  nodeId: string | null\n  dataType: DATA_TYPE | null\n  isWorkflowDialog: boolean\n}\n\nexport interface ImageItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.IMAGE\n  activeIndex: number\n  startIndex: number\n  endIndex: number\n  showticklabels: boolean\n  zsmooth: string | boolean\n  showline: boolean\n  showgrid: boolean\n  showscale: boolean\n  colors: ColorType[]\n  alpha: number\n  roiItem: RoiItem | null\n  roiAlpha: number\n  duration: number\n  clickedDataId?: string\n  saveFileName: string\n  saveFormat: string\n}\n\nexport interface TimeSeriesItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.TIME_SERIES\n  offset: boolean\n  span: number\n  showgrid: boolean\n  showline: boolean\n  showticklabels: boolean\n  zeroline: boolean\n  xrange: {\n    left: number | undefined\n    right: number | undefined\n  }\n  maxIndex: number\n  refImageItemId?: number\n  drawOrderList: string[]\n  drawIndexMap: DrawIndexMap\n}\n\nexport interface DrawIndexMap {\n  [index: string]: boolean\n}\n\nexport interface HeatMapItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HEAT_MAP\n  showscale: boolean\n  colors: ColorType[]\n}\nexport interface CsvItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.CSV\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\nexport interface RoiItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.ROI\n  // colors: ColorType[]\n}\n\nexport interface ScatterItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.SCATTER\n  xIndex: number\n  yIndex: number\n}\n\nexport interface BarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BAR\n}\n\nexport interface HDF5Item extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HDF5\n}\n\nexport interface HTMLItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HTML\n}\n\nexport interface FluoItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.FLUO\n}\n\nexport interface BehaviorItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BEHAVIOR\n}\n","import { DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  VisualaizeItemType,\n  DisplayDataItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  ImageItem,\n  TimeSeriesItem,\n  HeatMapItem,\n  RoiItem,\n  ScatterItem,\n  CsvItem,\n} from './VisualizeItemType'\n\nexport function isDisplayDataItem(\n  item: VisualaizeItemType,\n): item is DisplayDataItem {\n  return item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA\n}\n\nexport function isImageItem(item: VisualaizeItemType): item is ImageItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.IMAGE\n  )\n}\n\nexport function isTimeSeriesItem(\n  item: VisualaizeItemType,\n): item is TimeSeriesItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.TIME_SERIES\n  )\n}\n\nexport function isCsvItem(item: VisualaizeItemType): item is CsvItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.CSV\n  )\n}\n\nexport function isHeatMapItem(item: VisualaizeItemType): item is HeatMapItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HEAT_MAP\n  )\n}\n\nexport function isRoiItem(item: VisualaizeItemType): item is RoiItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.ROI\n  )\n}\n\nexport function isScatterItem(item: VisualaizeItemType): item is ScatterItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.SCATTER\n  )\n}\n","import { RootState } from 'store/store'\nimport {\n  selectRoiData,\n  selectRoiUniqueList,\n} from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport {\n  isDisplayDataItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isHeatMapItem,\n  isCsvItem,\n  isScatterItem,\n} from './VisualizeItemUtils'\n\nexport const selectSelectedVisualizeItemId = (state: RootState) =>\n  state.visualaizeItem.selectedItemId\n\nexport const selectVisualizeImageItemIdList = (state: RootState) =>\n  Object.keys(state.visualaizeItem.items)\n    .map(Number)\n    .filter((itemId) => {\n      const item = selectVisualizeItems(state)[itemId]\n      return isImageItem(item) && !item.isWorkflowDialog\n    })\n\nexport const selectVisualizeItems = (state: RootState) =>\n  state.visualaizeItem.items\n\nexport const selectVisualizeItemLayout = (state: RootState) =>\n  state.visualaizeItem.layout\n\nexport const selectVisualizeItemIsWorkflowDialog =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItems(state)[itemId].isWorkflowDialog\n  }\n\nexport const selectVisualizeItemIdForWorkflowDialog =\n  (nodeId: string, filePath: string, dataType: DATA_TYPE) =>\n  (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    let targetItemId: null | number = null\n    for (const [itemId, value] of Object.entries(items)) {\n      if (\n        value.nodeId === nodeId &&\n        value.filePath === filePath &&\n        value.dataType === dataType &&\n        value.isWorkflowDialog\n      ) {\n        targetItemId = Number(itemId)\n      }\n    }\n    return targetItemId\n  }\n\nexport const selectVisualizeItemWidth =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItems(state)[itemId].width\n  }\n\nexport const selectVisualizeItemHeight =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItems(state)[itemId].height\n  }\n\nexport const selectVisualizeItemType = (itemId: number) => (state: RootState) =>\n  selectVisualizeItems(state)[itemId].itemType\n\nexport const selectVisualizeDataType =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isDisplayDataItem(item)) {\n      return item.dataType\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataNodeId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isDisplayDataItem(item)) {\n      return item.nodeId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemNodeId = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItems(state)[itemId]\n  if (isImageItem(item)) {\n    return item.roiItem?.nodeId ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemFilePath = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItems(state)[itemId]\n  if (isImageItem(item)) {\n    return item.roiItem?.filePath ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemShowticklabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemZsmooth =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.zsmooth\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemStartIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.startIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemEndIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.endIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemColors = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItems(state)[itemId]\n  if (isImageItem(item)) {\n    return item.colors\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemActiveIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.activeIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemAlpha = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItems(state)[itemId]\n  if (isImageItem(item)) {\n    return item.alpha\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemRoiAlpha =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.roiAlpha\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemRoiFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      if (item.roiItem) {\n        return item.roiItem.filePath\n      } else {\n        return null\n      }\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemDuration =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.duration\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemSaveFilename =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.saveFileName\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemSaveFormat =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.saveFormat\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemOffset =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.offset\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemSpan =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.span\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowTickLabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemZeroLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.zeroline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemXrange =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.xrange\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemDrawOrderList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.drawOrderList\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectTimeSeriesItemRefImageItemId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.refImageItemId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemRefRoiUniqueList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      if (item.refImageItemId) {\n        const imageItem = selectVisualizeItems(state)[item.refImageItemId]\n        if (isImageItem(imageItem) && imageItem.roiItem?.filePath != null) {\n          return selectRoiUniqueList(imageItem.roiItem.filePath)(state)\n        }\n      }\n      return null\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemDrawIndexMap =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.drawIndexMap\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemKeys =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      const roiUniqueList = selectTimeSeriesItemRefRoiUniqueList(itemId)(state)\n      if (roiUniqueList != null) {\n        return Object.keys(item.drawIndexMap).filter((key) =>\n          roiUniqueList.includes(key),\n        )\n      } else {\n        return Object.keys(item.drawIndexMap)\n      }\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemIndex =\n  (itemId: number, roiFilePath: string | null) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      const maxIdx = item.maxIndex\n      if (maxIdx !== 0) {\n        return maxIdx\n      }\n    }\n\n    if (roiFilePath !== null) {\n      return selectRoiItemMaxNumber(roiFilePath)(state)\n    } else {\n      return 0\n    }\n  }\n\nexport const selectRoiItemMaxNumber =\n  (roiFilePath: string) => (state: RootState) => {\n    const roiData = selectRoiData(roiFilePath)(state)\n    if (roiData.length !== 0) {\n      return Math.max(...roiData.map((arr) => Math.max(...arr)))\n    } else {\n      return 0\n    }\n  }\n\nexport const selectHeatMapItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isHeatMapItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectHeatMapItemColors =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isHeatMapItem(item)) {\n      return item.colors\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemTranspose =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isCsvItem(item)) {\n      return item.transpose\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetHeader =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isCsvItem(item)) {\n      return item.setHeader\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItems(state)[itemId]\n  if (isCsvItem(item)) {\n    return item.setIndex\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectScatterItemXIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isScatterItem(item)) {\n      return item.xIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectScatterItemYIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isScatterItem(item)) {\n      return item.yIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectDisplayDataIsSingle =\n  (itemId: number) => (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    const item = items[itemId]\n    const targetFilePath = item.filePath\n    return (\n      Object.values(items).filter((value) => value.filePath === targetFilePath)\n        .length === 1\n    )\n  }\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\nimport {\n  ImageData,\n  TimeSeriesData,\n  DISPLAY_DATA_SLICE_NAME,\n  HeatMapData,\n  CsvData,\n  RoiData,\n  ScatterData,\n  BarData,\n  HTMLData,\n} from './DisplayDataType'\n\nexport const getTimeSeriesInitData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; itemId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesInitData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await axios.get(\n        `${BASE_URL}/outputs/inittimedata/${path}`,\n      )\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesDataById = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; index: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesDataById`,\n  async ({ path, index }, thunkAPI) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/outputs/timedata/${path}`, {\n        params: {\n          index: index,\n        },\n      })\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesAllData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesAllData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await axios.get(\n        `${BASE_URL}/outputs/alltimedata/${path}`,\n      )\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHeatMapData = createAsyncThunk<\n  { data: HeatMapData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHeatMapData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/outputs/data/${path}`)\n    return response.data\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getImageData = createAsyncThunk<\n  { data: ImageData },\n  { path: string; startIndex?: number; endIndex?: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getImageData`,\n  async ({ path, startIndex, endIndex }, thunkAPI) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n        params: {\n          start_index: startIndex,\n          end_index: endIndex,\n        },\n      })\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getCsvData = createAsyncThunk<\n  {\n    data: CsvData\n  },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getCsvData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/outputs/csv/${path}`)\n    return response.data\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getRoiData = createAsyncThunk<{ data: RoiData }, { path: string }>(\n  `${DISPLAY_DATA_SLICE_NAME}/getRoiData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {})\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getScatterData = createAsyncThunk<\n  { data: ScatterData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getScatterData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n    return response.data\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getBarData = createAsyncThunk<{ data: BarData }, { path: string }>(\n  `${DISPLAY_DATA_SLICE_NAME}/getBarData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHTMLData = createAsyncThunk<\n  { data: HTMLData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHTMLData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/outputs/html/${path}`, {})\n    return response.data\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { ThunkApiConfig } from 'store/store'\nimport { getTimeSeriesDataById } from '../DisplayData/DisplayDataActions'\nimport { selectRoiData } from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport { selectVisualizeItems } from './VisualizeItemSelectors'\nimport { VISUALIZE_ITEM_SLICE_NAME } from './VisualizeItemType'\nimport { isImageItem, isTimeSeriesItem } from './VisualizeItemUtils'\n\nexport const setImageItemClikedDataId = createAsyncThunk<\n  void,\n  { itemId: number; clickedDataId: string },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setImageItemClikedDataId`,\n  ({ itemId, clickedDataId }, thunkAPI) => {\n    const items = selectVisualizeItems(thunkAPI.getState())\n    Object.values(items).forEach((item) => {\n      if (\n        isTimeSeriesItem(item) &&\n        item.filePath != null &&\n        item.refImageItemId === itemId &&\n        !item.drawOrderList.includes(clickedDataId)\n      ) {\n        thunkAPI.dispatch(\n          getTimeSeriesDataById({ path: item.filePath, index: clickedDataId }),\n        )\n      }\n    })\n  },\n)\n\nexport const selectingImageArea = createAsyncThunk<\n  string[],\n  {\n    itemId: number\n    range: {\n      x: number[]\n      y: number[]\n    }\n  },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/selectingImageArea`,\n  ({ itemId, range }, thunkAPI) => {\n    const { x, y } = range\n    const [x1, x2] = x.map(Math.round)\n    const [y1, y2] = y.map(Math.round)\n    const selectedZList: string[] = []\n    const items = selectVisualizeItems(thunkAPI.getState())\n    const imageItem = items[itemId]\n    if (isImageItem(imageItem) && imageItem.roiItem != null) {\n      const roiFilePath = imageItem.roiItem.filePath\n      if (roiFilePath != null) {\n        const roiData = selectRoiData(roiFilePath)(thunkAPI.getState())\n        for (let x = x1; x <= x2; x++) {\n          for (let y = y1; y <= y2; y++) {\n            const z = roiData[y][x]\n            if (z != null) {\n              const zNum = String(z) // indexとidのずれを回避\n              if (!selectedZList.includes(zNum)) {\n                selectedZList.push(zNum)\n              }\n            }\n          }\n        }\n        Object.values(items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            const path = item.filePath\n            selectedZList.forEach((selectedZ) => {\n              if (Object.keys(item.drawIndexMap).includes(selectedZ)) {\n                thunkAPI.dispatch(\n                  getTimeSeriesDataById({\n                    path,\n                    index: String(selectedZ),\n                  }),\n                )\n              }\n            })\n          }\n        })\n      }\n    }\n    return selectedZList\n  },\n)\n\ntype DeleteOption =\n  | {\n      deleteData: true\n      dataType: DATA_TYPE\n      filePath: string\n    }\n  | { deleteData: false }\n\ntype DeleteDisplayItemArgs = {\n  itemId: number\n} & DeleteOption\n\nexport const deleteDisplayItem = createAction<DeleteDisplayItemArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/deleteDisplayItem`,\n)\n\ntype SetNewDisplayDataPathArgs = {\n  itemId: number\n  filePath: string\n  nodeId: string | null\n  dataType?: DATA_TYPE\n} & (\n  | {\n      deleteData: true\n      prevFilePath: string\n      prevDataType: DATA_TYPE\n    }\n  | { deleteData: false }\n)\n\nexport const setNewDisplayDataPath = createAction<SetNewDisplayDataPathArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setNewDisplayDataPath`,\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getTimeSeriesInitData } from '../DisplayData/DisplayDataActions'\nimport { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  deleteDisplayItem,\n  selectingImageArea,\n  setImageItemClikedDataId,\n  setNewDisplayDataPath,\n} from './VisualizeItemActions'\n\nimport {\n  HeatMapItem,\n  ImageItem,\n  CsvItem,\n  TimeSeriesItem,\n  RoiItem,\n  ScatterItem,\n  VisualaizeItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  BarItem,\n  HDF5Item,\n  HTMLItem,\n  FluoItem,\n  BehaviorItem,\n  VISUALIZE_ITEM_SLICE_NAME,\n  DrawIndexMap,\n} from './VisualizeItemType'\nimport {\n  isDisplayDataItem,\n  isHeatMapItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isCsvItem,\n  isScatterItem,\n} from './VisualizeItemUtils'\n\nexport const initialState: VisualaizeItem = {\n  items: {},\n  selectedItemId: null,\n  layout: [],\n}\nconst displayDataCommonInitialValue = {\n  itemType: VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA,\n  filePath: null,\n  nodeId: null,\n  width: 500,\n  height: 500,\n  isWorkflowDialog: false,\n}\nconst imageItemInitialValue: ImageItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.IMAGE,\n  startIndex: 1,\n  endIndex: 10,\n  showticklabels: false,\n  showline: true,\n  zsmooth: 'best',\n  showgrid: false,\n  showscale: false,\n  colors: [\n    { rgb: `rgb(0, 0, 0)`, offset: '0' },\n    { rgb: `rgb(255, 255, 255)`, offset: '1.0' },\n  ],\n  activeIndex: 0,\n  alpha: 1.0,\n  roiItem: null,\n  roiAlpha: 1.0,\n  duration: 500,\n  saveFileName: 'newPlot',\n  saveFormat: 'png',\n}\nconst timeSeriesItemInitialValue: TimeSeriesItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.TIME_SERIES,\n  offset: true,\n  span: 5,\n  showgrid: true,\n  showline: true,\n  showticklabels: true,\n  zeroline: false,\n  xrange: {\n    left: undefined,\n    right: undefined,\n  },\n  maxIndex: 0,\n  drawOrderList: [],\n  drawIndexMap: {},\n}\nconst heatMapItemInitialValue: HeatMapItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HEAT_MAP,\n  showscale: true,\n  colors: [\n    { rgb: `rgb(0, 0, 255)`, offset: '0' },\n    { rgb: `rgb(200, 200, 200)`, offset: '0.5' },\n    { rgb: `rgb(255, 0, 0)`, offset: '1.0' },\n  ],\n}\nconst csvItemInitialValue: CsvItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.CSV,\n  setHeader: null,\n  setIndex: false,\n  transpose: false,\n}\nconst roiItemInitialValue: RoiItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.ROI,\n}\nconst scatterItemInitialValue: ScatterItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.SCATTER,\n  xIndex: 0,\n  yIndex: 1,\n}\nconst barItemInitialValue: BarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BAR,\n}\nconst hdf5ItemInitialValue: HDF5Item = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HDF5,\n}\nconst htmlItemInitialValue: HTMLItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HTML,\n}\nconst fluoItemInitialValue: FluoItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.FLUO,\n}\nconst behaviorItemInitialValue: BehaviorItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BEHAVIOR,\n}\n\nfunction getDisplayDataItemInitialValue(dataType: DATA_TYPE) {\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return imageItemInitialValue\n    case DATA_TYPE_SET.HEAT_MAP:\n      return heatMapItemInitialValue\n    case DATA_TYPE_SET.TIME_SERIES:\n      return timeSeriesItemInitialValue\n    case DATA_TYPE_SET.CSV:\n      return csvItemInitialValue\n    case DATA_TYPE_SET.ROI:\n      return roiItemInitialValue\n    case DATA_TYPE_SET.SCATTER:\n      return scatterItemInitialValue\n    case DATA_TYPE_SET.BAR:\n      return barItemInitialValue\n    case DATA_TYPE_SET.HDF5:\n      return hdf5ItemInitialValue\n    case DATA_TYPE_SET.HTML:\n      return htmlItemInitialValue\n    case DATA_TYPE_SET.FLUO:\n      return fluoItemInitialValue\n    case DATA_TYPE_SET.BEHAVIOR:\n      return behaviorItemInitialValue\n  }\n}\n\nexport const visualaizeItemSlice = createSlice({\n  name: VISUALIZE_ITEM_SLICE_NAME,\n  initialState,\n  reducers: {\n    pushInitialItemToNewRow: (state) => {\n      const newItemId = addInitialItemFn(state)\n      state.layout.push([newItemId])\n    },\n    insertInitialItemToNextColumn: (state, action: PayloadAction<number>) => {\n      const newItemId = addInitialItemFn(state)\n      const targetItemId = action.payload\n      const targetRowIndex = state.layout.findIndex((row) =>\n        row.includes(targetItemId),\n      )\n      const targetColumnIndex =\n        state.layout[targetRowIndex].indexOf(targetItemId)\n      state.layout[targetRowIndex].splice(targetColumnIndex + 1, 0, newItemId)\n    },\n    addItemForWorkflowDialog: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        filePath: string\n        dataType: DATA_TYPE\n      }>,\n    ) => {\n      const { nodeId, filePath, dataType } = action.payload\n      const newItemId = getMaxItemId(state) + 1\n      state.items[newItemId] = {\n        ...getDisplayDataItemInitialValue(dataType),\n        isWorkflowDialog: true,\n        nodeId,\n        filePath,\n      }\n    },\n    deleteAllItemForWorkflowDialog: (state) => {\n      const targetItemIdList = Object.entries(state.items)\n        .filter(([itemId, value]) => value.isWorkflowDialog)\n        .map(([itemId, value]) => Number(itemId))\n      targetItemIdList.forEach(\n        (targetItemId) => delete state.items[targetItemId],\n      )\n    },\n    setItemSize: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        width: number\n        height: number\n      }>,\n    ) => {\n      const { itemId, width, height } = action.payload\n      const targetItem = state.items[itemId]\n      targetItem.width = width\n      targetItem.height = height\n    },\n    selectItem: (state, action: PayloadAction<number>) => {\n      state.selectedItemId = action.payload\n    },\n    setRoiItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        Object.values(state.items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            item.drawOrderList = []\n            item.drawIndexMap = Object.fromEntries(\n              Object.keys(item.drawIndexMap).map((key) => [key, false]),\n            )\n          }\n        })\n\n        if (targetItem.roiItem != null) {\n          targetItem.roiItem.filePath = filePath\n          targetItem.roiItem.nodeId = nodeId\n        } else {\n          targetItem.roiItem = {\n            ...roiItemInitialValue,\n            filePath,\n            nodeId,\n          }\n        }\n      }\n    },\n    setFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isDisplayDataItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      } else {\n        throw new Error('error')\n      }\n    },\n    setImageItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setTimeSeriesItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setHeatMapItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    resetImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex?: number\n        endIndex?: number\n      }>,\n    ) => {\n      resetImageActiveIndexFn(state, action.payload)\n    },\n    incrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex++\n      }\n    },\n    decrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex--\n      }\n    },\n    setImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        activeIndex: number\n      }>,\n    ) => {\n      const { itemId, activeIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex = activeIndex\n      }\n    },\n    setImageItemShowticklabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setImageItemZsmooth: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zsmooth: string | boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.zsmooth = action.payload.zsmooth\n      }\n    },\n    setImageItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setImageItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setImageItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setImageItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setImageItemStartIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.startIndex = action.payload.startIndex\n      }\n    },\n    setImageItemEndIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        endIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.endIndex = action.payload.endIndex\n      }\n    },\n    setImageItemAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        alpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.alpha = action.payload.alpha\n      }\n    },\n    setImageItemRoiAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        roiAlpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.roiAlpha = action.payload.roiAlpha\n      }\n    },\n    setImageItemDuration: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        duration: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.duration = action.payload.duration\n      }\n    },\n    setImageItemSaveFormat: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFormat: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.saveFormat = action.payload.saveFormat\n      }\n    },\n    setImageItemSaveFileName: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFileName: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.saveFileName = action.payload.saveFileName\n      }\n    },\n    setTimeSeriesItemOffset: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        offset: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.offset = action.payload.offset\n      }\n    },\n    setTimeSeriesItemSpan: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        span: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.span = action.payload.span\n      }\n    },\n    setTimeSeriesItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setTimeSeriesItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setTimeSeriesItemShowTickLabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setTimeSeriesItemZeroLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zeroline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.zeroline = action.payload.zeroline\n      }\n    },\n    setTimeSeriesItemXrangeLeft: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        left: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.left = action.payload.left\n      }\n    },\n    setTimeSeriesItemXrangeRight: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        right: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.right = action.payload.right\n      }\n    },\n    setTimeSeriesItemDrawOrderList: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        drawOrderList: string[]\n      }>,\n    ) => {\n      const { itemId, drawOrderList } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.drawOrderList = drawOrderList\n      }\n    },\n    setTimeSeriesItemDrawIndexMap: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        drawIndexMap: DrawIndexMap\n      }>,\n    ) => {\n      const { itemId, drawIndexMap } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.drawIndexMap = drawIndexMap\n      }\n    },\n    setTimeSeriesItemMaxIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        maxIndex: number\n      }>,\n    ) => {\n      const { itemId, maxIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.maxIndex = maxIndex\n      }\n    },\n    setTimeSeriesRefImageItemId: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        refImageItemId: number | null\n      }>,\n    ) => {\n      const { itemId, refImageItemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.refImageItemId = refImageItemId ?? undefined\n        targetItem.drawOrderList = []\n      }\n    },\n    setHeatMapItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setHeatMapItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setCsvItemTranspose: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        transpose: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.transpose = action.payload.transpose\n      }\n    },\n    setCsvItemSetHeader: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setHeader: number | null\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setHeader = action.payload.setHeader\n      }\n    },\n    setCsvItemSetIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setIndex: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setIndex = action.payload.setIndex\n      }\n    },\n    setScatterItemXIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        xIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.xIndex = action.payload.xIndex\n      }\n    },\n    setScatterItemYIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        yIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.yIndex = action.payload.yIndex\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        const itemId = action.payload.itemId\n\n        if (isImageItem(state.items[itemId])) {\n          Object.values(state.items).forEach((item) => {\n            if (isTimeSeriesItem(item) && item.refImageItemId === itemId) {\n              delete item.refImageItemId\n            }\n          })\n        }\n\n        delete state.items[itemId]\n        if (itemId === state.selectedItemId) {\n          state.selectedItemId = null\n        }\n        state.layout.forEach((row, i) => {\n          const index = row.indexOf(itemId)\n          if (index !== -1) {\n            row.splice(index, 1)\n          }\n          if (row.length === 0) {\n            state.layout.splice(i, 1)\n          }\n        })\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        const { itemId, filePath, nodeId, dataType } = action.payload\n        const targetItem = state.items[itemId]\n        if (isDisplayDataItem(targetItem)) {\n          if (dataType != null) {\n            state.items[itemId] = {\n              ...getDisplayDataItemInitialValue(dataType),\n              width: targetItem.width,\n              height: targetItem.height,\n              filePath,\n              nodeId,\n            }\n          } else {\n            targetItem.filePath = filePath\n            targetItem.nodeId = nodeId\n          }\n        } else {\n          throw new Error('invalid VisualaizeItemType')\n        }\n        resetImageActiveIndexFn(state, { itemId })\n      })\n      .addCase(setImageItemClikedDataId.fulfilled, (state, action) => {\n        const { itemId: imageItemId, clickedDataId } = action.meta.arg\n        const targetItem = state.items[imageItemId]\n        if (isImageItem(targetItem)) {\n          targetItem.clickedDataId = clickedDataId\n        }\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId &&\n              Object.keys(item.drawIndexMap).includes(clickedDataId) &&\n              !item.drawOrderList.includes(clickedDataId)\n            ) {\n              item.drawOrderList.push(clickedDataId)\n              item.drawIndexMap[clickedDataId] = true\n            }\n          }\n        })\n      })\n      .addCase(selectingImageArea.fulfilled, (state, action) => {\n        const { itemId: imageItemId } = action.meta.arg\n        const selectedZList = action.payload\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId\n            ) {\n              const correctZList = selectedZList.filter((selectedZ) =>\n                Object.keys(item.drawIndexMap).includes(selectedZ),\n              )\n              item.drawOrderList = correctZList\n              item.drawIndexMap = Object.fromEntries(\n                Object.keys(item.drawIndexMap).map((key) => {\n                  return [key, correctZList.includes(key)]\n                }),\n              )\n            }\n          }\n        })\n      })\n      .addCase(getTimeSeriesInitData.fulfilled, (state, action) => {\n        const { itemId } = action.meta.arg\n        const targetItem = state.items[itemId]\n        if (isTimeSeriesItem(targetItem)) {\n          targetItem.drawIndexMap = Object.fromEntries(\n            Object.keys(action.payload.data).map((key, i) => {\n              if (i === 0) {\n                return [key, true]\n              }\n              return [key, false]\n            }),\n          )\n        }\n      })\n  },\n})\n\nfunction getMaxItemId(state: VisualaizeItem) {\n  const idList = Object.keys(state.items).map((key) => Number(key))\n  const maxId = idList.length > 0 ? idList.reduce((a, b) => Math.max(a, b)) : 0\n  return maxId\n}\n\nfunction addInitialItemFn(state: VisualaizeItem) {\n  const nextId = getMaxItemId(state) + 1\n  state.items[nextId] = getDisplayDataItemInitialValue(DATA_TYPE_SET.IMAGE)\n  state.selectedItemId = nextId\n  return nextId\n}\n\nfunction resetImageActiveIndexFn(\n  state: VisualaizeItem,\n  args: {\n    itemId: number\n  },\n) {\n  const { itemId } = args\n  const targetItem = state.items[itemId]\n  if (isImageItem(targetItem)) {\n    targetItem.activeIndex = 0\n  }\n}\n\nexport const {\n  pushInitialItemToNewRow,\n  insertInitialItemToNextColumn,\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n  setItemSize,\n  selectItem,\n  setFilePath,\n  setHeatMapItemFilePath,\n  setImageItemFilePath,\n  setTimeSeriesItemFilePath,\n  setRoiItemFilePath,\n  resetImageActiveIndex,\n  incrementImageActiveIndex,\n  decrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowLine,\n  setImageItemShowGrid,\n  setImageItemShowScale,\n  setImageItemColors,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemAlpha,\n  setImageItemRoiAlpha,\n  setImageItemDuration,\n  setImageItemSaveFormat,\n  setImageItemSaveFileName,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemDrawOrderList,\n  setTimeSeriesItemDrawIndexMap,\n  setTimeSeriesItemMaxIndex,\n  setTimeSeriesRefImageItemId,\n  setHeatMapItemShowScale,\n  setHeatMapItemColors,\n  setCsvItemTranspose,\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} = visualaizeItemSlice.actions\n\nexport default visualaizeItemSlice.reducer\n","import React from 'react'\nimport { DATA_TYPE } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const DisplayDataContext = React.createContext<{\n  nodeId: string | null\n  filePath: string\n  dataType: DATA_TYPE\n  itemId: number\n}>({ nodeId: '', filePath: '', dataType: 'csv', itemId: NaN })\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectHeatMapData,\n  selectHeatMapDataError,\n  selectHeatMapDataIsFulfilled,\n  selectHeatMapDataIsInitialized,\n  selectHeatMapDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHeatMapData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const HeatMapPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHeatMapDataIsPending(path))\n  const isInitialized = useSelector(selectHeatMapDataIsInitialized(path))\n  const error = useSelector(selectHeatMapDataError(path))\n  const isFulfilled = useSelector(selectHeatMapDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHeatMapData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HeatMapImple />\n  } else {\n    return null\n  }\n})\n\nconst HeatMapImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const heatMapData = useSelector(selectHeatMapData(path), heatMapDataEqualtyFn)\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const colorscale = useSelector(selectHeatMapItemColors(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      heatMapData != null\n        ? [\n            {\n              z: heatMapData,\n              x: heatMapData.map((_, i) => i),\n              y: heatMapData[0].map((_, i) => i),\n              type: 'heatmap',\n              name: 'heatmap',\n              colorscale: colorscale.map((value) => {\n                let offset: number = parseFloat(value.offset)\n                const offsets: number[] = colorscale.map((v) => {\n                  return parseFloat(v.offset)\n                })\n                // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n                if (offset === Math.max(...offsets)) {\n                  offset = 1.0\n                }\n                if (offset === Math.min(...offsets)) {\n                  offset = 0.0\n                }\n                return [offset, value.rgb]\n              }),\n              hoverongaps: false,\n              showlegend: true,\n              showscale: showscale,\n            },\n          ]\n        : [],\n    [heatMapData, showscale, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n  }\n\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction heatMapDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, { useCallback, useEffect } from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from 'store/store'\nimport { Datum, LayoutAxis, PlotData, PlotSelectionEvent } from 'plotly.js'\nimport createColormap from 'colormap'\nimport { Button, LinearProgress, TextField, Typography } from '@mui/material'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport Slider from '@mui/material/Slider'\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport { DisplayDataContext } from '../DataContext'\n\nimport {\n  selectImageDataError,\n  selectImageDataIsInitialized,\n  selectImageDataIsPending,\n  selectImageDataIsFulfilled,\n  selectActiveImageData,\n  selectRoiData,\n  selectImageDataMaxSize,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getImageData,\n  getRoiData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowLine,\n  selectImageItemShowGrid,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemActiveIndex,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectRoiItemFilePath,\n  selectRoiItemIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemDuration,\n  selectVisualizeItemWidth,\n  selectVisualizeItemHeight,\n  selectImageItemSaveFilename,\n  selectImageItemSaveFormat,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  incrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemDuration,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  selectingImageArea,\n  setImageItemClikedDataId,\n} from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const ImagePlot = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const isPending = useSelector(selectImageDataIsPending(path))\n  const isInitialized = useSelector(selectImageDataIsInitialized(path))\n  const isFulfilled = useSelector(selectImageDataIsFulfilled(path))\n  const error = useSelector(selectImageDataError(path))\n\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(\n        getImageData({\n          path,\n          startIndex: startIndex ?? 1,\n          endIndex: endIndex ?? 10,\n        }),\n      )\n    }\n    if (roiFilePath != null) {\n      dispatch(getRoiData({ path: roiFilePath }))\n    }\n  }, [dispatch, isInitialized, path, startIndex, endIndex, roiFilePath])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ImagePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ImagePlotImple = React.memo(() => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const activeIndex = useSelector(selectImageItemActiveIndex(itemId))\n  return <ImagePlotChart activeIndex={activeIndex} />\n})\n\nconst ImagePlotChart = React.memo<{\n  activeIndex: number\n}>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(\n    selectActiveImageData(path, activeIndex),\n    imageDataEqualtyFn,\n  )\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const roiData = useSelector(\n    (state: RootState) =>\n      roiFilePath != null ? selectRoiData(roiFilePath)(state) : [],\n    imageDataEqualtyFn,\n  )\n\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const colorscale = useSelector(selectImageItemColors(itemId))\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const timeDataMaxIndex = useSelector(selectRoiItemIndex(itemId, roiFilePath))\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscaleRoi = createColormap({\n    colormap: 'jet',\n    nshades: 100, //timeDataMaxIndex >= 6 ? timeDataMaxIndex : 6,\n    format: 'rgba',\n    alpha: 1.0,\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'images',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          const rgb = value.rgb\n            .replace(/[^0-9,]/g, '')\n            .split(',')\n            .map((x) => Number(x))\n          const hex = rgba2hex(rgb, alpha)\n          return [offset, hex]\n        }),\n        hoverongaps: false,\n        showscale: showscale,\n        zsmooth: zsmooth, // ['best', 'fast', false]\n        // showlegend: true,\n      },\n      {\n        z: roiData,\n        type: 'heatmap',\n        name: 'roi',\n        hovertemplate: 'cell id: %{z}',\n        colorscale: [...Array(timeDataMaxIndex)].map((_, i) => {\n          const new_i = Math.floor(((i % 10) * 10 + i / 10) % 100)\n          const offset = i / (timeDataMaxIndex - 1)\n          const rgba = colorscaleRoi[new_i]\n          const hex = rgba2hex(rgba, roiAlpha)\n          return [offset, hex]\n        }),\n        zmin: 1,\n        zmax: timeDataMaxIndex,\n        hoverongaps: false,\n        zsmooth: false,\n        showscale: false,\n      },\n    ],\n    [\n      imageData,\n      roiData,\n      zsmooth,\n      showscale,\n      colorscale,\n      colorscaleRoi,\n      timeDataMaxIndex,\n      roiAlpha,\n      alpha,\n    ],\n  )\n\n  const [selectMode, setSelectMode] = React.useState(false)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectMode(event.target.checked)\n  }\n  // debounceでイベントを間引きする。onSelectedはそれっぽい名前だが動かなかった。\n  const onSelecting = debounce((event: PlotSelectionEvent) => {\n    if (event.range != null) {\n      dispatch(selectingImageArea({ itemId, range: event.range }))\n    }\n  })\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: selectMode ? 'select' : 'pan',\n      xaxis: {\n        autorange: true,\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n        showticklabels: showticklabels,\n      },\n      yaxis: {\n        automargin: true,\n        autorange: 'reversed',\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n        showticklabels: showticklabels, // todo\n      },\n    }),\n    [showgrid, showline, showticklabels, width, height, selectMode],\n  )\n\n  const saveFileName = useSelector(selectImageItemSaveFilename(itemId))\n  const saveFormat = useSelector(selectImageItemSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n      // scale: number;\n      // format: 'png' | 'svg' | 'jpeg' | 'webp';\n      // height: number;\n      // width: number;\n    },\n  }\n\n  const onClick = (event: any) => {\n    const points: PlotDatum = event.points[0]\n    if (points.curveNumber >= 1) {\n      dispatch(\n        setImageItemClikedDataId({\n          itemId,\n          clickedDataId: points.z.toString(),\n        }),\n      )\n    }\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <PlayBack activeIndex={activeIndex} />\n        </Box>\n        <FormControlLabel\n          sx={{ m: 1 }}\n          control={<Switch checked={selectMode} onChange={handleChange} />}\n          label=\"drag select\"\n        />\n      </Box>\n      <PlotlyChart\n        data={data}\n        layout={layout}\n        config={config}\n        onClick={onClick}\n        onSelecting={onSelecting}\n      />\n    </div>\n  )\n})\n\nconst PlayBack = React.memo<{ activeIndex: number }>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const maxSize = useSelector(selectImageDataMaxSize(path))\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const duration = useSelector(selectImageItemDuration(itemId))\n\n  const onSliderChange = (\n    event: Event,\n    value: number | number[],\n    activeThumb: number,\n  ) => {\n    if (typeof value === 'number') {\n      const newIndex = value - startIndex\n      if (newIndex >= 0 && newIndex !== activeIndex) {\n        dispatch(setImageActiveIndex({ itemId, activeIndex: newIndex }))\n      }\n    }\n  }\n\n  const intervalRef = React.useRef<null | NodeJS.Timeout>(null)\n\n  useEffect(() => {\n    if (intervalRef.current !== null) {\n      if (activeIndex >= maxSize) {\n        clearInterval(intervalRef.current)\n        intervalRef.current = null\n      }\n    }\n  }, [activeIndex, maxSize])\n\n  const onPlayClick = useCallback(() => {\n    if (activeIndex >= maxSize) {\n      dispatch(setImageActiveIndex({ itemId, activeIndex: 0 }))\n    }\n    if (maxSize > 1 && intervalRef.current === null) {\n      intervalRef.current = setInterval(() => {\n        dispatch(incrementImageActiveIndex({ itemId }))\n      }, duration)\n    }\n  }, [activeIndex, maxSize, dispatch, duration, itemId])\n\n  const onPauseClick = () => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current)\n      intervalRef.current = null\n    }\n  }\n\n  const onDurationChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue =\n        event.target.value === '' ? '' : Number(event.target.value)\n      if (typeof newValue === 'number') {\n        dispatch(setImageItemDuration({ itemId, duration: newValue }))\n      }\n    },\n    [dispatch, itemId],\n  )\n  return (\n    <>\n      <Button variant=\"outlined\" onClick={onPlayClick}>\n        Play\n      </Button>\n      <Button variant=\"outlined\" onClick={onPauseClick}>\n        Pause\n      </Button>\n      <TextField\n        type=\"number\"\n        inputProps={{\n          step: 100,\n          min: 0,\n          max: 1000,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onDurationChange}\n        value={duration}\n      />\n      <Slider\n        aria-label=\"Custom marks\"\n        defaultValue={20}\n        value={startIndex + activeIndex}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        marks\n        min={startIndex}\n        max={maxSize === 0 ? 0 : endIndex}\n        onChange={onSliderChange}\n      />\n    </>\n  )\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\ninterface PlotDatum {\n  curveNumber: number\n  data: PlotData\n  customdata: Datum\n  pointIndex: number\n  pointNumber: number\n  x: Datum\n  xaxis: LayoutAxis\n  y: Datum\n  yaxis: LayoutAxis\n  z: number\n}\n\nfunction rgba2hex(rgba: number[], alpha: number) {\n  const r = rgba[0]\n  const g = rgba[1]\n  const b = rgba[2]\n  const a = alpha\n\n  var outParts = [\n    r.toString(16),\n    g.toString(16),\n    b.toString(16),\n    Math.round(a * 255)\n      .toString(16)\n      .substring(0, 2),\n  ]\n\n  // Pad single-digit output values\n  outParts.forEach(function (part, i) {\n    if (part.length === 1) {\n      outParts[i] = '0' + part\n    }\n  })\n\n  return `#${outParts.join('')}`\n}\n\nfunction debounce<T extends (...args: any[]) => unknown>(\n  callback: T,\n  delay = 500,\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout\n  return (...args) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => callback(...args), delay)\n  }\n}\n","import React from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectRoiData,\n  selectRoiDataError,\n  selectRoiDataIsFulfilled,\n  selectRoiDataIsInitialized,\n  selectRoiDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { getRoiData } from 'store/slice/DisplayData/DisplayDataActions'\nimport createColormap from 'colormap'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const RoiPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isPending = useSelector(selectRoiDataIsPending(path))\n  const isInitialized = useSelector(selectRoiDataIsInitialized(path))\n  const isFulfilled = useSelector(selectRoiDataIsFulfilled(path))\n  const error = useSelector(selectRoiDataError(path))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getRoiData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <RoiPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst RoiPlotImple = React.memo<{}>(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(selectRoiData(path), imageDataEqualtyFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscale: ColorType[] = createColormap({\n    colormap: 'jet',\n    nshades: 10,\n    format: 'hex',\n    alpha: 1,\n  }).map((v, idx) => {\n    return { rgb: v, offset: String(idx / 9) }\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'roi',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          return [offset, value.rgb]\n        }),\n        hoverongaps: false,\n        // zsmooth: zsmooth, // ['best', 'fast', false]\n        zsmooth: false,\n        showlegend: true,\n      },\n    ],\n    [imageData, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      xaxis: {\n        autorange: true,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n      },\n      yaxis: {\n        autorange: 'reversed',\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n      },\n    }),\n    [width, height],\n  )\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n  }\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectScatterData,\n  selectScatterDataError,\n  selectScatterDataIsFulfilled,\n  selectScatterDataIsInitialized,\n  selectScatterDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getScatterData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { ScatterData } from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const ScatterPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectScatterDataIsPending(path))\n  const isInitialized = useSelector(selectScatterDataIsInitialized(path))\n  const error = useSelector(selectScatterDataError(path))\n  const isFulfilled = useSelector(selectScatterDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getScatterData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ScatterPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ScatterPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const scatterData = useSelector(\n    selectScatterData(path),\n    scatterDataEqualityFn,\n  )\n\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n  const maxIndex = Object.keys(scatterData).length - 1\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x:\n          xIndex < maxIndex\n            ? Object.values(scatterData[xIndex])\n            : Object.values(scatterData[maxIndex]),\n        y:\n          yIndex < maxIndex\n            ? Object.values(scatterData[yIndex])\n            : Object.values(scatterData[maxIndex]),\n        type: 'scatter',\n        mode: 'markers', //'markers+text',\n        text: Object.keys(scatterData[0]),\n        textposition: 'top center',\n        textfont: {\n          family: 'Raleway, sans-serif',\n        },\n        marker: {\n          size: 5,\n          color: Object.keys(scatterData[0]),\n        },\n      },\n    ],\n    [scatterData, xIndex, yIndex, maxIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      xaxis: {\n        title: {\n          text: `x: ${\n            xIndex < Object.keys(scatterData).length ? xIndex : maxIndex\n          }`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: `y: ${\n            yIndex < Object.keys(scatterData).length ? yIndex : maxIndex\n          }`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n    }),\n    [xIndex, yIndex, maxIndex, scatterData, width, height],\n  )\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n  }\n\n  return (\n    <div>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nfunction scatterDataEqualityFn(\n  a: ScatterData | undefined,\n  b: ScatterData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectCsvData,\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { CsvData } from 'store/slice/DisplayData/DisplayDataType'\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const CsvPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <CsvPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst CsvPlotImple = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  return (\n    <PresentationalCsvPlot\n      path={path}\n      transpose={transpose}\n      setHeader={setHeader}\n      setIndex={setIndex}\n    />\n  )\n})\n\n/**\n * CsvFileNodeの設定時に表示するプレビューでも使用することを想定\n *\n * DisplayDataContextに依存しない\n */\nexport const PresentationalCsvPlot = React.memo<{\n  path: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ path, transpose, setIndex, setHeader }) => {\n  const data = useSelector(\n    selectCsvData(path),\n    (a: CsvData | undefined, b: CsvData | undefined) => {\n      if (a != null && b != null) {\n        return twoDimarrayEqualityFn(a, b)\n      } else {\n        return a === undefined && b === undefined\n      }\n    },\n  )\n\n  const csvData = React.useMemo(() => {\n    if (transpose) {\n      return data[0].map((col, i) => data.map((row) => row[i]))\n    }\n    return data\n  }, [data, transpose])\n\n  const header: GridColDef[] = React.useMemo(() => {\n    const headerData = () => {\n      if (setHeader === null) {\n        return csvData[0]\n      } else {\n        if (setHeader >= csvData.length) {\n          return csvData[csvData.length - 1]\n        } else {\n          return csvData[setHeader]\n        }\n      }\n    }\n\n    if (setIndex) {\n      return [\n        { field: 'col0', headerName: 'index', width: 150 },\n        ...headerData().map((value, idx) => {\n          return {\n            field: `col${idx + 1}`,\n            headerName: `${setHeader === null ? idx : value}`,\n            width: 150,\n          }\n        }),\n      ]\n    } else {\n      return headerData().map((value, idx) => {\n        return {\n          field: `col${idx + 1}`,\n          headerName: `${setHeader === null ? idx : value}`,\n          width: 150,\n        }\n      })\n    }\n  }, [csvData, setHeader, setIndex])\n  const rows = csvData\n    .map((row, row_id) => {\n      let rowObj = Object.fromEntries(\n        [row_id, ...row].map((value, index) => {\n          return [`col${index}`, value]\n        }),\n      )\n      rowObj['id'] = row_id\n      return rowObj\n    })\n    .filter(\n      (value, idx) =>\n        setHeader === null || (setHeader !== null && idx > setHeader),\n    )\n\n  return (\n    <div style={{ height: 300, width: '100%' }}>\n      <DataGrid rows={rows} columns={header} />\n    </div>\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LegendClickEvent } from 'plotly.js'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectTimeSeriesData,\n  selectTimeSeriesDataError,\n  selectTimeSeriesDataIsFulfilled,\n  selectTimeSeriesDataIsInitialized,\n  selectTimeSeriesDataIsPending,\n  selectTimeSeriesStd,\n  selectTimeSeriesXrange,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getTimeSeriesDataById,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { TimeSeriesData } from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemDrawIndexMap,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectTimeSeriesItemKeys,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setTimeSeriesItemDrawIndexMap } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport createColormap from 'colormap'\nimport { setTimeSeriesItemDrawOrderList } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const TimeSeriesPlot = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectTimeSeriesDataIsPending(path))\n  const isInitialized = useSelector(selectTimeSeriesDataIsInitialized(path))\n  const error = useSelector(selectTimeSeriesDataError(path))\n  const isFulfilled = useSelector(selectTimeSeriesDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getTimeSeriesInitData({ path, itemId }))\n    }\n  }, [dispatch, isInitialized, path, itemId])\n\n  if (!isInitialized) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isPending || isFulfilled) {\n    return <TimeSeriesPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst TimeSeriesPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  // 0番のデータとkeysだけをとってくる\n  const dispatch = useDispatch()\n  const timeSeriesData = useSelector(\n    selectTimeSeriesData(path),\n    timeSeriesDataEqualityFn,\n  )\n\n  const dataXrange = useSelector(selectTimeSeriesXrange(path))\n  const dataStd = useSelector(selectTimeSeriesStd(path))\n\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n  const drawOrderList = useSelector(selectTimeSeriesItemDrawOrderList(itemId))\n  const drawIndexMap = useSelector(selectTimeSeriesItemDrawIndexMap(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const dataKeys = useSelector(selectTimeSeriesItemKeys(itemId))\n\n  const colorScale = createColormap({\n    colormap: 'jet',\n    nshades: 100, //maxIndex >= 6 ? maxIndex : 6,\n    format: 'hex',\n    alpha: 1,\n  })\n\n  const data = React.useMemo(() => {\n    return Object.fromEntries(\n      dataKeys.map((key) => {\n        let y = Object.values(timeSeriesData[key])\n        const i = Number(key) - 1\n        const new_i = Math.floor((i % 10) * 10 + i / 10) % 100\n        if (drawOrderList.includes(key) && offset) {\n          const activeIdx: number = drawOrderList.findIndex((v) => v === key)\n          const mean: number = y.reduce((a, b) => a + b) / y.length\n          const std: number =\n            span *\n            Math.sqrt(y.reduce((a, b) => a + Math.pow(b - mean, 2)) / y.length)\n          y = y.map((value) => (value - mean) / (std + 1e-10) + activeIdx)\n        }\n\n        return [\n          key,\n          {\n            name: key,\n            x: dataXrange,\n            y: y,\n            visible: drawOrderList.includes(key) ? true : 'legendonly',\n            line: { color: colorScale[new_i] },\n            error_y: {\n              type: 'data',\n              array:\n                !offset && Object.keys(dataStd).includes(key)\n                  ? Object.values(dataStd[key])\n                  : null,\n              visible: true,\n            },\n          },\n        ]\n      }),\n    )\n  }, [\n    timeSeriesData,\n    drawOrderList,\n    offset,\n    span,\n    colorScale,\n    dataStd,\n    dataXrange,\n    dataKeys,\n  ])\n\n  const annotations = React.useMemo(() => {\n    return drawOrderList.map((value) => {\n      return {\n        x: Number(dataXrange[dataXrange.length - 1]) + dataXrange.length / 10,\n        y: data[value].y[dataXrange.length - 1],\n        xref: 'x',\n        yref: 'y',\n        text: `cell: ${value}`,\n        arrowhead: 1,\n        ax: 0,\n        ay: -10,\n      }\n    })\n  }, [data, drawOrderList, dataXrange])\n\n  const layout = React.useMemo(\n    () => ({\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      width: width,\n      height: height - 50,\n      xaxis: {\n        range: [xrange.left, xrange.right],\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      yaxis: {\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      annotations: annotations,\n    }),\n    [\n      xrange,\n      showgrid,\n      showline,\n      showticklabels,\n      zeroline,\n      annotations,\n      width,\n      height,\n    ],\n  )\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n  }\n\n  const onLegendClick = (event: LegendClickEvent) => {\n    const clickNumber = dataKeys[event.curveNumber]\n\n    const newDrawOrderList = drawOrderList.includes(clickNumber)\n      ? drawOrderList.filter((value) => value !== clickNumber)\n      : [...drawOrderList, clickNumber]\n\n    const newDrawIndexMap = Object.fromEntries(\n      Object.entries(drawIndexMap).map(([key, value]) => {\n        if (key === clickNumber) {\n          if (drawOrderList.includes(clickNumber)) {\n            return [key, false]\n          } else {\n            return [key, true]\n          }\n        }\n        return [key, value]\n      }),\n    )\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    dispatch(\n      setTimeSeriesItemDrawIndexMap({\n        itemId,\n        drawIndexMap: newDrawIndexMap,\n      }),\n    )\n\n    // set DisplayNumbers\n    if (!drawOrderList.includes(clickNumber)) {\n      dispatch(getTimeSeriesDataById({ path, index: clickNumber }))\n    }\n\n    return false\n  }\n\n  return (\n    <PlotlyChart\n      data={Object.values(data)}\n      layout={layout}\n      config={config}\n      onLegendClick={onLegendClick}\n    />\n  )\n})\n\nfunction timeSeriesDataEqualityFn(\n  a: TimeSeriesData | undefined,\n  b: TimeSeriesData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.entries(a)\n    const bArray = Object.entries(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every(([aKey, aValue], i) => {\n          const [bKey, bValue] = bArray[i]\n          return bKey === aKey && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction nestEqualityFun(\n  a: {\n    [key: number]: number\n  },\n  b: {\n    [key: number]: number\n  },\n) {\n  const aArray = Object.entries(a)\n  const bArray = Object.entries(b)\n  return (\n    a === b ||\n    (aArray.length === bArray.length &&\n      aArray.every(([aKey, aValue], i) => {\n        const [bKey, bValue] = bArray[i]\n        return bKey === aKey && bValue === aValue\n      }))\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectBarData,\n  selectBarDataError,\n  selectBarDataIsFulfilled,\n  selectBarDataIsInitialized,\n  selectBarDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getBarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { BarData } from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const BarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectBarDataIsPending(path))\n  const isInitialized = useSelector(selectBarDataIsInitialized(path))\n  const error = useSelector(selectBarDataError(path))\n  const isFulfilled = useSelector(selectBarDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getBarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <BarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst BarPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const barData = useSelector(selectBarData(path), barDataEqualityFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: Object.keys(barData[0]),\n        y: Object.values(barData[0]),\n        type: 'bar',\n      },\n    ],\n    [barData],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n  }\n\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction barDataEqualityFn(a: BarData | undefined, b: BarData | undefined) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHTMLData,\n  selectHTMLDataError,\n  selectHTMLDataIsFulfilled,\n  selectHTMLDataIsInitialized,\n  selectHTMLDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHTMLData } from 'store/slice/DisplayData/DisplayDataActions'\n\nexport const HTMLPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHTMLDataIsPending(path))\n  const isInitialized = useSelector(selectHTMLDataIsInitialized(path))\n  const error = useSelector(selectHTMLDataError(path))\n  const isFulfilled = useSelector(selectHTMLDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHTMLData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HTMLPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HTMLPlotImple = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const htmlData = useSelector(selectHTMLData(path))\n\n  return <div dangerouslySetInnerHTML={{ __html: htmlData }} />\n})\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectVisualizeDataFilePath,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { DisplayDataContext } from './DataContext'\nimport { HeatMapPlot } from './Plot/HeatMapPlot'\nimport { ImagePlot } from './Plot/ImagePlot'\nimport { RoiPlot } from './Plot/RoiPlot'\nimport { ScatterPlot } from './Plot/ScatterPlot'\nimport { CsvPlot } from './Plot/CsvPlot'\nimport { TimeSeriesPlot } from './Plot/TimeSeriesPlot'\nimport { BarPlot } from './Plot/BarPlot'\nimport { HTMLPlot } from './Plot/HTMLPlot'\n\nexport const DisplayDataItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const nodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  if (filePath != null && dataType != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{ nodeId, filePath, dataType, itemId }}\n      >\n        <DisplayPlot dataType={dataType} />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n\nconst DisplayPlot = React.memo<{\n  dataType: DATA_TYPE\n}>(({ dataType }) => {\n  switch (dataType) {\n    case DATA_TYPE_SET.CSV:\n      return <CsvPlot />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesPlot />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatMapPlot />\n    case DATA_TYPE_SET.IMAGE:\n      return <ImagePlot />\n    case DATA_TYPE_SET.ROI:\n      return <RoiPlot />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterPlot />\n    case DATA_TYPE_SET.BAR:\n      return <BarPlot />\n    case DATA_TYPE_SET.HTML:\n      return <HTMLPlot />\n    default:\n      return null\n  }\n})\n","import { useDispatch, useSelector } from 'react-redux'\nimport Tabs, { tabsClasses } from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box'\nimport React from 'react'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { selectAlgorithmName } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectPipelineNodeResultOutputKeyList,\n  selectPipelineNodeResultOutputFileDataType,\n  selectPipelineNodeResultOutputFilePath,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { selectVisualizeItemIdForWorkflowDialog } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { DisplayDataItem } from 'components/Visualize/DisplayDataItem'\n\nexport const AlgorithmOutputDialog = React.memo<{\n  open: boolean\n  onClose: () => void\n  nodeId: string\n}>(({ open, onClose, nodeId }) => {\n  const dispatch = useDispatch()\n  const closeFn = () => {\n    onClose()\n    dispatch(deleteAllItemForWorkflowDialog())\n  }\n  return (\n    <Dialog open={open} onClose={closeFn} fullWidth>\n      <TitleWithCloseButton onClose={closeFn} nodeId={nodeId} />\n      <DialogContent\n        dividers\n        sx={{\n          pt: 1,\n          px: 2,\n        }}\n      >\n        {open && <OutputViewer nodeId={nodeId} />}\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nconst TitleWithCloseButton = React.memo<{\n  onClose: () => void\n  nodeId: string\n}>(({ nodeId, onClose }) => {\n  const nodeName = useSelector(selectAlgorithmName(nodeId))\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }}>\n      Output of {nodeName}\n      <IconButton\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 10,\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </DialogTitle>\n  )\n})\n\nconst OutputViewer = React.memo<{ nodeId: string }>(({ nodeId }) => {\n  const outputKeyList = useSelector(\n    selectPipelineNodeResultOutputKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  const [selectedOutoutKey, setSelectedOutputKey] = React.useState(\n    outputKeyList[0],\n  )\n  return (\n    <>\n      <OutputSelectTabs\n        outputKeyList={outputKeyList}\n        selectedOutoutKey={selectedOutoutKey}\n        onSelectOutput={setSelectedOutputKey}\n      />\n      <DisplayDataView nodeId={nodeId} outputKey={selectedOutoutKey} />\n    </>\n  )\n})\n\nconst OutputSelectTabs = React.memo<{\n  selectedOutoutKey: string\n  outputKeyList: string[]\n  onSelectOutput: (selectedKey: string) => void\n}>(({ selectedOutoutKey, outputKeyList, onSelectOutput }) => {\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    onSelectOutput(newValue)\n  }\n  return (\n    <Tabs\n      value={selectedOutoutKey}\n      onChange={handleChange}\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n      sx={{\n        [`& .${tabsClasses.scrollButtons}`]: {\n          '&.Mui-disabled': { opacity: 0.3 },\n        },\n      }}\n    >\n      {outputKeyList.map((outputKey) => (\n        <Tab\n          value={outputKey}\n          label={outputKey}\n          sx={{\n            textTransform: 'none',\n          }}\n        />\n      ))}\n    </Tabs>\n  )\n})\n\nconst DisplayDataView = React.memo<{ nodeId: string; outputKey: string }>(\n  ({ nodeId, outputKey }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectPipelineNodeResultOutputFilePath(nodeId, outputKey),\n    )\n    const dataType = useSelector(\n      selectPipelineNodeResultOutputFileDataType(nodeId, outputKey),\n    )\n    const itemId = useSelector(\n      selectVisualizeItemIdForWorkflowDialog(nodeId, filePath, dataType),\n    )\n    React.useEffect(() => {\n      if (itemId === null) {\n        dispatch(addItemForWorkflowDialog({ nodeId, filePath, dataType }))\n      }\n    }, [dispatch, nodeId, filePath, dataType, itemId])\n    return (\n      <Box\n        sx={{\n          mx: 1,\n          my: 2,\n        }}\n      >\n        {itemId != null && <DisplayDataItem itemId={itemId} />}\n      </Box>\n    )\n  },\n)\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport {\n  alpha,\n  Typography,\n  useTheme,\n  Tooltip,\n  FormHelperText,\n  IconButton,\n  Button,\n  LinearProgress,\n  ButtonGroup,\n} from '@mui/material'\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded'\nimport ErrorIcon from '@mui/icons-material/Error'\nimport Popover from '@mui/material/Popover'\n\nimport { AlgorithmInfo } from 'store/slice/AlgorithmList/AlgorithmListType'\nimport {\n  selectAlgoArgs,\n  selectAlgoReturns,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { selectAlgorithmNodeDefined } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { toggleParamForm } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultMessage,\n  selectPipelineNodeResultStatus,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\nimport { NODE_RESULT_STATUS } from 'store/slice/Pipeline/PipelineType'\nimport { AlgorithmOutputDialog } from './AlgorithmOutputDialog'\n\nconst leftHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\nconst rightHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\n\nexport const AlgorithmNode = React.memo<NodeProps<NodeData>>((element) => {\n  const defined = useSelector(selectAlgorithmNodeDefined(element.id))\n  if (defined) {\n    return <AlgorithmNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst AlgorithmNodeImple = React.memo<NodeProps<NodeData>>(\n  ({ id: nodeId, selected: elementSelected, isConnectable, data }) => {\n    const theme = useTheme()\n    const dispatch = useDispatch()\n\n    const onClickParamButton = () => {\n      dispatch(toggleParamForm(nodeId))\n    }\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    const [open, setOpen] = React.useState(false)\n    const onCloseOutputDialog = () => {\n      setOpen(false)\n    }\n    const onClickOutputButton = () => {\n      setOpen(true)\n    }\n\n    const status = useStatus(nodeId)\n\n    return (\n      <div\n        style={{\n          width: '100%',\n          height: '110%',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.15)\n            : undefined,\n          border: '1px solid',\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <AlgoName nodeId={nodeId} data={data} />\n        <ButtonGroup sx={{ mx: 1 }}>\n          <Button size=\"small\" onClick={onClickParamButton}>\n            Param\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={onClickOutputButton}\n            disabled={status !== NODE_RESULT_STATUS.SUCCESS}\n          >\n            Output\n          </Button>\n          <AlgorithmOutputDialog\n            nodeId={nodeId}\n            open={open}\n            onClose={onCloseOutputDialog}\n          />\n        </ButtonGroup>\n        <AlgoArgs nodeId={nodeId} />\n        <AlgoReturns nodeId={nodeId} isConnectable={isConnectable} />\n        <Message nodeId={nodeId} />\n      </div>\n    )\n  },\n)\n\nconst AlgoName = React.memo<{\n  nodeId: string\n  data: NodeData\n}>(({ nodeId, data }) => {\n  const theme = useTheme()\n  const status = useStatus(nodeId)\n  return (\n    <div\n      style={{\n        padding: 8,\n        paddingLeft: 8,\n      }}\n      className=\"algoName\"\n    >\n      {status === NODE_RESULT_STATUS.PENDING && <LinearProgress />}\n      <Typography\n        style={{\n          textAlign: 'left',\n          color:\n            status === NODE_RESULT_STATUS.ERROR\n              ? theme.palette.error.main\n              : undefined,\n        }}\n      >\n        {data.label}\n      </Typography>\n    </div>\n  )\n})\n\nconst AlgoArgs = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const algoArgs = useSelector(selectAlgoArgs(nodeId), algoInfoListEqualtyFn)\n\n  return (\n    <>\n      {algoArgs != null\n        ? algoArgs\n            .filter((info) => info.type !== 'params')\n            .map((algoInfo, i) => {\n              return <ArgHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n            })\n        : null}\n    </>\n  )\n})\n\nconst AlgoReturns = React.memo<{\n  nodeId: string\n  isConnectable: boolean\n}>(({ nodeId, isConnectable }) => {\n  const algoReturns = useSelector(\n    selectAlgoReturns(nodeId),\n    algoInfoListEqualtyFn,\n  )\n  return (\n    <>\n      {algoReturns != null ? (\n        algoReturns?.map((algoInfo, i) => {\n          return <ReturnHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n        })\n      ) : (\n        // algoReturns.lengthが0の場合の応急処置\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={`${nodeId}`}\n          style={{\n            ...rightHandleStyle,\n            top: 15,\n          }}\n          isConnectable={isConnectable}\n        />\n      )}\n    </>\n  )\n})\n\ntype HandleProps = {\n  algoInfo: AlgorithmInfo\n  nodeId: string\n  i: number\n}\n\nfunction hexToRgb(hex: string | undefined, isNone: boolean | undefined) {\n  if (hex !== undefined) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n    if (result !== null) {\n      if (isNone) {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 0.55)`\n      } else {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 1)`\n      }\n    } else {\n      return undefined\n    }\n  } else {\n    return undefined\n  }\n}\n\nconst ArgHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type, isNone }, nodeId, i }) => {\n    const hex_color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    const rgb_color = hexToRgb(hex_color, isNone)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"target\"\n        position={Position.Left}\n        id={id}\n        style={{\n          ...leftHandleStyle,\n          background: rgb_color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"left-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst ReturnHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type }, nodeId, i }) => {\n    const color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"source\"\n        position={Position.Right}\n        id={id}\n        style={{\n          ...rightHandleStyle,\n          background: color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"right-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst Message = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const status = useStatus(nodeId)\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const errorMsg = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultMessage(nodeId)(state) ?? null\n      : null,\n  )\n\n  const anchorElRef = React.useRef<HTMLButtonElement | null>(null)\n  const [open, setOpen] = React.useState(false)\n  const theme = useTheme()\n\n  if (status === NODE_RESULT_STATUS.ERROR) {\n    return (\n      <>\n        <IconButton\n          ref={anchorElRef}\n          onClick={() => setOpen((prevOpen) => !prevOpen)}\n          size=\"small\"\n          style={{ color: theme.palette.error.main, float: 'right' }}\n        >\n          <ErrorIcon />\n        </IconButton>\n        <Popover\n          open={open}\n          anchorEl={anchorElRef.current}\n          onClose={() => setOpen(false)}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n        >\n          <div style={{ margin: 8 }}>\n            <FormHelperText error={true}>{errorMsg}</FormHelperText>\n          </div>\n        </Popover>\n      </>\n    )\n  } else if (status === NODE_RESULT_STATUS.SUCCESS) {\n    return <CheckCircleRoundedIcon color=\"success\" sx={{ float: 'right' }} />\n  } else {\n    return null\n  }\n})\n\nfunction algoInfoListEqualtyFn(\n  a: AlgorithmInfo[] | undefined,\n  b: AlgorithmInfo[] | undefined,\n) {\n  if (a != null && b != null) {\n    return (\n      a === b ||\n      (a.length === b.length &&\n        a.every((v, i) => v.type === b[i].type && v.name === b[i].name))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction useStatus(nodeId: string) {\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const status = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultStatus(nodeId)(state)\n      : 'uninitialized',\n  )\n  return status\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { INITIAL_IMAGE_ELEMENT_ID } from 'const/flowchart'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\nimport { addInputNode } from '../FlowElement/FlowElementActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { setInputNodeFilePath } from './InputNodeActions'\nimport {\n  CsvInputParamType,\n  FILE_TYPE_SET,\n  InputNode,\n  INPUT_NODE_SLICE_NAME,\n} from './InputNodeType'\nimport { isCsvInputNode, isHDF5InputNode } from './InputNodeUtils'\n\nconst initialState: InputNode = {\n  [INITIAL_IMAGE_ELEMENT_ID]: {\n    fileType: FILE_TYPE_SET.IMAGE,\n    param: {},\n  },\n}\n\nexport const inputNodeSlice = createSlice({\n  name: INPUT_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    deleteInputNode(state, action: PayloadAction<string>) {\n      delete state[action.payload]\n    },\n    setCsvInputNodeParam(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: CsvInputParamType\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId]\n      if (isCsvInputNode(inputNode)) {\n        inputNode.param = param\n      }\n    },\n    setInputNodeHDF5Path(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n      }>,\n    ) {\n      const { nodeId, path } = action.payload\n      const item = state[nodeId]\n      if (isHDF5InputNode(item)) {\n        item.hdf5Path = path\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(setInputNodeFilePath, (state, action) => {\n        const { nodeId, filePath } = action.payload\n        state[nodeId].selectedFilePath = filePath\n      })\n      .addCase(addInputNode, (state, action) => {\n        const { node, fileType } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          switch (fileType) {\n            case FILE_TYPE_SET.CSV:\n              state[node.id] = {\n                fileType,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.IMAGE:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.HDF5:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.FLUO:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.BEHAVIOR:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.INPUT) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        action.payload.nodeList.filter(isInputNodePostData).forEach((node) => {\n          if (node.data != null) {\n            if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n              newState[node.id] = {\n                fileType: FILE_TYPE_SET.IMAGE,\n                selectedFilePath: node.data.path as string[],\n                param: {},\n              }\n            } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n              newState[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                selectedFilePath: node.data.path as string,\n                param: node.data.param as CsvInputParamType,\n              }\n            } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n              newState[node.id] = {\n                fileType: FILE_TYPE_SET.HDF5,\n                hdf5Path: node.data.hdf5Path,\n                selectedFilePath: node.data.path as string,\n                param: {},\n              }\n            }\n          }\n        })\n        return newState\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const { resultPath } = action.payload\n          const target = state[nodeId]\n          if (target.fileType === FILE_TYPE_SET.IMAGE) {\n            target.selectedFilePath = [resultPath]\n          } else {\n            target.selectedFilePath = resultPath\n          }\n        }\n      }),\n})\n\nexport const { setCsvInputNodeParam, setInputNodeHDF5Path } =\n  inputNodeSlice.actions\n\nexport default inputNodeSlice.reducer\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Switch,\n  FormControlLabel,\n  TextField,\n  Box,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeParamSetHeader,\n  selectCsvInputNodeParamSetIndex,\n  selectCsvInputNodeParamTranspose,\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setCsvInputNodeParam } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { PresentationalCsvPlot } from 'components/Visualize/Plot/CsvPlot'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const CsvFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <CsvFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst CsvFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'csv', 'CsvData')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nexport const ParamSettingDialog = React.memo<{\n  nodeId: string\n  filePath: string\n}>(({ nodeId, filePath }) => {\n  const [open, setOpen] = React.useState(false)\n  // OK時のみStoreに反映させるため一時的な値をuseStateで保持しておく。\n  // useStateの初期値はselectorで取得。\n  const [setHeader, setSetHeader] = React.useState(\n    useSelector(selectCsvInputNodeParamSetHeader(nodeId)),\n  )\n  const [setIndex, setSetIndex] = React.useState(\n    useSelector(selectCsvInputNodeParamSetIndex(nodeId)),\n  )\n  const [transpose, setTranspose] = React.useState(\n    useSelector(selectCsvInputNodeParamTranspose(nodeId)),\n  )\n  const dispatch = useDispatch()\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(\n      setCsvInputNodeParam({\n        nodeId,\n        param: { setHeader, setIndex, transpose },\n      }),\n    )\n  }\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>Settings</Button>\n      <Dialog open={open}>\n        <DialogTitle>Csv Setting</DialogTitle>\n        <DialogContent dividers>\n          <Box sx={{ display: 'flex', p: 1, m: 1, alignItems: 'flex-start' }}>\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={transpose}\n                  onChange={(event) => setTranspose(event.target.checked)}\n                />\n              }\n              label=\"Transpose\"\n            />\n            <TextField\n              label=\"header\"\n              sx={{\n                width: 100,\n                margin: (theme) => theme.spacing(0, 1, 0, 1),\n              }}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(event) => {\n                const value = Number(event.target.value)\n                if (value >= 0) {\n                  setSetHeader(value)\n                }\n              }}\n              value={setHeader}\n            />\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={setIndex}\n                  onChange={(event) => setSetIndex(event.target.checked)}\n                />\n              }\n              label=\"Set Index\"\n            />\n          </Box>\n          <Typography variant=\"h6\">Preview</Typography>\n          <CsvPreview\n            filePath={filePath}\n            transpose={transpose}\n            setHeader={setHeader}\n            setIndex={setIndex}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onClickOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst CsvPreview = React.memo<{\n  filePath: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ filePath: path, ...otherProps }) => {\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PresentationalCsvPlot path={path} {...otherProps} />\n  } else {\n    return null\n  }\n})\n","import { RootState } from '../../store'\n\nexport const selectHDF5 = (state: RootState) => {\n  if (state.hdf5 != null) {\n    return state.hdf5\n  } else {\n    return undefined\n  }\n}\n\nexport const selectHDF5Nodes = () => (state: RootState) =>\n  selectHDF5(state)?.tree\n\nexport const selectHDF5IsLoading = () => (state: RootState) =>\n  selectHDF5(state)?.isLoading ?? false\n","export const HDF5_SLICE_NAME = 'hdf5'\n\nexport type HDF5TreeDTO = HDF5DirDTO | HDF5FileDTO\n\nexport interface HDF5DirDTO {\n  isDir: true\n  name: string\n  nodes: HDF5TreeDTO[]\n  path: string\n}\n\nexport interface HDF5FileDTO {\n  isDir: false\n  name: string\n  shape: [number]\n  path: string\n  nbytes: string\n}\n\nexport interface HDF5Tree {\n  isLoading: boolean\n  tree: HDF5TreeDTO[]\n}\n\nexport const HDF5_TYPE_SET = {\n  ALL: 'all',\n} as const\n\nexport type HDF5_TYPE = typeof HDF5_TYPE_SET[keyof typeof HDF5_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\n\nimport { HDF5_SLICE_NAME, HDF5TreeDTO } from './HDF5Type'\n\nexport const getHDF5Tree = createAsyncThunk<HDF5TreeDTO[], { path: string }>(\n  `${HDF5_SLICE_NAME}/getHDF5Tree`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/hdf5/${path}`)\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\n\nimport { alpha, useTheme } from '@mui/material/styles'\nimport Dialog from '@mui/material/Dialog'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectHDF5InputNodeSelectedFilePath,\n  selectInputNodeDefined,\n  selectInputNodeHDF5Path,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeHDF5Path } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectHDF5IsLoading,\n  selectHDF5Nodes,\n} from 'store/slice/HDF5/HDF5Selectors'\nimport { getHDF5Tree } from 'store/slice/HDF5/HDF5Action'\nimport { HDF5TreeDTO } from 'store/slice/HDF5/HDF5Type'\nimport { Typography } from '@mui/material'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const HDF5FileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <HDF5FileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst HDF5FileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.HDF5}\n        filePath={filePath ?? ''}\n      />\n      {filePath !== undefined && <ItemSelect nodeId={nodeId} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'hdf5', 'HDF5Data')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nconst ItemSelect = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [open, setOpen] = React.useState(false)\n\n  const structureFileName = useSelector(selectInputNodeHDF5Path(nodeId))\n\n  return (\n    <>\n      <Button variant=\"outlined\" size=\"small\" onClick={() => setOpen(true)}>\n        {'Structure'}\n      </Button>\n      <Typography className=\"selectFilePath\" variant=\"caption\">\n        {!!structureFileName ? structureFileName : 'No structure is selected.'}\n      </Typography>\n\n      <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\n        <DialogTitle>{'Select File'}</DialogTitle>\n        <Structure nodeId={nodeId} />\n        <DialogActions>\n          <Button onClick={() => setOpen(false)} variant=\"outlined\">\n            cancel\n          </Button>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"primary\"\n            variant=\"outlined\"\n            autoFocus\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst Structure = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const theme = useTheme()\n  return (\n    <DialogContent dividers>\n      <div\n        style={{\n          height: 300,\n          overflow: 'auto',\n          marginBottom: theme.spacing(1),\n          border: '1px solid',\n          padding: theme.spacing(1),\n          borderColor: theme.palette.divider,\n        }}\n      >\n        <FileTreeView nodeId={nodeId} />\n      </div>\n    </DialogContent>\n  )\n})\n\nconst FileTreeView = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [tree, isLoading] = useHDF5Tree(nodeId)\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView>\n        {tree?.map((node) => (\n          <TreeNode node={node} nodeId={nodeId} />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: HDF5TreeDTO\n  nodeId: string\n}>(({ node, nodeId }) => {\n  const dispatch = useDispatch()\n\n  const onClickFile = (path: string) => {\n    dispatch(setInputNodeHDF5Path({ nodeId, path }))\n  }\n\n  if (node.isDir) {\n    // Directory\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={node.name}\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode node={childNode} key={i} nodeId={nodeId} />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    // File\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={node.name + `   (shape=${node.shape}, nbytes=${node.nbytes})`}\n        onClick={() => onClickFile(node.path)}\n      />\n    )\n  }\n})\n\nfunction useHDF5Tree(nodeId: string): [HDF5TreeDTO[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectHDF5Nodes())\n  const isLoading = useSelector(selectHDF5IsLoading())\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  React.useEffect(() => {\n    if (!isLoading && filePath) {\n      dispatch(getHDF5Tree({ path: filePath }))\n    }\n  }, [isLoading, filePath, dispatch])\n  return [tree, isLoading]\n}\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const FluoFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <FluoFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst FluoFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n  const returnType = 'FluoData'\n  const fluoColor = useHandleColor(returnType)\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'fluo', returnType)}\n        style={{\n          ...sourceHandleStyle,\n          background: fluoColor,\n        }}\n      />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const BehaviorFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <BehaviorFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst BehaviorFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n    const onChangeFilePath = (path: string) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n    const theme = useTheme()\n    const returnType = 'BehaviorData'\n    const behaviorColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '230px',\n          background: selected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          onChangeFilePath={(path) => {\n            if (!Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.CSV}\n          filePath={filePath ?? ''}\n        />\n        {!!filePath && (\n          <ParamSettingDialog nodeId={nodeId} filePath={filePath} />\n        )}\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'behavior', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: behaviorColor,\n          }}\n        />\n      </div>\n    )\n  },\n)\n","import { ImageFileNode } from 'components/FlowChart/FlowChartNode/ImageFileNode'\nimport { AlgorithmNode } from 'components/FlowChart/FlowChartNode/AlgorithmNode'\nimport { CsvFileNode } from 'components/FlowChart/FlowChartNode/CsvFileNode'\nimport { HDF5FileNode } from 'components/FlowChart/FlowChartNode/HDF5FileNode'\nimport { FluoFileNode } from 'components/FlowChart/FlowChartNode/FluoFileNode'\nimport { BehaviorFileNode } from 'components/FlowChart/FlowChartNode/BehaviorFileNode'\n\nimport { CustomEdge } from 'components/FlowChart/CustomEdge'\n\nexport const reactFlowNodeTypes = {\n  ImageFileNode,\n  CsvFileNode,\n  HDF5FileNode,\n  AlgorithmNode,\n  FluoFileNode,\n  BehaviorFileNode,\n} as const\n\nexport const reactFlowEdgeTypes = {\n  buttonedge: CustomEdge,\n} as const\n","import { useDispatch } from 'react-redux'\nimport {\n  EdgeProps,\n  getBezierPath,\n  getMarkerEnd,\n  getEdgeCenter,\n} from 'react-flow-renderer'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport 'style/flowbutton.css'\n\nconst foreignObjectSize = 40\n\nexport const CustomEdge: React.FC<EdgeProps> = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  arrowHeadType,\n  markerEndId,\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  })\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId)\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  })\n\n  const dispatch = useDispatch()\n\n  const onEdgeClick = () => {\n    dispatch(deleteFlowElementsById(id))\n  }\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <foreignObject\n        width={foreignObjectSize}\n        height={foreignObjectSize}\n        x={edgeCenterX - foreignObjectSize / 2}\n        y={edgeCenterY - foreignObjectSize / 2}\n        className=\"edgebutton-foreignobject\"\n      >\n        <button className=\"flowbutton\" onClick={onEdgeClick}>\n          ×\n        </button>\n      </foreignObject>\n    </>\n  )\n}\n","import React, { DragEvent, MouseEvent } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  Controls,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  FlowTransform,\n} from 'react-flow-renderer'\n\nimport 'style/flow.css'\nimport {\n  deleteFlowElements,\n  editFlowElementPositionById,\n  setFlowElements,\n  setFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectFlowElements,\n  selectFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { ToolBar } from 'components/ToolBar'\nimport {\n  reactFlowEdgeTypes,\n  reactFlowNodeTypes,\n} from './FlowChartNode/ReactFlowNodeTypesConst'\n\nexport const ReactFlowComponent = React.memo<UseRunPipelineReturnType>(\n  (props) => {\n    const flowElements = useSelector(selectFlowElements)\n    const dispatch = useDispatch()\n\n    const onConnect = (params: Connection | Edge) => {\n      dispatch(\n        setFlowElements(\n          addEdge(\n            {\n              ...params,\n              animated: false,\n              style: { width: 5 },\n              type: 'buttonedge',\n            },\n            flowElements,\n          ),\n        ),\n      )\n    }\n\n    const onElementsRemove = (elementsToRemove: Elements) => {\n      dispatch(deleteFlowElements(elementsToRemove))\n    }\n\n    const onDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    const onNodeDragStop = (event: MouseEvent, node: Node) => {\n      dispatch(\n        editFlowElementPositionById({\n          nodeId: node.id,\n          coord: { x: node.position.x, y: node.position.y },\n        }),\n      )\n    }\n\n    const flowPosition = useSelector(selectFlowPosition)\n\n    const onMoveEnd = (event: FlowTransform | undefined) => {\n      if (event !== undefined) {\n        dispatch(setFlowPosition(event))\n      }\n    }\n\n    return (\n      <div className=\"flow\">\n        <ReactFlowProvider>\n          <div className=\"reactflow-wrapper\">\n            <ReactFlow\n              elements={flowElements}\n              onElementsRemove={onElementsRemove}\n              onConnect={onConnect}\n              onDragOver={onDragOver}\n              onNodeDragStop={onNodeDragStop}\n              nodeTypes={reactFlowNodeTypes}\n              edgeTypes={reactFlowEdgeTypes}\n              defaultPosition={[flowPosition.x, flowPosition.y]}\n              defaultZoom={flowPosition.zoom}\n              onMoveEnd={onMoveEnd}\n            >\n              <ToolBar {...props} />\n              <Controls />\n            </ReactFlow>\n          </div>\n        </ReactFlowProvider>\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nexport const selectRightDrawerIsOpen = (state: RootState) =>\n  state.rightDrawer.open\n\nexport const selectRightDrawerMode = (state: RootState) =>\n  state.rightDrawer.mode\n\nexport const selectRightDrawerCurrentNodeId = (state: RootState) =>\n  state.rightDrawer.currendNodeId\n","import { ParamMap } from 'store/utils/param/ParamType'\n\nexport const ALGORITHM_NODE_SLICE_NAME = 'algorithmNode'\n\nexport type AlgorithmNode = {\n  [nodeId: string]: AlgrithmNodeType\n}\n\ntype AlgrithmNodeType = {\n  functionPath: string\n  name: string\n  params: ParamMap | null\n  isUpdated: boolean\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'store/utils/param/ParamType'\nimport { ALGORITHM_NODE_SLICE_NAME } from './AlgorithmNodeType'\n\nexport const getAlgoParams = createAsyncThunk<\n  ParamDTO,\n  { nodeId: string; algoName: string }\n>(\n  `${ALGORITHM_NODE_SLICE_NAME}/getAlgoParams`,\n  async ({ algoName }, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await axios.get(`${BASE_URL}/params/${algoName}`)\n      return response.data\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\n\nimport { convertToParamMap, getChildParam } from 'store/utils/param/ParamUtils'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { getAlgoParams } from './AlgorithmNodeActions'\nimport { ALGORITHM_NODE_SLICE_NAME, AlgorithmNode } from './AlgorithmNodeType'\nimport { isAlgorithmNodePostData } from 'api/run/RunUtils'\nimport { run, runByCurrentUid } from '../Pipeline/PipelineActions'\nimport { addAlgorithmNode } from '../FlowElement/FlowElementActions'\n\nconst initialState: AlgorithmNode = {}\n\nexport const algorithmNodeSlice = createSlice({\n  name: ALGORITHM_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { nodeId, path, newValue } = action.payload\n      const param = state[nodeId].params\n      if (param != null) {\n        const target = getChildParam(path, param)\n        if (target != null) {\n          target.value = newValue\n          state[nodeId].isUpdated = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAlgoParams.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        state[nodeId].params = convertToParamMap(action.payload)\n      })\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        const { node, functionPath, name } = action.meta.arg\n        const params = action.payload\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          state[node.id] = {\n            functionPath,\n            name,\n            params: convertToParamMap(params),\n            isUpdated: false,\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: AlgorithmNode = {}\n        action.payload.nodeList\n          .filter(isAlgorithmNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              newState[node.id] = {\n                name: node.data.label,\n                functionPath: node.data.path,\n                params: node.data.param,\n                isUpdated: false,\n              }\n            }\n          })\n        return newState\n      })\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          runPostData.nodeList\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              state[node.id].isUpdated = false\n            })\n        },\n      )\n  },\n})\n\nexport const { updateParam } = algorithmNodeSlice.actions\nexport default algorithmNodeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Typography from '@mui/material/Typography'\n\nimport {\n  selectAlgorithmName,\n  selectAlgorithmParamsExit,\n  selectAlgorithmParamsKeyList,\n  selectAlgorithmParamsValue,\n  selectAlgorithmParam,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { updateParam } from 'store/slice/AlgorithmNode/AlgorithmNodeSlice'\nimport { getAlgoParams } from 'store/slice/AlgorithmNode/AlgorithmNodeActions'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from '../ParamFormItemCreator'\nimport { ParamFormContext } from './RightDrawer'\n\nexport const AlgorithmParamForm = React.memo(() => {\n  const nodeId = React.useContext(ParamFormContext)\n  const dispatch = useDispatch()\n  const algoName = useSelector(selectAlgorithmName(nodeId))\n  const algoParamIsLoaded = useSelector(selectAlgorithmParamsExit(nodeId))\n  const paramKeyList = useSelector(\n    selectAlgorithmParamsKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (!algoParamIsLoaded) {\n      dispatch(getAlgoParams({ nodeId, algoName }))\n    }\n  }, [dispatch, nodeId, algoName, algoParamIsLoaded])\n  return (\n    <div style={{ padding: 8 }}>\n      <Typography variant=\"h5\">{algoName}</Typography>\n      <div style={{ paddingLeft: 8 }}>\n        {paramKeyList.map((paramKey) => (\n          <ParamItem key={paramKey} paramKey={paramKey} />\n        ))}\n      </div>\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const nodeId = React.useContext(ParamFormContext)\n  const Component = createParamFormItemComponent({\n    paramSelector: (paramKey) => selectAlgorithmParam(nodeId, paramKey),\n    paramValueSelector: (path) => selectAlgorithmParamsValue(nodeId, path),\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ nodeId, path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Divider from '@mui/material/Divider'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport Box from '@mui/material/Box'\nimport {\n  selectRightDrawerCurrentNodeId,\n  selectRightDrawerIsOpen,\n  selectRightDrawerMode,\n} from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport {\n  closeRightDrawer,\n  RIGHT_DRAWER_MODE,\n} from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { NWBSettingContents } from './NWB'\nimport { RootState } from 'store/store'\nimport { AlgorithmParamForm } from './AlgorithmParamForm'\nimport { SnakemakeContents } from './Snakemake'\n\nconst RightDrawer: React.FC = () => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(closeRightDrawer())\n  const title = useSelector((state: RootState) => {\n    const mode = selectRightDrawerMode(state)\n    switch (mode) {\n      case RIGHT_DRAWER_MODE.NWB:\n        return 'NWB Setting'\n      case RIGHT_DRAWER_MODE.PARAM_FORM:\n        return 'Param From'\n      case RIGHT_DRAWER_MODE.SNAKEMAKE:\n        return 'Snakemake'\n      default:\n        return 'none'\n    }\n  })\n  return (\n    <StyledDrawer open={open} anchor=\"right\" variant=\"persistent\">\n      <Toolbar />\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton color=\"inherit\" onClick={onClick} size=\"large\">\n          <ChevronRightIcon />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Box>\n      <Divider />\n      <MainContents>\n        <Contents />\n      </MainContents>\n    </StyledDrawer>\n  )\n}\n\nconst Contents: React.FC = () => {\n  const mode = useSelector(selectRightDrawerMode)\n  switch (mode) {\n    case RIGHT_DRAWER_MODE.NWB:\n      return <NWBSettingContents />\n    case RIGHT_DRAWER_MODE.PARAM_FORM:\n      return <ParamFormConetent />\n    case RIGHT_DRAWER_MODE.SNAKEMAKE:\n      return <SnakemakeContents />\n    default:\n      return null\n  }\n}\n\n/**\n * nodeId\n */\nexport const ParamFormContext = React.createContext<string>('')\n\nconst ParamFormConetent: React.FC = () => {\n  const nodeId = useSelector(selectRightDrawerCurrentNodeId)\n  if (nodeId != null) {\n    return (\n      <ParamFormContext.Provider value={nodeId}>\n        <AlgorithmParamForm />\n      </ParamFormContext.Provider>\n    )\n  } else {\n    return null\n  }\n}\n\nexport const rightDrawerWidth = 320\n\nconst StyledDrawer = styled(Drawer)({\n  width: rightDrawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: rightDrawerWidth,\n  },\n})\n\nconst MainContents = styled('main')({\n  height: '100%',\n})\n\nexport default RightDrawer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport { default as MuiToolbar } from '@mui/material/Toolbar'\nimport { styled } from '@mui/material/styles'\nimport { AlgorithmTreeView } from './TreeView'\nimport { ReactFlowComponent } from './ReactFlowComponent'\nimport RightDrawer, { rightDrawerWidth } from './RightDrawer'\nimport { selectRightDrawerIsOpen } from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\n\nconst FlowChart = React.memo<UseRunPipelineReturnType>((props) => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  return (\n    <RootDiv>\n      <StyledDrawer variant=\"permanent\">\n        <MuiToolbar />\n        <DrawerContents>\n          <AlgorithmTreeView />\n        </DrawerContents>\n      </StyledDrawer>\n\n      <MainContents open={open}>\n        <MuiToolbar />\n        <ReactFlowComponent {...props} />\n      </MainContents>\n      <RightDrawer />\n    </RootDiv>\n  )\n})\n\nexport const drawerWidth = 240\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n})\n\nconst StyledDrawer = styled(Drawer)({\n  width: drawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n})\n\nconst DrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')<{ open: boolean }>(\n  ({ theme }) => ({\n    flexDirection: 'column',\n    flexGrow: 1,\n    height: '90vh',\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -rightDrawerWidth,\n  }),\n  ({ open, theme }) =>\n    open\n      ? {\n          transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n          marginRight: 0,\n        }\n      : undefined,\n)\n\nexport default FlowChart\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport AddIcon from '@mui/icons-material/Add'\nimport Button from '@mui/material/Button'\nimport { pushInitialItemToNewRow } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const VisualizeItemAddButton: React.FC = () => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(pushInitialItemToNewRow())\n  }\n  return (\n    <StyledPaper elevation={1} variant=\"outlined\">\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height=\"100%\"\n      >\n        <StyledButton onClick={onClick}>\n          <AddIcon fontSize=\"large\" color=\"primary\" />\n        </StyledButton>\n      </Box>\n    </StyledPaper>\n  )\n}\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  width: 260,\n  height: 255,\n  border: 'dashed',\n  borderWidth: 2,\n  borderColor: theme.palette.divider,\n  margin: theme.spacing(1),\n}))\n\nconst StyledButton = styled(Button)({\n  width: '100%',\n  height: '100%',\n})\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport Menu from '@mui/material/Menu'\nimport MenuItem from '@mui/material/MenuItem'\nimport ListItemText from '@mui/material/ListItemText'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport AddIcon from '@mui/icons-material/Add'\nimport {\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { insertInitialItemToNextColumn } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { deleteDisplayItem } from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const DisplayDataItemLayoutMenuIcon = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onClickDeleteMenu = () => {\n    // visualize Itemで同じpathのデータ個数を調べて、1だったら、displayも削除\n    dispatch(\n      deleteDisplayItem(\n        isSingleData && filePath != null && dataType != null\n          ? { itemId, deleteData: true, filePath, dataType }\n          : { itemId, deleteData: false },\n      ),\n    )\n  }\n  const onClickInsertMenu = () => {\n    dispatch(insertInitialItemToNextColumn(itemId))\n  }\n  return (\n    <PresentationalLayoutMenuIcon\n      onClickDeleteMenu={onClickDeleteMenu}\n      onClickInsertMenu={onClickInsertMenu}\n    />\n  )\n})\n\nconst PresentationalLayoutMenuIcon = React.memo<{\n  onClickDeleteMenu: () => void\n  onClickInsertMenu: () => void\n}>(({ onClickDeleteMenu, onClickInsertMenu }) => {\n  const [open, setOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLButtonElement>(null)\n  const onClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.stopPropagation() // 親divのonClickを反応させないため\n    setOpen((prevOpen) => !prevOpen)\n  }\n  const onClose = () => {\n    setOpen(false)\n  }\n  const onClickDeleteMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickDeleteMenu()\n    setOpen(false)\n  }\n  const onClickInsertMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickInsertMenu()\n    setOpen(false)\n  }\n  return (\n    <>\n      <IconButton ref={anchorRef} onClick={onClick}>\n        <MoreVertIcon />\n      </IconButton>\n      <Menu anchorEl={anchorRef.current} open={open} onClose={onClose}>\n        <MenuItem onClick={onClickInsertMenuFn}>\n          <ListItemIcon>\n            <AddIcon />\n          </ListItemIcon>\n          <ListItemText>Insert into next column</ListItemText>\n        </MenuItem>\n        <MenuItem onClick={onClickDeleteMenuFn}>\n          <ListItemIcon>\n            <DeleteIcon />\n          </ListItemIcon>\n          <ListItemText>Delete</ListItemText>\n        </MenuItem>\n      </Menu>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport FormControl from '@mui/material/FormControl'\nimport MenuItem from '@mui/material/MenuItem'\nimport InputLabel from '@mui/material/InputLabel'\nimport FormHelperText from '@mui/material/FormHelperText'\nimport Select from '@mui/material/Select'\nimport ListSubheader from '@mui/material/ListSubheader'\n\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { RootState } from 'store/store'\nimport { selectInputNode } from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { selectNodeLabelById } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultSuccessList,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { getFileName } from 'store/slice/FlowElement/FlowElementUtils'\n\nexport const FilePathSelect: React.FC<{\n  dataType?: DATA_TYPE\n  selectedNodeId: string | null\n  selectedFilePath: string | null\n  onSelect: (nodeId: string, filePath: string, dataType: DATA_TYPE) => void\n  label?: string\n}> = ({ dataType, selectedNodeId, selectedFilePath, onSelect, label }) => {\n  const inputNodeFilePathInfoList = useSelector(\n    (state: RootState) => {\n      const inputNodes = selectInputNode(state)\n      return Object.entries(inputNodes)\n        .map(([nodeId, inputNode]) => ({\n          nodeId,\n          filePath: inputNode.selectedFilePath,\n          fileType: inputNode.fileType,\n          dataType: toDataTypeFromFileType(inputNode.fileType),\n          nodeName: selectNodeLabelById(nodeId)(state),\n        }))\n        .filter(({ filePath }) => filePath != null)\n        .filter(({ dataType: inputNodeDataType }) =>\n          dataType != null ? inputNodeDataType === dataType : true,\n        )\n    },\n    // todo 比較関数\n  )\n\n  const latestUid = useSelector(selectPipelineLatestUid)\n\n  const algorithmNodeOutputPathInfoList = useSelector((state: RootState) => {\n    if (latestUid != null) {\n      const runResult = selectPipelineNodeResultSuccessList(state)\n      return runResult.map(({ nodeId, nodeResult }) => {\n        return {\n          nodeId,\n          nodeName: selectNodeLabelById(nodeId)(state),\n          paths: Object.entries(nodeResult.outputPaths)\n            .map(([outputKey, value]) => {\n              return {\n                outputKey,\n                filePath: value.path,\n                type: value.type,\n              }\n            })\n            .filter(({ type }) =>\n              dataType != null ? type === dataType : true,\n            ),\n        }\n      })\n    } else {\n      return []\n    }\n  })\n\n  const [open, setOpen] = React.useState(false)\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const onSelectHandle = (\n    nodeId: string,\n    filePath: string,\n    dataType: DATA_TYPE,\n  ) => {\n    onSelect(nodeId, filePath, dataType)\n    handleClose()\n  }\n\n  const menuItemList: React.ReactElement[] = []\n  inputNodeFilePathInfoList.forEach((pathInfo) => {\n    const filePath = pathInfo.filePath\n    if (Array.isArray(filePath)) {\n      filePath.forEach((pathElm) => {\n        menuItemList.push(\n          <MenuItem\n            value={`${pathInfo.nodeId}/${pathElm}`}\n            onClick={() =>\n              onSelectHandle(pathInfo.nodeId, pathElm ?? '', pathInfo.dataType)\n            }\n            key={pathInfo.nodeId}\n          >\n            {getFileName(pathElm)}\n          </MenuItem>,\n        )\n      })\n    } else {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${pathInfo.filePath}`}\n          onClick={() =>\n            onSelectHandle(pathInfo.nodeId, filePath ?? '', pathInfo.dataType)\n          }\n          key={pathInfo.nodeId}\n        >\n          {pathInfo.nodeName}\n        </MenuItem>,\n      )\n    }\n  })\n  algorithmNodeOutputPathInfoList.forEach((pathInfo) => {\n    menuItemList.push(<ListSubheader>{pathInfo.nodeName}</ListSubheader>)\n    pathInfo.paths.forEach((outputPath, i) => {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${outputPath.filePath}`}\n          onClick={() =>\n            onSelectHandle(\n              pathInfo.nodeId,\n              outputPath.filePath,\n              outputPath.type,\n            )\n          }\n          key={`${pathInfo.nodeId}/${outputPath.filePath}`}\n        >\n          {outputPath.outputKey}\n        </MenuItem>,\n      )\n    })\n  })\n\n  return (\n    <FormControl style={{ minWidth: 150, maxWidth: 220 }} variant=\"standard\">\n      <InputLabel>{!!label ? label : 'Select Item'}</InputLabel>\n      <Select\n        value={`${selectedNodeId}/${selectedFilePath}`}\n        open={open}\n        onClose={handleClose}\n        onOpen={handleOpen}\n      >\n        {menuItemList}\n      </Select>\n      {inputNodeFilePathInfoList.length +\n        algorithmNodeOutputPathInfoList.length ===\n        0 && <FormHelperText error={true}>no data</FormHelperText>}\n    </FormControl>\n  )\n}\n\nfunction toDataTypeFromFileType(fileType: FILE_TYPE) {\n  switch (fileType) {\n    case FILE_TYPE_SET.IMAGE:\n      return DATA_TYPE_SET.IMAGE\n    case FILE_TYPE_SET.CSV:\n      return DATA_TYPE_SET.CSV\n    case FILE_TYPE_SET.HDF5:\n      return DATA_TYPE_SET.HDF5\n    case FILE_TYPE_SET.FLUO:\n      return DATA_TYPE_SET.FLUO\n    case FILE_TYPE_SET.BEHAVIOR:\n      return DATA_TYPE_SET.BEHAVIOR\n  }\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport FormControl from '@mui/material/FormControl'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\nimport {\n  selectDisplayDataIsSingle,\n  selectImageItemFilePath,\n  selectRoiItemFilePath,\n  selectRoiItemNodeId,\n  selectSelectedVisualizeItemId,\n  selectTimeSeriesItemRefImageItemId,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n  selectVisualizeImageItemIdList,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nimport { DisplayDataItemLayoutMenuIcon } from './VisualizeItemLayoutMenuIcon'\nimport { DisplayDataItem } from './DisplayDataItem'\nimport {\n  selectItem,\n  setItemSize,\n  setRoiItemFilePath,\n  setTimeSeriesRefImageItemId,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { RootState } from 'store/store'\nimport { FilePathSelect } from './FilePathSelect'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const VisualizeItem = React.memo<{ itemId: number }>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(selectItem(itemId))\n  }\n  const isSelected = useSelector(\n    (state: RootState) => selectSelectedVisualizeItemId(state) === itemId,\n  )\n  const { size, onMouseDownX, onMouseDownY, onMouseDownXY } =\n    useItemDragResize(itemId)\n  return (\n    <Box sx={{ m: 1, display: 'flex', flexDirection: 'row' }}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Paper\n          variant=\"outlined\"\n          key={itemId}\n          onClick={onClick}\n          sx={{\n            width: `${size.width}px`,\n            height: `${size.height}px`,\n            p: 1,\n            borderColor: (theme) =>\n              isSelected ? theme.palette.primary.light : undefined,\n          }}\n        >\n          <ItemHeader itemId={itemId} />\n          <DisplayDataItem itemId={itemId} />\n        </Paper>\n        <Box\n          sx={{\n            display: 'flex',\n          }}\n        >\n          <Box\n            sx={{\n              flexGrow: 1,\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              cursor: 'row-resize',\n            }}\n            onMouseDown={onMouseDownY}\n          />\n          <Box\n            sx={{\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              width: '12px',\n              cursor: 'nwse-resize',\n            }}\n            onMouseDown={onMouseDownXY}\n          />\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Box\n          sx={{\n            flexGrow: 1,\n            position: 'relative',\n            left: '-2px',\n            width: '4px',\n            cursor: 'col-resize',\n          }}\n          onMouseDown={onMouseDownX}\n        />\n        <Box\n          sx={{\n            position: 'relative',\n            height: '12px',\n            width: '4px',\n            left: '-2px',\n            cursor: 'nwse-resize',\n          }}\n          onMouseDown={onMouseDownXY}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst ItemHeader = React.memo<{ itemId: number }>(({ itemId }) => {\n  const itemDataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <Box display=\"flex\" justifyContent=\"flex-end\">\n      <Box flexGrow={1}>\n        <>ID: {itemId}</>\n        <FilePathSelectItem itemId={itemId} />\n      </Box>\n      {itemDataType === DATA_TYPE_SET.TIME_SERIES && (\n        <Box flexGrow={1}>\n          <RefImageItemIdSelect itemId={itemId} />\n        </Box>\n      )}\n      {itemDataType === DATA_TYPE_SET.IMAGE && (\n        <Box flexGrow={1}>\n          <RoiSelect itemId={itemId} />\n        </Box>\n      )}\n      <Box>\n        <DisplayDataItemLayoutMenuIcon itemId={itemId} />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const selectedNodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const selectedFilePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFilePath = (\n    nodeId: string,\n    newFilePath: string,\n    newDataType: DATA_TYPE,\n  ) => {\n    const basePayload = {\n      itemId,\n      nodeId,\n      filePath: newFilePath,\n      dataType: newDataType,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && selectedFilePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: dataType,\n              prevFilePath: selectedFilePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n\n  return (\n    <FilePathSelect\n      selectedNodeId={selectedNodeId}\n      selectedFilePath={selectedFilePath}\n      onSelect={onSelectFilePath}\n    />\n  )\n})\n\nconst RefImageItemIdSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const itemIdList = useSelector(\n    selectVisualizeImageItemIdList,\n    arrayEqualityFn,\n  )\n  const onChangeRefImageItemId = (event: SelectChangeEvent) => {\n    const value = Number(event.target.value)\n    dispatch(\n      setTimeSeriesRefImageItemId({\n        itemId,\n        refImageItemId: isNaN(value) ? null : value,\n      }),\n    )\n  }\n  const selectedRefImageItemId = useSelector(\n    selectTimeSeriesItemRefImageItemId(itemId),\n  )\n  return (\n    <FormControl fullWidth variant=\"standard\">\n      <InputLabel>ref image</InputLabel>\n      <Select\n        value={String(selectedRefImageItemId)}\n        onChange={onChangeRefImageItemId}\n      >\n        <MenuItem value={undefined}>{'None'}</MenuItem>\n        {itemIdList.map((value) => (\n          <MenuItem value={value}>{value}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst MIN_WIDTH = 200\nconst MIN_HEIFHT = 150\n\nfunction useItemDragResize(itemId: number) {\n  const dispatch = useDispatch()\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const [movingSize, setMovingSize] = React.useState({ width, height })\n  const onCommitSize = React.useCallback(\n    (size: { width: number; height: number }) =>\n      dispatch(setItemSize({ itemId, ...size })),\n    [dispatch, itemId],\n  )\n  const onMouseDownX = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          setMovingSize((size) => ({ ...size, width: movingWidth }))\n          movingX = moveEvent.screenX\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, width: movingWidth })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownY = useMouseDragHandler(\n    (downEvent) => {\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize((size) => ({ ...size, height: movingHeight }))\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownXY = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize({ width: movingWidth, height: movingHeight })\n          movingX = moveEvent.screenX\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ width: movingWidth, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  return {\n    size: movingSize,\n    onMouseDownX,\n    onMouseDownY,\n    onMouseDownXY,\n  }\n}\n\nfunction useMouseDragHandler(\n  onMouseDown: (event: React.MouseEvent) => {\n    onMouseMove: (this: Document, event: MouseEvent) => void\n    onMouseUp: (this: Document, event: MouseEvent) => void\n  },\n  dependencies: React.DependencyList,\n) {\n  return React.useCallback(\n    (event: React.MouseEvent) => {\n      const { onMouseMove, onMouseUp } = onMouseDown(event)\n      document.addEventListener('mousemove', onMouseMove)\n      document.addEventListener(\n        'mouseup',\n        (event) => {\n          document.removeEventListener('mousemove', onMouseMove)\n          onMouseUp.call(document, event)\n        },\n        { once: true },\n      )\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dependencies],\n  )\n}\n\nconst RoiSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const roiItemNodeId = useSelector(selectRoiItemNodeId(itemId))\n  const roiItemFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const onSelectRoiFilePath = (nodeId: string, filePath: string) => {\n    dispatch(setRoiItemFilePath({ itemId, nodeId, filePath }))\n  }\n  return (\n    <FilePathSelect\n      selectedFilePath={roiItemFilePath}\n      selectedNodeId={roiItemNodeId}\n      onSelect={onSelectRoiFilePath}\n      dataType={DATA_TYPE_SET.ROI}\n      label={'Select Roi'}\n    />\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { selectVisualizeItemLayout } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nimport { VisualizeItemAddButton } from './VisualizeItemAddButton'\nimport { VisualizeItem } from './VisualizeItem'\n\nexport const FlexItemList: React.FC = () => {\n  const layout = useSelector(selectVisualizeItemLayout, twoDimarrayEqualityFn)\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"column\" p={1} m={1}>\n      {layout.map((row) => (\n        <Box display=\"flex\" flexDirection=\"row\">\n          {row.map((itemId) => (\n            <VisualizeItem itemId={itemId} key={itemId} />\n          ))}\n        </Box>\n      ))}\n      <VisualizeItemAddButton />\n    </Box>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { GradientPickerPopover } from 'react-linear-gradient-picker'\nimport { SketchPicker } from 'react-color'\nimport { PALETTE_COLOR_SHAPE_TYPE } from 'react-linear-gradient-picker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const GradientColorPicker = React.memo<{\n  colors: { rgb: string; offset: string }[]\n  dispatchSetColor: (colorCode: ColorType[]) => void\n}>(({ colors, dispatchSetColor }) => {\n  const palette: PALETTE_COLOR_SHAPE_TYPE[] = colors.map((value) => {\n    return {\n      offset: value.offset,\n      color: value.rgb,\n    }\n  })\n\n  const onPaletteChange = (palette: PALETTE_COLOR_SHAPE_TYPE[]) => {\n    const colorCode = palette.map((value) => {\n      const color = value.color\n      const rgbStr = color.replace(/[^0-9,]/g, '').split(',')\n      const rgb = {\n        r: Number(rgbStr[0]),\n        g: Number(rgbStr[1]),\n        b: Number(rgbStr[2]),\n      }\n      return {\n        rgb: `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`,\n        offset: value.offset,\n      }\n    })\n    dispatchSetColor(colorCode)\n  }\n\n  const [open, setOpen] = useState(false)\n\n  return (\n    <GradientPickerPopover\n      open={open}\n      setOpen={() => setOpen(!open)}\n      // showAnglePicker={true}\n      width={150}\n      maxStops={10}\n      paletteHeight={25}\n      palette={palette}\n      onPaletteChange={onPaletteChange}\n      flatStyle={true}\n    >\n      <WrappedSketchPicker />\n    </GradientPickerPopover>\n  )\n})\n\ntype WrapperPropTypes = {\n  onSelect?: (color: string, opacity?: number) => void\n  color?: string\n}\n\nconst WrappedSketchPicker: React.FC<WrapperPropTypes> = ({\n  onSelect,\n  color,\n}) => {\n  return (\n    <SketchPicker\n      color={color}\n      width=\"150px\"\n      // styles={{width: \"10px\"}}\n      onChange={(c) => {\n        const { r, g, b, a } = c.rgb\n        onSelect?.(`rgb(${r}, ${g}, ${b})`, a)\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Switch from '@mui/material/Switch'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\n\nimport {\n  selectImageItemShowGrid,\n  selectImageItemShowLine,\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemFilePath,\n  selectDisplayDataIsSingle,\n  selectImageItemSaveFilename,\n  selectImageItemSaveFormat,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setImageItemShowGrid,\n  setImageItemShowLine,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowScale,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemColors,\n  resetImageActiveIndex,\n  setImageItemRoiAlpha,\n  setImageItemSaveFileName,\n  setImageItemSaveFormat,\n  setImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\nimport { FileSelectImple } from 'components/FlowChart/FlowChartNode/FileSelect'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'store/slice/FilesTree/FilesTreeType'\nimport { Box, TextField } from '@mui/material'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\nimport Button from '@mui/material/Button'\nimport { getImageData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const ImageItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectImageFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.IMAGE,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.IMAGE })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  const colors = useSelector(selectImageItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setImageItemColors({ itemId, colors: colorCode }))\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectImageFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.IMAGE}\n        selectButtonLabel=\"Select Image\"\n      />\n      <StartEndIndex />\n      <Showticklabels />\n      <ShowLine />\n      <ShowGrid />\n      <ShowScale />\n      <Zsmooth />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <Alpha />\n      <RoiAlpha />\n      <SaveFig />\n    </div>\n  )\n}\n\nconst Showticklabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setImageItemShowticklabels({ itemId, showticklabels: !showticklabels }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"Showticklabels\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"ShowLine\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"ShowGrid\"\n    />\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"ShowScale\"\n    />\n  )\n}\n\nconst Zsmooth: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string | boolean>) => {\n    dispatch(setImageItemZsmooth({ itemId, zsmooth: event.target.value }))\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>smooth</InputLabel>\n      <Select label=\"smooth\" value={zsmooth} onChange={handleChange}>\n        <MenuItem value={'best'}>best</MenuItem>\n        <MenuItem value={'fast'}>fast</MenuItem>\n        <MenuItem value={'false'}>False</MenuItem>\n      </Select>\n    </FormControl>\n  )\n}\n\nconst Alpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const inputError = !(alpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemAlpha({ itemId, alpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        label={'image alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={alpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst RoiAlpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const inputError = !(roiAlpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemRoiAlpha({ itemId, roiAlpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        label={'roi alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={roiAlpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst SaveFig: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const saveFileName = useSelector(selectImageItemSaveFilename(itemId))\n  const saveFormat = useSelector(selectImageItemSaveFormat(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(setImageItemSaveFormat({ itemId, saveFormat: event.target.value }))\n  }\n  const onChangeFileName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      setImageItemSaveFileName({ itemId, saveFileName: event.target.value }),\n    )\n  }\n\n  return (\n    <>\n      <h3>SaveFig</h3>\n      <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n        <InputLabel>format</InputLabel>\n        <Select label=\"smooth\" value={saveFormat} onChange={handleChange}>\n          <MenuItem value={'svg'}>svg</MenuItem>\n          <MenuItem value={'png'}>png</MenuItem>\n          <MenuItem value={'jpeg'}>jpeg</MenuItem>\n          <MenuItem value={'webp'}>webp</MenuItem>\n        </Select>\n      </FormControl>\n      <TextField\n        label={'Filename'}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeFileName}\n        value={saveFileName}\n      />\n    </>\n  )\n}\n\nconst StartEndIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const [startIndex, onChangeStartIndex] = React.useState(\n    useSelector(selectImageItemStartIndex(itemId)),\n  )\n  const [endIndex, onChangeEndIndex] = React.useState(\n    useSelector(selectImageItemEndIndex(itemId)),\n  )\n  const inputError = !(startIndex > 0)\n  const dispatch = useDispatch()\n  const onStartChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeStartIndex(newValue)\n    }\n  }\n  const onEndChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeEndIndex(newValue)\n    }\n  }\n\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n  const onClickButton = () => {\n    if (startIndex > 0) {\n      dispatch(setImageItemStartIndex({ itemId, startIndex }))\n      dispatch(setImageItemEndIndex({ itemId, endIndex }))\n      dispatch(resetImageActiveIndex({ itemId, startIndex, endIndex }))\n      if (filePath !== null) {\n        dispatch(\n          getImageData({\n            path: filePath,\n            startIndex: startIndex ?? 1,\n            endIndex: endIndex ?? 10,\n          }),\n        )\n      }\n    }\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>\n      <TextField\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 1,\n          min: 0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onStartChange}\n        value={startIndex}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n      ~\n      <TextField\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onEndChange}\n        value={endIndex}\n      />\n      <Button\n        size=\"small\"\n        className=\"ctrl_btn\"\n        variant=\"contained\"\n        onClick={onClickButton}\n      >\n        load\n      </Button>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FileSelectImple } from 'components/FlowChart/FlowChartNode/FileSelect'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'store/slice/FilesTree/FilesTreeType'\nimport { FormControlLabel, Switch, TextField } from '@mui/material'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const CsvItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const dispatch = useDispatch()\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.CSV,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.CSV })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.CSV}\n        selectButtonLabel=\"Select CSV\"\n      />\n      <Transpose />\n      <SetHeader />\n      <SetIndex />\n    </div>\n  )\n}\n\nconst Transpose: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemTranspose({ itemId, transpose: !transpose }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={transpose} onChange={toggleChecked} />}\n      label=\"transpose\"\n    />\n  )\n}\n\nconst SetHeader: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeSetHeader = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value === '' ? null : Number(event.target.value)\n    if (newValue === null || newValue >= 0) {\n      dispatch(setCsvItemSetHeader({ itemId, setHeader: newValue }))\n    }\n  }\n\n  return (\n    <>\n      <TextField\n        label=\"header\"\n        sx={{\n          width: 100,\n          margin: (theme) => theme.spacing(0, 1, 0, 1),\n        }}\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeSetHeader}\n        value={setHeader}\n      />\n    </>\n  )\n}\n\nconst SetIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemSetIndex({ itemId, setIndex: !setIndex }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={setIndex} onChange={toggleChecked} />}\n      label=\"setIndex\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FormControlLabel, Switch } from '@mui/material'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setHeatMapItemColors,\n  setHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const HeatmapItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const colors = useSelector(selectHeatMapItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setHeatMapItemColors({ itemId, colors: colorCode }))\n  }\n  return (\n    <>\n      <ShowScale />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n    </>\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setHeatMapItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"showscale\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  AccordionDetails,\n  AccordionSummary,\n  FormControlLabel,\n  Switch,\n  TextField,\n} from '@mui/material'\nimport Box from '@mui/material/Box'\nimport Checkbox from '@mui/material/Checkbox'\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectTimeSeriesItemFilePath,\n  selectTimeSeriesItemDrawIndexMap,\n  selectTimeSeriesItemKeys,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  setTimeSeriesItemDrawIndexMap,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemDrawOrderList,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  getTimeSeriesAllData,\n  getTimeSeriesDataById,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { Accordion } from 'components/Accordion'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\nexport const TimeSeriesItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <Offset />\n      <Span />\n      <ShowGrid />\n      <ShowLine />\n      <ShowTickLabels />\n      <ZeroLine />\n      <Xrange />\n      <LegendSelect />\n    </div>\n  )\n}\n\nconst Offset: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemOffset({ itemId, offset: !offset }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={offset} onChange={toggleChecked} />}\n      label=\"offset\"\n    />\n  )\n}\n\nconst Span: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n\n  const dispatch = useDispatch()\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number' && newValue > 0) {\n      dispatch(setTimeSeriesItemSpan({ itemId, span: newValue }))\n    }\n  }\n  return (\n    <FormControlLabel\n      control={\n        <TextField\n          type=\"number\"\n          style={{ width: '6vw' }}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={onChange}\n          defaultValue={span}\n        />\n      }\n      label=\"offset std\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"showgrid\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"showline\"\n    />\n  )\n}\n\nconst ShowTickLabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setTimeSeriesItemShowTickLabels({\n        itemId,\n        showticklabels: !showticklabels,\n      }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"showticklabels\"\n    />\n  )\n}\n\nconst ZeroLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemZeroLine({ itemId, zeroline: !zeroline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={zeroline} onChange={toggleChecked} />}\n      label=\"zeroline\"\n    />\n  )\n}\n\nconst Xrange: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeLeft = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newLeft = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newLeft === 'number') {\n      dispatch(setTimeSeriesItemXrangeLeft({ itemId, left: newLeft }))\n    }\n  }\n  const onChangeRight = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newRight = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newRight === 'number') {\n      dispatch(setTimeSeriesItemXrangeRight({ itemId, right: newRight }))\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <>\n          left:\n          <TextField\n            style={{ width: 50 }}\n            type=\"number\"\n            inputProps={{\n              step: 1,\n              min: 0,\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeLeft}\n            defaultValue={xrange.left}\n          />\n          right:\n          <TextField\n            style={{ width: 50 }}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeRight}\n            defaultValue={xrange.right}\n          />\n        </>\n      }\n      label=\"\"\n    />\n  )\n}\n\nconst LegendSelect: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const drawIndexMap = useSelector(selectTimeSeriesItemDrawIndexMap(itemId))\n  const dataKeys = useSelector(\n    selectTimeSeriesItemKeys(itemId),\n    arrayEqualityFn,\n  )\n  const drawOrderList = useSelector(\n    selectTimeSeriesItemDrawOrderList(itemId),\n    arrayEqualityFn,\n  )\n  const filePath = useSelector(selectTimeSeriesItemFilePath(itemId))\n\n  const allHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      setTimeSeriesItemDrawIndexMap({\n        itemId,\n        drawIndexMap: Object.fromEntries(\n          dataKeys.map((key) => {\n            return [key, event.target.checked]\n          }),\n        ),\n      }),\n    )\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: event.target.checked ? dataKeys : [],\n      }),\n    )\n\n    if (event.target.checked && filePath !== null) {\n      dispatch(getTimeSeriesAllData({ path: filePath }))\n    }\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const index = event.target.value\n    const newDrawOrderList = event.target.checked\n      ? [...drawOrderList, index]\n      : drawOrderList.filter((value) => value !== index)\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    // CheckList\n    dispatch(\n      setTimeSeriesItemDrawIndexMap({\n        itemId,\n        drawIndexMap: Object.fromEntries(\n          dataKeys.map((key) => {\n            if (key === index) {\n              return [key, event.target.checked]\n            }\n            return [key, drawIndexMap[key]]\n          }),\n        ),\n      }),\n    )\n\n    if (filePath !== null) {\n      dispatch(getTimeSeriesDataById({ path: filePath, index: index }))\n    }\n  }\n\n  const children = (\n    <Box sx={{ display: 'flex', flexDirection: 'column', ml: 3 }}>\n      {dataKeys.map((key) => (\n        <FormControlLabel\n          key={`${key}`}\n          label={`Index ${key}`}\n          control={\n            <Checkbox\n              checked={drawIndexMap[key]}\n              onChange={handleChange}\n              value={key}\n            />\n          }\n        />\n      ))}\n    </Box>\n  )\n\n  return (\n    <Accordion sx={{ mt: 2 }} TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        Legend select\n      </AccordionSummary>\n      <AccordionDetails>\n        <>\n          <FormControlLabel\n            label=\"All Check\"\n            control={\n              <Checkbox\n                checked={Object.values(drawIndexMap).every((v) => {\n                  return v\n                })}\n                onChange={allHandleChange}\n              />\n            }\n          />\n          {children}\n        </>\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","import React from 'react'\n// import { useSelector, useDispatch } from 'react-redux'\n// import { SelectedItemIdContext } from '../VisualizeItemEditor'\n// import { selectRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n// import { setRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n// import { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\n// import { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n// import { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const RoiItemEditor: React.FC = () => {\n  // const itemId = React.useContext(SelectedItemIdContext)\n  // const dispatch = useDispatch()\n  // const { onUploadFile } = useFileUploader(FILE_TYPE_SET.CSV)\n  // const onUploadFileHandle = (formData: FormData, fileName: string) => {\n  //   onUploadFile(formData, fileName)\n  // }\n\n  // const colors = useSelector(selectRoiItemColors(itemId))\n  // const dispathSetColor = (colorCode: ColorType[]) => {\n  //   dispatch(setRoiItemColors({ itemId, colors: colorCode }))\n  // }\n\n  return (\n    <>\n      {/* <GradientColorPicker /> */}\n      {/* <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} /> */}\n    </>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FormControlLabel, TextField } from '@mui/material'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nexport const ScatterItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <XIndex />\n      <YIndex />\n    </div>\n  )\n}\n\nconst XIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeXIndex = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value === '' ? null : Number(event.target.value)\n    if (newValue !== null && newValue >= 0) {\n      dispatch(setScatterItemXIndex({ itemId, xIndex: newValue }))\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <>\n          <TextField\n            style={{ width: 50 }}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeXIndex}\n            defaultValue={xIndex}\n          />\n          xIndex\n        </>\n      }\n      label=\"\"\n    />\n  )\n}\n\nconst YIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeYIndex = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value === '' ? null : Number(event.target.value)\n    if (newValue !== null && newValue >= 0) {\n      dispatch(setScatterItemYIndex({ itemId, yIndex: newValue }))\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <>\n          <TextField\n            style={{ width: 50 }}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeYIndex}\n            defaultValue={yIndex}\n          />\n          yIndex\n        </>\n      }\n      label=\"\"\n    />\n  )\n}\n","import React from 'react'\n\nexport const BarItemEditor: React.FC = () => {\n  return <div style={{ margin: '10px', padding: 10 }}></div>\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport {\n  selectSelectedVisualizeItemId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { ImageItemEditor } from './Editor/ImageItemEditor'\nimport { CsvItemEditor } from './Editor/CsvItemEditor'\nimport { HeatmapItemEditor } from './Editor/HeatmapItemEditor'\nimport { TimeSeriesItemEditor } from './Editor/TimeSeriesItemEditor'\nimport { RoiItemEditor } from './Editor/RoiItemEditor'\nimport { ScatterItemEditor } from './Editor/ScatterItemEditor'\nimport { BarItemEditor } from './Editor/BarItemEditor'\n\nexport const VisualizeItemEditor = () => {\n  const selectedItemId = useSelector(selectSelectedVisualizeItemId)\n  return (\n    <>\n      {selectedItemId != null ? (\n        <SelectedItemIdContext.Provider value={selectedItemId}>\n          <Box m={1}>\n            <DisplayDataItemEditor />\n          </Box>\n        </SelectedItemIdContext.Provider>\n      ) : (\n        'Please select item...'\n      )}\n    </>\n  )\n}\n\nexport const SelectedItemIdContext = React.createContext<number>(NaN)\n\nconst DisplayDataItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <div style={{ marginTop: 8 }}>\n      <DisplayEditor dataType={dataType} />\n    </div>\n  )\n}\n\nconst DisplayEditor: React.FC<{\n  dataType: DATA_TYPE | null\n}> = ({ dataType }) => {\n  /* 他のtypeのEditorも必要になったら追加する */\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return <ImageItemEditor />\n    case DATA_TYPE_SET.CSV:\n      return <CsvItemEditor />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatmapItemEditor />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesItemEditor />\n    case DATA_TYPE_SET.ROI:\n      return <RoiItemEditor />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterItemEditor />\n    case DATA_TYPE_SET.BAR:\n      return <BarItemEditor />\n    case DATA_TYPE_SET.HTML:\n      return <div>html editor</div>\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport { default as MuiToolbar } from '@mui/material/Toolbar'\nimport { styled } from '@mui/material/styles'\nimport { drawerWidth } from 'components/FlowChart/FlowChart'\nimport { FlexItemList } from './FlexItemList'\nimport { VisualizeItemEditor } from './VisualizeItemEditor'\n\nconst Visualize: React.FC = () => {\n  return (\n    <RootDiv>\n      <StyledDrawer variant=\"permanent\">\n        <MuiToolbar />\n        <StyledDrawerContents>\n          <VisualizeItemEditor />\n        </StyledDrawerContents>\n      </StyledDrawer>\n      <MainContents>\n        <MuiToolbar />\n        <FlexItemList />\n      </MainContents>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n})\n\nconst StyledDrawer = styled(Drawer)({\n  width: drawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n})\n\nconst StyledDrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')({\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n  height: '100vh',\n})\n\nexport default Visualize\n","import { RootState } from 'store/store'\nimport { EXPERIMENTS_STATUS } from './ExperimentsType'\n\nconst selectExperiments = (state: RootState) => state.experiments\n\nexport const selectExperimentsSatusIsUninitialized = (state: RootState) =>\n  selectExperiments(state).status === 'uninitialized'\n\nexport const selectExperimentsSatusIsPending = (state: RootState) =>\n  selectExperiments(state).status === 'pending'\n\nexport const selectExperimentsSatusIsFulfilled = (state: RootState) =>\n  selectExperiments(state).status === 'fulfilled'\n\nexport const selectExperimentsSatusIsError = (state: RootState) =>\n  selectExperiments(state).status === 'error'\n\nexport const selectExperimentsErrorMessage = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'error') {\n    return experiments.message\n  } else {\n    throw new Error('experiments status is not error')\n  }\n}\n\nexport const selectExperimentList = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'fulfilled') {\n    return experiments.experimentList\n  } else {\n    throw new Error('experiments status is not fulfilled')\n  }\n}\n\nexport const selectExperimentUidList = (state: RootState) =>\n  Object.keys(selectExperimentList(state))\n\nexport const selectExperiment = (uid: string) => (state: RootState) =>\n  selectExperimentList(state)[uid]\n\nexport const selectExperimentTimeStamp = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).timestamp\n\nexport const selectExperimentName = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).name\n\nexport const selectExperimentStatus =\n  (uid: string) =>\n  (state: RootState): EXPERIMENTS_STATUS => {\n    const functions = selectExperimentList(state)[uid].functions\n    const statusList = Object.values(functions).map((f) => f.status)\n    if (statusList.findIndex((status) => status === 'error') >= 0) {\n      return 'error'\n    } else if (statusList.findIndex((status) => status === 'running') >= 0) {\n      return 'running'\n    } else {\n      return 'success'\n    }\n  }\n\nexport const selectExperimentCheckList =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionNodeIdList =\n  (uid: string) => (state: RootState) =>\n    Object.keys(selectExperimentList(state)[uid].functions)\n\nexport const selectExperimentFunction =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentList(state)[uid].functions[nodeId]\n\nexport const selectExperimentFunctionName =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).name\n\nexport const selectExperimentFunctionStatus =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n","import React from 'react'\nimport DoneIcon from '@mui/icons-material/Done'\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline'\nimport HorizontalRuleIcon from '@mui/icons-material/HorizontalRule'\n\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport const ExperimentStatusIcon = React.memo<{ status: EXPERIMENTS_STATUS }>(\n  ({ status }) => {\n    switch (status) {\n      case 'error':\n        return <ErrorOutlineIcon color=\"error\" />\n      case 'success':\n        return <DoneIcon color=\"success\" />\n      case 'running':\n        return <HorizontalRuleIcon color=\"inherit\" />\n    }\n  },\n)\n","import React, { useState, useRef } from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport { BASE_URL } from 'const/API'\nimport axios from 'axios'\nimport GetAppIcon from '@mui/icons-material/GetApp'\n\nexport const NWBDownloadButton = React.memo<{\n  name: string\n}>(({ name }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n\n  const onClick = async () => {\n    try {\n      const response = await axios.get(\n        `${BASE_URL}/experiments/download/nwb/${uid}`,\n        {\n          responseType: 'blob',\n        },\n      )\n      const url = URL.createObjectURL(new Blob([response.data]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      throw new Error('Download Error')\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick}>\n        <GetAppIcon color=\"primary\" />\n      </IconButton>\n      <a href={url} download={`${name}.nwb`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n\nexport const ConfigDownloadButton = React.memo(() => {\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n\n  const onClick = async () => {\n    try {\n      const response = await axios.get(\n        `${BASE_URL}/experiments/download/config/${uid}`,\n        {\n          responseType: 'blob',\n        },\n      )\n      const url = URL.createObjectURL(new Blob([response.data]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      throw new Error('Download Error')\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick}>\n        <GetAppIcon color=\"primary\" />\n      </IconButton>\n      <a href={url} download={`config.yaml`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport Collapse from '@mui/material/Collapse'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Typography from '@mui/material/Typography'\n\nimport { ExperimentUidContext } from './ExperimentTable'\nimport {\n  selectExperimentFunctionName,\n  selectExperimentFunctionNodeIdList,\n  selectExperimentFunctionStatus,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { NWBDownloadButton } from './Button/DownloadButton'\n\nexport const CollapsibleTable = React.memo<{\n  open: boolean\n}>(({ open }) => {\n  return (\n    <TableRow>\n      <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={10}>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Box margin={1}>\n            <Typography variant=\"h6\" gutterBottom component=\"div\">\n              Details\n            </Typography>\n            <Table size=\"small\" aria-label=\"purchases\">\n              <Head />\n              <Body />\n            </Table>\n          </Box>\n        </Collapse>\n      </TableCell>\n    </TableRow>\n  )\n})\n\nconst Head = React.memo(() => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>Function</TableCell>\n        <TableCell>nodeID</TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>NWB</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst Body = React.memo(() => {\n  const uid = React.useContext(ExperimentUidContext)\n  const nodeIdList = useSelector(\n    selectExperimentFunctionNodeIdList(uid),\n    arrayEqualityFn,\n  )\n  return (\n    <TableBody>\n      {nodeIdList.map((nodeId) => (\n        <TableRowOfFunction nodeId={nodeId} />\n      ))}\n    </TableBody>\n  )\n})\n\nconst TableRowOfFunction = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const name = useSelector(selectExperimentFunctionName(uid, nodeId))\n  const status = useSelector(selectExperimentFunctionStatus(uid, nodeId))\n  return (\n    <TableRow key={nodeId}>\n      <TableCell component=\"th\" scope=\"row\">\n        {name}\n      </TableCell>\n      <TableCell>{nodeId}</TableCell>\n      <TableCell>\n        <ExperimentStatusIcon status={status} />\n      </TableCell>\n      <TableCell>\n        <NWBDownloadButton name={name} />\n      </TableCell>\n    </TableRow>\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport IconButton from '@mui/material/IconButton'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline'\nimport { selectExperimentName } from 'store/slice/Experiments/ExperimentsSelectors'\nimport { deleteExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentUidContext } from '../ExperimentTable'\n\nexport const DeleteButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const uid = React.useContext(ExperimentUidContext)\n\n  const name = useSelector(selectExperimentName(uid))\n  const [open, setOpen] = React.useState(false)\n\n  const onClickOpen = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(deleteExperimentByUid(uid))\n  }\n  return (\n    <>\n      <IconButton onClick={onClickOpen}>\n        <DeleteOutlineIcon color=\"error\" />\n      </IconButton>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete {name}?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport { useSnackbar } from 'notistack'\nimport { importExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { AppDispatch } from 'store/store'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\nimport { RUN_BTN_OPTIONS } from 'store/slice/Pipeline/PipelineType'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport ReplyIcon from '@mui/icons-material/Reply'\n\nexport const ImportButton = React.memo(() => {\n  const dispatch: AppDispatch = useDispatch()\n  const uid = React.useContext(ExperimentUidContext)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = () => {\n    dispatch(importExperimentByUid(uid))\n      .unwrap()\n      .then(() =>\n        enqueueSnackbar('Successfully imported.', { variant: 'success' }),\n      )\n    dispatch(setRunBtnOption({ runBtnOption: RUN_BTN_OPTIONS.RUN_ALREADY }))\n  }\n  return (\n    <IconButton onClick={onClick}>\n      <ReplyIcon />\n    </IconButton>\n  )\n})\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\nimport Alert from '@mui/material/Alert'\nimport AlertTitle from '@mui/material/AlertTitle'\nimport IconButton from '@mui/material/IconButton'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport ReplayIcon from '@mui/icons-material/Replay'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport {\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  TableSortLabel,\n} from '@mui/material'\n\nimport { CollapsibleTable } from './CollapsibleTable'\nimport {\n  selectExperimentsSatusIsUninitialized,\n  selectExperimentsSatusIsFulfilled,\n  selectExperimentTimeStamp,\n  selectExperimentName,\n  selectExperimentStatus,\n  selectExperimentsSatusIsError,\n  selectExperimentsErrorMessage,\n  selectExperimentList,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport {\n  deleteExperimentByList,\n  getExperiments,\n} from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { Experiment } from 'store/slice/Experiments/ExperimentsType'\nimport { DeleteButton } from './Button/DeleteButton'\nimport {\n  NWBDownloadButton,\n  ConfigDownloadButton,\n} from './Button/DownloadButton'\nimport { ImportButton } from './Button/ImportButton'\n\nexport const ExperimentUidContext = React.createContext<string>('')\n\nexport const ExperimentTable: React.FC = () => {\n  const isUninitialized = useSelector(selectExperimentsSatusIsUninitialized)\n  const isFulfilled = useSelector(selectExperimentsSatusIsFulfilled)\n  const isError = useSelector(selectExperimentsSatusIsError)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (isUninitialized) {\n      dispatch(getExperiments())\n    }\n  }, [dispatch, isUninitialized])\n  if (isFulfilled) {\n    return <TableImple />\n  } else if (isError) {\n    return <ExperimentsErrorView />\n  } else {\n    return null\n  }\n}\n\nconst ExperimentsErrorView: React.FC = () => {\n  const message = useSelector(selectExperimentsErrorMessage)\n  return (\n    <Alert severity=\"error\">\n      <AlertTitle>failed to get experiments...</AlertTitle>\n      {message}\n    </Alert>\n  )\n}\n\nconst TableImple = React.memo(() => {\n  const experimentList = useSelector(selectExperimentList)\n  const dispatch = useDispatch()\n  const onClickReload = () => {\n    dispatch(getExperiments())\n  }\n  const [order, setOrder] = React.useState<Order>('asc')\n  const [sortTarget, setSortTarget] =\n    React.useState<keyof Experiment>('timestamp')\n  const sortHandler =\n    (property: keyof Experiment) => (event: React.MouseEvent<unknown>) => {\n      const isAsc = sortTarget === property && order === 'asc'\n      setOrder(isAsc ? 'desc' : 'asc')\n      setSortTarget(property)\n    }\n\n  const [checkedList, setCheckedList] = useState<string[]>([])\n  const [open, setOpen] = React.useState(false)\n\n  const onCheckBoxClick = (uid: string) => {\n    if (checkedList.includes(uid)) {\n      setCheckedList(checkedList.filter((v) => v !== uid))\n    } else {\n      setCheckedList([...checkedList, uid])\n    }\n  }\n  const onClickDelete = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    dispatch(deleteExperimentByList(checkedList))\n    setCheckedList([])\n    setOpen(false)\n  }\n\n  return (\n    <Box>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        <Button\n          sx={{\n            marginBottom: (theme) => theme.spacing(1),\n          }}\n          variant=\"outlined\"\n          endIcon={<ReplayIcon />}\n          onClick={onClickReload}\n        >\n          Reload\n        </Button>\n        <Button\n          sx={{\n            marginBottom: (theme) => theme.spacing(1),\n          }}\n          variant=\"outlined\"\n          color=\"error\"\n          endIcon={<DeleteIcon />}\n          onClick={onClickDelete}\n          disabled={checkedList.length === 0}\n        >\n          Delete\n        </Button>\n      </Box>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <TableContainer component={Paper} elevation={0} variant=\"outlined\">\n        <Table aria-label=\"collapsible table\">\n          <HeadItem order={order} sortHandler={sortHandler} />\n          <TableBody>\n            {Object.values(experimentList)\n              .sort(getComparator(order, sortTarget))\n              .map((expData) => (\n                <ExperimentUidContext.Provider\n                  value={expData.uid}\n                  key={expData.uid}\n                >\n                  <RowItem onCheckBoxClick={onCheckBoxClick} />\n                </ExperimentUidContext.Provider>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  )\n})\n\nconst HeadItem = React.memo<{\n  order: Order\n  sortHandler: any\n}>(({ order, sortHandler }) => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell />\n        <TableCell />\n        <TableCell>\n          <TableSortLabel\n            active\n            direction={order}\n            onClick={sortHandler('timestamp')}\n          >\n            Timestamp\n          </TableSortLabel>\n        </TableCell>\n        <TableCell>\n          <TableSortLabel active direction={order} onClick={sortHandler('uid')}>\n            ID\n          </TableSortLabel>\n        </TableCell>\n        <TableCell>\n          <TableSortLabel\n            active\n            direction={order}\n            onClick={sortHandler('name')}\n          >\n            Name\n          </TableSortLabel>\n        </TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>Reproduce</TableCell>\n        <TableCell>workflow</TableCell>\n        <TableCell>NWB</TableCell>\n        <TableCell>Delete</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst RowItem = React.memo<{\n  onCheckBoxClick: (uid: string) => void\n}>(({ onCheckBoxClick }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const timestamp = useSelector(selectExperimentTimeStamp(uid))\n  const status = useSelector(selectExperimentStatus(uid))\n  const name = useSelector(selectExperimentName(uid))\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      <TableRow\n        sx={{\n          '& > *': {\n            borderBottom: 'unset',\n          },\n          [`& .${tableCellClasses.root}`]: {\n            borderBottomWidth: 0,\n          },\n        }}\n      >\n        <TableCell>\n          <Checkbox onChange={() => onCheckBoxClick(uid)} />\n        </TableCell>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {timestamp}\n        </TableCell>\n        <TableCell>{uid}</TableCell>\n        <TableCell>{name}</TableCell>\n        <TableCell>\n          <ExperimentStatusIcon status={status} />\n        </TableCell>\n        <TableCell>\n          <ImportButton />\n        </TableCell>\n        <TableCell>\n          <ConfigDownloadButton />\n        </TableCell>\n        <TableCell>\n          <NWBDownloadButton name={uid} />\n        </TableCell>\n        <TableCell>\n          <DeleteButton />\n        </TableCell>\n      </TableRow>\n      <CollapsibleTable open={open} />\n    </React.Fragment>\n  )\n})\n\ntype Order = 'asc' | 'desc'\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string },\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n","import React from 'react'\nimport { default as MuiToolbar } from '@mui/material/Toolbar'\nimport { ExperimentTable } from './ExperimentTable'\n\nconst Experiment = React.memo(() => {\n  return (\n    <div style={{ display: 'flex' }}>\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1,\n          height: '100vh',\n          padding: 16,\n        }}\n      >\n        <MuiToolbar />\n        <ExperimentTable />\n      </main>\n    </div>\n  )\n})\n\nexport default Experiment\n","import { Node } from 'react-flow-renderer'\n\nimport {\n  AlgorithmNodePostData,\n  InputNodePostData,\n  NodePostDataType,\n  RunPostData,\n} from 'api/run/Run'\n\nimport { RootState } from 'store/store'\n\nimport {\n  selectAlgorithmFunctionPath,\n  selectAlgorithmIsUpdated,\n  selectAlgorithmName,\n  selectAlgorithmParams,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectEdgeListForRun,\n  selectFlowElements,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  isAlgorithmNodeData,\n  isNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport { selectNwbParams } from 'store/slice/NWB/NWBSelectors'\nimport { selectPipelineNodeResultStatus } from 'store/slice/Pipeline/PipelineSelectors'\nimport { NODE_RESULT_STATUS } from 'store/slice/Pipeline/PipelineType'\nimport { selectSnakemakeParams } from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { NODE_TYPE_SET } from 'store/slice/FlowElement/FlowElementType'\nimport {\n  selectInputNodeFileType,\n  selectInputNodeHDF5Path,\n  selectInputNodeParam,\n  selectInputNodeSelectedFilePath,\n} from 'store/slice/InputNode/InputNodeSelectors'\n\nexport const selectRunPostData = (state: RootState) => {\n  const nwbParam = selectNwbParams(state)\n  const snakemakeParam = selectSnakemakeParams(state)\n  const edgeListForRun = selectEdgeListForRun(state)\n  const nodePostDataList = selectNodePostDataListForRun(state)\n  const forceRunList = selectForceRunList(state)\n  const runPostData: Omit<RunPostData, 'name'> = {\n    nwbParam,\n    snakemakeParam,\n    edgeList: edgeListForRun,\n    nodeList: nodePostDataList,\n    forceRunList,\n  }\n  return runPostData\n}\n\n/**\n * 前回の結果で、エラーまたはParamに変更があるnodeのリストを返す\n */\nconst selectForceRunList = (state: RootState) => {\n  const elements = selectFlowElements(state)\n  return elements\n    .filter(isAlgorithmNodeData)\n    .filter((node) => {\n      const isUpdated = selectAlgorithmIsUpdated(node.id)(state)\n      const status = selectPipelineNodeResultStatus(node.id)(state)\n      return isUpdated || status === NODE_RESULT_STATUS.ERROR\n    })\n    .map((node) => ({\n      nodeId: node.id,\n      name: selectAlgorithmName(node.id)(state),\n    }))\n}\n\nconst selectNodePostDataListForRun = (\n  state: RootState,\n): Node<NodePostDataType>[] => {\n  const elements = selectFlowElements(state)\n  const nodeList = elements.filter(isNodeData).map((node) => {\n    if (isAlgorithmNodeData(node)) {\n      const param = selectAlgorithmParams(node.id)(state) ?? {}\n      const functionPath = selectAlgorithmFunctionPath(node.id)(state)\n      const algorithmNodePostData: Node<AlgorithmNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.ALGORITHM,\n          path: functionPath,\n          param,\n        },\n      }\n      return algorithmNodePostData\n    } else {\n      const filePath = selectInputNodeSelectedFilePath(node.id)(state)\n      const fileType = selectInputNodeFileType(node.id)(state)\n      const param = selectInputNodeParam(node.id)(state)\n      const hdf5Path = selectInputNodeHDF5Path(node.id)(state)\n      const inputNodePosyData: Node<InputNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.INPUT,\n          path: filePath ?? '',\n          param,\n          hdf5Path: hdf5Path,\n          fileType,\n        },\n      }\n      return inputNodePosyData\n    }\n  })\n  return nodeList\n}\n","export default __webpack_public_path__ + \"static/media/optinist.e44efe32.png\";","import React from 'react'\nimport AppBar from '@mui/material/AppBar'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Typography from '@mui/material/Typography'\nimport Toolbar from '@mui/material/Toolbar'\nimport { styled } from '@mui/material/styles'\nimport FlowChart from './FlowChart/FlowChart'\nimport Visualize from './Visualize/Visualize'\nimport Experiment from './Experiment/Experiment'\nimport { useRunPipeline } from 'store/slice/Pipeline/PipelineHook'\nimport optinistLogo from './optinist.png'\n\nconst Layout: React.FC = () => {\n  const [value, setValue] = React.useState(0)\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue)\n  }\n\n  const runPipeline = useRunPipeline() // タブ切り替えによって結果取得処理が止まってしまうのを回避するため、タブの親レイヤーで呼び出している\n\n  return (\n    <RootDiv>\n      <StyledAppBar position=\"fixed\" color=\"inherit\">\n        <Toolbar variant=\"dense\">\n          <img src={optinistLogo} alt=\"optinist\" width={85} height={50} />\n          <Tabs\n            sx={{ width: '100%' }}\n            value={value}\n            onChange={handleChange}\n            centered\n            textColor=\"primary\"\n          >\n            <Tab label=\"Workflow\" {...a11yProps(0)} />\n            <Tab label=\"Visualize\" {...a11yProps(1)} />\n            <Tab label=\"Record\" {...a11yProps(2)} />\n          </Tabs>\n        </Toolbar>\n      </StyledAppBar>\n      <TabPanel value={value} index={0}>\n        <FlowChart {...runPipeline} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Visualize />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Experiment />\n      </TabPanel>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  backgroundColor: theme.palette.background.paper,\n}))\n\nconst StyledAppBar = styled(AppBar)(({ theme }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  backgroundColor: '#C3EBE1',\n}))\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: any\n  value: any\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Typography>{children}</Typography>}\n    </div>\n  )\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { selectRunPostData } from 'store/selectors/run/RunSelectors'\nimport {\n  selectPipelineIsCanceled,\n  selectPipelineIsStartedSuccess,\n  selectPipelineLatestUid,\n  selectPipelineStatus,\n} from './PipelineSelectors'\nimport { run, pollRunResult, runByCurrentUid } from './PipelineActions'\nimport { cancelPipeline } from './PipelineSlice'\nimport { selectFilePathIsUndefined } from '../InputNode/InputNodeSelectors'\nimport { useSnackbar } from 'notistack'\nimport { RUN_STATUS } from './PipelineType'\n\nconst POLLING_INTERVAL = 5000\n\nexport type UseRunPipelineReturnType = ReturnType<typeof useRunPipeline>\n\nexport function useRunPipeline() {\n  const dispatch = useDispatch()\n  const uid = useSelector(selectPipelineLatestUid)\n  const isCanceled = useSelector(selectPipelineIsCanceled)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n  const filePathIsUndefined = useSelector(selectFilePathIsUndefined)\n  const runPostData = useSelector(selectRunPostData)\n  const handleRunPipeline = React.useCallback(\n    (name: string) => {\n      dispatch(run({ runPostData: { name, ...runPostData, forceRunList: [] } }))\n    },\n    [dispatch, runPostData],\n  )\n  const handleRunPipelineByUid = React.useCallback(() => {\n    dispatch(runByCurrentUid({ runPostData }))\n  }, [dispatch, runPostData])\n  const handleCancelPipeline = React.useCallback(() => {\n    if (uid != null) {\n      dispatch(cancelPipeline())\n    }\n  }, [dispatch, uid])\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isStartedSuccess && !isCanceled && uid != null) {\n        dispatch(pollRunResult({ uid: uid }))\n      }\n    }, POLLING_INTERVAL)\n    return () => {\n      clearInterval(intervalId)\n    }\n  }, [dispatch, uid, isCanceled, isStartedSuccess])\n  const status = useSelector(selectPipelineStatus)\n  const { enqueueSnackbar } = useSnackbar()\n  // タブ移動による再レンダリングするたびにスナックバーが実行されてしまう挙動を回避するために前回の値を保持\n  const [prevStatus, setPrevStatus] = React.useState(status)\n  React.useEffect(() => {\n    if (prevStatus !== status) {\n      if (status === RUN_STATUS.FINISHED) {\n        enqueueSnackbar('Finished', { variant: 'success' })\n      } else if (status === RUN_STATUS.ABORTED) {\n        enqueueSnackbar('Aborted', { variant: 'error' })\n      } else if (status === RUN_STATUS.CANCELED) {\n        enqueueSnackbar('Canceled', { variant: 'info' })\n      }\n      setPrevStatus(status)\n    }\n  }, [status, prevStatus, enqueueSnackbar])\n  return {\n    filePathIsUndefined,\n    uid,\n    status,\n    isStartedSuccess,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n    handleCancelPipeline,\n  }\n}\n","import React from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport Close from '@mui/icons-material/Close'\nimport { SnackbarProvider, SnackbarKey, useSnackbar } from 'notistack'\n\nimport AppLayout from './components/Layout'\n\nconst App: React.FC = () => {\n  return (\n    <SnackbarProvider\n      maxSnack={5}\n      action={(snackbarKey) => (\n        <SnackbarCloseButton snackbarKey={snackbarKey} />\n      )}\n    >\n      <AppLayout />\n    </SnackbarProvider>\n  )\n}\n\nconst SnackbarCloseButton: React.FC<{ snackbarKey: SnackbarKey }> = ({\n  snackbarKey,\n}) => {\n  const { closeSnackbar } = useSnackbar()\n  return (\n    <IconButton onClick={() => closeSnackbar(snackbarKey)} size=\"large\">\n      <Close style={{ color: 'white' }} />\n    </IconButton>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  ALGORITHM_LIST_SLICE_NAME,\n  AlgorithmListType,\n} from './AlgorithmListType'\nimport { getAlgoList } from './AlgorithmListActions'\nimport { convertToAlgoListType } from './AlgorithmListUtils'\n\nexport const initialState: AlgorithmListType = {\n  isLatest: false,\n  tree: {},\n}\n\nexport const algorithmListSlice = createSlice({\n  name: ALGORITHM_LIST_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlgoList.fulfilled, (state, action) => {\n      state.tree = convertToAlgoListType(action.payload)\n      state.isLatest = true\n    })\n  },\n})\n\nexport default algorithmListSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n  DisplayData,\n  DISPLAY_DATA_SLICE_NAME,\n} from './DisplayDataType'\nimport {\n  getCsvData,\n  getHeatMapData,\n  getImageData,\n  getTimeSeriesDataById,\n  getTimeSeriesAllData,\n  getRoiData,\n  getScatterData,\n  getBarData,\n  getHTMLData,\n  getTimeSeriesInitData,\n} from './DisplayDataActions'\nimport {\n  deleteDisplayItem,\n  setNewDisplayDataPath,\n} from '../VisualizeItem/VisualizeItemActions'\n\nconst initialState: DisplayData = {\n  timeSeries: {},\n  heatMap: {},\n  image: {},\n  csv: {},\n  roi: {},\n  scatter: {},\n  bar: {},\n  hdf5: {},\n  html: {},\n}\n\nexport const displayDataSlice = createSlice({\n  name: DISPLAY_DATA_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        if (action.payload.deleteData) {\n          const { filePath, dataType } = action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        if (action.payload.deleteData) {\n          const { prevDataType: dataType, prevFilePath: filePath } =\n            action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(getTimeSeriesDataById.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesDataById.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesDataById.fulfilled, (state, action) => {\n        const { path, index } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].data[index] = action.payload.data[index]\n        if (action.payload.std[index] !== undefined) {\n          state.timeSeries[path].std[index] = action.payload.std[index]\n        }\n      })\n      .addCase(getTimeSeriesAllData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesAllData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesAllData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        if (action.payload.std !== undefined) {\n          state.timeSeries[path].std = action.payload.std\n        }\n      })\n      .addCase(getTimeSeriesInitData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesInitData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesInitData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        state.timeSeries[path].std = action.payload.std\n      })\n      .addCase(getHeatMapData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getImageData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getImageData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getCsvData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getRoiData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getRoiData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        const { data } = action.payload\n\n        // 計算\n        const roi1Ddata: number[] = data[0]\n          .map((row) =>\n            Array.from(new Set(row.filter((value) => value != null))),\n          )\n          .flat()\n        const roiUniqueIdList = Array.from(new Set(roi1Ddata))\n          .sort((n1, n2) => n1 - n2)\n          .map(String)\n\n        state.roi[path] = {\n          type: 'roi',\n          data: data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n          roiUniqueList: roiUniqueIdList,\n        }\n      })\n      .addCase(getRoiData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getScatterData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getBarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getBarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHTMLData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n  },\n})\n\nfunction deleteDisplayDataFn(\n  state: DisplayData,\n  filePath: string,\n  dataType: DATA_TYPE,\n) {\n  if (dataType === DATA_TYPE_SET.IMAGE) {\n    delete state.image[filePath]\n  } else if (dataType === DATA_TYPE_SET.TIME_SERIES) {\n    delete state.timeSeries[filePath]\n  } else if (dataType === DATA_TYPE_SET.CSV) {\n    delete state.csv[filePath]\n  } else if (dataType === DATA_TYPE_SET.HEAT_MAP) {\n    delete state.heatMap[filePath]\n    // } else if (dataType === DATA_TYPE_SET.ROI) {\n    //   delete state.roi[filePath]\n  } else if (dataType === DATA_TYPE_SET.SCATTER) {\n    delete state.scatter[filePath]\n  } else if (dataType === DATA_TYPE_SET.BAR) {\n    delete state.bar[filePath]\n  } else if (dataType === DATA_TYPE_SET.HTML) {\n    delete state.html[filePath]\n  }\n}\n\nexport default displayDataSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { FileUploader, FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\nimport { setUploadProgress, uploadFile } from './FileUploaderActions'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nconst initialState: FileUploader = {}\n\nexport const fileUploaderSlice = createSlice({\n  name: FILE_UPLOADER_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFileUploaderStateById(state, action: PayloadAction<string>) {\n      state[action.payload] = inistialUploaderState\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(setUploadProgress, (state, action) => {\n        const { progess, requestId } = action.payload\n        state[requestId].uploadingProgress = progess\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileName, requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          fileName,\n          isUninitialized: false,\n          pending: true,\n          fulfilled: false,\n          uploadingProgress: 0,\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { requestId } = action.meta.arg\n        const { resultPath } = action.payload\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          path: resultPath,\n          pending: false,\n          fulfilled: true,\n        }\n      })\n      .addCase(uploadFile.rejected, (state, action) => {\n        const { requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          pending: false,\n          fulfilled: false,\n          error: action.error.message,\n        }\n      })\n  },\n})\n\nexport const { setFileUploaderStateById } = fileUploaderSlice.actions\n\nexport default fileUploaderSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { uploadFile } from 'store/slice/FileUploader/FileUploaderActions'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { getFilesTree } from './FilesTreeAction'\nimport {\n  FilesTree,\n  FILES_TREE_SLICE_NAME,\n  FILE_TREE_TYPE_SET,\n} from './FilesTreeType'\nimport { convertToTreeNodeType } from './FilesTreeUtils'\n\nexport const initialState: FilesTree = {}\nexport const filesTreeSlice = createSlice({\n  name: FILES_TREE_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getFilesTree.pending, (state, action) => {\n        const fileType = action.meta.arg\n        state[fileType] = {\n          isLoading: true,\n          isLatest: false,\n          tree: [],\n        }\n      })\n      .addCase(getFilesTree.fulfilled, (state, action) => {\n        const fileTreeType = action.meta.arg\n        state[fileTreeType].tree = convertToTreeNodeType(action.payload)\n        state[fileTreeType].isLatest = true\n        state[fileTreeType].isLoading = false\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          if (state[FILE_TREE_TYPE_SET.IMAGE] != null) {\n            state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.IMAGE] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          if (state[FILE_TREE_TYPE_SET.CSV] != null) {\n            state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.CSV] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          if (state[FILE_TREE_TYPE_SET.HDF5] != null) {\n            state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.HDF5] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else {\n          if (state[FILE_TREE_TYPE_SET.ALL] != null) {\n            state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.ALL] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n        } else {\n          state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n        }\n      })\n  },\n})\n\nexport default filesTreeSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as MuiColors from '@mui/material/colors'\n\nexport type HandleTypeColor = {\n  colorMap: { [type: string]: string }\n  /**\n   * HANDLE_COLOR_PRESET_MAPのkey\n   */\n  nextKey: number\n}\n\nconst initialState: HandleTypeColor = {\n  colorMap: {\n    ImageData: MuiColors.red[500],\n    IscellData: MuiColors.indigo[500],\n    TimeSeriesData: MuiColors.yellow[500],\n    Suite2pData: MuiColors.green[500],\n    FluoData: MuiColors.orange[500],\n    BehaviorData: MuiColors.yellow[500],\n  },\n  nextKey: 0,\n}\n\nconst SLICE_NAME = 'handleTypeColor'\n\nexport const handleTypeColorSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {},\n})\n\nexport default handleTypeColorSlice.reducer\n","import { HDF5TreeDTO } from './HDF5Type'\n\nexport function convertToTreeNodeType(dto: HDF5TreeDTO[]): HDF5TreeDTO[] {\n  return dto.map((node) =>\n    node.isDir\n      ? {\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n          path: node.path,\n        }\n      : {\n          name: node.name,\n          isDir: false,\n          shape: node.shape,\n          path: node.path,\n          nbytes: node.nbytes,\n        },\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { getHDF5Tree } from './HDF5Action'\nimport { HDF5Tree, HDF5_SLICE_NAME } from './HDF5Type'\nimport { convertToTreeNodeType } from './HDF5Utils'\n\nconst initialState: HDF5Tree = {\n  isLoading: false,\n  tree: [],\n}\nexport const HDF5Slice = createSlice({\n  name: HDF5_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHDF5Tree.pending, (state, action) => {\n        state = {\n          isLoading: true,\n          tree: [],\n        }\n      })\n      .addCase(getHDF5Tree.fulfilled, (state, action) => {\n        state.tree = convertToTreeNodeType(action.payload)\n        state.isLoading = false\n      })\n  },\n})\n\nexport default HDF5Slice.reducer\n","import type { ExperimentDTO, ExperimentsDTO } from 'api/experiments/Experiments'\nimport type {\n  ExperimentListType,\n  ExperimentType,\n  ExperimentFunction,\n  EXPERIMENTS_STATUS,\n} from './ExperimentsType'\n\nexport function convertToExperimentListType(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n\nexport function convertToExperimentType(dto: ExperimentDTO): ExperimentType {\n  const functions: { [nodeId: string]: ExperimentFunction } = {}\n  Object.entries(dto.function).forEach(([_, value]) => {\n    functions[value.unique_id] = {\n      name: value.name,\n      nodeId: value.unique_id,\n      postion: value.position,\n      status: convertToExperimentStatus(value.success),\n    }\n  })\n  return {\n    uid: dto.unique_id,\n    timestamp: dto.timestamp,\n    name: dto.name,\n    functions,\n  }\n}\n\nfunction convertToExperimentStatus(dto: string): EXPERIMENTS_STATUS {\n  switch (dto) {\n    case 'running':\n      return 'running'\n    case 'success':\n      return 'success'\n    case 'error':\n      return 'error'\n    default:\n      throw new Error('failed to convert to EXPERIMENTS_STATUS')\n  }\n}\n\nexport function convertToFlowChartList(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { EXPERIMENTS_SLICE_NAME, Experiments } from './ExperimentsType'\nimport {\n  getExperiments,\n  deleteExperimentByUid,\n  deleteExperimentByList,\n} from './ExperimentsActions'\nimport { convertToExperimentListType } from './ExperimentsUtils'\nimport {\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from '../Pipeline/PipelineActions'\n\nconst initialState: Experiments = {\n  status: 'uninitialized',\n}\n\nexport const experimentsSlice = createSlice({\n  name: EXPERIMENTS_SLICE_NAME,\n  initialState: initialState as Experiments,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getExperiments.pending, () => {\n        return {\n          status: 'pending',\n        }\n      })\n      .addCase(getExperiments.fulfilled, (state, action) => {\n        const experimentList = convertToExperimentListType(action.payload)\n        return {\n          status: 'fulfilled',\n          experimentList,\n        }\n      })\n      .addCase(getExperiments.rejected, (state, action) => {\n        return {\n          status: 'error',\n          message: action.error.message,\n        }\n      })\n      .addCase(deleteExperimentByUid.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          delete state.experimentList[action.meta.arg]\n        }\n      })\n      .addCase(deleteExperimentByList.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          action.meta.arg.map((v) => delete state.experimentList[v])\n        }\n      })\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          const uid = action.meta.arg.uid\n          const target = state.experimentList[uid]\n          Object.entries(action.payload).forEach(([nodeId, value]) => {\n            if (value.status === 'success') {\n              target.functions[nodeId].status = 'success'\n            } else if (value.status === 'error') {\n              target.functions[nodeId].status = 'error'\n            }\n          })\n        }\n      })\n      .addMatcher(isAnyOf(run.fulfilled, runByCurrentUid.fulfilled), () => {\n        return {\n          status: 'uninitialized',\n        }\n      })\n  },\n})\n\nexport default experimentsSlice.reducer\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit'\nimport {\n  algorithmListReducer,\n  algorithmNodeReducer,\n  displayDataReducer,\n  fileUploaderReducer,\n  flowElementReducer,\n  inputNodeReducer,\n  nwbReducer,\n  filesTreeReducer,\n  handleTypeColorReducer,\n  rightDrawerReducer,\n  visualaizeItemReducer,\n  snakemakeReducer,\n  pipelineReducer,\n  hdf5Reducer,\n  experimentsReducer,\n} from './slice'\n\nexport const rootReducer = combineReducers({\n  algorithmList: algorithmListReducer,\n  algorithmNode: algorithmNodeReducer,\n  displayData: displayDataReducer,\n  fileUploader: fileUploaderReducer,\n  flowElement: flowElementReducer,\n  inputNode: inputNodeReducer,\n  handleColor: handleTypeColorReducer,\n  filesTree: filesTreeReducer,\n  nwb: nwbReducer,\n  rightDrawer: rightDrawerReducer,\n  visualaizeItem: visualaizeItemReducer,\n  snakemake: snakemakeReducer,\n  pipeline: pipelineReducer,\n  hdf5: hdf5Reducer,\n  experiments: experimentsReducer,\n})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\nexport type ThunkApiConfig<T = unknown, PendingMeta = unknown> = {\n  state: RootState\n  dispatch: AppDispatch\n  rejectValue: T\n  penfingMeta: PendingMeta\n}\n","import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme({\n  components: {\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiSelect: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from 'store/store'\n\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './Theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}