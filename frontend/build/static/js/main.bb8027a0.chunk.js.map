{"version":3,"sources":["@types/index.ts","store/slice/User/UserSelector.ts","store/slice/User/UserType.ts","utils/auth/AuthUtils.ts","api/auth/Auth.ts","const/API.ts","utils/axios.ts","api/users/UsersMe.ts","api/users/UsersAdmin.ts","store/slice/User/UserActions.ts","pages/Dashboard/index.tsx","components/common/Loading.tsx","const/Auth.ts","components/common/Input.tsx","components/Account/InputPassword.tsx","components/Account/ChangePasswordModal.tsx","components/common/DeleteConfirmModal.tsx","pages/Account/index.tsx","pages/AccountDelete/index.tsx","pages/Login/index.tsx","pages/ResetPassword/index.tsx","store/slice/Workspace/WorkspaceSelector.ts","api/Workspace/index.ts","store/slice/Workspace/WorkspaceType.ts","store/slice/Workspace/WorkspacesActions.ts","store/slice/Database/DatabaseType.ts","api/database/index.ts","store/slice/Database/DatabaseActions.ts","store/slice/User/UserSlice.ts","components/PopupShare.tsx","utils/checkRole.ts","components/common/PaginationCustom.tsx","pages/Workspace/index.tsx","utils/param/ParamUtils.ts","store/slice/AlgorithmNode/AlgorithmNodeSelectors.ts","store/slice/FlowElement/FlowElementSelectors.ts","store/slice/FlowElement/FlowElementType.ts","store/slice/FlowElement/FlowElementUtils.ts","store/slice/NWB/NWBSelectors.ts","store/slice/Pipeline/PipelineType.ts","store/slice/DisplayData/DisplayDataType.ts","store/slice/DisplayData/DisplayDataUtils.ts","store/slice/Pipeline/PipelineUtils.ts","store/slice/Pipeline/PipelineSelectors.ts","store/slice/Snakemake/SnakemakeSelectors.ts","store/slice/InputNode/InputNodeType.ts","store/slice/InputNode/InputNodeUtils.ts","store/slice/InputNode/InputNodeSelectors.ts","store/slice/Run/RunSelectors.ts","api/run/Run.ts","store/slice/Pipeline/PipelineActions.ts","api/experiments/Experiments.ts","store/slice/Experiments/ExperimentsType.ts","store/slice/Experiments/ExperimentsActions.ts","store/slice/Workspace/WorkspaceSlice.ts","store/slice/Experiments/ExperimentsUtils.ts","store/slice/Experiments/ExperimentsSlice.ts","store/slice/Experiments/ExperimentsSelectors.ts","components/Workspace/Experiment/ExperimentStatusIcon.tsx","utils/EqualityUtils.ts","components/Workspace/Experiment/Button/DownloadButton.tsx","components/Workspace/Experiment/CollapsibleTable.tsx","store/slice/Pipeline/PipelineSlice.ts","components/Workspace/Experiment/Button/DeleteButton.tsx","api/outputs/Outputs.ts","store/slice/DisplayData/DisplayDataActions.ts","store/slice/DisplayData/DisplayDataSelectors.ts","store/slice/VisualizeItem/VisualizeItemType.ts","store/slice/VisualizeItem/VisualizeItemUtils.ts","store/slice/VisualizeItem/VisualizeItemSelectors.ts","store/slice/VisualizeItem/VisualizeItemActions.ts","store/slice/VisualizeItem/VisualizeItemSlice.ts","components/Workspace/Experiment/Button/ImportButton.tsx","components/Workspace/Experiment/ExperimentTable.tsx","components/utils/LocalStorageUtil.ts","const/Layout.ts","components/Workspace/Experiment/Experiment.tsx","store/slice/AlgorithmList/AlgorithmListUtils.ts","store/slice/AlgorithmList/AlgorithmListSelectors.ts","store/slice/AlgorithmList/AlgorithmListType.ts","api/algolist/AlgoList.ts","store/slice/AlgorithmList/AlgorithmListActions.ts","api/params/Params.ts","store/slice/FlowElement/FlowElementActions.ts","utils/nanoid/NanoIdUtils.ts","const/flowchart.ts","components/Workspace/FlowChart/DnDItemType.ts","components/Workspace/FlowChart/TreeView.tsx","store/slice/InputNode/InputNodeActions.ts","api/run/RunUtils.ts","api/files/Files.ts","store/slice/FileUploader/FileUploaderType.ts","store/slice/FileUploader/FileUploaderActions.ts","store/slice/FlowElement/FlowElementSlice.ts","api/nwb/NWB.ts","store/slice/NWB/NWBType.ts","store/slice/NWB/NWBAction.ts","store/slice/NWB/NWBSlice.ts","store/slice/RightDrawer/RightDrawerSlice.ts","components/common/Accordion.tsx","components/common/ParamFormItemCreator.tsx","components/Workspace/FlowChart/NWB.tsx","api/snakemake/Snakemake.ts","store/slice/Snakemake/SnakemakeType.ts","store/slice/Snakemake/SnakemakeAction.ts","store/slice/Snakemake/SnakemakeSlice.ts","components/Workspace/FlowChart/Snakemake.tsx","components/Workspace/RunButtons.tsx","components/Workspace/ToolBar.tsx","components/Workspace/FlowChart/FlowChartNode/HandleColorHook.ts","store/slice/HandleTypeColor/HandleTypeColorSelectors.ts","components/Workspace/FlowChart/FlowChartNode/LinerProgressWithLabel.tsx","store/slice/FileUploader/FileUploaderInitlalState.ts","store/slice/FileUploader/FileUploaderSelectors.ts","store/slice/FileUploader/FileUploaderHook.ts","components/Workspace/FlowChart/DialogContext.tsx","components/Workspace/FlowChart/FlowChartNode/FileSelect.tsx","components/Workspace/FlowChart/FlowChartNode/FlowChartUtils.ts","components/Workspace/FlowChart/FlowChartNode/ImageFileNode.tsx","components/Workspace/FlowChart/FlowChartNode/AlgorithmNode.tsx","store/slice/InputNode/InputNodeSlice.ts","components/Workspace/Visualize/DataContext.tsx","components/Workspace/Visualize/Plot/CsvPlot.tsx","components/Workspace/FlowChart/FlowChartNode/CsvFileNode.tsx","store/slice/HDF5/HDF5Selectors.ts","api/hdf5/HDF5.ts","store/slice/HDF5/HDF5Type.ts","store/slice/HDF5/HDF5Action.ts","components/Workspace/FlowChart/FlowChartNode/HDF5FileNode.tsx","components/Workspace/FlowChart/FlowChartNode/FluoFileNode.tsx","components/Workspace/FlowChart/FlowChartNode/BehaviorFileNode.tsx","components/Workspace/FlowChart/FlowChartNode/ReactFlowNodeTypesConst.ts","components/Workspace/FlowChart/CustomEdge.tsx","components/Workspace/Visualize/Plot/HeatMapPlot.tsx","components/Workspace/Visualize/Plot/ImagePlot.tsx","components/Workspace/Visualize/Plot/RoiPlot.tsx","components/Workspace/Visualize/Plot/ScatterPlot.tsx","components/Workspace/Visualize/Plot/TimeSeriesPlot.tsx","components/Workspace/Visualize/Plot/BarPlot.tsx","components/Workspace/Visualize/Plot/HTMLPlot.tsx","components/Workspace/Visualize/DisplayDataItem.tsx","components/Workspace/FlowChart/FlowChartNode/AlgorithmOutputDialog.tsx","store/slice/FilesTree/FilesTreeSelectors.ts","store/slice/FilesTree/FilesTreeType.ts","store/slice/FilesTree/FilesTreeAction.ts","store/slice/FilesTree/FilesTreeUtils.ts","components/common/FileSelectDialog.tsx","components/Workspace/FlowChart/ReactFlowComponent.tsx","store/slice/RightDrawer/RightDrawerSelectors.ts","store/slice/AlgorithmNode/AlgorithmNodeType.ts","store/slice/AlgorithmNode/AlgorithmNodeActions.ts","store/slice/AlgorithmNode/AlgorithmNodeSlice.ts","components/Workspace/FlowChart/AlgorithmParamForm.tsx","components/Workspace/FlowChart/RightDrawer.tsx","components/common/CurrentPipelineInfo.tsx","components/Workspace/FlowChart/FlowChart.tsx","components/Workspace/Visualize/VisualizeItemAddButton.tsx","components/utils/MouseDragUtil.ts","components/Workspace/Visualize/VisualizeItemLayoutMenuIcon.tsx","components/Workspace/Visualize/FilePathSelect.tsx","components/Workspace/Visualize/VisualizeItem.tsx","components/Workspace/Visualize/FlexItemList.tsx","components/Workspace/Visualize/Editor/GradientColorPicker.tsx","components/Workspace/Visualize/Editor/SaveFig.tsx","components/Workspace/Visualize/Editor/ImageItemEditor.tsx","components/Workspace/Visualize/Editor/CsvItemEditor.tsx","components/Workspace/Visualize/Editor/HeatmapItemEditor.tsx","components/Workspace/Visualize/Editor/TimeSeriesItemEditor.tsx","components/Workspace/Visualize/Editor/RoiItemEditor.tsx","components/Workspace/Visualize/Editor/ScatterItemEditor.tsx","components/Workspace/Visualize/Editor/BarItemEditor.tsx","components/Workspace/Visualize/VisualizeItemEditor.tsx","components/Workspace/Visualize/Visualize.tsx","pages/Workspace/Workspace.tsx","store/slice/Pipeline/PipelineHook.ts","components/logo.png","components/Workspace/WorkspaceTabs.tsx","components/Layout/Profile.tsx","components/Layout/Header.tsx","components/Layout/LeftMenu.tsx","components/Layout/index.tsx","components/common/DialogImage.tsx","components/common/SwitchCustom.tsx","components/Database/DatabaseExperiments.tsx","components/Database/DatabaseWrapper.tsx","pages/Database/Experiments.tsx","components/PublicLayout/PublicHeader.tsx","components/PublicLayout/PublicFooter.tsx","components/PublicLayout/index.tsx","components/PublicDatabase/PublicDatabaseWrapper.tsx","pages/PublicDatabase/PublicExperiments.tsx","components/Database/DatabaseCells.tsx","pages/PublicDatabase/PublicCells.tsx","pages/Database/Cells.tsx","components/common/InputError.tsx","components/common/SelectError.tsx","pages/AccountManager/index.tsx","App.tsx","reportWebVitals.ts","store/slice/AlgorithmList/AlgorithmListSlice.ts","store/slice/DisplayData/DisplayDataSlice.ts","store/slice/FileUploader/FileUploaderSlice.ts","store/slice/FilesTree/FilesTreeSlice.ts","store/slice/HandleTypeColor/HandleTypeColorSlice.ts","store/slice/HDF5/HDF5Utils.ts","store/slice/HDF5/HDF5Slice.ts","store/slice/Database/DatabaseSlice.ts","store/store.ts","Theme.ts","index.tsx"],"names":["ROLE","SHARE","selectCurrentUser","state","user","currentUser","selectListUser","listUser","selectLoading","loading","selectListSearch","listUserSearch","isAdmin","ADMIN","role_id","isAdminOrManager","DATA_MANAGER","includes","USER_SLICE_NAME","saveToken","access_token","localStorage","setItem","getToken","getItem","logout","removeItem","removeToken","removeExToken","window","location","href","loginApi","data","a","axios","post","response","refreshTokenApi","refresh_token","sendResetPasswordMailApi","email","HOST","process","PORT","BASE_URL","axiosLibrary","create","baseURL","timeout","interceptors","request","use","config","headers","Authorization","ExToken","error","Promise","reject","res","status","getMeApi","get","updateMeApi","put","updateMePasswordApi","deleteMeApi","delete","createUserApi","listUsersApi","paramsNew","qs","stringify","indices","updateUserApi","id","deleteUserApi","getListSearchApi","keyword","login","createAsyncThunk","thunkAPI","responseData","rejectWithValue","getMe","_","updateMe","dispatch","deleteMe","updateMePassword","getListUser","params","getListSearch","createUser","updateUser","props","deleteUser","BoxWrapper","styled","Box","width","height","LinkWrapper","Link","textDecoration","DashboardWrapper","display","alignItems","justifyContent","DashboardContent","padding","flexWrap","gap","BoxMenu","backgroundColor","borderRadius","color","textAlign","fontSize","transition","transform","TitleMenu","Typography","marginTop","Dashboard","useDispatch","admin","useSelector","useEffect","style","paddingLeft","to","LoaderWrapper","theme","top","bottom","left","right","position","zIndex","rotate","keyframes","prixClipFix","Loader","animation","content","boxSizing","inset","border","Loading","regexPassword","regexEmail","regexIgnoreS","Input","shouldForwardProp","borderColor","marginBottom","outline","cursor","TextError","minHeight","lineHeight","wordBreak","InputPassword","p","useState","type","setType","sx","onClick","BoxTitle","ContentDelete","BoxConfirm","margin","FormInline","Label","ChangePasswordModal","onClose","open","onSubmit","errors","setErrors","values","setValues","onChangeValue","event","validate","target","name","value","confirm_password","validatePassword","length","test","validateReEnter","new_password","onChangePass","newErrors","password","onCloseModal","Modal","fontWeight","onChange","e","onBlur","placeholder","reEnter","pre","Button","variant","textTransform","DeleteConfirmModal","isLoading","titleSubmit","description","textDelete","setTextDelete","whiteSpace","ml","AccountWrapper","BoxFlex","maxWidth","Title","BoxData","minWidth","TitleData","Account","navigate","useNavigate","isDeleteConfirmModalOpen","setIsDeleteConfirmModalOpen","isChangePwModalOpen","setIsChangePwModalOpen","isEditName","setIsEditName","isName","setIsName","ref","useRef","enqueueSnackbar","useSnackbar","handleClickVariant","mess","handleCloseDeleteComfirmModal","onConfirmDelete","handleCloseChangePw","onConfirmChangePw","oldPass","newPass","old_password","uid","organization","autoFocus","onKeyDown","key","current","querySelector","blur","IconButton","role","newRole","OPERATOR","GUEST_OPERATOR","getRole","mt","AccountDelete","LoginWrapper","LoginContent","boxShadow","FormSignUp","LabelField","LableRequired","marginLeft","Description","spacing","LinkWrappper","ButtonLogin","Login","setIsLoading","preventDefault","validateSubmit","unwrap","then","catch","finally","autoComplete","Stack","flexDirection","Heading","ButtonSignIn","ResetPassword","onReset","errorCheck","setTimeout","alert","validateEmail","selectWorkspaceListUserShare","workspace","listUserShare","selectWorkspaceData","selectActiveTab","currentWorkspace","selectedTab","selectCurrentWorkspaceId","workspaceId","selectIsLoadingWorkspaceList","selectIsWorkspaceOwner","ownerId","getWorkspaceApi","getWorkspacesApi","delWorkspaceApi","postWorkspaceApi","putWorkspaceApi","importWorkspaceApi","todo_dummy","exportWorkspaceApi","getListUserShareWorkspaceApi","postListUserShareWorkspaceApi","WORKSPACE_SLICE_NAME","getWorkspace","getWorkspaceList","delWorkspace","Number","postWorkspace","putWorkspace","importWorkspace","exportWorkspace","getListUserShareWorkSpaces","postListUserShareWorkspaces","DATABASE_SLICE_NAME","getExperimentsPublicApi","getCellsPublicApi","getExperimentsApi","getCellsApi","postPublishApi","getListUserShareApi","postListUserShareApi","getExperimentsDatabase","getCellsDatabase","getExperimentsPublicDatabase","getCellsPublicDatabase","postPublish","getListUserShare","postListUserShare","initialState","undefined","userSlice","createSlice","reducers","resetUserSearch","extraReducers","builder","addCase","fulfilled","action","payload","ex_token","items","push","addMatcher","isAnyOf","rejected","pending","actions","TableListSearch","usersSuggest","handleAddListUser","stateUserShare","addEventListener","onMouseDown","removeEventListener","contains","TableListSearchWrapper","console","log","UlCustom","map","item","isSelected","some","i","LiCustom","DialogCustom","Dialog","background","borderBottomLeftRadius","borderBottomRightRadius","maxHeight","overflow","listStyle","PopupShare","handleClose","usersShare","isWorkspace","title","shareType","setShareType","textSearch","setTextSearch","setStateUserShare","clearTimeout","columnsShare","useCallback","handleShareFalse","field","headerName","renderCell","row","filterable","sortable","share","JSON","users","handleOke","newUserIds","newType","ORGANIZATION","USERS","user_ids","share_type","DialogTitle","DialogContent","DialogContentText","expId","FormControl","RadioGroup","FormControlLabel","control","Radio","label","find","DataGrid","rows","columns","stopPropagation","indexCheck","findIndex","newStateUserShare","filter","index","hideFooterPagination","DialogActions","isMine","idUserWorkSpace","PaginationCustomWrapper","PaginationCustom","handlePage","handleLimit","limit","NativeSelect","inputProps","offset","total","Pagination","count","Math","ceil","page","handleOpenPopupShare","handleOpenPopupDel","handleDownload","handleNavWorkflow","handleNavRecords","onEdit","flex","editable","Tooltip","placement","textOverflow","ButtonIcon","overflowWrap","moment","format","size","shared_count","PopupNew","setNewWorkSpace","handleOkNew","PopupDelete","handleOkDel","nameWorkspace","WorkspacesWrapper","WorkspacesTitle","Workspaces","del","new","shareId","setOpen","workspaceDel","setWorkspaceDel","newWorkspace","setError","initName","setInitName","rowModesModel","setRowModesModel","useSearchParams","searchParams","setParams","dataParams","useMemo","handleFileUpload","pagi","processRowUpdate","newRow","htmlFor","component","hidden","accept","onCellClick","object","Object","keys","forEach","mode","GridRowModes","View","ignoreModifications","editMode","tab","Edit","Boolean","onRowModesModelChange","newRowModesModel","isCellEditable","onProcessRowUpdateError","onRowEditStop","hideFooter","_isSubmit","getChildParam","path","ParamMap","result","node","isParamChild","children","param","convertToParamMap","dto","keyList","entries","kList","Array","isArray","isDictObject","concat","join","selectAlgorithmNodeById","nodeId","algorithmNode","selectAlgorithmName","selectAlgorithmParams","selectAlgorithmNodeNotExist","selectAlgorithmNode","selectFlowNodes","flowElement","flowNodes","selectFlowEdges","flowEdges","selectFlowPosition","flowPosition","selectNodeById","selectNodeLabelById","FLOW_ELEMENT_SLICE_NAME","NODE_TYPE_SET","isNodeData","isNode","isAlgorithmNodeData","getLabelByPath","filePath","getFileName","split","reverse","selectNwb","nwb","selectNwbParamsKeyList","selectNwbParam","paramKey","selectNwbParamsValue","Error","PIPELINE_SLICE_NAME","RUN_STATUS","NODE_RESULT_STATUS","RUN_BTN_OPTIONS","RUN_NEW","RUN_ALREADY","RUN_BTN_LABELS","DISPLAY_DATA_SLICE_NAME","DATA_TYPE_SET","toDataType","isNodeResultPending","nodeResult","isNodeResultSuccess","isStartedPipeline","pipeline","getInitialRunResult","runPostData","initialResult","nodeDict","convertToRunResult","nodeResultDto","outputPath","outputPaths","message","convertToOutputPath","functionPath","selectPipelineLatestUid","currentPipeline","selectStartedPipeline","run","selectPipelineRunBtn","runBtn","selectRunResultPendingNodeIdList","runResult","isNodeResultPendingAndNodeId","arg","selectPipelineStatus","selectPipelineIsCanceled","selectPipelineIsStartedSuccess","isNodeResultSuccessAndNodeId","selectPipelineNodeResultStatus","selectPipelineNodeResultOutputPaths","selectSnakemakeParams","snakemake","selectSnakemake","selectSnakemakeParamsKeyList","selectSnakemakeParam","selectSnakemakeParamsValue","INPUT_NODE_SLICE_NAME","FILE_TYPE_SET","isCsvInputNode","inputNode","fileType","isHDF5InputNode","selectInputNodeById","selectInputNodeDefined","selectCsvInputNodeSelectedFilePath","selectedFilePath","selectImageInputNodeSelectedFilePath","selectHDF5InputNodeSelectedFilePath","selectFilePathIsUndefined","hdf5Path","selectCsvInputNodeParam","selectInputNodeHDF5Path","selectRunPostData","nwbParam","selectNwbParams","snakemakeParam","edgeDict","selectEdgeDictForRun","selectNodeDictForRun","forceRunList","selectForceRunList","isUpdated","nodes","algorithmNodePostData","selectInputNodeSelectedFilePath","selectInputNodeFileType","selectInputNodeParam","inputNodePosyData","edge","runApi","runByUidApi","pendingNodeIdList","cancelResultApi","getState","runByCurrentUid","currentUid","pollRunResult","cancelResult","String","deleteExperimentByUidApi","deleteExperimentByListApi","uidList","importExperimentByUidApi","downloadExperimentNwbApi","responseType","downloadExperimentConfigApi","fetchExperimentApi","workspace_id","renameExperiment","new_name","patch","EXPERIMENTS_SLICE_NAME","getExperiments","deleteExperimentByUid","deleteExperimentByList","importExperimentByUid","fetchExperiment","workspaceSlice","setActiveTab","setCurrentWorkspace","clearCurrentWorkspace","meta","convertToExperimentType","functions","function","convertToExperimentStatus","success","unique_id","hasNWB","timestamp","started_at","convertFunctionsToRunResultDTO","experimentsSlice","clearExperiments","experimentList","convertToExperimentListType","v","selectExperiments","experiments","selectExperimentsStatusIsUninitialized","selectExperimentsStatusIsFulfilled","selectExperimentsStatusIsError","selectExperimentsErrorMessage","selectExperimentList","selectExperiment","selectExperimentName","selectExperimentFunction","ExperimentStatusIcon","React","memo","arrayEqualityFn","b","every","twoDimarrayEqualityFn","NWBDownloadButton","useContext","ExperimentUidContext","url","setFileUrl","URL","createObjectURL","Blob","click","revokeObjectURL","disabled","download","className","ConfigDownloadButton","CollapsibleTable","TableRow","TableCell","paddingBottom","paddingTop","colSpan","Collapse","in","unmountOnExit","gutterBottom","Table","Head","Body","TableHead","nodeIdList","selectExperimentFunctionNodeIdList","TableBody","TableRowOfFunction","selectExperimentFunctionName","selectExperimentFunctionStatus","selectExperimentFunctionHasNWB","selectExperimentFunctionMessage","anchorEl","setAnchorEl","scope","currentTarget","Popover","anchorOrigin","vertical","horizontal","pipelineSlice","setRunBtnOption","runBtnOption","clearCurrentPipeline","DeleteButton","currentPipelineUid","isRunning","isPending","getTimeSeriesInitDataApi","getTimeSeriesDataByIdApi","getTimeSeriesAllDataApi","getHeatMapDataApi","getImageDataApi","start_index","startIndex","end_index","endIndex","getCsvDataApi","getRoiDataApi","getScatterDataApi","getBarDataApi","getHTMLDataApi","addRoiApi","mergeRoiApi","deleteRoiApi","getTimeSeriesInitData","getTimeSeriesDataById","getTimeSeriesAllData","getHeatMapData","getImageData","getCsvData","getRoiData","getScatterData","getBarData","getHTMLData","selectDisplayData","displayData","selectTimeSeriesData","timeSeries","selectTimeSeriesDataIsInitialized","selectHeatMapDataIsInitialized","heatMap","selectImageData","image","selectImageDataIsInitialized","selectImageDataIsPending","selectCsvDataIsInitialized","csv","selectCsvDataError","selectCsvDataIsPending","selectCsvDataIsFulfilled","selectRoiData","roi","selectRoiDataIsInitialized","selectRoiDataIsFulfilled","selectScatterDataIsInitialized","scatter","selectBarDataIsInitialized","bar","selectHTMLDataIsInitialized","html","VISUALIZE_ITEM_SLICE_NAME","VISUALIZE_ITEM_TYPE_SET","isDisplayDataItem","itemType","isImageItem","dataType","isTimeSeriesItem","isCsvItem","isHeatMapItem","isScatterItem","isBarItem","selectSelectedVisualizeItemId","visualaizeItem","selectedItemId","selectVisualizeImageItemIdList","itemId","selectVisualizeItemById","isWorkflowDialog","selectVisualizeItems","selectVisualizeItemLayout","layout","selectVisualizeItemWidth","selectVisualizeItemHeight","selectVisualizeDataType","selectVisualizeDataNodeId","selectVisualizeDataFilePath","selectVisualizeSaveFilename","saveFileName","selectVisualizeSaveFormat","saveFormat","selectImageItemFilePath","selectTimeSeriesItemFilePath","selectRoiItemFilePath","roiItem","selectImageItemShowticklabels","showticklabels","selectImageItemZsmooth","zsmooth","selectImageItemStartIndex","selectImageItemEndIndex","selectImageItemShowLine","showline","selectImageItemShowGrid","showgrid","selectImageItemShowScale","showscale","selectImageItemColors","colors","selectImageItemAlpha","alpha","selectImageItemRoiAlpha","roiAlpha","selectTimeSeriesItemOffset","selectTimeSeriesItemSpan","span","selectTimeSeriesItemShowGrid","selectTimeSeriesItemShowLine","selectTimeSeriesItemShowTickLabels","selectTimeSeriesItemZeroLine","zeroline","selectTimeSeriesItemXrange","xrange","selectTimeSeriesItemDrawOrderList","drawOrderList","selectTimeSeriesItemRefRoiUniqueList","refImageItemId","imageItem","roiUniqueList","selectTimeSeriesItemKeys","dataKeys","selectRoiItemMaxNumber","roiFilePath","roiData","max","arr","selectHeatMapItemShowScale","selectHeatMapItemColors","selectCsvItemTranspose","transpose","selectCsvItemSetHeader","setHeader","selectCsvItemSetIndex","setIndex","selectBarItemIndex","selectScatterItemXIndex","xIndex","selectScatterItemYIndex","yIndex","selectDisplayDataIsSingle","targetFilePath","setImageItemClikedDataId","clickedDataId","selectingImageArea","range","x","y","round","x1","x2","y1","y2","selectedZList","z","zNum","selectedZ","deleteDisplayItem","createAction","setNewDisplayDataPath","displayDataCommonInitialValue","imageItemInitialValue","rgb","activeIndex","duration","timeSeriesItemInitialValue","maxIndex","heatMapItemInitialValue","csvItemInitialValue","roiItemInitialValue","scatterItemInitialValue","barItemInitialValue","hdf5ItemInitialValue","htmlItemInitialValue","fluoItemInitialValue","behaviorItemInitialValue","getDisplayDataItemInitialValue","visualaizeItemSlice","pushInitialItemToNewRow","newItemId","addInitialItemFn","insertInitialItemToNextColumn","targetItemId","targetRowIndex","targetColumnIndex","indexOf","splice","addItemForWorkflowDialog","maxId","getMaxItemId","deleteAllItemForWorkflowDialog","setItemSize","targetItem","selectItem","reset","setRoiItemFilePath","outputKey","setFilePath","setSaveFormat","setSaveFileName","setImageItemFilePath","setTimeSeriesItemFilePath","setHeatMapItemFilePath","resetImageActiveIndex","resetImageActiveIndexFn","incrementImageActiveIndex","decrementImageActiveIndex","setImageActiveIndex","setImageItemShowticklabels","setImageItemZsmooth","setImageItemShowLine","setImageItemShowGrid","setImageItemShowScale","setImageItemColors","setImageItemStartIndex","setImageItemEndIndex","setImageItemAlpha","setImageItemRoiAlpha","setImageItemDuration","setTimeSeriesItemOffset","setTimeSeriesItemSpan","setTimeSeriesItemShowGrid","setTimeSeriesItemShowLine","setTimeSeriesItemShowTickLabels","setTimeSeriesItemZeroLine","setTimeSeriesItemXrangeLeft","setTimeSeriesItemXrangeRight","setTimeSeriesItemDrawOrderList","resetAllOrderList","setTimeSeriesItemMaxIndex","setTimeSeriesRefImageItemId","setHeatMapItemShowScale","setHeatMapItemColors","setCsvItemTranspose","setCsvItemSetHeader","setCsvItemSetIndex","setScatterItemXIndex","setScatterItemYIndex","setBarItemIndex","imageItemId","idList","reduce","nextId","args","ImportButton","createContext","ExperimentTable","isUninitialized","isFulfilled","isError","TableImple","ExperimentsErrorView","Alert","severity","AlertTitle","isOwner","experimentListValues","experimentListKeys","order","setOrder","sortTarget","setSortTarget","checkedList","setCheckedList","onCheckBoxClick","recordsIsEmpty","setPage","storageKey","initialValue","parseFn","savedStr","parse","setValue","useLocalStorage","valueNum","isNaN","rowsPerPage","setRowsPerPage","emptyRows","flexGrow","m","endIcon","Paper","elevation","flexGlow","TableContainer","HeadItem","sortHandler","property","allCheckIndeterminate","allChecked","onChangeAllCheck","checked","experiment","checkboxVisible","sort","getComparator","slice","expData","Provider","RowItem","palette","text","secondary","TablePagination","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","newValue","parseInt","Checkbox","visibility","indeterminate","TableSortLabel","active","direction","selectExperimentTimeStamp","statusList","f","selectExperimentStatus","selectExperimentHasNWB","isEdit","setEdit","errorEdit","setErrorEdit","valueEdit","setValueEdit","onSaveNewName","Fragment","borderBottom","tableCellClasses","root","borderBottomWidth","prevOpen","trim","orderBy","descendingComparator","CONTENT_HEIGHT","Experiment","isAlgoChild","algoNode","getAlgoChild","algoList","algoName","convertToAlgoListType","prototype","hasOwnProperty","call","returns","selectAlgorithmList","algorithmList","selectAlgorithmListIsLated","isLatest","selectAlgorithmListTree","tree","ALGORITHM_LIST_SLICE_NAME","getAlgoListApi","getAlgoList","getAlgoParamsApi","addAlgorithmNode","addInputNode","nanoid","customAlphabet","getNanoId","INITIAL_IMAGE_ELEMENT_ID","INITIAL_ALGO_STYLE","INITIAL_DATA_STYLE","REACT_FLOW_NODE_TYPE_KEY","DND_ITEM_TYPE_SET","AlgorithmTreeView","onAddAlgoNode","nodeName","newNode","TreeView","defaultCollapseIcon","defaultExpandIcon","TreeItem","InputNodeComponent","fileName","AlgoNodeComponentRecursive","toFixed","onAddDataNode","nodeType","reactFlowNodeType","useLeafItemDrag","isDragging","dragRef","LeafItem","opacity","onFocusCapture","AddButton","AlgoNodeComponent","treeItemClasses","iconContainer","onDragEnd","useDrag","end","monitor","getDropResult","didDrop","collect","setInputNodeFilePath","isInputNodePostData","isInputNodeData","isAlgorithmNodePostData","FILE_TREE_TYPE_SET","getFilesTreeApi","file_type","uploadFileApi","formData","FILE_UPLOADER_SLICE_NAME","setUploadProgress","uploadFile","requestId","getUploadConfig","percent","progess","resultPath","file_path","onUpdateProgressFn","onUploadProgress","progressEvent","percentCompleted","loaded","initialFlowPosition","initialElementCoord","elementCoord","flowElementSlice","setFlowPosition","setFlowNodes","setFlowEdges","deleteFlowNodes","applyNodeChanges","setNodesChange","setEdgesChange","applyEdgeChanges","deleteFlowEdgeById","element","deleteFlowNodeById","source","editFlowNodePositionById","coord","elementIdx","targetPosition","Position","Left","sourcePosition","Right","updateElementCoord","nodeIdx","targetNode","min","random","getNWBParamsApi","getNWBParams","nwbSlice","updateParam","RIGHT_DRAWER_MODE","currendNodeId","rightDrawerSlice","openRightDrawer","closeRightDrawer","toggleParamForm","toggleNwb","toggleSnakemake","elm","Accordion","disableGutters","square","divider","createParamFormItemComponent","paramSelector","paramValueSelector","paramUpdateActionCreator","useParamValueUpdate","ParamItemForString","updateParamAction","TextField","multiline","ParamItemForNumber","InputLabelProps","shrink","ParamItemForBoolean","Switch","ParamItemForValueType","ParamChildItem","verticalAlign","ParamItem","AccordionSummary","expandIcon","AccordionDetails","NWBSettingButton","NWBSettingContents","paramKeyList","Component","getSnakemakeParamsApi","SNAKEMAKE_SLICE_NAME","getSnakemakeParams","SnakemakeSlice","SnakemakeButton","SnakemakeContents","RunButtons","runDisabled","filePathIsUndefined","algorithmNodeNotExist","handleCancelPipeline","handleRunPipeline","handleRunPipelineByUid","isStartedSuccess","dialogOpen","setDialogOpen","menuOpen","setMenuOpen","anchorRef","uidExists","ButtonGroup","errorMessage","Popper","disablePortal","TransitionProps","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","option","MenuItem","selected","handleMenuItemClick","marginRight","RunDialog","handleRun","setName","fullWidth","helperText","ToolBar","float","useHandleColor","handleColor","colorMap","LinearProgressWithLabel","mr","LinearProgress","inistialUploaderState","uploadingProgress","selectFileUploader","fileUploader","useFileUploader","onUploadFile","uninitialized","selectFileUploadIsUninitialized","selectUploadFilePath","selectFileUploadIsPending","selectFileUploadIsFulfilled","progress","selectFileUploadProgress","selectFileUploadError","DialogContext","onOpen","onOpenDialogFile","onMessageError","FileSelect","multiSelect","onChangeFilePath","FileSelectImple","onSelectFile","fileTreeType","selectButtonLabel","uploadButtonLabel","inputRef","getFileInputAccept","files","file","FormData","append","toHandleId","getHandleType","handleId","isValidConnection","connection","sourceHandle","targetHandle","sourceHandleStyle","ImageFileNode","ImageFileNodeImple","elementSelected","useTheme","returnType","imageColor","primary","light","leftHandleStyle","rightHandleStyle","AlgorithmNode","AlgorithmNodeImple","isConnectable","useStatus","tabIndex","AlgoName","mx","AlgoArgs","AlgoReturns","Message","pipelineStatus","main","algoArgs","algoListChild","selectAlgoArgs","algoInfoListEqualtyFn","info","algoInfo","ArgHandle","algoReturns","selectAlgoReturns","ReturnHandle","isNone","hex_color","isHover","setHover","rgb_color","hex","exec","hexToRgb","onMouseEnter","onMouseLeave","arrow","latestUid","errorMsg","selectPipelineNodeResultMessage","anchorElRef","inputNodeSlice","deleteInputNode","setCsvInputNodeParam","setInputNodeHDF5Path","newState","DisplayDataContext","NaN","CsvPlot","isInitialized","CsvPlotImple","PresentationalCsvPlot","csvData","col","header","headerData","idx","row_id","rowObj","fromEntries","CsvFileNode","CsvFileNodeImple","ParamSettingDialog","selectCsvInputNodeParamSetHeader","setSetHeader","selectCsvInputNodeParamSetIndex","setSetIndex","selectCsvInputNodeParamTranspose","setTranspose","dividers","CsvPreview","otherProps","selectHDF5","hdf5","getHDF5TreeApi","HDF5_SLICE_NAME","getHDF5Tree","HDF5FileNode","HDF5FileNodeImple","ItemSelect","structureFileName","Structure","FileTreeView","useHDF5Tree","TreeNode","isDir","icon","htmlColor","childNode","shape","nbytes","FluoFileNode","FluoFileNodeImple","fluoColor","BehaviorFileNode","BehaviorFileNodeImple","behaviorColor","reactFlowNodeTypes","reactFlowEdgeTypes","buttonedge","sourceX","sourceY","targetX","targetY","markerEnd","edgePath","getBezierPath","getEdgeCenter","edgeCenterX","edgeCenterY","d","foreignObjectSize","HeatMapPlot","selectHeatMapDataError","selectHeatMapDataIsFulfilled","HeatMapImple","heatMapData","heatMapDataEqualtyFn","selectHeatMapColumns","selectHeatMapIndex","colorscale","parseFloat","offsets","hoverongaps","showlegend","dragmode","t","l","autosize","displayModeBar","responsive","toImageButtonOptions","filename","PositionDrag","initSizeDrag","floor","sChart","ImagePlot","selectImageDataError","ImagePlotImple","selectImageItemActiveIndex","ImagePlotChart","imageData","selectActiveImageData","imageDataEqualtyFn","isAddRoi","setIsAddRoi","loadingApi","setLoadingApi","roiDataState","setRoiDataState","pointClick","setPointClick","itemsVisual","timeDataMaxIndex","maxIdx","selectRoiItemIndex","sizeDrag","setSizeDrag","startDragAddRoi","setStartDragAddRoi","positionDrag","setChangeSize","selectRoiItemOutputKeys","refPageXSize","refPageYSize","colorscaleRoi","createColormap","colormap","nshades","onCancel","onCancelAdd","rgba2hex","replace","hovertemplate","new_i","zmin","zmax","selectMode","setSelectMode","onSelecting","callback","timeoutId","delay","debounce","xaxis","autorange","autotick","ticks","yaxis","automargin","setSelectRoi","point","newPoints","newRoi","addRoi","onMouseUpDragAddRoi","onMouseDownSize","pageX","pageY","addRoiSubmit","sizeX","sizeY","xAdd","yAdd","pointCenter","posx","posy","sizex","sizey","resetTimeSeries","onMergeRoi","ids","onDeleteRoi","PlayBack","BoxDiv","LinkDiv","points","curveNumber","toString","DivAddRoi","DivSvg","onMouseMove","newSizeDrag","getBoundingClientRect","newX","newY","scrollY","LEFT","newWidth","newLeft","RIGHT","BOTTOM","newHeight","TOP","newTop","onMouseUp","DivDrag","DragCenter","DragSizeLeft","DragSizeRight","DragSizeTop","DragSizeBottom","maxSize","selectImageItemDuration","intervalRef","clearInterval","onPlayClick","setInterval","onDurationChange","step","Slider","defaultValue","valueLabelDisplay","marks","activeThumb","newIndex","rgba","r","g","outParts","substring","part","DragSize","RoiPlot","selectRoiDataError","RoiPlotImple","ScatterPlot","selectScatterDataError","selectScatterDataIsFulfilled","ScatterPlotImple","scatterData","scatterDataEqualityFn","textposition","textfont","family","marker","font","XIndex","YIndex","InputLabel","Select","aArray","bArray","aKey","TimeSeriesPlot","selectTimeSeriesDataError","selectTimeSeriesDataIsFulfilled","TimeSeriesPlotImple","timeSeriesData","timeSeriesDataEqualityFn","dataXrange","dataStd","std","selectTimeSeriesStd","colorScale","activeIdx","mean","sqrt","pow","visible","line","error_y","array","annotations","xref","yref","arrowhead","ax","ay","onLegendClick","clickNumber","newDrawOrderList","aValue","bKey","bValue","nestEqualityFun","BarPlot","selectBarDataError","selectBarDataIsFulfilled","BarPlotImple","barData","barDataEqualityFn","selectBarIndex","SelectIndex","HTMLPlot","selectHTMLDataError","selectHTMLDataIsFulfilled","HTMLPlotImple","htmlData","dangerouslySetInnerHTML","__html","DisplayDataItem","DisplayPlot","AlgorithmOutputDialog","closeFn","TitleWithCloseButton","pt","px","OutputViewer","outputKeyList","selectPipelineNodeResultOutputKeyList","selectedOutoutKey","setSelectedOutputKey","OutputSelectTabs","onSelectOutput","DisplayDataView","Tabs","scrollButtons","tabsClasses","Tab","selectPipelineNodeResultOutputFilePath","selectPipelineNodeResultOutputFileDataType","selectVisualizeItemIdForWorkflowDialog","my","selectFilesTree","filesTree","FILES_TREE_SLICE_NAME","getFilesTree","convertToTreeNodeType","isdir","getNodeByPath","FileSelectDialog","initialFilePath","onClickCancel","onClickOk","setSelectedFilePath","FilePathSelectedListView","selectFilesTreeNodes","selectFilesIsLatest","selectFilesIsLoading","useFileTree","onCheckFile","selectedPath","onCheckDir","childrenFilePathList","from","Set","disableSelection","onNodeSelect","nodeIds","isDirNodeByPath","allNotChecked","TreeItemLabel","checkboxProps","disableRipple","initDialogFile","ReactFlowComponent","dialogNodeId","setDialogNodeId","dialogFile","setDialogFile","messageError","setMessageError","reactFlowInstance","setReactFlowInstance","wrapparRef","useDrop","drop","monitorOffset","getClientOffset","project","offsetLeft","offsetTop","edges","onNodesChange","changes","onEdgesChange","onConnect","addEdge","animated","onInit","onDragOver","dataTransfer","dropEffect","onNodeDragStop","nodeTypes","edgeTypes","defaultPosition","defaultZoom","onMoveEnd","viewport","zoom","FormHelperText","selectRightDrawerIsOpen","rightDrawer","selectRightDrawerMode","selectRightDrawerCurrentNodeId","ALGORITHM_NODE_SLICE_NAME","getAlgoParams","algorithmNodeSlice","AlgorithmParamForm","ParamFormContext","algoParamIsLoaded","selectAlgorithmParamsExit","selectAlgorithmParamsKeyList","selectAlgorithmParam","selectAlgorithmParamsValue","Contents","ParamFormConetent","StyledDrawer","Drawer","flexShrink","drawerClasses","paper","MainContents","RightDrawer","anchor","Toolbar","Divider","CurrentPipelineInfo","isFulFilled","Grid","container","paddingX","ExperimentUidInfo","ExperimentNameInfo","LabelValueGridRow","xs","FlowChart","RootDiv","DndProvider","backend","HTML5Backend","borderRight","grey","DrawerContents","transitions","easing","sharp","leavingScreen","easeOut","enteringScreen","VisualizeItemAddButton","StyledPaper","StyledButton","borderWidth","useMouseDragHandler","dependencies","document","once","DisplayDataItemLayoutMenuIcon","isSingleData","PresentationalLayoutMenuIcon","onClickDeleteMenu","deleteData","onClickInsertMenu","Menu","ListItemIcon","ListItemText","FilePathSelect","selectedNodeId","onSelect","inputNodeFilePathInfoList","inputNodes","selectInputNode","toDataTypeFromFileType","inputNodeDataType","algorithmNodeOutputPathInfoList","selectPipelineNodeResultSuccessList","paths","onSelectHandle","menuItemList","pathInfo","pathElm","ListSubheader","VisualizeItem","movingSize","setMovingSize","onCommitSize","onMouseDownX","downEvent","movingX","screenX","movingWidth","moveEvent","MIN_WIDTH","onMouseDownY","movingY","screenY","movingHeight","MIN_HEIFHT","onMouseDownXY","useItemDragResize","ItemHeader","itemDataType","FilePathSelectItem","RefImageItemIdSelect","RoiSelect","newFilePath","newDataType","basePayload","prevDataType","prevFilePath","itemIdList","selectedRefImageItemId","selectTimeSeriesItemRefImageItemId","roiItemNodeId","selectRoiItemNodeId","roiItemFilePath","FlexItemList","GradientColorPicker","dispatchSetColor","maxStops","paletteHeight","onPaletteChange","colorCode","rgbStr","flatStyle","WrappedSketchPicker","c","SaveFig","SelectedItemIdContext","ImageItemEditor","newPath","onSelectImageFile","Showticklabels","ShowLine","ShowGrid","ShowScale","Zsmooth","Alpha","inputError","RoiAlpha","StartEndIndex","onChangeStartIndex","onChangeEndIndex","CsvItemEditor","Transpose","SetHeader","SetIndex","HeatmapItemEditor","TimeSeriesItemEditor","Offset","Span","ShowTickLabels","ZeroLine","Xrange","newRight","LegendSelect","handleChange","drawIndexMap","RoiItemEditor","ScatterItemEditor","BarItemEditor","VisualizeItemEditor","DisplayDataItemEditor","DisplayEditor","StyledDrawerContents","Visualize","TabPanel","other","Workspace","runPipeline","appDispatch","useLocation","useParams","_workspaceId","isCanceled","intervalId","prevStatus","setPrevStatus","useRunPipeline","activeTab","a11yProps","WorkspaceTabs","centered","textColor","Profile","keepMounted","MultiUserHeader","handleDrawerOpen","StyledAppBar","TitleLogo","pathname","MuiAppBar","Header","LeftMenu","handleDrawerClose","List","ListItem","disablePadding","ListItemButton","authRequiredPathRegex","AuthedLayout","LayoutWrapper","ContentBodyWrapper","ChildrenWrapper","UnauthedLayout","paddingRight","prop","Layout","setLoadingAuth","checkAuth","token","isLogin","DialogImageWrapper","DialogImageContentWrapper","DialogImageTitle","DialogImageLabel","DialogImageContent","ButtonClose","DialogImage","handleCloseDialog","nameCol","handleClosePopup","src","alt","IOSSwitch","focusVisibleClassName","transitionDuration","SwitchCustom","PopupAttributes","handleChangeAttributes","exp_id","Content","readOnly","DatabaseExperimentsWrapper","DatabaseExperiments","cellPath","adminOrManager","dataExperiments","openShare","setOpenShare","dataDialog","setDataDialog","getAll","dataShare","listShare","pagiFilter","dataParamsFilter","experiment_id","publish_status","brain_area","cre_driver","reporter_line","imaging_depth","operator","filterModel","setFilterModel","fetchApi","newPublish","api","handleOpenDialog","graphTitle","newData","getParamsData","replaceAll","handlePublish","handleSort","rowSelectionModel","getColumns","graph_titles","graph_url","graph_urls","thumb_url","ColumnPrivate","handleOpenShare","NOSHARE","columnsTable","handleOpenAttributes","filterOperators","InputComponent","applyValue","valueOptions","fields","attributes","cell_image_urls","filterMode","sortingMode","onSortModelChange","sorting","sortModel","onFilterModelChange","model","isSubmit","DataBaseContent","DatabaseWrapper","Experiments","PublicNavMenu","displayName","navLink","PublicHeader","AppBar","Container","PublicFooter","Date","getFullYear","PublicLayout","PublicDatabaseWrapper","PublicExperiments","DatabaseCells","dataCells","cell_image_url","PublicCells","Cells","InputError","SelectModal","SelectError","options","initState","confirmPassword","ModalComponent","onSubmitEdit","setOpenModal","dataEdit","setFormData","isDisabled","setIsDisabled","validateField","isConfirm","errorLength","validateLength","datas","validateForm","errorName","errorEmail","errorRole","onChangeData","newDatas","errorConfirm","toLowerCase","ModalBox","TitleModal","LabelModal","ButtonModal","AccountManagerWrapper","ALink","userSelect","button","AccountManager","openModal","setDataEdit","openDel","setOpenDel","sortParams","filterParams","paramsManager","navigator","onLine","handleEdit","flag","SnackbarCloseButton","snackbarKey","closeSnackbar","App","maxSnack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","algorithmListSlice","deleteDisplayDataFn","displayDataSlice","roi1Ddata","flat","roiUniqueIdList","n1","n2","fileUploaderSlice","setFileUploaderStateById","currentState","filesTreeSlice","ImageData","MuiColors","IscellData","TimeSeriesData","Suite2pData","FluoData","BehaviorData","nextKey","handleTypeColorSlice","HDF5Slice","initData","public","private","databaseSlice","_action","rootReducer","combineReducers","algorithmListReducer","algorithmNodeReducer","displayDataReducer","fileUploaderReducer","flowElementReducer","inputNodeReducer","handleTypeColorReducer","filesTreeReducer","nwbReducer","rightDrawerReducer","visualaizeItemReducer","snakemakeReducer","pipelineReducer","hdf5Reducer","experimentsReducer","workspaceReducer","userReducer","databaseReducer","store","configureStore","reducer","createTheme","components","MuiTextField","defaultProps","MuiSelect","MuiDialog","disableEscapeKeyDown","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.bb8027a0.chunk.js","sourcesContent":["export enum ROLE {\n  ADMIN = 1,\n  DATA_MANAGER = 10,\n  OPERATOR = 20,\n  GUEST_OPERATOR = 30\n}\n\nexport const enum SHARE {\n  NOSHARE = 0,\n  ORGANIZATION = 2,\n  USERS = 1,\n}","import { ROLE } from '@types'\nimport { RootState } from 'store/store'\n\nexport const selectCurrentUser = (state: RootState) => state.user.currentUser\nexport const selectCurrentUserId = (state: RootState) =>\n  selectCurrentUser(state)?.id\nexport const selectListUser = (state: RootState) => state.user.listUser\nexport const selectLoading = (state: RootState) => state.user.loading\nexport const selectCurrentUserUid = (state: RootState) =>\n  selectCurrentUser(state)?.uid\nexport const selectCurrentUserEmail = (state: RootState) =>\n  selectCurrentUser(state)?.email\nexport const selectListSearch = (state: RootState) => state.user.listUserSearch\nexport const isAdmin = (state: RootState) => {\n  return state.user && ROLE.ADMIN === state.user.currentUser?.role_id\n}\n\nexport const isAdminOrManager = (state: RootState) => {\n  return [ROLE.ADMIN, ROLE.DATA_MANAGER].includes(state.user.currentUser?.role_id as number)\n}\n","import {UserListDTO, UserDTO} from 'api/users/UsersApiDTO'\n\nexport const USER_SLICE_NAME = 'user'\n\nexport type User = {\n  currentUser?: UserDTO\n  listUserSearch?: UserDTO[]\n  loading: boolean\n  listUser?: UserListDTO\n}\n","export const saveToken = (access_token: string) => {\n  localStorage.setItem('access_token', access_token)\n}\n\nexport const getToken = () => {\n  return localStorage.getItem('access_token')\n}\n\nexport const saveRefreshToken = (refresh_token: string) => {\n  localStorage.setItem('refresh_token', refresh_token)\n}\n\nexport const getRefreshToken = () => {\n  return localStorage.getItem('refresh_token')\n}\n\nexport const removeRefreshToken = () => {\n  return localStorage.removeItem('refresh_token')\n}\n\nexport const logout = () => {\n  removeRefreshToken();\n  removeToken()\n  removeExToken();\n  window.location.href = '/login'\n}\n\nexport const removeToken = () => {\n  return localStorage.removeItem('access_token')\n}\n\nexport const saveExToken = (ExToken: string) => {\n  localStorage.setItem('ExToken', ExToken)\n}\n\nexport const getExToken = () => {\n  return localStorage.getItem('ExToken')\n}\n\nexport const removeExToken = () => {\n  return localStorage.removeItem('ExToken')\n}\n","import axios from 'utils/axios'\nimport { getRefreshToken } from 'utils/auth/AuthUtils'\n\nexport type LoginDTO = {\n  email: string\n  password: string\n}\n\nexport type TokenDTO = {\n  access_token: string\n  token_type: string\n  refresh_token: string\n  ex_token: string\n}\nexport type AccessTokenDTO = {\n  access_token: string\n}\n\nexport const loginApi = async (data: LoginDTO): Promise<TokenDTO> => {\n  const response = await axios.post('/auth/login', data)\n  return response.data\n}\n\nexport const refreshTokenApi = async (): Promise<AccessTokenDTO> => {\n  const response = await axios.post('/auth/refresh', {\n    refresh_token: getRefreshToken(),\n  })\n  return response.data\n}\n\nexport const sendResetPasswordMailApi = async (\n  email: string,\n): Promise<string> => {\n  const response = await axios.post(\n    `/auth/send_reset_password_mail?email=${email}`,\n  )\n  return response.data\n}\n","const HOST = process.env.REACT_APP_SERVER_HOST\nconst PORT = process.env.REACT_APP_SERVER_PORT\n\nexport const BASE_URL = `http://${HOST}:${PORT}`\nexport const WS_BASE_URL = `ws://${HOST}:${PORT}`\n","import axiosLibrary from 'axios'\nimport { refreshTokenApi } from 'api/auth/Auth'\nimport { BASE_URL } from 'const/API'\nimport {getExToken, getToken, logout, saveToken} from 'utils/auth/AuthUtils'\n\nconst axios = axiosLibrary.create({\n  baseURL: BASE_URL,\n  timeout: 600000,\n})\n\naxios.interceptors.request.use(\n  async (config) => {\n    config.headers.Authorization = `Bearer ${getToken()}`\n    config.headers.ExToken = getExToken()\n    return config\n  },\n  (error) => Promise.reject(error),\n)\n\naxios.interceptors.response.use(\n  async (res) => res,\n  async (error) => {\n    if (error?.response?.status === 401) {\n      try {\n        const { access_token } = await refreshTokenApi()\n        saveToken(access_token)\n        error.config.headers.Authorization = `Bearer ${access_token}`\n        return axiosLibrary(error.config)\n      }\n      catch (e: any) {\n        if (e?.response?.status === 400) {\n          logout();\n        }\n        throw e;\n      }\n    }\n    return Promise.reject(error)\n  },\n)\n\nexport default axios\n","import axios from 'utils/axios'\nimport { UserDTO, UpdateUserDTO, UpdateUserPasswordDTO } from './UsersApiDTO'\n\nexport const getMeApi = async (): Promise<UserDTO> => {\n  const response = await axios.get('/users/me')\n  return response.data\n}\n\nexport const updateMeApi = async (data: UpdateUserDTO): Promise<UserDTO> => {\n  const response = await axios.put('/users/me', data)\n  return response.data\n}\n\nexport const updateMePasswordApi = async (\n  data: UpdateUserPasswordDTO,\n): Promise<UserDTO> => {\n  const response = await axios.put('/users/me/password', data)\n  return response.data\n}\n\nexport const deleteMeApi = async (): Promise<string> => {\n  const response = await axios.delete('/users/me')\n  return response.data\n}\n","import axios from 'utils/axios'\nimport {\n  AddUserDTO,\n  UserDTO,\n  ListUsersQueryDTO,\n  UpdateUserDTO, UserListDTO,\n} from './UsersApiDTO'\nimport qs from \"qs\";\n\nexport const createUserApi = async (data: AddUserDTO): Promise<UserDTO> => {\n  const response = await axios.post('/admin/users', data)\n  return response.data\n}\n\nexport const getUserApi = async (uid: string): Promise<UserDTO> => {\n  const response = await axios.get(`/admin/users/${uid}`)\n  return response.data\n}\n\nexport const listUsersApi = async (\n  data: ListUsersQueryDTO,\n): Promise<UserListDTO> => {\n  const paramsNew = qs.stringify(data, { indices: false })\n  const response = await axios.get(`/admin/users?${paramsNew}`)\n  return response.data\n}\n\nexport const updateUserApi = async (\n  id: number,\n  data: UpdateUserDTO,\n): Promise<UserDTO> => {\n  const response = await axios.put(`/admin/users/${id}`, data)\n  return response.data\n}\n\nexport const deleteUserApi = async (id: number): Promise<string> => {\n  const response = await axios.delete(`/admin/users/${id}`)\n  return response.data\n}\n\nexport const getListSearchApi = async (data: {keyword: string | null}): Promise<UserDTO[]> => {\n  const response = await axios.get(`/users/search/share_users${data.keyword ? `?keyword=${data.keyword}` : ''}`)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { USER_SLICE_NAME } from './UserType'\nimport {deleteMeApi, getMeApi, updateMeApi, updateMePasswordApi} from 'api/users/UsersMe'\nimport {AddUserDTO, ListUsersQueryDTO, UpdateUserDTO, UpdateUserPasswordDTO, UserDTO} from 'api/users/UsersApiDTO'\nimport { LoginDTO, loginApi } from 'api/auth/Auth'\nimport {deleteUserApi, createUserApi, listUsersApi, updateUserApi} from \"../../../api/users/UsersAdmin\";\nimport {getListSearchApi} from \"../../../api/users/UsersAdmin\";\n\nexport const login = createAsyncThunk(\n  `${USER_SLICE_NAME}/login`,\n  async (data: LoginDTO, thunkAPI) => {\n    try {\n      const responseData = await loginApi(data)\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getMe = createAsyncThunk(\n  `${USER_SLICE_NAME}/getMe`,\n  async (_, thunkAPI) => {\n    try {\n      const responseData = await getMeApi()\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const updateMe = createAsyncThunk(\n  `${USER_SLICE_NAME}/updateMe`,\n  async (data: UpdateUserDTO, thunkAPI) => {\n    try {\n      const responseData = await updateMeApi(data)\n      await thunkAPI.dispatch(getMe())\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteMe = createAsyncThunk(\n  `${USER_SLICE_NAME}/deleteMe`,\n  async (_, thunkAPI) => {\n    try {\n      const responseData = await deleteMeApi()\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const updateMePassword = createAsyncThunk(\n    `${USER_SLICE_NAME}/updateMePassword`,\n    async (data: UpdateUserPasswordDTO, thunkAPI) => {\n      try {\n        const responseData = await updateMePasswordApi(data)\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    },\n)\n\nexport const getListUser = createAsyncThunk(\n    `${USER_SLICE_NAME}/getListUser`,\n    async (params: ListUsersQueryDTO, thunkAPI) => {\n      try {\n        const responseData = await listUsersApi(params)\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    },\n)\n\nexport const getListSearch = createAsyncThunk<\n    UserDTO[],\n    {keyword: string | null}\n>(\n    `${USER_SLICE_NAME}/getListSearch`,\n    async (params, thunkAPI) => {\n      try {\n        const responseData = await getListSearchApi(params)\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    },\n)\n\nexport const createUser = createAsyncThunk<\n    UserDTO,\n    AddUserDTO\n>(\n    `${USER_SLICE_NAME}/createUser`,\n    async (params, thunkAPI) => {\n      try {\n        const responseData = await createUserApi(params)\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    },\n)\n\nexport const updateUser = createAsyncThunk<\n    UserDTO,\n    {id: number, data: UpdateUserDTO, params: ListUsersQueryDTO}\n>(\n    `${USER_SLICE_NAME}/updateUser`,\n    async (props, thunkAPI) => {\n      const { dispatch } = thunkAPI\n      try {\n        const responseData = await updateUserApi(props.id, props.data)\n        await dispatch(getListUser(props.params))\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    },\n)\n\nexport const deleteUser = createAsyncThunk<\n    string,\n    {id: number, params: ListUsersQueryDTO}\n>(\n    `${USER_SLICE_NAME}/deleteUser`,\n    async (data, thunkAPI) => {\n      const { dispatch } = thunkAPI\n      try {\n        const responseData = await deleteUserApi(data.id)\n        await dispatch(getListUser(data.params))\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    },\n)","import { Link } from 'react-router-dom'\nimport { Box, styled, Typography } from '@mui/material'\nimport StorageIcon from '@mui/icons-material/Storage'\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\nimport AnalyticsIcon from '@mui/icons-material/Analytics'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {isAdmin, selectCurrentUser} from 'store/slice/User/UserSelector'\nimport {useEffect} from \"react\";\nimport {getMe} from \"../../store/slice/User/UserActions\";\n\nconst Dashboard = () => {\n  const dispatch = useDispatch()\n  const admin = useSelector(isAdmin)\n  const user = useSelector(selectCurrentUser)\n  useEffect(() => {\n    if(!user) return\n    dispatch(getMe())\n  }, [])\n\n  return (\n    <BoxWrapper>\n      <h1 style={{ paddingLeft: 16 }}>Dashboard</h1>\n      <DashboardWrapper>\n        <DashboardContent>\n          <LinkWrapper to=\"/console/experiments\">\n            <BoxMenu>\n              <Box>\n                <StorageIcon fontSize=\"large\" />\n                <TitleMenu>Database</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          <LinkWrapper to=\"/console/workspaces\">\n            <BoxMenu>\n              <Box>\n                <AnalyticsIcon fontSize=\"large\" />\n                <TitleMenu>Workspaces</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          {\n            admin ?\n              <LinkWrapper to=\"/console/account-manager\">\n                <BoxMenu>\n                  <Box>\n                    <ManageAccountsIcon fontSize=\"large\" />\n                    <TitleMenu>Account Manager</TitleMenu>\n                  </Box>\n                </BoxMenu>\n              </LinkWrapper>: null\n          }\n        </DashboardContent>\n      </DashboardWrapper>\n    </BoxWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n})\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst DashboardWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 'calc(100% - 90px)',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst DashboardContent = styled(Box)(() => ({\n  padding: 30,\n  display: 'flex',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  gap: 32,\n}))\n\nconst BoxMenu = styled(Box)(() => ({\n  width: 170,\n  height: 150,\n  backgroundColor: '#283237',\n  borderRadius: 4,\n  padding: '40px 30px',\n  color: '#fff',\n  textAlign: 'center',\n  fontSize: 24,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.1)',\n    backgroundColor: 'rgba(40,50,55,0.9)',\n  },\n}))\n\nconst TitleMenu = styled(Typography)(() => ({\n  fontSize: 24,\n  marginTop: 30,\n}))\n\nexport default Dashboard\n","import { Box, keyframes, styled } from '@mui/material'\n\nconst Loading = () => {\n  return (\n    <LoaderWrapper>\n      <Loader />\n    </LoaderWrapper>\n  )\n}\n\nconst LoaderWrapper = styled(Box)(({ theme }) => ({\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  position: 'fixed',\n  backgroundColor: 'rgba(255,255,255,0.6)',\n  zIndex: 100000,\n}))\n\nconst rotate = keyframes`\n  100%   {transform: rotate(360deg)}\n`\n\nconst prixClipFix = keyframes`\n  0%   {clip-path:polygon(50% 50%,0 0,0 0,0 0,0 0,0 0)}\n  25%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 0,100% 0,100% 0)}\n  50%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,100% 100%,100% 100%)}\n  75%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 100%)}\n  100% {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 0)}\n`\n\nconst Loader = styled('span')(({ theme }) => ({\n  display: 'block',\n  width: 48,\n  height: 48,\n  borderRadius: '50%',\n  position: 'relative',\n  zIndex: 100,\n  top: 'calc(50% - 24px)',\n  left: 'calc(50% - 24px)',\n  animation: `${rotate} 1s linear infinite`,\n  '&:before': {\n    content: \"''\",\n    boxSizing: 'border-box',\n    position: 'absolute',\n    inset: 0,\n    borderRadius: '50%',\n    border: '3px solid rgba(0,0,0,0.8)',\n    animation: `${prixClipFix} 2s linear infinite`,\n  },\n}))\n\nexport default Loading\n","export const regexPassword =\n  /^(?=.*\\d)(?=.*[!#$%&()*+,-./@_|])(?=.*[a-zA-Z]).{6,255}$/\n\nexport const regexEmail =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\nexport const regexIgnoreS = /[^!#$%&()*+,-./@_|a-zA-Z0-9]/\n","import { styled } from '@mui/material'\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error?: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nexport default Input\n","import { ChangeEvent, FC, FocusEvent, useState } from 'react'\nimport { Box, styled, Typography } from '@mui/material'\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\nimport Input from 'components/common/Input'\n\nconst style: object = {\n  position: 'absolute',\n  right: 5,\n  top: 8,\n  fontSize: 20,\n  cursor: 'pointer',\n  color: 'rgba(0,0,0,0.6)',\n}\n\ntype InputPasswordProps = {\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void\n  error?: string\n  name?: string\n  placeholder?: string\n  onBlur?:  (event: FocusEvent<HTMLInputElement>) => void\n}\n\nconst InputPassword: FC<InputPasswordProps> = ({ error, ...p }) => {\n  const [type, setType] = useState('password')\n\n  const onShow = () => {\n    setType('text')\n  }\n\n  const onHidden = () => {\n    setType('password')\n  }\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <Input {...p} type={type} />\n      {type === 'password' ? (\n        <VisibilityIcon style={style} onClick={onShow} />\n      ) : (\n        <VisibilityOffIcon style={style} onClick={onHidden} />\n      )}\n      <TextError>{error}</TextError>\n    </Box>\n  )\n}\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  marginTop: -14,\n  wordBreak: 'break-word',\n})\n\nexport default InputPassword\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport { ChangeEvent, FC, useState } from 'react'\nimport { regexIgnoreS, regexPassword } from 'const/Auth'\nimport InputPassword from 'components/Account/InputPassword'\n\ntype ChangePasswordModalProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: (oldPass: string, newPass: string) => void\n}\n\nconst ChangePasswordModal: FC<ChangePasswordModalProps> = ({\n  onClose,\n  open,\n  onSubmit,\n}) => {\n  const [errors, setErrors] = useState<{ [key: string]: string }>({})\n  const [values, setValues] = useState<{ [key: string]: string }>({})\n  const onChangeValue = (\n    event: ChangeEvent<HTMLInputElement>,\n    validate?: Function,\n  ) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    if(name === 'new_password' && values.confirm_password) {\n      if(!validate?.(value)) {\n        setErrors({ ...errors, [name]: validate?.(value), confirm_password: value !== values.confirm_password ? 'Passwords do not match' : ''})\n        return\n      }\n        setErrors({ ...errors, [name]: validate?.(value), confirm_password: ''})\n        return\n    }\n    setErrors({ ...errors, [name]: validate?.(value) })\n  }\n\n  const validatePassword = (value: string): string => {\n    if (!value) return 'This field is required'\n    if(value.length > 255) return 'The text may not be longer than 255 characters'\n    if (!regexPassword.test(value)) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    if(regexIgnoreS.test(value)) {\n      return 'Allowed special characters (!#$%&()*+,-./@_|)'\n    }\n    return ''\n  }\n\n  const validateReEnter = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (value !== values.new_password) {\n      return 'Passwords do not match'\n    }\n    return ''\n  }\n\n  const validateReEnterWhenInputPassword = () => {\n    const { reEnter, new_password } = values\n    if (!new_password) setErrors((pre) => ({ ...pre, new_password: 'This field is required' }))\n    if (reEnter && reEnter !== new_password) {\n      setErrors((pre) => ({ ...pre, reEnter: 'Passwords do not match' }))\n    }\n  }\n\n  const validateForm = () => {\n    const errorPassword = !values.password ? 'This field is required' : ''\n    const errorNewPass = validatePassword(values.new_password)\n    const errorConfirmPass = validatePassword(values.confirm_password)\n    return {\n      password: errorPassword,\n      new_password: errorNewPass,\n      confirm_password: errorConfirmPass\n    }\n  }\n\n  const onChangePass = async () => {\n    const newErrors: { [key: string]: string } = validateForm()\n    if(errors.new_password || errors.confirm_password || errors.password) return\n    if(newErrors.new_password || newErrors.confirm_password || newErrors.password) {\n      setErrors(newErrors)\n      return\n    }\n    await onSubmit(values.password, values.new_password)\n  }\n\n  const onCloseModal = () => {\n    setErrors({})\n    setValues({})\n    onClose()\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <ContentDelete>\n        <BoxTitle>\n          <Typography sx={{ fontWeight: 600, fontSize: 18 }}>\n            Change Password\n          </Typography>\n          <Typography style={{ fontSize: 13 }}>\n            <span style={{ color: 'red' }}>*</span> is required\n          </Typography>\n        </BoxTitle>\n        <BoxConfirm>\n          <FormInline>\n            <Label>\n              Old Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validatePassword)}\n              name=\"password\"\n              error={errors.password}\n              onBlur={(e) => onChangeValue(e, validatePassword)}\n              placeholder=\"Old Password\"\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              New Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validatePassword)}\n              name=\"new_password\"\n              error={errors.new_password}\n              placeholder=\"New Password\"\n              onBlur={validateReEnterWhenInputPassword}\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              Confirm Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validateReEnter)}\n              name=\"confirm_password\"\n              error={errors.confirm_password}\n              placeholder=\"Confirm Password\"\n              onBlur={(e) => onChangeValue(e, validateReEnter)}\n            />\n          </FormInline>\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <Button variant='contained' color='success' onClick={() => onChangePass()}>UPDATE</Button>\n          </Box>\n        </BoxConfirm>\n        <Button onClick={onCloseModal}>\n          <Typography\n            sx={{\n              textDecoration: 'underline',\n              textTransform: 'none',\n              lineHeight: '17px',\n            }}\n          >\n            Close\n          </Typography>\n        </Button>\n      </ContentDelete>\n    </Modal>\n  )\n}\n\nconst BoxTitle = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n})\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 450px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0',\n})\n\nconst FormInline = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: 10,\n})\n\nconst Label = styled(Typography)({\n  fontSize: 14,\n  marginTop: 7,\n  width: '100%',\n})\n\nexport default ChangePasswordModal\n","import { FC, useState } from 'react'\nimport { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport Input  from 'components/common/Input'\nimport Loading from \"../common/Loading\";\n\ntype DeleteConfirmModalProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: () => void\n  titleSubmit: string\n  description: string\n  isLoading?: boolean\n}\nconst DeleteConfirmModal: FC<DeleteConfirmModalProps> = ({\n  onClose,\n  open,\n  onSubmit,\n  isLoading,\n  titleSubmit,\n  description,\n}) => {\n  const [textDelete, setTextDelete] = useState('')\n\n  const onConfirm = () => {\n    if (textDelete !== 'DELETE') return\n    onSubmit?.()\n    setTextDelete('')\n  }\n\n  return (\n    <>\n      <Modal\n          open={open}\n          onClose={onClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n      >\n        <ContentDelete>\n          <Typography style={{ whiteSpace: 'pre-wrap' }}>\n            {description}\n            This operation cannot be undone.\n            To continue, type \"<span style={{ fontWeight: 600 }}>DELETE</span>\" in the box below:\n          </Typography>\n          <BoxConfirm>\n            <Input\n                placeholder=\"DELETE\"\n                value={textDelete}\n                onChange={(e) => setTextDelete(e.target.value)}\n            />\n            <Button onClick={onConfirm} variant='contained' color='error' sx={{ml: 1}}>{titleSubmit}</Button>\n          </BoxConfirm>\n          <Button onClick={onClose}>\n            <Typography\n                sx={{\n                  textDecoration: 'underline',\n                  textTransform: 'none',\n                  lineHeight: '17px',\n                }}\n            >\n              Close\n            </Typography>\n          </Button>\n        </ContentDelete>\n      </Modal>\n      {\n        isLoading ? <Loading /> : null\n      }\n    </>\n  )\n}\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 500px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0 0',\n})\n\nexport default DeleteConfirmModal\n","import { useSelector, useDispatch } from 'react-redux'\nimport { Box, Button, IconButton, Input, styled, Typography } from '@mui/material'\nimport Loading from \"components/common/Loading\"\nimport ChangePasswordModal from 'components/Account/ChangePasswordModal'\nimport DeleteConfirmModal from 'components/common/DeleteConfirmModal'\nimport { ChangeEvent, useEffect, useRef, useState } from 'react'\nimport { useNavigate } from \"react-router-dom\";\nimport { deleteMe, updateMe, updateMePassword} from 'store/slice/User/UserActions'\nimport { selectCurrentUser, selectLoading } from 'store/slice/User/UserSelector'\nimport { ROLE } from \"../../@types\";\nimport {useSnackbar, VariantType} from \"notistack\";\nimport Edit from '@mui/icons-material/Edit'\nconst Account = () => {\n  const user = useSelector(selectCurrentUser)\n  const loading = useSelector(selectLoading)\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const [isDeleteConfirmModalOpen, setIsDeleteConfirmModalOpen] = useState(false)\n  const [isChangePwModalOpen, setIsChangePwModalOpen] = useState(false)\n  const [isEditName, setIsEditName] = useState(false)\n  const [isName, setIsName] = useState<string>()\n\n  const ref = useRef<HTMLInputElement>(null)\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleClickVariant = (variant: VariantType, mess: string) => {\n    enqueueSnackbar(mess, { variant });\n  };\n\n  useEffect(() => {\n    if(!user) return\n    setIsName(user.name)\n    //eslint-disable-next-line\n  }, [])\n\n  const handleCloseDeleteComfirmModal = () => {\n    setIsDeleteConfirmModalOpen(false)\n  }\n\n  const onDeleteAccountClick = () => {\n    setIsDeleteConfirmModalOpen(true)\n  }\n\n  const onConfirmDelete = async () => {\n    if(!user) return\n    const data = await dispatch(deleteMe())\n    if((data as any).error) {\n      handleClickVariant('error', 'Account deleted failed!')\n    }\n    else {\n      navigate('/login')\n    }\n    handleCloseDeleteComfirmModal()\n  }\n\n  const handleCloseChangePw = () => {\n    setIsChangePwModalOpen(false)\n  }\n\n  const onChangePwClick = () => {\n    setIsChangePwModalOpen(true)\n  }\n\n  const onConfirmChangePw = async (oldPass: string, newPass: string) => {\n    const data = await dispatch(updateMePassword({old_password: oldPass, new_password: newPass}))\n    if((data as any).error) {\n      handleClickVariant('error', 'Failed to Change Password!')\n    }\n    else {\n      handleClickVariant('success', 'Your password has been successfully changed!')\n    }\n    handleCloseChangePw()\n  }\n\n  const onEditName = (e: ChangeEvent<HTMLInputElement>) => {\n    setIsName(e.target.value)\n  }\n\n  const onSubmit = async (e: any) => {\n    if(!user || !user.name || !user.email) return\n    if(isName === user.name) {\n      setIsEditName(false)\n      return\n    }\n    if(!e.target.value) {\n      handleClickVariant('error', \"Full name cann't empty!\")\n      setIsName(user?.name)\n    }\n    else {\n      const data = await dispatch(updateMe({\n        name: e.target.value,\n        email: user.email,\n      }))\n      if((data as any).error) {\n        handleClickVariant('error', 'Full name edited failed!')\n      }\n      else {\n        handleClickVariant('success', 'Full name edited successfully!')\n      }\n    }\n    setIsEditName(false)\n  }\n\n  const getRole = (role?: number) => {\n    if(!role) return\n    let newRole = ''\n    switch (role) {\n      case ROLE.ADMIN:\n        newRole = 'Admin'\n        break\n      case ROLE.DATA_MANAGER:\n        newRole = 'Data Manager'\n        break\n      case ROLE.OPERATOR:\n        newRole = 'Operator'\n        break\n      case ROLE.GUEST_OPERATOR:\n        newRole = 'Guest Operator'\n    }\n    return newRole\n  }\n\n  const handleName = (event: any) => {\n    if(event.key === 'Escape') {\n      setIsName(user?.name)\n      setIsEditName(false)\n      return\n    }\n    if(event.key === 'Enter') {\n      if(ref.current) ref.current?.querySelector('input')?.blur?.()\n      return\n    }\n  }\n\n  return (\n    <AccountWrapper>\n      <DeleteConfirmModal\n        titleSubmit=\"Delete My Account\"\n        onClose={handleCloseDeleteComfirmModal}\n        open={isDeleteConfirmModalOpen}\n        onSubmit={onConfirmDelete}\n        description='Delete account will erase all of your data.'\n      />\n      <ChangePasswordModal\n        onSubmit={onConfirmChangePw}\n        open={isChangePwModalOpen}\n        onClose={handleCloseChangePw}\n      />\n      <Title>Account Profile</Title>\n      <BoxFlex>\n        <TitleData>Account ID</TitleData>\n        <BoxData>{user?.uid}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Organization</TitleData>\n        <BoxData>{user?.organization?.name}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Name</TitleData>\n        {isEditName ? (\n          <Input\n            sx={{ width: 400 }}\n            autoFocus\n            onBlur={onSubmit}\n            placeholder=\"Name\"\n            value={isName}\n            onChange={onEditName}\n            onKeyDown={handleName}\n            ref={ref}\n          />\n        ) : (\n          <>\n            <Box>{isName ? isName : user?.name}</Box>\n            <IconButton sx={{ml: 1}} onClick={() => setIsEditName(true)}>\n              <Edit />\n            </IconButton>\n          </>\n        )}\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Email</TitleData>\n        <BoxData>{user?.email}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Role</TitleData>\n        <BoxData>{getRole(user?.role_id)}</BoxData>\n      </BoxFlex>\n      <BoxFlex sx={{ justifyContent: 'space-between', mt: 10, maxWidth: 600}}>\n        <Button variant='contained' color='primary' onClick={onChangePwClick}>Change Password</Button>\n        <Button variant='contained' color='error' onClick={onDeleteAccountClick}>Delete Account</Button>\n      </BoxFlex>\n      {\n        loading ? <Loading /> : null\n      }\n    </AccountWrapper>\n  )\n}\n\nconst AccountWrapper = styled(Box)({\n  padding: '0 20px',\n})\n\nconst BoxFlex = styled(Box)({\n  display: 'flex',\n  margin: '20px 0 10px 0',\n  alignItems: 'center',\n  maxWidth: 1000,\n})\n\nconst Title = styled('h2')({\n  marginBottom: 40,\n})\n\nconst BoxData = styled(Typography)({\n  fontWeight: 700,\n  minWidth: 272,\n})\n\nconst TitleData = styled(Typography)({\n  width: 250,\n  minWidth: 250\n})\n\nexport default Account\n","import { Box } from '@mui/material'\n\nconst AccountDelete = () => {\n  return (\n    <Box sx={{ fontWeight: 600, fontSize: 18, mt: 4 }}>\n      You account has been deleted.\n    </Box>\n  )\n}\n\nexport default AccountDelete\n","import { Box, Stack, styled, Typography } from '@mui/material'\nimport { useDispatch } from 'react-redux'\nimport {getMe, login} from 'store/slice/User/UserActions'\nimport { AppDispatch } from 'store/store'\nimport { ChangeEvent, FormEvent, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport Loading from 'components/common/Loading'\n\nconst Login = () => {\n  const navigate = useNavigate()\n  const dispatch: AppDispatch = useDispatch()\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>({\n    email: '',\n    password: '',\n  })\n  const [values, setValues] = useState<{ email: string; password: string }>({\n    email: '',\n    password: '',\n  })\n\n  const onSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    const errorCheck = validateSubmit()\n    if (errorCheck) return\n    setIsLoading(true)\n    dispatch(login(values))\n      .unwrap()\n      .then(async (_) => {\n        await dispatch(getMe())\n        navigate('/console')\n      })\n      .catch((_) => {\n        setErrors({ email: 'Email or password is wrong', password: '' })\n      })\n      .finally(() => {\n        setIsLoading(false)\n      })\n  }\n\n  const validateSubmit = () => {\n    let errors = { email: '', password: '' }\n    if (!values.email) {\n      errors.email = 'This field is required'\n    }\n    if (!values.password) {\n      errors.password = 'This field is required'\n    }\n    setErrors(errors)\n    return errors.password || errors.email\n  }\n\n  const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    setErrors({ ...errors, [name]: !value ? 'This field is required' : '' })\n  }\n\n  return (\n    <LoginWrapper>\n      <LoginContent>\n        <Title data-testid=\"title\">Sign in to your account</Title>\n        <FormSignUp autoComplete=\"off\" onSubmit={onSubmit}>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Email<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"email\"\n              autoComplete=\"off\"\n              error={!!errors.email}\n              name=\"email\"\n              onChange={onChangeValue}\n              value={values.email}\n              placeholder=\"Enter your email\"\n            />\n            <TextError data-testid=\"error-email\">{errors.email}</TextError>\n          </Box>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Password<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"password\"\n              autoComplete=\"off\"\n              error={!!errors.password}\n              onChange={onChangeValue}\n              name=\"password\"\n              type=\"password\"\n              value={values.password}\n              placeholder=\"Enter your password\"\n            />\n            <TextError data-testid=\"error-password\">\n              {errors.password}\n            </TextError>\n          </Box>\n          <Description>\n            Forgot your password?\n            <LinkWrappper to=\"/reset-password\">Reset password</LinkWrappper>\n          </Description>\n          <Stack\n            flexDirection=\"row\"\n            gap={2}\n            mt={3}\n            alignItems=\"center\"\n            justifyContent=\"flex-end\"\n          >\n            <ButtonLogin data-testid=\"button-submit\" type=\"submit\">\n              SIGN IN\n            </ButtonLogin>\n          </Stack>\n        </FormSignUp>\n      </LoginContent>\n      {isLoading && <Loading />}\n    </LoginWrapper>\n  )\n}\n\nconst LoginWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n  padding: 30,\n  boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n  borderRadius: 4,\n})\n\nconst Title = styled(Typography)({\n  fontSize: 15,\n  fontWeight: 600,\n  marginBottom: 24,\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n  fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n  color: 'red',\n  fontSize: 14,\n  marginLeft: 2,\n})\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 22,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst Description = styled(Typography)(({ theme }) => ({\n  fontSize: 12,\n  color: 'rgba(0, 0, 0, 0.65)',\n  marginTop: theme.spacing(1),\n}))\n\nconst LinkWrappper = styled(Link)({\n  marginLeft: 6,\n  color: '#1892d1',\n})\n\nconst ButtonLogin = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  color: 'red',\n  position: 'absolute',\n  bottom: 4,\n})\n\nexport default Login\n","import { ChangeEvent, FormEvent, useState } from 'react'\nimport { useNavigate } from \"react-router-dom\"\nimport { Box, Stack, styled, Typography, Link } from '@mui/material'\nimport { sendResetPasswordMailApi } from 'api/auth/Auth'\nimport Loading from \"components/common/Loading\"\nimport { regexEmail } from 'const/Auth'\n\nconst ResetPassword = () => {\n    const navigate = useNavigate()\n    const [isLoading, setIsLoading] = useState(false)\n    const [errors, setErrors] = useState<{ [key: string]: string }>({\n        email: '',\n    })\n    const [values, setValues] = useState<{ email: string }>({\n        email: '',\n    })\n\n    const onReset = async (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n\n        const errorCheck = validateSubmit()\n        if (errors.email || errorCheck) return\n        setIsLoading(true)\n        try {\n            await sendResetPasswordMailApi(values.email)\n            setTimeout(()=>{\n                alert(` You'll receive a link to reset your password at ${values.email}. Please check your mail!`)\n                navigate('/login')\n            },300)\n        }\n        catch {\n            setTimeout(()=>{\n                alert('Email does not exists!')\n            },300)\n        }\n        finally {\n            setIsLoading(false)\n        }\n    }\n\n    const validateEmail = (value: string): string => {\n        if(!value) return 'This field is required'\n        if(value.length > 255) return 'The text may not be longer than 255 characters'\n        if(!regexEmail.test(value)) return 'The email is invalid'\n        return ''\n    }\n\n    const validateSubmit = () => {\n        let errors = { email: '' }\n        errors.email = validateEmail(values.email)\n        setErrors(errors)\n        return errors.email\n    }\n\n    const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target\n        const error = validateEmail(value)\n        setValues({ ...values, [name]: value })\n        setErrors({ ...errors, [name]: error })\n    }\n\n    return (\n        <LoginWrapper>\n            <LoginContent>\n                <Heading>Forgot password?</Heading>\n                <Title>No worries, we'll send you reset instructions.</Title>\n                <FormSignUp autoComplete=\"off\" onSubmit={onReset}>\n                    <Box sx={{ position: 'relative' }}>\n                        <LabelField>\n                            Email<LableRequired>*</LableRequired>\n                        </LabelField>\n                        <Input\n                            autoComplete=\"off\"\n                            error={!!errors.email}\n                            name=\"email\"\n                            onChange={onChangeValue}\n                            value={values.email}\n                            placeholder=\"Enter your email\"\n                        />\n                        <TextError>{errors.email}</TextError>\n                    </Box>\n                    <Stack\n                        flexDirection=\"row\"\n                        gap={2}\n                        mt={3}\n                        alignItems=\"center\"\n                        justifyContent=\"space-between\"\n                    >\n                        <ButtonSignIn onClick={() => navigate('/login')}>Back to SIGN IN</ButtonSignIn>\n                        <ButtonLogin type=\"submit\">Reset Password</ButtonLogin>\n                    </Stack>\n                </FormSignUp>\n            </LoginContent>\n            {\n                isLoading && <Loading />\n            }\n        </LoginWrapper>\n    )\n}\n\nconst LoginWrapper = styled(Box)({\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n    padding: 30,\n    boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n    borderRadius: 4,\n})\n\nconst Heading = styled(Typography)({\n    fontSize: 22,\n    textAlign: 'center',\n    fontWeight: 600,\n})\n\nconst Title = styled(Typography)({\n    textAlign: 'center',\n    marginBottom: 24,\n    fontSize: 12,\n    color: 'rgba(0, 0, 0, 0.65)',\n})\n\nconst ButtonSignIn = styled(Link)({\n    fontSize: 12,\n    '&:hover': {\n        cursor: 'pointer'\n    }\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n    fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n    color: 'red',\n    fontSize: 14,\n    marginLeft: 2,\n})\n\nconst Input = styled('input', {\n    shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n    return {\n        width: 250,\n        height: 24,\n        borderRadius: 4,\n        border: '1px solid',\n        borderColor: error ? 'red' : '#d9d9d9',\n        padding: '5px 10px',\n        marginBottom: 22,\n        transition: 'all 0.3s',\n        outline: 'none',\n        ':focus, :hover': {\n            borderColor: '#1677ff',\n        },\n    }\n})\n\n\nconst ButtonLogin = styled('button')({\n    backgroundColor: '#283237',\n    color: '#ffffff',\n    borderRadius: 4,\n    border: 'none',\n    outline: 'none',\n    padding: '10px 20px',\n    cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n    fontSize: 12,\n    color: 'red',\n    position: 'absolute',\n    bottom: 4,\n})\n\nexport default ResetPassword\n","import { IS_STANDALONE } from 'const/Mode'\nimport { RootState } from 'store/store'\n\nexport const selectWorkspace = (state: RootState) => state.workspace\nexport const selectWorkspaceListUserShare = (state: RootState) =>\n  state.workspace.listUserShare\nexport const selectWorkspaceData = (state: RootState) =>\n  state.workspace.workspace\n\nexport const selectWorkspaceItem =\n  (workspaceId: number) => (state: RootState) =>\n    selectWorkspaceData(state).items.find((item) => item.id === workspaceId)\n\nexport const selectActiveTab = (state: RootState) =>\n  state.workspace.currentWorkspace.selectedTab\n\nexport const selectCurrentWorkspaceId = (state: RootState) =>\n  state.workspace.currentWorkspace.workspaceId\n\nexport const selectCurrentWorkspaceOwnerId = (state: RootState) =>\n  state.workspace.currentWorkspace.ownerId\n\nexport const selectIsLoadingWorkspaceList = (state: RootState) =>\n  state.workspace.loading\n\nexport const selectIsWorkspaceOwner = (state: RootState) =>\n  IS_STANDALONE\n    ? true\n    : state.workspace.currentWorkspace.ownerId === state.user.currentUser?.id\n","import axios from 'utils/axios'\nimport qs from 'qs'\nimport {\n  ItemsWorkspace,\n  WorkspaceDataDTO,\n} from 'store/slice/Workspace/WorkspaceType'\nimport { ListShareDTO } from 'store/slice/Database/DatabaseType'\n\nexport type WorkspacePostDataDTO = { name: string; id?: number }\n\nexport const getWorkspaceApi = async (id: number): Promise<ItemsWorkspace> => {\n  const response = await axios.get(`/workspace/${id}`)\n  return response.data\n}\n\nexport const getWorkspacesApi = async (params: {\n  [key: string]: number\n}): Promise<WorkspaceDataDTO> => {\n  const paramsNew = qs.stringify(params, { indices: false })\n  const response = await axios.get(`/workspaces?${paramsNew}`)\n  return response.data\n}\n\nexport const delWorkspaceApi = async (id: number): Promise<boolean> => {\n  const response = await axios.delete(`/workspace/${id}`)\n  return response.data\n}\n\nexport const postWorkspaceApi = async (\n  data: WorkspacePostDataDTO,\n): Promise<ItemsWorkspace> => {\n  const response = await axios.post(`/workspace`, data)\n  return response.data\n}\n\nexport const putWorkspaceApi = async (\n  data: WorkspacePostDataDTO,\n): Promise<ItemsWorkspace> => {\n  const response = await axios.put(`/workspace/${data.id}`, { name: data.name })\n  return response.data\n}\n\nexport const importWorkspaceApi = async (\n  data: Object,\n): Promise<ItemsWorkspace> => {\n  const response = await axios.post(`/workspace/import`, { todo_dummy: data })\n  return response.data\n}\n\nexport const exportWorkspaceApi = async (id: number): Promise<void> => {\n  const response = await axios.get(`/workspace/export/${id}`)\n  return response.data\n}\n\nexport const getListUserShareWorkspaceApi = async (\n  id: number,\n): Promise<ListShareDTO> => {\n  const response = await axios.get(`/workspace/share/${id}/status`)\n  return response.data\n}\n\nexport const postListUserShareWorkspaceApi = async (\n  id: number,\n  data: { user_ids: number[] },\n): Promise<boolean> => {\n  const response = await axios.post(`/workspace/share/${id}/status`, data)\n  return response.data\n}\n","import { UserDTO } from '../../../api/users/UsersApiDTO'\n\nexport const WORKSPACE_SLICE_NAME = 'workspace'\n\nexport type ItemsWorkspace = {\n  id: number\n  name: string\n  user: {\n    id: number\n    name: string\n    email: string\n    created_at: string\n    updated_at: string\n  }\n  created_at: string\n  updated_at: string\n}\n\nexport type WorkspaceDataDTO = {\n  items: ItemsWorkspace[]\n  total: number\n  limit: number\n  offset: number\n}\n\nexport type Workspace = {\n  workspace: WorkspaceDataDTO\n  currentWorkspace: {\n    workspaceId?: number\n    selectedTab: number\n    ownerId?: number\n  }\n  loading: boolean\n  listUserShare?: ListUserShareWorkspaceDTO\n}\n\nexport type ListUserShareWorkSpace = {\n  id: number\n  name: string\n  email: string\n  created_at: string\n  updated_at: string\n}\n\nexport type ListUserShareWorkspaceDTO = {\n  users: UserDTO[]\n}\n\nexport type WorkspaceParams = {\n  [key: string]: string | undefined | number | string[] | object\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  WorkspacePostDataDTO,\n  delWorkspaceApi,\n  exportWorkspaceApi,\n  getWorkspaceApi,\n  getWorkspacesApi,\n  importWorkspaceApi,\n  postWorkspaceApi,\n  putWorkspaceApi,\n  getListUserShareWorkspaceApi,\n  postListUserShareWorkspaceApi,\n} from 'api/Workspace'\nimport { ListShareDTO } from '../Database/DatabaseType'\nimport {\n  ItemsWorkspace,\n  WorkspaceDataDTO,\n  WorkspaceParams,\n  WORKSPACE_SLICE_NAME,\n} from './WorkspaceType'\n\nexport const getWorkspace = createAsyncThunk<ItemsWorkspace, { id: number }>(\n  `${WORKSPACE_SLICE_NAME}/getWorkspace`,\n  async (data, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getWorkspaceApi(data.id)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const getWorkspaceList = createAsyncThunk<\n  WorkspaceDataDTO,\n  { [key: string]: number }\n>(`${WORKSPACE_SLICE_NAME}/getWorkspaceList`, async (params, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await getWorkspacesApi(params)\n    return response\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n\nexport const delWorkspace = createAsyncThunk<boolean, WorkspaceParams>(\n  `${WORKSPACE_SLICE_NAME}/delWorkspaceList`,\n  async (data, thunkAPI) => {\n    const { rejectWithValue, dispatch } = thunkAPI\n    try {\n      const response = await delWorkspaceApi(Number(data.id))\n      await dispatch(getWorkspaceList(data.params as { [key: string]: number }))\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const postWorkspace = createAsyncThunk<\n  ItemsWorkspace,\n  WorkspacePostDataDTO\n>(`${WORKSPACE_SLICE_NAME}/postWorkspaceList`, async (data, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await postWorkspaceApi(data)\n    return response\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n\nexport const putWorkspace = createAsyncThunk<\n  ItemsWorkspace,\n  WorkspacePostDataDTO\n>(`${WORKSPACE_SLICE_NAME}/putWorkspaceList`, async (data, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await putWorkspaceApi(data)\n    return response\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n\nexport const importWorkspace = createAsyncThunk<\n  ItemsWorkspace,\n  { [key: string]: number }\n>(`${WORKSPACE_SLICE_NAME}/importWorkspaceList`, async (data, thunkAPI) => {\n  const { rejectWithValue, dispatch } = thunkAPI\n  try {\n    const response = await importWorkspaceApi(data)\n    await dispatch(getWorkspaceList(data))\n    return response\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n\nexport const exportWorkspace = createAsyncThunk<void, number>(\n  `${WORKSPACE_SLICE_NAME}/exportWorkspaceList`,\n  async (id, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await exportWorkspaceApi(id)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const getListUserShareWorkSpaces = createAsyncThunk<\n  ListShareDTO,\n  { id: number }\n>(\n  `${WORKSPACE_SLICE_NAME}/getListUserShareWorkSpaces`,\n  async (params, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getListUserShareWorkspaceApi(params.id)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const postListUserShareWorkspaces = createAsyncThunk<\n  boolean,\n  {\n    id: number\n    data: { user_ids: number[] }\n  }\n>(\n  `${WORKSPACE_SLICE_NAME}/postListUserShareWorkspaces`,\n  async (params, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await postListUserShareWorkspaceApi(\n        params.id,\n        params.data,\n      )\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","export const DATABASE_SLICE_NAME = 'database'\n\nexport type OrderBy = 'ASC' | 'DESC' | ''\n\nexport type ImageUrls = {\n  url: string\n  thumb_url: string\n  params: {}\n}\n\nexport type DatabaseType = {\n  id: number\n  fields: {\n    brain_area: string\n    cre_driver: string\n    reporter_line: string\n    imaging_depth: number\n  }\n  experiment_id?: string\n  attributes?: object\n  cell_image_urls: ImageUrls[]\n  cell_image_url?: {\n    url: string,\n    thumb_url: string,\n    params: {}\n  }\n  graph_urls: {url: string, params: {}, thumb_url: string}[]\n  share_type?: number\n  publish_status?: number\n  created_at: string\n  updated_at: string\n}\n\nexport type DatabaseDTO = {\n  offset: number\n  limit: number\n  total: number\n  header: {\n    graph_titles: string[]\n  }\n  items: DatabaseType[]\n}\n\nexport type ListShareDTO = {\n  share_type: number\n  users: ListShare[]\n}\n\nexport type ListShare = {\n  id: number,\n  name: string\n  email: string\n  created_at: string\n  updated_at: string\n}\n\nexport type DatabaseParams = { [key: string]: number | string | string[] | undefined }\n","import { DatabaseDTO, DatabaseParams, ListShareDTO } from 'store/slice/Database/DatabaseType'\nimport axios from 'utils/axios'\nimport qs from 'qs'\n\nexport const getExperimentsPublicApi = async (params: DatabaseParams): Promise<DatabaseDTO> => {\n  const paramsNew = qs.stringify(params, { indices: false })\n  const response = await axios.get(`/public/experiments?${paramsNew}`)\n  return response.data\n}\n\nexport const getCellsPublicApi = async (params: DatabaseParams): Promise<DatabaseDTO> => {\n  const paramsNew = qs.stringify(params, { indices: false })\n  const response = await axios.get(`/public/cells?${paramsNew}`)\n  return response.data\n}\n\nexport const getExperimentsApi = async (params: DatabaseParams): Promise<DatabaseDTO> => {\n  const paramsNew = qs.stringify(params, { indices: false })\n  const response = await axios.get(`/expdb/experiments?${paramsNew}`)\n  return response.data\n}\n\nexport const getCellsApi = async (params: DatabaseParams): Promise<DatabaseDTO> => {\n  const paramsNew = qs.stringify(params, { indices: false })\n  const response = await axios.get(`/expdb/cells?${paramsNew}`)\n  return response.data\n}\n\nexport const postPublishApi = async (id: number, status: 'on' | 'off'): Promise<boolean> => {\n  const response = await axios.post(`/expdb/experiment/publish/${id}/${status}`)\n  return response.data\n}\n\nexport const getListUserShareApi = async (id: number): Promise<ListShareDTO> => {\n  const response = await axios.get(`/expdb/share/${id}/status`)\n  return response.data\n}\n\nexport const postListUserShareApi = async (id: number, data: {share_type: number; user_ids: number[]}): Promise<boolean> => {\n  const response = await axios.post(`/expdb/share/${id}/status`, data)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  DATABASE_SLICE_NAME,\n  DatabaseDTO,\n  DatabaseParams,\n  ListShareDTO,\n} from './DatabaseType'\nimport {\n  getCellsApi,\n  getCellsPublicApi,\n  getExperimentsApi,\n  getExperimentsPublicApi,\n  getListUserShareApi,\n  postListUserShareApi,\n  postPublishApi,\n} from 'api/database'\n\nexport const getExperimentsDatabase = createAsyncThunk<\n  DatabaseDTO,\n  DatabaseParams\n>(`${DATABASE_SLICE_NAME}/getExperimentsList`, async (params, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await getExperimentsApi(params)\n    return response\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n\nexport const getCellsDatabase = createAsyncThunk<DatabaseDTO, DatabaseParams>(\n  `${DATABASE_SLICE_NAME}/getCellsList`,\n  async (params, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getCellsApi(params)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const getExperimentsPublicDatabase = createAsyncThunk<\n  DatabaseDTO,\n  DatabaseParams\n>(\n  `${DATABASE_SLICE_NAME}/getExperimentsPublicList`,\n  async (params, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getExperimentsPublicApi(params)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const getCellsPublicDatabase = createAsyncThunk<\n  DatabaseDTO,\n  DatabaseParams\n>(`${DATABASE_SLICE_NAME}/getCellsPublicList`, async (params, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await getCellsPublicApi(params)\n    return response\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n\nexport const postPublish = createAsyncThunk<\n  boolean,\n  { id: number; status: 'on' | 'off' , params: DatabaseParams}\n>(`${DATABASE_SLICE_NAME}/postPublish`, async (params, thunkAPI) => {\n  const { rejectWithValue, dispatch } = thunkAPI\n  try {\n    const response = await postPublishApi(params.id, params.status)\n    await dispatch(getExperimentsDatabase(params.params))\n    return response\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n\nexport const getListUserShare = createAsyncThunk<ListShareDTO, { id: number }>(\n  `${DATABASE_SLICE_NAME}/getListUserShare`,\n  async (params, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getListUserShareApi(params.id)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const postListUserShare = createAsyncThunk<\n  boolean,\n  {\n    id: number\n    data: { share_type: number; user_ids: number[] }\n  }\n>(`${DATABASE_SLICE_NAME}/postListUserShare`, async (params, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await postListUserShareApi(params.id, params.data)\n    return response\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { USER_SLICE_NAME } from './UserType'\nimport { User } from './UserType'\nimport {deleteMe, getListUser, getListSearch, getMe, login, updateMe, updateMePassword, deleteUser, createUser, updateUser} from './UserActions'\nimport {\n  removeExToken,\n  removeToken,\n  saveExToken,\n  saveRefreshToken,\n  saveToken,\n} from 'utils/auth/AuthUtils'\n\nconst initialState: User = {\n  currentUser: undefined,\n  listUserSearch: undefined,\n  listUser: undefined,\n  loading: false\n}\n\nexport const userSlice = createSlice({\n  name: USER_SLICE_NAME,\n  initialState,\n  reducers: {\n    logout: (state) => {\n      removeToken()\n      removeExToken()\n      state = initialState\n    },\n    resetUserSearch: (state) => {\n      state.listUserSearch = []\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(login.fulfilled, (_, action) => {\n        saveToken(action.payload.access_token)\n        saveRefreshToken(action.payload.refresh_token)\n        saveExToken(action.payload.ex_token)\n      })\n      .addCase(getMe.fulfilled, (state, action) => {\n        state.currentUser = action.payload\n      })\n      .addCase(getListUser.fulfilled, (state, action) => {\n        state.listUser = action.payload\n        state.loading = false\n      })\n      .addCase(getListSearch.fulfilled, (state, action) => {\n        state.listUserSearch = action.payload\n      })\n      .addCase(createUser.fulfilled, (state, action) => {\n        if(!state.listUser) return\n        state.listUser.items.push(action.payload)\n        state.loading = false\n      })\n      .addMatcher(\n        isAnyOf(\n          getListSearch.rejected,\n          createUser.rejected,\n          getListUser.rejected,\n          updateUser.rejected,\n          updateMePassword.rejected,\n          updateMePassword.fulfilled,\n          deleteUser.fulfilled,\n          deleteUser.rejected,\n          deleteMe.rejected,\n          deleteMe.fulfilled,\n          updateMe.rejected,\n          updateMe.fulfilled),\n        (state) => {\n          state.loading = false\n        },\n      )\n      .addMatcher(\n        isAnyOf(\n          getListUser.pending,\n          deleteUser.pending,\n          createUser.pending,\n          updateMe.pending,\n          deleteMe.pending,\n          updateUser.pending,\n          updateMePassword.pending),\n        (state) => {\n          state.loading = true\n        },\n      )\n      .addMatcher(\n        isAnyOf(login.rejected, getMe.rejected, deleteMe.fulfilled),\n        (state) => {\n          removeToken()\n          removeExToken()\n          state = initialState\n        },\n      )\n  },\n})\n\nexport const { logout, resetUserSearch } = userSlice.actions\nexport default userSlice.reducer\n","import {\n  Box, Button,\n  Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, FormControlLabel, Input, Radio, RadioGroup, styled\n} from \"@mui/material\";\nimport {DataGrid, GridRenderCellParams, GridValidRowModel} from \"@mui/x-data-grid\";\nimport { SHARE } from \"../@types\";\nimport { ChangeEvent, MouseEvent as MouseEventReact, useCallback, useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postListUserShare } from \"../store/slice/Database/DatabaseActions\";\nimport CancelIcon from '@mui/icons-material/Cancel'\nimport { postListUserShareWorkspaces } from \"store/slice/Workspace/WorkspacesActions\";\nimport { selectListSearch, selectLoading } from \"../store/slice/User/UserSelector\";\nimport { getListSearch } from \"../store/slice/User/UserActions\";\nimport Loading from \"./common/Loading\";\nimport { UserDTO } from \"../api/users/UsersApiDTO\";\nimport CheckIcon from '@mui/icons-material/Check';\nimport { resetUserSearch } from \"../store/slice/User/UserSlice\";\n\ntype PopupType = {\n  open: boolean\n  id: number\n  handleClose: (v: boolean) => void\n  isWorkspace?: boolean\n  title?: string\n  data?: {\n    expId: string\n    shareType: number\n  }\n  usersShare?: {\n    share_type?: number\n    users: UserDTO[]\n  }\n}\n\ntype TableSearch = {\n  usersSuggest: UserDTO[]\n  onClose: () => void\n  handleAddListUser: (user: UserDTO) => void\n  stateUserShare: UserDTO[]\n}\n\nconst TableListSearch = ({usersSuggest, onClose, handleAddListUser, stateUserShare}: TableSearch) => {\n\n  const ref = useRef<HTMLLIElement | null>(null)\n\n  useEffect(() => {\n    window.addEventListener('mousedown', onMouseDown)\n    return () => {\n      window.removeEventListener('mousedown', onMouseDown)\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  const onMouseDown = (event: MouseEvent) => {\n    if(ref.current?.contains((event as any).target) || (event as any).target.id === 'inputSearch') return;\n    onClose?.()\n  }\n\n  return (\n    <TableListSearchWrapper ref={ref} onBlur={() => console.log(123)}>\n      <UlCustom>\n        {usersSuggest.map(item => {\n          const isSelected = stateUserShare.some(i => i.id === item.id)\n          return (\n            <LiCustom key={item.id} onClick={() => handleAddListUser(item)} style={{\n              cursor: isSelected ? 'not-allowed' : 'pointer'\n            }}\n            >\n              {`${item.name} (${item.email})`}\n              {isSelected ? <CheckIcon style={{fontSize: 14}}/> : null}\n            </LiCustom>\n          )\n        })}\n      </UlCustom>\n    </TableListSearchWrapper>\n  )\n}\nconst PopupShare = ({open, handleClose, data, usersShare, id, isWorkspace, title}: PopupType) => {\n  const [shareType, setShareType] = useState(data?.shareType || 0)\n  const usersSuggest = useSelector(selectListSearch)\n  const loading = useSelector(selectLoading)\n  const [textSearch, setTextSearch] = useState('')\n  const [stateUserShare, setStateUserShare] = useState(usersShare || undefined)\n  const dispatch = useDispatch()\n  let timeout = useRef<NodeJS.Timeout | undefined>()\n\n  useEffect(() => {\n    if(usersShare) {\n      // setUserIdsSelected(usersShare.users.map(user => user.id));\n      setStateUserShare(usersShare)\n    }\n  }, [usersShare])\n\n  useEffect(() => {\n\n  }, [data])\n\n  useEffect(() => {\n    if(timeout.current) clearTimeout(timeout.current)\n    if(!textSearch) {\n      dispatch(resetUserSearch())\n      return\n    }\n    timeout.current = setTimeout(() => {\n      dispatch(getListSearch({keyword: textSearch}))\n    }, 300)\n    //eslint-disable-next-line\n  }, [textSearch])\n\n  const handleShareFalse = (e: any, params: GridRenderCellParams<GridValidRowModel>) => {\n    e.preventDefault()\n    e.stopPropagation()\n    if(!stateUserShare) return\n    const indexCheck = stateUserShare.users.findIndex(user => user.id === params.id)\n    const newStateUserShare = stateUserShare.users.filter((user, index) => index !== indexCheck)\n    setStateUserShare({...setStateUserShare, users: newStateUserShare})\n  }\n\n  const handleValue = (event: ChangeEvent<HTMLInputElement>) => {\n    setShareType(Number((event.target as HTMLInputElement).value));\n  }\n\n  const columnsShare = useCallback((handleShareFalse: (e: MouseEventReact<HTMLButtonElement>, parmas: GridRenderCellParams<GridValidRowModel>) => void) =>  [\n    {\n      field: \"name\",\n      headerName: \"Name\",\n      minWidth: 140,\n      renderCell: (params: GridRenderCellParams<GridValidRowModel>) => (\n          <span>{params.row.name}</span>\n      ),\n    },\n    {\n      field: \"email\",\n      headerName: \"Email\",\n      minWidth: 280,\n      renderCell: (params: GridRenderCellParams<GridValidRowModel>) => (\n        <span>{params.row.email}</span>\n      ),\n    },\n    {\n      field: \"share\",\n      headerName: \"\",\n      filterable: false,\n      sortable: false,\n      minWidth: 130,\n      renderCell: (params: GridRenderCellParams<GridValidRowModel>) => {\n        if(!params.row.share) return ''\n        return (\n          <Button onClick={(e) => handleShareFalse(e, params)}>\n            <CancelIcon color={\"error\"}/>\n          </Button>\n        )\n      }\n    },\n    //eslint-disable-next-line\n  ], [JSON.stringify(stateUserShare?.users)])\n\n  const handleOke = async () => {\n    if(!stateUserShare) return\n    let newUserIds = stateUserShare.users.map(user => user.id)\n    let newType = shareType\n    if(!isWorkspace) {\n      if(shareType === SHARE.ORGANIZATION) {\n        newUserIds = []\n      }\n      else if(shareType === SHARE.USERS && newUserIds.length < 1) {\n        newType = 0\n      }\n      else if(newUserIds.length > 0) newType = SHARE.USERS\n      await dispatch(postListUserShare({id, data: {user_ids: newUserIds as number[], share_type: newType }}))\n    } else {\n      await dispatch(postListUserShareWorkspaces({id, data: {user_ids: newUserIds as number[]}}))\n    }\n    handleClose(true);\n  }\n\n  const handleSearch = (event: ChangeEvent<HTMLInputElement>) => {\n    setTextSearch(event.target.value)\n  }\n\n  const handleCloseSearch = () => {\n    setTextSearch('')\n    dispatch(resetUserSearch())\n  }\n\n  const handleAddListUser = (user: any) => {\n    if(!usersSuggest || !stateUserShare) return\n    if(!stateUserShare.users.find(item => item.id === user.id)) {\n      setStateUserShare({...stateUserShare, users: [...stateUserShare.users, user]})\n    }\n  }\n\n  const handleClosePopup = (event: any) => {\n    if(event.key === 'Escape') {\n      handleClose(false)\n    }\n  }\n\n  if(!data || !usersShare) return null;\n\n  return (\n    <Box>\n      <DialogCustom\n        open={open}\n        onClose={handleClose}\n        sx={{margin: 0}}\n        onKeyDown={handleClosePopup}\n      >\n        <DialogTitle>{title || \"Share Database Record\"}</DialogTitle>\n        {isWorkspace ? null : (\n          <DialogContent>\n            <DialogContentText sx={{fontSize: 16, fontWeight: 400}}><ul><li>Experiment ID: {data.expId}</li></ul></DialogContentText>\n            <DialogContentText>\n              <FormControl>\n                <RadioGroup\n                  value={shareType !== SHARE.ORGANIZATION ? SHARE.USERS : SHARE.ORGANIZATION}\n                  row\n                  aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                  name=\"row-radio-buttons-group\"\n                  onChange={handleValue}\n                >\n                  <FormControlLabel value={SHARE.ORGANIZATION} control={<Radio/>} label={\"Share within Organization\"}/>\n                  <FormControlLabel value={SHARE.USERS} control={<Radio/>} label={\"Share for Users\"}/>\n                </RadioGroup>\n              </FormControl>\n            </DialogContentText>\n          </DialogContent>\n        )}\n        <DialogContent>\n          {\n            (shareType !== SHARE.ORGANIZATION || isWorkspace) ?\n              <>\n                <Box style={{position: 'relative'}}>\n                  <Input\n                    id=\"inputSearch\"\n                    sx={{width: \"60%\"}}\n                    placeholder={\"Search and add users\"}\n                    value={textSearch}\n                    onChange={handleSearch}\n                  />\n                  {\n                    textSearch && usersSuggest ?\n                      <TableListSearch\n                        onClose={handleCloseSearch}\n                        usersSuggest={usersSuggest}\n                        stateUserShare={stateUserShare?.users || []}\n                        handleAddListUser={handleAddListUser}\n                      /> : null\n                  }\n                </Box>\n                <p>Permitted users</p>\n                {\n                  stateUserShare &&\n                  <DataGrid\n                    sx={{minHeight: 400}}\n                    // onRowClick={handleShareTrue}\n                    rows={stateUserShare?.users.map((user: any) => ({...user, share: true}))}\n                    columns={columnsShare(handleShareFalse)}\n                    hideFooterPagination\n                  />\n                }\n              </>\n              : null\n          }\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleClose(false)}>Cancel</Button>\n          <Button onClick={handleOke}>Ok</Button>\n        </DialogActions>\n      </DialogCustom>\n      {\n        loading ? <Loading /> : null\n      }\n    </Box>\n  )\n}\n\nconst DialogCustom = styled(Dialog)(({ theme }) => ({\n  \"& .MuiDialog-container\": {\n    \"& .MuiPaper-root\": {\n      width: \"70%\",\n      maxWidth: \"890px\",\n    },\n  },\n}))\n\nconst TableListSearchWrapper = styled(Box)(({ theme }) => ({\n  position: 'absolute',\n  background: \"#fff\",\n  zIndex: 100,\n  width: \"60%\",\n  boxShadow: '0 6px 16px 0 rgba(0,0,0,.08), 0 3px 6px -4px rgba(0,0,0,.12), 0 9px 28px 8px rgba(0,0,0,.05)',\n  borderBottomLeftRadius: 8,\n  borderBottomRightRadius: 8,\n  maxHeight: 200,\n  overflow: 'auto'\n}))\n\nconst UlCustom = styled('ul')(({ theme }) => ({\n  listStyle: 'none',\n  padding: 0,\n  margin: 0,\n}))\n\nconst LiCustom = styled('li')(({ theme }) => ({\n  padding: theme.spacing(1, 2),\n  fontSize: 14,\n  cursor: \"pointer\",\n  display: 'flex',\n  justifyContent: \"space-between\",\n  alignItems: 'center',\n  \"&:hover\": {\n    backgroundColor: 'rgba(0,0,0,.04)'\n  }\n}))\n\nexport default PopupShare\n","import { UserDTO } from \"api/users/UsersApiDTO\"\n\nexport const isMine = (user?: UserDTO, idUserWorkSpace?: number) => {\n  return !!(user && idUserWorkSpace && user.id === idUserWorkSpace)\n}\n","import {Box, FormControl, NativeSelect, Pagination, styled} from \"@mui/material\";\nimport {DatabaseDTO} from \"../../store/slice/Database/DatabaseType\";\nimport {WorkspaceDataDTO} from \"../../store/slice/Workspace/WorkspaceType\";\nimport {ChangeEvent} from \"react\";\nimport {UserListDTO} from \"../../api/users/UsersApiDTO\";\n\ntype PagiProps = {\n  data: DatabaseDTO | WorkspaceDataDTO | UserListDTO\n  handlePage: (e: ChangeEvent<unknown>, page: number) => void\n  handleLimit: (e: ChangeEvent<HTMLSelectElement>) => void\n  limit: number | null\n}\n\nconst PaginationCustom = ({data, handlePage, handleLimit, limit}: PagiProps) => {\n  return (\n    <PaginationCustomWrapper>\n      <span>Rows per page: </span>\n      <FormControl sx={{ width: 'max-content', margin: '4px 16px 0 12px' }}>\n        <NativeSelect\n          value={limit || 50}\n          onChange={handleLimit}\n          inputProps={{\n            name: 'limit',\n            id: 'uncontrolled-native',\n          }}\n        >\n          <option value={10}>10</option>\n          <option value={50}>50</option>\n          <option value={100}>100</option>\n        </NativeSelect>\n      </FormControl>\n      <span>{`${((data?.offset || 0) + 1)} - ${(data?.offset || 0) + (data?.items?.length || 0)} of ${(data?.total) || 0}`}</span>\n      <Pagination\n        count={Math.ceil(data.total / data.limit)}\n        page={Math.ceil(data.offset / data.limit) + 1}\n        onChange={handlePage}\n      />\n    </PaginationCustomWrapper>\n  )\n}\n\nconst PaginationCustomWrapper = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'end',\n  alignItems: 'center',\n  marginTop: theme.spacing(2),\n  gap: 2\n}))\n\nexport default PaginationCustom\n","import { useSelector, useDispatch } from 'react-redux'\nimport {\n  Box,\n  styled,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Input, Tooltip,\n} from '@mui/material'\nimport {\n  GridEventListener,\n  GridRenderCellParams,\n  GridRowModes,\n  GridValidRowModel,\n  DataGrid\n} from '@mui/x-data-grid'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport Loading from '../../components/common/Loading'\nimport {\n  selectIsLoadingWorkspaceList,\n  selectWorkspaceData, selectWorkspaceListUserShare,\n} from 'store/slice/Workspace/WorkspaceSelector'\nimport { ChangeEvent, useCallback, useEffect, useMemo, useState } from 'react'\nimport {\n  delWorkspace,\n  exportWorkspace,\n  getListUserShareWorkSpaces,\n  getWorkspaceList,\n  importWorkspace,\n  postWorkspace,\n  putWorkspace,\n} from 'store/slice/Workspace/WorkspacesActions'\nimport PopupShare from 'components/PopupShare'\nimport moment from 'moment'\nimport SystemUpdateAltIcon from '@mui/icons-material/SystemUpdateAlt';\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { selectCurrentUser } from 'store/slice/User/UserSelector'\nimport { UserDTO } from 'api/users/UsersApiDTO'\nimport { isMine } from 'utils/checkRole'\nimport PaginationCustom from \"../../components/common/PaginationCustom\";\nimport {useSnackbar, VariantType} from \"notistack\";\n\ntype PopupType = {\n  open: boolean\n  handleClose: () => void\n  handleOkDel?: () => void\n  setNewWorkSpace?: (name: string) => void\n  value?: string\n  handleOkNew?: () => void\n  handleOkSave?: () => void\n  error?: string\n  nameWorkspace?: string\n}\n\nconst columns = (\n  handleOpenPopupShare: (id: number) => void,\n  handleOpenPopupDel: (id: number, nameWorkspace: string) => void,\n  handleDownload: (id: number) => void,\n  handleNavWorkflow: (id: number) => void,\n  handleNavRecords: (id: number) => void,\n  user?: UserDTO,\n  onEdit?: (id: number) => void,\n) => [\n  {\n    field: 'id',\n    headerName: 'ID',\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    flex: 1,\n    minWidth: 70,\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) => (\n      <span>{params.value}</span>\n    ),\n  },\n  {\n    field: 'name',\n    headerName: 'Workspace Name',\n    flex: 2,\n    minWidth: 100,\n    editable: true,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) => {\n      const { row, value } = params\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: 2,\n            justifyContent: 'space-between',\n            width: '100%'\n          }}\n        >\n          <Tooltip title={value} placement=\"top\">\n            <span\n              style={{\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                width: '100%'\n              }}\n            >\n            {value}\n          </span>\n          </Tooltip>\n          {isMine(user, row?.user?.id) ? (\n            <ButtonIcon onClick={() => onEdit?.(row.id)}>\n              <EditIcon style={{ fontSize: 16 }} />\n            </ButtonIcon>\n          ) : null}\n        </Box>\n      )\n    },\n  },\n  {\n    field: 'user',\n    headerName: 'Owner',\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    flex: 2,\n    minWidth: 100,\n    renderCell: (\n      params: GridRenderCellParams<{ name: string; id: number }>,\n    ) => (\n      <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n        {\n          params.value ?\n            <>\n              <span>{params.value?.name}</span>\n              {!isMine(user, params?.value.id) ? <GroupsIcon /> : ''}\n            </> : null\n        }\n      </Box>\n    ),\n  },\n  {\n    field: 'created_at',\n    headerName: 'Created',\n    flex: 2,\n    minWidth: 100,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) => (\n      <span style={{\n        whiteSpace: 'normal',\n        wordBreak: 'break-all',\n        overflowWrap: 'break-word',\n      }}>{moment(params.value).format('YYYY/MM/DD hh:mm')}</span>\n    ),\n  },\n  {\n    field: 'workflow',\n    headerName: '',\n    flex: 1,\n    minWidth: 160,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) => (\n      <Button\n        variant='contained'\n        color='primary'\n        size='small'\n        onClick={() => handleNavWorkflow(params.row.id)}\n      >\n        Workflow\n      </Button>\n    ),\n  },\n  {\n    field: 'records',\n    headerName: '',\n    flex: 1,\n    minWidth: 100,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) => {\n      return (\n        <Button\n          variant='contained'\n          color='primary'\n          size='small'\n          onClick={() => handleNavRecords(params.row.id)}\n        >\n          Records\n        </Button>\n      )\n    }\n  },\n  {\n    field: 'download',\n    headerName: '',\n    flex: 1,\n    minWidth: 70,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) => (\n      <ButtonIcon onClick={() => handleDownload(params?.row?.id)}>\n        <SystemUpdateAltIcon />\n      </ButtonIcon>\n    ),\n  },\n  {\n    field: 'share',\n    headerName: '',\n    flex: 1,\n    minWidth: 70,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) =>\n      isMine(user, params.row?.user?.id) ? (\n        <ButtonIcon onClick={() => handleOpenPopupShare(params.row.id)}>\n          <GroupsIcon color={params.row.shared_count ? 'primary' : 'inherit'}/>\n        </ButtonIcon>\n      ): null\n  },\n  {\n    field: 'delete',\n    headerName: '',\n    flex: 1,\n    minWidth: 70,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) =>\n      isMine(user, params.row?.user?.id) ? (\n      <ButtonIcon onClick={() => handleOpenPopupDel(params.row.id, params.row.name)}>\n        <DeleteIcon color='error' />\n      </ButtonIcon>\n      ) : null\n  },\n]\n\nconst PopupNew = ({\n  open,\n  handleClose,\n  value,\n  setNewWorkSpace,\n  handleOkNew,\n  error,\n}: PopupType) => {\n  if (!setNewWorkSpace) return null\n  const handleName = (event: ChangeEvent<HTMLInputElement>) => {\n    setNewWorkSpace(event.target.value)\n  }\n\n  return (\n    <Box>\n      <Dialog open={open} onClose={handleClose} sx={{ margin: 0 }}>\n        <DialogTitle>New Workspace</DialogTitle>\n        <DialogContent sx={{ minWidth: 300 }}>\n          <Input\n            sx={{ width: '80%' }}\n            placeholder={'Workspace Name'}\n            value={value || ''}\n            onChange={handleName}\n          />\n          <br />\n          {error ? <span style={{ color: 'red' }}>{error}</span> : null}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleOkNew}>Ok</Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  )\n}\n\nconst PopupDelete = ({open, handleClose, handleOkDel, nameWorkspace}: PopupType) => {\n  if(!open) return null\n  return (\n    <Box>\n      <Dialog open={open} onClose={handleClose} sx={{ margin: 0 }}>\n        <DialogTitle>Do you want delete Workspace \"{nameWorkspace}\"?</DialogTitle>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleOkDel}>Ok</Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  )\n}\n\nconst Workspaces = () => {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const loading = useSelector(selectIsLoadingWorkspaceList)\n  const listUserShare = useSelector(selectWorkspaceListUserShare)\n  const data = useSelector(selectWorkspaceData)\n  const user = useSelector(selectCurrentUser)\n  const [open, setOpen] = useState({\n    share: false,\n    del: false,\n    new: false,\n    shareId: 0,\n  })\n  const [workspaceDel, setWorkspaceDel] = useState<{id: number, name: string}>()\n  const [newWorkspace, setNewWorkSpace] = useState<string>()\n  const [error, setError] = useState('')\n  const [initName, setInitName] = useState('')\n  const [rowModesModel, setRowModesModel] = useState<any>({})\n  const [searchParams, setParams] = useSearchParams()\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleClickVariant = (variant: VariantType, mess: string) => {\n    enqueueSnackbar(mess, { variant });\n  };\n\n  const offset = searchParams.get('offset')\n  const limit = searchParams.get('limit')\n\n  const dataParams = useMemo(() => {\n    return {\n      offset: Number(offset) || 0,\n      limit: Number(limit) || 50,\n    }\n    //eslint-disable-next-line\n  }, [offset, limit])\n\n  useEffect(() => {\n    dispatch(getWorkspaceList(dataParams))\n    //eslint-disable-next-line\n  }, [dataParams])\n\n  const handleOpenPopupShare = (shareId: number) => {\n    setOpen({ ...open, share: true, shareId })\n  }\n\n  useEffect(() => {\n    if (!open.share || !open.shareId) return\n    dispatch(getListUserShareWorkSpaces({ id: open.shareId }))\n    //eslint-disable-next-line\n  }, [open.share, open.shareId])\n\n  const handleClosePopupShare = () => {\n    setOpen({ ...open, share: false })\n  }\n\n  const handleOpenPopupDel = (id: number, name: string) => {\n    setWorkspaceDel({id, name})\n    setOpen({ ...open, del: true })\n  }\n\n  const handleOkDel = async () => {\n    if (!workspaceDel) return\n    const data = await dispatch(delWorkspace({ id: workspaceDel.id, params: dataParams }))\n    if((data as any).error) {\n      handleClickVariant('error', 'Workspace deletion failed!')\n    }\n    else {\n      handleClickVariant('success', 'The workspace has been deleted successfully!')\n    }\n    setOpen({ ...open, del: false })\n  }\n\n  const handleClosePopupDel = () => {\n    setOpen({ ...open, del: false })\n  }\n\n  const handleOpenPopupNew = () => {\n    setOpen({ ...open, new: true })\n  }\n\n  const handleClosePopupNew = () => {\n    setOpen({ ...open, new: false })\n    setError('')\n  }\n\n  const handleNavWorkflow = (id: number) => {\n    navigate(`/console/workspaces/${id}`)\n  }\n\n  const handleNavRecords = (id: number) => {\n    navigate(`/console/workspaces/${id}`, { state: { tab: 2 } })\n  }\n\n  const onEditName = (id: number) => {\n    setRowModesModel((pre: any) => ({ ...pre, [id]: { mode: GridRowModes.Edit } }))\n  }\n\n  const handleOkNew = async () => {\n    if (!newWorkspace) {\n      setError(\"Workspace Name cann't empty\")\n      return\n    }\n    const data = await dispatch(postWorkspace({ name: newWorkspace }))\n    if((data as any).error) {\n      handleClickVariant('error', 'Workspace creation failed!')\n    }\n    else {\n      handleClickVariant('success', 'The workspace has been created successfully!')\n    }\n    await dispatch(getWorkspaceList(dataParams))\n    setOpen({ ...open, new: false })\n    setError('')\n    setNewWorkSpace('')\n  }\n\n  const onProcessRowUpdateError = (newRow: any) => {\n    return newRow\n  }\n\n  const handleFileUpload = async (event: ChangeEvent<HTMLInputElement>) => {\n    dispatch(importWorkspace({}))\n  }\n\n  const pagi = useCallback(\n    (page?: number) => {\n      return `limit=${data.limit}&offset=${page ? (page-1) * data.limit : data.offset}`\n    },\n    [data?.limit, data?.offset],\n  )\n\n  const handlePage = (e: ChangeEvent<unknown>, page: number) => {\n    setParams(`&${pagi(page)}`)\n  }\n\n  const handleDownload = async (id: number) => {\n    dispatch(exportWorkspace(id))\n  }\n\n  const handleRowModesModelChange = (newRowModesModel: any) => {\n    setRowModesModel(newRowModesModel)\n  }\n\n  const onRowEditStop: GridEventListener<'rowEditStop'> = (params, event) => {\n    setInitName(params.row.name)\n  }\n\n  const onCellClick: GridEventListener<'cellClick'> | undefined = (event: any) => {\n    if (event.field === 'name') return\n    setRowModesModel((pre: any) => {\n      const object: any = {}\n      Object.keys(pre).forEach(key => {\n        object[key] = {\n          mode: GridRowModes.View, ignoreModifications: false\n        }\n      })\n      return object\n    })\n  }\n\n  const processRowUpdate = async (newRow: any) => {\n    if (!newRow.name) {\n      handleClickVariant('error', \"Workspace Name cann't empty\")\n      return { ...newRow, name: initName }\n    }\n    if (newRow.name === initName) return newRow\n    const data = await dispatch(putWorkspace({ name: newRow.name, id: newRow.id }))\n    if((data as any).error) {\n      handleClickVariant('error', 'Workspace name edit failed!')\n    }\n    else {\n      handleClickVariant('success', 'Workspace name edited successfully!')\n    }\n    await dispatch(getWorkspaceList(dataParams))\n    return newRow\n  }\n\n  const handleLimit = (event: ChangeEvent<HTMLSelectElement>) => {\n    setParams(\n        `limit=${Number(event.target.value)}&offset=0`,\n    )\n  }\n\n  return (\n    <WorkspacesWrapper>\n      <WorkspacesTitle>Workspaces</WorkspacesTitle>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          gap: 2,\n          marginBottom: 2,\n        }}\n      >\n        <label htmlFor=\"upload-image\">\n          <Button\n            sx={{\n              background: '#000000c4',\n              '&:hover': { backgroundColor: '#00000090' },\n            }}\n            variant=\"contained\"\n            component=\"span\"\n          >\n            Import\n          </Button>\n          <input\n            id=\"upload-image\"\n            hidden\n            accept=\"*\"\n            type=\"file\"\n            onChange={handleFileUpload}\n          />\n        </label>\n        <Button\n          sx={{\n            background: '#000000c4',\n            '&:hover': { backgroundColor: '#00000090' },\n          }}\n          variant=\"contained\"\n          onClick={handleOpenPopupNew}>New</Button>\n      </Box>\n      {\n        user ?\n          <Box\n            sx={{\n              minHeight: 500,\n              height: 'calc(100vh - 350px)',\n            }}\n          >\n            <DataGrid\n              // todo enable when api complete\n              // filterMode={'server'}\n              // sortingMode={'server'}\n              // onSortModelChange={handleSort}\n              // onFilterModelChange={handleFilter as any}\n              onCellClick={onCellClick}\n              rows={data?.items}\n              editMode=\"row\"\n              rowModesModel={rowModesModel}\n              columns={\n                columns(\n                  handleOpenPopupShare,\n                  handleOpenPopupDel,\n                  handleDownload,\n                  handleNavWorkflow,\n                  handleNavRecords,\n                  user,\n                  onEditName,\n                ).filter(Boolean) as any\n              }\n              onRowModesModelChange={handleRowModesModelChange}\n              isCellEditable={(params) => isMine(user, params.row.user?.id)}\n              onProcessRowUpdateError={onProcessRowUpdateError}\n              onRowEditStop={onRowEditStop}\n              processRowUpdate={processRowUpdate as any}\n              hideFooter={true}\n            />\n          </Box> : null\n      }\n      {\n        data?.items.length > 0 ?\n          <PaginationCustom\n            data={data}\n            handlePage={handlePage}\n            handleLimit={handleLimit}\n            limit={Number(limit)}\n          /> : null\n      }\n      {open.share ? (\n        <PopupShare\n          isWorkspace\n          title=\"Share Workspace\"\n          usersShare={listUserShare}\n          open={open.share}\n          handleClose={(_isSubmit: boolean) => {\n            if (_isSubmit) {\n              dispatch(getWorkspaceList(dataParams))\n            }\n            handleClosePopupShare()\n          }}\n          id={open.shareId}\n          data={{ expId: '', shareType: 0 }}\n        />\n      ) : null}\n      <PopupDelete\n        open={open.del}\n        handleClose={handleClosePopupDel}\n        handleOkDel={handleOkDel}\n        nameWorkspace={workspaceDel?.name}\n      />\n      <PopupNew\n        open={open.new}\n        handleClose={handleClosePopupNew}\n        setNewWorkSpace={setNewWorkSpace}\n        value={newWorkspace}\n        error={error}\n        handleOkNew={handleOkNew}\n      />\n      {loading ? <Loading /> : null}\n    </WorkspacesWrapper>\n  )\n}\n\nconst WorkspacesWrapper = styled(Box)(({ theme }) => ({\n  margin: 'auto',\n  width: '90vw',\n  padding: theme.spacing(2),\n  overflow: 'auto',\n}))\n\nconst WorkspacesTitle = styled('h1')(({ theme }) => ({}))\n\nconst ButtonIcon = styled('button')(({ theme }) => ({\n  minWidth: '32px',\n  minHeight: '32px',\n  width: '32px',\n  height: '32px',\n  color: '#444',\n  border: 'none',\n  borderRadius: '50%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  cursor: 'pointer',\n  background: 'transparent',\n  '&:hover': {\n    background: 'rgb(239 239 239)',\n  },\n}))\n\nexport default Workspaces\n","import {\n  ParamDTO,\n  ParamChild,\n  ParamParent,\n  ParamType,\n  ParamMap,\n} from './ParamType'\n\nexport function getChildParam(\n  path: string,\n  ParamMap: ParamMap,\n): ParamChild | null {\n  let result: ParamChild | null = null\n  for (const node of Object.values(ParamMap)) {\n    if (isParamChild(node)) {\n      if (node.path === path) {\n        result = node\n      }\n    } else {\n      result = getChildParam(path, node.children)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function isParamChild(param: ParamType): param is ParamChild {\n  return param.type === 'child'\n}\n\nexport function isParamParent(param: ParamType): param is ParamParent {\n  return param.type === 'parent'\n}\n\nfunction isDictObject(value: unknown): value is { [key: string]: unknown } {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst PATH_SEPARATOR = '/'\n\nexport function convertToParamMap(dto: ParamDTO, keyList?: string[]): ParamMap {\n  const ParamMap: ParamMap = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    const kList = keyList ?? []\n    if (isDictObject(value)) {\n      kList.push(name)\n      ParamMap[name] = {\n        type: 'parent',\n        children: convertToParamMap(value, kList),\n      }\n    } else {\n      ParamMap[name] = {\n        type: 'child',\n        value,\n        path: kList.concat([name]).join(PATH_SEPARATOR),\n      }\n    }\n  })\n  return ParamMap\n}\n\nexport function equalsParamMap(a: ParamMap, b: ParamMap) {\n  if (a === b) {\n    return true\n  }\n  const aArray = Object.keys(a)\n  const bArray = Object.keys(b)\n  return (\n    aArray.length === bArray.length &&\n    aArray.every((aKey) => {\n      const aValue = a[aKey]\n      const bValue = b[aKey]\n      return equalsParam(aValue, bValue)\n    })\n  )\n}\n\nfunction equalsParam(a: ParamType, b: ParamType): boolean {\n  if (a === b) {\n    return true\n  }\n  if (isParamChild(a) && isParamChild(b)) {\n    return equalsParamChild(a, b)\n  } else if (isParamParent(a) && isParamParent(b)) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      aArray.length === bArray.length &&\n      aArray.every((aKey) => {\n        const aValue = a.children[aKey]\n        const bValue = b.children[aKey]\n        return equalsParam(aValue, bValue)\n      })\n    )\n  } else {\n    return false\n  }\n}\n\nfunction equalsParamChild(a: ParamChild, b: ParamChild) {\n  return a.path === b.path && a.value === b.value\n}\n","import { RootState } from 'store/store'\n\nimport { getChildParam } from 'utils/param/ParamUtils'\n\nexport const selectAlgorithmNode = (state: RootState) => state.algorithmNode\n\nexport const selectAlgorithmNodeById = (nodeId: string) => (state: RootState) =>\n  state.algorithmNode[nodeId]\n\nexport const selectAlgorithmNodeDefined =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(state.algorithmNode).includes(nodeId)\n\nexport const selectAlgorithmFunctionPath =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).functionPath\n\nexport const selectAlgorithmName = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).name\n\nexport const selectAlgorithmParams = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).params\n\nexport const selectAlgorithmIsUpdated =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).isUpdated\n\nexport const selectAlgorithmParamsExit =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).params !== null\n\nexport const selectAlgorithmParamsKeyList =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(selectAlgorithmNodeById(nodeId)(state)?.params ?? {})\n\nexport const selectAlgorithmParamsValue =\n  (nodeId: string, path: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmParam =\n  (nodeId: string, paramKey: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      return params[paramKey]\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmNodeNotExist = (state: RootState) =>\n  Object.keys(selectAlgorithmNode(state)).length === 0\n","import { RootState } from 'store/store'\n\nexport const selectFlowNodes = (state: RootState) => state.flowElement.flowNodes\n\nexport const selectFlowEdges = (state: RootState) => state.flowElement.flowEdges\n\nexport const selectFlowPosition = (state: RootState) =>\n  state.flowElement.flowPosition\n\nexport const selectElementCoord = (state: RootState) =>\n  state.flowElement.elementCoord\n\nexport const selectNodeById = (nodeId: string) => (state: RootState) =>\n  selectFlowNodes(state).find((node) => node.id === nodeId)\n\nexport const selectNodeTypeById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.type\n\nexport const selectNodeLabelById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.label\n","import { Transform, Node, Edge } from 'react-flow-renderer'\n\nexport const FLOW_ELEMENT_SLICE_NAME = 'flowElement'\n\nexport const NODE_TYPE_SET = {\n  INPUT: 'input',\n  ALGORITHM: 'algorithm',\n} as const\n\nexport type NODE_TYPE = (typeof NODE_TYPE_SET)[keyof typeof NODE_TYPE_SET]\n\nexport type NodeData = AlgorithmNodeData | InputNodeData\n\ninterface NodeDataBaseType<T extends NODE_TYPE> {\n  label: string\n  type: T\n}\n\nexport interface InputNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.INPUT> {}\n\nexport interface AlgorithmNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.ALGORITHM> {}\n\nexport interface ElementCoord {\n  x: number\n  y: number\n}\n\nexport interface FlowElement {\n  flowNodes: Node<NodeData>[]\n  flowEdges: Edge[]\n  flowPosition: Transform\n  elementCoord: ElementCoord\n}\n","import { isNode, Node } from 'react-flow-renderer'\nimport {\n  AlgorithmNodeData,\n  NodeData,\n  NODE_TYPE_SET,\n  InputNodeData,\n} from './FlowElementType'\n\nexport function isNodeData(\n  node: Node<NodeData> | undefined,\n): node is Node<NodeData> {\n  return node != null && isNode(node) && node.data != null\n}\n\nexport function isAlgorithmNodeData(\n  node: Node<NodeData> | undefined,\n): node is Node<AlgorithmNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.ALGORITHM\n}\n\nexport function isInputNodeData(\n  node: Node<NodeData> | undefined,\n): node is Node<InputNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.INPUT\n}\n\nexport function getLabelByPath(filePath: string | string[]) {\n  if (Array.isArray(filePath)) {\n    if (filePath.length === 0) {\n      return ''\n    } else if (filePath.length === 1) {\n      return getFileName(filePath[0])\n    } else {\n      return getFileName(filePath[0]) + ` ... and ${filePath.length - 1} files`\n    }\n  } else {\n    return getFileName(filePath)\n  }\n}\n\nexport function getFileName(filePath: string) {\n  return filePath.split('/').reverse()[0]\n}\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nexport const selectNwb = (state: RootState) => state.nwb\n\nexport const selectNwbParams = (state: RootState) => selectNwb(state).params\n\nexport const selectNwbParamsKeyList = (state: RootState) =>\n  Object.keys(selectNwb(state).params)\n\nexport const selectNwbParam = (paramKey: string) => (state: RootState) =>\n  selectNwb(state).params[paramKey]\n\nexport const selectNwbParamsValue = (path: string) => (state: RootState) => {\n  const params = selectNwb(state).params\n  if (params != null) {\n    const target = getChildParam(path, params)\n    return target?.value\n  } else {\n    throw new Error('Param is null')\n  }\n}\n","import { RunPostData } from 'api/run/Run'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\n\nexport const PIPELINE_SLICE_NAME = 'pipeline'\n\nexport type Pipeline = {\n  run: PipelineType\n  currentPipeline?: {\n    uid: string\n  }\n  runBtn: RUN_BTN_TYPE\n}\n\nexport const RUN_STATUS = {\n  /**\n   * 未実行\n   */\n  START_UNINITIALIZED: 'StartUninitialized',\n  /**\n   * 開始リクエスト中\n   */\n  START_PENDING: 'StartPending',\n  /**\n   * 開始できなかった\n   */\n  START_ERROR: 'StartError',\n  /**\n   * 正常に開始した\n   */\n  START_SUCCESS: 'StartSuccess',\n  /**\n   * 全て終了\n   */\n  FINISHED: 'Finished',\n  /**\n   * 途中終了\n   */\n  ABORTED: 'Aborted',\n  /**\n   * キャンセルされた\n   */\n  CANCELED: 'Canceled',\n} as const\n\nexport type RUN_STATUS_TYPE = typeof RUN_STATUS[keyof typeof RUN_STATUS]\n\nexport type PipelineType =\n  | StartedPipeline\n  | {\n      status:\n        | typeof RUN_STATUS.START_ERROR\n        | typeof RUN_STATUS.START_PENDING\n        | typeof RUN_STATUS.START_UNINITIALIZED\n    }\n\nexport type StartedPipeline = {\n  uid: string\n  status:\n    | typeof RUN_STATUS.START_SUCCESS\n    | typeof RUN_STATUS.FINISHED\n    | typeof RUN_STATUS.ABORTED\n    | typeof RUN_STATUS.CANCELED\n  runPostData: RunPostData\n  runResult: RunResult\n}\n\nexport type RunResult = {\n  [nodeId: string]: NodeResult\n}\n\nexport type NodeResult = NodeResultPending | NodeResultSuccess | NodeResultError\n\nexport const NODE_RESULT_STATUS = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PENDING: 'pending',\n} as const\n\nexport type NODE_RESULT_STATUS_TYPE =\n  typeof NODE_RESULT_STATUS[keyof typeof NODE_RESULT_STATUS]\n\nexport interface NodeResultBaseType<T extends NODE_RESULT_STATUS_TYPE> {\n  status: T\n  message?: string\n  name: string\n}\n\nexport interface NodeResultPending\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.PENDING> {}\n\nexport interface NodeResultSuccess\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.SUCCESS> {\n  outputPaths: OutputPaths\n}\n\nexport type OutputPaths = {\n  [outputKey: string]: {\n    path: string\n    type: DATA_TYPE\n  }\n}\n\nexport interface NodeResultError\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.ERROR> {\n  message: string\n}\n\nexport const RUN_BTN_OPTIONS = {\n  RUN_NEW: 1,\n  RUN_ALREADY: 2,\n} as const\n\nexport type RUN_BTN_TYPE = typeof RUN_BTN_OPTIONS[keyof typeof RUN_BTN_OPTIONS]\n\nexport const RUN_BTN_LABELS = {\n  [RUN_BTN_OPTIONS.RUN_NEW]: 'RUN ALL',\n  [RUN_BTN_OPTIONS.RUN_ALREADY]: 'RUN',\n} as const\n","import {\n  HeatMapData,\n  TimeSeriesData,\n  BarData,\n  CsvData,\n  RoiData,\n  ImageData,\n  ScatterData,\n  HTMLData,\n} from 'api/outputs/Outputs'\n\nexport const DISPLAY_DATA_SLICE_NAME = 'displayData'\n\nexport type DisplayData = {\n  timeSeries: {\n    [filePath: string]: TimeSeriesDisplayData\n  }\n  heatMap: {\n    [filePath: string]: HeatMapDisplayData\n  }\n  image: {\n    [filePath: string]: ImageDisplayData\n  }\n  csv: {\n    [filePath: string]: CsvDisplayData\n  }\n  roi: {\n    [filePath: string]: RoiDisplayData\n  }\n  scatter: {\n    [filePath: string]: ScatterDisplayData\n  }\n  bar: {\n    [filePath: string]: BarDisplayData\n  }\n  // hdf5: {\n  //   [filePath: string]: HDF5DisplayData\n  // }\n  html: {\n    [filePath: string]: HTMLDisplayData\n  }\n}\n\nexport const DATA_TYPE_SET = {\n  TIME_SERIES: 'timeSeries',\n  HEAT_MAP: 'heatMap',\n  IMAGE: 'image',\n  CSV: 'csv',\n  ROI: 'roi',\n  SCATTER: 'scatter',\n  BAR: 'bar',\n  HDF5: 'hdf5',\n  HTML: 'html',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type DATA_TYPE = typeof DATA_TYPE_SET[keyof typeof DATA_TYPE_SET]\n\ninterface BaseDisplay<T extends DATA_TYPE, Data> {\n  type: T\n  data: Data\n  pending: boolean\n  error: string | null\n  fulfilled: boolean\n}\n\nexport interface TimeSeriesDisplayData\n  extends BaseDisplay<'timeSeries', TimeSeriesData> {\n  xrange: number[]\n  std: TimeSeriesData\n}\n\nexport interface HeatMapDisplayData\n  extends BaseDisplay<'heatMap', HeatMapData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface ImageDisplayData extends BaseDisplay<'image', ImageData> {}\n\nexport interface CsvDisplayData extends BaseDisplay<'csv', CsvData> {\n  // columns: string[]\n}\n\nexport interface RoiDisplayData extends BaseDisplay<'roi', RoiData> {\n  roiUniqueList: string[]\n}\n\nexport interface ScatterDisplayData\n  extends BaseDisplay<'scatter', ScatterData> {}\n\nexport interface BarDisplayData extends BaseDisplay<'bar', BarData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface HTMLDisplayData extends BaseDisplay<'html', HTMLData> {}\n","import { DATA_TYPE, DATA_TYPE_SET } from './DisplayDataType'\n\n/**\n * サーバーサイドの値をマッピング\n */\nexport function toDataType(value: string): DATA_TYPE {\n  switch (value) {\n    case 'images':\n      return DATA_TYPE_SET.IMAGE\n    case 'timeseries':\n      return DATA_TYPE_SET.TIME_SERIES\n    case 'heatmap':\n      return DATA_TYPE_SET.HEAT_MAP\n    case 'roi':\n      return DATA_TYPE_SET.ROI\n    case 'scatter':\n      return DATA_TYPE_SET.SCATTER\n    case 'bar':\n      return DATA_TYPE_SET.BAR\n    case 'html':\n      return DATA_TYPE_SET.HTML\n    default:\n      throw new Error(`failed to map dataType: ${value}`)\n  }\n}\n","import { RunPostData, RunResultDTO, OutputPathsDTO } from 'api/run/Run'\n\nimport { toDataType } from '../DisplayData/DisplayDataUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  RunResult,\n  OutputPaths,\n  NODE_RESULT_STATUS,\n  PipelineType,\n  RUN_STATUS,\n  StartedPipeline,\n  NodeResultPending,\n  NodeResultError,\n  NodeResultSuccess,\n  NodeResult,\n} from './PipelineType'\n\nexport function isNodeResultPending(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultPending {\n  return nodeResult.status === NODE_RESULT_STATUS.PENDING\n}\n\nexport function isNodeResultSuccess(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultSuccess {\n  return nodeResult.status === NODE_RESULT_STATUS.SUCCESS\n}\n\nexport function isNodeResultError(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultError {\n  return nodeResult.status === NODE_RESULT_STATUS.ERROR\n}\n\nexport function isStartedPipeline(\n  pipeline: PipelineType,\n): pipeline is StartedPipeline {\n  return (\n    pipeline.status === RUN_STATUS.START_SUCCESS ||\n    pipeline.status === RUN_STATUS.FINISHED ||\n    pipeline.status === RUN_STATUS.ABORTED\n  )\n}\n\nexport function getInitialRunResult(runPostData: RunPostData) {\n  const initialResult: RunResult = {}\n  Object.values(runPostData.nodeDict)\n    .filter(({ data }) => data?.type === NODE_TYPE_SET.ALGORITHM)\n    .forEach(({ id, data }) => {\n      initialResult[id] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: data?.label ?? '',\n      }\n    })\n  return initialResult\n}\n\nexport function convertToRunResult(dto: RunResultDTO) {\n  const result: RunResult = {}\n  Object.entries(dto).forEach(([nodeId, nodeResultDto]) => {\n    const outputPath = nodeResultDto.outputPaths\n    if (nodeResultDto.status === 'success' && outputPath != null) {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.SUCCESS,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n        outputPaths: convertToOutputPath(outputPath),\n      }\n    } else if (nodeResultDto.status === 'running') {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: nodeResultDto.name,\n      }\n    } else {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.ERROR,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n      }\n    }\n  })\n  return result\n}\n\nfunction convertToOutputPath(dto: OutputPathsDTO) {\n  const result: OutputPaths = {}\n  Object.entries(dto).forEach(([functionPath, value]) => {\n    result[functionPath] = {\n      path: value.path,\n      type: toDataType(value.type),\n    }\n  })\n  return result\n}\n","import { RootState } from 'store/store'\n\nimport {\n  NodeResult,\n  NodeResultPending,\n  NodeResultSuccess,\n  RUN_STATUS,\n} from './PipelineType'\nimport {\n  isNodeResultPending,\n  isStartedPipeline,\n  isNodeResultSuccess,\n} from './PipelineUtils'\n\nexport const selectPipelineLatestUid = (state: RootState) => {\n  return state.pipeline.currentPipeline?.uid\n}\n\nexport const selectStartedPipeline = (state: RootState) => {\n  return state.pipeline.run\n}\n\nexport const selectPipelineRunBtn = (state: RootState) => {\n  return state.pipeline.runBtn\n}\n\nexport const selectRunResultPendingList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.values(pipeline.runResult).filter(isNodeResultPending)\n  } else {\n    return []\n  }\n}\n\nexport const selectRunResultPendingNodeIdList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => ({ nodeId, nodeResult }))\n      .filter(isNodeResultPendingAndNodeId)\n      .map(({ nodeId }) => nodeId)\n  } else {\n    return []\n  }\n}\n\nfunction isNodeResultPendingAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultPending\n} {\n  return isNodeResultPending(arg.nodeResult)\n}\n\nexport const selectPipelineStatus = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status\n}\n\nexport const selectPipelineIsCanceled = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.CANCELED\n}\n\nexport const selectPipelineIsStartedSuccess = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.START_SUCCESS\n}\n\nexport const selectPipelineNodeResultSuccessList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => {\n        return {\n          nodeId,\n          nodeResult,\n        }\n      })\n      .filter(isNodeResultSuccessAndNodeId)\n  } else {\n    return []\n  }\n}\n\n// selectPipelineNodeResultSuccessListの返り値の型を正しく認識させるためだけに作った\nfunction isNodeResultSuccessAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultSuccess\n} {\n  return isNodeResultSuccess(arg.nodeResult)\n}\n\nexport const selectPipelineNodeResultStatus =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].status\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultMessage =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].message\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultOutputKeyList =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return Object.keys(nodeResult.outputPaths)\n      }\n    }\n    return []\n  }\n\nconst selectPipelineNodeResultOutputPaths =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return nodeResult.outputPaths\n      }\n    }\n    throw new Error(`key error. nodeId:${nodeId}`)\n  }\n\nexport const selectPipelineNodeResultOutputFilePath =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].path\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n\nexport const selectPipelineNodeResultOutputFileDataType =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].type\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nconst selectSnakemake = (state: RootState) => state.snakemake\nexport const selectSnakemakeParams = (state: RootState) =>\n  selectSnakemake(state).params\n\nexport const selectSnakemakeParamsKeyList = (state: RootState) =>\n  Object.keys(selectSnakemakeParams(state))\n\nexport const selectSnakemakeParam = (paramKey: string) => (state: RootState) =>\n  selectSnakemakeParams(state)[paramKey]\n\nexport const selectSnakemakeParamsValue =\n  (path: string) => (state: RootState) => {\n    const params = selectSnakemakeParams(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('Param is null')\n    }\n  }\n","export const INPUT_NODE_SLICE_NAME = 'inputNode'\n\nexport const FILE_TYPE_SET = {\n  CSV: 'csv',\n  IMAGE: 'image',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type FILE_TYPE = typeof FILE_TYPE_SET[keyof typeof FILE_TYPE_SET]\n\nexport type InputNode = {\n  [nodeId: string]: InputNodeType\n}\n\nexport type InputNodeType = CsvInputNode | ImageInputNode | HDF5InputNode\n\ninterface InputNodeBaseType<\n  T extends FILE_TYPE,\n  P extends { [key: string]: unknown },\n> {\n  fileType: T\n  selectedFilePath?: string | string[]\n  param: P\n}\n\nexport type CsvInputParamType = {\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\n\nexport interface CsvInputNode\n  extends InputNodeBaseType<'csv', CsvInputParamType> {\n  selectedFilePath?: string\n}\n\nexport interface ImageInputNode extends InputNodeBaseType<'image', {}> {\n  selectedFilePath?: string[]\n}\n\nexport interface HDF5InputNode extends InputNodeBaseType<'hdf5', {}> {\n  selectedFilePath?: string\n  hdf5Path?: string\n}\n","import {\n  CsvInputNode,\n  ImageInputNode,\n  HDF5InputNode,\n  InputNodeType,\n  FILE_TYPE_SET,\n} from './InputNodeType'\n\nexport function isImageInputNode(\n  inputNode: InputNodeType,\n): inputNode is ImageInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.IMAGE\n}\n\nexport function isCsvInputNode(\n  inputNode: InputNodeType,\n): inputNode is CsvInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.CSV\n}\n\nexport function isHDF5InputNode(\n  inputNode: InputNodeType,\n): inputNode is HDF5InputNode {\n  return inputNode.fileType === FILE_TYPE_SET.HDF5\n}\n","import { RootState } from 'store/store'\nimport {\n  isHDF5InputNode,\n  isCsvInputNode,\n  isImageInputNode,\n} from './InputNodeUtils'\n\nexport const selectInputNode = (state: RootState) => state.inputNode\n\nexport const selectInputNodeById = (nodeId: string) => (state: RootState) =>\n  state.inputNode[nodeId]\n\nexport const selectInputNodeDefined = (nodeId: string) => (state: RootState) =>\n  Object.keys(state.inputNode).includes(nodeId)\n\nexport const selectInputNodeFileType = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).fileType\n\nexport const selectInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) =>\n    selectInputNodeById(nodeId)(state).selectedFilePath\n\nexport const selectCsvInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isCsvInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectImageInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isImageInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectHDF5InputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectFilePathIsUndefined = (state: RootState) =>\n  Object.keys(state.inputNode).length === 0 ||\n  Object.values(state.inputNode).filter((inputNode) => {\n    if (isHDF5InputNode(inputNode)) {\n      return inputNode.selectedFilePath == null || inputNode.hdf5Path == null\n    } else {\n      const filePath = inputNode.selectedFilePath\n      if (Array.isArray(filePath)) {\n        return filePath.length === 0\n      } else {\n        return filePath == null\n      }\n    }\n  }).length > 0\n\nexport const selectInputNodeParam = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).param\n\nconst selectCsvInputNodeParam = (nodeId: string) => (state: RootState) => {\n  const inputNode = selectInputNodeById(nodeId)(state)\n  if (isCsvInputNode(inputNode)) {\n    return inputNode.param\n  } else {\n    throw new Error(`The InputNode is not CsvInputNode. (nodeId: ${nodeId})`)\n  }\n}\n\nexport const selectCsvInputNodeParamSetHeader =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setHeader\n\nexport const selectCsvInputNodeParamSetIndex =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setIndex\n\nexport const selectCsvInputNodeParamTranspose =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).transpose\n\nexport const selectInputNodeHDF5Path =\n  (nodeId: string) => (state: RootState) => {\n    const item = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(item)) {\n      return item.hdf5Path\n    } else {\n      return undefined\n    }\n  }\n","import { Node } from 'react-flow-renderer'\n\nimport {\n  AlgorithmNodePostData,\n  EdgeDict,\n  InputNodePostData,\n  NodeDict,\n  RunPostData,\n} from 'api/run/Run'\n\nimport { RootState } from 'store/store'\n\nimport {\n  selectAlgorithmFunctionPath,\n  selectAlgorithmIsUpdated,\n  selectAlgorithmName,\n  selectAlgorithmParams,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectFlowEdges,\n  selectFlowNodes,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { isAlgorithmNodeData } from 'store/slice/FlowElement/FlowElementUtils'\nimport { selectNwbParams } from 'store/slice/NWB/NWBSelectors'\nimport { selectPipelineNodeResultStatus } from 'store/slice/Pipeline/PipelineSelectors'\nimport { NODE_RESULT_STATUS } from 'store/slice/Pipeline/PipelineType'\nimport { selectSnakemakeParams } from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { NODE_TYPE_SET } from 'store/slice/FlowElement/FlowElementType'\nimport {\n  selectInputNodeFileType,\n  selectInputNodeHDF5Path,\n  selectInputNodeParam,\n  selectInputNodeSelectedFilePath,\n} from 'store/slice/InputNode/InputNodeSelectors'\n\nexport const selectRunPostData = (state: RootState) => {\n  const nwbParam = selectNwbParams(state)\n  const snakemakeParam = selectSnakemakeParams(state)\n  const edgeDictForRun = selectEdgeDictForRun(state)\n  const nodeDictForRun = selectNodeDictForRun(state)\n  const forceRunList = selectForceRunList(state)\n  const runPostData: Omit<RunPostData, 'name'> = {\n    nwbParam,\n    snakemakeParam,\n    edgeDict: edgeDictForRun,\n    nodeDict: nodeDictForRun,\n    forceRunList,\n  }\n  return runPostData\n}\n\n/**\n * 前回の結果で、エラーまたはParamに変更があるnodeのリストを返す\n */\nconst selectForceRunList = (state: RootState) => {\n  const nodes = selectFlowNodes(state)\n  return nodes\n    .filter(isAlgorithmNodeData)\n    .filter((node) => {\n      const isUpdated = selectAlgorithmIsUpdated(node.id)(state)\n      const status = selectPipelineNodeResultStatus(node.id)(state)\n      return isUpdated || status === NODE_RESULT_STATUS.ERROR\n    })\n    .map((node) => ({\n      nodeId: node.id,\n      name: selectAlgorithmName(node.id)(state),\n    }))\n}\n\nconst selectNodeDictForRun = (state: RootState): NodeDict => {\n  const nodes = selectFlowNodes(state)\n  const nodeDict: NodeDict = {}\n  nodes.forEach((node) => {\n    if (isAlgorithmNodeData(node)) {\n      const param = selectAlgorithmParams(node.id)(state) ?? {}\n      const functionPath = selectAlgorithmFunctionPath(node.id)(state)\n      const algorithmNodePostData: Node<AlgorithmNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.ALGORITHM,\n          path: functionPath,\n          param,\n        },\n      }\n      nodeDict[node.id] = algorithmNodePostData\n    } else {\n      const filePath = selectInputNodeSelectedFilePath(node.id)(state)\n      const fileType = selectInputNodeFileType(node.id)(state)\n      const param = selectInputNodeParam(node.id)(state)\n      const hdf5Path = selectInputNodeHDF5Path(node.id)(state)\n      const inputNodePosyData: Node<InputNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.INPUT,\n          path: filePath ?? '',\n          param,\n          hdf5Path: hdf5Path,\n          fileType,\n        },\n      }\n      nodeDict[node.id] = inputNodePosyData\n    }\n  })\n  return nodeDict\n}\n\nconst selectEdgeDictForRun = (state: RootState) => {\n  const edgeDict: EdgeDict = {}\n  selectFlowEdges(state).forEach((edge) => {\n    edgeDict[edge.id] = edge\n  })\n  return edgeDict\n}\n","import axios from 'utils/axios'\nimport type { Edge, Node } from 'react-flow-renderer'\n\nimport { BASE_URL } from 'const/API'\nimport type {\n  AlgorithmNodeData,\n  InputNodeData,\n} from 'store/slice/FlowElement/FlowElementType'\nimport type { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport type { ParamMap } from 'utils/param/ParamType'\n\nexport type RunPostData = {\n  name: string\n  nodeDict: NodeDict\n  edgeDict: EdgeDict\n  nwbParam: ParamMap\n  snakemakeParam: ParamMap\n  forceRunList: { nodeId: string; name: string }[]\n}\n\nexport type NodeDict = {\n  [nodeId: string]: Node<NodePostDataType>\n}\n\nexport type EdgeDict = {\n  [nodeId: string]: Edge\n}\n\nexport type NodePostDataType = AlgorithmNodePostData | InputNodePostData\n\nexport interface InputNodePostData extends InputNodeData {\n  path: string | string[]\n  fileType: FILE_TYPE\n  param?: {\n    [key: string]: unknown\n  }\n  hdf5Path?: string\n}\n\nexport interface AlgorithmNodePostData extends AlgorithmNodeData {\n  path: string\n  param: ParamMap\n}\n\nexport async function runApi(\n  workspaceId: number,\n  data: RunPostData,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${workspaceId}`, data)\n  return response.data\n}\n\nexport async function runByUidApi(\n  workspaceId: number,\n  uid: string,\n  data: Omit<RunPostData, 'name'>,\n): Promise<string> {\n  const response = await axios.post(\n    `${BASE_URL}/run/${workspaceId}/${uid}`,\n    data,\n  )\n  return response.data\n}\n\nexport type RunResultDTO = {\n  [nodeId: string]: {\n    status: string\n    message: string\n    name: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type OutputPathsDTO = {\n  [outputKey: string]: {\n    path: string\n    type: string\n  }\n}\n\nexport async function runResult(data: {\n  workspaceId: number\n  uid: string\n  pendingNodeIdList: string[]\n}): Promise<RunResultDTO> {\n  const { workspaceId, uid, pendingNodeIdList } = data\n  const response = await axios.post(\n    `${BASE_URL}/run/result/${workspaceId}/${uid}`,\n    {\n      pendingNodeIdList,\n    },\n  )\n  return response.data\n}\n\nexport async function cancelResultApi(data: {\n  workspaceId: string\n  uid: string\n}): Promise<RunResultDTO> {\n  const { workspaceId, uid } = data\n  const response = await axios.post(`${BASE_URL}/run/cancel/${workspaceId}/${uid}`)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { ThunkApiConfig } from 'store/store'\nimport { PIPELINE_SLICE_NAME } from './PipelineType'\nimport {\n  runApi,\n  runByUidApi,\n  runResult,\n  RunResultDTO,\n  RunPostData,\n  cancelResultApi,\n} from 'api/run/Run'\nimport {\n  selectPipelineLatestUid,\n  selectRunResultPendingNodeIdList,\n} from './PipelineSelectors'\nimport { selectCurrentWorkspaceId } from '../Workspace/WorkspaceSelector'\n\nexport const run = createAsyncThunk<\n  string,\n  { runPostData: RunPostData },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/run`, async ({ runPostData }, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const responseData = await runApi(workspaceId, runPostData)\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist.')\n  }\n})\n\nexport const runByCurrentUid = createAsyncThunk<\n  string,\n  { runPostData: Omit<RunPostData, 'name'> },\n  ThunkApiConfig\n>(\n  `${PIPELINE_SLICE_NAME}/runByCurrentUid`,\n  async ({ runPostData }, thunkAPI) => {\n    const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n    const currentUid = selectPipelineLatestUid(thunkAPI.getState())\n    if (workspaceId && currentUid != null) {\n      try {\n        const responseData = await runByUidApi(\n          workspaceId,\n          currentUid,\n          runPostData,\n        )\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    } else {\n      return thunkAPI.rejectWithValue(\n        'workspaceId or currentUid dose not exist.',\n      )\n    }\n  },\n)\n\nexport const pollRunResult = createAsyncThunk<\n  RunResultDTO,\n  {\n    uid: string\n  },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/pollRunResult`, async ({ uid }, thunkAPI) => {\n  const pendingNodeIdList = selectRunResultPendingNodeIdList(\n    thunkAPI.getState(),\n  )\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const responseData = await runResult({\n        workspaceId,\n        uid,\n        pendingNodeIdList,\n      })\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist')\n  }\n})\n\nexport const cancelResult = createAsyncThunk<\n    RunResultDTO,\n    {\n      uid: string\n    },\n    ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/cancelResult`, async ({ uid }, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const responseData = await cancelResultApi({\n        workspaceId: String(workspaceId),\n        uid\n      })\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist')\n  }\n})\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\nimport { EdgeDict, NodeDict, OutputPathsDTO, RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport type ExperimentsDTO = {\n  [uid: string]: ExperimentDTO\n}\n\nexport type FunctionsDTO = {\n  [nodeId: string]: {\n    name: string\n    success: string\n    unique_id: string\n    hasNWB: boolean\n    message?: string\n    started_at?: string\n    finished_at?: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type ExperimentDTO = {\n  function: FunctionsDTO\n  name: string\n  success?: EXPERIMENTS_STATUS\n  started_at: string\n  finished_at?: string\n  workspace_id: number\n  unique_id: string\n  hasNWB: boolean\n  edgeDict: EdgeDict\n  nodeDict: NodeDict\n}\n\nexport async function getExperimentsApi(\n  workspaceId: number,\n): Promise<ExperimentsDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments/${workspaceId}`)\n  return response.data\n}\n\nexport async function deleteExperimentByUidApi(\n  workspaceId: number,\n  uid: string,\n): Promise<boolean> {\n  const response = await axios.delete(\n    `${BASE_URL}/experiments/${workspaceId}/${uid}`,\n  )\n  return response.data\n}\n\nexport async function deleteExperimentByListApi(\n  workspaceId: number,\n  uidList: Array<string>,\n): Promise<boolean> {\n  const response = await axios.post(\n    `${BASE_URL}/experiments/delete/${workspaceId}`,\n    {\n      uidList,\n    },\n  )\n  return response.data\n}\n\nexport async function importExperimentByUidApi(\n  workspaceId: number,\n  uid: string,\n): Promise<RunPostData> {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/import/${workspaceId}/${uid}`,\n  )\n  return response.data\n}\n\nexport async function downloadExperimentNwbApi(\n  workspaceId: number,\n  uid: string,\n  nodeId?: string,\n) {\n  const path =\n    nodeId != null\n      ? `${BASE_URL}/experiments/download/nwb/${workspaceId}/${uid}/${nodeId}`\n      : `${BASE_URL}/experiments/download/nwb/${workspaceId}/${uid}`\n  const response = await axios.get(path, {\n    responseType: 'blob',\n  })\n  return response.data\n}\n\nexport async function downloadExperimentConfigApi(\n  workspaceId: number,\n  uid: string,\n) {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/download/config/${workspaceId}/${uid}`,\n    {\n      responseType: 'blob',\n    },\n  )\n  return response.data\n}\n\nexport async function fetchExperimentApi(\n  workspace_id: number,\n): Promise<ExperimentDTO> {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/fetch/${workspace_id}`,\n  )\n  return response.data\n}\n\nexport async function renameExperiment(\n  workspaceId: number,\n  uid: string,\n  new_name: string,\n) {\n  const response = await axios.patch(\n    `${BASE_URL}/experiments/${workspaceId}/${uid}/rename`,\n    {\n      new_name,\n    },\n  )\n  return response.data\n}\n","export const EXPERIMENTS_SLICE_NAME = 'experiments'\n\nexport type Experiments =\n  | {\n      status: 'fulfilled'\n      experimentList: ExperimentListType\n    }\n  | {\n      status: 'uninitialized'\n    }\n  | {\n      status: 'pending'\n    }\n  | {\n      status: 'error'\n      message?: string\n    }\n\nexport type ExperimentListType = {\n  [uid: string]: ExperimentType\n}\n\nexport type ExperimentType = {\n  uid: string\n  functions: {\n    [nodeId: string]: ExperimentFunction\n  }\n  status?: EXPERIMENTS_STATUS\n  name: string\n  timestamp: string\n  hasNWB: boolean\n}\n\nexport type ExperimentFunction = {\n  name: string\n  nodeId: string\n  status: EXPERIMENTS_STATUS\n  hasNWB: boolean\n  message?: string\n}\n\nexport type EXPERIMENTS_STATUS = 'success' | 'error' | 'running'\n\nexport interface Experiment {\n  uid: string\n  name: string\n  timestamp: string\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  ExperimentDTO,\n  ExperimentsDTO,\n  getExperimentsApi,\n  deleteExperimentByUidApi,\n  importExperimentByUidApi,\n  deleteExperimentByListApi,\n  fetchExperimentApi,\n} from 'api/experiments/Experiments'\nimport { RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_SLICE_NAME } from './ExperimentsType'\nimport { selectCurrentWorkspaceId } from '../Workspace/WorkspaceSelector'\nimport { ThunkApiConfig } from 'store/store'\n\nexport const getExperiments = createAsyncThunk<\n  ExperimentsDTO,\n  undefined,\n  ThunkApiConfig\n>(`${EXPERIMENTS_SLICE_NAME}/getExperiments`, async (_, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const response = await getExperimentsApi(workspaceId)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist.')\n  }\n})\n\nexport const deleteExperimentByUid = createAsyncThunk<\n  boolean,\n  string,\n  ThunkApiConfig\n>(`${EXPERIMENTS_SLICE_NAME}/deleteExperimentByUid`, async (uid, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const response = await deleteExperimentByUidApi(workspaceId, uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist.')\n  }\n})\n\nexport const deleteExperimentByList = createAsyncThunk<\n  boolean,\n  string[],\n  ThunkApiConfig\n>(`${EXPERIMENTS_SLICE_NAME}/deleteExperimentByList`, async (uid, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const response = await deleteExperimentByListApi(workspaceId, uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist.')\n  }\n})\n\nexport const importExperimentByUid = createAsyncThunk<\n  RunPostData,\n  { workspaceId: number; uid: string }\n>(\n  `${EXPERIMENTS_SLICE_NAME}/importExperimentByUid`,\n  async ({ workspaceId, uid }, thunkAPI) => {\n    try {\n      const response = await importExperimentByUidApi(workspaceId, uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const fetchExperiment = createAsyncThunk<ExperimentDTO, number>(\n  `${EXPERIMENTS_SLICE_NAME}/fetchExperiment`,\n  async (workspaceId, thunkAPI) => {\n    try {\n      const response = await fetchExperimentApi(workspaceId)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { PayloadAction, createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { WORKSPACE_SLICE_NAME, Workspace } from './WorkspaceType'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport {\n  delWorkspace,\n  getListUserShareWorkSpaces,\n  getWorkspace,\n  getWorkspaceList,\n  postListUserShareWorkspaces,\n  postWorkspace,\n  putWorkspace,\n} from './WorkspacesActions'\n\nconst initialState: Workspace = {\n  currentWorkspace: {\n    selectedTab: 0,\n  },\n  workspace: {\n    items: [],\n    total: 0,\n    limit: 50,\n    offset: 0,\n  },\n  loading: false,\n  listUserShare: undefined,\n}\n\nexport const workspaceSlice = createSlice({\n  name: WORKSPACE_SLICE_NAME,\n  initialState,\n  reducers: {\n    setActiveTab: (state, action: PayloadAction<number>) => {\n      state.currentWorkspace.selectedTab = action.payload\n    },\n    setCurrentWorkspace: (state, action: PayloadAction<number>) => {\n      state.currentWorkspace.workspaceId = action.payload\n    },\n    clearCurrentWorkspace: (state) => {\n      state.currentWorkspace = {\n        selectedTab: 0,\n      }\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.currentWorkspace.workspaceId = action.meta.arg.workspaceId\n      })\n      .addCase(getWorkspace.fulfilled, (state, action) => {\n        state.currentWorkspace.workspaceId = action.payload.id\n        state.currentWorkspace.ownerId = action.payload.user.id\n        state.loading = false\n      })\n      .addCase(getWorkspaceList.fulfilled, (state, action) => {\n        state.workspace = action.payload\n        state.loading = false\n      })\n      .addCase(getListUserShareWorkSpaces.fulfilled, (state, action) => {\n        state.listUserShare = action.payload\n        state.loading = false\n      })\n      .addMatcher(\n        isAnyOf(\n          getWorkspace.rejected,\n          getWorkspaceList.rejected,\n          postWorkspace.fulfilled,\n          postWorkspace.rejected,\n          putWorkspace.fulfilled,\n          putWorkspace.rejected,\n          delWorkspace.fulfilled,\n          delWorkspace.rejected,\n          getListUserShareWorkSpaces.rejected,\n          postListUserShareWorkspaces.rejected,\n        ),\n        (state) => {\n          state.loading = false\n        },\n      )\n      .addMatcher(\n        isAnyOf(\n          getWorkspace.pending,\n          getWorkspaceList.pending,\n          postWorkspace.pending,\n          putWorkspace.pending,\n          delWorkspace.pending,\n          getListUserShareWorkSpaces.pending,\n          postListUserShareWorkspaces.pending,\n        ),\n        (state) => {\n          state.loading = true\n        },\n      )\n  },\n})\n\nexport const { setCurrentWorkspace, clearCurrentWorkspace, setActiveTab } =\n  workspaceSlice.actions\nexport default workspaceSlice.reducer\n","import type {\n  ExperimentDTO,\n  ExperimentsDTO,\n  FunctionsDTO,\n} from 'api/experiments/Experiments'\nimport { RunResultDTO } from 'api/run/Run'\nimport type {\n  ExperimentListType,\n  ExperimentType,\n  ExperimentFunction,\n  EXPERIMENTS_STATUS,\n} from './ExperimentsType'\n\nexport function convertToExperimentListType(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n\nexport function convertToExperimentType(dto: ExperimentDTO): ExperimentType {\n  const functions: { [nodeId: string]: ExperimentFunction } = {}\n  Object.entries(dto.function).forEach(([_, value]) => {\n    const status = convertToExperimentStatus(value.success)\n    functions[value.unique_id] = {\n      name: value.name,\n      nodeId: value.unique_id,\n      status: status,\n      hasNWB: value.hasNWB,\n    }\n    status === 'error' &&\n      value.message &&\n      (functions[value.unique_id].message = value.message)\n  })\n  return {\n    uid: dto.unique_id,\n    timestamp: dto.started_at,\n    status: dto.success,\n    name: dto.name,\n    hasNWB: dto.hasNWB,\n    functions,\n  }\n}\n\nfunction convertToExperimentStatus(dto: string): EXPERIMENTS_STATUS {\n  switch (dto) {\n    case 'running':\n      return 'running'\n    case 'success':\n      return 'success'\n    case 'error':\n      return 'error'\n    default:\n      throw new Error('failed to convert to EXPERIMENTS_STATUS')\n  }\n}\n\nexport function convertFunctionsToRunResultDTO(\n  dto: FunctionsDTO,\n): RunResultDTO {\n  const result: RunResultDTO = {}\n  Object.entries(dto).forEach(([nodeId, value]) => {\n    result[nodeId] = {\n      status: value.success,\n      message: value.message ?? '',\n      name: value.name,\n      outputPaths: value.outputPaths,\n    }\n  })\n  return result\n}\n\nexport function convertToFlowChartList(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { EXPERIMENTS_SLICE_NAME, Experiments } from './ExperimentsType'\nimport {\n  getExperiments,\n  deleteExperimentByUid,\n  deleteExperimentByList,\n  fetchExperiment,\n} from './ExperimentsActions'\nimport {\n  convertToExperimentListType,\n  convertToExperimentType,\n} from './ExperimentsUtils'\nimport {\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from '../Pipeline/PipelineActions'\n\nexport const initialState: Experiments = {\n  status: 'uninitialized',\n}\n\nexport const experimentsSlice = createSlice({\n  name: EXPERIMENTS_SLICE_NAME,\n  initialState: initialState as Experiments,\n  reducers: {\n    clearExperiments: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getExperiments.pending, () => {\n        return {\n          status: 'pending',\n        }\n      })\n      .addCase(getExperiments.fulfilled, (state, action) => {\n        const experimentList = convertToExperimentListType(action.payload)\n        return {\n          status: 'fulfilled',\n          experimentList,\n        }\n      })\n      .addCase(getExperiments.rejected, (state, action) => {\n        return {\n          status: 'error',\n          message: action.error.message,\n        }\n      })\n      .addCase(deleteExperimentByUid.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          delete state.experimentList[action.meta.arg]\n        }\n      })\n      .addCase(deleteExperimentByList.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          action.meta.arg.map((v) => delete state.experimentList[v])\n        }\n      })\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          const uid = action.meta.arg.uid\n          const target = state.experimentList[uid]\n          Object.entries(action.payload).forEach(([nodeId, value]) => {\n            if (value.status === 'success') {\n              target.functions[nodeId].status = 'success'\n            } else if (value.status === 'error') {\n              target.functions[nodeId].status = 'error'\n            }\n          })\n        }\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          state.experimentList[action.payload.unique_id] =\n            convertToExperimentType(action.payload)\n        }\n      })\n      .addMatcher(isAnyOf(run.fulfilled, runByCurrentUid.fulfilled), () => {\n        return {\n          status: 'uninitialized',\n        }\n      })\n  },\n})\n\nexport const { clearExperiments } = experimentsSlice.actions\nexport default experimentsSlice.reducer\n","import { RootState } from 'store/store'\nimport { EXPERIMENTS_STATUS } from './ExperimentsType'\n\nconst selectExperiments = (state: RootState) => state.experiments\n\nexport const selectExperimentsStatusIsUninitialized = (state: RootState) =>\n  selectExperiments(state).status === 'uninitialized'\n\nexport const selectExperimentsStatusIsPending = (state: RootState) =>\n  selectExperiments(state).status === 'pending'\n\nexport const selectExperimentsStatusIsFulfilled = (state: RootState) =>\n  selectExperiments(state).status === 'fulfilled'\n\nexport const selectExperimentsStatusIsError = (state: RootState) =>\n  selectExperiments(state).status === 'error'\n\nexport const selectExperimentsErrorMessage = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'error') {\n    return experiments.message\n  } else {\n    throw new Error('experiments status is not error')\n  }\n}\n\nexport const selectExperimentList = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'fulfilled') {\n    return experiments.experimentList\n  } else {\n    throw new Error('experiments status is not fulfilled')\n  }\n}\n\nexport const selectExperimentUidList = (state: RootState) =>\n  Object.keys(selectExperimentList(state))\n\nexport const selectExperiment = (uid: string) => (state: RootState) =>\n  selectExperimentList(state)[uid]\n\nexport const selectExperimentTimeStamp = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).timestamp\n\nexport const selectExperimentName = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).name\n\nexport const selectExperimentHasNWB = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).hasNWB\n\nexport const selectExperimentStatus =\n  (uid: string) =>\n  (state: RootState): EXPERIMENTS_STATUS => {\n    const experiment = selectExperimentList(state)[uid]\n    if (experiment.status) {\n      return experiment.status\n    }\n\n    const functions = selectExperimentList(state)[uid].functions\n    const statusList = Object.values(functions).map((f) => f.status)\n    if (statusList.findIndex((status) => status === 'error') >= 0) {\n      return 'error'\n    } else if (statusList.findIndex((status) => status === 'running') >= 0) {\n      return 'running'\n    } else {\n      return 'success'\n    }\n  }\n\nexport const selectExperimentCheckList =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionNodeIdList =\n  (uid: string) => (state: RootState) =>\n    Object.keys(selectExperimentList(state)[uid].functions)\n\nexport const selectExperimentFunction =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentList(state)[uid].functions[nodeId]\n\nexport const selectExperimentFunctionName =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).name\n\nexport const selectExperimentFunctionStatus =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionHasNWB =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).hasNWB\n\nexport const selectExperimentFunctionMessage =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).message\n","import React from 'react'\nimport DoneIcon from '@mui/icons-material/Done'\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline'\nimport HorizontalRuleIcon from '@mui/icons-material/HorizontalRule'\n\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport const ExperimentStatusIcon = React.memo<{ status: EXPERIMENTS_STATUS }>(\n  ({ status }) => {\n    switch (status) {\n      case 'error':\n        return <ErrorOutlineIcon color=\"error\" />\n      case 'success':\n        return <DoneIcon color=\"success\" />\n      case 'running':\n        return <HorizontalRuleIcon color=\"inherit\" />\n    }\n  },\n)\n","export function arrayEqualityFn<T>(a: T[], b: T[]) {\n  return a === b || (a.length === b.length && a.every((v, i) => v === b[i]))\n}\n\nexport function twoDimarrayEqualityFn<T>(a: T[][], b: T[][]) {\n  return (\n    a === b ||\n    (a.length === b.length && a.every((v, i) => arrayEqualityFn(v, b[i])))\n  )\n}\n","import React, { useState, useRef } from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport GetAppIcon from '@mui/icons-material/GetApp'\nimport { useSelector } from 'react-redux'\nimport {\n  downloadExperimentConfigApi,\n  downloadExperimentNwbApi,\n} from 'api/experiments/Experiments'\n\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const NWBDownloadButton = React.memo<{\n  name: string\n  nodeId?: string\n  hasNWB: boolean\n}>(({ name, nodeId, hasNWB }) => {\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n\n  const onClick = async () => {\n    if(!workspaceId) return;\n    try {\n      const responseData = await downloadExperimentNwbApi(workspaceId!, uid, nodeId)\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      throw new Error('Download Error')\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick} color=\"primary\" disabled={!hasNWB}>\n        <GetAppIcon />\n      </IconButton>\n      <a href={url} download={`${name}.nwb`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n\nexport const ConfigDownloadButton = React.memo(() => {\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n\n  const onClick = async () => {\n    try {\n      const responseData = await downloadExperimentConfigApi(workspaceId!, uid)\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      throw new Error('Download Error')\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick}>\n        <GetAppIcon color=\"primary\" />\n      </IconButton>\n      <a href={url} download={`config.yaml`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport Collapse from '@mui/material/Collapse'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Typography from '@mui/material/Typography'\n\nimport { ExperimentUidContext } from './ExperimentTable'\nimport {\n  selectExperimentFunctionHasNWB,\n  selectExperimentFunctionMessage,\n  selectExperimentFunctionName,\n  selectExperimentFunctionNodeIdList,\n  selectExperimentFunctionStatus,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { NWBDownloadButton } from './Button/DownloadButton'\nimport { IconButton, Popover } from '@mui/material'\n\nexport const CollapsibleTable = React.memo<{\n  open: boolean\n}>(({ open }) => {\n  return (\n    <TableRow>\n      <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={10}>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Box margin={1}>\n            <Typography variant=\"h6\" gutterBottom component=\"div\">\n              Details\n            </Typography>\n            <Table size=\"small\" aria-label=\"purchases\">\n              <Head />\n              <Body />\n            </Table>\n          </Box>\n        </Collapse>\n      </TableCell>\n    </TableRow>\n  )\n})\n\nconst Head = React.memo(() => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>Function</TableCell>\n        <TableCell>nodeID</TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>NWB</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst Body = React.memo(() => {\n  const uid = React.useContext(ExperimentUidContext)\n  const nodeIdList = useSelector(\n    selectExperimentFunctionNodeIdList(uid),\n    arrayEqualityFn,\n  )\n  return (\n    <TableBody>\n      {nodeIdList.map((nodeId) => (\n        <TableRowOfFunction nodeId={nodeId} />\n      ))}\n    </TableBody>\n  )\n})\n\nconst TableRowOfFunction = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const name = useSelector(selectExperimentFunctionName(uid, nodeId))\n  const status = useSelector(selectExperimentFunctionStatus(uid, nodeId))\n  const hasNWB = useSelector(selectExperimentFunctionHasNWB(uid, nodeId))\n  const message = useSelector(selectExperimentFunctionMessage(uid, nodeId))\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null)\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n  const open = Boolean(anchorEl)\n\n  return (\n    <TableRow key={nodeId}>\n      <TableCell component=\"th\" scope=\"row\">\n        {name}\n      </TableCell>\n      <TableCell>{nodeId}</TableCell>\n      <TableCell>\n        <IconButton onClick={handleClick} disabled={!message}>\n          <ExperimentStatusIcon status={status} />\n        </IconButton>\n        <Popover\n          id=\"function-error-message\"\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n        >\n          <Typography sx={{ p: 1, color: 'crimson', fontSize: 14 }}>\n            {message}\n          </Typography>\n        </Popover>\n      </TableCell>\n      <TableCell>\n        <NWBDownloadButton name={name} nodeId={nodeId} hasNWB={hasNWB} />\n      </TableCell>\n    </TableRow>\n  )\n})\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport {cancelResult, pollRunResult, run, runByCurrentUid} from './PipelineActions'\nimport {\n  Pipeline,\n  PIPELINE_SLICE_NAME,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n  RUN_STATUS,\n} from './PipelineType'\n\nimport {\n  getInitialRunResult,\n  convertToRunResult,\n  isNodeResultPending,\n} from './PipelineUtils'\nimport { convertFunctionsToRunResultDTO } from '../Experiments/ExperimentsUtils'\n\nconst initialState: Pipeline = {\n  run: {\n    status: RUN_STATUS.START_UNINITIALIZED,\n  },\n  runBtn: RUN_BTN_OPTIONS.RUN_NEW,\n}\n\nexport const pipelineSlice = createSlice({\n  name: PIPELINE_SLICE_NAME,\n  initialState,\n  reducers: {\n    setRunBtnOption: (\n      state,\n      action: PayloadAction<{\n        runBtnOption: RUN_BTN_TYPE\n      }>,\n    ) => {\n      state.runBtn = action.payload.runBtnOption\n    },\n    clearCurrentPipeline: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.run.status === RUN_STATUS.START_SUCCESS) {\n          state.run.runResult = {\n            ...state.run.runResult, // pendingのNodeResultはそのままでsuccessもしくはerrorのみ上書き\n            ...convertToRunResult(action.payload),\n          }\n          const runResultPendingList = Object.values(\n            state.run.runResult,\n          ).filter(isNodeResultPending)\n          if (runResultPendingList.length === 0) {\n            // 終了\n            state.run.status = RUN_STATUS.FINISHED\n          }\n        }\n      })\n      .addCase(pollRunResult.rejected, (state, action) => {\n        state.run.status = RUN_STATUS.ABORTED\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.meta.arg.uid,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addCase(fetchExperiment.rejected, () => initialState)\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.payload.unique_id,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          uid: action.payload.unique_id,\n          status: RUN_STATUS.START_SUCCESS,\n          runResult: {\n            ...convertToRunResult(\n              convertFunctionsToRunResultDTO(action.payload.function),\n            ),\n          },\n          runPostData: {\n            name: action.payload.name,\n            nodeDict: action.payload.nodeDict,\n            edgeDict: action.payload.edgeDict,\n            snakemakeParam: {},\n            nwbParam: {},\n            forceRunList: [],\n          },\n        }\n\n        const runResultPendingList = Object.values(state.run.runResult).filter(\n          isNodeResultPending,\n        )\n        if (runResultPendingList.length === 0) {\n          state.run.status = RUN_STATUS.FINISHED\n        }\n      })\n      .addCase(cancelResult.fulfilled, (state, action) => {\n        state.run.status = RUN_STATUS.CANCELED\n      })\n      .addMatcher(\n        isAnyOf(run.pending, runByCurrentUid.pending),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_PENDING,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          const uid = action.payload\n          state.run = {\n            uid,\n            status: RUN_STATUS.START_SUCCESS,\n            runResult: getInitialRunResult({ name: '', ...runPostData }),\n            runPostData: { name: '', ...runPostData },\n          }\n          state.currentPipeline = {\n            uid: action.payload,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.rejected, runByCurrentUid.rejected),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_ERROR,\n          }\n        },\n      )\n  },\n})\n\nexport const { setRunBtnOption, clearCurrentPipeline } =\n  pipelineSlice.actions\n\nexport default pipelineSlice.reducer\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport IconButton from '@mui/material/IconButton'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline'\nimport { selectExperimentName } from 'store/slice/Experiments/ExperimentsSelectors'\nimport { deleteExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { clearCurrentPipeline } from 'store/slice/Pipeline/PipelineSlice'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineIsStartedSuccess,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\n\nexport const DeleteButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const currentPipelineUid = useSelector(selectPipelineLatestUid)\n  const uid = React.useContext(ExperimentUidContext)\n  const isRunning = useSelector((state: RootState) => {\n    const currentUid = selectPipelineLatestUid(state)\n    const isPending = selectPipelineIsStartedSuccess(state)\n    return uid === currentUid && isPending\n  })\n  const name = useSelector(selectExperimentName(uid))\n  const [open, setOpen] = React.useState(false)\n\n  const onClickOpen = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(deleteExperimentByUid(uid))\n    uid === currentPipelineUid && dispatch(clearCurrentPipeline())\n  }\n  return (\n    <>\n      <IconButton onClick={onClickOpen} disabled={isRunning} color=\"error\">\n        <DeleteOutlineIcon />\n      </IconButton>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete {name}?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type TimeSeriesData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getTimeSeriesInitDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/inittimedata/${path}`)\n  return response.data\n}\n\nexport async function getTimeSeriesDataByIdApi(\n  path: string,\n  index: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/timedata/${path}`, {\n    params: {\n      index: index,\n    },\n  })\n  return response.data\n}\n\nexport async function getTimeSeriesAllDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: number[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/alltimedata/${path}`)\n  return response.data\n}\n\nexport type HeatMapData = number[][]\n\nexport async function getHeatMapDataApi(\n  path: string,\n): Promise<{ data: HeatMapData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`)\n  return response.data\n}\n\nexport type ImageData = number[][][]\n\nexport async function getImageDataApi(\n  path: string,\n  params: {\n    workspaceId: number\n    startIndex?: number\n    endIndex?: number\n  },\n): Promise<{ data: ImageData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n    params: {\n      workspace_id: params.workspaceId,\n      start_index: params.startIndex,\n      end_index: params.endIndex,\n    },\n  })\n  return response.data\n}\n\nexport type CsvData = number[][]\n\nexport async function getCsvDataApi(\n  path: string,\n  params: { workspaceId: number },\n): Promise<{ data: CsvData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/csv/${path}`, {\n    params: { workspace_id: params.workspaceId },\n  })\n\n  return response.data\n}\n\nexport type RoiData = number[][][]\n\nexport async function getRoiDataApi(\n  path: string,\n  params: { workspaceId: number },\n): Promise<{ data: RoiData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n    params: { workspace_id: params.workspaceId },\n  })\n  return response.data\n}\n\nexport type ScatterData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getScatterDataApi(\n  path: string,\n): Promise<{ data: ScatterData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type BarData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getBarDataApi(\n  path: string,\n): Promise<{ data: BarData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type HTMLData = string\n\nexport async function getHTMLDataApi(\n  path: string,\n): Promise<{ data: HTMLData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/html/${path}`, {})\n  return response.data\n}\n\nexport async function addRoiApi(\n  path: string,\n  data: { posx: number; posy: number; sizex: number; sizey: number },\n): Promise<{ data: HTMLData }> {\n  const response = await axios.post(\n    `${BASE_URL}/outputs/image/${path}/add_roi`,\n    data,\n  )\n  return response.data\n}\n\nexport async function mergeRoiApi(\n  path: string,\n  data: { ids: number[] },\n): Promise<{ data: HTMLData }> {\n  const response = await axios.post(\n    `${BASE_URL}/outputs/image/${path}/merge_roi`,\n    data,\n  )\n  return response.data\n}\n\nexport async function deleteRoiApi(\n  path: string,\n  data: { ids: number[] },\n): Promise<{ data: HTMLData }> {\n  const response = await axios.post(\n    `${BASE_URL}/outputs/image/${path}/delete_roi`,\n    data,\n  )\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  TimeSeriesData,\n  CsvData,\n  RoiData,\n  ScatterData,\n  BarData,\n  HTMLData,\n  ImageData,\n  HeatMapData,\n  getTimeSeriesInitDataApi,\n  getTimeSeriesDataByIdApi,\n  getTimeSeriesAllDataApi,\n  getHeatMapDataApi,\n  getImageDataApi,\n  getCsvDataApi,\n  getRoiDataApi,\n  getScatterDataApi,\n  getBarDataApi,\n  getHTMLDataApi,\n} from 'api/outputs/Outputs'\nimport { DISPLAY_DATA_SLICE_NAME } from './DisplayDataType'\n\nexport const getTimeSeriesInitData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; itemId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesInitData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesInitDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesDataById = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; index: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesDataById`,\n  async ({ path, index }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesDataByIdApi(path, index)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesAllData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesAllData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesAllDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHeatMapData = createAsyncThunk<\n  { data: HeatMapData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHeatMapData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHeatMapDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getImageData = createAsyncThunk<\n  { data: ImageData },\n  { path: string; workspaceId: number; startIndex?: number; endIndex?: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getImageData`,\n  async ({ path, startIndex, endIndex, workspaceId }, thunkAPI) => {\n    try {\n      const response = await getImageDataApi(path, {\n        workspaceId,\n        startIndex,\n        endIndex,\n      })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getCsvData = createAsyncThunk<\n  {\n    data: CsvData\n  },\n  { path: string; workspaceId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getCsvData`,\n  async ({ path, workspaceId }, thunkAPI) => {\n    try {\n      const response = await getCsvDataApi(path, { workspaceId })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getRoiData = createAsyncThunk<\n  { data: RoiData },\n  { path: string; workspaceId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getRoiData`,\n  async ({ path, workspaceId }, thunkAPI) => {\n    try {\n      const response = await getRoiDataApi(path, { workspaceId })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getScatterData = createAsyncThunk<\n  { data: ScatterData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getScatterData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getScatterDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getBarData = createAsyncThunk<\n  { data: BarData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getBarData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getBarDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getHTMLData = createAsyncThunk<\n  { data: HTMLData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHTMLData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHTMLDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import { RootState } from 'store/store'\n\nconst selectDisplayData = (state: RootState) => state.displayData\n\nexport const selectTimeSeriesData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].data\n\nexport const selectTimeSeriesXrange =\n  (filePath: string) => (state: RootState) =>\n    selectDisplayData(state).timeSeries[filePath].xrange\n\nexport const selectTimeSeriesStd = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].std\n\nexport const selectTimeSeriesDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).timeSeries).includes(filePath)\n\nexport const selectTimeSeriesDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].pending\n\nexport const selectTimeSeriesDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].fulfilled\n\nexport const selectTimeSeriesDataError =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).timeSeries[filePath].error\n      : null\n\nexport const selectHeatMapData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].data\n\nexport const selectHeatMapColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].columns\n\nexport const selectHeatMapIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].index\n\nexport const selectHeatMapDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).heatMap).includes(filePath)\n\nexport const selectHeatMapDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].pending\n\nexport const selectHeatMapDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].fulfilled\n\nexport const selectHeatMapDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).heatMap[filePath].error\n      : null\n\nexport const selectImageData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).image[filePath]\n\nexport const selectImageDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).image).includes(filePath)\n\nexport const selectImageDataError = (filePath: string) => (state: RootState) =>\n  selectImageDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).image[filePath].error\n    : null\n\nexport const selectImageDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].pending\n\nexport const selectImageDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].fulfilled\n\nexport const selectImageDataMaxSize =\n  (filePath: string) => (state: RootState) => {\n    if (!selectImageDataIsPending(filePath)(state)) {\n      return selectImageData(filePath)(state).data.length - 1\n    } else {\n      return 0\n    }\n  }\n\nexport const selectActiveImageData =\n  (filePath: string, activeIndex: number) => (state: RootState) => {\n    return selectImageData(filePath)(state).data[activeIndex]\n  }\n\nexport const selectCsvData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).csv[filePath].data\n\nexport const selectCsvDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).csv).includes(filePath)\n\nexport const selectCsvDataError = (filePath: string) => (state: RootState) =>\n  selectCsvDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).csv[filePath].error\n    : null\n\nexport const selectCsvDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].pending\n\nexport const selectCsvDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].fulfilled\n\nexport const selectRoiData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).roi[filePath]?.data[0] ?? []\n\nexport const selectRoiDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).roi).includes(filePath)\n\nexport const selectRoiDataError = (filePath: string) => (state: RootState) =>\n  selectRoiDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).roi[filePath].error\n    : null\n\nexport const selectRoiDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].pending\n\nexport const selectRoiDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].fulfilled\n\nexport const selectRoiUniqueList = (filePath: string) => (state: RootState) => {\n  if (selectRoiDataIsFulfilled(filePath)(state)) {\n    return selectDisplayData(state).roi[filePath].roiUniqueList\n  }\n  return null\n}\n\nexport const selectScatterData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).scatter[filePath]?.data ?? []\n\nexport const selectScatterDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).scatter).includes(filePath)\n\nexport const selectScatterDataError =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).scatter[filePath].error\n      : null\n\nexport const selectScatterDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].pending\n\nexport const selectScatterDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].fulfilled\n\nexport const selectBarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.data ?? []\n\nexport const selectBarIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.index ?? []\n\nexport const selectBarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).bar).includes(filePath)\n\nexport const selectBarDataError = (filePath: string) => (state: RootState) =>\n  selectBarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).bar[filePath].error\n    : null\n\nexport const selectBarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].pending\n\nexport const selectBarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].fulfilled\n\nexport const selectHTMLData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).html[filePath]?.data ?? ''\n\nexport const selectHTMLDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).html).includes(filePath)\n\nexport const selectHTMLDataError = (filePath: string) => (state: RootState) =>\n  selectHTMLDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).html[filePath].error\n    : null\n\nexport const selectHTMLDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].pending\n\nexport const selectHTMLDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].fulfilled\n","import { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\n\nexport const VISUALIZE_ITEM_SLICE_NAME = 'visualaizeItem'\n\nexport type VisualaizeItem = {\n  selectedItemId: number | null\n  items: {\n    [itemId: number | string]: VisualaizeItemType\n  }\n  layout: ItemLayout\n}\n\nexport type ItemLayout = number[][] // itemIdをrow,columnで並べる\n\nexport type VisualaizeItemType = DisplayDataItem\n\nexport interface ItemBaseType<T extends VISUALIZE_ITEM_TYPE> {\n  itemType: T\n  width: number\n  height: number\n}\n\nexport type ColorType = {\n  rgb: string\n  offset: string\n}\n\nexport const VISUALIZE_ITEM_TYPE_SET = {\n  DISPLAY_DATA: 'displayData',\n} as const\n\nexport type VISUALIZE_ITEM_TYPE =\n  typeof VISUALIZE_ITEM_TYPE_SET[keyof typeof VISUALIZE_ITEM_TYPE_SET]\n\nexport type DisplayDataItem =\n  | ImageItem\n  | TimeSeriesItem\n  | HeatMapItem\n  | CsvItem\n  | RoiItem\n  | ScatterItem\n  | BarItem\n  | HDF5Item\n  | HTMLItem\n  | FluoItem\n  | BehaviorItem\n\nexport interface DisplayDataItemBaseType extends ItemBaseType<'displayData'> {\n  filePath: string | null\n  nodeId: string | null\n  dataType: DATA_TYPE | null\n  isWorkflowDialog: boolean\n  saveFileName: string\n  saveFormat: string\n}\n\nexport interface ImageItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.IMAGE\n  activeIndex: number\n  startIndex: number\n  endIndex: number\n  showticklabels: boolean\n  zsmooth: string | boolean\n  showline: boolean\n  showgrid: boolean\n  showscale: boolean\n  colors: ColorType[]\n  alpha: number\n  roiItem: RoiItem | null\n  roiAlpha: number\n  duration: number\n  clickedDataId?: string\n}\n\nexport interface TimeSeriesItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.TIME_SERIES\n  offset: boolean\n  span: number\n  showgrid: boolean\n  showline: boolean\n  showticklabels: boolean\n  zeroline: boolean\n  xrange: {\n    left: number | undefined\n    right: number | undefined\n  }\n  maxIndex: number\n  refImageItemId: number | null\n  drawOrderList: string[]\n}\n\nexport interface HeatMapItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HEAT_MAP\n  showscale: boolean\n  colors: ColorType[]\n}\nexport interface CsvItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.CSV\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\nexport interface RoiItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.ROI\n  outputKey?: string\n  // colors: ColorType[]\n}\n\nexport interface ScatterItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.SCATTER\n  xIndex: string\n  yIndex: string\n}\n\nexport interface BarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BAR\n  index: string\n}\n\nexport interface HDF5Item extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HDF5\n}\n\nexport interface HTMLItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HTML\n}\n\nexport interface FluoItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.FLUO\n}\n\nexport interface BehaviorItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BEHAVIOR\n}\n","import { DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  VisualaizeItemType,\n  DisplayDataItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  ImageItem,\n  TimeSeriesItem,\n  HeatMapItem,\n  RoiItem,\n  ScatterItem,\n  CsvItem,\n  BarItem,\n} from './VisualizeItemType'\n\nexport function isDisplayDataItem(\n  item: VisualaizeItemType,\n): item is DisplayDataItem {\n  return item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA\n}\n\nexport function isImageItem(item: VisualaizeItemType): item is ImageItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.IMAGE\n  )\n}\n\nexport function isTimeSeriesItem(\n  item: VisualaizeItemType,\n): item is TimeSeriesItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.TIME_SERIES\n  )\n}\n\nexport function isCsvItem(item: VisualaizeItemType): item is CsvItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.CSV\n  )\n}\n\nexport function isHeatMapItem(item: VisualaizeItemType): item is HeatMapItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HEAT_MAP\n  )\n}\n\nexport function isRoiItem(item: VisualaizeItemType): item is RoiItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.ROI\n  )\n}\n\nexport function isScatterItem(item: VisualaizeItemType): item is ScatterItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.SCATTER\n  )\n}\n\nexport function isBarItem(item: VisualaizeItemType): item is BarItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.BAR\n  )\n}\n","import { RootState } from 'store/store'\nimport {\n  selectRoiData,\n  selectRoiUniqueList,\n  selectTimeSeriesData,\n  selectTimeSeriesDataIsInitialized,\n} from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport {\n  isDisplayDataItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isHeatMapItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const selectSelectedVisualizeItemId = (state: RootState) =>\n  state.visualaizeItem.selectedItemId\n\nexport const selectVisualizeImageItemIdList = (state: RootState) =>\n  Object.keys(state.visualaizeItem.items)\n    .map(Number)\n    .filter((itemId) => {\n      const item = selectVisualizeItemById(itemId)(state)\n      return isImageItem(item) && !item.isWorkflowDialog\n    })\n\nexport const selectVisualizeItems = (state: RootState) =>\n  state.visualaizeItem.items\n\nexport const selectVisualizeItemById = (itemId: number) => (state: RootState) =>\n  state.visualaizeItem.items[itemId]\n\nexport const selectVisualizeItemLayout = (state: RootState) =>\n  state.visualaizeItem.layout\n\nexport const selectVisualizeItemIsWorkflowDialog =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).isWorkflowDialog\n  }\n\nexport const selectVisualizeItemIdForWorkflowDialog =\n  (nodeId: string, filePath: string, dataType: DATA_TYPE) =>\n  (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    let targetItemId: null | number = null\n    for (const [itemId, value] of Object.entries(items)) {\n      if (\n        value.nodeId === nodeId &&\n        value.filePath === filePath &&\n        value.dataType === dataType &&\n        value.isWorkflowDialog\n      ) {\n        targetItemId = Number(itemId)\n      }\n    }\n    return targetItemId\n  }\n\nexport const selectVisualizeItemWidth =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).width\n  }\n\nexport const selectVisualizeItemHeight =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).height\n  }\n\nexport const selectVisualizeItemType = (itemId: number) => (state: RootState) =>\n  selectVisualizeItemById(itemId)(state).itemType\n\nexport const selectVisualizeDataType =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.dataType\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataNodeId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.nodeId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeSaveFilename =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFileName\n  }\n\nexport const selectVisualizeSaveFormat =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFormat\n  }\n\nexport const selectImageItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemNodeId = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.nodeId ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemFilePath = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.filePath ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemOutputKeys = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.outputKey ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemShowticklabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemZsmooth =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.zsmooth\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemStartIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.startIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemEndIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.endIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemColors = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.colors\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemActiveIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.activeIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemAlpha = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.alpha\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemRoiAlpha =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.roiAlpha\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemRoiFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      if (item.roiItem) {\n        return item.roiItem.filePath\n      } else {\n        return null\n      }\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemDuration =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.duration\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemOffset =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.offset\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemSpan =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.span\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowTickLabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemZeroLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.zeroline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemXrange =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.xrange\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemDrawOrderList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.drawOrderList\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectTimeSeriesItemRefImageItemId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.refImageItemId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemRefRoiUniqueList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      if (item.refImageItemId != null) {\n        const imageItem = selectVisualizeItems(state)[item.refImageItemId]\n        if (isImageItem(imageItem) && imageItem.roiItem?.filePath != null) {\n          return selectRoiUniqueList(imageItem.roiItem.filePath)(state)\n        }\n      }\n      return null\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemKeys =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const path = selectTimeSeriesItemFilePath(itemId)(state)\n      if (path != null && selectTimeSeriesDataIsInitialized(path)(state)) {\n        const dataKeys = Object.keys(selectTimeSeriesData(path)(state))\n        const roiUniqueList =\n          selectTimeSeriesItemRefRoiUniqueList(itemId)(state)\n        if (roiUniqueList != null) {\n          return dataKeys.filter((key) => roiUniqueList.includes(key))\n        } else {\n          return dataKeys\n        }\n      } else {\n        return []\n      }\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectRoiItemIndex =\n  (itemId: number, roiFilePath: string | null) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const maxIdx = item.maxIndex\n      if (maxIdx !== 0) {\n        return maxIdx\n      }\n    }\n\n    if (roiFilePath !== null) {\n      return selectRoiItemMaxNumber(roiFilePath)(state)\n    } else {\n      return 0\n    }\n  }\n\nexport const selectRoiItemMaxNumber =\n  (roiFilePath: string) => (state: RootState) => {\n    const roiData = selectRoiData(roiFilePath)(state)\n    if (roiData.length !== 0) {\n      return Math.max(...roiData.map((arr) => Math.max(...arr)))\n    } else {\n      return 0\n    }\n  }\n\nexport const selectHeatMapItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectHeatMapItemColors =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.colors\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemTranspose =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.transpose\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetHeader =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.setHeader\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isCsvItem(item)) {\n    return item.setIndex\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectBarItemIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isBarItem(item)) {\n    return item.index\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectScatterItemXIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.xIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectScatterItemYIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.yIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectDisplayDataIsSingle =\n  (itemId: number) => (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    const item = items[itemId]\n    const targetFilePath = item.filePath\n    return (\n      Object.values(items).filter((value) => value.filePath === targetFilePath)\n        .length === 1\n    )\n  }\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { ThunkApiConfig } from 'store/store'\nimport { getTimeSeriesDataById } from '../DisplayData/DisplayDataActions'\nimport { selectRoiData } from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport { selectVisualizeItems } from './VisualizeItemSelectors'\nimport { VISUALIZE_ITEM_SLICE_NAME } from './VisualizeItemType'\nimport { isImageItem, isTimeSeriesItem } from './VisualizeItemUtils'\n\nexport const setImageItemClikedDataId = createAsyncThunk<\n  void,\n  { itemId: number; clickedDataId: string },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setImageItemClikedDataId`,\n  ({ itemId, clickedDataId }, thunkAPI) => {\n    const items = selectVisualizeItems(thunkAPI.getState())\n    Object.values(items).forEach((item) => {\n      if (\n        isTimeSeriesItem(item) &&\n        item.filePath != null &&\n        item.refImageItemId === itemId &&\n        !item.drawOrderList.includes(clickedDataId)\n      ) {\n        thunkAPI.dispatch(\n          getTimeSeriesDataById({ path: item.filePath, index: clickedDataId }),\n        )\n      }\n    })\n  },\n)\n\nexport const selectingImageArea = createAsyncThunk<\n  string[],\n  {\n    itemId: number\n    range: {\n      x: number[]\n      y: number[]\n    }\n  },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/selectingImageArea`,\n  ({ itemId, range }, thunkAPI) => {\n    const { x, y } = range\n    const [x1, x2] = x.map(Math.round)\n    const [y1, y2] = y.map(Math.round)\n    const selectedZList: string[] = []\n    const items = selectVisualizeItems(thunkAPI.getState())\n    const imageItem = items[itemId]\n    if (isImageItem(imageItem) && imageItem.roiItem != null) {\n      const roiFilePath = imageItem.roiItem.filePath\n      if (roiFilePath != null) {\n        const roiData = selectRoiData(roiFilePath)(thunkAPI.getState())\n        for (let x = x1; x <= x2; x++) {\n          for (let y = y1; y <= y2; y++) {\n            const z = roiData[y][x]\n            if (z != null) {\n              const zNum = String(z) // indexとidのずれを回避\n              if (!selectedZList.includes(zNum)) {\n                selectedZList.push(zNum)\n              }\n            }\n          }\n        }\n        Object.values(items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            const path = item.filePath\n            selectedZList.forEach((selectedZ) => {\n              thunkAPI.dispatch(\n                getTimeSeriesDataById({\n                  path,\n                  index: String(selectedZ),\n                }),\n              )\n            })\n          }\n        })\n      }\n    }\n    return selectedZList\n  },\n)\n\ntype DeleteOption =\n  | {\n      deleteData: true\n      dataType: DATA_TYPE\n      filePath: string\n    }\n  | { deleteData: false }\n\ntype DeleteDisplayItemArgs = {\n  itemId: number\n} & DeleteOption\n\nexport const deleteDisplayItem = createAction<DeleteDisplayItemArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/deleteDisplayItem`,\n)\n\ntype SetNewDisplayDataPathArgs = {\n  itemId: number\n  filePath: string\n  nodeId: string | null\n  dataType?: DATA_TYPE\n} & (\n  | {\n      deleteData: true\n      prevFilePath: string\n      prevDataType: DATA_TYPE\n    }\n  | { deleteData: false }\n)\n\nexport const setNewDisplayDataPath = createAction<SetNewDisplayDataPathArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setNewDisplayDataPath`,\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  deleteDisplayItem,\n  selectingImageArea,\n  setImageItemClikedDataId,\n  setNewDisplayDataPath,\n} from './VisualizeItemActions'\n\nimport {\n  HeatMapItem,\n  ImageItem,\n  CsvItem,\n  TimeSeriesItem,\n  RoiItem,\n  ScatterItem,\n  VisualaizeItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  BarItem,\n  HDF5Item,\n  HTMLItem,\n  FluoItem,\n  BehaviorItem,\n  VISUALIZE_ITEM_SLICE_NAME,\n} from './VisualizeItemType'\nimport {\n  isDisplayDataItem,\n  isHeatMapItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n} from './VisualizeItemUtils'\n\nexport const initialState: VisualaizeItem = {\n  items: {},\n  selectedItemId: null,\n  layout: [],\n}\nconst displayDataCommonInitialValue = {\n  itemType: VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA,\n  filePath: null,\n  nodeId: null,\n  width: 500,\n  height: 500,\n  isWorkflowDialog: false,\n  saveFileName: 'newPlot',\n  saveFormat: 'png',\n}\nconst imageItemInitialValue: ImageItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.IMAGE,\n  startIndex: 1,\n  endIndex: 10,\n  showticklabels: false,\n  showline: true,\n  zsmooth: 'best',\n  showgrid: false,\n  showscale: false,\n  colors: [\n    { rgb: `rgb(0, 0, 0)`, offset: '0' },\n    { rgb: `rgb(255, 255, 255)`, offset: '1.0' },\n  ],\n  activeIndex: 0,\n  alpha: 1.0,\n  roiItem: null,\n  roiAlpha: 1.0,\n  duration: 500,\n}\nconst timeSeriesItemInitialValue: TimeSeriesItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.TIME_SERIES,\n  offset: true,\n  span: 5,\n  showgrid: true,\n  showline: true,\n  showticklabels: true,\n  zeroline: false,\n  xrange: {\n    left: undefined,\n    right: undefined,\n  },\n  maxIndex: 0,\n  drawOrderList: [],\n  refImageItemId: null,\n}\nconst heatMapItemInitialValue: HeatMapItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HEAT_MAP,\n  showscale: true,\n  colors: [\n    { rgb: `rgb(0, 0, 255)`, offset: '0' },\n    { rgb: `rgb(200, 200, 200)`, offset: '0.5' },\n    { rgb: `rgb(255, 0, 0)`, offset: '1.0' },\n  ],\n}\nconst csvItemInitialValue: CsvItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.CSV,\n  setHeader: null,\n  setIndex: false,\n  transpose: false,\n}\nconst roiItemInitialValue: RoiItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.ROI,\n}\nconst scatterItemInitialValue: ScatterItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.SCATTER,\n  xIndex: '0',\n  yIndex: '1',\n}\nconst barItemInitialValue: BarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BAR,\n  index: '0',\n}\nconst hdf5ItemInitialValue: HDF5Item = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HDF5,\n}\nconst htmlItemInitialValue: HTMLItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HTML,\n}\nconst fluoItemInitialValue: FluoItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.FLUO,\n}\nconst behaviorItemInitialValue: BehaviorItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BEHAVIOR,\n}\n\nfunction getDisplayDataItemInitialValue(dataType: DATA_TYPE) {\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return imageItemInitialValue\n    case DATA_TYPE_SET.HEAT_MAP:\n      return heatMapItemInitialValue\n    case DATA_TYPE_SET.TIME_SERIES:\n      return timeSeriesItemInitialValue\n    case DATA_TYPE_SET.CSV:\n      return csvItemInitialValue\n    case DATA_TYPE_SET.ROI:\n      return roiItemInitialValue\n    case DATA_TYPE_SET.SCATTER:\n      return scatterItemInitialValue\n    case DATA_TYPE_SET.BAR:\n      return barItemInitialValue\n    case DATA_TYPE_SET.HDF5:\n      return hdf5ItemInitialValue\n    case DATA_TYPE_SET.HTML:\n      return htmlItemInitialValue\n    case DATA_TYPE_SET.FLUO:\n      return fluoItemInitialValue\n    case DATA_TYPE_SET.BEHAVIOR:\n      return behaviorItemInitialValue\n  }\n}\n\nexport const visualaizeItemSlice = createSlice({\n  name: VISUALIZE_ITEM_SLICE_NAME,\n  initialState,\n  reducers: {\n    pushInitialItemToNewRow: (state) => {\n      const newItemId = addInitialItemFn(state)\n      state.layout.push([newItemId])\n    },\n    insertInitialItemToNextColumn: (state, action: PayloadAction<number>) => {\n      const newItemId = addInitialItemFn(state)\n      const targetItemId = action.payload\n      const targetRowIndex = state.layout.findIndex((row) =>\n        row.includes(targetItemId),\n      )\n      const targetColumnIndex =\n        state.layout[targetRowIndex].indexOf(targetItemId)\n      state.layout[targetRowIndex].splice(targetColumnIndex + 1, 0, newItemId)\n    },\n    addItemForWorkflowDialog: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        filePath: string\n        dataType: DATA_TYPE\n      }>,\n    ) => {\n      const { nodeId, filePath, dataType } = action.payload\n      const maxId = getMaxItemId(state)\n      const newItemId = maxId != null ? maxId + 1 : 0\n      state.items[newItemId] = {\n        ...getDisplayDataItemInitialValue(dataType),\n        isWorkflowDialog: true,\n        nodeId,\n        filePath,\n      }\n    },\n    deleteAllItemForWorkflowDialog: (state) => {\n      const targetItemIdList = Object.entries(state.items)\n        .filter(([itemId, value]) => value.isWorkflowDialog)\n        .map(([itemId, value]) => Number(itemId))\n      targetItemIdList.forEach(\n        (targetItemId) => delete state.items[targetItemId],\n      )\n    },\n    setItemSize: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        width: number\n        height: number\n      }>,\n    ) => {\n      const { itemId, width, height } = action.payload\n      const targetItem = state.items[itemId]\n      targetItem.width = width\n      targetItem.height = height\n    },\n    selectItem: (state, action: PayloadAction<number>) => {\n      state.selectedItemId = action.payload\n    },\n    reset: (state) => {\n      state.items = initialState.items\n      state.layout = initialState.layout\n      state.selectedItemId = initialState.selectedItemId\n    },\n    setRoiItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n        outputKey?: string\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId, outputKey } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        Object.values(state.items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            item.drawOrderList = []\n          }\n        })\n\n        if (targetItem.roiItem != null) {\n          targetItem.roiItem.filePath = filePath\n          targetItem.roiItem.nodeId = nodeId\n          targetItem.roiItem.outputKey = outputKey\n        } else {\n          targetItem.roiItem = {\n            ...roiItemInitialValue,\n            filePath,\n            nodeId,\n            outputKey,\n          }\n        }\n      }\n    },\n    setFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isDisplayDataItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      } else {\n        throw new Error('error')\n      }\n    },\n    setSaveFormat: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFormat: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFormat = action.payload.saveFormat\n    },\n    setSaveFileName: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFileName: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFileName = action.payload.saveFileName\n    },\n    setImageItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setTimeSeriesItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setHeatMapItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    resetImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex?: number\n        endIndex?: number\n      }>,\n    ) => {\n      resetImageActiveIndexFn(state, action.payload)\n    },\n    incrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex++\n      }\n    },\n    decrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex--\n      }\n    },\n    setImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        activeIndex: number\n      }>,\n    ) => {\n      const { itemId, activeIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex = activeIndex\n      }\n    },\n    setImageItemShowticklabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setImageItemZsmooth: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zsmooth: string | boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.zsmooth = action.payload.zsmooth\n      }\n    },\n    setImageItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setImageItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setImageItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setImageItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setImageItemStartIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.startIndex = action.payload.startIndex\n      }\n    },\n    setImageItemEndIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        endIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.endIndex = action.payload.endIndex\n      }\n    },\n    setImageItemAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        alpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.alpha = action.payload.alpha\n      }\n    },\n    setImageItemRoiAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        roiAlpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.roiAlpha = action.payload.roiAlpha\n      }\n    },\n    setImageItemDuration: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        duration: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.duration = action.payload.duration\n      }\n    },\n    setTimeSeriesItemOffset: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        offset: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.offset = action.payload.offset\n      }\n    },\n    setTimeSeriesItemSpan: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        span: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.span = action.payload.span\n      }\n    },\n    setTimeSeriesItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setTimeSeriesItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setTimeSeriesItemShowTickLabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setTimeSeriesItemZeroLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zeroline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.zeroline = action.payload.zeroline\n      }\n    },\n    setTimeSeriesItemXrangeLeft: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        left: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.left = action.payload.left\n      }\n    },\n    setTimeSeriesItemXrangeRight: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        right: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.right = action.payload.right\n      }\n    },\n    setTimeSeriesItemDrawOrderList: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        drawOrderList: string[]\n      }>,\n    ) => {\n      const { itemId, drawOrderList } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.drawOrderList = drawOrderList\n      }\n    },\n    resetAllOrderList: (state) => {\n      Object.keys(state.items).forEach((id: any) => {\n        const targetItem = state.items[id]\n        if (isTimeSeriesItem(targetItem)) {\n          targetItem.drawOrderList = []\n        }\n      })\n    },\n    setTimeSeriesItemMaxIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        maxIndex: number\n      }>,\n    ) => {\n      const { itemId, maxIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.maxIndex = maxIndex\n      }\n    },\n    setTimeSeriesRefImageItemId: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        refImageItemId: number | null\n      }>,\n    ) => {\n      const { itemId, refImageItemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.refImageItemId = refImageItemId ?? null\n        targetItem.drawOrderList = []\n      }\n    },\n    setHeatMapItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setHeatMapItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setCsvItemTranspose: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        transpose: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.transpose = action.payload.transpose\n      }\n    },\n    setCsvItemSetHeader: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setHeader: number | null\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setHeader = action.payload.setHeader\n      }\n    },\n    setCsvItemSetIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setIndex: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setIndex = action.payload.setIndex\n      }\n    },\n    setScatterItemXIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        xIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.xIndex = action.payload.xIndex\n      }\n    },\n    setScatterItemYIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        yIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.yIndex = action.payload.yIndex\n      }\n    },\n    setBarItemIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        index: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isBarItem(targetItem)) {\n        targetItem.index = action.payload.index\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        const itemId = action.payload.itemId\n\n        if (isImageItem(state.items[itemId])) {\n          Object.values(state.items).forEach((item) => {\n            if (isTimeSeriesItem(item) && item.refImageItemId === itemId) {\n              item.refImageItemId = null\n            }\n          })\n        }\n\n        delete state.items[itemId]\n        if (itemId === state.selectedItemId) {\n          state.selectedItemId = null\n        }\n        state.layout.forEach((row, i) => {\n          const index = row.indexOf(itemId)\n          if (index !== -1) {\n            row.splice(index, 1)\n          }\n          if (row.length === 0) {\n            state.layout.splice(i, 1)\n          }\n        })\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        const { itemId, filePath, nodeId, dataType } = action.payload\n        const targetItem = state.items[itemId]\n        if (isDisplayDataItem(targetItem)) {\n          if (dataType != null) {\n            state.items[itemId] = {\n              ...getDisplayDataItemInitialValue(dataType),\n              width: targetItem.width,\n              height: targetItem.height,\n              filePath,\n              nodeId,\n            }\n          } else {\n            targetItem.filePath = filePath\n            targetItem.nodeId = nodeId\n          }\n        } else {\n          throw new Error('invalid VisualaizeItemType')\n        }\n        resetImageActiveIndexFn(state, { itemId })\n      })\n      .addCase(setImageItemClikedDataId.fulfilled, (state, action) => {\n        const { itemId: imageItemId, clickedDataId } = action.meta.arg\n        const targetItem = state.items[imageItemId]\n        if (isImageItem(targetItem)) {\n          targetItem.clickedDataId = clickedDataId\n        }\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId &&\n              !item.drawOrderList.includes(clickedDataId)\n            ) {\n              item.drawOrderList.push(clickedDataId)\n            }\n          }\n        })\n      })\n      .addCase(selectingImageArea.fulfilled, (state, action) => {\n        const { itemId: imageItemId } = action.meta.arg\n        const selectedZList = action.payload\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId\n            ) {\n              item.drawOrderList = selectedZList\n            }\n          }\n        })\n      })\n  },\n})\n\nfunction getMaxItemId(state: VisualaizeItem) {\n  const idList = Object.keys(state.items).map((key) => Number(key))\n  const maxId =\n    idList.length > 0 ? idList.reduce((a, b) => Math.max(a, b)) : null\n  return maxId\n}\n\nfunction addInitialItemFn(state: VisualaizeItem) {\n  const maxId = getMaxItemId(state)\n  const nextId = maxId != null ? maxId + 1 : 0\n  state.items[nextId] = getDisplayDataItemInitialValue(DATA_TYPE_SET.IMAGE)\n  state.selectedItemId = nextId\n  return nextId\n}\n\nfunction resetImageActiveIndexFn(\n  state: VisualaizeItem,\n  args: {\n    itemId: number\n  },\n) {\n  const { itemId } = args\n  const targetItem = state.items[itemId]\n  if (isImageItem(targetItem)) {\n    targetItem.activeIndex = 0\n  }\n}\n\nexport const {\n  pushInitialItemToNewRow,\n  insertInitialItemToNextColumn,\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n  setItemSize,\n  selectItem,\n  setFilePath,\n  setSaveFormat,\n  setSaveFileName,\n  setHeatMapItemFilePath,\n  setImageItemFilePath,\n  setTimeSeriesItemFilePath,\n  setRoiItemFilePath,\n  resetImageActiveIndex,\n  incrementImageActiveIndex,\n  decrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowLine,\n  setImageItemShowGrid,\n  setImageItemShowScale,\n  setImageItemColors,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemAlpha,\n  setImageItemRoiAlpha,\n  setImageItemDuration,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemDrawOrderList,\n  setTimeSeriesItemMaxIndex,\n  setTimeSeriesRefImageItemId,\n  setHeatMapItemShowScale,\n  setHeatMapItemColors,\n  setCsvItemTranspose,\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n  setBarItemIndex,\n  resetAllOrderList,\n  reset,\n} = visualaizeItemSlice.actions\n\nexport default visualaizeItemSlice.reducer\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport { useSnackbar } from 'notistack'\nimport { importExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { AppDispatch } from 'store/store'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport ReplyIcon from '@mui/icons-material/Reply'\nimport { reset } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const ImportButton = React.memo(() => {\n  const dispatch: AppDispatch = useDispatch()\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = () => {\n    if (workspaceId) {\n      dispatch(importExperimentByUid({workspaceId, uid}))\n      .unwrap()\n      .then(() => {\n        enqueueSnackbar('Successfully imported.', { variant: 'success' })\n        dispatch(reset())\n      })\n    } else {\n      throw new Error('Workspace ID is missing.')\n    }\n  }\n  return (\n    <IconButton onClick={onClick}>\n      <ReplyIcon />\n    </IconButton>\n  )\n})\n","import React, { ChangeEvent, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\nimport Alert from '@mui/material/Alert'\nimport AlertTitle from '@mui/material/AlertTitle'\nimport IconButton from '@mui/material/IconButton'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport TablePagination from '@mui/material/TablePagination'\nimport Paper from '@mui/material/Paper'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport ReplayIcon from '@mui/icons-material/Replay'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport Checkbox from '@mui/material/Checkbox'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport TableSortLabel from '@mui/material/TableSortLabel'\nimport Typography from '@mui/material/Typography'\n\nimport { CollapsibleTable } from './CollapsibleTable'\nimport {\n  selectExperimentsStatusIsUninitialized,\n  selectExperimentsStatusIsFulfilled,\n  selectExperimentTimeStamp,\n  selectExperimentName,\n  selectExperimentStatus,\n  selectExperimentsStatusIsError,\n  selectExperimentsErrorMessage,\n  selectExperimentList,\n  selectExperimentHasNWB,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport {\n  deleteExperimentByList,\n  getExperiments,\n} from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { Experiment } from 'store/slice/Experiments/ExperimentsType'\nimport { DeleteButton } from './Button/DeleteButton'\nimport {\n  NWBDownloadButton,\n  ConfigDownloadButton,\n} from './Button/DownloadButton'\nimport { ImportButton } from './Button/ImportButton'\nimport { useLocalStorage } from 'components/utils/LocalStorageUtil'\nimport { styled } from '@mui/material/styles'\nimport { renameExperiment } from 'api/experiments/Experiments'\nimport { selectPipelineLatestUid } from 'store/slice/Pipeline/PipelineSelectors'\nimport { clearCurrentPipeline } from 'store/slice/Pipeline/PipelineSlice'\nimport {\n  selectCurrentWorkspaceId,\n  selectIsWorkspaceOwner,\n} from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const ExperimentUidContext = React.createContext<string>('')\n\nexport const ExperimentTable: React.FC = () => {\n  const isUninitialized = useSelector(selectExperimentsStatusIsUninitialized)\n  const isFulfilled = useSelector(selectExperimentsStatusIsFulfilled)\n  const isError = useSelector(selectExperimentsStatusIsError)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (isUninitialized) {\n      dispatch(getExperiments())\n    }\n  }, [dispatch, isUninitialized])\n\n  if (isFulfilled) {\n    return <TableImple />\n  } else if (isError) {\n    return <ExperimentsErrorView />\n  } else {\n    return null\n  }\n}\n\nconst ExperimentsErrorView: React.FC = () => {\n  const message = useSelector(selectExperimentsErrorMessage)\n  return (\n    <Alert severity=\"error\">\n      <AlertTitle>failed to get experiments...</AlertTitle>\n      {message}\n    </Alert>\n  )\n}\n\nconst LOCAL_STORAGE_KEY_PER_PAGE = 'optinist_experiment_table_per_page'\n\nconst TableImple = React.memo(() => {\n  const isOwner = useSelector(selectIsWorkspaceOwner)\n  const currentPipelineUid = useSelector(selectPipelineLatestUid)\n  const experimentList = useSelector(selectExperimentList)\n  const experimentListValues = Object.values(experimentList)\n  const experimentListKeys = Object.keys(experimentList)\n  const dispatch = useDispatch()\n  const onClickReload = () => {\n    dispatch(getExperiments())\n  }\n  const [order, setOrder] = React.useState<Order>('asc')\n  const [sortTarget, setSortTarget] =\n    React.useState<keyof Experiment>('timestamp')\n  const sortHandler =\n    (property: keyof Experiment) => (event: React.MouseEvent<unknown>) => {\n      const isAsc = sortTarget === property && order === 'asc'\n      setOrder(isAsc ? 'desc' : 'asc')\n      setSortTarget(property)\n    }\n\n  const [checkedList, setCheckedList] = useState<string[]>([])\n  const [open, setOpen] = React.useState(false)\n\n  const onCheckBoxClick = (uid: string) => {\n    if (checkedList.includes(uid)) {\n      setCheckedList(checkedList.filter((v) => v !== uid))\n    } else {\n      setCheckedList([...checkedList, uid])\n    }\n  }\n\n  const onChangeAllCheck = (checked: boolean) => {\n    if (checked) {\n      setCheckedList(experimentListValues.map((experiment) => experiment.uid))\n    } else {\n      setCheckedList([])\n    }\n  }\n\n  const recordsIsEmpty = experimentListKeys.length === 0\n\n  const onClickDelete = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    dispatch(deleteExperimentByList(checkedList))\n    checkedList.filter((v) => v === currentPipelineUid).length > 0 &&\n      dispatch(clearCurrentPipeline())\n    setCheckedList([])\n    setOpen(false)\n  }\n\n  const [page, setPage] = React.useState(0)\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage)\n  }\n\n  const [rowsPerPage, setRowsPerPage] = useLocalStorage(\n    LOCAL_STORAGE_KEY_PER_PAGE,\n    10,\n    (value) => {\n      const valueNum = Number(value)\n      return isNaN(valueNum) ? 10 : valueNum\n    },\n  )\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const newValue = parseInt(event.target.value, 10)\n    setRowsPerPage(newValue)\n    setPage(0)\n  }\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0\n      ? Math.max(0, (1 + page) * rowsPerPage - experimentListKeys.length)\n      : 0\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          alignItems: 'center',\n        }}\n      >\n        {!recordsIsEmpty && (\n          <Typography sx={{ flexGrow: 1, m: 1 }}>\n            {checkedList.length} selected\n          </Typography>\n        )}\n        <Button\n          sx={{\n            margin: (theme) => theme.spacing(0, 1, 1, 0),\n          }}\n          variant=\"outlined\"\n          endIcon={<ReplayIcon />}\n          onClick={onClickReload}\n        >\n          Reload\n        </Button>\n        {isOwner && (\n          <Button\n            sx={{\n              marginBottom: (theme) => theme.spacing(1),\n            }}\n            variant=\"outlined\"\n            color=\"error\"\n            endIcon={<DeleteIcon />}\n            onClick={onClickDelete}\n            disabled={checkedList.length === 0}\n          >\n            Delete\n          </Button>\n        )}\n      </Box>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Paper\n        elevation={0}\n        variant=\"outlined\"\n        sx={{\n          flexGlow: 1,\n          height: '100%',\n        }}\n      >\n        <TableContainer component={Paper} elevation={0}>\n          <Table aria-label=\"collapsible table\">\n            <HeadItem\n              order={order}\n              sortHandler={sortHandler}\n              allCheckIndeterminate={\n                checkedList.length !== 0 &&\n                checkedList.length !== Object.keys(experimentList).length\n              }\n              allChecked={\n                checkedList.length === Object.keys(experimentList).length\n              }\n              onChangeAllCheck={onChangeAllCheck}\n              checkboxVisible={!recordsIsEmpty}\n              isOwner={isOwner}\n            />\n            <TableBody>\n              {experimentListValues\n                .sort(getComparator(order, sortTarget))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((expData) => (\n                  <ExperimentUidContext.Provider\n                    value={expData.uid}\n                    key={expData.uid}\n                  >\n                    <RowItem\n                      onCheckBoxClick={onCheckBoxClick}\n                      checked={checkedList.includes(expData.uid)}\n                      isOwner={isOwner}\n                    />\n                  </ExperimentUidContext.Provider>\n                ))}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: 53 * emptyRows,\n                  }}\n                >\n                  <TableCell colSpan={10} />\n                </TableRow>\n              )}\n              {recordsIsEmpty && (\n                <TableRow>\n                  <TableCell colSpan={10}>\n                    <Typography\n                      sx={{\n                        color: (theme) => theme.palette.text.secondary,\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        height: '300px',\n                        textAlign: 'center',\n                      }}\n                      variant=\"h6\"\n                    >\n                      No Rows...\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={experimentListKeys.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Box>\n  )\n})\n\nconst HeadItem = React.memo<{\n  order: Order\n  sortHandler: any\n  allChecked: boolean\n  onChangeAllCheck: (checked: boolean) => void\n  allCheckIndeterminate: boolean\n  checkboxVisible: boolean\n  isOwner: boolean\n}>(\n  ({\n    order,\n    sortHandler,\n    allChecked,\n    onChangeAllCheck,\n    allCheckIndeterminate,\n    checkboxVisible,\n    isOwner,\n  }) => {\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              sx={{ visibility: checkboxVisible ? 'visible' : 'hidden' }}\n              checked={allChecked}\n              indeterminate={allCheckIndeterminate}\n              onChange={(e) => onChangeAllCheck(e.target.checked)}\n            />\n          </TableCell>\n          <TableCell />\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('timestamp')}\n            >\n              Timestamp\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('uid')}\n            >\n              ID\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('name')}\n            >\n              Name\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>Success</TableCell>\n          <TableCell>Reproduce</TableCell>\n          <TableCell>SnakeFile</TableCell>\n          <TableCell>NWB</TableCell>\n          {isOwner && <TableCell>Delete</TableCell>}\n        </TableRow>\n      </TableHead>\n    )\n  },\n)\n\nconst RowItem = React.memo<{\n  onCheckBoxClick: (uid: string) => void\n  checked: boolean\n  isOwner: boolean\n}>(({ onCheckBoxClick, checked, isOwner }) => {\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const timestamp = useSelector(selectExperimentTimeStamp(uid))\n  const status = useSelector(selectExperimentStatus(uid))\n  const name = useSelector(selectExperimentName(uid))\n  const hasNWB = useSelector(selectExperimentHasNWB(uid))\n  const [open, setOpen] = React.useState(false)\n  const [isEdit, setEdit] = useState(false)\n  const [errorEdit, setErrorEdit] = useState('')\n  const [valueEdit, setValueEdit] = useState(name)\n  const dispatch = useDispatch()\n\n  const onBlurEdit = (event: any) => {\n    event.preventDefault()\n    if (errorEdit) return\n    setTimeout(() => {\n      setEdit(false)\n      onSaveNewName()\n    }, 300)\n  }\n\n  const onEdit = (event: any) => {\n    if (isEdit || errorEdit) return\n    event.preventDefault()\n    setEdit(true)\n  }\n\n  const onChangeName = (event: ChangeEvent<HTMLInputElement>) => {\n    let errorEdit = ''\n    if (!event.target.value.trim()) {\n      errorEdit = 'Name is empty'\n    }\n    setErrorEdit(errorEdit)\n    setValueEdit(event.target.value)\n  }\n\n  const onSaveNewName = async () => {\n    if (valueEdit === name || workspaceId === void 0) return\n    await renameExperiment(workspaceId, uid, valueEdit)\n    dispatch(getExperiments())\n  }\n\n  return (\n    <React.Fragment>\n      <TableRow\n        sx={{\n          '& > *': {\n            borderBottom: 'unset',\n          },\n          [`& .${tableCellClasses.root}`]: {\n            borderBottomWidth: 0,\n          },\n        }}\n      >\n        <TableCell padding=\"checkbox\">\n          <Checkbox onChange={() => onCheckBoxClick(uid)} checked={checked} />\n        </TableCell>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {timestamp}\n        </TableCell>\n        <TableCell>{uid}</TableCell>\n        <TableCell sx={{ width: 160, position: 'relative' }} onClick={onEdit}>\n          {!isEdit ? (\n            valueEdit\n          ) : (\n            <>\n              <Input\n                placeholder=\"Name\"\n                error={!!errorEdit}\n                onChange={onChangeName}\n                autoFocus\n                onBlur={onBlurEdit}\n                value={valueEdit}\n              />\n              {errorEdit ? <TextError>{errorEdit}</TextError> : null}\n            </>\n          )}\n        </TableCell>\n        <TableCell>\n          <ExperimentStatusIcon status={status} />\n        </TableCell>\n        <TableCell>\n          <ImportButton />\n        </TableCell>\n        <TableCell>\n          <ConfigDownloadButton />\n        </TableCell>\n        <TableCell>\n          <NWBDownloadButton name={uid} hasNWB={hasNWB} />\n        </TableCell>\n        {isOwner &&<TableCell> <DeleteButton /></TableCell>}\n      </TableRow>\n      <CollapsibleTable open={open} />\n    </React.Fragment>\n  )\n})\n\nconst Input = styled('input')<{ error: boolean }>(({ error }) => ({\n  width: '100%',\n  border: 'none',\n  borderBottom: '1px solid',\n  outline: 'none',\n  color: error ? '#d32f2f' : '',\n  borderColor: error ? '#d32f2f' : '',\n}))\n\nconst TextError = styled(Typography)(() => ({\n  color: '#d32f2f',\n  fontSize: 12,\n  height: 12,\n  position: 'absolute',\n  bottom: 12,\n}))\n\ntype Order = 'asc' | 'desc'\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string },\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n","import React from 'react'\n\nexport function useLocalStorage<T>(\n  storageKey: string,\n  initialValue: T,\n  parseFn: (value: any) => T,\n): [T, React.Dispatch<React.SetStateAction<T>>] {\n  const [value, setValue] = React.useState(() => {\n    const savedStr = localStorage.getItem(storageKey)\n    if (savedStr != null) {\n      return parseFn(JSON.parse(savedStr))\n    }\n    return initialValue\n  })\n  React.useEffect(() => {\n    localStorage.setItem(storageKey, JSON.stringify(value))\n  }, [value, storageKey])\n  return [value, setValue]\n}\n","export const APP_BAR_HEIGHT = 60\nexport const CONTENT_HEIGHT = `calc(100vh - 48px - ${APP_BAR_HEIGHT}px)` // 48px: spacing(3)\nexport const DRAWER_WIDTH = 240\nexport const RIGHT_DRAWER_WIDTH = 320\n","import React from 'react'\nimport { ExperimentTable } from './ExperimentTable'\nimport { CONTENT_HEIGHT } from 'const/Layout'\n\nconst Experiment = React.memo(() => {\n  return (\n    <div style={{ display: 'flex' }}>\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1,\n          minHeight: CONTENT_HEIGHT,\n        }}\n      >\n        <ExperimentTable />\n      </main>\n    </div>\n  )\n})\n\nexport default Experiment\n","import { AlgoListDTO, AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  AlgorithmNodeType,\n  AlgorithmChild,\n  AlgorithmParent,\n  AlgorithmListTree,\n} from './AlgorithmListType'\n\nexport function isAlgoChild(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmChild {\n  return algoNode.type === 'child'\n}\n\nexport function isAlgoParent(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmParent {\n  return algoNode.type === 'parent'\n}\n\nexport function getAlgoChild(\n  algoList: AlgorithmListTree,\n  algoName: string,\n): AlgorithmChild | null {\n  let result: AlgorithmChild | null = null\n  for (const [name, node] of Object.entries(algoList)) {\n    if (isAlgoChild(node)) {\n      if (name === algoName) {\n        result = node\n      }\n    } else {\n      result = getAlgoChild(node.children, algoName)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function convertToAlgoListType(dto: AlgoListDTO) {\n  const algoList: AlgorithmListTree = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    if (Object.prototype.hasOwnProperty.call(value, 'children')) {\n      algoList[name] = {\n        type: 'parent',\n        children: convertToAlgoListType(\n          (\n            value as {\n              children: AlgoListDTO\n            }\n          ).children as AlgoListDTO,\n        ),\n      }\n    } else {\n      const dto = value as {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n      algoList[name] = {\n        type: 'child',\n        functionPath: dto.path,\n        args: dto.args,\n        returns: dto.returns,\n      }\n    }\n  })\n  return algoList\n}\n","import { RootState } from 'store/store'\nimport { selectAlgorithmName } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { getAlgoChild } from './AlgorithmListUtils'\n\nexport const selectAlgorithmList = (state: RootState) => state.algorithmList\n\nexport const selectAlgorithmListIsLated = (state: RootState) =>\n  selectAlgorithmList(state).isLatest\n\nexport const selectAlgorithmListTree = (state: RootState) =>\n  selectAlgorithmList(state).tree\n\nexport const selectAlgoArgs = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.args\n  } else {\n    return undefined\n  }\n}\n\nexport const selectAlgoReturns = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.returns\n  } else {\n    return undefined\n  }\n}\n","import { AlgorithmInfo } from 'api/algolist/AlgoList'\n\nexport const ALGORITHM_LIST_SLICE_NAME = 'algorithmList'\n\nexport type AlgorithmListType = {\n  isLatest: boolean\n  tree: AlgorithmListTree\n}\n\nexport type AlgorithmListTree = {\n  [algoName: string]: AlgorithmNodeType\n}\n\nexport type AlgorithmNodeType = AlgorithmChild | AlgorithmParent\nexport type AlgorithmChild = {\n  type: 'child'\n  args: AlgorithmInfo[]\n  returns: AlgorithmInfo[]\n  functionPath: string\n}\nexport type AlgorithmParent = {\n  type: 'parent'\n  children: {\n    [name: string]: AlgorithmNodeType\n  }\n}\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type AlgoListDTO = {\n  [name: string]:\n    | {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n    | { children: AlgoListDTO }\n}\n\nexport type AlgorithmInfo = {\n  name: string\n  type: string\n  isNone?: boolean\n}\n\nexport async function getAlgoListApi(): Promise<AlgoListDTO> {\n  const response = await axios.get(`${BASE_URL}/algolist`)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { ALGORITHM_LIST_SLICE_NAME } from './AlgorithmListType'\nimport { AlgoListDTO, getAlgoListApi } from 'api/algolist/AlgoList'\n\nexport const getAlgoList = createAsyncThunk<AlgoListDTO, void>(\n  `${ALGORITHM_LIST_SLICE_NAME}/getAlgoList`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoListApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getAlgoParamsApi(algoName: string): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/params/${algoName}`)\n  return response.data\n}\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Node } from 'react-flow-renderer'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { FLOW_ELEMENT_SLICE_NAME, NodeData } from './FlowElementType'\nimport { getAlgoParamsApi } from 'api/params/Params'\n\nexport type AddingNodeData = Omit<Node<NodeData>, 'position'> &\n  Partial<Pick<Node<NodeData>, 'position'>>\n\nexport const addAlgorithmNode = createAsyncThunk<\n  ParamDTO,\n  {\n    node: AddingNodeData\n    functionPath: string\n    name: string\n  }\n>(`${FLOW_ELEMENT_SLICE_NAME}/addAlgorithmNode`, async ({ name }, thunkAPI) => {\n  try {\n    const response = await getAlgoParamsApi(name)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const addInputNode = createAction<{\n  node: AddingNodeData\n  fileType: FILE_TYPE\n}>(`${FLOW_ELEMENT_SLICE_NAME}/addInputNode`)\n","import { customAlphabet } from 'nanoid/non-secure'\n\nconst nanoid = customAlphabet('0123456789abcdefghijklmnopqrstuvwxyz', 10)\n\nexport const getNanoId = () => {\n  return nanoid()\n}\n","export const INITIAL_IMAGE_ELEMENT_ID = 'input_0'\nexport const INITIAL_IMAGE_ELEMENT_NAME = 'NoName'\n\nexport const INITIAL_ALGO_STYLE: React.CSSProperties = {\n  width: 180,\n  height: 100,\n  padding: 0,\n  borderRadius: 0,\n} as const\n\nexport const INITIAL_DATA_STYLE: React.CSSProperties = {\n  border: '1px solid #777',\n  height: 120,\n} as const\n\nexport const REACT_FLOW_NODE_TYPE_KEY = {\n  ImageFileNode: 'ImageFileNode',\n  CsvFileNode: 'CsvFileNode',\n  HDF5FileNode: 'HDF5FileNode',\n  FluoFileNode: 'FluoFileNode',\n  AlgorithmNode: 'AlgorithmNode',\n  BehaviorFileNode: 'BehaviorFileNode',\n} as const\n\nexport type REACT_FLOW_NODE_TYPE =\n  typeof REACT_FLOW_NODE_TYPE_KEY[keyof typeof REACT_FLOW_NODE_TYPE_KEY]\n","export const DND_ITEM_TYPE_SET = {\n  TREE_ITEM: 'TREE_ITEM',\n} as const\n\nexport type DND_ITEM_TYPE =\n  typeof DND_ITEM_TYPE_SET[keyof typeof DND_ITEM_TYPE_SET]\n\nexport type TreeItemDragObject = {}\n\nexport type TreeItemDropResult = {\n  position?: { x: number; y: number }\n}\n\nexport type TreeItemCollectedProps = {\n  isDragging: boolean\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem'\nimport { styled, Typography } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport IconButton from '@mui/material/IconButton'\nimport AddIcon from '@mui/icons-material/Add'\nimport { useDrag } from 'react-dnd'\n\nimport {\n  selectAlgorithmListIsLated,\n  selectAlgorithmListTree,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport {\n  AlgorithmChild,\n  AlgorithmNodeType,\n} from 'store/slice/AlgorithmList/AlgorithmListType'\nimport { isAlgoChild } from 'store/slice/AlgorithmList/AlgorithmListUtils'\nimport { getAlgoList } from 'store/slice/AlgorithmList/AlgorithmListActions'\nimport { FILE_TYPE, FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  NODE_TYPE,\n  NODE_TYPE_SET,\n} from 'store/slice/FlowElement/FlowElementType'\nimport {\n  addAlgorithmNode,\n  addInputNode,\n} from 'store/slice/FlowElement/FlowElementActions'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport { REACT_FLOW_NODE_TYPE, REACT_FLOW_NODE_TYPE_KEY } from 'const/flowchart'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\n\nexport const AlgorithmTreeView = React.memo(() => {\n  const dispatch = useDispatch()\n  const algoList = useSelector(selectAlgorithmListTree)\n  const isLatest = useSelector(selectAlgorithmListIsLated)\n\n  useEffect(() => {\n    if (!isLatest) {\n      dispatch(getAlgoList())\n    }\n  }, [dispatch, isLatest])\n\n  const onAddAlgoNode = React.useCallback(\n    (\n      nodeName: string,\n      functionPath: string,\n      position?: { x: number; y: number },\n    ) => {\n      const name = nodeName\n      const newNode = {\n        id: `${name}_${getNanoId()}`,\n        type: REACT_FLOW_NODE_TYPE_KEY.AlgorithmNode,\n        data: { label: name, type: NODE_TYPE_SET.ALGORITHM },\n        position,\n      }\n      dispatch(\n        addAlgorithmNode({\n          node: newNode,\n          name,\n          functionPath,\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  return (\n    <TreeView\n      sx={{\n        flexGrow: 1,\n        height: '100%',\n      }}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId=\"Data\" label=\"Data\">\n        <InputNodeComponent\n          fileName={'image'}\n          nodeName={'imageData'}\n          fileType={FILE_TYPE_SET.IMAGE}\n        />\n        <InputNodeComponent\n          fileName={'csv'}\n          nodeName={'csvData'}\n          fileType={FILE_TYPE_SET.CSV}\n        />\n        <InputNodeComponent\n          fileName={'hdf5'}\n          nodeName={'hdf5Data'}\n          fileType={FILE_TYPE_SET.HDF5}\n        />\n        <InputNodeComponent\n          fileName={'fluo'}\n          nodeName={'fluoData'}\n          fileType={FILE_TYPE_SET.FLUO}\n        />\n        <InputNodeComponent\n          fileName={'behavior'}\n          nodeName={'behaviorData'}\n          fileType={FILE_TYPE_SET.BEHAVIOR}\n        />\n      </TreeItem>\n      <TreeItem nodeId=\"Algorithm\" label=\"Algorithm\">\n        {Object.entries(algoList).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            onAddAlgoNode={onAddAlgoNode}\n            key={i.toFixed()}\n          />\n        ))}\n      </TreeItem>\n    </TreeView>\n  )\n})\n\nconst InputNodeComponent = React.memo<{\n  fileName: string\n  nodeName: string\n  fileType: FILE_TYPE\n}>(({ fileName, nodeName, fileType }) => {\n  const dispatch = useDispatch()\n\n  const onAddDataNode = React.useCallback(\n    (\n      nodeType: NODE_TYPE,\n      nodeName: string,\n      fileType: FILE_TYPE,\n      position?: { x: number; y: number },\n    ) => {\n      let reactFlowNodeType: REACT_FLOW_NODE_TYPE | '' = ''\n      switch (fileType) {\n        case FILE_TYPE_SET.CSV:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.CsvFileNode\n          break\n        case FILE_TYPE_SET.IMAGE:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.ImageFileNode\n          fileType = FILE_TYPE_SET.IMAGE\n          break\n        case FILE_TYPE_SET.HDF5:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.HDF5FileNode\n          fileType = FILE_TYPE_SET.HDF5\n          break\n        case FILE_TYPE_SET.FLUO:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.FluoFileNode\n          fileType = FILE_TYPE_SET.FLUO\n          break\n        case FILE_TYPE_SET.BEHAVIOR:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.BehaviorFileNode\n          fileType = FILE_TYPE_SET.BEHAVIOR\n          break\n      }\n      const newNode = {\n        id: `input_${getNanoId()}`,\n        type: reactFlowNodeType,\n        data: { label: nodeName, type: nodeType },\n        position,\n      }\n      dispatch(addInputNode({ node: newNode, fileType }))\n    },\n    [dispatch],\n  )\n\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType, position)\n      },\n      [onAddDataNode, nodeName, fileType],\n    ),\n  )\n\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={fileName}\n      label={\n        <AddButton\n          name={fileName}\n          onClick={() => onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType)}\n        />\n      }\n    />\n  )\n})\n\nconst AlgoNodeComponentRecursive = React.memo<{\n  name: string\n  node: AlgorithmNodeType\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  if (isAlgoChild(node)) {\n    return (\n      <AlgoNodeComponent\n        name={name}\n        node={node}\n        onAddAlgoNode={onAddAlgoNode}\n      />\n    )\n  } else {\n    return (\n      <TreeItem nodeId={name} label={name}>\n        {Object.entries(node.children).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            key={i.toFixed()}\n            onAddAlgoNode={onAddAlgoNode}\n          />\n        ))}\n      </TreeItem>\n    )\n  }\n})\n\nconst AlgoNodeComponent = React.memo<{\n  name: string\n  node: AlgorithmChild\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddAlgoNode(name, node.functionPath, position)\n      },\n      [onAddAlgoNode, name, node],\n    ),\n  )\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={name}\n      label={\n        <AddButton\n          name={name}\n          onClick={() => onAddAlgoNode(name, node.functionPath)}\n        />\n      }\n    />\n  )\n})\n\nconst AddButton = React.memo<{\n  name: string\n  onClick: () => void\n}>(({ name, onClick }) => {\n  return (\n    <>\n      <IconButton aria-label=\"add\" style={{ padding: 2 }} size=\"large\">\n        <AddIcon onClick={() => onClick()} />\n      </IconButton>\n      <Typography\n        variant=\"inherit\"\n        style={{\n          textOverflow: 'ellipsis',\n          overflow: 'visible',\n          width: '8rem',\n          display: 'inline-block',\n        }}\n      >\n        {name}\n      </Typography>\n    </>\n  )\n})\n\n// 未使用icon分の幅を消す\nconst LeafItem = styled(TreeItem)({\n  // background: 'red',\n  [`& .${treeItemClasses.iconContainer}`]: {\n    margin: 0,\n    width: 0,\n  },\n})\n\nfunction useLeafItemDrag(\n  onDragEnd: (positon: { x: number; y: number }) => void,\n) {\n  const [{ isDragging }, dragRef] = useDrag<\n    TreeItemDragObject,\n    TreeItemDropResult,\n    TreeItemCollectedProps\n  >(\n    () => ({\n      type: DND_ITEM_TYPE_SET.TREE_ITEM,\n      end: (_, monitor) => {\n        const position = monitor.getDropResult()?.position\n        if (monitor.didDrop() && position != null) {\n          onDragEnd(position)\n        }\n      },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [onDragEnd],\n  )\n  return { isDragging, dragRef }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nimport { INPUT_NODE_SLICE_NAME } from './InputNodeType'\n\nexport const setInputNodeFilePath = createAction<{\n  nodeId: string\n  filePath: string | string[]\n}>(`${INPUT_NODE_SLICE_NAME}/setInputNodeFilePath`)\n","import type { Node } from 'react-flow-renderer'\nimport {\n  isInputNodeData,\n  isAlgorithmNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport type {\n  NodePostDataType,\n  InputNodePostData,\n  AlgorithmNodePostData,\n} from './Run'\n\nexport function isInputNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<InputNodePostData> {\n  return isInputNodeData(node)\n}\n\nexport function isAlgorithmNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<AlgorithmNodePostData> {\n  return isAlgorithmNodeData(node)\n}\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport const FILE_TREE_TYPE_SET = {\n  IMAGE: 'image',\n  CSV: 'csv',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  ALL: 'all',\n} as const\n\nexport type FILE_TREE_TYPE =\n  typeof FILE_TREE_TYPE_SET[keyof typeof FILE_TREE_TYPE_SET]\n\nexport type TreeNodeTypeDTO = DirNodeDTO | FileNodeDTO\n\nexport interface NodeBaseDTO {\n  path: string\n  name: string\n  isdir: boolean\n}\n\nexport interface DirNodeDTO extends NodeBaseDTO {\n  isdir: true\n  nodes: TreeNodeTypeDTO[]\n}\n\nexport interface FileNodeDTO extends NodeBaseDTO {\n  isdir: false\n}\n\nexport async function getFilesTreeApi(\n  workspaceId: number,\n  fileType: FILE_TREE_TYPE,\n): Promise<TreeNodeTypeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/files/${workspaceId}`, {\n    params: {\n      file_type: fileType,\n    },\n  })\n  return response.data\n}\n\nexport async function uploadFileApi(\n  workspaceId: number,\n  fileName: string,\n  config: {\n    onUploadProgress: (progressEvent: any) => void\n  },\n  formData: FormData,\n): Promise<{ file_path: string }> {\n  const response = await axios.post(\n    `${BASE_URL}/files/${workspaceId}/upload/${fileName}`,\n    formData,\n    config,\n  )\n  return response.data\n}\n","export const FILE_UPLOADER_SLICE_NAME = 'fileUploader'\n\nexport type FileUploader = {\n  [id: string]: FileUploaderType\n}\n\nexport type FileUploaderType = {\n  path?: string\n  fileName?: string\n  isUninitialized: boolean\n  pending: boolean\n  fulfilled: boolean\n  uploadingProgress?: number\n  error?: string\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { uploadFileApi } from 'api/files/Files'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\nimport { FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\n\nexport const setUploadProgress = createAction<{\n  requestId: string\n  progess: number\n  total: number\n}>(`${FILE_UPLOADER_SLICE_NAME}/setUploadProgress`)\n\nexport const uploadFile = createAsyncThunk<\n  {\n    resultPath: string\n  },\n  {\n    workspaceId: number\n    requestId: string\n    nodeId?: string\n    fileName: string\n    formData: FormData\n    fileType?: FILE_TYPE\n  }\n>(\n  `${FILE_UPLOADER_SLICE_NAME}/uploadFile`,\n  async ({ workspaceId, requestId, fileName, formData }, thunkAPI) => {\n    try {\n      const config = getUploadConfig((percent, total) => {\n        thunkAPI.dispatch(\n          setUploadProgress({\n            requestId,\n            progess: percent,\n            total,\n          }),\n        )\n      })\n      const response = await uploadFileApi(\n        workspaceId,\n        fileName,\n        config,\n        formData,\n      )\n      return {\n        resultPath: response.file_path,\n      }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nfunction getUploadConfig(\n  onUpdateProgressFn: (percent: number, totalSize: number) => void,\n) {\n  return {\n    onUploadProgress: function (progressEvent: any) {\n      const percentCompleted = Math.round(\n        (progressEvent.loaded * 100) / progressEvent.total,\n      )\n      onUpdateProgressFn(percentCompleted, progressEvent.total)\n    },\n  }\n}\n","import { createSlice, PayloadAction, isAnyOf } from '@reduxjs/toolkit'\nimport {\n  Node,\n  NodeChange,\n  Edge,\n  EdgeChange,\n  applyNodeChanges,\n  applyEdgeChanges,\n  Position,\n  Transform,\n} from 'react-flow-renderer'\nimport {\n  FLOW_ELEMENT_SLICE_NAME,\n  FlowElement,\n  NODE_TYPE_SET,\n  NodeData,\n  ElementCoord,\n} from './FlowElementType'\nimport {\n  INITIAL_ALGO_STYLE,\n  INITIAL_DATA_STYLE,\n  INITIAL_IMAGE_ELEMENT_ID,\n  INITIAL_IMAGE_ELEMENT_NAME,\n  REACT_FLOW_NODE_TYPE_KEY,\n} from 'const/flowchart'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { addAlgorithmNode, addInputNode } from './FlowElementActions'\nimport { getLabelByPath } from './FlowElementUtils'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\n\nconst initialNodes: Node<NodeData>[] = [\n  {\n    id: INITIAL_IMAGE_ELEMENT_ID,\n    type: REACT_FLOW_NODE_TYPE_KEY.ImageFileNode,\n    data: {\n      type: NODE_TYPE_SET.INPUT,\n      label: INITIAL_IMAGE_ELEMENT_NAME,\n    },\n    style: INITIAL_DATA_STYLE,\n    position: { x: 50, y: 150 },\n  },\n]\n\nconst initialFlowPosition: Transform = [0, 0, 0.7] // [x, y, zoom]\n\nconst initialElementCoord: ElementCoord = {\n  x: 100,\n  y: 150,\n}\n\nconst initialState: FlowElement = {\n  flowNodes: initialNodes,\n  flowEdges: [],\n  flowPosition: initialFlowPosition,\n  elementCoord: initialElementCoord,\n}\n\nexport const flowElementSlice = createSlice({\n  name: FLOW_ELEMENT_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFlowPosition: (state, action: PayloadAction<Transform>) => {\n      state.flowPosition = action.payload\n    },\n    setFlowNodes: (state, action: PayloadAction<Node[]>) => {\n      state.flowNodes = action.payload\n    },\n    setFlowEdges: (state, action: PayloadAction<Edge[]>) => {\n      state.flowEdges = action.payload\n    },\n    deleteFlowNodes: (state, action: PayloadAction<Node[]>) => {\n      state.flowNodes = applyNodeChanges(\n        action.payload.map((node) => {\n          return { id: node.id, type: 'remove' }\n        }),\n        state.flowNodes,\n      )\n    },\n    setNodesChange: (state, action: PayloadAction<NodeChange[]>) => {\n      state.flowNodes = applyNodeChanges(action.payload, state.flowNodes)\n    },\n    setEdgesChange: (state, action: PayloadAction<EdgeChange[]>) => {\n      state.flowEdges = applyEdgeChanges(action.payload, state.flowEdges)\n    },\n    deleteFlowEdgeById: (state, action: PayloadAction<string>) => {\n      const element = state.flowEdges.find((edge) => edge.id === action.payload)\n      if (element !== undefined) {\n        state.flowEdges = applyEdgeChanges(\n          [{ id: element.id, type: 'remove' }],\n          state.flowEdges,\n        )\n      }\n    },\n    deleteFlowNodeById: (state, action: PayloadAction<string>) => {\n      const element = state.flowNodes.find((node) => node.id === action.payload)\n      if (element !== undefined) {\n        state.flowNodes = applyNodeChanges(\n          [{ id: element.id, type: 'remove' }],\n          state.flowNodes,\n        )\n        state.flowEdges = applyEdgeChanges(\n          state.flowEdges\n            .filter((edge) => {\n              return (\n                edge.source === action.payload || edge.target === action.payload\n              )\n            })\n            .map((edge) => {\n              return { id: edge.id, type: 'remove' }\n            }),\n          state.flowEdges,\n        )\n      }\n    },\n    editFlowNodePositionById: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        coord: {\n          x: number\n          y: number\n        }\n      }>,\n    ) => {\n      let { nodeId, coord } = action.payload\n      const elementIdx = state.flowNodes.findIndex((node) => node.id === nodeId)\n      const targetItem = state.flowNodes[elementIdx]\n      targetItem.position = coord\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        let { node } = action.meta.arg\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_ALGO_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowNodes.push({ ...node, position: node.position })\n        } else {\n          state.flowNodes.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        let { node } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_DATA_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowNodes.push({ ...node, position: node.position })\n        } else {\n          state.flowNodes.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(setInputNodeFilePath, (state, action) => {\n        let { nodeId, filePath } = action.payload\n        const label = getLabelByPath(filePath)\n        const nodeIdx = state.flowNodes.findIndex((node) => node.id === nodeId)\n        const targetNode = state.flowNodes[nodeIdx]\n        if (targetNode.data != null) {\n          targetNode.data.label = label\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const nodeIdx = state.flowNodes.findIndex(\n            (node) => node.id === nodeId,\n          )\n          const targetNode = state.flowNodes[nodeIdx]\n          if (targetNode.data != null) {\n            targetNode.data.label = getLabelByPath(action.payload.resultPath)\n          }\n        }\n      })\n      .addCase(fetchExperiment.rejected, () => initialState)\n      .addMatcher(\n        isAnyOf(importExperimentByUid.fulfilled, fetchExperiment.fulfilled),\n        (state, action) => {\n          state.flowPosition = initialFlowPosition\n          state.elementCoord = initialElementCoord\n          state.flowNodes = Object.values(action.payload.nodeDict).map(\n            (node) => {\n              if (isInputNodePostData(node)) {\n                return {\n                  ...node,\n                  data: {\n                    label: node.data?.label ?? '',\n                    type: node.data?.type ?? 'input',\n                  },\n                }\n              } else {\n                return {\n                  ...node,\n                  data: {\n                    label: node.data?.label ?? '',\n                    type: node.data?.type ?? 'algorithm',\n                  },\n                }\n              }\n            },\n          )\n          state.flowEdges = Object.values(action.payload.edgeDict)\n        },\n      ),\n})\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nfunction updateElementCoord(state: FlowElement) {\n  const { x } = state.elementCoord\n  if (x > 800) {\n    state.elementCoord.x = 300\n    state.elementCoord.y += 100\n  } else {\n    state.elementCoord.x += 250\n    state.elementCoord.y += getRandomArbitrary(-20, 20)\n  }\n}\n\nexport const {\n  setNodesChange,\n  setEdgesChange,\n  setFlowPosition,\n  setFlowNodes,\n  setFlowEdges,\n  deleteFlowNodes,\n  deleteFlowEdgeById,\n  deleteFlowNodeById,\n  editFlowNodePositionById,\n} = flowElementSlice.actions\n\nexport default flowElementSlice.reducer\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getNWBParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/nwb`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const NWB_SLICE_NAME = 'NWB'\n\nexport type NWBType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getNWBParamsApi } from 'api/nwb/NWB'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { NWB_SLICE_NAME } from './NWBType'\n\nexport const getNWBParams = createAsyncThunk<ParamDTO, void>(\n  `${NWB_SLICE_NAME}/getNWBParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getNWBParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getNWBParams } from './NWBAction'\nimport { NWBType, NWB_SLICE_NAME } from './NWBType'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\n\nconst initialState: NWBType = {\n  params: {},\n}\n\nexport const nwbSlice = createSlice({\n  name: NWB_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const targetNode = getChildParam(path, state.params)\n      if (targetNode != null) {\n        targetNode.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNWBParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = nwbSlice.actions\n\nexport default nwbSlice.reducer\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport {\n  deleteFlowNodes,\n  deleteFlowNodeById,\n} from '../FlowElement/FlowElementSlice'\n\ntype RightDrawer = {\n  open: boolean\n  mode: RIGHT_DRAWER_MODE_TYPE\n  currendNodeId: string | null\n}\n\nexport const RIGHT_DRAWER_MODE = {\n  NONE: 'none',\n  NWB: 'nwb',\n  PARAM_FORM: 'paramForm',\n  SNAKEMAKE: 'snakemake',\n} as const\n\nexport type RIGHT_DRAWER_MODE_TYPE =\n  typeof RIGHT_DRAWER_MODE[keyof typeof RIGHT_DRAWER_MODE]\n\nconst initialState: RightDrawer = {\n  open: false,\n  mode: RIGHT_DRAWER_MODE.NONE,\n  currendNodeId: null,\n}\nexport const rightDrawerSlice = createSlice({\n  name: 'rightDrawer',\n  initialState,\n  reducers: {\n    openRightDrawer: (state, action: PayloadAction<RIGHT_DRAWER_MODE_TYPE>) => {\n      state.open = true\n      state.mode = action.payload\n    },\n    closeRightDrawer: (state) => {\n      state.open = false\n      state.mode = RIGHT_DRAWER_MODE.NONE\n    },\n    toggleParamForm: (state, action: PayloadAction<string>) => {\n      if (\n        state.open &&\n        state.mode === RIGHT_DRAWER_MODE.PARAM_FORM &&\n        state.currendNodeId === action.payload\n      ) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n        state.currendNodeId = null\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.PARAM_FORM\n        state.currendNodeId = action.payload\n      }\n    },\n    toggleNwb: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.NWB) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.NWB\n      }\n      state.currendNodeId = null\n    },\n    toggleSnakemake: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.SNAKEMAKE) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.SNAKEMAKE\n      }\n      state.currendNodeId = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteFlowNodes, (state, action) => {\n        if (\n          action.payload.findIndex((elm) => elm.id === state.currendNodeId) > 0\n        ) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(deleteFlowNodeById, (state, action) => {\n        if (action.payload === state.currendNodeId) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, () => {\n        return initialState\n      })\n      .addMatcher(\n        isAnyOf(fetchExperiment.fulfilled, fetchExperiment.rejected),\n        () => initialState,\n      )\n  },\n})\n\nexport const {\n  toggleParamForm,\n  toggleNwb,\n  toggleSnakemake,\n  openRightDrawer,\n  closeRightDrawer,\n} = rightDrawerSlice.actions\n\nexport default rightDrawerSlice.reducer\n","import MuiAccordion, { AccordionProps } from '@mui/material/Accordion'\nimport { styled } from '@mui/material/styles'\n\nexport const Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: '1px solid',\n  borderColor: theme.palette.divider,\n  boxShadow: 'none',\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}))\n","import React, { useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport Switch from '@mui/material/Switch'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport Typography from '@mui/material/Typography'\n\nimport { isParamChild } from 'utils/param/ParamUtils'\nimport { ParamType } from 'utils/param/ParamType'\nimport { RootState } from 'store/store'\nimport { Accordion } from 'components/common/Accordion'\n\ntype ParamSelectorType = (paramKey: string) => (state: RootState) => ParamType\ntype ParamValueSelectorType = (path: string) => (state: RootState) => unknown\ntype ParamUpdateActionCreatorType = (\n  path: string,\n  newValue: unknown,\n) => AnyAction\n\nexport type CreateParamFormItemComponentProps = {\n  paramSelector: ParamSelectorType\n  paramValueSelector: ParamValueSelectorType\n  paramUpdateActionCreator: ParamUpdateActionCreatorType\n}\n\nexport function createParamFormItemComponent({\n  paramSelector,\n  paramValueSelector,\n  paramUpdateActionCreator,\n}: CreateParamFormItemComponentProps): React.FC<{ paramKey: string }> {\n  function useParamValueUpdate(\n    path: string,\n  ): [unknown, (newValue: unknown) => AnyAction] {\n    const value = useSelector(paramValueSelector(path))\n    const updateParamAction = (newValue: unknown) => {\n      return paramUpdateActionCreator(path, newValue)\n    }\n    return [value, updateParamAction]\n  }\n  const ParamItemForString = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    const isArray = useRef(Array.isArray(value))\n    const onChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(updateParamAction(newValue))\n    }\n\n    const onBlur = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(\n        updateParamAction(\n          newValue\n            .split(',')\n            .filter(Boolean)\n            .map((e) => Number(e)),\n        ),\n      )\n    }\n    return (\n      <TextField\n        value={value}\n        onChange={onChange}\n        multiline\n        onBlur={isArray ? onBlur : undefined}\n      />\n    )\n  })\n  const ParamItemForNumber = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue =\n          event.target.value === '' ? '' : Number(event.target.value)\n        if (typeof newValue === 'number') {\n          dispatch(updateParamAction(newValue))\n        }\n      }\n      return (\n        <TextField\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={value}\n          onChange={onChange}\n        />\n      )\n    } else {\n      return null\n    }\n  })\n  const ParamItemForBoolean = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'boolean') {\n      const onChange = () => {\n        dispatch(updateParamAction(!value))\n      }\n      return <Switch checked={value} onChange={onChange} />\n    } else {\n      return null\n    }\n  })\n  const ParamItemForValueType = React.memo<ParamChildItemProps>(({ path }) => {\n    const [value] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      return <ParamItemForNumber path={path} />\n    } else if (typeof value === 'string') {\n      return <ParamItemForString path={path} />\n    } else if (typeof value === 'boolean') {\n      return <ParamItemForBoolean path={path} />\n    } else {\n      return <ParamItemForString path={path} />\n    }\n  })\n  const ParamChildItem = React.memo<ParamChildItemProps & { name: string }>(\n    ({ path, name }) => {\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            marginTop: (theme) => theme.spacing(2),\n            marginBottom: (theme) => theme.spacing(2),\n            alignItems: 'center',\n            overflow: 'scroll',\n          }}\n        >\n          <Box\n            style={{ verticalAlign: 'middle' }}\n            sx={{\n              flexGrow: 1,\n              width: '50%',\n            }}\n          >\n            <Typography style={{ overflow: 'scroll' }}>{name}</Typography>\n          </Box>\n          <Box sx={{ width: '50%' }}>\n            <ParamItemForValueType path={path} />\n          </Box>\n        </Box>\n      )\n    },\n  )\n  const ParamItem = React.memo<ParamItemProps>(({ paramKey, param }) => {\n    if (isParamChild(param)) {\n      return <ParamChildItem path={param.path} name={paramKey} />\n    } else {\n      return (\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            {paramKey}\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              {Object.entries(param.children).map(([paramKey, param], i) => (\n                <ParamItem param={param} paramKey={paramKey} />\n              ))}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      )\n    }\n  })\n  return React.memo<{ paramKey: string }>(({ paramKey }) => {\n    const param = useSelector(paramSelector(paramKey)) // 一階層目\n    return <ParamItem paramKey={paramKey} param={param} />\n  })\n}\n\ntype ParamItemProps = {\n  paramKey: string\n  param: ParamType\n}\n\ntype ParamChildItemProps = {\n  path: string\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\nimport { updateParam } from 'store/slice/NWB/NWBSlice'\nimport { getNWBParams } from 'store/slice/NWB/NWBAction'\nimport { toggleNwb } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectNwbParam,\n  selectNwbParamsKeyList,\n  selectNwbParamsValue,\n} from 'store/slice/NWB/NWBSelectors'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const NWBSettingButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleNwb())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      NWB setting\n    </Button>\n  )\n})\n\nexport const NWBSettingContents = React.memo(() => {\n  const dispatch = useDispatch()\n\n  const paramKeyList = useSelector(selectNwbParamsKeyList, arrayEqualityFn)\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getNWBParams())\n    }\n  })\n\n  return (\n    <div className=\"nwbParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectNwbParam,\n    paramValueSelector: selectNwbParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getSnakemakeParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/snakemake`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const SNAKEMAKE_SLICE_NAME = 'Snakemake'\n\nexport type SnakemakeType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getSnakemakeParamsApi } from 'api/snakemake/Snakemake'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nexport const getSnakemakeParams = createAsyncThunk<ParamDTO, void>(\n  `${SNAKEMAKE_SLICE_NAME}/getSnakemakeParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = getSnakemakeParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport { getSnakemakeParams } from './SnakemakeAction'\nimport { SnakemakeType, SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nconst initialState: SnakemakeType = {\n  params: {},\n}\n\nexport const SnakemakeSlice = createSlice({\n  name: SNAKEMAKE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const target = getChildParam(path, state.params)\n      if (target != null) {\n        target.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getSnakemakeParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = SnakemakeSlice.actions\n\nexport default SnakemakeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\n\nimport { updateParam } from 'store/slice/Snakemake/SnakemakeSlice'\nimport { getSnakemakeParams } from 'store/slice/Snakemake/SnakemakeAction'\nimport { toggleSnakemake } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport {\n  selectSnakemakeParam,\n  selectSnakemakeParamsKeyList,\n  selectSnakemakeParamsValue,\n} from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const SnakemakeButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleSnakemake())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      Snakemake\n    </Button>\n  )\n})\n\nexport const SnakemakeContents = React.memo(() => {\n  const dispatch = useDispatch()\n  const paramKeyList = useSelector(\n    selectSnakemakeParamsKeyList,\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getSnakemakeParams())\n    }\n  })\n  return (\n    <div className=\"SnakemakeParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectSnakemakeParam,\n    paramValueSelector: selectSnakemakeParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\nimport Grow from '@mui/material/Grow'\nimport Paper from '@mui/material/Paper'\nimport Popper from '@mui/material/Popper'\nimport MenuItem from '@mui/material/MenuItem'\nimport MenuList from '@mui/material/MenuList'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nimport { useSnackbar } from 'notistack'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport {\n  RUN_BTN_LABELS,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n} from 'store/slice/Pipeline/PipelineType'\nimport {selectPipelineIsStartedSuccess, selectPipelineRunBtn} from 'store/slice/Pipeline/PipelineSelectors'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\n\nexport const RunButtons = React.memo<UseRunPipelineReturnType>((props) => {\n  const {\n    uid,\n    runDisabled,\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    handleCancelPipeline,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const runBtnOption = useSelector(selectPipelineRunBtn)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n\n  const [dialogOpen, setDialogOpen] = React.useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n  const handleClick = () => {\n    let errorMessage: string | null = null\n    if (algorithmNodeNotExist) {\n      errorMessage = 'please add some algorithm nodes to the flowchart'\n    }\n    if (filePathIsUndefined) {\n      errorMessage = 'please select input file'\n    }\n    if (errorMessage != null) {\n      enqueueSnackbar(errorMessage, {\n        variant: 'error',\n      })\n    } else {\n      if (runBtnOption === RUN_BTN_OPTIONS.RUN_NEW) {\n        setDialogOpen(true)\n      } else {\n        handleRunPipelineByUid()\n      }\n    }\n  }\n  const onClickDialogRun = (name: string) => {\n    handleRunPipeline(name)\n    setDialogOpen(false)\n  }\n  const onClickCancel = () => {\n    handleCancelPipeline()\n  }\n  const [menuOpen, setMenuOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLDivElement>(null)\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    option: RUN_BTN_TYPE,\n  ) => {\n    dispatch(setRunBtnOption({ runBtnOption: option }))\n    setMenuOpen(false)\n  }\n  const handleToggle = () => {\n    setMenuOpen((prevOpen) => !prevOpen)\n  }\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n    setMenuOpen(false)\n  }\n  const uidExists = uid != null\n  return (\n    <>\n      <ButtonGroup\n        sx={{\n          margin: 1,\n        }}\n        variant=\"contained\"\n        ref={anchorRef}\n        disabled={runDisabled}\n      >\n        <Button onClick={handleClick}>{RUN_BTN_LABELS[runBtnOption]}</Button>\n        <Button size=\"small\" onClick={handleToggle}>\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={menuOpen}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList>\n                  {Object.values(RUN_BTN_OPTIONS).map((option) => (\n                    <MenuItem\n                      key={option}\n                      disabled={\n                        !uidExists && option === RUN_BTN_OPTIONS.RUN_ALREADY\n                      }\n                      selected={option === runBtnOption}\n                      onClick={(event) => handleMenuItemClick(event, option)}\n                    >\n                      {RUN_BTN_LABELS[option]}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n      <Button\n          disabled={!isStartedSuccess}\n          variant=\"outlined\"\n          endIcon={<CloseIcon />}\n          onClick={onClickCancel}\n          sx={{\n            margin: 1,\n            marginRight: 4,\n          }}\n      >\n        Cancel\n      </Button>\n      <RunDialog\n        open={dialogOpen}\n        handleRun={onClickDialogRun}\n        handleClose={() => setDialogOpen(false)}\n      />\n    </>\n  )\n})\n\nconst RunDialog = React.memo<{\n  open: boolean\n  handleRun: (name: string) => void\n  handleClose: () => void\n}>(({ open, handleClose, handleRun }) => {\n  const [name, setName] = React.useState('New flow')\n  const [error, setError] = React.useState<string | null>(null)\n  const onClickRun = () => {\n    if (name !== '') {\n      handleRun(name)\n    } else {\n      setError('name is empty')\n    }\n  }\n  const onChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    if (event.target.value !== '') {\n      setError(null)\n    }\n  }\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Name and run flowchart</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"name\"\n          autoFocus\n          margin=\"dense\"\n          fullWidth\n          variant=\"standard\"\n          onChange={onChangeName}\n          error={error != null}\n          helperText={error}\n          value={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"inherit\" variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button onClick={onClickRun} color=\"primary\" variant=\"outlined\">\n          Run\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","import React from 'react'\nimport Box from '@mui/material/Box'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { NWBSettingButton } from './FlowChart/NWB'\nimport { SnakemakeButton } from './FlowChart/Snakemake'\nimport { RunButtons } from './RunButtons'\nimport { Button } from '@mui/material'\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'\nimport { useNavigate } from 'react-router-dom'\nimport { IS_STANDALONE } from 'const/Mode'\n\nexport const ToolBar = React.memo<UseRunPipelineReturnType>((props) => {\n  const navigate = useNavigate()\n  return (\n    <Box\n      style={{\n        position: 'absolute',\n        float: 'right',\n        textAlign: 'right',\n        top: -7,\n        right: 10,\n        zIndex: 4,\n        textTransform: 'none',\n        fontSize: '1rem',\n      }}\n    >\n      { !IS_STANDALONE &&\n        (\n          <Button onClick={() => navigate('/console/workspaces')}>\n            <ArrowBackIosIcon />\n            Workspaces\n          </Button>\n        )\n      }\n      <SnakemakeButton />\n      <NWBSettingButton />\n      <RunButtons {...props} />\n    </Box>\n  )\n})\n","import { useSelector } from 'react-redux'\nimport { selectHandleTypeColor } from 'store/slice/HandleTypeColor/HandleTypeColorSelectors'\n\nexport function useHandleColor(type: string) {\n  const color = useSelector(selectHandleTypeColor(type))\n  return color\n}\n","import { RootState } from '../../store'\n\nexport const selectHandleTypeColor = (key: string) => (state: RootState) => {\n  if (state.handleColor.colorMap[key] != null) {\n    return state.handleColor.colorMap[key]\n  } else {\n    return undefined\n  }\n}\n","import React from 'react'\nimport LinearProgress, {\n  LinearProgressProps,\n} from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\n\nexport const LinearProgressWithLabel = React.memo<\n  LinearProgressProps & { value: number }\n>((props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  )\n})\n","import { FileUploaderType } from './FileUploaderType'\n\nexport const inistialUploaderState: FileUploaderType = {\n  path: undefined,\n  fileName: undefined,\n  isUninitialized: true,\n  pending: false,\n  fulfilled: false,\n  uploadingProgress: undefined,\n  error: undefined,\n}\n","import { RootState } from 'store/store'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nexport const selectFileUploader = (id: string) => (state: RootState) => {\n  if (Object.keys(state.fileUploader).includes(id)) {\n    return state.fileUploader[id]\n  } else {\n    return inistialUploaderState\n  }\n}\n\nexport const selectUploadFilePath = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).path\n\nexport const selectUploadFileName = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fileName\n\nexport const selectFileUploadIsUninitialized =\n  (id: string) => (state: RootState) =>\n    selectFileUploader(id)(state).isUninitialized\n\nexport const selectFileUploadIsPending = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).pending\n\nexport const selectFileUploadIsFulfilled = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fulfilled\n\nexport const selectFileUploadProgress = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).uploadingProgress\n\nexport const selectFileUploadError = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).error\n","import { nanoid } from '@reduxjs/toolkit'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uploadFile } from './FileUploaderActions'\nimport {\n  selectFileUploadIsPending,\n  selectUploadFilePath,\n  selectFileUploadIsFulfilled,\n  selectFileUploadProgress,\n  selectFileUploadIsUninitialized,\n  selectFileUploadError,\n} from './FileUploaderSelectors'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { selectCurrentWorkspaceId } from '../Workspace/WorkspaceSelector'\n\ntype UseFileUploaderProps = {\n  fileType?: FILE_TYPE\n  nodeId?: string\n}\n\nexport function useFileUploader({ fileType, nodeId }: UseFileUploaderProps) {\n  const dispatch = useDispatch()\n  const id = React.useRef(nanoid())\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const onUploadFile = React.useCallback(\n    (formData: FormData, fileName: string) => {\n      if (workspaceId) {\n        dispatch(\n          uploadFile({\n            workspaceId,\n            requestId: id.current,\n            nodeId,\n            fileName,\n            formData,\n            fileType,\n          }),\n        )\n      } else {\n        throw new Error('workspaceId is undefined')\n      }\n    },\n    [dispatch, workspaceId, fileType, nodeId],\n  )\n  const uninitialized = useSelector(selectFileUploadIsUninitialized(id.current))\n  const filePath = useSelector(selectUploadFilePath(id.current))\n  const pending = useSelector(selectFileUploadIsPending(id.current))\n  const fulfilled = useSelector(selectFileUploadIsFulfilled(id.current))\n  const progress = useSelector(selectFileUploadProgress(id.current))\n  const error = useSelector(selectFileUploadError(id.current))\n  return {\n    filePath,\n    uninitialized,\n    pending,\n    fulfilled,\n    progress,\n    error,\n    onUploadFile,\n  }\n}\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { createContext } from 'react'\n\nexport declare type OpenDialogValue = {\n  filePath: string | string[]\n  open: boolean\n  fileTreeType?: FILE_TREE_TYPE\n  multiSelect: boolean\n  onSelectFile: (path: string | string[]) => void\n}\n\nexport declare type ErrorDialogValue = {\n  anchorElRef: { current: Element | null }\n  message: string\n}\n\nexport const DialogContext = createContext<{\n  onOpen: (nodeId: string) => void\n  onOpenDialogFile: (value: OpenDialogValue) => void\n  onMessageError: (value: ErrorDialogValue) => void\n}>({\n  onOpen: () => null,\n  onOpenDialogFile: () => null,\n  onMessageError: () => null,\n})\n","import React, { useContext } from 'react'\nimport { Button, Typography } from '@mui/material'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { LinearProgressWithLabel } from './LinerProgressWithLabel'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { getLabelByPath } from 'store/slice/FlowElement/FlowElementUtils'\nimport { DialogContext } from 'components/Workspace/FlowChart/DialogContext'\n\nexport const FileSelect = React.memo<{\n  multiSelect?: boolean\n  filePath: string | string[]\n  fileType: FILE_TYPE\n  nodeId?: string\n  onChangeFilePath: (path: string | string[]) => void\n}>(({ multiSelect = false, filePath, nodeId, fileType, onChangeFilePath }) => {\n  const {\n    // filePath: uploadedFilePath,\n    onUploadFile,\n    pending,\n    uninitialized,\n    progress,\n    error,\n  } = useFileUploader({ fileType, nodeId })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n  return (\n    <>\n      {!uninitialized && pending && progress != null && (\n        <div style={{ marginLeft: 2, marginRight: 2 }}>\n          <LinearProgressWithLabel value={progress} />\n        </div>\n      )}\n      <FileSelectImple\n        multiSelect={multiSelect}\n        filePath={filePath}\n        onSelectFile={onChangeFilePath}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={fileType}\n        selectButtonLabel={`Select ${fileType}`}\n      />\n      {error != null && (\n        <Typography variant=\"caption\" color=\"error\">\n          {error}\n        </Typography>\n      )}\n    </>\n  )\n})\n\ntype FileSelectImpleProps = {\n  multiSelect?: boolean\n  filePath: string | string[]\n  onUploadFile: (formData: FormData, fileName: string) => void\n  onSelectFile: (path: string | string[]) => void\n  fileTreeType?: FILE_TREE_TYPE\n  selectButtonLabel?: string\n  uploadButtonLabel?: string\n}\n\nexport const FileSelectImple = React.memo<FileSelectImpleProps>(\n  ({\n    multiSelect = false,\n    filePath,\n    onSelectFile,\n    onUploadFile,\n    fileTreeType,\n    selectButtonLabel,\n    uploadButtonLabel,\n  }) => {\n    const { onOpenDialogFile } = useContext(DialogContext)\n\n    const onFileInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.preventDefault()\n      if (event.target.files != null && event.target.files[0] != null) {\n        const file = event.target.files[0]\n        const formData = new FormData()\n        formData.append('file', file)\n        const fileName = file.name\n        onUploadFile(formData, fileName)\n      }\n    }\n    const inputRef = React.useRef<HTMLInputElement>(null)\n    const onClick = () => {\n      if (inputRef.current != null) {\n        inputRef.current.click()\n      }\n    }\n    const accept = getFileInputAccept(fileTreeType)\n    const fileName = getLabelByPath(filePath)\n    return (\n      <div\n        style={{\n          padding: 5,\n        }}\n      >\n        <ButtonGroup size=\"small\" style={{ marginRight: 4 }}>\n          <Button\n            variant=\"outlined\"\n            onClick={() => {\n              onOpenDialogFile({\n                open: true,\n                multiSelect,\n                filePath,\n                fileTreeType,\n                onSelectFile,\n              })\n            }}\n          >\n            {!!selectButtonLabel ? selectButtonLabel : 'Select File'}\n          </Button>\n          <Button onClick={onClick} variant=\"outlined\">\n            {!!uploadButtonLabel ? uploadButtonLabel : 'Load'}\n          </Button>\n        </ButtonGroup>\n        <div>\n          <input\n            ref={inputRef}\n            type=\"file\"\n            onChange={onFileInputChange}\n            accept={accept}\n            style={{\n              visibility: 'hidden',\n              width: 0,\n              height: 0,\n            }}\n          />\n          <Typography className=\"selectFilePath\" variant=\"caption\">\n            {!!fileName ? fileName : 'No file is selected.'}\n          </Typography>\n        </div>\n      </div>\n    )\n  },\n)\n\nfunction getFileInputAccept(fileType: FILE_TREE_TYPE | undefined) {\n  switch (fileType) {\n    case FILE_TREE_TYPE_SET.IMAGE:\n      return '.tif,.tiff'\n    case FILE_TREE_TYPE_SET.CSV:\n      return '.csv'\n    case FILE_TREE_TYPE_SET.HDF5:\n      return '.hdf5,.nwb'\n    default:\n      return undefined\n  }\n}\n","import { Connection } from 'react-flow-renderer'\n\nexport function toHandleId(nodeId: string, name: string, type: string) {\n  return `${nodeId}--${name}--${type}`\n}\n\nexport function getHandleType(handleId: string) {\n  return handleId.split('--')[2]\n}\n\nexport function isValidConnection(connection: Connection) {\n  if (connection.sourceHandle != null && connection.targetHandle != null) {\n    return (\n      getHandleType(connection.sourceHandle) ===\n      getHandleType(connection.targetHandle)\n    )\n  } else {\n    return true\n  }\n}\n","import React, { CSSProperties } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport {\n  selectImageInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { FileSelect } from './FileSelect'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\n// Connection部分のレイアウト\nconst sourceHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  top: 15,\n  border: '1px solid',\n  // borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const ImageFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <ImageFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst ImageFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected: elementSelected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectImageInputNodeSelectedFilePath(nodeId),\n      (a, b) => (a != null && b != null ? arrayEqualityFn(a, b) : a === b),\n    )\n    const onChangeFilePath = (path: string[]) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n\n    const theme = useTheme()\n    const returnType = 'ImageData'\n    const imageColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowNodeById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '250px',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          multiSelect\n          onChangeFilePath={(path) => {\n            if (Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.IMAGE}\n          filePath={filePath ?? []}\n        />\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'image', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: imageColor,\n          }}\n          isValidConnection={isValidConnection}\n        />\n      </div>\n    )\n  },\n)\n","import React, { CSSProperties, useContext } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport {\n  alpha,\n  Typography,\n  useTheme,\n  Tooltip,\n  IconButton,\n  Button,\n  LinearProgress,\n  ButtonGroup,\n} from '@mui/material'\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded'\nimport ErrorIcon from '@mui/icons-material/Error'\n\nimport { AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  selectAlgoArgs,\n  selectAlgoReturns,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { selectAlgorithmNodeDefined } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { toggleParamForm } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultMessage,\n  selectPipelineNodeResultStatus,\n  selectPipelineStatus,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\nimport {\n  NODE_RESULT_STATUS,\n  RUN_STATUS,\n} from 'store/slice/Pipeline/PipelineType'\nimport { DialogContext } from 'components/Workspace/FlowChart/DialogContext'\n\nconst leftHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\nconst rightHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\n\nexport const AlgorithmNode = React.memo<NodeProps<NodeData>>((element) => {\n  const defined = useSelector(selectAlgorithmNodeDefined(element.id))\n  if (defined) {\n    return <AlgorithmNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst AlgorithmNodeImple = React.memo<NodeProps<NodeData>>(\n  ({ id: nodeId, selected: elementSelected, isConnectable, data }) => {\n    const { onOpen } = useContext(DialogContext)\n    const theme = useTheme()\n    const dispatch = useDispatch()\n\n    const onClickParamButton = () => {\n      dispatch(toggleParamForm(nodeId))\n    }\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowNodeById(nodeId))\n    }\n\n    const onClickOutputButton = () => {\n      onOpen(nodeId)\n    }\n\n    const status = useStatus(nodeId)\n\n    return (\n      <div\n        tabIndex={0}\n        style={{\n          width: '100%',\n          height: '110%',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.15)\n            : undefined,\n          border: '1px solid',\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <AlgoName nodeId={nodeId} data={data} />\n        <ButtonGroup sx={{ mx: 1 }}>\n          <Button size=\"small\" onClick={onClickParamButton}>\n            Param\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={onClickOutputButton}\n            disabled={status !== NODE_RESULT_STATUS.SUCCESS}\n          >\n            Output\n          </Button>\n        </ButtonGroup>\n        <AlgoArgs nodeId={nodeId} />\n        <AlgoReturns nodeId={nodeId} isConnectable={isConnectable} />\n        <Message nodeId={nodeId} />\n      </div>\n    )\n  },\n)\n\nconst AlgoName = React.memo<{\n  nodeId: string\n  data: NodeData\n}>(({ nodeId, data }) => {\n  const theme = useTheme()\n  const status = useStatus(nodeId)\n  const pipelineStatus = useSelector(selectPipelineStatus)\n  return (\n    <div\n      style={{\n        padding: 8,\n        paddingLeft: 8,\n        width: '100%',\n      }}\n      className=\"algoName\"\n    >\n      {pipelineStatus === RUN_STATUS.START_SUCCESS &&\n        status === NODE_RESULT_STATUS.PENDING && <LinearProgress />}\n      <Typography\n        style={{\n          textAlign: 'left',\n          color:\n            status === NODE_RESULT_STATUS.ERROR\n              ? theme.palette.error.main\n              : undefined,\n        }}\n      >\n        {data.label}\n      </Typography>\n    </div>\n  )\n})\n\nconst AlgoArgs = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const algoArgs = useSelector(selectAlgoArgs(nodeId), algoInfoListEqualtyFn)\n\n  return (\n    <>\n      {algoArgs != null\n        ? algoArgs\n            .filter((info) => info.type !== 'params')\n            .map((algoInfo, i) => {\n              return <ArgHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n            })\n        : null}\n    </>\n  )\n})\n\nconst AlgoReturns = React.memo<{\n  nodeId: string\n  isConnectable: boolean\n}>(({ nodeId, isConnectable }) => {\n  const algoReturns = useSelector(\n    selectAlgoReturns(nodeId),\n    algoInfoListEqualtyFn,\n  )\n  return (\n    <>\n      {algoReturns != null ? (\n        algoReturns?.map((algoInfo, i) => {\n          return <ReturnHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n        })\n      ) : (\n        // algoReturns.lengthが0の場合の応急処置\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={`${nodeId}`}\n          style={{\n            ...rightHandleStyle,\n            top: 15,\n          }}\n          isConnectable={isConnectable}\n        />\n      )}\n    </>\n  )\n})\n\ntype HandleProps = {\n  algoInfo: AlgorithmInfo\n  nodeId: string\n  i: number\n}\n\nfunction hexToRgb(hex: string | undefined, isNone: boolean | undefined) {\n  if (hex !== undefined) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n    if (result !== null) {\n      if (isNone) {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 0.55)`\n      } else {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 1)`\n      }\n    } else {\n      return undefined\n    }\n  } else {\n    return undefined\n  }\n}\n\nconst ArgHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type, isNone }, nodeId, i }) => {\n    const hex_color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    const rgb_color = hexToRgb(hex_color, isNone)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"target\"\n        position={Position.Left}\n        id={id}\n        style={{\n          ...leftHandleStyle,\n          background: rgb_color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"left-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst ReturnHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type }, nodeId, i }) => {\n    const color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"source\"\n        position={Position.Right}\n        id={id}\n        style={{\n          ...rightHandleStyle,\n          background: color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"right-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst Message = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const status = useStatus(nodeId)\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const errorMsg = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultMessage(nodeId)(state) ?? null\n      : null,\n  )\n\n  const anchorElRef = React.useRef<HTMLButtonElement | null>(null)\n  const theme = useTheme()\n  const { onMessageError } = useContext(DialogContext)\n\n  if (status === NODE_RESULT_STATUS.ERROR) {\n    return (\n      <IconButton\n        ref={anchorElRef}\n        onClick={() => {\n          onMessageError({ anchorElRef, message: errorMsg as string })\n        }}\n        size=\"small\"\n        style={{ color: theme.palette.error.main, float: 'right' }}\n      >\n        <ErrorIcon />\n      </IconButton>\n    )\n  } else if (status === NODE_RESULT_STATUS.SUCCESS) {\n    return <CheckCircleRoundedIcon color=\"success\" sx={{ float: 'right' }} />\n  } else {\n    return null\n  }\n})\n\nfunction algoInfoListEqualtyFn(\n  a: AlgorithmInfo[] | undefined,\n  b: AlgorithmInfo[] | undefined,\n) {\n  if (a != null && b != null) {\n    return (\n      a === b ||\n      (a.length === b.length &&\n        a.every((v, i) => v.type === b[i].type && v.name === b[i].name))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction useStatus(nodeId: string) {\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const status = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultStatus(nodeId)(state)\n      : 'uninitialized',\n  )\n  return status\n}\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { INITIAL_IMAGE_ELEMENT_ID } from 'const/flowchart'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\nimport { addInputNode } from '../FlowElement/FlowElementActions'\nimport {\n  deleteFlowNodes,\n  deleteFlowNodeById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { setInputNodeFilePath } from './InputNodeActions'\nimport {\n  CsvInputParamType,\n  FILE_TYPE_SET,\n  InputNode,\n  INPUT_NODE_SLICE_NAME,\n} from './InputNodeType'\nimport { isCsvInputNode, isHDF5InputNode } from './InputNodeUtils'\n\nconst initialState: InputNode = {\n  [INITIAL_IMAGE_ELEMENT_ID]: {\n    fileType: FILE_TYPE_SET.IMAGE,\n    param: {},\n  },\n}\n\nexport const inputNodeSlice = createSlice({\n  name: INPUT_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    deleteInputNode(state, action: PayloadAction<string>) {\n      delete state[action.payload]\n    },\n    setCsvInputNodeParam(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: CsvInputParamType\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId]\n      if (isCsvInputNode(inputNode)) {\n        inputNode.param = param\n      }\n    },\n    setInputNodeHDF5Path(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n      }>,\n    ) {\n      const { nodeId, path } = action.payload\n      const item = state[nodeId]\n      if (isHDF5InputNode(item)) {\n        item.hdf5Path = path\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(setInputNodeFilePath, (state, action) => {\n        const { nodeId, filePath } = action.payload\n        const targetNode = state[nodeId]\n        targetNode.selectedFilePath = filePath\n        if (isHDF5InputNode(targetNode)) {\n          targetNode.hdf5Path = undefined\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        const { node, fileType } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          switch (fileType) {\n            case FILE_TYPE_SET.CSV:\n              state[node.id] = {\n                fileType,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.IMAGE:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.HDF5:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.FLUO:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.BEHAVIOR:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n          }\n        }\n      })\n      .addCase(deleteFlowNodes, (state, action) => {\n        action.payload.forEach((node) => {\n          if (node.data?.type === NODE_TYPE_SET.INPUT) {\n            delete state[node.id]\n          }\n        })\n      })\n      .addCase(deleteFlowNodeById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const { resultPath } = action.payload\n          const target = state[nodeId]\n          if (target.fileType === FILE_TYPE_SET.IMAGE) {\n            target.selectedFilePath = [resultPath]\n          } else {\n            target.selectedFilePath = resultPath\n          }\n        }\n      })\n      .addCase(fetchExperiment.rejected, () => initialState)\n      .addMatcher(\n        isAnyOf(importExperimentByUid.fulfilled, fetchExperiment.fulfilled),\n        (_, action) => {\n          const newState: InputNode = {}\n          Object.values(action.payload.nodeDict)\n            .filter(isInputNodePostData)\n            .forEach((node) => {\n              if (node.data != null) {\n                if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                  newState[node.id] = {\n                    fileType: FILE_TYPE_SET.IMAGE,\n                    selectedFilePath: node.data.path as string[],\n                    param: {},\n                  }\n                } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                  newState[node.id] = {\n                    fileType: FILE_TYPE_SET.CSV,\n                    selectedFilePath: node.data.path as string,\n                    param: node.data.param as CsvInputParamType,\n                  }\n                } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                  newState[node.id] = {\n                    fileType: FILE_TYPE_SET.HDF5,\n                    hdf5Path: node.data.hdf5Path,\n                    selectedFilePath: node.data.path as string,\n                    param: {},\n                  }\n                }\n              }\n            })\n          return newState\n        },\n      ),\n})\n\nexport const { setCsvInputNodeParam, setInputNodeHDF5Path } =\n  inputNodeSlice.actions\n\nexport default inputNodeSlice.reducer\n","import React from 'react'\nimport { DATA_TYPE } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const DisplayDataContext = React.createContext<{\n  nodeId: string | null\n  filePath: string\n  dataType: DATA_TYPE\n  itemId: number\n}>({ nodeId: '', filePath: '', dataType: 'csv', itemId: NaN })\n","import React from 'react'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectCsvData,\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { CsvData } from 'api/outputs/Outputs'\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const CsvPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (workspaceId && !isInitialized) {\n      dispatch(getCsvData({ path, workspaceId }))\n    }\n  }, [dispatch, isInitialized, path, workspaceId])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <CsvPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst CsvPlotImple = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  return (\n    <PresentationalCsvPlot\n      path={path}\n      transpose={transpose}\n      setHeader={setHeader}\n      setIndex={setIndex}\n    />\n  )\n})\n\n/**\n * CsvFileNodeの設定時に表示するプレビューでも使用することを想定\n *\n * DisplayDataContextに依存しない\n */\nexport const PresentationalCsvPlot = React.memo<{\n  path: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ path, transpose, setIndex, setHeader }) => {\n  const data = useSelector(\n    selectCsvData(path),\n    (a: CsvData | undefined, b: CsvData | undefined) => {\n      if (a != null && b != null) {\n        return twoDimarrayEqualityFn(a, b)\n      } else {\n        return a === undefined && b === undefined\n      }\n    },\n  )\n\n  const csvData = React.useMemo(() => {\n    if (transpose) {\n      return data[0].map((col, i) => data.map((row) => row[i]))\n    }\n    return data\n  }, [data, transpose])\n\n  const header: GridColDef[] = React.useMemo(() => {\n    const headerData = () => {\n      if (setHeader === null) {\n        return csvData[0]\n      } else {\n        if (setHeader >= csvData.length) {\n          return csvData[csvData.length - 1]\n        } else {\n          return csvData[setHeader]\n        }\n      }\n    }\n\n    if (setIndex) {\n      return [\n        { field: 'col0', headerName: 'index', width: 150 },\n        ...headerData().map((value, idx) => {\n          return {\n            field: `col${idx + 1}`,\n            headerName: `${setHeader === null ? idx : value}`,\n            width: 150,\n          }\n        }),\n      ]\n    } else {\n      return headerData().map((value, idx) => {\n        return {\n          field: `col${idx + 1}`,\n          headerName: `${setHeader === null ? idx : value}`,\n          width: 150,\n        }\n      })\n    }\n  }, [csvData, setHeader, setIndex])\n  const rows = csvData\n    .map((row, row_id) => {\n      let rowObj = Object.fromEntries(\n        [row_id, ...row].map((value, index) => {\n          return [`col${index}`, value]\n        }),\n      )\n      rowObj['id'] = row_id\n      return rowObj\n    })\n    .filter(\n      (value, idx) =>\n        setHeader === null || (setHeader !== null && idx > setHeader),\n    )\n\n  return (\n    <div style={{ height: 300, width: '100%' }}>\n      <DataGrid rows={rows} columns={header} />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Switch,\n  FormControlLabel,\n  TextField,\n  Box,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeParamSetHeader,\n  selectCsvInputNodeParamSetIndex,\n  selectCsvInputNodeParamTranspose,\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setCsvInputNodeParam } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { PresentationalCsvPlot } from 'components/Workspace/Visualize/Plot/CsvPlot'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const CsvFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <CsvFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst CsvFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowNodeById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'csv', 'CsvData')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nexport const ParamSettingDialog = React.memo<{\n  nodeId: string\n  filePath: string\n}>(({ nodeId, filePath }) => {\n  const [open, setOpen] = React.useState(false)\n  // OK時のみStoreに反映させるため一時的な値をuseStateで保持しておく。\n  // useStateの初期値はselectorで取得。\n  const [setHeader, setSetHeader] = React.useState(\n    useSelector(selectCsvInputNodeParamSetHeader(nodeId)),\n  )\n  const [setIndex, setSetIndex] = React.useState(\n    useSelector(selectCsvInputNodeParamSetIndex(nodeId)),\n  )\n  const [transpose, setTranspose] = React.useState(\n    useSelector(selectCsvInputNodeParamTranspose(nodeId)),\n  )\n  const dispatch = useDispatch()\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(\n      setCsvInputNodeParam({\n        nodeId,\n        param: { setHeader, setIndex, transpose },\n      }),\n    )\n  }\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>Settings</Button>\n      <Dialog open={open}>\n        <DialogTitle>Csv Setting</DialogTitle>\n        <DialogContent dividers>\n          <Box sx={{ display: 'flex', p: 1, m: 1, alignItems: 'flex-start' }}>\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={transpose}\n                  onChange={(event) => setTranspose(event.target.checked)}\n                />\n              }\n              label=\"Transpose\"\n            />\n            <TextField\n              label=\"header\"\n              sx={{\n                width: 100,\n                margin: (theme) => theme.spacing(0, 1, 0, 1),\n              }}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(event) => {\n                const value = Number(event.target.value)\n                if (value >= 0) {\n                  setSetHeader(value)\n                }\n              }}\n              value={setHeader}\n            />\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={setIndex}\n                  onChange={(event) => setSetIndex(event.target.checked)}\n                />\n              }\n              label=\"Set Index\"\n            />\n          </Box>\n          <Typography variant=\"h6\">Preview</Typography>\n          <CsvPreview\n            filePath={filePath}\n            transpose={transpose}\n            setHeader={setHeader}\n            setIndex={setIndex}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onClickOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst CsvPreview = React.memo<{\n  filePath: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ filePath: path, ...otherProps }) => {\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (workspaceId && !isInitialized) {\n      dispatch(getCsvData({ path, workspaceId }))\n    }\n  }, [dispatch, isInitialized, path, workspaceId])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PresentationalCsvPlot path={path} {...otherProps} />\n  } else {\n    return null\n  }\n})\n","import { RootState } from '../../store'\n\nexport const selectHDF5 = (state: RootState) => {\n  if (state.hdf5 != null) {\n    return state.hdf5\n  } else {\n    return undefined\n  }\n}\n\nexport const selectHDF5Nodes = () => (state: RootState) =>\n  selectHDF5(state)?.tree\n\nexport const selectHDF5IsLoading = () => (state: RootState) =>\n  selectHDF5(state)?.isLoading ?? false\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type HDF5TreeDTO = HDF5DirDTO | HDF5FileDTO\n\nexport interface HDF5DirDTO {\n  isDir: true\n  name: string\n  nodes: HDF5TreeDTO[]\n  path: string\n}\n\nexport interface HDF5FileDTO {\n  isDir: false\n  name: string\n  shape: [number]\n  path: string\n  nbytes: string\n}\n\nexport async function getHDF5TreeApi(\n  path: string,\n  workspaceId: number,\n): Promise<HDF5TreeDTO[]> {\n  const response = await axios.get(\n    `${BASE_URL}/hdf5/${path}?workspace_id=${workspaceId}`,\n  )\n  return response.data\n}\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nexport const HDF5_SLICE_NAME = 'hdf5'\n\nexport interface HDF5Tree {\n  isLoading: boolean\n  tree: HDF5TreeNodeType[]\n}\n\nexport type HDF5TreeNodeType = HDF5TreeDTO\n\nexport const HDF5_TYPE_SET = {\n  ALL: 'all',\n} as const\n\nexport type HDF5_TYPE = typeof HDF5_TYPE_SET[keyof typeof HDF5_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getHDF5TreeApi, HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nimport { HDF5_SLICE_NAME } from './HDF5Type'\n\nexport const getHDF5Tree = createAsyncThunk<\n  HDF5TreeDTO[],\n  { path: string; workspaceId: number }\n>(`${HDF5_SLICE_NAME}/getHDF5Tree`, async ({ path, workspaceId }, thunkAPI) => {\n  try {\n    const response = await getHDF5TreeApi(path, workspaceId)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\n\nimport { alpha, useTheme } from '@mui/material/styles'\nimport Dialog from '@mui/material/Dialog'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectHDF5InputNodeSelectedFilePath,\n  selectInputNodeDefined,\n  selectInputNodeHDF5Path,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeHDF5Path } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectHDF5IsLoading,\n  selectHDF5Nodes,\n} from 'store/slice/HDF5/HDF5Selectors'\nimport { getHDF5Tree } from 'store/slice/HDF5/HDF5Action'\nimport { HDF5TreeNodeType } from 'store/slice/HDF5/HDF5Type'\nimport { Typography } from '@mui/material'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const HDF5FileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <HDF5FileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst HDF5FileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowNodeById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.HDF5}\n        filePath={filePath ?? ''}\n      />\n      {filePath !== undefined && <ItemSelect nodeId={nodeId} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'hdf5', 'HDF5Data')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nconst ItemSelect = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [open, setOpen] = React.useState(false)\n\n  const structureFileName = useSelector(selectInputNodeHDF5Path(nodeId))\n\n  return (\n    <>\n      <Button variant=\"outlined\" size=\"small\" onClick={() => setOpen(true)}>\n        {'Structure'}\n      </Button>\n      <Typography className=\"selectFilePath\" variant=\"caption\">\n        {!!structureFileName ? structureFileName : 'No structure is selected.'}\n      </Typography>\n\n      <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\n        <DialogTitle>{'Select File'}</DialogTitle>\n        <Structure nodeId={nodeId} />\n        <DialogActions>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"inherit\"\n            variant=\"outlined\"\n          >\n            cancel\n          </Button>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"primary\"\n            variant=\"outlined\"\n            autoFocus\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst Structure = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const theme = useTheme()\n  return (\n    <DialogContent dividers>\n      <div\n        style={{\n          height: 300,\n          overflow: 'auto',\n          marginBottom: theme.spacing(1),\n          border: '1px solid',\n          padding: theme.spacing(1),\n          borderColor: theme.palette.divider,\n        }}\n      >\n        <FileTreeView nodeId={nodeId} />\n      </div>\n    </DialogContent>\n  )\n})\n\nconst FileTreeView = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [tree, isLoading] = useHDF5Tree(nodeId)\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView>\n        {tree?.map((node) => (\n          <TreeNode node={node} nodeId={nodeId} />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: HDF5TreeNodeType\n  nodeId: string\n}>(({ node, nodeId }) => {\n  const dispatch = useDispatch()\n\n  const onClickFile = (path: string) => {\n    dispatch(setInputNodeHDF5Path({ nodeId, path }))\n  }\n\n  if (node.isDir) {\n    // Directory\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={node.name}\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode node={childNode} key={i} nodeId={nodeId} />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    // File\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={node.name + `   (shape=${node.shape}, nbytes=${node.nbytes})`}\n        onClick={() => onClickFile(node.path)}\n      />\n    )\n  }\n})\n\nfunction useHDF5Tree(\n  nodeId: string,\n): [HDF5TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectHDF5Nodes())\n  const isLoading = useSelector(selectHDF5IsLoading())\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  React.useEffect(() => {\n    if (workspaceId && !isLoading && filePath) {\n      dispatch(getHDF5Tree({ path: filePath, workspaceId }))\n    }\n  }, [workspaceId, isLoading, filePath, dispatch])\n  return [tree, isLoading]\n}\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const FluoFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <FluoFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst FluoFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n  const returnType = 'FluoData'\n  const fluoColor = useHandleColor(returnType)\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowNodeById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'fluo', returnType)}\n        style={{\n          ...sourceHandleStyle,\n          background: fluoColor,\n        }}\n      />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const BehaviorFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <BehaviorFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst BehaviorFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n    const onChangeFilePath = (path: string) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n    const theme = useTheme()\n    const returnType = 'BehaviorData'\n    const behaviorColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowNodeById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '230px',\n          background: selected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          onChangeFilePath={(path) => {\n            if (!Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.CSV}\n          filePath={filePath ?? ''}\n        />\n        {!!filePath && (\n          <ParamSettingDialog nodeId={nodeId} filePath={filePath} />\n        )}\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'behavior', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: behaviorColor,\n          }}\n        />\n      </div>\n    )\n  },\n)\n","import { ImageFileNode } from 'components/Workspace/FlowChart/FlowChartNode/ImageFileNode'\nimport { AlgorithmNode } from 'components/Workspace/FlowChart/FlowChartNode/AlgorithmNode'\nimport { CsvFileNode } from 'components/Workspace/FlowChart/FlowChartNode/CsvFileNode'\nimport { HDF5FileNode } from 'components/Workspace/FlowChart/FlowChartNode/HDF5FileNode'\nimport { FluoFileNode } from 'components/Workspace/FlowChart/FlowChartNode/FluoFileNode'\nimport { BehaviorFileNode } from 'components/Workspace/FlowChart/FlowChartNode/BehaviorFileNode'\n\nimport { CustomEdge } from 'components/Workspace/FlowChart/CustomEdge'\n\nexport const reactFlowNodeTypes = {\n  ImageFileNode,\n  CsvFileNode,\n  HDF5FileNode,\n  AlgorithmNode,\n  FluoFileNode,\n  BehaviorFileNode,\n} as const\n\nexport const reactFlowEdgeTypes = {\n  buttonedge: CustomEdge,\n} as const\n","import { useDispatch } from 'react-redux'\nimport { EdgeProps, getBezierPath, getEdgeCenter } from 'react-flow-renderer'\nimport { deleteFlowEdgeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport 'style/flowbutton.css'\n\nconst foreignObjectSize = 40\n\nexport const CustomEdge: React.FC<EdgeProps> = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  markerEnd,\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  })\n\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  })\n\n  const dispatch = useDispatch()\n\n  const onEdgeClick = () => {\n    dispatch(deleteFlowEdgeById(id))\n  }\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <foreignObject\n        width={foreignObjectSize}\n        height={foreignObjectSize}\n        x={edgeCenterX - foreignObjectSize / 2}\n        y={edgeCenterY - foreignObjectSize / 2}\n        className=\"edgebutton-foreignobject\"\n      >\n        <button className=\"flowbutton\" onClick={onEdgeClick}>\n          ×\n        </button>\n      </foreignObject>\n    </>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectHeatMapColumns,\n  selectHeatMapData,\n  selectHeatMapDataError,\n  selectHeatMapDataIsFulfilled,\n  selectHeatMapDataIsInitialized,\n  selectHeatMapDataIsPending,\n  selectHeatMapIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHeatMapData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const HeatMapPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHeatMapDataIsPending(path))\n  const isInitialized = useSelector(selectHeatMapDataIsInitialized(path))\n  const error = useSelector(selectHeatMapDataError(path))\n  const isFulfilled = useSelector(selectHeatMapDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHeatMapData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HeatMapImple />\n  } else {\n    return null\n  }\n})\n\nconst HeatMapImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const heatMapData = useSelector(selectHeatMapData(path), heatMapDataEqualtyFn)\n  const columns = useSelector(selectHeatMapColumns(path))\n  const index = useSelector(selectHeatMapIndex(path))\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const colorscale = useSelector(selectHeatMapItemColors(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      heatMapData != null\n        ? [\n            {\n              z: heatMapData,\n              x: columns,\n              y: index,\n              type: 'heatmap',\n              name: 'heatmap',\n              colorscale: colorscale.map((value) => {\n                let offset: number = parseFloat(value.offset)\n                const offsets: number[] = colorscale.map((v) => {\n                  return parseFloat(v.offset)\n                })\n                // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n                if (offset === Math.max(...offsets)) {\n                  offset = 1.0\n                }\n                if (offset === Math.min(...offsets)) {\n                  offset = 0.0\n                }\n                return [offset, value.rgb]\n              }),\n              hoverongaps: false,\n              showlegend: true,\n              showscale: showscale,\n            },\n          ]\n        : [],\n    [heatMapData, showscale, colorscale, columns, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction heatMapDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, {\n  useCallback,\n  useEffect,\n  useState,\n  MouseEvent,\n  useRef,\n} from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from 'store/store'\nimport {\n  Datum,\n  LayoutAxis,\n  PlotData,\n  PlotMouseEvent,\n  PlotSelectionEvent,\n} from 'plotly.js'\nimport createColormap from 'colormap'\nimport { Button, LinearProgress, TextField, Typography } from '@mui/material'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport Slider from '@mui/material/Slider'\nimport Box from '@mui/material/Box'\nimport { styled } from '@mui/material/styles'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport { DisplayDataContext } from '../DataContext'\n\nimport {\n  selectImageDataError,\n  selectImageDataIsInitialized,\n  selectImageDataIsPending,\n  selectImageDataIsFulfilled,\n  selectActiveImageData,\n  selectRoiData,\n  selectImageDataMaxSize,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getImageData,\n  getRoiData,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowLine,\n  selectImageItemShowGrid,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemActiveIndex,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectRoiItemFilePath,\n  selectRoiItemIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemDuration,\n  selectVisualizeItemWidth,\n  selectVisualizeItemHeight,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n  selectImageItemAlpha,\n  selectRoiItemOutputKeys,\n  selectVisualizeItems,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  incrementImageActiveIndex,\n  resetAllOrderList,\n  setImageActiveIndex,\n  setImageItemDuration,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  selectingImageArea,\n  setImageItemClikedDataId,\n} from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { addRoiApi, deleteRoiApi, mergeRoiApi } from 'api/outputs/Outputs'\nimport { isTimeSeriesItem } from 'store/slice/VisualizeItem/VisualizeItemUtils'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\ninterface PointClick {\n  x: number\n  y: number\n  z: number\n}\n\nconst WIDTH_CHARTJS = 321\nconst INIT_WIDTH_ROI = 30\n\nconst initSizeDrag = {\n  width: INIT_WIDTH_ROI,\n  height: INIT_WIDTH_ROI,\n  left: Math.floor((WIDTH_CHARTJS - INIT_WIDTH_ROI) / 2),\n  top: Math.floor((WIDTH_CHARTJS - INIT_WIDTH_ROI) / 2),\n}\n\nenum PositionDrag {\n  'LEFT' = 'LEFT',\n  'RIGHT' = 'RIGHT',\n  'BOTTOM' = 'BOTTOM',\n  'TOP' = 'TOP',\n}\n\nconst sChart = 320\n\nexport const ImagePlot = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const isPending = useSelector(selectImageDataIsPending(path))\n  const isInitialized = useSelector(selectImageDataIsInitialized(path))\n  const isFulfilled = useSelector(selectImageDataIsFulfilled(path))\n  const error = useSelector(selectImageDataError(path))\n\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (workspaceId) {\n      if (!isInitialized) {\n        dispatch(\n          getImageData({\n            path,\n            workspaceId,\n            startIndex: startIndex ?? 1,\n            endIndex: endIndex ?? 10,\n          }),\n        )\n      }\n      if (roiFilePath != null) {\n        dispatch(getRoiData({ path: roiFilePath, workspaceId }))\n      }\n    }\n  }, [\n    dispatch,\n    isInitialized,\n    path,\n    workspaceId,\n    startIndex,\n    endIndex,\n    roiFilePath,\n  ])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ImagePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ImagePlotImple = React.memo(() => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const activeIndex = useSelector(selectImageItemActiveIndex(itemId))\n  return <ImagePlotChart activeIndex={activeIndex} />\n})\n\nconst ImagePlotChart = React.memo<{\n  activeIndex: number\n}>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(\n    selectActiveImageData(path, activeIndex),\n    imageDataEqualtyFn,\n  )\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const roiData = useSelector(\n    (state: RootState) =>\n      roiFilePath != null ? selectRoiData(roiFilePath)(state) : [],\n    imageDataEqualtyFn,\n  )\n\n  const [isAddRoi, setIsAddRoi] = useState(false)\n  const [loadingApi, setLoadingApi] = useState(false)\n\n  const [roiDataState, setRoiDataState] = useState(roiData)\n\n  const [pointClick, setPointClick] = useState<PointClick[]>([])\n\n  const itemsVisual = useSelector(selectVisualizeItems)\n\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const colorscale = useSelector(selectImageItemColors(itemId))\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const timeDataMaxIndex = useSelector(selectRoiItemIndex(itemId, roiFilePath))\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const [sizeDrag, setSizeDrag] = useState(initSizeDrag)\n\n  const [startDragAddRoi, setStartDragAddRoi] = useState(false)\n  const [positionDrag, setChangeSize] = useState<PositionDrag | undefined>()\n\n  const outputKey: string | null = useSelector(selectRoiItemOutputKeys(itemId))\n\n  const refPageXSize = useRef(0)\n  const refPageYSize = useRef(0)\n\n  const colorscaleRoi = createColormap({\n    colormap: 'jet',\n    nshades: 100, //timeDataMaxIndex >= 6 ? timeDataMaxIndex : 6,\n    format: 'rgba',\n    alpha: 1.0,\n  })\n\n  useEffect(() => {\n    setRoiDataState(roiData)\n  }, [roiData])\n\n  useEffect(() => {\n    onCancel()\n    onCancelAdd()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [outputKey, roiFilePath])\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'images',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          const rgb = value.rgb\n            .replace(/[^0-9,]/g, '')\n            .split(',')\n            .map((x) => Number(x))\n          const hex = rgba2hex(rgb, alpha)\n          return [offset, hex]\n        }),\n        // hoverinfo: isAddRoi || pointClick.length ? 'none' : undefined,\n        hoverongaps: false,\n        showscale: showscale,\n        zsmooth: zsmooth, // ['best', 'fast', false]\n      },\n      {\n        z: roiDataState,\n        type: 'heatmap',\n        name: 'roi',\n        hovertemplate: isAddRoi ? 'none' : 'cell id: %{z}',\n        // hoverinfo: isAddRoi || pointClick.length ? 'none' : undefined,\n        colorscale: [...Array(timeDataMaxIndex)].map((_, i) => {\n          const new_i = Math.floor(((i % 10) * 10 + i / 10) % 100)\n          const offset: number = i / (timeDataMaxIndex - 1)\n          const rgba = colorscaleRoi[new_i]\n          const hex = rgba2hex(rgba, roiAlpha)\n          return [offset, hex]\n        }),\n        zmin: 0,\n        zmax: timeDataMaxIndex,\n        hoverongaps: false,\n        zsmooth: false,\n        showscale: false,\n      },\n    ],\n    [\n      imageData,\n      roiDataState,\n      zsmooth,\n      showscale,\n      colorscale,\n      colorscaleRoi,\n      timeDataMaxIndex,\n      roiAlpha,\n      alpha,\n      isAddRoi,\n    ],\n  )\n\n  const [selectMode, setSelectMode] = React.useState(false)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectMode(event.target.checked)\n  }\n  // debounceでイベントを間引きする。onSelectedはそれっぽい名前だが動かなかった。\n  const onSelecting = debounce((event: PlotSelectionEvent) => {\n    if (event.range != null) {\n      dispatch(selectingImageArea({ itemId, range: event.range }))\n    }\n  })\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 130,\n      margin: {\n        t: 30, // top\n        l: 100, // left\n        b: 20, // bottom\n      },\n      dragmode: selectMode ? 'select' : 'pan',\n      xaxis: {\n        autorange: true,\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n        showticklabels: showticklabels,\n      },\n      yaxis: {\n        automargin: true,\n        autorange: 'reversed',\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n        showticklabels: showticklabels, // todo\n      },\n    }),\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n    [showgrid, showline, showticklabels, width, height, selectMode, isAddRoi],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n      // scale: number;\n      // format: 'png' | 'svg' | 'jpeg' | 'webp';\n      // height: number;\n      // width: number;\n    },\n  }\n\n  const onChartClick = (event: PlotMouseEvent) => {\n    const point: PlotDatum = event.points[0] as PlotDatum\n    if (point.curveNumber >= 1 && outputKey === 'cell_roi') {\n      setSelectRoi({\n        x: Number(point.x),\n        y: Number(point.y),\n        z: Number(point.z),\n      })\n    }\n    if (point.curveNumber >= 1 && point.z > 0) {\n      dispatch(\n        setImageItemClikedDataId({\n          itemId,\n          clickedDataId: point.z.toString(),\n        }),\n      )\n    }\n  }\n\n  const setSelectRoi = (point: PointClick) => {\n    if (!point.z) return\n    const newPoints = [...pointClick, point]\n    const newRoi = roiDataState.map((roi) => {\n      return roi.map((element) => {\n        if (newPoints.some((p) => p.z === element)) {\n          return 0\n        }\n        return element\n      })\n    })\n    setPointClick([...pointClick, point])\n    setRoiDataState(newRoi)\n  }\n\n  const onCancel = () => {\n    setPointClick([])\n    setRoiDataState(roiData)\n  }\n\n  const addRoi = () => {\n    setIsAddRoi(true)\n  }\n\n  const onCancelAdd = () => {\n    setIsAddRoi(false)\n    setSizeDrag(initSizeDrag)\n    setChangeSize(undefined)\n  }\n\n  const onMouseDownDragAddRoi = () => {\n    setStartDragAddRoi(true)\n  }\n\n  const onMouseUpDragAddRoi = () => {\n    setStartDragAddRoi(false)\n    setChangeSize(undefined)\n  }\n\n  const onMouseDownSize = (position: PositionDrag, event: MouseEvent) => {\n    setChangeSize(position)\n    refPageXSize.current = event.pageX\n    refPageYSize.current = event.pageY\n  }\n\n  const onMouseMoveAddRoi = (event: MouseEvent<HTMLDivElement>) => {\n    const { pageX, pageY } = event\n    let newSizeDrag\n    if (startDragAddRoi) {\n      const { y } = event.currentTarget.getBoundingClientRect()\n      let newX = sizeDrag.left + (pageX - refPageXSize.current)\n      let newY = Math.ceil(pageY - y - 15) - window.scrollY\n\n      if (newX < 0) newX = 0\n      else if (newX + sizeDrag.width > sChart) newX = sChart - sizeDrag.width\n      if (newY < 0) newY = 0\n      else if (newY + sizeDrag.height > sChart) newY = sChart - sizeDrag.height\n      newSizeDrag = { ...sizeDrag, left: newX, top: newY }\n    } else if (positionDrag === PositionDrag.LEFT) {\n      const newWidth = sizeDrag.width - (pageX - refPageXSize.current)\n      const newLeft = sizeDrag.left + (pageX - refPageXSize.current)\n      if (newWidth < 10 || newLeft < 1) return\n      newSizeDrag = { ...sizeDrag, width: newWidth, left: newLeft }\n    } else if (positionDrag === PositionDrag.RIGHT) {\n      const newWidth = sizeDrag.width + (pageX - refPageXSize.current)\n      if (newWidth < 10 || newWidth > sChart - sizeDrag.left) return\n      newSizeDrag = { ...sizeDrag, width: newWidth }\n    } else if (positionDrag === PositionDrag.BOTTOM) {\n      const newHeight = sizeDrag.height + (pageY - refPageYSize.current)\n      if (newHeight < 10 || newHeight > sChart - sizeDrag.top) return\n      newSizeDrag = { ...sizeDrag, height: newHeight }\n    } else if (positionDrag === PositionDrag.TOP) {\n      const newHeight = sizeDrag.height - (pageY - refPageYSize.current)\n      const newTop = sizeDrag.top + (pageY - refPageYSize.current)\n      if (newHeight < 10 || newTop < 1) return\n      newSizeDrag = { ...sizeDrag, height: newHeight, top: newTop }\n    }\n    if (newSizeDrag) setSizeDrag({ ...sizeDrag, ...newSizeDrag })\n    refPageXSize.current = pageX\n    refPageYSize.current = pageY\n  }\n\n  const addRoiSubmit = async () => {\n    if (!roiFilePath || loadingApi) return\n    setLoadingApi(true)\n    const sizeX = roiDataState[0].length - 1\n    const sizeY = roiDataState.length - 1\n    const xAdd = Number(((sizeDrag.width + 2) / (sChart / sizeX)).toFixed(1))\n    const yAdd = Number(((sizeDrag.height + 2) / (sChart / sizeY)).toFixed(1))\n    const x = Number((sizeDrag.left / (sChart / sizeX)).toFixed(1))\n    const y = Number((sizeDrag.top / (sChart / sizeY)).toFixed(1))\n\n    const pointCenter = {\n      posx: x + Math.floor(xAdd / 2),\n      posy: y + Math.floor(yAdd / 2),\n      sizex: xAdd,\n      sizey: yAdd,\n    }\n    dispatch(resetAllOrderList())\n    try {\n      await addRoiApi(roiFilePath, pointCenter)\n    } catch {}\n    setLoadingApi(false)\n    onCancelAdd()\n    workspaceId && dispatch(getRoiData({ path: roiFilePath, workspaceId }))\n    resetTimeSeries()\n  }\n\n  const onMergeRoi = async () => {\n    if (!roiFilePath || loadingApi) return\n    setLoadingApi(true)\n    dispatch(resetAllOrderList())\n    try {\n      await mergeRoiApi(roiFilePath, {\n        ids: pointClick.map((point) => point.z - 1),\n      })\n    } catch {}\n    setLoadingApi(false)\n    onCancel()\n    workspaceId && dispatch(getRoiData({ path: roiFilePath, workspaceId }))\n    resetTimeSeries()\n  }\n\n  const onDeleteRoi = async () => {\n    if (!roiFilePath || loadingApi) return\n    setLoadingApi(true)\n    dispatch(resetAllOrderList())\n    try {\n      await deleteRoiApi(roiFilePath, {\n        ids: pointClick.map((point) => point.z - 1),\n      })\n    } catch {}\n    setLoadingApi(false)\n    onCancel()\n    workspaceId && dispatch(getRoiData({ path: roiFilePath, workspaceId }))\n    resetTimeSeries()\n  }\n\n  const resetTimeSeries = () => {\n    if (itemsVisual) {\n      Object.keys(itemsVisual).forEach((item) => {\n        if (isTimeSeriesItem(itemsVisual[item])) {\n          dispatch(\n            getTimeSeriesInitData({\n              path: itemsVisual[item].filePath as string,\n              itemId: Number(item),\n            }),\n          )\n        }\n      })\n    }\n  }\n\n  const renderActionRoi = () => {\n    if (!roiDataState?.length || outputKey !== 'cell_roi') return null\n    if (!isAddRoi) {\n      return <LinkDiv onClick={addRoi}>Add ROI</LinkDiv>\n    }\n    return (\n      <BoxDiv>\n        <LinkDiv\n          style={{\n            opacity: loadingApi ? 0.5 : 1,\n            cursor: loadingApi ? 'progress' : 'pointer',\n          }}\n          onClick={addRoiSubmit}\n        >\n          OK\n        </LinkDiv>\n        <LinkDiv\n          style={{\n            opacity: loadingApi ? 0.5 : 1,\n            cursor: loadingApi ? 'progress' : 'pointer',\n          }}\n          onClick={onCancelAdd}\n        >\n          Cancel\n        </LinkDiv>\n      </BoxDiv>\n    )\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, mt: 1 }}>\n          <PlayBack activeIndex={activeIndex} />\n        </Box>\n        <FormControlLabel\n          sx={{ ml: 1 }}\n          control={<Switch checked={selectMode} onChange={handleChange} />}\n          label=\"drag select\"\n        />\n      </Box>\n      <Box sx={{ minHeight: 5.5 }}>\n        {pointClick.length ? (\n          <>\n            <BoxDiv>\n              <span>ROI Selecteds: [{String(pointClick.map((e) => e.z))}]</span>\n            </BoxDiv>\n            <BoxDiv>\n              {pointClick.length >= 2 ? (\n                <LinkDiv\n                  sx={{ ml: 0, opacity: loadingApi ? 0.5 : 1 }}\n                  onClick={onMergeRoi}\n                >\n                  Merge ROI\n                </LinkDiv>\n              ) : null}\n              <LinkDiv\n                sx={{ color: '#F84E1B', opacity: loadingApi ? 0.5 : 1 }}\n                onClick={onDeleteRoi}\n              >\n                Delete ROI\n              </LinkDiv>\n              <LinkDiv\n                sx={{ opacity: loadingApi ? 0.5 : 1 }}\n                onClick={onCancel}\n              >\n                Cancel\n              </LinkDiv>\n            </BoxDiv>\n          </>\n        ) : (\n          renderActionRoi()\n        )}\n      </Box>\n      <div style={{ position: 'relative' }}>\n        <PlotlyChart\n          data={data}\n          layout={layout}\n          config={config}\n          onClick={onChartClick}\n          onSelecting={onSelecting}\n        />\n        {isAddRoi ? (\n          <DivAddRoi>\n            <DivSvg\n              onMouseLeave={onMouseUpDragAddRoi}\n              onMouseMove={onMouseMoveAddRoi}\n              onMouseUp={onMouseUpDragAddRoi}\n            >\n              <DivDrag style={sizeDrag}>\n                <DragCenter\n                  onMouseDown={onMouseDownDragAddRoi}\n                  style={{\n                    width: sizeDrag.width - 1,\n                    height: sizeDrag.height - 1,\n                    cursor: !startDragAddRoi ? 'grab' : 'grabbing',\n                  }}\n                />\n                <DragSizeLeft\n                  onMouseDown={(event) =>\n                    onMouseDownSize(PositionDrag.LEFT, event)\n                  }\n                />\n                <DragSizeRight\n                  onMouseDown={(event) => {\n                    onMouseDownSize(PositionDrag.RIGHT, event)\n                  }}\n                />\n                <DragSizeTop\n                  onMouseDown={(event) => {\n                    onMouseDownSize(PositionDrag.TOP, event)\n                  }}\n                />\n                <DragSizeBottom\n                  onMouseDown={(event) => {\n                    onMouseDownSize(PositionDrag.BOTTOM, event)\n                  }}\n                />\n              </DivDrag>\n            </DivSvg>\n          </DivAddRoi>\n        ) : null}\n      </div>\n    </div>\n  )\n})\n\nconst PlayBack = React.memo<{ activeIndex: number }>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const maxSize = useSelector(selectImageDataMaxSize(path))\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const duration = useSelector(selectImageItemDuration(itemId))\n\n  const onSliderChange = (\n    event: Event,\n    value: number | number[],\n    activeThumb: number,\n  ) => {\n    if (typeof value === 'number') {\n      const newIndex = value - startIndex\n      if (newIndex >= 0 && newIndex !== activeIndex) {\n        dispatch(setImageActiveIndex({ itemId, activeIndex: newIndex }))\n      }\n    }\n  }\n\n  const intervalRef = React.useRef<null | NodeJS.Timeout>(null)\n\n  useEffect(() => {\n    if (intervalRef.current !== null) {\n      if (activeIndex >= maxSize) {\n        clearInterval(intervalRef.current)\n        intervalRef.current = null\n      }\n    }\n  }, [activeIndex, maxSize])\n\n  const onPlayClick = useCallback(() => {\n    if (activeIndex >= maxSize) {\n      dispatch(setImageActiveIndex({ itemId, activeIndex: 0 }))\n    }\n    if (maxSize > 1 && intervalRef.current === null) {\n      intervalRef.current = setInterval(() => {\n        dispatch(incrementImageActiveIndex({ itemId }))\n      }, duration)\n    }\n  }, [activeIndex, maxSize, dispatch, duration, itemId])\n\n  const onPauseClick = () => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current)\n      intervalRef.current = null\n    }\n  }\n\n  const onDurationChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue =\n        event.target.value === '' ? '' : Number(event.target.value)\n      if (typeof newValue === 'number') {\n        dispatch(setImageItemDuration({ itemId, duration: newValue }))\n      }\n    },\n    [dispatch, itemId],\n  )\n  return (\n    <>\n      <Button sx={{ mt: 1.5 }} variant=\"outlined\" onClick={onPlayClick}>\n        Play\n      </Button>\n      <Button sx={{ mt: 1.5, ml: 1 }} variant=\"outlined\" onClick={onPauseClick}>\n        Pause\n      </Button>\n      <TextField\n        sx={{ width: 100, ml: 2 }}\n        label=\"Duration [msec]\"\n        type=\"number\"\n        inputProps={{\n          step: 100,\n          min: 0,\n          max: 1000,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onDurationChange}\n        value={duration}\n      />\n      <Slider\n        aria-label=\"Custom marks\"\n        defaultValue={20}\n        value={startIndex + activeIndex}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        marks\n        min={startIndex}\n        max={maxSize === 0 ? 0 : endIndex}\n        onChange={onSliderChange}\n      />\n    </>\n  )\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\ninterface PlotDatum {\n  curveNumber: number\n  data: PlotData\n  customdata: Datum\n  pointIndex: number\n  pointNumber: number\n  x: Datum\n  xaxis: LayoutAxis\n  y: Datum\n  yaxis: LayoutAxis\n  z: number\n}\n\nfunction rgba2hex(rgba: number[], alpha: number) {\n  const r = rgba[0]\n  const g = rgba[1]\n  const b = rgba[2]\n  const a = alpha\n\n  var outParts = [\n    r.toString(16),\n    g.toString(16),\n    b.toString(16),\n    Math.round(a * 255)\n      .toString(16)\n      .substring(0, 2),\n  ]\n\n  // Pad single-digit output values\n  outParts.forEach(function (part, i) {\n    if (part.length === 1) {\n      outParts[i] = '0' + part\n    }\n  })\n\n  return `#${outParts.join('')}`\n}\n\nfunction debounce<T extends (...args: any[]) => unknown>(\n  callback: T,\n  delay = 500,\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout\n  return (...args) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => callback(...args), delay)\n  }\n}\n\nconst BoxDiv = styled('div')({\n  mt: 1,\n  display: 'flex',\n  alignItems: 'center',\n  listStyle: 'none',\n  padding: 0,\n  margin: 0,\n})\n\nconst LinkDiv = styled('div')({\n  marginLeft: 16,\n  textDecoration: 'underline',\n  cursor: 'pointer',\n  color: '#1155cc',\n  zIndex: 999,\n  position: 'relative',\n})\n\nconst DivAddRoi = styled('div')({\n  width: '100%',\n  height: '100%',\n  position: 'absolute',\n  left: 0,\n  top: 0,\n  borderRadius: 100,\n})\n\nconst DivSvg = styled('div')({\n  width: 321,\n  height: 321,\n  marginTop: 30,\n  marginLeft: 99,\n  position: 'relative',\n})\n\nconst DivDrag = styled('div')({\n  border: '1px solid #ffffff',\n  position: 'absolute',\n  borderRadius: 100,\n})\n\nconst DragCenter = styled('div')({\n  borderRadius: 100,\n  cursor: 'grab',\n})\n\nconst DragSize = styled('div')({\n  width: 3,\n  height: 3,\n  borderRadius: 100,\n  position: 'absolute',\n  background: '#fff',\n})\n\nconst DragSizeLeft = styled(DragSize)({\n  top: `calc(50% - 1px)`,\n  left: -2,\n  cursor: 'ew-resize',\n})\n\nconst DragSizeRight = styled(DragSize)({\n  top: `calc(50% - 1px)`,\n  right: -2,\n  cursor: 'ew-resize',\n})\n\nconst DragSizeTop = styled(DragSize)({\n  top: -2,\n  right: `calc(50% - 1px)`,\n  cursor: 'ns-resize',\n})\n\nconst DragSizeBottom = styled(DragSize)({\n  bottom: -2,\n  right: `calc(50% - 1px)`,\n  cursor: 'ns-resize',\n})\n","import React from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectRoiData,\n  selectRoiDataError,\n  selectRoiDataIsFulfilled,\n  selectRoiDataIsInitialized,\n  selectRoiDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { getRoiData } from 'store/slice/DisplayData/DisplayDataActions'\nimport createColormap from 'colormap'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const RoiPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isPending = useSelector(selectRoiDataIsPending(path))\n  const isInitialized = useSelector(selectRoiDataIsInitialized(path))\n  const isFulfilled = useSelector(selectRoiDataIsFulfilled(path))\n  const error = useSelector(selectRoiDataError(path))\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (workspaceId && !isInitialized) {\n      dispatch(getRoiData({ path, workspaceId }))\n    }\n  }, [dispatch, isInitialized, path, workspaceId])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <RoiPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst RoiPlotImple = React.memo<{}>(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(selectRoiData(path), imageDataEqualtyFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscale: ColorType[] = createColormap({\n    colormap: 'jet',\n    nshades: 10,\n    format: 'hex',\n    alpha: 1,\n  }).map((v, idx) => {\n    return { rgb: v, offset: String(idx / 9) }\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'roi',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          return [offset, value.rgb]\n        }),\n        hoverongaps: false,\n        // zsmooth: zsmooth, // ['best', 'fast', false]\n        zsmooth: false,\n        showlegend: true,\n      },\n    ],\n    [imageData, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      xaxis: {\n        autorange: true,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n      },\n      yaxis: {\n        autorange: 'reversed',\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n      },\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectScatterData,\n  selectScatterDataError,\n  selectScatterDataIsFulfilled,\n  selectScatterDataIsInitialized,\n  selectScatterDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getScatterData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { ScatterData } from 'api/outputs/Outputs'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const ScatterPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectScatterDataIsPending(path))\n  const isInitialized = useSelector(selectScatterDataIsInitialized(path))\n  const error = useSelector(selectScatterDataError(path))\n  const isFulfilled = useSelector(selectScatterDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getScatterData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ScatterPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ScatterPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const scatterData = useSelector(\n    selectScatterData(path),\n    scatterDataEqualityFn,\n  )\n\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: scatterData[xIndex],\n        y: scatterData[yIndex],\n        type: 'scatter',\n        mode: 'markers', //'markers+text',\n        text: Object.keys(scatterData[xIndex]),\n        textposition: 'top center',\n        textfont: {\n          family: 'Raleway, sans-serif',\n        },\n        marker: {\n          size: 5,\n          color: Object.keys(scatterData[xIndex]),\n        },\n      },\n    ],\n    [scatterData, xIndex, yIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      xaxis: {\n        title: {\n          text: `x: ${xIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: `y: ${yIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n    }),\n    [xIndex, yIndex, width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <XIndex dataKeys={Object.keys(scatterData)} />\n          <YIndex dataKeys={Object.keys(scatterData)} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst XIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemXIndex({\n        itemId,\n        xIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>xIndex</InputLabel>\n      <Select label=\"smooth\" value={xIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst YIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemYIndex({\n        itemId,\n        yIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>yIndex</InputLabel>\n      <Select label=\"smooth\" value={yIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction scatterDataEqualityFn(\n  a: ScatterData | undefined,\n  b: ScatterData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LegendClickEvent } from 'plotly.js'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectTimeSeriesData,\n  selectTimeSeriesDataError,\n  selectTimeSeriesDataIsFulfilled,\n  selectTimeSeriesDataIsInitialized,\n  selectTimeSeriesDataIsPending,\n  selectTimeSeriesStd,\n  selectTimeSeriesXrange,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getTimeSeriesDataById,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { TimeSeriesData } from 'api/outputs/Outputs'\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectTimeSeriesItemKeys,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport createColormap from 'colormap'\nimport { setTimeSeriesItemDrawOrderList } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const TimeSeriesPlot = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectTimeSeriesDataIsPending(path))\n  const isInitialized = useSelector(selectTimeSeriesDataIsInitialized(path))\n  const error = useSelector(selectTimeSeriesDataError(path))\n  const isFulfilled = useSelector(selectTimeSeriesDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getTimeSeriesInitData({ path, itemId }))\n    }\n  }, [dispatch, isInitialized, path, itemId])\n\n  if (!isInitialized) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isPending || isFulfilled) {\n    return <TimeSeriesPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst TimeSeriesPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  // 0番のデータとkeysだけをとってくる\n  const dispatch = useDispatch()\n  const timeSeriesData = useSelector(\n    selectTimeSeriesData(path),\n    timeSeriesDataEqualityFn,\n  )\n\n  const dataXrange = useSelector(selectTimeSeriesXrange(path))\n  const dataStd = useSelector(selectTimeSeriesStd(path))\n\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n  const drawOrderList = useSelector(selectTimeSeriesItemDrawOrderList(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const dataKeys = useSelector(selectTimeSeriesItemKeys(itemId))\n\n  const colorScale = createColormap({\n    colormap: 'jet',\n    nshades: 100, //maxIndex >= 6 ? maxIndex : 6,\n    format: 'hex',\n    alpha: 1,\n  })\n\n  const data = React.useMemo(() => {\n    return Object.fromEntries(\n      dataKeys.map((key) => {\n        let y = dataXrange.map((x) => timeSeriesData[key][x])\n        const i = Number(key) - 1\n        const new_i = Math.floor((i % 10) * 10 + i / 10) % 100\n        if (drawOrderList.includes(key) && offset) {\n          const activeIdx: number = drawOrderList.findIndex((v) => v === key)\n          const mean: number = y.reduce((a, b) => a + b) / y.length\n          const std: number =\n            span *\n            Math.sqrt(y.reduce((a, b) => a + Math.pow(b - mean, 2)) / y.length)\n          y = y.map((value) => (value - mean) / (std + 1e-10) + activeIdx)\n        }\n\n        return [\n          key,\n          {\n            name: key,\n            x: dataXrange,\n            y: y,\n            visible: drawOrderList.includes(key) ? true : 'legendonly',\n            line: { color: colorScale[new_i] },\n            error_y: {\n              type: 'data',\n              array:\n                !offset && Object.keys(dataStd).includes(key)\n                  ? Object.values(dataStd[key])\n                  : null,\n              visible: true,\n            },\n          },\n        ]\n      }),\n    )\n  }, [\n    timeSeriesData,\n    drawOrderList,\n    offset,\n    span,\n    colorScale,\n    dataStd,\n    dataXrange,\n    dataKeys,\n  ])\n\n  const annotations = React.useMemo(() => {\n    return drawOrderList.map((value) => {\n      return {\n        x: Number(dataXrange[dataXrange.length - 1]) + dataXrange.length / 10,\n        y: data[value].y[dataXrange.length - 1],\n        xref: 'x',\n        yref: 'y',\n        text: `cell: ${value}`,\n        arrowhead: 1,\n        ax: 0,\n        ay: -10,\n      }\n    })\n  }, [data, drawOrderList, dataXrange])\n\n  const layout = React.useMemo(\n    () => ({\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      width: width,\n      height: height - 50,\n      xaxis: {\n        range: [xrange.left, xrange.right],\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      yaxis: {\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      annotations: annotations,\n    }),\n    [\n      xrange,\n      showgrid,\n      showline,\n      showticklabels,\n      zeroline,\n      annotations,\n      width,\n      height,\n    ],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  const onLegendClick = (event: LegendClickEvent) => {\n    const clickNumber = dataKeys[event.curveNumber]\n\n    const newDrawOrderList = drawOrderList.includes(clickNumber)\n      ? drawOrderList.filter((value) => value !== clickNumber)\n      : [...drawOrderList, clickNumber]\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    // set DisplayNumbers\n    if (!drawOrderList.includes(clickNumber)) {\n      dispatch(getTimeSeriesDataById({ path, index: clickNumber }))\n    }\n\n    return false\n  }\n\n  return (\n    <PlotlyChart\n      data={Object.values(data)}\n      layout={layout}\n      config={config}\n      onLegendClick={onLegendClick}\n    />\n  )\n})\n\nfunction timeSeriesDataEqualityFn(\n  a: TimeSeriesData | undefined,\n  b: TimeSeriesData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.entries(a)\n    const bArray = Object.entries(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every(([aKey, aValue], i) => {\n          const [bKey, bValue] = bArray[i]\n          return bKey === aKey && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction nestEqualityFun(\n  a: {\n    [key: number]: number\n  },\n  b: {\n    [key: number]: number\n  },\n) {\n  const aArray = Object.entries(a)\n  const bArray = Object.entries(b)\n  return (\n    a === b ||\n    (aArray.length === bArray.length &&\n      aArray.every(([aKey, aValue], i) => {\n        const [bKey, bValue] = bArray[i]\n        return bKey === aKey && bValue === aValue\n      }))\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectBarData,\n  selectBarDataError,\n  selectBarDataIsFulfilled,\n  selectBarDataIsInitialized,\n  selectBarDataIsPending,\n  selectBarIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getBarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { BarData } from 'api/outputs/Outputs'\nimport {\n  selectBarItemIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setBarItemIndex } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const BarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectBarDataIsPending(path))\n  const isInitialized = useSelector(selectBarDataIsInitialized(path))\n  const error = useSelector(selectBarDataError(path))\n  const isFulfilled = useSelector(selectBarDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getBarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <BarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst BarPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const barData = useSelector(selectBarData(path), barDataEqualityFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const index = useSelector(selectBarItemIndex(itemId))\n  const dataKeys = useSelector(selectBarIndex(path))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: Object.keys(barData[index]),\n        y: Object.values(barData[index]),\n        type: 'bar',\n      },\n    ],\n    [barData, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <SelectIndex dataKeys={dataKeys} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst SelectIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const index = useSelector(selectBarItemIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setBarItemIndex({\n        itemId,\n        index: event.target.value,\n      }),\n    )\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>index</InputLabel>\n      <Select label=\"smooth\" value={`${index}`} onChange={handleChange}>\n        {dataKeys.map((v, i) => (\n          <MenuItem value={i}>{v}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction barDataEqualityFn(a: BarData | undefined, b: BarData | undefined) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHTMLData,\n  selectHTMLDataError,\n  selectHTMLDataIsFulfilled,\n  selectHTMLDataIsInitialized,\n  selectHTMLDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHTMLData } from 'store/slice/DisplayData/DisplayDataActions'\n\nexport const HTMLPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHTMLDataIsPending(path))\n  const isInitialized = useSelector(selectHTMLDataIsInitialized(path))\n  const error = useSelector(selectHTMLDataError(path))\n  const isFulfilled = useSelector(selectHTMLDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHTMLData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HTMLPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HTMLPlotImple = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const htmlData = useSelector(selectHTMLData(path))\n\n  return (\n    <div\n      dangerouslySetInnerHTML={{ __html: htmlData }}\n      style={{\n        overflow: 'scroll',\n        display: 'flex',\n        height: '90%',\n      }}\n    />\n  )\n})\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectVisualizeDataFilePath,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { DisplayDataContext } from './DataContext'\nimport { HeatMapPlot } from './Plot/HeatMapPlot'\nimport { ImagePlot } from './Plot/ImagePlot'\nimport { RoiPlot } from './Plot/RoiPlot'\nimport { ScatterPlot } from './Plot/ScatterPlot'\nimport { CsvPlot } from './Plot/CsvPlot'\nimport { TimeSeriesPlot } from './Plot/TimeSeriesPlot'\nimport { BarPlot } from './Plot/BarPlot'\nimport { HTMLPlot } from './Plot/HTMLPlot'\n\nexport const DisplayDataItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const nodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  if (filePath != null && dataType != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{ nodeId, filePath, dataType, itemId }}\n      >\n        <DisplayPlot dataType={dataType} />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n\nconst DisplayPlot = React.memo<{\n  dataType: DATA_TYPE\n}>(({ dataType }) => {\n  switch (dataType) {\n    case DATA_TYPE_SET.CSV:\n      return <CsvPlot />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesPlot />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatMapPlot />\n    case DATA_TYPE_SET.IMAGE:\n      return <ImagePlot />\n    case DATA_TYPE_SET.ROI:\n      return <RoiPlot />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterPlot />\n    case DATA_TYPE_SET.BAR:\n      return <BarPlot />\n    case DATA_TYPE_SET.HTML:\n      return <HTMLPlot />\n    default:\n      return null\n  }\n})\n","import { useDispatch, useSelector } from 'react-redux'\nimport Tabs, { tabsClasses } from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box'\nimport React from 'react'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { selectAlgorithmName } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectPipelineNodeResultOutputKeyList,\n  selectPipelineNodeResultOutputFileDataType,\n  selectPipelineNodeResultOutputFilePath,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { selectVisualizeItemIdForWorkflowDialog } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { DisplayDataItem } from 'components/Workspace/Visualize/DisplayDataItem'\n\nexport const AlgorithmOutputDialog = React.memo<{\n  open: boolean\n  onClose: () => void\n  nodeId: string\n}>(({ open, onClose, nodeId }) => {\n  const dispatch = useDispatch()\n  const closeFn = () => {\n    onClose()\n    dispatch(deleteAllItemForWorkflowDialog())\n  }\n  return (\n    <Dialog open={open} onClose={closeFn} fullWidth>\n      <TitleWithCloseButton onClose={closeFn} nodeId={nodeId} />\n      <DialogContent\n        dividers\n        sx={{\n          pt: 1,\n          px: 2,\n        }}\n      >\n        {open && <OutputViewer nodeId={nodeId} />}\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nconst TitleWithCloseButton = React.memo<{\n  onClose: () => void\n  nodeId: string\n}>(({ nodeId, onClose }) => {\n  const nodeName = useSelector(selectAlgorithmName(nodeId))\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }}>\n      Output of {nodeName}\n      <IconButton\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 10,\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </DialogTitle>\n  )\n})\n\nconst OutputViewer = React.memo<{ nodeId: string }>(({ nodeId }) => {\n  const outputKeyList = useSelector(\n    selectPipelineNodeResultOutputKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  const [selectedOutoutKey, setSelectedOutputKey] = React.useState(\n    outputKeyList[0],\n  )\n  return (\n    <>\n      <OutputSelectTabs\n        outputKeyList={outputKeyList}\n        selectedOutoutKey={selectedOutoutKey}\n        onSelectOutput={setSelectedOutputKey}\n      />\n      <DisplayDataView nodeId={nodeId} outputKey={selectedOutoutKey} />\n    </>\n  )\n})\n\nconst OutputSelectTabs = React.memo<{\n  selectedOutoutKey: string\n  outputKeyList: string[]\n  onSelectOutput: (selectedKey: string) => void\n}>(({ selectedOutoutKey, outputKeyList, onSelectOutput }) => {\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    onSelectOutput(newValue)\n  }\n  return (\n    <Tabs\n      value={selectedOutoutKey}\n      onChange={handleChange}\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n      sx={{\n        [`& .${tabsClasses.scrollButtons}`]: {\n          '&.Mui-disabled': { opacity: 0.3 },\n        },\n      }}\n    >\n      {outputKeyList.map((outputKey) => (\n        <Tab\n          value={outputKey}\n          label={outputKey}\n          sx={{\n            textTransform: 'none',\n          }}\n        />\n      ))}\n    </Tabs>\n  )\n})\n\nconst DisplayDataView = React.memo<{ nodeId: string; outputKey: string }>(\n  ({ nodeId, outputKey }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectPipelineNodeResultOutputFilePath(nodeId, outputKey),\n    )\n    const dataType = useSelector(\n      selectPipelineNodeResultOutputFileDataType(nodeId, outputKey),\n    )\n    const itemId = useSelector(\n      selectVisualizeItemIdForWorkflowDialog(nodeId, filePath, dataType),\n    )\n    React.useEffect(() => {\n      if (itemId === null) {\n        dispatch(addItemForWorkflowDialog({ nodeId, filePath, dataType }))\n      }\n    }, [dispatch, nodeId, filePath, dataType, itemId])\n    return (\n      <Box\n        sx={{\n          mx: 1,\n          my: 2,\n        }}\n      >\n        {itemId != null && <DisplayDataItem itemId={itemId} />}\n      </Box>\n    )\n  },\n)\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { RootState } from '../../store'\n\nexport const selectFilesTree =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) => {\n    if (state.filesTree[fileType] != null) {\n      return state.filesTree[fileType]\n    } else {\n      return undefined\n    }\n  }\n\nexport const selectFilesTreeNodes =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.tree\n\nexport const selectFilesIsLatest =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLatest ?? false\n\nexport const selectFilesIsLoading =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLoading ?? false\n","export const FILES_TREE_SLICE_NAME = 'filesTree'\n\nexport type TreeNodeType = DirNode | FileNode\n\nexport interface NodeBase {\n  path: string\n  name: string\n  isDir: boolean\n}\n\nexport interface DirNode extends NodeBase {\n  isDir: true\n  nodes: TreeNodeType[]\n}\n\nexport interface FileNode extends NodeBase {\n  isDir: false\n}\n\nexport interface FilesTree {\n  [fileType: string]: {\n    isLatest: boolean\n    isLoading: boolean\n    tree: TreeNodeType[]\n  }\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  FILE_TREE_TYPE,\n  getFilesTreeApi,\n  TreeNodeTypeDTO,\n} from 'api/files/Files'\n\nimport { FILES_TREE_SLICE_NAME } from './FilesTreeType'\n\nexport const getFilesTree = createAsyncThunk<\n  TreeNodeTypeDTO[],\n  { workspaceId: number; fileType: FILE_TREE_TYPE }\n>(\n  `${FILES_TREE_SLICE_NAME}/getFilesTree`,\n  async ({ workspaceId, fileType }, thunkAPI) => {\n    try {\n      const response = await getFilesTreeApi(workspaceId, fileType)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { TreeNodeTypeDTO } from 'api/files/Files'\nimport { TreeNodeType } from './FilesTreeType'\n\nexport function convertToTreeNodeType(dto: TreeNodeTypeDTO[]): TreeNodeType[] {\n  return dto.map((node) =>\n    node.isdir\n      ? {\n          path: node.path,\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n        }\n      : {\n          path: node.path,\n          name: node.name,\n          isDir: false,\n        },\n  )\n}\n\nexport function isDirNodeByPath(path: string, tree: TreeNodeType[]): boolean {\n  const node = getNodeByPath(path, tree)\n  if (node != null) {\n    return node.isDir\n  } else {\n    throw new Error(`failed to get node: ${path}`)\n  }\n}\n\nexport function getNodeByPath(\n  path: string,\n  tree: TreeNodeType[],\n): TreeNodeType | null {\n  let targetNode: TreeNodeType | null = null\n  for (const node of tree) {\n    if (path === node.path) {\n      targetNode = node\n      break\n    } else {\n      if (node.isDir) {\n        targetNode = getNodeByPath(path, node.nodes)\n        if (targetNode != null) {\n          break\n        }\n      }\n    }\n  }\n  return targetNode\n}\n","import Dialog from '@mui/material/Dialog'\nimport { useDispatch, useSelector } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\nimport Checkbox, { CheckboxProps } from '@mui/material/Checkbox'\n\nimport Box from '@mui/material/Box'\nimport { useTheme } from '@mui/material/styles'\nimport React from 'react'\n\nimport {\n  selectFilesIsLatest,\n  selectFilesIsLoading,\n  selectFilesTreeNodes,\n} from 'store/slice/FilesTree/FilesTreeSelectors'\nimport { getFilesTree } from 'store/slice/FilesTree/FilesTreeAction'\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { TreeNodeType } from 'store/slice/FilesTree/FilesTreeType'\nimport {\n  getNodeByPath,\n  isDirNodeByPath,\n} from 'store/slice/FilesTree/FilesTreeUtils'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\ntype FileSelectDialogProps = {\n  initialFilePath: string[] | string\n  onClickOk: (path: string[] | string) => void\n  fileType?: FILE_TREE_TYPE\n  title?: string\n  open: boolean\n  onClickCancel: () => void\n  multiSelect: boolean\n}\n\nexport const FileSelectDialog = React.memo<FileSelectDialogProps>(\n  function FileSelectDialog({\n    open,\n    initialFilePath,\n    onClickCancel,\n    onClickOk,\n    title,\n    fileType = FILE_TREE_TYPE_SET.ALL,\n    multiSelect,\n  }) {\n    React.useEffect(() => {\n      setSelectedFilePath(initialFilePath)\n    }, [initialFilePath])\n    const [selectedFilePath, setSelectedFilePath] =\n      React.useState(initialFilePath)\n    const onCancel = () => {\n      setSelectedFilePath(initialFilePath) // 選択内容を反映させない\n      onClickCancel()\n    }\n    const onOk = () => {\n      onClickOk(selectedFilePath)\n    }\n    const theme = useTheme()\n    return (\n      <Dialog open={open} fullWidth>\n        <DialogTitle>{title ?? 'Select File'}</DialogTitle>\n        <DialogContent dividers>\n          <div\n            style={{\n              height: 300,\n              overflow: 'auto',\n              marginBottom: theme.spacing(1),\n              border: '1px solid',\n              padding: theme.spacing(1),\n              borderColor: theme.palette.divider,\n            }}\n          >\n            <FileTreeView\n              setSelectedFilePath={setSelectedFilePath}\n              multiSelect={multiSelect}\n              fileType={fileType}\n              selectedFilePath={selectedFilePath}\n            />\n          </div>\n          <Typography variant=\"subtitle1\">Select File</Typography>\n          <FilePathSelectedListView path={selectedFilePath} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  },\n)\n\nconst FileTreeView = React.memo<{\n  setSelectedFilePath: (path: string[] | string) => void\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  fileType: FILE_TREE_TYPE\n}>(({ setSelectedFilePath, selectedFilePath, fileType, multiSelect }) => {\n  const [tree, isLoading] = useFileTree(fileType)\n  const onNodeSelectHandler = (\n    event: React.SyntheticEvent,\n    nodeIds: Array<string> | string,\n  ) => {\n    if (!multiSelect && tree != null) {\n      // multiSelectがfalseの場合、ディレクトリは選択しない\n      const path = nodeIds as string\n      if (!isDirNodeByPath(path, tree)) {\n        setSelectedFilePath(path)\n      }\n    }\n  }\n  // multiSelectでチェックボックスを使用する時用のハンドラ\n  const onCheckFile = (path: string) => {\n    if (Array.isArray(selectedFilePath)) {\n      if (selectedFilePath.includes(path)) {\n        setSelectedFilePath(\n          selectedFilePath.filter((selectedPath) => path !== selectedPath),\n        )\n      } else {\n        setSelectedFilePath(selectedFilePath.concat(path))\n      }\n    }\n  }\n  const onCheckDir = (path: string, checked: boolean) => {\n    if (tree != null && Array.isArray(selectedFilePath)) {\n      const node = getNodeByPath(path, tree)\n      if (node != null && node.isDir) {\n        const childrenFilePathList = node.nodes\n          .filter((node) => !node.isDir)\n          .map((node) => node.path)\n        if (checked) {\n          setSelectedFilePath(\n            // concat時の重複を削除\n            Array.from(new Set(selectedFilePath.concat(childrenFilePathList))),\n          )\n        } else {\n          setSelectedFilePath(\n            selectedFilePath.filter(\n              (selectedPath) => !childrenFilePathList.includes(selectedPath),\n            ),\n          )\n        }\n      }\n    }\n  }\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView\n        disableSelection={multiSelect}\n        multiSelect={multiSelect}\n        onNodeSelect={onNodeSelectHandler}\n      >\n        {tree?.map((node) => (\n          <TreeNode\n            node={node}\n            selectedFilePath={selectedFilePath}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: TreeNodeType\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  onCheckFile: (path: string) => void\n  onCheckDir: (path: string, checked: boolean) => void\n}>(({ node, selectedFilePath, multiSelect, onCheckDir, onCheckFile }) => {\n  if (node.isDir) {\n    const allChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => selectedFilePath.includes(filePath))\n    const allNotChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => !selectedFilePath.includes(filePath))\n    const indeterminate = !(allChecked || allNotChecked)\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={\n          multiSelect && node.nodes.filter((node) => !node.isDir).length > 0 ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                indeterminate,\n                checked: allChecked,\n                onClick: (e) => {\n                  e.stopPropagation() // on/offのクリックにつられてTreeを開閉させないようにする\n                },\n                onChange: (e) => onCheckDir(node.path, e.target.checked),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode\n            node={childNode}\n            selectedFilePath={selectedFilePath}\n            key={i}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={\n          multiSelect ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                checked:\n                  Array.isArray(selectedFilePath) &&\n                  selectedFilePath.includes(node.path),\n                onChange: () => onCheckFile(node.path),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n        onClick={() => onCheckFile(node.path)}\n      />\n    )\n  }\n})\n\nconst TreeItemLabel = React.memo<{\n  label: string\n  checkboxProps: CheckboxProps\n}>(({ label, checkboxProps }) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box flexGrow={1}>{label}</Box>\n      <Box>\n        <Checkbox\n          {...checkboxProps}\n          disableRipple\n          size=\"small\"\n          sx={{\n            marginRight: '4px',\n            padding: '2px',\n          }}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectedListView = React.memo<{ path: string | string[] }>(\n  ({ path }) => {\n    return (\n      <Typography variant=\"subtitle2\">\n        {!!path\n          ? Array.isArray(path)\n            ? path.map((text) => <li>{text}</li>)\n            : path\n          : '---'}\n      </Typography>\n    )\n  },\n)\n\nfunction useFileTree(\n  fileType: FILE_TREE_TYPE,\n): [TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectFilesTreeNodes(fileType))\n  const isLatest = useSelector(selectFilesIsLatest(fileType))\n  const isLoading = useSelector(selectFilesIsLoading(fileType))\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  React.useEffect(() => {\n    if (workspaceId && !isLatest && !isLoading) {\n      dispatch(getFilesTree({workspaceId, fileType}))\n    }\n  }, [workspaceId, isLatest, isLoading, fileType, dispatch])\n  return [tree, isLoading]\n}\n","import React, { DragEvent, MouseEvent, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  Controls,\n  Connection,\n  Edge,\n  Node,\n  OnNodesChange,\n  OnEdgesChange,\n  ReactFlowInstance,\n  OnMove,\n  Viewport,\n} from 'react-flow-renderer'\nimport { useDrop } from 'react-dnd'\n\nimport 'style/flow.css'\nimport {\n  editFlowNodePositionById,\n  setEdgesChange,\n  setFlowEdges,\n  setFlowPosition,\n  setNodesChange,\n} from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectFlowEdges,\n  selectFlowNodes,\n  selectFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { ToolBar } from 'components/Workspace/ToolBar'\nimport {\n  reactFlowEdgeTypes,\n  reactFlowNodeTypes,\n} from './FlowChartNode/ReactFlowNodeTypesConst'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\nimport { AlgorithmOutputDialog } from './FlowChartNode/AlgorithmOutputDialog'\nimport {\n  DialogContext,\n  ErrorDialogValue,\n  OpenDialogValue,\n} from 'components/Workspace/FlowChart/DialogContext'\nimport { FileSelectDialog } from 'components/common/FileSelectDialog'\nimport { FormHelperText, Popover } from '@mui/material'\n\nconst initDialogFile = {\n  filePath: '',\n  open: false,\n  fileTreeType: undefined,\n  multiSelect: false,\n  onSelectFile: () => null,\n}\n\nexport const ReactFlowComponent = React.memo<UseRunPipelineReturnType>(\n  (props) => {\n    const flowNodes = useSelector(selectFlowNodes)\n    const flowEdges = useSelector(selectFlowEdges)\n    const dispatch = useDispatch()\n    const [dialogNodeId, setDialogNodeId] = useState('')\n    const [dialogFile, setDialogFile] =\n      useState<OpenDialogValue>(initDialogFile)\n    const [messageError, setMessageError] = useState<ErrorDialogValue>({\n      anchorElRef: { current: null },\n      message: '',\n    })\n\n    const onConnect = (params: Connection | Edge) => {\n      dispatch(\n        setFlowEdges(\n          addEdge(\n            {\n              ...params,\n              animated: false,\n              style: { width: 5 },\n              type: 'buttonedge',\n            },\n            flowEdges,\n          ),\n        ),\n      )\n    }\n\n    const onNodesChange: OnNodesChange = (changes) =>\n      dispatch(setNodesChange(changes))\n    const onEdgesChange: OnEdgesChange = (changes) =>\n      dispatch(setEdgesChange(changes))\n\n    const onDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    const onNodeDragStop = (event: MouseEvent, node: Node) => {\n      dispatch(\n        editFlowNodePositionById({\n          nodeId: node.id,\n          coord: { x: node.position.x, y: node.position.y },\n        }),\n      )\n    }\n\n    const flowPosition = useSelector(selectFlowPosition)\n\n    const onMoveEnd: OnMove = (event, viewport: Viewport) => {\n      if (event !== undefined) {\n        dispatch(setFlowPosition([viewport.x, viewport.y, viewport.zoom]))\n      }\n    }\n\n    const [reactFlowInstance, setReactFlowInstance] =\n      React.useState<ReactFlowInstance>()\n\n    const onInit = (reactFlowInstance: ReactFlowInstance) =>\n      setReactFlowInstance(reactFlowInstance)\n\n    const wrapparRef = React.useRef<HTMLDivElement>(null)\n    const [, drop] = useDrop<\n      TreeItemDragObject,\n      TreeItemDropResult,\n      TreeItemCollectedProps\n    >(\n      () => ({\n        accept: DND_ITEM_TYPE_SET.TREE_ITEM,\n        drop: (_, monitor) => {\n          let position: TreeItemDropResult['position'] = undefined\n          const monitorOffset = monitor.getClientOffset()\n          if (\n            wrapparRef.current != null &&\n            monitorOffset != null &&\n            reactFlowInstance != null\n          ) {\n            position = reactFlowInstance.project({\n              x: monitorOffset.x - wrapparRef.current.offsetLeft - 40,\n              y: monitorOffset.y - wrapparRef.current.offsetTop - 40,\n            })\n          }\n          return { position }\n        },\n      }),\n      [reactFlowInstance],\n    )\n    return (\n      <div className=\"flow\">\n        <DialogContext.Provider\n          value={{\n            onOpen: setDialogNodeId,\n            onOpenDialogFile: setDialogFile,\n            onMessageError: setMessageError,\n          }}\n        >\n          <ReactFlowProvider>\n            <div className=\"reactflow-wrapper\" ref={wrapparRef}>\n              <ReactFlow\n                ref={drop}\n                nodes={flowNodes}\n                edges={flowEdges}\n                onNodesChange={onNodesChange}\n                onEdgesChange={onEdgesChange}\n                onConnect={onConnect}\n                onInit={onInit}\n                onDragOver={onDragOver}\n                onNodeDragStop={onNodeDragStop}\n                nodeTypes={reactFlowNodeTypes}\n                edgeTypes={reactFlowEdgeTypes}\n                defaultPosition={[flowPosition[0], flowPosition[1]]}\n                defaultZoom={flowPosition[2]}\n                onMoveEnd={onMoveEnd}\n              >\n                <ToolBar {...props} />\n                <Controls />\n              </ReactFlow>\n            </div>\n          </ReactFlowProvider>\n          {dialogNodeId && (\n            <AlgorithmOutputDialog\n              nodeId={dialogNodeId}\n              open\n              onClose={() => setDialogNodeId('')}\n            />\n          )}\n          {dialogFile.open && (\n            <FileSelectDialog\n              multiSelect={dialogFile.multiSelect}\n              initialFilePath={dialogFile.filePath}\n              open={dialogFile.open}\n              onClickOk={(path) => {\n                dialogFile.onSelectFile(path)\n                setDialogFile(initDialogFile)\n              }}\n              onClickCancel={() => {\n                setDialogFile(initDialogFile)\n              }}\n              fileType={dialogFile.fileTreeType}\n            />\n          )}\n          {messageError?.message && (\n            <Popover\n              open\n              anchorEl={messageError.anchorElRef.current}\n              onClose={() =>\n                setMessageError({\n                  anchorElRef: { current: null },\n                  message: '',\n                })\n              }\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              transformOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n            >\n              <div style={{ margin: 8 }}>\n                <FormHelperText error={true}>\n                  {messageError.message}\n                </FormHelperText>\n              </div>\n            </Popover>\n          )}\n        </DialogContext.Provider>\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nexport const selectRightDrawerIsOpen = (state: RootState) =>\n  state.rightDrawer.open\n\nexport const selectRightDrawerMode = (state: RootState) =>\n  state.rightDrawer.mode\n\nexport const selectRightDrawerCurrentNodeId = (state: RootState) =>\n  state.rightDrawer.currendNodeId\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const ALGORITHM_NODE_SLICE_NAME = 'algorithmNode'\n\nexport type AlgorithmNode = {\n  [nodeId: string]: AlgrithmNodeType\n}\n\ntype AlgrithmNodeType = {\n  functionPath: string\n  name: string\n  params: ParamMap | null\n  isUpdated: boolean\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getAlgoParamsApi } from 'api/params/Params'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { ALGORITHM_NODE_SLICE_NAME } from './AlgorithmNodeType'\n\nexport const getAlgoParams = createAsyncThunk<\n  ParamDTO,\n  { nodeId: string; algoName: string }\n>(\n  `${ALGORITHM_NODE_SLICE_NAME}/getAlgoParams`,\n  async ({ algoName }, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoParamsApi(algoName)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\n\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport {\n  deleteFlowNodes,\n  deleteFlowNodeById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  fetchExperiment,\n  importExperimentByUid,\n} from '../Experiments/ExperimentsActions'\nimport { getAlgoParams } from './AlgorithmNodeActions'\nimport { ALGORITHM_NODE_SLICE_NAME, AlgorithmNode } from './AlgorithmNodeType'\nimport { isAlgorithmNodePostData } from 'api/run/RunUtils'\nimport { run, runByCurrentUid } from '../Pipeline/PipelineActions'\nimport { addAlgorithmNode } from '../FlowElement/FlowElementActions'\n\nconst initialState: AlgorithmNode = {}\n\nexport const algorithmNodeSlice = createSlice({\n  name: ALGORITHM_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { nodeId, path, newValue } = action.payload\n      const param = state[nodeId].params\n      if (param != null) {\n        const target = getChildParam(path, param)\n        if (target != null) {\n          target.value = newValue\n          state[nodeId].isUpdated = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAlgoParams.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        state[nodeId].params = convertToParamMap(action.payload)\n      })\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        const { node, functionPath, name } = action.meta.arg\n        const params = action.payload\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          state[node.id] = {\n            functionPath,\n            name,\n            params: convertToParamMap(params),\n            isUpdated: false,\n          }\n        }\n      })\n      .addCase(deleteFlowNodes, (state, action) => {\n        action.payload.forEach((node) => {\n          if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n            delete state[node.id]\n          }\n        })\n      })\n      .addCase(deleteFlowNodeById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addMatcher(\n        isAnyOf(importExperimentByUid.fulfilled, fetchExperiment.fulfilled),\n        (_, action) => {\n          const newState: AlgorithmNode = {}\n          Object.values(action.payload.nodeDict)\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              if (node.data != null) {\n                newState[node.id] = {\n                  name: node.data.label,\n                  functionPath: node.data.path,\n                  params: node.data.param,\n                  isUpdated: false,\n                }\n              }\n            })\n          return newState\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          Object.values(runPostData.nodeDict)\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              state[node.id].isUpdated = false\n            })\n        },\n      )\n  },\n})\n\nexport const { updateParam } = algorithmNodeSlice.actions\nexport default algorithmNodeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Typography from '@mui/material/Typography'\n\nimport {\n  selectAlgorithmName,\n  selectAlgorithmParamsExit,\n  selectAlgorithmParamsKeyList,\n  selectAlgorithmParamsValue,\n  selectAlgorithmParam,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { updateParam } from 'store/slice/AlgorithmNode/AlgorithmNodeSlice'\nimport { getAlgoParams } from 'store/slice/AlgorithmNode/AlgorithmNodeActions'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { ParamFormContext } from './RightDrawer'\n\nexport const AlgorithmParamForm = React.memo(() => {\n  const nodeId = React.useContext(ParamFormContext)\n  const dispatch = useDispatch()\n  const algoName = useSelector(selectAlgorithmName(nodeId))\n  const algoParamIsLoaded = useSelector(selectAlgorithmParamsExit(nodeId))\n  const paramKeyList = useSelector(\n    selectAlgorithmParamsKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (!algoParamIsLoaded) {\n      dispatch(getAlgoParams({ nodeId, algoName }))\n    }\n  }, [dispatch, nodeId, algoName, algoParamIsLoaded])\n  return (\n    <div style={{ padding: 8 }}>\n      <Typography variant=\"h5\">{algoName}</Typography>\n      <div style={{ paddingLeft: 8 }}>\n        {paramKeyList.map((paramKey) => (\n          <ParamItem key={paramKey} paramKey={paramKey} />\n        ))}\n      </div>\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const nodeId = React.useContext(ParamFormContext)\n  const Component = createParamFormItemComponent({\n    paramSelector: (paramKey) => selectAlgorithmParam(nodeId, paramKey),\n    paramValueSelector: (path) => selectAlgorithmParamsValue(nodeId, path),\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ nodeId, path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Divider from '@mui/material/Divider'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport Box from '@mui/material/Box'\nimport {\n  selectRightDrawerCurrentNodeId,\n  selectRightDrawerIsOpen,\n  selectRightDrawerMode,\n} from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport {\n  closeRightDrawer,\n  RIGHT_DRAWER_MODE,\n} from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { NWBSettingContents } from './NWB'\nimport { RootState } from 'store/store'\nimport { AlgorithmParamForm } from './AlgorithmParamForm'\nimport { SnakemakeContents } from './Snakemake'\nimport { RIGHT_DRAWER_WIDTH } from 'const/Layout'\n\nconst RightDrawer: React.FC = () => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(closeRightDrawer())\n  const title = useSelector((state: RootState) => {\n    const mode = selectRightDrawerMode(state)\n    switch (mode) {\n      case RIGHT_DRAWER_MODE.NWB:\n        return 'NWB Setting'\n      case RIGHT_DRAWER_MODE.PARAM_FORM:\n        return 'Param From'\n      case RIGHT_DRAWER_MODE.SNAKEMAKE:\n        return 'Snakemake'\n      default:\n        return 'none'\n    }\n  })\n  return (\n    <StyledDrawer open={open} anchor=\"right\" variant=\"persistent\">\n      <Toolbar />\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton color=\"inherit\" onClick={onClick} size=\"large\">\n          <ChevronRightIcon />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Box>\n      <Divider />\n      <MainContents>\n        <Contents />\n      </MainContents>\n    </StyledDrawer>\n  )\n}\n\nconst Contents: React.FC = () => {\n  const mode = useSelector(selectRightDrawerMode)\n  switch (mode) {\n    case RIGHT_DRAWER_MODE.NWB:\n      return <NWBSettingContents />\n    case RIGHT_DRAWER_MODE.PARAM_FORM:\n      return <ParamFormConetent />\n    case RIGHT_DRAWER_MODE.SNAKEMAKE:\n      return <SnakemakeContents />\n    default:\n      return null\n  }\n}\n\n/**\n * nodeId\n */\nexport const ParamFormContext = React.createContext<string>('')\n\nconst ParamFormConetent: React.FC = () => {\n  const nodeId = useSelector(selectRightDrawerCurrentNodeId)\n  if (nodeId != null) {\n    return (\n      <ParamFormContext.Provider value={nodeId}>\n        <AlgorithmParamForm />\n      </ParamFormContext.Provider>\n    )\n  } else {\n    return null\n  }\n}\n\nconst StyledDrawer = styled(Drawer)({\n  width: RIGHT_DRAWER_WIDTH,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: RIGHT_DRAWER_WIDTH,\n  },\n})\n\nconst MainContents = styled('main')({\n  height: '100%',\n})\n\nexport default RightDrawer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectPipelineLatestUid } from 'store/slice/Pipeline/PipelineSelectors'\nimport { Divider, Typography, Grid } from '@mui/material'\nimport {\n  selectExperimentName,\n  selectExperimentsStatusIsFulfilled,\n} from 'store/slice/Experiments/ExperimentsSelectors'\n\nexport const CurrentPipelineInfo: React.FC = () => {\n  const uid = useSelector(selectPipelineLatestUid)\n  const isFulFilled = useSelector(selectExperimentsStatusIsFulfilled)\n\n  return (\n    <>\n      {uid && (\n        <>\n          <Grid container paddingX={2} paddingBottom={1}>\n            <ExperimentUidInfo uid={uid} />\n            {isFulFilled && <ExperimentNameInfo uid={uid} />}\n          </Grid>\n          <Divider />\n        </>\n      )}\n    </>\n  )\n}\n\nconst ExperimentUidInfo = React.memo<{ uid: string }>(({ uid }) => {\n  return <LabelValueGridRow label=\"ID\" value={uid} />\n})\n\nconst ExperimentNameInfo = React.memo<{ uid: string }>(({ uid }) => {\n  const name = useSelector(selectExperimentName(uid))\n  return <LabelValueGridRow label=\"NAME\" value={name} />\n})\n\nconst LabelValueGridRow = React.memo<{ label: string; value: string }>(\n  ({ label, value }) => {\n    return (\n      <>\n        <Grid item xs={4}>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {label}:\n          </Typography>\n        </Grid>\n        <Grid item xs={8}>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {value}\n          </Typography>\n        </Grid>\n      </>\n    )\n  },\n)\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport { AlgorithmTreeView } from './TreeView'\nimport { ReactFlowComponent } from './ReactFlowComponent'\nimport RightDrawer from './RightDrawer'\nimport { selectRightDrawerIsOpen } from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { CurrentPipelineInfo } from 'components/common/CurrentPipelineInfo'\nimport { CONTENT_HEIGHT, DRAWER_WIDTH, RIGHT_DRAWER_WIDTH } from 'const/Layout'\nimport { Box } from '@mui/material'\nimport { grey } from '@mui/material/colors'\n\nconst FlowChart = React.memo<UseRunPipelineReturnType>((props) => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  return (\n    <RootDiv>\n      <DndProvider backend={HTML5Backend}>\n        <Box\n          sx={{\n            width: DRAWER_WIDTH,\n          }}\n          borderRight={1}\n          borderColor={grey[300]}\n        >\n          <CurrentPipelineInfo />\n          <DrawerContents>\n            <AlgorithmTreeView />\n          </DrawerContents>\n        </Box>\n\n        <MainContents open={open}>\n          <ReactFlowComponent {...props} />\n        </MainContents>\n      </DndProvider>\n      <RightDrawer />\n    </RootDiv>\n  )\n})\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n})\n\nconst DrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')<{ open: boolean }>(\n  ({ theme }) => ({\n    flexDirection: 'column',\n    flexGrow: 1,\n    minHeight: CONTENT_HEIGHT,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -RIGHT_DRAWER_WIDTH,\n  }),\n  ({ open, theme }) =>\n    open\n      ? {\n          transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n          marginRight: 0,\n        }\n      : undefined,\n)\n\nexport default FlowChart\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport AddIcon from '@mui/icons-material/Add'\nimport Button from '@mui/material/Button'\nimport { pushInitialItemToNewRow } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const VisualizeItemAddButton: React.FC = () => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(pushInitialItemToNewRow())\n  }\n  return (\n    <StyledPaper elevation={1} variant=\"outlined\">\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height=\"100%\"\n      >\n        <StyledButton onClick={onClick}>\n          <AddIcon fontSize=\"large\" color=\"primary\" />\n        </StyledButton>\n      </Box>\n    </StyledPaper>\n  )\n}\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  width: 260,\n  height: 255,\n  border: 'dashed',\n  borderWidth: 2,\n  borderColor: theme.palette.divider,\n  margin: theme.spacing(1),\n}))\n\nconst StyledButton = styled(Button)({\n  width: '100%',\n  height: '100%',\n})\n","import React from 'react'\n\nexport function useMouseDragHandler(\n  onMouseDown: (event: React.MouseEvent) => {\n    onMouseMove: (this: Document, event: MouseEvent) => void\n    onMouseUp: (this: Document, event: MouseEvent) => void\n  },\n  dependencies: React.DependencyList,\n) {\n  return React.useCallback(\n    (event: React.MouseEvent) => {\n      const { onMouseMove, onMouseUp } = onMouseDown(event)\n      document.addEventListener('mousemove', onMouseMove)\n      document.addEventListener(\n        'mouseup',\n        (event) => {\n          document.removeEventListener('mousemove', onMouseMove)\n          onMouseUp.call(document, event)\n        },\n        { once: true },\n      )\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dependencies],\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport Menu from '@mui/material/Menu'\nimport MenuItem from '@mui/material/MenuItem'\nimport ListItemText from '@mui/material/ListItemText'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport AddIcon from '@mui/icons-material/Add'\nimport {\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { insertInitialItemToNextColumn } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { deleteDisplayItem } from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const DisplayDataItemLayoutMenuIcon = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onClickDeleteMenu = () => {\n    // visualize Itemで同じpathのデータ個数を調べて、1だったら、displayも削除\n    dispatch(\n      deleteDisplayItem(\n        isSingleData && filePath != null && dataType != null\n          ? { itemId, deleteData: true, filePath, dataType }\n          : { itemId, deleteData: false },\n      ),\n    )\n  }\n  const onClickInsertMenu = () => {\n    dispatch(insertInitialItemToNextColumn(itemId))\n  }\n  return (\n    <PresentationalLayoutMenuIcon\n      onClickDeleteMenu={onClickDeleteMenu}\n      onClickInsertMenu={onClickInsertMenu}\n    />\n  )\n})\n\nconst PresentationalLayoutMenuIcon = React.memo<{\n  onClickDeleteMenu: () => void\n  onClickInsertMenu: () => void\n}>(({ onClickDeleteMenu, onClickInsertMenu }) => {\n  const [open, setOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLButtonElement>(null)\n  const onClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.stopPropagation() // 親divのonClickを反応させないため\n    setOpen((prevOpen) => !prevOpen)\n  }\n  const onClose = () => {\n    setOpen(false)\n  }\n  const onClickDeleteMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickDeleteMenu()\n    setOpen(false)\n  }\n  const onClickInsertMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickInsertMenu()\n    setOpen(false)\n  }\n  return (\n    <>\n      <IconButton ref={anchorRef} onClick={onClick}>\n        <MoreVertIcon />\n      </IconButton>\n      <Menu anchorEl={anchorRef.current} open={open} onClose={onClose}>\n        <MenuItem onClick={onClickInsertMenuFn}>\n          <ListItemIcon>\n            <AddIcon />\n          </ListItemIcon>\n          <ListItemText>Insert into next column</ListItemText>\n        </MenuItem>\n        <MenuItem onClick={onClickDeleteMenuFn}>\n          <ListItemIcon>\n            <DeleteIcon />\n          </ListItemIcon>\n          <ListItemText>Delete</ListItemText>\n        </MenuItem>\n      </Menu>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport FormControl from '@mui/material/FormControl'\nimport MenuItem from '@mui/material/MenuItem'\nimport InputLabel from '@mui/material/InputLabel'\nimport FormHelperText from '@mui/material/FormHelperText'\nimport Select from '@mui/material/Select'\nimport ListSubheader from '@mui/material/ListSubheader'\n\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { RootState } from 'store/store'\nimport { selectInputNode } from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { selectNodeLabelById } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultSuccessList,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { getFileName } from 'store/slice/FlowElement/FlowElementUtils'\n\nexport const FilePathSelect: React.FC<{\n  dataType?: DATA_TYPE\n  selectedNodeId: string | null\n  selectedFilePath: string | null\n  onSelect: (nodeId: string, filePath: string, dataType: DATA_TYPE, outputKey?: string) => void\n  label?: string\n}> = ({ dataType, selectedNodeId, selectedFilePath, onSelect, label }) => {\n  const inputNodeFilePathInfoList = useSelector(\n    (state: RootState) => {\n      const inputNodes = selectInputNode(state)\n      return Object.entries(inputNodes)\n        .map(([nodeId, inputNode]) => ({\n          nodeId,\n          filePath: inputNode.selectedFilePath,\n          fileType: inputNode.fileType,\n          dataType: toDataTypeFromFileType(inputNode.fileType),\n          nodeName: selectNodeLabelById(nodeId)(state),\n        }))\n        .filter(({ filePath }) => filePath != null)\n        .filter(({ dataType: inputNodeDataType }) =>\n          dataType != null ? inputNodeDataType === dataType : true,\n        )\n    },\n    // todo 比較関数\n  )\n\n  const latestUid = useSelector(selectPipelineLatestUid)\n\n  const algorithmNodeOutputPathInfoList = useSelector((state: RootState) => {\n    if (latestUid != null) {\n      const runResult = selectPipelineNodeResultSuccessList(state)\n      return runResult.map(({ nodeId, nodeResult }) => {\n        return {\n          nodeId,\n          nodeName: selectNodeLabelById(nodeId)(state),\n          paths: Object.entries(nodeResult.outputPaths)\n            .map(([outputKey, value]) => {\n              return {\n                outputKey,\n                filePath: value.path,\n                type: value.type,\n              }\n            })\n            .filter(({ type }) =>\n              dataType != null ? type === dataType : true,\n            ),\n        }\n      })\n    } else {\n      return []\n    }\n  })\n\n  const [open, setOpen] = React.useState(false)\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const onSelectHandle = (\n    nodeId: string,\n    filePath: string,\n    dataType: DATA_TYPE,\n    outputKey?: string\n  ) => {\n    onSelect(nodeId, filePath, dataType, outputKey)\n    handleClose()\n  }\n\n  const menuItemList: React.ReactElement[] = []\n  inputNodeFilePathInfoList.forEach((pathInfo) => {\n    const filePath = pathInfo.filePath\n    if (Array.isArray(filePath)) {\n      filePath.forEach((pathElm) => {\n        menuItemList.push(\n          <MenuItem\n            value={`${pathInfo.nodeId}/${pathElm}`}\n            onClick={() =>\n              onSelectHandle(pathInfo.nodeId, pathElm ?? '', pathInfo.dataType)\n            }\n            key={pathInfo.nodeId}\n          >\n            {getFileName(pathElm)}\n          </MenuItem>,\n        )\n      })\n    } else {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${pathInfo.filePath}`}\n          onClick={() =>\n            onSelectHandle(pathInfo.nodeId, filePath ?? '', pathInfo.dataType)\n          }\n          key={pathInfo.nodeId}\n        >\n          {pathInfo.nodeName}\n        </MenuItem>,\n      )\n    }\n  })\n  algorithmNodeOutputPathInfoList.forEach((pathInfo) => {\n    menuItemList.push(<ListSubheader>{pathInfo.nodeName}</ListSubheader>)\n    pathInfo.paths.forEach((outputPath, i) => {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${outputPath.filePath}`}\n          onClick={() =>\n            onSelectHandle(\n              pathInfo.nodeId,\n              outputPath.filePath,\n              outputPath.type,\n              outputPath.outputKey\n            )\n          }\n          key={`${pathInfo.nodeId}/${outputPath.filePath}`}\n        >\n          {outputPath.outputKey}\n        </MenuItem>,\n      )\n    })\n  })\n\n  return (\n    <FormControl style={{ minWidth: 150, maxWidth: 220 }} variant=\"standard\">\n      <InputLabel>{!!label ? label : 'Select Item'}</InputLabel>\n      <Select\n        value={`${selectedNodeId}/${selectedFilePath}`}\n        open={open}\n        onClose={handleClose}\n        onOpen={handleOpen}\n      >\n        {menuItemList}\n      </Select>\n      {inputNodeFilePathInfoList.length +\n        algorithmNodeOutputPathInfoList.length ===\n        0 && <FormHelperText error={true}>no data</FormHelperText>}\n    </FormControl>\n  )\n}\n\nfunction toDataTypeFromFileType(fileType: FILE_TYPE) {\n  switch (fileType) {\n    case FILE_TYPE_SET.IMAGE:\n      return DATA_TYPE_SET.IMAGE\n    case FILE_TYPE_SET.CSV:\n      return DATA_TYPE_SET.CSV\n    case FILE_TYPE_SET.HDF5:\n      return DATA_TYPE_SET.HDF5\n    case FILE_TYPE_SET.FLUO:\n      return DATA_TYPE_SET.FLUO\n    case FILE_TYPE_SET.BEHAVIOR:\n      return DATA_TYPE_SET.BEHAVIOR\n  }\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport FormControl from '@mui/material/FormControl'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { RootState } from 'store/store'\nimport {\n  selectDisplayDataIsSingle,\n  selectImageItemFilePath,\n  selectRoiItemFilePath,\n  selectRoiItemNodeId,\n  selectSelectedVisualizeItemId,\n  selectTimeSeriesItemRefImageItemId,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n  selectVisualizeImageItemIdList,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  selectItem,\n  setItemSize,\n  setRoiItemFilePath,\n  setTimeSeriesRefImageItemId,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { useMouseDragHandler } from 'components/utils/MouseDragUtil'\nimport { DisplayDataItemLayoutMenuIcon } from './VisualizeItemLayoutMenuIcon'\nimport { DisplayDataItem } from './DisplayDataItem'\nimport { FilePathSelect } from './FilePathSelect'\n\nexport const VisualizeItem = React.memo<{ itemId: number }>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(selectItem(itemId))\n  }\n  const isSelected = useSelector(\n    (state: RootState) => selectSelectedVisualizeItemId(state) === itemId,\n  )\n  const { size, onMouseDownX, onMouseDownY, onMouseDownXY } =\n    useItemDragResize(itemId)\n  return (\n    <Box sx={{ m: 1, display: 'flex', flexDirection: 'row' }}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Paper\n          variant=\"outlined\"\n          key={itemId}\n          onClick={onClick}\n          sx={{\n            width: `${size.width}px`,\n            minHeight: `${size.height}px`,\n            p: 1,\n            borderColor: (theme) =>\n              isSelected ? theme.palette.primary.light : undefined,\n          }}\n        >\n          <ItemHeader itemId={itemId} />\n          <DisplayDataItem itemId={itemId} />\n        </Paper>\n        <Box\n          sx={{\n            display: 'flex',\n          }}\n        >\n          <Box\n            sx={{\n              flexGrow: 1,\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              cursor: 'row-resize',\n            }}\n            onMouseDown={onMouseDownY}\n          />\n          <Box\n            sx={{\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              width: '12px',\n              cursor: 'nwse-resize',\n            }}\n            onMouseDown={onMouseDownXY}\n          />\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Box\n          sx={{\n            flexGrow: 1,\n            position: 'relative',\n            left: '-2px',\n            width: '4px',\n            cursor: 'col-resize',\n          }}\n          onMouseDown={onMouseDownX}\n        />\n        <Box\n          sx={{\n            position: 'relative',\n            height: '12px',\n            width: '4px',\n            left: '-2px',\n            cursor: 'nwse-resize',\n          }}\n          onMouseDown={onMouseDownXY}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst ItemHeader = React.memo<{ itemId: number }>(({ itemId }) => {\n  const itemDataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <Box display=\"flex\" justifyContent=\"flex-end\">\n      <Box flexGrow={1}>\n        <>ID: {itemId}</>\n        <FilePathSelectItem itemId={itemId} />\n      </Box>\n      {itemDataType === DATA_TYPE_SET.TIME_SERIES && (\n        <Box flexGrow={1}>\n          <RefImageItemIdSelect itemId={itemId} />\n        </Box>\n      )}\n      {itemDataType === DATA_TYPE_SET.IMAGE && (\n        <Box flexGrow={1}>\n          <RoiSelect itemId={itemId} />\n        </Box>\n      )}\n      <Box>\n        <DisplayDataItemLayoutMenuIcon itemId={itemId} />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const selectedNodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const selectedFilePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFilePath = (\n    nodeId: string,\n    newFilePath: string,\n    newDataType: DATA_TYPE,\n  ) => {\n    const basePayload = {\n      itemId,\n      nodeId,\n      filePath: newFilePath,\n      dataType: newDataType,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && selectedFilePath != null\n          ? {\n            ...basePayload,\n            deleteData: true,\n            prevDataType: dataType,\n            prevFilePath: selectedFilePath,\n          }\n          : {\n            ...basePayload,\n            deleteData: false,\n          },\n      ),\n    )\n  }\n\n  return (\n    <FilePathSelect\n      selectedNodeId={selectedNodeId}\n      selectedFilePath={selectedFilePath}\n      onSelect={onSelectFilePath}\n    />\n  )\n})\n\nconst RefImageItemIdSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const itemIdList = useSelector(\n    selectVisualizeImageItemIdList,\n    arrayEqualityFn,\n  )\n  const onChangeRefImageItemId = (event: SelectChangeEvent) => {\n    const value = Number(event.target.value)\n    dispatch(\n      setTimeSeriesRefImageItemId({\n        itemId,\n        refImageItemId: isNaN(value) ? null : value,\n      }),\n    )\n  }\n  const selectedRefImageItemId = useSelector(\n    selectTimeSeriesItemRefImageItemId(itemId),\n  )\n  return (\n    <FormControl fullWidth variant=\"standard\">\n      <InputLabel>ref image</InputLabel>\n      <Select\n        value={String(selectedRefImageItemId)}\n        onChange={onChangeRefImageItemId}\n      >\n        <MenuItem value={undefined}>{'None'}</MenuItem>\n        {itemIdList.map((value) => (\n          <MenuItem value={value}>{value}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst MIN_WIDTH = 200\nconst MIN_HEIFHT = 150\n\nfunction useItemDragResize(itemId: number) {\n  const dispatch = useDispatch()\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const [movingSize, setMovingSize] = React.useState({ width, height })\n  const onCommitSize = React.useCallback(\n    (size: { width: number; height: number }) =>\n      dispatch(setItemSize({ itemId, ...size })),\n    [dispatch, itemId],\n  )\n  const onMouseDownX = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          setMovingSize((size) => ({ ...size, width: movingWidth }))\n          movingX = moveEvent.screenX\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, width: movingWidth })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownY = useMouseDragHandler(\n    (downEvent) => {\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize((size) => ({ ...size, height: movingHeight }))\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownXY = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize({ width: movingWidth, height: movingHeight })\n          movingX = moveEvent.screenX\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ width: movingWidth, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  return {\n    size: movingSize,\n    onMouseDownX,\n    onMouseDownY,\n    onMouseDownXY,\n  }\n}\n\nconst RoiSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const roiItemNodeId = useSelector(selectRoiItemNodeId(itemId))\n  const roiItemFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const onSelectRoiFilePath = (nodeId: string, filePath: string, dataType: string, outputKey?: string) => {\n    dispatch(setRoiItemFilePath({ itemId, nodeId, filePath, outputKey }))\n  }\n  return (\n    <FilePathSelect\n      selectedFilePath={roiItemFilePath}\n      selectedNodeId={roiItemNodeId}\n      onSelect={onSelectRoiFilePath}\n      dataType={DATA_TYPE_SET.ROI}\n      label={'Select Roi'}\n    />\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { selectVisualizeItemLayout } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nimport { VisualizeItemAddButton } from './VisualizeItemAddButton'\nimport { VisualizeItem } from './VisualizeItem'\n\nexport const FlexItemList: React.FC = () => {\n  const layout = useSelector(selectVisualizeItemLayout, twoDimarrayEqualityFn)\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"column\" p={1} m={1}>\n      {layout.map((row) => (\n        <Box display=\"flex\" flexDirection=\"row\">\n          {row.map((itemId) => (\n            <VisualizeItem itemId={itemId} key={itemId} />\n          ))}\n        </Box>\n      ))}\n      <VisualizeItemAddButton />\n    </Box>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { GradientPickerPopover } from 'react-linear-gradient-picker'\nimport { SketchPicker } from 'react-color'\nimport { PALETTE_COLOR_SHAPE_TYPE } from 'react-linear-gradient-picker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const GradientColorPicker = React.memo<{\n  colors: { rgb: string; offset: string }[]\n  dispatchSetColor: (colorCode: ColorType[]) => void\n}>(({ colors, dispatchSetColor }) => {\n  const palette: PALETTE_COLOR_SHAPE_TYPE[] = colors.map((value) => {\n    return {\n      offset: value.offset,\n      color: value.rgb,\n    }\n  })\n\n  const onPaletteChange = (palette: PALETTE_COLOR_SHAPE_TYPE[]) => {\n    const colorCode = palette.map((value) => {\n      const color = value.color\n      const rgbStr = color.replace(/[^0-9,]/g, '').split(',')\n      const rgb = {\n        r: Number(rgbStr[0]),\n        g: Number(rgbStr[1]),\n        b: Number(rgbStr[2]),\n      }\n      return {\n        rgb: `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`,\n        offset: value.offset,\n      }\n    })\n    dispatchSetColor(colorCode)\n  }\n\n  const [open, setOpen] = useState(false)\n\n  return (\n    <GradientPickerPopover\n      open={open}\n      setOpen={() => setOpen(!open)}\n      // showAnglePicker={true}\n      width={150}\n      maxStops={10}\n      paletteHeight={25}\n      palette={palette}\n      onPaletteChange={onPaletteChange}\n      flatStyle={true}\n    >\n      <WrappedSketchPicker />\n    </GradientPickerPopover>\n  )\n})\n\ntype WrapperPropTypes = {\n  onSelect?: (color: string, opacity?: number) => void\n  color?: string\n}\n\nconst WrappedSketchPicker: React.FC<WrapperPropTypes> = ({\n  onSelect,\n  color,\n}) => {\n  return (\n    <SketchPicker\n      color={color}\n      width=\"150px\"\n      // styles={{width: \"10px\"}}\n      onChange={(c) => {\n        const { r, g, b, a } = c.rgb\n        onSelect?.(`rgb(${r}, ${g}, ${b})`, a)\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport TextField from '@mui/material/TextField'\n\nimport {\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setSaveFileName,\n  setSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\n\nexport const SaveFig: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(setSaveFormat({ itemId, saveFormat: event.target.value }))\n  }\n  const onChangeFileName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setSaveFileName({ itemId, saveFileName: event.target.value }))\n  }\n\n  return (\n    <>\n      <h3>SaveFig</h3>\n      <FormControl\n        variant=\"standard\"\n        sx={{ minWidth: 120, width: '100%', marginBottom: 1 }}\n      >\n        <InputLabel>format</InputLabel>\n        <Select label=\"smooth\" value={saveFormat} onChange={handleChange}>\n          <MenuItem value={'svg'}>svg</MenuItem>\n          <MenuItem value={'png'}>png</MenuItem>\n          <MenuItem value={'jpeg'}>jpeg</MenuItem>\n          <MenuItem value={'webp'}>webp</MenuItem>\n        </Select>\n      </FormControl>\n      <TextField\n        style={{ width: '100%' }}\n        label={'Filename'}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeFileName}\n        value={saveFileName}\n      />\n    </>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Switch from '@mui/material/Switch'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\n\nimport {\n  selectImageItemShowGrid,\n  selectImageItemShowLine,\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemFilePath,\n  selectDisplayDataIsSingle,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setImageItemShowGrid,\n  setImageItemShowLine,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowScale,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemColors,\n  resetImageActiveIndex,\n  setImageItemRoiAlpha,\n  setImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\nimport { FileSelectImple } from 'components/Workspace/FlowChart/FlowChartNode/FileSelect'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { Box, TextField } from '@mui/material'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\nimport Button from '@mui/material/Button'\nimport { getImageData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { SaveFig } from './SaveFig'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const ImageItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectImageFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.IMAGE,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.IMAGE })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  const colors = useSelector(selectImageItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setImageItemColors({ itemId, colors: colorCode }))\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectImageFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.IMAGE}\n        selectButtonLabel=\"Select Image\"\n      />\n      <StartEndIndex />\n      <Showticklabels />\n      <ShowLine />\n      <ShowGrid />\n      <ShowScale />\n      <Zsmooth />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <Alpha />\n      <RoiAlpha />\n      <SaveFig />\n    </div>\n  )\n}\n\nconst Showticklabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setImageItemShowticklabels({ itemId, showticklabels: !showticklabels }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"Showticklabels\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"ShowLine\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"ShowGrid\"\n    />\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"ShowScale\"\n    />\n  )\n}\n\nconst Zsmooth: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string | boolean>) => {\n    dispatch(setImageItemZsmooth({ itemId, zsmooth: event.target.value }))\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>smooth</InputLabel>\n      <Select label=\"smooth\" value={zsmooth} onChange={handleChange}>\n        <MenuItem value={'best'}>best</MenuItem>\n        <MenuItem value={'fast'}>fast</MenuItem>\n        <MenuItem value={'false'}>False</MenuItem>\n      </Select>\n    </FormControl>\n  )\n}\n\nconst Alpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const inputError = !(alpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemAlpha({ itemId, alpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        style={{ width: '100%' }}\n        label={'image alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={alpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst RoiAlpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const inputError = !(roiAlpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemRoiAlpha({ itemId, roiAlpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        style={{ width: '100%' }}\n        label={'roi alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={roiAlpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst StartEndIndex: React.FC = () => {\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const itemId = React.useContext(SelectedItemIdContext)\n  const [startIndex, onChangeStartIndex] = React.useState(\n    useSelector(selectImageItemStartIndex(itemId)),\n  )\n  const [endIndex, onChangeEndIndex] = React.useState(\n    useSelector(selectImageItemEndIndex(itemId)),\n  )\n  const inputError = !(startIndex > 0)\n  const dispatch = useDispatch()\n  const onStartChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeStartIndex(newValue)\n    }\n  }\n  const onEndChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeEndIndex(newValue)\n    }\n  }\n\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n  const onClickButton = () => {\n    if (startIndex > 0) {\n      dispatch(setImageItemStartIndex({ itemId, startIndex }))\n      dispatch(setImageItemEndIndex({ itemId, endIndex }))\n      dispatch(resetImageActiveIndex({ itemId, startIndex, endIndex }))\n      if (workspaceId && filePath !== null) {\n        dispatch(\n          getImageData({\n            workspaceId,\n            path: filePath,\n            startIndex: startIndex ?? 1,\n            endIndex: endIndex ?? 10,\n          }),\n        )\n      }\n    }\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>\n      <TextField\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 1,\n          min: 0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onStartChange}\n        value={startIndex}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n      ~\n      <TextField\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onEndChange}\n        value={endIndex}\n      />\n      <Button\n        size=\"small\"\n        className=\"ctrl_btn\"\n        variant=\"contained\"\n        onClick={onClickButton}\n      >\n        load\n      </Button>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FileSelectImple } from 'components/Workspace/FlowChart/FlowChartNode/FileSelect'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { FormControlLabel, Switch, TextField } from '@mui/material'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const CsvItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const dispatch = useDispatch()\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.CSV,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.CSV })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.CSV}\n        selectButtonLabel=\"Select CSV\"\n      />\n      <Transpose />\n      <SetHeader />\n      <SetIndex />\n    </div>\n  )\n}\n\nconst Transpose: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemTranspose({ itemId, transpose: !transpose }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={transpose} onChange={toggleChecked} />}\n      label=\"transpose\"\n    />\n  )\n}\n\nconst SetHeader: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeSetHeader = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value === '' ? null : Number(event.target.value)\n    if (newValue === null || newValue >= 0) {\n      dispatch(setCsvItemSetHeader({ itemId, setHeader: newValue }))\n    }\n  }\n\n  return (\n    <>\n      <TextField\n        label=\"header\"\n        sx={{\n          width: 100,\n          margin: (theme) => theme.spacing(0, 1, 0, 1),\n        }}\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeSetHeader}\n        value={setHeader}\n      />\n    </>\n  )\n}\n\nconst SetIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemSetIndex({ itemId, setIndex: !setIndex }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={setIndex} onChange={toggleChecked} />}\n      label=\"setIndex\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FormControlLabel, Switch } from '@mui/material'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setHeatMapItemColors,\n  setHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { SaveFig } from './SaveFig'\n\nexport const HeatmapItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const colors = useSelector(selectHeatMapItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setHeatMapItemColors({ itemId, colors: colorCode }))\n  }\n  return (\n    <>\n      <ShowScale />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <SaveFig />\n    </>\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setHeatMapItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"showscale\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  AccordionDetails,\n  AccordionSummary,\n  FormControlLabel,\n  Switch,\n  TextField,\n} from '@mui/material'\nimport Box from '@mui/material/Box'\nimport Checkbox from '@mui/material/Checkbox'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectTimeSeriesItemFilePath,\n  selectTimeSeriesItemKeys,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemDrawOrderList,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  getTimeSeriesAllData,\n  getTimeSeriesDataById,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { Accordion } from 'components/common/Accordion'\n\nimport { SaveFig } from './SaveFig'\n\nexport const TimeSeriesItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <Offset />\n      <Span />\n      <ShowGrid />\n      <ShowLine />\n      <ShowTickLabels />\n      <ZeroLine />\n      <Xrange />\n      <LegendSelect />\n      <SaveFig />\n    </div>\n  )\n}\n\nconst Offset: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemOffset({ itemId, offset: !offset }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={offset} onChange={toggleChecked} />}\n      label=\"offset\"\n    />\n  )\n}\n\nconst Span: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n\n  const dispatch = useDispatch()\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number' && newValue > 0) {\n      dispatch(setTimeSeriesItemSpan({ itemId, span: newValue }))\n    }\n  }\n  return (\n    <FormControlLabel\n      control={\n        <TextField\n          type=\"number\"\n          style={{ width: '6vw' }}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={onChange}\n          defaultValue={span}\n        />\n      }\n      label=\"offset std\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"showgrid\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"showline\"\n    />\n  )\n}\n\nconst ShowTickLabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setTimeSeriesItemShowTickLabels({\n        itemId,\n        showticklabels: !showticklabels,\n      }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"showticklabels\"\n    />\n  )\n}\n\nconst ZeroLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemZeroLine({ itemId, zeroline: !zeroline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={zeroline} onChange={toggleChecked} />}\n      label=\"zeroline\"\n    />\n  )\n}\n\nconst Xrange: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeLeft = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newLeft = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newLeft === 'number') {\n      dispatch(setTimeSeriesItemXrangeLeft({ itemId, left: newLeft }))\n    }\n  }\n  const onChangeRight = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newRight = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newRight === 'number') {\n      dispatch(setTimeSeriesItemXrangeRight({ itemId, right: newRight }))\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <>\n          <TextField\n            label=\"left\"\n            style={{ width: 50 }}\n            type=\"number\"\n            inputProps={{\n              step: 1,\n              min: 0,\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeLeft}\n            defaultValue={xrange.left}\n          />\n          <TextField\n            label=\"right\"\n            style={{ width: 50 }}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeRight}\n            defaultValue={xrange.right}\n          />\n        </>\n      }\n      label=\"\"\n    />\n  )\n}\n\nconst LegendSelect: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  // const drawIndexMap = useSelector(selectTimeSeriesItemDrawIndexMap(itemId))\n  const dataKeys = useSelector(\n    selectTimeSeriesItemKeys(itemId),\n    arrayEqualityFn,\n  )\n  const drawOrderList = useSelector(\n    selectTimeSeriesItemDrawOrderList(itemId),\n    arrayEqualityFn,\n  )\n  const filePath = useSelector(selectTimeSeriesItemFilePath(itemId))\n\n  const allHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: event.target.checked ? dataKeys : [],\n      }),\n    )\n\n    if (event.target.checked && filePath !== null) {\n      dispatch(getTimeSeriesAllData({ path: filePath }))\n    }\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const index = event.target.value\n    const newDrawOrderList = event.target.checked\n      ? [...drawOrderList, index]\n      : drawOrderList.filter((value) => value !== index)\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    if (filePath !== null) {\n      dispatch(getTimeSeriesDataById({ path: filePath, index: index }))\n    }\n  }\n\n  const drawIndexMap = Object.fromEntries(\n    dataKeys.map((v) => {\n      if (drawOrderList.includes(v)) {\n        return [v, true]\n      } else {\n        return [v, false]\n      }\n    }),\n  )\n\n  const children = (\n    <Box sx={{ display: 'flex', flexDirection: 'column', ml: 3 }}>\n      {dataKeys.map((key) => (\n        <FormControlLabel\n          key={`${key}`}\n          label={`Index ${key}`}\n          control={\n            <Checkbox\n              checked={drawIndexMap[key]}\n              onChange={handleChange}\n              value={key}\n            />\n          }\n        />\n      ))}\n    </Box>\n  )\n\n  return (\n    <Accordion sx={{ mt: 2 }} TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        Legend select\n      </AccordionSummary>\n      <AccordionDetails>\n        <>\n          <FormControlLabel\n            label=\"All Check\"\n            control={\n              <Checkbox\n                checked={Object.values(drawIndexMap).every((v) => {\n                  return v\n                })}\n                onChange={allHandleChange}\n              />\n            }\n          />\n          {children}\n        </>\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","import React from 'react'\n// import { useSelector, useDispatch } from 'react-redux'\n// import { SelectedItemIdContext } from '../VisualizeItemEditor'\n// import { selectRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n// import { setRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n// import { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\n// import { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n// import { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const RoiItemEditor: React.FC = () => {\n  // const itemId = React.useContext(SelectedItemIdContext)\n  // const dispatch = useDispatch()\n  // const { onUploadFile } = useFileUploader(FILE_TYPE_SET.CSV)\n  // const onUploadFileHandle = (formData: FormData, fileName: string) => {\n  //   onUploadFile(formData, fileName)\n  // }\n\n  // const colors = useSelector(selectRoiItemColors(itemId))\n  // const dispathSetColor = (colorCode: ColorType[]) => {\n  //   dispatch(setRoiItemColors({ itemId, colors: colorCode }))\n  // }\n\n  return (\n    <>\n      {/* <GradientColorPicker /> */}\n      {/* <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} /> */}\n    </>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const ScatterItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const BarItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport {\n  selectSelectedVisualizeItemId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { ImageItemEditor } from './Editor/ImageItemEditor'\nimport { CsvItemEditor } from './Editor/CsvItemEditor'\nimport { HeatmapItemEditor } from './Editor/HeatmapItemEditor'\nimport { TimeSeriesItemEditor } from './Editor/TimeSeriesItemEditor'\nimport { RoiItemEditor } from './Editor/RoiItemEditor'\nimport { ScatterItemEditor } from './Editor/ScatterItemEditor'\nimport { BarItemEditor } from './Editor/BarItemEditor'\n\nexport const VisualizeItemEditor = () => {\n  const selectedItemId = useSelector(selectSelectedVisualizeItemId)\n  return (\n    <>\n      {selectedItemId != null ? (\n        <SelectedItemIdContext.Provider value={selectedItemId}>\n          <Box m={1}>\n            <DisplayDataItemEditor />\n          </Box>\n        </SelectedItemIdContext.Provider>\n      ) : (\n        'Please select item...'\n      )}\n    </>\n  )\n}\n\nexport const SelectedItemIdContext = React.createContext<number>(NaN)\n\nconst DisplayDataItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <div style={{ marginTop: 8 }}>\n      <DisplayEditor dataType={dataType} />\n    </div>\n  )\n}\n\nconst DisplayEditor: React.FC<{\n  dataType: DATA_TYPE | null\n}> = ({ dataType }) => {\n  /* 他のtypeのEditorも必要になったら追加する */\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return <ImageItemEditor />\n    case DATA_TYPE_SET.CSV:\n      return <CsvItemEditor />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatmapItemEditor />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesItemEditor />\n    case DATA_TYPE_SET.ROI:\n      return <RoiItemEditor />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterItemEditor />\n    case DATA_TYPE_SET.BAR:\n      return <BarItemEditor />\n    case DATA_TYPE_SET.HTML:\n      return <div>html editor</div>\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport { styled } from '@mui/material/styles'\nimport { FlexItemList } from './FlexItemList'\nimport { VisualizeItemEditor } from './VisualizeItemEditor'\nimport { CurrentPipelineInfo } from 'components/common/CurrentPipelineInfo'\nimport { CONTENT_HEIGHT, DRAWER_WIDTH } from 'const/Layout'\nimport { Box } from '@mui/material'\nimport { grey } from '@mui/material/colors'\n\nconst Visualize: React.FC = () => {\n  return (\n    <RootDiv>\n      <Box\n        sx={{\n          width: DRAWER_WIDTH,\n        }}\n        borderRight={1}\n        borderColor={grey[300]}\n      >\n        <CurrentPipelineInfo />\n        <StyledDrawerContents>\n          <VisualizeItemEditor />\n        </StyledDrawerContents>\n      </Box>\n\n      <MainContents>\n        <FlexItemList />\n      </MainContents>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n})\n\nconst StyledDrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')({\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n  minHeight: CONTENT_HEIGHT\n})\n\nexport default Visualize\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Box } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { useRunPipeline } from 'store/slice/Pipeline/PipelineHook'\nimport Experiment from 'components/Workspace/Experiment/Experiment'\nimport FlowChart from 'components/Workspace/FlowChart/FlowChart'\nimport Visualize from 'components/Workspace/Visualize/Visualize'\nimport { selectActiveTab } from 'store/slice/Workspace/WorkspaceSelector'\n\nconst Workspace: React.FC = () => {\n  const runPipeline = useRunPipeline() // タブ切り替えによって結果取得処理が止まってしまうのを回避するため、タブの親レイヤーで呼び出している\n  const activeTab = useSelector(selectActiveTab)\n\n  return (\n    <RootDiv>\n      <TabPanel value={activeTab} index={0}>\n        <FlowChart {...runPipeline} />\n      </TabPanel>\n      <TabPanel value={activeTab} index={1}>\n        <Visualize />\n      </TabPanel>\n      <TabPanel value={activeTab} index={2}>\n        <Experiment />\n      </TabPanel>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  backgroundColor: theme.palette.background.paper,\n  height: '100%',\n}))\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: number\n  value: number\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      style={{ height: 'calc(100% - 58px)' }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ height: '100%' }}>{children}</Box>}\n    </div>\n  )\n}\n\nexport default Workspace\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { selectRunPostData } from 'store/slice/Run/RunSelectors'\nimport {\n  selectPipelineIsCanceled,\n  selectPipelineIsStartedSuccess,\n  selectPipelineLatestUid,\n  selectPipelineStatus,\n} from './PipelineSelectors'\nimport {run, pollRunResult, runByCurrentUid, cancelResult} from './PipelineActions'\nimport { selectFilePathIsUndefined } from '../InputNode/InputNodeSelectors'\nimport { selectAlgorithmNodeNotExist } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  fetchExperiment,\n  getExperiments,\n} from '../Experiments/ExperimentsActions'\nimport {useSnackbar, VariantType} from 'notistack'\nimport { RUN_STATUS } from './PipelineType'\nimport { useLocation, useNavigate, useParams } from 'react-router-dom'\nimport { IS_STANDALONE, STANDALONE_WORKSPACE_ID } from 'const/Mode'\nimport {\n  clearCurrentWorkspace,\n  setActiveTab,\n  setCurrentWorkspace,\n} from '../Workspace/WorkspaceSlice'\nimport { clearExperiments } from '../Experiments/ExperimentsSlice'\nimport { AppDispatch } from 'store/store'\nimport { getWorkspace } from '../Workspace/WorkspacesActions'\nimport { selectIsWorkspaceOwner } from '../Workspace/WorkspaceSelector'\n\nconst POLLING_INTERVAL = 5000\n\nexport type UseRunPipelineReturnType = ReturnType<typeof useRunPipeline>\n\nexport function useRunPipeline() {\n  const dispatch = useDispatch()\n  const appDispatch: AppDispatch = useDispatch()\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  const { workspaceId } = useParams<{ workspaceId: string }>()\n  const _workspaceId = Number(workspaceId)\n\n  React.useEffect(() => {\n    if (IS_STANDALONE) {\n      dispatch(setCurrentWorkspace(STANDALONE_WORKSPACE_ID))\n    } else {\n      appDispatch(getWorkspace({ id: _workspaceId }))\n        .unwrap()\n        .then((_) => {\n          dispatch(fetchExperiment(_workspaceId))\n          const selectedTab = location.state?.tab\n          selectedTab && dispatch(setActiveTab(selectedTab))\n        })\n        .catch((_) => {\n          navigate('/console/workspaces')\n        })\n    }\n    return () => {\n      dispatch(clearExperiments())\n      dispatch(clearCurrentWorkspace())\n    }\n  }, [dispatch, appDispatch, navigate, _workspaceId, location.state])\n\n  const uid = useSelector(selectPipelineLatestUid)\n  const isCanceled = useSelector(selectPipelineIsCanceled)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n  const isOwner = useSelector(selectIsWorkspaceOwner)\n  const runDisabled = isOwner ? isStartedSuccess : true\n\n  const filePathIsUndefined = useSelector(selectFilePathIsUndefined)\n  const algorithmNodeNotExist = useSelector(selectAlgorithmNodeNotExist)\n  const runPostData = useSelector(selectRunPostData)\n  const handleRunPipeline = React.useCallback(\n    (name: string) => {\n      dispatch(run({ runPostData: { name, ...runPostData, forceRunList: [] } }))\n    },\n    [dispatch, runPostData],\n  )\n  const handleClickVariant = (variant: VariantType, mess: string) => {\n    enqueueSnackbar(mess, { variant });\n  };\n  const handleRunPipelineByUid = React.useCallback(() => {\n    dispatch(runByCurrentUid({ runPostData }))\n  }, [dispatch, runPostData])\n  const handleCancelPipeline = React.useCallback(async () => {\n    if (uid != null) {\n      const data = await dispatch(cancelResult({uid}))\n      if((data as any).error) {\n        handleClickVariant('error', 'Failed to cancel workflow. Please try again.')\n      }\n    }\n    //eslint-disable-next-line\n  }, [dispatch, uid])\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isStartedSuccess && !isCanceled && uid != null) {\n        dispatch(pollRunResult({ uid: uid }))\n      }\n    }, POLLING_INTERVAL)\n    return () => {\n      clearInterval(intervalId)\n    }\n  }, [dispatch, uid, isCanceled, isStartedSuccess])\n  const status = useSelector(selectPipelineStatus)\n  const { enqueueSnackbar } = useSnackbar()\n  // タブ移動による再レンダリングするたびにスナックバーが実行されてしまう挙動を回避するために前回の値を保持\n  const [prevStatus, setPrevStatus] = React.useState(status)\n  React.useEffect(() => {\n    if (prevStatus !== status) {\n      if (status === RUN_STATUS.FINISHED) {\n        enqueueSnackbar('Finished', { variant: 'success' })\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.START_SUCCESS) {\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.ABORTED) {\n        enqueueSnackbar('Aborted', { variant: 'error' })\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.CANCELED) {\n        enqueueSnackbar('Workflow canceled.', { variant: 'success' })\n        dispatch(getExperiments())\n      }\n      setPrevStatus(status)\n    }\n  }, [dispatch, status, prevStatus, enqueueSnackbar])\n  return {\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    uid,\n    status,\n    runDisabled,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n    handleCancelPipeline,\n  }\n}\n","export default __webpack_public_path__ + \"static/media/logo.e44efe32.png\";","import { FC } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport { selectActiveTab } from 'store/slice/Workspace/WorkspaceSelector'\nimport { setActiveTab } from 'store/slice/Workspace/WorkspaceSlice'\n\nconst WorkspaceTabs: FC = () => {\n  const dispatch = useDispatch()\n  const activeTab = useSelector(selectActiveTab)\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    dispatch(setActiveTab(newValue))\n  }\n\n  return (\n    <Tabs\n      sx={{ width: '100%' }}\n      value={activeTab}\n      onChange={handleChange}\n      centered\n      textColor=\"primary\"\n    >\n      <Tab label=\"Workflow\" {...a11yProps(0)} />\n      <Tab label=\"Visualize\" {...a11yProps(1)} />\n      <Tab label=\"Records\" {...a11yProps(2)} />\n    </Tabs>\n  )\n}\n\nfunction a11yProps(index: number | string) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default WorkspaceTabs\n","import { FC, useState } from 'react'\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle'\nimport { Menu, MenuItem } from '@mui/material'\nimport { useDispatch } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport PortraitIcon from '@mui/icons-material/Portrait'\nimport Logout from '@mui/icons-material/Logout'\nimport { useNavigate } from 'react-router-dom'\nimport { logout } from 'store/slice/User/UserSlice'\n\nconst Profile: FC = () => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null)\n  }\n\n  const onClickLogout = () => {\n    setAnchorEl(null)\n    dispatch(logout())\n    navigate('/login')\n  }\n\n  const onClickAccount = () => {\n    setAnchorEl(null)\n    navigate('/console/account')\n  }\n\n  return (\n    <>\n      <IconButton\n        color=\"inherit\"\n        aria-label=\"open profile menu\"\n        aria-haspopup=\"true\"\n        onClick={handleMenu}\n      >\n        <AccountCircleIcon />\n      </IconButton>\n      <Menu\n        id=\"profile-menu\"\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        keepMounted\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n      >\n        <MenuItem onClick={onClickAccount}>\n          <PortraitIcon /> Account Profile\n        </MenuItem>\n        <MenuItem onClick={onClickLogout}>\n          <Logout />\n          SIGN OUT\n        </MenuItem>\n      </Menu>\n    </>\n  )\n}\n\nexport default Profile\n","import { FC } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { styled } from '@mui/material/styles'\nimport MuiAppBar from '@mui/material/AppBar'\nimport Box from '@mui/material/Box'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport IconButton from '@mui/material/IconButton'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport Logo from 'components/logo.png'\nimport Tooltips from 'components/Layout/Tooltips'\nimport WorkspaceTabs from 'components/Workspace/WorkspaceTabs'\nimport { IS_STANDALONE } from 'const/Mode'\nimport Profile from './Profile'\nimport { APP_BAR_HEIGHT } from 'const/Layout'\n\nconst Header: FC<{\n  handleDrawerOpen: () => void\n}> = ({ handleDrawerOpen }) => {\n  return IS_STANDALONE ? (\n    <StandaloneHeader />\n  ) : (\n    <MultiUserHeader handleDrawerOpen={handleDrawerOpen} />\n  )\n}\n\nconst StandaloneHeader: FC = () => {\n  return (\n    <StyledAppBar>\n      <Toolbar>\n        <Box display=\"flex\" flexGrow={1}>\n          <img src={Logo} alt=\"logo\" width={75} height={50} />\n        </Box>\n        <WorkspaceTabs />\n        <Tooltips />\n      </Toolbar>\n    </StyledAppBar>\n  )\n}\n\nconst MultiUserHeader: FC<{ handleDrawerOpen: () => void }> = ({\n  handleDrawerOpen,\n}) => {\n  const showTabsRegex = /^\\/console\\/workspaces\\/.+$/\n  const location = useLocation()\n\n  return (\n    <StyledAppBar>\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          edge=\"start\"\n        >\n          <MenuIcon />\n        </IconButton>\n        <Box display=\"flex\" flexGrow={1}>\n          <TitleLogo>STUDIO</TitleLogo>\n        </Box>\n        {showTabsRegex.test(location.pathname) && <WorkspaceTabs />}\n        <Profile />\n      </Toolbar>\n    </StyledAppBar>\n  )\n}\n\nconst StyledAppBar = styled(MuiAppBar)({\n  position: 'fixed',\n  backgroundColor: '#E1DEDB',\n  color: '#000000',\n  height: APP_BAR_HEIGHT,\n})\n\nconst TitleLogo = styled(Typography)({\n  fontWeight: 600,\n  fontSize: 22,\n})\n\nexport default Header\n","import { FC } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport Drawer from '@mui/material/Drawer'\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemButton from '@mui/material/ListItemButton'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport ListItemText from '@mui/material/ListItemText'\nimport WebIcon from '@mui/icons-material/Web';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport StorageIcon from '@mui/icons-material/Storage'\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\nimport AnalyticsIcon from '@mui/icons-material/Analytics'\nimport { DRAWER_WIDTH } from 'const/Layout'\nimport { Box } from '@mui/material'\nimport {useSelector} from \"react-redux\";\nimport {isAdmin} from \"../../store/slice/User/UserSelector\";\n\nconst LeftMenu: FC<{ open: boolean; handleDrawerClose: () => void }> = ({\n  open,\n  handleDrawerClose,\n}) => {\n  const navigate = useNavigate()\n  const admin = useSelector(isAdmin)\n\n  const onClickDashboard = () => {\n    handleDrawerClose()\n    navigate('/console')\n  }\n\n  const onClickDatabase = () => {\n    handleDrawerClose()\n    navigate('/console/experiments')\n  }\n\n  const onClickWorkspaces = () => {\n    handleDrawerClose()\n    navigate('/console/workspaces')\n  }\n\n  const onClickAccountManager = () => {\n    handleDrawerClose()\n    navigate('/console/account-manager')\n  }\n\n  const onClickOpenSite = () => {\n    handleDrawerClose()\n    navigate('/')\n  }\n\n  return (\n    <>\n      <Drawer anchor=\"left\" open={open} onClose={handleDrawerClose}>\n        <Box sx={{ width: DRAWER_WIDTH }}>\n          <List>\n            <ListItem key=\"dashboard\" disablePadding>\n              <ListItemButton onClick={onClickDashboard}>\n                <ListItemIcon>\n                  <DashboardIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Dashboard\" />\n              </ListItemButton>\n            </ListItem>\n            <ListItem key=\"database\" disablePadding>\n              <ListItemButton onClick={onClickDatabase}>\n                <ListItemIcon>\n                  <StorageIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Database\" />\n              </ListItemButton>\n            </ListItem>\n            <ListItem key=\"workspaces\" disablePadding>\n              <ListItemButton onClick={onClickWorkspaces}>\n                <ListItemIcon>\n                  <AnalyticsIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Workspaces\" />\n              </ListItemButton>\n            </ListItem>\n            {\n              admin ?\n                <ListItem key=\"account-manager\" disablePadding>\n                  <ListItemButton onClick={onClickAccountManager}>\n                    <ListItemIcon>\n                      <ManageAccountsIcon />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Account Manager\" />\n                  </ListItemButton>\n                </ListItem> : null\n            }\n            <ListItem key=\"site\" disablePadding>\n              <ListItemButton onClick={onClickOpenSite}>\n                <ListItemIcon>\n                  <WebIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Open Site\" />\n              </ListItemButton>\n            </ListItem>\n          </List>\n        </Box>\n      </Drawer>\n    </>\n  )\n}\n\nexport default LeftMenu\n","import { FC, ReactNode, useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { Box } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { getToken } from 'utils/auth/AuthUtils'\nimport { selectCurrentUser } from 'store/slice/User/UserSelector'\nimport { getMe } from 'store/slice/User/UserActions'\nimport Header from './Header'\nimport LeftMenu from './LeftMenu'\nimport { IS_STANDALONE } from 'const/Mode'\nimport Loading from 'components/common/Loading'\nimport { APP_BAR_HEIGHT } from 'const/Layout'\n\nconst authRequiredPathRegex = /^\\/console\\/?.*/\n\nconst Layout = ({ children }: { children?: ReactNode }) => {\n  const user = useSelector(selectCurrentUser)\n  const location = useLocation()\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  const [loading, setLoadingAuth] = useState(\n    !IS_STANDALONE && authRequiredPathRegex.test(location.pathname),\n  )\n\n  useEffect(() => {\n    !IS_STANDALONE &&\n      authRequiredPathRegex.test(location.pathname) &&\n      checkAuth()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname, user])\n\n  const checkAuth = async () => {\n    if (user) {\n      if (loading) setLoadingAuth(false)\n      return\n    }\n    const token = getToken()\n    const isLogin = location.pathname === '/login'\n\n    try {\n      if (token) {\n        await dispatch(getMe())\n        if (isLogin) navigate('/console')\n        return\n      } else if (!isLogin) throw new Error('fail auth')\n    } catch {\n      navigate('/login', { replace: true })\n    } finally {\n      if (loading) setLoadingAuth(false)\n    }\n  }\n\n  if (loading) return <Loading />\n\n  return IS_STANDALONE || authRequiredPathRegex.test(location.pathname) ? (\n    <AuthedLayout>{children}</AuthedLayout>\n  ) : (\n    <UnauthedLayout>{children}</UnauthedLayout>\n  )\n}\n\nconst AuthedLayout: FC = ({ children }) => {\n  const [open, setOpen] = useState(false)\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n  return (\n    <LayoutWrapper>\n      <Header handleDrawerOpen={handleDrawerOpen} />\n      <ContentBodyWrapper>\n        <LeftMenu open={open} handleDrawerClose={handleDrawerClose} />\n        <ChildrenWrapper>{children}</ChildrenWrapper>\n      </ContentBodyWrapper>\n    </LayoutWrapper>\n  )\n}\n\nconst UnauthedLayout: FC = ({ children }) => {\n  return (\n    <LayoutWrapper>\n      <ContentBodyWrapper>\n        <ChildrenWrapper>{children}</ChildrenWrapper>\n      </ContentBodyWrapper>\n    </LayoutWrapper>\n  )\n}\n\nconst LayoutWrapper = styled(Box)({\n  height: '100%',\n  width: '100%',\n})\n\nconst ContentBodyWrapper = styled(Box)(() => ({\n  backgroundColor: '#ffffff',\n  display: 'flex',\n  paddingTop: APP_BAR_HEIGHT,\n  height: `calc(100% - ${APP_BAR_HEIGHT}px)`,\n  paddingRight: 10,\n  overflow: 'auto',\n}))\n\nconst ChildrenWrapper = styled('main', {\n  shouldForwardProp: (prop) => prop !== 'open',\n})<{}>(({ theme }) => ({\n  flexGrow: 1,\n  padding: theme.spacing(3),\n  transition: theme.transitions.create('margin', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n}))\n\nexport default Layout\n","import CloseIcon from \"@mui/icons-material/Close\";\nimport {Box, styled} from \"@mui/material\";\nimport {useEffect} from \"react\";\n\ntype DialogImageProps = {\n  open: boolean\n  data?: string | (string[])\n  handleCloseDialog: () => void\n  expId?: string\n  nameCol?: string\n}\n\nconst DialogImage = ({data, handleCloseDialog, open, expId, nameCol}: DialogImageProps) => {\n  useEffect(() => {\n    const handleClosePopup = (event: any) => {\n      if(event.key === 'Escape') {\n        handleCloseDialog()\n        return\n      }\n    }\n\n    document.addEventListener('keydown', handleClosePopup);\n    return () => {\n      document.removeEventListener('keydown', handleClosePopup);\n    };\n    //eslint-disable-next-line\n  }, []);\n\n  const handleClose = (event: any) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if(event.target === event.currentTarget) handleCloseDialog()\n    return\n  }\n\n  if(!data) return null\n  return (\n    <Box>\n    {\n      open ?\n      <DialogImageWrapper sx={{position: 'absolute', zIndex: 1}} onClick={handleClose} >\n        <DialogImageContentWrapper sx={{position: 'absolute', zIndex: 10000}}>\n          <DialogImageContent>\n            <Box\n              sx={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                flexWrap: \"wrap\",\n                gap: 3,\n                margin: \"80px 50px\"\n              }}\n            >\n              {\n                !Array.isArray(data) ?\n                  <Box sx={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                  }}>\n                    <DialogImageTitle>{nameCol}</DialogImageTitle>\n                    <DialogImageLabel>Expriment ID: {expId}</DialogImageLabel>\n                    <DialogImageLabel>{data}</DialogImageLabel>\n\n                    <img\n                      src={data}\n                      alt={\"\"}\n                      width={\"100%\"}\n                      height={\"100%\"}\n                    />\n                  </Box> :\n                Array.isArray(data) ?\n                data.filter(Boolean).map((item, index) => (\n                  <Box\n                    key={`${item}_${index}`}\n                    sx={{ display: \"flex\", flexDirection: \"column\" }}\n                  >\n                    <img\n                      key={index}\n                      src={item}\n                      alt={\"\"}\n                      width={\"100%\"}\n                      height={\"100%\"}\n                    />\n                    <span>{item}</span>\n                  </Box>\n                )) : null\n              }\n            </Box>\n          </DialogImageContent>\n          <ButtonClose onClick={handleCloseDialog}>\n            <CloseIcon />\n          </ButtonClose>\n        </DialogImageContentWrapper>\n      </DialogImageWrapper> : null\n    }\n    </Box>\n  )\n}\n\nconst DialogImageWrapper = styled(Box)(({theme}) => ({\n  position: \"fixed\",\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  background: \"rgba(255,255,255,0.7)\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n}))\n\nconst DialogImageContentWrapper = styled(Box)(({theme}) => ({\n  position: \"relative\",\n  display: \"flex\",\n  background: \"#FFF\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"80%\",\n  height: \"80%\",\n  border: \"1px solid #000\",\n  color: \"#333333\",\n}))\n\nconst DialogImageTitle = styled(Box)(({theme}) => ({\n  margin: \"0 0 0.5em 0\",\n  textAlign: \"center\",\n  fontSize: \"1.75em\",\n}))\n\nconst DialogImageLabel = styled(Box)(({theme}) => ({\n  margin: \"0.5em 0 0.5em 0\",\n  textAlign: \"center\",\n  fontSize: \"1.1em\",\n}))\n\nconst DialogImageContent = styled(Box)(({theme}) => ({\n  overflow: \"scroll\",\n  position: \"relative\",\n  flexWrap: \"wrap\",\n  display: \"flex\",\n  background: \"#FFF\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"100%\",\n  height: \"100%\",\n}))\n\nconst ButtonClose = styled(\"button\")(({theme}) => ({\n  border: \"1px solid #000\",\n  position: \"absolute\",\n  display: \"block\",\n  top: -20,\n  right: -20,\n  width: 40,\n  height: 40,\n  cursor: \"pointer\",\n  borderRadius: 50,\n  \"&:hover\": {\n    background: \"#8f8a8a\"\n  }\n}))\n\nexport default DialogImage;\n","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch, { SwitchProps } from '@mui/material/Switch';\n\nconst IOSSwitch = styled((props: SwitchProps) => (\n    <Switch\n      focusVisibleClassName=\".Mui-focusVisible\"\n      disableRipple\n      {...props}\n      sx={{\n        width: \"50px !important\"\n      }}\n    />\n))(({ theme }) => ({\n  width: 42,\n  height: 26,\n  padding: 0,\n  '& .MuiSwitch-switchBase': {\n    padding: 0,\n    margin: 2,\n    transitionDuration: '300ms',\n    '&.Mui-checked': {\n      transform: 'translateX(24px)',\n      color: '#fff',\n      '& + .MuiSwitch-track': {\n        backgroundColor: theme.palette.mode === 'dark' ? '#2ECA45' : '#65C466',\n        opacity: 1,\n        border: 0,\n      },\n      '&.Mui-disabled + .MuiSwitch-track': {\n        opacity: 0.5,\n      },\n    },\n    '&.Mui-focusVisible .MuiSwitch-thumb': {\n      color: 'red',\n      border: '6px solid #fff',\n    },\n    '&.Mui-disabled .MuiSwitch-thumb': {\n      color:\n          theme.palette.mode === 'light'\n              ? theme.palette.grey[100]\n              : theme.palette.grey[600],\n    },\n    '&.Mui-disabled + .MuiSwitch-track': {\n      opacity: theme.palette.mode === 'light' ? 0.7 : 0.3,\n    },\n  },\n  '& .MuiSwitch-thumb': {\n    boxSizing: 'border-box',\n    width: 22,\n    height: 22,\n  },\n  '& .MuiSwitch-track': {\n    borderRadius: 26 / 2,\n    backgroundColor: theme.palette.mode === 'light' ? 'silver' : '#39393D',\n    opacity: 1,\n    transition: theme.transitions.create(['background-color'], {\n      duration: 500,\n    }),\n    '&:before': {\n      content: '\"ON\"',\n      position: \"relative\",\n      left: 10,\n      top: 2,\n      fontSize: 9\n    },\n    '&:after': {\n      content: '\"OFF\"',\n      position: \"relative\",\n      right: -15,\n      top: 2,\n      fontSize: 9\n    },\n  },\n}));\n\nconst SwitchCustom = ({value} : {value: boolean}) => {\n  return (\n    <FormControlLabel\n      control={\n        <IOSSwitch\n            checked={value}\n          sx={{ m: 1 }}\n        />\n      }\n      label=\"\"\n    />\n  );\n}\n\nexport default SwitchCustom;\n","import { Box, Input, styled } from '@mui/material'\nimport {ChangeEvent, useCallback, useEffect, useMemo, useState} from 'react'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport ContentPasteSearchIcon from '@mui/icons-material/ContentPasteSearch';\nimport Button from '@mui/material/Button'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogContentText from '@mui/material/DialogContentText'\nimport DialogImage from '../common/DialogImage'\nimport SwitchCustom from '../common/SwitchCustom'\nimport {\n  GridFilterModel,\n  GridSortDirection,\n  GridSortModel,\n  DataGrid\n} from '@mui/x-data-grid'\nimport GroupsIcon from '@mui/icons-material/Groups'\nimport DomainIcon from '@mui/icons-material/Domain';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport {\n  DatabaseType,\n  DATABASE_SLICE_NAME,\n  ImageUrls,\n} from '../../store/slice/Database/DatabaseType'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../../store/store'\nimport {\n  getExperimentsDatabase,\n  getExperimentsPublicDatabase,\n  getListUserShare,\n  postPublish,\n} from '../../store/slice/Database/DatabaseActions'\nimport Loading from 'components/common/Loading'\nimport { TypeData } from 'store/slice/Database/DatabaseSlice'\nimport { UserDTO } from 'api/users/UsersApiDTO'\nimport { isAdminOrManager } from 'store/slice/User/UserSelector'\nimport { SHARE } from '@types'\nimport PopupShare from '../PopupShare'\nimport PaginationCustom from \"../common/PaginationCustom\";\n\nexport type Data = {\n  id: number\n  fields: {\n    brain_area: string\n    cre_driver: string\n    reporter_line: string\n    imaging_depth: number\n  }\n  experiment_id: string\n  attributes: string\n  cell_image_urls: string[]\n  graph_urls: string[]\n  share_type: number\n  publish_status: number\n  created_time: string\n  updated_time: string\n}\n\ntype PopupAttributesProps = {\n  data?: string | (string[])\n  open: boolean\n  handleClose: () => void\n  role?: boolean\n  handleChangeAttributes: (e: any) => void\n  exp_id?: string\n}\n\ntype DatabaseProps = {\n  user?: UserDTO\n  cellPath: string\n}\n\nlet timeout: NodeJS.Timeout | undefined = undefined\n\nconst columns = (\n  handleOpenAttributes: (value: string) => void,\n  handleOpenDialog: (value: ImageUrls[], exp_id?: string) => void,\n  cellPath: string,\n  navigate: (path: string) => void,\n  user: boolean\n) => [\n  {\n    field: 'experiment_id',\n    headerName: 'Experiment ID',\n    width: 160,\n    filterOperators: [\n      {\n        label: 'Contains', value: 'contains',\n        InputComponent: ({applyValue, item}: any) => {\n          return <Input sx={{paddingTop: \"16px\"}} defaultValue={item.value || ''} onChange={(e) => {\n            if(timeout) clearTimeout(timeout)\n            timeout = setTimeout(() => {\n              applyValue({...item, value: e.target.value})\n            }, 300)\n          }\n          } />\n        }\n      },\n    ],\n    type: \"string\",\n    renderCell: (params: { row: DatabaseType }) => params.row?.experiment_id,\n  },\n  user && {\n    field: 'published',\n    headerName: 'Published',\n    renderCell: (params: { row: DatabaseType }) => (\n        params.row.publish_status ? <CheckCircleIcon color={\"success\"} /> : null\n    ),\n    valueOptions: ['Published', 'No_Published'],\n    type: 'singleSelect',\n    width: 160,\n  },\n  {\n    field: 'brain_area',\n    headerName: 'Brain area',\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.fields?.brain_area,\n    valueOptions: [1, 2, 3, 4, 5, 6, 7, 8],\n    type: 'singleSelect',\n    width: 160,\n  },\n  {\n    field: 'cre_driver',\n    headerName: 'Cre driver',\n    width: 160,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.fields?.cre_driver,\n  },\n  {\n    field: 'reporter_line',\n    headerName: 'Reporter line',\n    width: 160,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.fields?.reporter_line,\n  },\n  {\n    field: 'imaging_depth',\n    headerName: 'Imaging depth',\n    width: 160,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.fields?.imaging_depth,\n  },\n  {\n    field: 'attributes',\n    headerName: 'Attributes',\n    width: 160,\n    filterable: false,\n    sortable: false,\n    renderCell: (params: { row: DatabaseType }) => (\n      <Box\n        sx={{ cursor: 'pointer' }}\n        onClick={() =>\n          handleOpenAttributes(JSON.stringify(params.row?.attributes))\n        }\n      >\n        {JSON.stringify(params.row?.attributes)}\n      </Box>\n    ),\n  },\n  {\n    field: 'cells',\n    headerName: 'Cells',\n    width: 160,\n    filterable: false,\n    sortable: false,\n    renderCell: (params: { row: DatabaseType }) => (\n      <Box\n        sx={{ cursor: 'pointer', color: 'dodgerblue' }}\n        onClick={() =>\n          navigate(`${cellPath}?experiment_id=${params.row?.experiment_id}` )\n        }\n      >\n        <ContentPasteSearchIcon />\n      </Box>\n    ),\n  },\n  {\n    field: 'cell_image_urls',\n    headerName: 'Pixel Image',\n    width: 160,\n    filterable: false,\n    sortable: false,\n    renderCell: (params: { row: DatabaseType }) => {\n      return (\n        <Box\n          sx={{\n            cursor: 'pointer',\n            display: 'flex',\n          }}\n          onClick={() => handleOpenDialog(params.row?.cell_image_urls)}\n        >\n          {params.row?.cell_image_urls?.length > 0 && (\n            <img\n              src={params.row?.cell_image_urls[0].thumb_url}\n              alt={''}\n              width={'100%'}\n              height={'100%'}\n            />\n          )}\n        </Box>\n      )\n    },\n  },\n]\n\nconst PopupAttributes = ({\n  data,\n  open,\n  handleClose,\n  role = false,\n  handleChangeAttributes,\n  exp_id\n}: PopupAttributesProps) => {\n\n  useEffect(() => {\n    const handleClosePopup = (event: any) => {\n      if(event.key === 'Escape') {\n        handleClose()\n        return\n      }\n    }\n\n    document.addEventListener('keydown', handleClosePopup);\n    return () => {\n      document.removeEventListener('keydown', handleClosePopup);\n    };\n    //eslint-disable-next-line\n  }, []);\n\n  return (\n    <Box>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"draggable-dialog-title\"\n      >\n        <DialogContent sx={{ minWidth: 400 }}>\n          <DialogContentText>\n            <Content\n              readOnly={!role}\n              value={data}\n              onChange={handleChangeAttributes}\n            />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose}>\n            Close\n          </Button>\n          {role && <Button onClick={handleClose}>Save</Button>}\n        </DialogActions>\n      </Dialog>\n    </Box>\n  )\n}\nconst DatabaseExperiments = ({ user, cellPath }: DatabaseProps) => {\n  const type: keyof TypeData = user ? 'private' : 'public'\n  const adminOrManager = useSelector(isAdminOrManager)\n  const { data: dataExperiments, loading } = useSelector(\n    (state: RootState) => ({\n      data: state[DATABASE_SLICE_NAME].data[type],\n      loading: state[DATABASE_SLICE_NAME].loading,\n    }),\n  )\n\n  const [openShare, setOpenShare] = useState<{open: boolean, id?: number}>({open: false})\n  const [dataDialog, setDataDialog] = useState<{\n    type?: string\n    data?: string | string[]\n    expId?: string\n    nameCol?: string\n    shareType?: number\n  }>({\n    type: '',\n    data: undefined,\n  })\n\n  const [searchParams, setParams] = useSearchParams()\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n\n  const offset = searchParams.get('offset')\n  const limit = searchParams.get('limit') || 50\n  const sort = searchParams.getAll('sort')\n\n  const { dataShare } = useSelector(\n      (state: RootState) => ({\n        dataShare: state[DATABASE_SLICE_NAME].listShare,\n      }),\n  )\n\n  const pagiFilter = useCallback(\n    (page?: number) => {\n      return `limit=${limit}&offset=${\n        page ? (Number(limit) * (page - 1)) : offset || dataExperiments.offset\n      }`\n    },\n    //eslint-disable-next-line\n    [limit, offset, JSON.stringify(dataExperiments), dataExperiments.offset],\n  )\n\n  const dataParams = useMemo(() => {\n    return {\n      offset: Number(offset) || 0,\n      limit: Number(limit) || 50,\n      sort: [sort[0]?.replace('published', 'publish_status'), sort[1]] || [],\n    }\n    //eslint-disable-next-line\n  }, [offset, limit, JSON.stringify(sort)])\n\n  const dataParamsFilter = useMemo(\n    () => ({\n      experiment_id: searchParams.get('experiment_id') || undefined,\n      publish_status: searchParams.get('published') || undefined,\n      brain_area: searchParams.get('brain_area') || undefined,\n      cre_driver: searchParams.get('cre_driver') || undefined,\n      reporter_line: searchParams.get('reporter_line') || undefined,\n      imaging_depth: Number(searchParams.get('imaging_depth')) || undefined,\n    }),\n    [searchParams],\n  )\n\n  const [filterModel, setFilterModel] = useState<GridFilterModel>({\n    items: [\n      {\n        field: Object.keys(dataParamsFilter).find(key => (dataParamsFilter as any)[key])?.replace('publish_status', 'published') || '',\n        operator: Object.keys(dataParamsFilter).find(key => (dataParamsFilter as any)[key] && ['publish_status', 'brain_area'].includes(key)) ? 'is' : 'contains',\n        value: Object.values(dataParamsFilter).find(value => value),\n      },\n    ],\n  });\n\n\n  const fetchApi = () => {\n    const api = !user ? getExperimentsPublicDatabase : getExperimentsDatabase\n    let newPublish: number | undefined\n    if(!dataParamsFilter.publish_status) newPublish = undefined\n    else {\n      if(dataParamsFilter.publish_status === 'Published') newPublish = 1\n      else newPublish = 0\n    }\n    dispatch(api({ ...dataParamsFilter, publish_status: newPublish, ...dataParams }))\n  }\n\n  useEffect(() => {\n    fetchApi()\n    //eslint-disable-next-line\n  }, [JSON.stringify(dataParams), user, JSON.stringify(dataParamsFilter)])\n\n  useEffect(() => {\n    if(!openShare.open || !openShare.id) return\n    dispatch(getListUserShare({id: openShare.id}))\n    //eslint-disable-next-line\n  }, [openShare])\n\n  const handleOpenDialog = (data: ImageUrls[] | ImageUrls, expId?: string, graphTitle?: string) => {\n    let newData: string | (string[]) = []\n    if(Array.isArray(data)) {\n      newData = data.map(d => d.url);\n    } else newData = data.url\n    setDataDialog({ type: 'image', data: newData, expId: expId, nameCol: graphTitle })\n  }\n\n  const handleCloseDialog = () => {\n    setDataDialog({ type: '', data: undefined })\n  }\n\n  const handleOpenAttributes = (data: string) => {\n    setDataDialog({ type: 'attribute', data})\n  }\n\n  const handleChangeAttributes = (event: any) => {\n    setDataDialog((pre) => ({ ...pre, data: event.target.value }))\n  }\n\n  const handleOpenShare = (expId?: string, value?: number, id?: number) => {\n    setDataDialog({expId: expId, shareType: value})\n    setOpenShare({open: true, id: id})\n  }\n\n  const getParamsData = () => {\n    const dataFilter = Object.keys(dataParamsFilter)\n      .filter((key) => (dataParamsFilter as any)[key])\n      .map((key) => `${key}=${(dataParamsFilter as any)[key]}`)\n      .join('&')\n      .replaceAll('publish_status', 'published')\n    return dataFilter\n  }\n\n  const handlePage = (e: ChangeEvent<unknown>, page: number) => {\n    const filter = getParamsData()\n    setParams(\n      `${filter}&${dataParams.sort[0] ? `sort=${dataParams.sort[0]}&sort=${dataParams.sort[1]}` : ''}&${pagiFilter(page)}`,\n    )\n  }\n\n  //eslint-disable-next-line\n  const handlePublish = async (id: number, status: 'on' | 'off') => {\n    let newPublish: number | undefined\n    if(!dataParamsFilter.publish_status) newPublish = undefined\n    else {\n      if(dataParamsFilter.publish_status === 'Published') newPublish = 1\n      else newPublish = 0\n    }\n    await dispatch(postPublish({ id, status, params: { ...dataParamsFilter, publish_status: newPublish, ...dataParams } }))\n  }\n\n  const handleSort = useCallback(\n    (rowSelectionModel: GridSortModel) => {\n      const filter = getParamsData()\n      if (!rowSelectionModel[0]) {\n        setParams(`${filter}&${pagiFilter()}`)\n        return\n      }\n      setParams(\n        `${filter}&${rowSelectionModel[0] ? `sort=${rowSelectionModel[0].field?.replace(\n            'publish_status',\n            'published',\n        )}&sort=${rowSelectionModel[0].sort}` : ''}&${pagiFilter()}`,\n      )\n    },\n    //eslint-disable-next-line\n    [pagiFilter, getParamsData],\n  )\n\n  const handleFilter = (model: GridFilterModel) => {\n    setFilterModel(model)\n    let filter = ''\n    if (!!model.items[0]?.value) {\n      filter = model.items\n        .filter((item) => item.value)\n        .map((item: any) => {\n          return `${item.field}=${item?.value}`\n        })\n        .join('&')?.replace('publish_status', 'published')\n    }\n    const { sort } = dataParams\n    setParams(\n      `${filter}&${sort[0] ? `sort=${sort[0]}&sort=${sort[1]}` : ''}&${pagiFilter()}`,\n    )\n  }\n\n  const handleLimit = (event: ChangeEvent<HTMLSelectElement>) => {\n    let filter = ''\n    filter = Object.keys(dataParamsFilter).filter(key => (dataParamsFilter as any)[key])\n      .map((item: any) => {\n        return `${item.field}=${item?.value}`\n      })\n      .join('&').replace('publish_status', 'published')\n    const { sort } = dataParams\n    setParams(\n        `${filter}&${sort[0] ? `sort=${sort[0]}&sort=${sort[1]}` : ''}&limit=${Number(event.target.value)}&offset=0`,\n    )\n  }\n\n  const getColumns = useMemo(() => {\n    return (dataExperiments.header?.graph_titles || []).map(\n      (graphTitle, index) => ({\n        field: `graph_urls.${index}`,\n        headerName: graphTitle,\n        sortable: false,\n        filterable: false,\n        renderCell: (params: { row: DatabaseType }) => {\n          const {row} = params\n          const {graph_urls} = row\n          const graph_url = graph_urls[index]\n          if(!graph_url) return null\n          return (\n            <Box\n              sx={{ display: 'flex', cursor: \"pointer\" }}\n              onClick={() => handleOpenDialog(graph_url, row.experiment_id, graphTitle)}\n            >\n              <img\n                src={graph_url.thumb_url}\n                alt={''}\n                width={'100%'}\n                height={'100%'}\n              />\n            </Box>\n          )\n        },\n        width: 160,\n      }),\n    )\n  }, [dataExperiments.header?.graph_titles])\n\n  const ColumnPrivate = useMemo(() => {\n    return [\n      {\n        field: 'share_type',\n        headerName: 'Share',\n        width: 160,\n        sortable: false,\n        filterable: false,\n        renderCell: (params: { value: number, row: DatabaseType }) => {\n          const { value, row } = params\n          return (\n            <Box\n              sx={{ cursor: 'pointer', color: 'darkgray' }}\n              onClick={() => handleOpenShare(row.experiment_id, value, row.id)}\n            >\n              { (value === SHARE.ORGANIZATION) ?\n                 <DomainIcon color=\"primary\" /> :\n                 <GroupsIcon color={`${value === SHARE.NOSHARE ? \"inherit\" : \"primary\" }`} />\n              }\n            </Box>\n          )\n        }\n      },\n      {\n        field: 'publish_status',\n        headerName: 'Publish',\n        width: 160,\n        sortable: false,\n        filterable: false,\n        renderCell: (params: { row: DatabaseType }) => (\n          <Box\n            sx={{ cursor: 'pointer' }}\n            onClick={() =>\n              handlePublish(\n                params.row.id,\n                params.row.publish_status ? 'off' : 'on',\n              )\n            }\n          >\n            <SwitchCustom value={!!params.row.publish_status} />\n          </Box>\n        ),\n      },\n    ]\n    //eslint-disable-next-line\n  }, [handlePublish])\n\n  const columnsTable = [\n    ...columns(handleOpenAttributes, handleOpenDialog, cellPath, navigate, !!user),\n    ...getColumns,\n  ].filter(Boolean) as any\n\n  return (\n    <DatabaseExperimentsWrapper>\n      <DataGrid\n        columns={\n          adminOrManager && user\n            ? ([...columnsTable, ...ColumnPrivate] as any)\n            : (columnsTable as any)}\n        rows={dataExperiments?.items || []}\n        hideFooter={true}\n        filterMode={'server'}\n        sortingMode={'server'}\n        onSortModelChange={handleSort}\n        filterModel={filterModel}\n        initialState={{\n          sorting: {\n            sortModel: [\n              {\n                field: dataParams.sort[0]?.replace('publish_status', 'published'),\n                sort: dataParams.sort[1] as GridSortDirection,\n              },\n            ],\n          },\n        }}\n        onFilterModelChange={handleFilter as any}\n      />\n      {\n        dataExperiments?.items.length > 0 ?\n          <PaginationCustom\n            data={dataExperiments}\n            handlePage={handlePage}\n            handleLimit={handleLimit}\n            limit={Number(limit)}\n          /> : null\n      }\n      <DialogImage\n        open={dataDialog.type === 'image'}\n        data={dataDialog.data}\n        expId={dataDialog.expId}\n        nameCol={dataDialog.nameCol}\n        handleCloseDialog={handleCloseDialog}\n      />\n      <PopupAttributes\n        handleChangeAttributes={handleChangeAttributes}\n        data={dataDialog.data}\n        open={dataDialog.type === 'attribute'}\n        handleClose={handleCloseDialog}\n        role={!!adminOrManager}\n      />\n      {loading ? <Loading /> : null}\n      {openShare.open && openShare.id ?\n        <PopupShare\n          id={openShare.id}\n          open={openShare.open}\n          data={dataDialog as { expId: string; shareType: number; }}\n          usersShare={dataShare}\n          handleClose={(isSubmit) => {\n            if(isSubmit) fetchApi();\n            setOpenShare({...openShare, open: false})}\n          }\n        /> : null\n      }\n    </DatabaseExperimentsWrapper>\n  )\n}\n\nconst DatabaseExperimentsWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 'calc(100vh - 250px)',\n}))\n\nconst Content = styled('textarea')(() => ({\n  width: 400,\n  height: 'fit-content',\n}))\n\nexport default DatabaseExperiments\n","import { Box, Button, styled } from '@mui/material'\nimport { FC } from 'react'\nimport { useLocation, useNavigate } from 'react-router-dom'\n\nconst DatabaseWrapper: FC = ({ children }) => {\n  const navigate = useNavigate()\n  const location = useLocation()\n  const handleClickExperiments = () => {\n    navigate('/console/experiments')\n  }\n  const handleClickCells = () => {\n    navigate('/console/cells')\n  }\n\n  return (\n    <Box\n      sx={{\n        paddingTop: 2,\n        paddingBottom: 5,\n      }}\n    >\n      <Box>\n        <Button\n          variant=\"text\"\n          onClick={handleClickExperiments}\n          disabled={location.pathname === '/console/experiments'}\n        >\n          Experiments\n        </Button>\n        /\n        <Button\n          variant=\"text\"\n          onClick={handleClickCells}\n          disabled={location.pathname === '/console/cells'}\n        >\n          Cells\n        </Button>\n      </Box>\n      <DataBaseContent>{children}</DataBaseContent>\n    </Box>\n  )\n}\n\nconst DataBaseContent = styled(Box)(({ theme }) => ({\n  width: '94vw',\n  margin: 'auto',\n  marginTop: 15,\n}))\n\nexport default DatabaseWrapper\n","import DatabaseExperiments from 'components/Database/DatabaseExperiments'\nimport DatabaseWrapper from 'components/Database/DatabaseWrapper'\nimport { useSelector } from 'react-redux'\nimport { selectCurrentUser } from 'store/slice/User/UserSelector'\n\nconst Experiments = () => {\n  const user = useSelector(selectCurrentUser)\n\n  return (\n    <DatabaseWrapper>\n      <DatabaseExperiments user={user} cellPath=\"/console/cells\" />\n    </DatabaseWrapper>\n  )\n}\n\nexport default Experiments\n","import { FC } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { AppBar, Button, Container, Toolbar, Typography } from '@mui/material'\nimport { SxProps, Theme } from '@mui/material/styles'\n\nconst PublicHeader: FC = () => {\n  return (\n    <AppBar position=\"fixed\">\n      <Container>\n        <Toolbar>\n          <PublicNavMenu displayName=\"PUB STUDIO\" navLink=\"/\" sx={{ fontWeight: 600, fontSize: 22, mr: 2 }} />\n          <PublicNavMenu displayName=\"Console\" navLink=\"/console\" />\n        </Toolbar>\n      </Container>\n    </AppBar>\n  )\n}\n\nconst PublicNavMenu: FC<{\n  displayName: string\n  navLink: string\n  sx?: SxProps<Theme>\n}> = ({ displayName, navLink, sx }) => {\n  const navigate = useNavigate()\n  const handleMenuClick = () => {\n    navigate(navLink)\n  }\n\n  return (\n    <Button key={displayName} onClick={handleMenuClick}>\n      <Typography color=\"white\" sx={sx}>{displayName}</Typography>\n    </Button>\n  )\n}\n\nexport default PublicHeader\n","import { FC } from 'react'\nimport { Box, Container, Divider, Grid, Typography } from '@mui/material'\n\nconst PublicFooter: FC = () => {\n  return (\n    <>\n      <Box sx={{ paddingTop: 4, paddingBottom: 2 }}>\n        <Divider />\n      </Box>\n      <Box>\n        <Container>\n          <Grid container direction=\"column\" alignItems=\"center\">\n            <Grid item xs={12}>\n              <Typography>\n                {`${new Date().getFullYear()}`} Studio. All rights reserved.\n              </Typography>\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n    </>\n  )\n}\n\nexport default PublicFooter\n","import { FC } from 'react'\nimport { Box } from '@mui/material'\nimport PublicHeader from 'components/PublicLayout/PublicHeader'\nimport PublicFooter from 'components/PublicLayout/PublicFooter'\n\nconst PublicLayout: FC = ({ children }) => {\n  return (\n    <Box sx={{ height: '100%', width: '100%' }}>\n      <PublicHeader />\n      <Box>{children}</Box>\n      <PublicFooter />\n    </Box>\n  )\n}\n\nexport default PublicLayout\n","import { FC } from 'react'\nimport { useNavigate, useLocation } from 'react-router-dom'\nimport { Box, Button, styled } from '@mui/material'\nimport PublicLayout from 'components/PublicLayout'\n\nconst PublicDatabaseWrapper: FC = ({ children }) => {\n  const navigate = useNavigate()\n  const location = useLocation()\n  const handleClickExperiments = () => {\n    navigate('/experiments')\n  }\n  const handleClickCells = () => {\n    navigate('/cells')\n  }\n\n  return (\n    <PublicLayout>\n      <Box\n        sx={{\n          paddingTop: 2,\n          paddingBottom: 5,\n        }}\n      >\n        <Box>\n          <Button\n            variant=\"text\"\n            onClick={handleClickExperiments}\n            disabled={location.pathname === '/experiments'}\n          >\n            Experiments\n          </Button>\n          /\n          <Button\n            variant=\"text\"\n            onClick={handleClickCells}\n            disabled={location.pathname === '/cells'}\n          >\n            Cells\n          </Button>\n        </Box>\n        <DataBaseContent>{children}</DataBaseContent>\n      </Box>\n    </PublicLayout>\n  )\n}\n\nconst DataBaseContent = styled(Box)(({ theme }) => ({\n  width: '94vw',\n  margin: 'auto',\n  marginTop: 15,\n}))\n\nexport default PublicDatabaseWrapper\n","import DatabaseExperiments from 'components/Database/DatabaseExperiments'\nimport PublicDatabaseWrapper from 'components/PublicDatabase/PublicDatabaseWrapper'\n\nconst PublicExperiments = () => {\n  return (\n    <PublicDatabaseWrapper>\n      <DatabaseExperiments cellPath=\"/cells\" />\n    </PublicDatabaseWrapper>\n  )\n}\n\nexport default PublicExperiments\n","import { Box, Input, styled } from '@mui/material'\nimport { ChangeEvent, useCallback, useEffect, useMemo, useState } from 'react'\nimport { useSearchParams } from 'react-router-dom'\nimport DialogImage from '../common/DialogImage'\nimport {\n  GridFilterModel,\n  GridSortModel,\n  DataGrid,\n  GridSortDirection\n} from '@mui/x-data-grid'\nimport {\n  DatabaseType,\n  DATABASE_SLICE_NAME,\n  ImageUrls,\n} from '../../store/slice/Database/DatabaseType'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from '../../store/store'\nimport {\n  getCellsDatabase,\n  getCellsPublicDatabase,\n} from '../../store/slice/Database/DatabaseActions'\nimport Loading from 'components/common/Loading'\nimport { TypeData } from 'store/slice/Database/DatabaseSlice'\nimport PaginationCustom from \"../common/PaginationCustom\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\n\ntype CellProps = {\n  user?: Object\n}\n\nlet timeout: NodeJS.Timeout | undefined = undefined\n\nconst columns = (handleOpenDialog: (value: ImageUrls[], expId?: string) => void, user?: boolean) => [\n  {\n    field: 'experiment_id',\n    headerName: 'Experiment ID',\n    filterOperators: [\n      {\n        label: 'Contains', value: 'contains',\n        InputComponent: ({applyValue, item}: any) => {\n          return <Input sx={{paddingTop: \"16px\"}} defaultValue={item.value || ''} onChange={(e) => {\n            if(timeout) clearTimeout(timeout)\n            timeout = setTimeout(() => {\n              applyValue({...item, value: e.target.value})\n            }, 300)\n          }\n          } />\n        }\n      },\n    ],\n    type: \"string\",\n    width: 160,\n    renderCell: (params: { row: DatabaseType }) => params.row?.experiment_id,\n  },\n  user && {\n    field: 'published',\n    headerName: 'Published',\n    renderCell: (params: { row: DatabaseType }) => (\n        params.row.publish_status ? <CheckCircleIcon color={\"success\"} /> : null\n    ),\n    valueOptions: ['Published', 'No_Published'],\n    type: 'singleSelect',\n    width: 160,\n  },\n  {\n    field: 'id',\n    headerName: 'Cell ID',\n    width: 160,\n    filterable: false,\n    renderCell: (params: { value: number }) => params.value,\n  },\n  {\n    field: 'brain_area',\n    headerName: 'Brain area',\n    width: 160,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.fields?.brain_area,\n  },\n  {\n    field: 'cre_driver',\n    headerName: 'Cre driver',\n    width: 160,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.fields?.cre_driver,\n  },\n  {\n    field: 'reporter_line',\n    headerName: 'Reporter line',\n    width: 160,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.fields?.reporter_line,\n  },\n  {\n    field: 'imaging_depth',\n    headerName: 'Imaging depth',\n    filterable: false,\n    width: 160,\n    renderCell: (params: { row: DatabaseType }) =>\n      params.row.fields?.imaging_depth,\n  },\n  {\n    field: 'cell_image_url',\n    headerName: 'Pixel Image',\n    width: 160,\n    filterable: false,\n    sortable: false,\n    renderCell: (params: { row: DatabaseType }) => {\n      const { cell_image_url } = params.row\n      if (!cell_image_url) return null\n      return (\n        <Box\n          sx={{\n            cursor: 'pointer',\n            display: 'flex',\n          }}\n          onClick={() => handleOpenDialog([cell_image_url])}\n        >\n          <img\n            src={params.row?.cell_image_url?.thumb_url}\n            alt={''}\n            width={'100%'}\n            height={'100%'}\n          />\n      </Box>\n    )}\n  },\n]\n\nconst DatabaseCells = ({ user }: CellProps) => {\n  const type: keyof TypeData = user ? 'private' : 'public'\n\n  const { data: dataCells, loading } = useSelector(\n    (state: RootState) => ({\n      data: state[DATABASE_SLICE_NAME].data[type],\n      loading: state[DATABASE_SLICE_NAME].loading,\n    }),\n  )\n\n  const [dataDialog, setDataDialog] = useState<{\n    type: string\n    data?: string | string[]\n    expId?: string\n    nameCol?: string\n  }>({\n    type: '',\n    data: undefined,\n  })\n\n  const [searchParams, setParams] = useSearchParams()\n  const dispatch = useDispatch()\n\n  const id = searchParams.get('id')\n  const offset = searchParams.get('offset')\n  const limit = searchParams.get('limit') || 50\n  const sort = searchParams.getAll('sort')\n\n  const dataParams = useMemo(() => {\n    return {\n      exp_id: Number(id) || undefined,\n      sort: [sort[0]?.replace('published', 'publish_status'), sort[1]] || [],\n      limit: Number(limit) || 50,\n      offset: Number(offset) || 0,\n    }\n    //eslint-disable-next-line\n  }, [offset, limit, JSON.stringify(sort), id])\n\n  const dataParamsFilter = useMemo(\n    () => ({\n      experiment_id: searchParams.get('experiment_id') || undefined,\n      publish_status: searchParams.get('published') || undefined,\n      brain_area: searchParams.get('brain_area') || undefined,\n      cre_driver: searchParams.get('cre_driver') || undefined,\n      reporter_line: searchParams.get('reporter_line') || undefined,\n      imaging_depth: Number(searchParams.get('imaging_depth')) || undefined,\n    }),\n    [searchParams],\n  )\n\n  const pagiFilter = useCallback(\n    (page?: number) => {\n      return `limit=${limit}&offset=${\n          page ? (Number(limit) * (page - 1)) : offset || dataCells.offset\n      }`\n    },\n    //eslint-disable-next-line\n    [limit, offset, JSON.stringify(dataCells), dataCells.offset],\n  )\n\n  const fetchApi = () => {\n    const api = !user ? getCellsPublicDatabase : getCellsDatabase\n    let newPublish: number | undefined\n    if(!dataParamsFilter.publish_status) newPublish = undefined\n    else {\n      if(dataParamsFilter.publish_status === 'Published') newPublish = 1\n      else newPublish = 0\n    }\n    dispatch(api({ ...dataParamsFilter, publish_status: newPublish, ...dataParams }))\n  }\n\n  useEffect(() => {\n    fetchApi()\n    //eslint-disable-next-line\n  }, [JSON.stringify(dataParams), user, JSON.stringify(dataParamsFilter)])\n\n  const handleOpenDialog = (data: ImageUrls[] | ImageUrls, expId?: string, graphTitle?: string) => {\n    let newData: string | (string[]) = []\n    if(Array.isArray(data)) {\n      newData = data.map(d => d.url);\n    } else newData = data.url\n    setDataDialog({ type: 'image', data: newData, expId: expId, nameCol: graphTitle })\n  }\n\n  const handleCloseDialog = () => {\n    setDataDialog({ type: '', data: undefined })\n  }\n\n  const getParamsData = () => {\n    const dataFilter = Object.keys(dataParamsFilter)\n      .filter((key) => (dataParamsFilter as any)[key])\n      .map((key) => `${key}=${(dataParamsFilter as any)[key]}`)\n      .join('&')\n      .replaceAll('publish_status', 'published')\n    return dataFilter\n  }\n\n  const handlePage = (e: ChangeEvent<unknown>, page: number) => {\n    const filter = getParamsData()\n    setParams(\n      `${filter}&${dataParams.sort[0] ? `sort=${dataParams.sort[0]}&sort=${dataParams.sort[1]}` : ''}&${pagiFilter(page)}`,\n    )\n  }\n\n  const handleSort = useCallback(\n    (rowSelectionModel: GridSortModel) => {\n      const filter = getParamsData()\n      if (!rowSelectionModel[0]) {\n        setParams(`${filter}&${pagiFilter()}`)\n        return\n      }\n      setParams(\n        `${filter}&${rowSelectionModel[0] ? `sort=${rowSelectionModel[0].field?.replaceAll(\n            'publish_status',\n            'published'\n        )}&sort=${rowSelectionModel[0].sort}` : ''}&${pagiFilter()}`,\n      )\n    },\n    //eslint-disable-next-line\n    [pagiFilter, getParamsData],\n  )\n\n  const handleFilter = (model: GridFilterModel) => {\n    setFilterModel(model)\n    let filter = ''\n    if (!!model.items[0]?.value) {\n      filter = model.items\n        .filter((item) => item.value)\n        .map((item: any) => {\n          return `${item.field}=${item?.value}`\n        })\n        .join('&').replace('publish_status', 'published')\n    }\n    const { sort } = dataParams\n    setParams(\n      `${filter}&${sort[0] ? `sort=${sort[0]}&sort=${sort[1]}` : ''}&${pagiFilter()}`,\n    )\n  }\n\n  const [filterModel, setFilterModel] = useState<GridFilterModel>({\n    items: [\n      {\n        field: Object.keys(dataParamsFilter).find(key => (dataParamsFilter as any)[key])?.replace('publish_status', 'published') || '',\n        operator: Object.keys(dataParamsFilter).find(key => (dataParamsFilter as any)[key] && ['publish_status'].includes(key)) ? 'is' : 'contains',\n        value: Object.values(dataParamsFilter).find(value => value),\n      },\n    ],\n  });\n\n  const handleLimit = (event: ChangeEvent<HTMLSelectElement>) => {\n    let filter = ''\n    filter = Object.keys(dataParamsFilter).filter(key => (dataParamsFilter as any)[key])\n        .map((item: any) => {\n          return `${item.field}=${item?.value}`\n        })\n        .join('&').replace('publish_status', 'published')\n    const { sort } = dataParams\n    setParams(\n        `${filter}&${sort[0] ? `sort=${sort[0]}&sort=${sort[1]}` : ''}&limit=${Number(event.target.value)}&offset=0`,\n    )\n  }\n\n  const getColumns = useMemo(() => {\n    return (dataCells.header?.graph_titles || []).map(\n      (graphTitle, index) => ({\n        field: `graph_urls.${index}`,\n        headerName: graphTitle,\n        filterable: false,\n        sortable: false,\n        renderCell: (params: { row: DatabaseType }) => {\n          const {row} = params\n          const {graph_urls} = row\n          const graph_url = graph_urls[index]\n          if(!graph_url) return null\n          return (\n            <Box\n              sx={{ display: 'flex', cursor: \"pointer\" }}\n              onClick={() => handleOpenDialog(graph_url, params.row.experiment_id, graphTitle)}\n            >\n              <img\n                src={graph_url.thumb_url}\n                alt={''}\n                width={'100%'}\n                height={'100%'}\n              />\n            </Box>\n          )\n        },\n        width: 160,\n      }),\n    )\n  }, [dataCells.header?.graph_titles])\n\n  const columnsTable = [...columns(handleOpenDialog, !!user), ...getColumns].filter(\n    Boolean,\n  ) as any\n\n  return (\n    <DatabaseExperimentsWrapper>\n      <DataGrid\n        columns={[...columnsTable] as any}\n        rows={dataCells?.items || []}\n        hideFooter={true}\n        filterMode={'server'}\n        sortingMode={'server'}\n        onSortModelChange={handleSort}\n        filterModel={filterModel}\n        initialState={{\n          sorting: {\n            sortModel: [\n              {\n                field: dataParams.sort[0]?.replace('publish_status', 'published'),\n                sort: dataParams.sort[1] as GridSortDirection,\n              },\n            ],\n          },\n        }}\n        onFilterModelChange={handleFilter as any}\n      />\n      {\n        dataCells?.items.length > 0 ?\n          <PaginationCustom\n            data={dataCells}\n            handlePage={handlePage}\n            handleLimit={handleLimit}\n            limit={Number(limit)}\n          /> : null\n      }\n      <DialogImage\n        open={dataDialog.type === 'image'}\n        data={dataDialog.data}\n        nameCol={dataDialog.nameCol}\n        expId={dataDialog.expId}\n        handleCloseDialog={handleCloseDialog}\n      />\n      {loading ? <Loading /> : null}\n    </DatabaseExperimentsWrapper>\n  )\n}\n\nconst DatabaseExperimentsWrapper = styled(Box)(({ theme }) => ({\n  width: '100%',\n  height: 'calc(100vh - 250px)',\n}))\n\nexport default DatabaseCells\n","import DatabaseCells from 'components/Database/DatabaseCells'\nimport PublicDatabaseWrapper from 'components/PublicDatabase/PublicDatabaseWrapper'\n\nconst PublicCells = () => {\n  return (\n    <PublicDatabaseWrapper>\n      <DatabaseCells />\n    </PublicDatabaseWrapper>\n  )\n}\n\nexport default PublicCells\n","import DatabaseCells from 'components/Database/DatabaseCells'\nimport DatabaseWrapper from 'components/Database/DatabaseWrapper'\nimport { useSelector } from 'react-redux'\nimport { selectCurrentUser } from 'store/slice/User/UserSelector'\n\nconst Cells = () => {\n  const user = useSelector(selectCurrentUser)\n\n  return (\n    <DatabaseWrapper>\n      <DatabaseCells user={user}/>\n    </DatabaseWrapper>\n  )\n}\n\nexport default Cells\n","import { InputProps, styled, Typography } from '@mui/material'\n\ninterface InputErrorProps extends InputProps {\n  errorMessage: string\n  value?: string\n}\n\nconst InputError =\n    ({\n      errorMessage,\n      onChange,\n      value,\n      type,\n      onBlur,\n      name,\n    }: InputErrorProps) => {\n  return (\n    <>\n      <Input\n        autoComplete=\"Off\"\n        error={!!errorMessage}\n        onChange={onChange}\n        value={value}\n        type={type}\n        name={name}\n        onBlur={onBlur}\n      />\n      <TextError>{errorMessage}</TextError>\n    </>\n  )\n}\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  margin: '-14px 0px 0px 305px',\n  wordBreak: 'break-word',\n})\n\nexport default InputError\n","import {\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  styled,\n  Typography,\n} from '@mui/material'\nimport { FC, FocusEvent } from 'react'\n\ntype SelectErrorProps = {\n  value?: string\n  onChange?: (value: SelectChangeEvent, child: React.ReactNode) => void\n  onBlur?: (event: FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => void\n  errorMessage: string\n  name?: string\n  options: string[]\n}\n\nconst SelectError: FC<SelectErrorProps> =\n   ({\n     value,\n     onChange,\n     onBlur,\n     errorMessage,\n     options,\n     name,\n   }) => {\n  return (\n    <>\n      <SelectModal\n        name={name}\n        value={value}\n        onChange={\n          onChange as (\n            value: SelectChangeEvent<unknown>,\n            child: React.ReactNode,\n          ) => void\n        }\n        onBlur={onBlur}\n        error={!!errorMessage}\n      >\n        {options.map((item: string) => {\n          return (\n            <MenuItem key={item} value={item}>\n              {item}\n            </MenuItem>\n          )\n        })}\n      </SelectModal>\n      <TextError>{errorMessage}</TextError>\n    </>\n  )\n}\n\nconst SelectModal = styled(Select, {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ theme, error }) => ({\n  width: 272,\n  marginBottom: '15px',\n  border: '1px solid #d9d9d9',\n  borderColor: error ? 'red' : '#d9d9d9',\n  borderRadius: 4,\n}))\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  margin: '-14px 0px 0px 305px',\n  wordBreak: 'break-word',\n})\nexport default SelectError\n","import EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport {ChangeEvent, useCallback, useEffect, useMemo, useState, MouseEvent} from \"react\";\nimport {Box, Button, Dialog, DialogActions, DialogTitle, Input, styled} from \"@mui/material\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {isAdmin, selectCurrentUser, selectListUser, selectLoading} from \"../../store/slice/User/UserSelector\";\nimport {useNavigate, useSearchParams} from \"react-router-dom\";\nimport {deleteUser, createUser, getListUser, updateUser} from \"../../store/slice/User/UserActions\";\nimport Loading from \"../../components/common/Loading\";\nimport {AddUserDTO, UserDTO} from \"../../api/users/UsersApiDTO\";\nimport {ROLE} from \"../../@types\";\nimport {DataGrid, GridFilterModel, GridSortDirection, GridSortModel} from \"@mui/x-data-grid\";\nimport {regexEmail, regexIgnoreS, regexPassword} from \"../../const/Auth\";\nimport InputError from \"../../components/common/InputError\";\nimport {SelectChangeEvent} from \"@mui/material/Select\";\nimport SelectError from \"../../components/common/SelectError\";\nimport PaginationCustom from \"../../components/common/PaginationCustom\";\nimport {useSnackbar, VariantType} from \"notistack\";\n\nlet timeout: NodeJS.Timeout | undefined = undefined\n\ntype ModalComponentProps = {\n  onSubmitEdit: (\n    id: number | string | undefined,\n    data: { [key: string]: string },\n  ) => void\n  setOpenModal: (v: boolean) => void\n  dataEdit?: {\n    [key: string]: string\n  }\n}\n\ntype PopupType = {\n  open: boolean\n  handleClose: () => void\n  handleOkDel: () => void\n  name?: string\n}\n\nconst initState = {\n  email: '',\n  password: '',\n  role_id: '',\n  name: '',\n  confirmPassword: '',\n}\n\nconst ModalComponent =\n  ({\n    onSubmitEdit,\n    setOpenModal,\n    dataEdit,\n  }: ModalComponentProps) => {\n  const [formData, setFormData] = useState<{ [key: string]: string }>(\n      dataEdit || initState,\n  )\n  const [isDisabled, setIsDisabled] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>(initState)\n\n  const validateEmail = (value: string): string => {\n    const error = validateField('email', 255, value)\n    if (error) return error\n    if (!regexEmail.test(value)) {\n      return 'Invalid email format'\n    }\n    return ''\n  }\n\n  const validatePassword = (\n      value: string,\n      isConfirm: boolean = false,\n      values?: { [key: string]: string },\n  ): string => {\n    if (!value && !dataEdit?.uid) return 'This field is required'\n    const errorLength = validateLength('password', 255, value)\n    if (errorLength) {\n      return errorLength\n    }\n    let datas = values || formData\n    if (!regexPassword.test(value) && value) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    if(regexIgnoreS.test(value)){\n      return 'Allowed special characters (!#$%&()*+,-./@_|)'\n    }\n    if (isConfirm && datas.password !== value && value) {\n      return 'password is not match'\n    }\n    return ''\n  }\n\n  const validateField = (name: string, length: number, value?: string) => {\n    if (!value) return 'This field is required'\n    return validateLength(name, length, value)\n  }\n\n  const validateLength = (name: string, length: number, value?: string) => {\n    if (value && value.length > length)\n      return `The text may not be longer than ${length} characters`\n    if (formData[name]?.length && value && value.length > length) {\n      return `The text may not be longer than ${length} characters`\n    }\n    return ''\n  }\n\n  const validateForm = (): { [key: string]: string } => {\n    const errorName = validateField('name', 100, formData.name)\n    const errorEmail = validateEmail(formData.email)\n    const errorRole = validateField('role_id', 50, formData.role_id)\n    const errorPassword = dataEdit?.id ? '' : validatePassword(formData.password)\n    const errorConfirmPassword = dataEdit?.id ? '' : validatePassword(\n      formData.confirmPassword,\n      true,\n    )\n    return {\n      email: errorEmail,\n      password: errorPassword,\n      confirmPassword: errorConfirmPassword,\n      name: errorName,\n      role_id: errorRole,\n    }\n  }\n\n  const onChangeData = (\n    e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement> | SelectChangeEvent,\n    length: number,\n  ) => {\n    const { value, name } = e.target\n    const newDatas = { ...formData, [name]: value }\n    setFormData(newDatas)\n    let error: string =\n      name === 'email'\n        ? validateEmail(value)\n        : validateField(name, length, value)\n    let errorConfirm = errors.confirmPassword\n    if (name.toLowerCase().includes('password')) {\n      error = validatePassword(value, name === 'confirmPassword', newDatas)\n      if (name !== 'confirmPassword' && formData.confirmPassword) {\n        errorConfirm = validatePassword(\n          newDatas.confirmPassword,\n          true,\n          newDatas,\n        )\n      }\n    }\n    setErrors({ ...errors, confirmPassword: errorConfirm, [name]: error })\n  }\n\n  const onSubmit = async (e: MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n    setIsDisabled(true)\n    const newErrors = validateForm()\n    if (Object.keys(newErrors).some((key) => !!newErrors[key])) {\n      setErrors(newErrors)\n      setIsDisabled(false)\n      return\n    }\n    try {\n      await onSubmitEdit(dataEdit?.id, formData)\n      setOpenModal(false)\n    } finally {\n      setIsDisabled(false)\n    }\n  }\n  const onCancel = () => {\n    setOpenModal(false)\n  }\n\n  return (\n    <Modal>\n      <ModalBox>\n        <TitleModal>{dataEdit?.id ? 'Edit' : 'Add'} Account</TitleModal>\n        <BoxData>\n          <LabelModal>Name: </LabelModal>\n          <InputError\n            name=\"name\"\n            value={formData?.name || ''}\n            onChange={(e) => onChangeData(e, 100)}\n            onBlur={(e) => onChangeData(e, 100)}\n            errorMessage={errors.name}\n          />\n          <LabelModal>Role: </LabelModal>\n          <SelectError\n            value={formData?.role_id || ''}\n            options={Object.keys(ROLE).filter(key => !Number(key))}\n            name=\"role_id\"\n            onChange={(e) => onChangeData(e, 50)}\n            onBlur={(e) => onChangeData(e, 50)}\n            errorMessage={errors.role_id}\n          />\n          <LabelModal>e-mail: </LabelModal>\n          <InputError\n            name=\"email\"\n            value={formData?.email || ''}\n            onChange={(e) => onChangeData(e, 255)}\n            onBlur={(e) => onChangeData(e, 255)}\n            errorMessage={errors.email}\n          />\n          {!dataEdit?.id ? (\n            <>\n              <LabelModal>Password: </LabelModal>\n              <InputError\n                name=\"password\"\n                value={formData?.password || ''}\n                onChange={(e) => onChangeData(e, 255)}\n                onBlur={(e) => onChangeData(e, 255)}\n                type={'password'}\n                errorMessage={errors.password}\n              />\n              <LabelModal>Confirm Password: </LabelModal>\n              <InputError\n                name=\"confirmPassword\"\n                value={formData?.confirmPassword || ''}\n                onChange={(e) => onChangeData(e, 255)}\n                onBlur={(e) => onChangeData(e, 255)}\n                type={'password'}\n                errorMessage={errors.confirmPassword}\n              />\n            </>\n          ) : null}\n        </BoxData>\n        <ButtonModal>\n          <Button onClick={() => onCancel()}>Cancel</Button>\n          <Button disabled={isDisabled} onClick={(e) => onSubmit(e)}>\n            Ok\n          </Button>\n        </ButtonModal>\n      </ModalBox>\n      {isDisabled ? <Loading /> : null}\n    </Modal>\n  )\n}\n\nconst PopupDelete = ({open, handleClose, handleOkDel, name}: PopupType) => {\n  if(!open) return null\n  return (\n      <Box>\n        <Dialog open={open} onClose={handleClose} sx={{ margin: 0 }}>\n          <DialogTitle>Do you want delete User \"{name}\"?</DialogTitle>\n          <DialogActions>\n            <Button onClick={handleClose}>Cancel</Button>\n            <Button onClick={handleOkDel}>Ok</Button>\n          </DialogActions>\n        </Dialog>\n      </Box>\n  )\n}\n\nconst AccountManager = () => {\n\n  const dispatch = useDispatch()\n\n  const navigate = useNavigate()\n\n  const listUser = useSelector(selectListUser)\n  const loading = useSelector(selectLoading)\n  const user = useSelector(selectCurrentUser)\n  const admin = useSelector(isAdmin)\n\n  const [searchParams, setParams] = useSearchParams()\n\n  const [openModal, setOpenModal] = useState(false)\n  const [dataEdit, setDataEdit] = useState({})\n\n  const limit = searchParams.get('limit') || 50\n  const offset = searchParams.get('offset') || 0\n  const name = searchParams.get('name') || undefined\n  const email = searchParams.get('email') || undefined\n  const sort = searchParams.getAll('sort') || []\n\n  const [openDel, setOpenDel] = useState<{id?: number, name?: string, open: boolean}>()\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleClickVariant = (variant: VariantType, mess: string) => {\n    enqueueSnackbar(mess, { variant });\n  };\n\n  useEffect(() => {\n    if(!admin) navigate('/console')\n    //eslint-disable-next-line\n  }, [JSON.stringify(admin)])\n\n  const sortParams = useMemo(() => {\n    return {\n      sort: sort\n    }\n    //eslint-disable-next-line\n  }, [JSON.stringify(sort)])\n\n  const filterParams = useMemo(() => {\n    return {\n      name: name,\n      email: email\n    }\n  }, [name, email])\n\n  const params = useMemo(() => {\n    return {\n      limit: Number(limit),\n      offset: Number(offset)\n    }\n  }, [limit, offset])\n\n  useEffect(() => {\n    dispatch(getListUser({...filterParams, ...sortParams, ...params}))\n    //eslint-disable-next-line\n  }, [limit, offset, email, name, JSON.stringify(sort)])\n\n  const handlePage = (event: ChangeEvent<unknown>, page: number) => {\n    if(!listUser) return\n    let filter = ''\n    filter = Object.keys(filterParams).filter(key => (filterParams as any)[key])\n      .map((item: any) => {\n        return `${item.field}=${item?.value}`\n      })\n      .join('&')\n    const { sort } = sortParams\n    setParams(`${filter}&${sort[0] ? `sort=${sort[0]}&sort=${sort[1]}` : ''}&limit=${listUser.limit}&offset=${(page - 1) * Number(limit)}`)\n  }\n\n  const getParamsData = () => {\n    const dataFilter = Object.keys(filterParams)\n      .filter((key) => (filterParams as any)[key])\n      .map((key) => `${key}=${(filterParams as any)[key]}`)\n      .join('&')\n    return dataFilter\n  }\n\n  const paramsManager = useCallback(\n    (page?: number) => {\n      return `limit=${limit}&offset=${\n          page ? page - 1 : offset\n      }`\n    },\n    [limit, offset],\n  )\n\n  const handleSort = useCallback(\n    (rowSelectionModel: GridSortModel) => {\n      const filter = getParamsData()\n      if (!rowSelectionModel[0]) {\n        setParams(`${filter}&${paramsManager()}`)\n        return\n      }\n      setParams(\n        `${filter}&${rowSelectionModel[0] ? `sort=${rowSelectionModel[0].field.replace('_id', '')}&sort=${rowSelectionModel[0].sort}` : ''}&${paramsManager()}`,\n      )\n    },\n    //eslint-disable-next-line\n    [paramsManager, getParamsData],\n  )\n\n  const handleFilter = (model: GridFilterModel) => {\n    setFilterModel(model)\n    let filter = ''\n    if (!!model.items[0]?.value) {\n      filter = model.items\n        .filter((item) => item.value)\n        .map((item: any) => {\n          return `${item.field}=${item?.value}`\n        })\n        .join('&')\n    }\n    const { sort } = sortParams\n    setParams(\n      `${filter}&${sort[0] ? `sort=${sort[0]}&sort=${sort[1]}` : ''}&${paramsManager()}`,\n    )\n  }\n\n  const handleOpenModal = () => {\n    setOpenModal(true)\n  }\n\n  const handleEdit = (dataEdit: UserDTO) => {\n    setOpenModal(true)\n    setDataEdit(dataEdit)\n  }\n\n  const onSubmitEdit = async (\n    id: number | string | undefined,\n    data: { [key: string]: string },\n  ) => {\n    const {confirmPassword, role_id, ...newData} = data\n    let newRole\n    switch (role_id) {\n      case \"ADMIN\":\n        newRole = ROLE.ADMIN;\n        break;\n      case \"DATA_MANAGER\":\n        newRole = ROLE.DATA_MANAGER;\n        break;\n      case \"OPERATOR\":\n        newRole = ROLE.OPERATOR;\n        break;\n      case \"GUEST_OPERATOR\":\n        newRole = ROLE.GUEST_OPERATOR;\n        break;\n    }\n    if (id !== undefined) {\n      const data = await dispatch(updateUser(\n        {\n          id: id as number,\n          data: {name: newData.name, email: newData.email, role_id: newRole},\n          params: {...filterParams, ...sortParams, ...params}\n        }))\n        if((data as any).error) {\n          if (!navigator.onLine) {\n            handleClickVariant('error', 'Account update failed!')\n            return\n          }\n          handleClickVariant('error', 'This email already exists!')\n        }\n        else {\n          handleClickVariant('success', 'Your account has been edited successfully!')\n        }\n    } else {\n      const data = await dispatch(createUser({...newData, role_id: newRole} as AddUserDTO))\n      if(!(data as any).error) {\n        handleClickVariant('success', 'Your account has been created successfully!')\n      }\n        else {\n        if (!navigator.onLine) {\n          handleClickVariant('error', 'Account creation failed!')\n          return\n        }\n        handleClickVariant('error', 'This email already exists!')\n      }\n    }\n    return undefined\n  }\n\n  const handleOpenPopupDel = (id?: number, name?: string) => {\n    if(!id) return\n    setOpenDel({id: id, name: name, open: true})\n  }\n\n  const handleClosePopupDel = () => {\n    setOpenDel({...openDel, open: false})\n  }\n\n  const handleOkDel = async () => {\n    if(!openDel?.id || !openDel) return\n    const data = await dispatch(deleteUser({\n      id: openDel.id,\n      params: {...filterParams, ...sortParams, ...params}\n    }))\n    if((data as any).error) {\n      handleClickVariant('error', 'Delete user failed!')\n    }\n    else {\n      handleClickVariant('success', 'Account deleted successfully!')\n    }\n    setOpenDel({...openDel, open: false})\n  }\n\n  const [filterModel, setFilterModel] = useState<GridFilterModel>({\n    items: [\n      {\n        field: Object.keys(filterParams).find(key => (filterParams as any)[key]) || '',\n        operator: 'contains',\n        value: Object.values(filterParams).find(value => value),\n      },\n    ],\n  });\n\n  const handleLimit = (event: ChangeEvent<HTMLSelectElement>) => {\n    let filter = ''\n    filter = Object.keys(filterParams).filter(key => (filterParams as any)[key])\n        .map((item: any) => {\n          return `${item.field}=${item?.value}`\n        })\n        .join('&')\n    const { sort } = sortParams\n    setParams(\n        `${filter}&${sort[0] ? `sort=${sort[0]}&sort=${sort[1]}` : ''}&limit=${Number(event.target.value)}&offset=0`,\n    )\n  }\n\n  const columns = useMemo(() =>\n    [\n      {\n        headerName: 'UID',\n        field: 'uid',\n        filterable: false,\n        minWidth: 100,\n        flex: 2\n      },\n      {\n        headerName: 'Name',\n        field: 'name',\n        minWidth: 100,\n        flex: 2,\n        filterOperators: [\n          {\n            label: 'Contains', value: 'contains',\n            InputComponent: ({applyValue, item}: any) => {\n              return <Input sx={{paddingTop: \"16px\"}} defaultValue={item.value || ''} onChange={(e) => {\n                if(timeout) clearTimeout(timeout)\n                timeout = setTimeout(() => {\n                  applyValue({...item, value: e.target.value})\n                }, 300)\n              }\n              } />\n            }\n          },\n        ],\n        type: \"string\",\n      },\n      {\n        headerName: 'Role',\n        field: 'role_id',\n        filterable: false,\n        minWidth: 100,\n        flex: 1,\n        renderCell: (params: {value: number}) => {\n          let role\n          switch (params.value) {\n            case ROLE.ADMIN:\n              role = \"Admin\";\n              break;\n            case ROLE.DATA_MANAGER:\n              role = \"Data Manager\";\n              break;\n            case ROLE.OPERATOR:\n              role = \"Operator\";\n              break;\n            case ROLE.GUEST_OPERATOR:\n              role = \"Guest Operator\";\n              break;\n          }\n          return (\n            <span>{role}</span>\n          )\n        }\n      },\n      {\n        headerName: 'Mail',\n        field: 'email',\n        minWidth: 100,\n        flex: 2,\n        filterOperators: [\n          {\n            label: 'Contains', value: 'contains',\n            InputComponent: ({applyValue, item}: any) => {\n              return <Input sx={{paddingTop: \"16px\"}} defaultValue={item.value || ''} onChange={(e) => {\n                if(timeout) clearTimeout(timeout)\n                timeout = setTimeout(() => {\n                  applyValue({...item, value: e.target.value})\n                }, 300)\n              }\n              } />\n            }\n          },\n        ],\n        type: \"string\",\n      },\n      {\n        headerName: '',\n        field: 'action',\n        sortable: false,\n        filterable: false,\n        minWidth: 100,\n        flex: 1,\n        renderCell: (params: {row: UserDTO}) => {\n          const { id, role_id, name, email} = params.row\n          if(!id || !role_id || !name || !email) return null\n          let role: any\n          switch (role_id) {\n            case ROLE.ADMIN:\n              role = \"ADMIN\";\n              break;\n            case ROLE.DATA_MANAGER:\n              role = \"DATA_MANAGER\";\n              break;\n            case ROLE.OPERATOR:\n              role = \"OPERATOR\";\n              break;\n            case ROLE.GUEST_OPERATOR:\n              role = \"GUEST_OPERATOR\";\n              break;\n          }\n\n          return (\n            <>\n              <ALink\n                sx={{ color: 'red' }}\n                onClick={() => handleEdit({id, role_id: role, name, email} as UserDTO)}\n              >\n                <EditIcon sx={{ color: 'black' }} />\n              </ALink>\n              {\n                !(params.row?.id === user?.id) ?\n                <ALink\n                  sx={{ ml: 1.25 }}\n                  onClick={() => handleOpenPopupDel(params.row?.id, params.row?.name)}\n                >\n                  <DeleteIcon sx={{ color: 'red' }} />\n                </ALink> : null\n              }\n            </>\n          )\n        },\n      },\n    ],\n    [user?.id],\n  )\n  return (\n    <AccountManagerWrapper>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          gap: 2,\n          marginBottom: 2,\n        }}\n      >\n        <Button \n          sx={{\n            background: '#000000c4',\n            '&:hover': { backgroundColor: '#00000090' },\n          }}\n          variant=\"contained\"\n          onClick={handleOpenModal}\n        >\n          Add\n        </Button>\n      </Box>\n      <DataGrid\n        sx={{ minHeight: 400, height: 'calc(100vh - 300px)'}}\n        columns={columns as any}\n        rows={listUser?.items || []}\n        filterMode={'server'}\n        sortingMode={'server'}\n        hideFooter\n        onSortModelChange={handleSort}\n        filterModel={filterModel}\n        initialState={{\n          sorting: {\n            sortModel: [\n              {\n                field: sortParams.sort[0]?.replace('role', 'role_id'),\n                sort: sortParams.sort[1] as GridSortDirection,\n              },\n            ],\n          },\n        }}\n        onFilterModelChange={handleFilter as any}\n      />\n      {\n        listUser && listUser.items.length > 0 ?\n          <PaginationCustom\n            data={listUser}\n            handlePage={handlePage}\n            handleLimit={handleLimit}\n            limit={Number(limit)}\n          /> : null\n      }\n      <PopupDelete\n        open={openDel?.open || false}\n        handleClose={handleClosePopupDel}\n        handleOkDel={handleOkDel}\n        name={openDel?.name}\n      />\n      {\n        openModal ?\n          <ModalComponent\n            onSubmitEdit={onSubmitEdit}\n            setOpenModal={(flag) => {\n              setOpenModal(flag)\n              if (!flag) {\n                setDataEdit({})\n              }\n            }}\n            dataEdit={dataEdit}\n          /> : null\n      }\n      {\n        loading ? <Loading /> : null\n      }\n    </AccountManagerWrapper>\n  )\n}\n\nconst AccountManagerWrapper = styled(Box)(({ theme }) => ({\n  width: '80%',\n  margin: theme.spacing(6.125, 'auto')\n}))\n\nconst ALink = styled('a')({\n  color: '#1677ff',\n  textDecoration: 'none',\n  cursor: 'pointer',\n  userSelect: 'none',\n})\n\nconst Modal = styled(Box)(({ theme }) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#cccccc80',\n}))\n\nconst ModalBox = styled(Box)(({ theme }) => ({\n  width: 800,\n  backgroundColor: 'white',\n  border: '1px solid black',\n}))\n\nconst TitleModal = styled(Box)(({ theme }) => ({\n  fontSize: 25,\n  margin: theme.spacing(5),\n}))\n\nconst BoxData = styled(Box)(({ theme }) => ({\n  marginTop: 35,\n}))\n\nconst LabelModal = styled(Box)(({ theme }) => ({\n  width: 300,\n  display: 'inline-block',\n  textAlign: 'end',\n  marginRight: theme.spacing(0.5),\n}))\n\nconst ButtonModal = styled(Box)(({ theme }) => ({\n  button: {\n    fontSize: 20,\n  },\n  display: 'flex',\n  justifyContent: 'end',\n  margin: theme.spacing(5),\n}))\n\nexport default AccountManager\n","import React from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport Close from '@mui/icons-material/Close'\nimport { SnackbarProvider, SnackbarKey, useSnackbar } from 'notistack'\nimport { BrowserRouter, Navigate, Route, Routes } from 'react-router-dom'\nimport Dashboard from 'pages/Dashboard'\nimport Account from 'pages/Account'\nimport AccountDelete from 'pages/AccountDelete'\nimport Login from 'pages/Login'\nimport ResetPassword from 'pages/ResetPassword'\nimport Workspaces from 'pages/Workspace'\nimport Workspace from 'pages/Workspace/Workspace'\nimport { IS_STANDALONE } from 'const/Mode'\nimport Layout from 'components/Layout'\nimport Experiments from 'pages/Database/Experiments'\nimport PublicExperiments from 'pages/PublicDatabase/PublicExperiments'\nimport PublicCells from 'pages/PublicDatabase/PublicCells'\nimport Cells from 'pages/Database/Cells'\nimport AccountManager from \"./pages/AccountManager\";\n\nconst App: React.FC = () => {\n  return (\n    <SnackbarProvider\n      maxSnack={5}\n      action={(snackbarKey) => (\n        <SnackbarCloseButton snackbarKey={snackbarKey} />\n      )}\n    >\n      <BrowserRouter>\n        <Layout>\n          {IS_STANDALONE ? (\n            <Routes>\n              <Route path=\"/\" element={<Workspace />} />\n              <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\n            </Routes>\n          ) : (\n            <Routes>\n              <Route\n                path=\"/\"\n                element={<Navigate replace to=\"/experiments\" />}\n              />\n              <Route path=\"/experiments\" element={<PublicExperiments />} />\n              <Route path=\"/cells\" element={<PublicCells />} />\n              <Route path=\"/account-deleted\" element={<AccountDelete />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/reset-password\" element={<ResetPassword />} />\n              <Route path=\"/console\" element={<Dashboard />} />\n              <Route path=\"/console/account\" element={<Account />} />\n              <Route path=\"/console/account-manager\" element={<AccountManager />} />\n              <Route path=\"/console/experiments\" element={<Experiments />} />\n              <Route path=\"/console/cells\" element={<Cells />} />\n              <Route path=\"/console/workspaces\">\n                <Route path=\"\" element={<Workspaces />} />\n                <Route path=\":workspaceId\" element={<Workspace />} />\n              </Route>\n              <Route path=\"/console/*\" element={<Navigate replace to=\"/console\" />} />\n              <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\n            </Routes>\n          )}\n        </Layout>\n      </BrowserRouter>\n    </SnackbarProvider>\n  )\n}\n\nconst SnackbarCloseButton: React.FC<{ snackbarKey: SnackbarKey }> = ({\n  snackbarKey,\n}) => {\n  const { closeSnackbar } = useSnackbar()\n  return (\n    <IconButton onClick={() => closeSnackbar(snackbarKey)} size=\"large\">\n      <Close style={{ color: 'white' }} />\n    </IconButton>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  ALGORITHM_LIST_SLICE_NAME,\n  AlgorithmListType,\n} from './AlgorithmListType'\nimport { getAlgoList } from './AlgorithmListActions'\nimport { convertToAlgoListType } from './AlgorithmListUtils'\n\nexport const initialState: AlgorithmListType = {\n  isLatest: false,\n  tree: {},\n}\n\nexport const algorithmListSlice = createSlice({\n  name: ALGORITHM_LIST_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlgoList.fulfilled, (state, action) => {\n      state.tree = convertToAlgoListType(action.payload)\n      state.isLatest = true\n    })\n  },\n})\n\nexport default algorithmListSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n  DisplayData,\n  DISPLAY_DATA_SLICE_NAME,\n} from './DisplayDataType'\nimport {\n  getCsvData,\n  getHeatMapData,\n  getImageData,\n  getTimeSeriesDataById,\n  getTimeSeriesAllData,\n  getRoiData,\n  getScatterData,\n  getBarData,\n  getHTMLData,\n  getTimeSeriesInitData,\n} from './DisplayDataActions'\nimport {\n  deleteDisplayItem,\n  setNewDisplayDataPath,\n} from '../VisualizeItem/VisualizeItemActions'\n\nconst initialState: DisplayData = {\n  timeSeries: {},\n  heatMap: {},\n  image: {},\n  csv: {},\n  roi: {},\n  scatter: {},\n  bar: {},\n  html: {},\n}\n\nexport const displayDataSlice = createSlice({\n  name: DISPLAY_DATA_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        if (action.payload.deleteData) {\n          const { filePath, dataType } = action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        if (action.payload.deleteData) {\n          const { prevDataType: dataType, prevFilePath: filePath } =\n            action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(getTimeSeriesDataById.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesDataById.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesDataById.fulfilled, (state, action) => {\n        const { path, index } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].data[index] = action.payload.data[index]\n        if (action.payload.std[index] !== undefined) {\n          state.timeSeries[path].std[index] = action.payload.std[index]\n        }\n      })\n      .addCase(getTimeSeriesAllData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesAllData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesAllData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        if (action.payload.std !== undefined) {\n          state.timeSeries[path].std = action.payload.std\n        }\n      })\n      .addCase(getTimeSeriesInitData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesInitData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesInitData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        state.timeSeries[path].std = action.payload.std\n      })\n      .addCase(getHeatMapData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHeatMapData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getImageData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getCsvData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getRoiData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getRoiData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        const { data } = action.payload\n\n        // 計算\n        const roi1Ddata: number[] = data[0]\n          .map((row) =>\n            Array.from(new Set(row.filter((value) => value != null))),\n          )\n          .flat()\n        const roiUniqueIdList = Array.from(new Set(roi1Ddata))\n          .sort((n1, n2) => n1 - n2)\n          .map(String)\n\n        state.roi[path] = {\n          type: 'roi',\n          data: data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n          roiUniqueList: roiUniqueIdList,\n        }\n      })\n      .addCase(getRoiData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getScatterData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getBarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n  },\n})\n\nfunction deleteDisplayDataFn(\n  state: DisplayData,\n  filePath: string,\n  dataType: DATA_TYPE,\n) {\n  if (dataType === DATA_TYPE_SET.IMAGE) {\n    delete state.image[filePath]\n  } else if (dataType === DATA_TYPE_SET.TIME_SERIES) {\n    delete state.timeSeries[filePath]\n  } else if (dataType === DATA_TYPE_SET.CSV) {\n    delete state.csv[filePath]\n  } else if (dataType === DATA_TYPE_SET.HEAT_MAP) {\n    delete state.heatMap[filePath]\n    // } else if (dataType === DATA_TYPE_SET.ROI) {\n    //   delete state.roi[filePath]\n  } else if (dataType === DATA_TYPE_SET.SCATTER) {\n    delete state.scatter[filePath]\n  } else if (dataType === DATA_TYPE_SET.BAR) {\n    delete state.bar[filePath]\n  } else if (dataType === DATA_TYPE_SET.HTML) {\n    delete state.html[filePath]\n  }\n}\n\nexport default displayDataSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { FileUploader, FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\nimport { setUploadProgress, uploadFile } from './FileUploaderActions'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nconst initialState: FileUploader = {}\n\nexport const fileUploaderSlice = createSlice({\n  name: FILE_UPLOADER_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFileUploaderStateById(state, action: PayloadAction<string>) {\n      state[action.payload] = inistialUploaderState\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(setUploadProgress, (state, action) => {\n        const { progess, requestId } = action.payload\n        state[requestId].uploadingProgress = progess\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileName, requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          fileName,\n          isUninitialized: false,\n          pending: true,\n          fulfilled: false,\n          uploadingProgress: 0,\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { requestId } = action.meta.arg\n        const { resultPath } = action.payload\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          path: resultPath,\n          pending: false,\n          fulfilled: true,\n        }\n      })\n      .addCase(uploadFile.rejected, (state, action) => {\n        const { requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          pending: false,\n          fulfilled: false,\n          error: action.error.message,\n        }\n      })\n  },\n})\n\nexport const { setFileUploaderStateById } = fileUploaderSlice.actions\n\nexport default fileUploaderSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { uploadFile } from 'store/slice/FileUploader/FileUploaderActions'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { getFilesTree } from './FilesTreeAction'\nimport { FilesTree, FILES_TREE_SLICE_NAME } from './FilesTreeType'\nimport { convertToTreeNodeType } from './FilesTreeUtils'\n\nexport const initialState: FilesTree = {}\nexport const filesTreeSlice = createSlice({\n  name: FILES_TREE_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getFilesTree.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        state[fileType] = {\n          isLoading: true,\n          isLatest: false,\n          tree: [],\n        }\n      })\n      .addCase(getFilesTree.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        state[fileType].tree = convertToTreeNodeType(action.payload)\n        state[fileType].isLatest = true\n        state[fileType].isLoading = false\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          if (state[FILE_TREE_TYPE_SET.IMAGE] != null) {\n            state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.IMAGE] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          if (state[FILE_TREE_TYPE_SET.CSV] != null) {\n            state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.CSV] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          if (state[FILE_TREE_TYPE_SET.HDF5] != null) {\n            state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.HDF5] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else {\n          if (state[FILE_TREE_TYPE_SET.ALL] != null) {\n            state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.ALL] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n        } else {\n          state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n        }\n      })\n  },\n})\n\nexport default filesTreeSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as MuiColors from '@mui/material/colors'\n\nexport type HandleTypeColor = {\n  colorMap: { [type: string]: string }\n  /**\n   * HANDLE_COLOR_PRESET_MAPのkey\n   */\n  nextKey: number\n}\n\nconst initialState: HandleTypeColor = {\n  colorMap: {\n    ImageData: MuiColors.red[500],\n    IscellData: MuiColors.indigo[500],\n    TimeSeriesData: MuiColors.yellow[500],\n    Suite2pData: MuiColors.green[500],\n    FluoData: MuiColors.orange[500],\n    BehaviorData: MuiColors.yellow[500],\n  },\n  nextKey: 0,\n}\n\nconst SLICE_NAME = 'handleTypeColor'\n\nexport const handleTypeColorSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {},\n})\n\nexport default handleTypeColorSlice.reducer\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\nimport { HDF5TreeNodeType } from './HDF5Type'\n\nexport function convertToTreeNodeType(dto: HDF5TreeDTO[]): HDF5TreeNodeType[] {\n  return dto.map((node) =>\n    node.isDir\n      ? {\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n          path: node.path,\n        }\n      : {\n          name: node.name,\n          isDir: false,\n          shape: node.shape,\n          path: node.path,\n          nbytes: node.nbytes,\n        },\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { getHDF5Tree } from './HDF5Action'\nimport { HDF5Tree, HDF5_SLICE_NAME } from './HDF5Type'\nimport { convertToTreeNodeType } from './HDF5Utils'\n\nconst initialState: HDF5Tree = {\n  isLoading: false,\n  tree: [],\n}\nexport const HDF5Slice = createSlice({\n  name: HDF5_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHDF5Tree.pending, (state, action) => {\n        state = {\n          isLoading: true,\n          tree: [],\n        }\n      })\n      .addCase(getHDF5Tree.fulfilled, (state, action) => {\n        state.tree = convertToTreeNodeType(action.payload)\n        state.isLoading = false\n      })\n  },\n})\n\nexport default HDF5Slice.reducer\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport {\n  getExperimentsDatabase,\n  getCellsDatabase,\n  getExperimentsPublicDatabase,\n  getCellsPublicDatabase,\n  getListUserShare,\n  postListUserShare, postPublish,\n} from './DatabaseActions'\nimport { DATABASE_SLICE_NAME, DatabaseDTO, ListShare } from './DatabaseType'\n\nconst initData = {\n  offset: 0,\n  total: 0,\n  limit: 50,\n  header: {\n    graph_titles: [],\n  },\n  items: [],\n}\n\nexport type TypeData = {\n  public: DatabaseDTO\n  private: DatabaseDTO\n}\n\nexport const initialState: {\n  data: TypeData\n  loading: boolean\n  type: 'experiment' | 'cell'\n  listShare?: {\n    share_type: number\n    users: ListShare[]\n  }\n} = {\n  data: {\n    public: initData,\n    private: initData,\n  },\n  loading: false,\n  type: 'experiment',\n  listShare: undefined\n}\n\nexport const databaseSlice = createSlice({\n  name: DATABASE_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getExperimentsDatabase.pending, (state, action) => {\n        if (state.type === 'cell') {\n          state.data.private = initData\n          state.type = 'experiment'\n        }\n        state.loading = true\n      })\n      .addCase(getCellsDatabase.pending, (state, action) => {\n        if (state.type === 'experiment') {\n          state.data.private = initData\n          state.type = 'cell'\n        }\n        state.loading = true\n      })\n      .addCase(getExperimentsPublicDatabase.pending, (state, action) => {\n        if (state.type === 'cell') {\n          state.data.public = initData\n          state.type = 'experiment'\n        }\n        state.loading = true\n      })\n      .addCase(getCellsPublicDatabase.pending, (state, action) => {\n        if (state.type === 'experiment') {\n          state.data.public = initData\n          state.type = 'cell'\n        }\n        state.loading = true\n      })\n      .addCase(getListUserShare.pending, (state, action) => {\n        state.listShare = undefined\n        state.loading = true\n      })\n      .addMatcher(\n        isAnyOf(\n          postListUserShare.pending,\n            postPublish.pending\n        ),\n        (state, action) => {\n          state.loading = true\n        },\n      )\n      .addMatcher(\n        isAnyOf(\n          postPublish.fulfilled,\n          postPublish.rejected\n        ),\n        (state, _action) => {\n          state.loading = false\n        },\n      )\n      .addMatcher(\n        isAnyOf(\n          getCellsDatabase.fulfilled,\n          getExperimentsDatabase.fulfilled,\n        ),\n        (state, action) => {\n          state.data.private = action.payload\n          state.loading = false\n        },\n      )\n      .addMatcher(\n        isAnyOf(\n          getCellsPublicDatabase.fulfilled,\n          getExperimentsPublicDatabase.fulfilled,\n        ),\n        (state, action) => {\n          state.data.public = action.payload\n          state.loading = false\n        },\n      )\n      .addMatcher(\n        isAnyOf(\n          getListUserShare.fulfilled,\n        ),\n        (state, action) => {\n          state.listShare = action.payload\n          state.loading = false\n        },\n      )\n      .addMatcher(\n        isAnyOf(\n          getExperimentsDatabase.rejected,\n          getCellsDatabase.rejected,\n          getExperimentsPublicDatabase.rejected,\n          getCellsPublicDatabase.rejected,\n          getListUserShare.rejected,\n          postListUserShare.rejected,\n          postListUserShare.fulfilled\n        ),\n        (state) => {\n          state.loading = false\n        },\n      )\n  },\n})\n\nexport default databaseSlice.reducer\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit'\nimport {\n  algorithmListReducer,\n  algorithmNodeReducer,\n  displayDataReducer,\n  fileUploaderReducer,\n  flowElementReducer,\n  inputNodeReducer,\n  nwbReducer,\n  filesTreeReducer,\n  handleTypeColorReducer,\n  rightDrawerReducer,\n  visualaizeItemReducer,\n  snakemakeReducer,\n  pipelineReducer,\n  hdf5Reducer,\n  experimentsReducer,\n  workspaceReducer,\n  userReducer,\n  databaseReducer,\n} from './slice'\nimport { DATABASE_SLICE_NAME } from './slice/Database/DatabaseType'\n\nexport const rootReducer = combineReducers({\n  algorithmList: algorithmListReducer,\n  algorithmNode: algorithmNodeReducer,\n  displayData: displayDataReducer,\n  fileUploader: fileUploaderReducer,\n  flowElement: flowElementReducer,\n  inputNode: inputNodeReducer,\n  handleColor: handleTypeColorReducer,\n  filesTree: filesTreeReducer,\n  nwb: nwbReducer,\n  rightDrawer: rightDrawerReducer,\n  visualaizeItem: visualaizeItemReducer,\n  snakemake: snakemakeReducer,\n  pipeline: pipelineReducer,\n  hdf5: hdf5Reducer,\n  experiments: experimentsReducer,\n  workspace: workspaceReducer,\n  user: userReducer,\n  [DATABASE_SLICE_NAME]: databaseReducer,\n})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\nexport type ThunkApiConfig<T = unknown, PendingMeta = unknown> = {\n  state: RootState\n  dispatch: AppDispatch\n  rejectValue: T\n  penfingMeta: PendingMeta\n}\n","import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme({\n  components: {\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiSelect: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiDialog: {\n      defaultProps: {\n        disableEscapeKeyDown: true,\n      },\n    },\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from 'store/store'\n\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './Theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}