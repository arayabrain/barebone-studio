{"version":3,"sources":["store/utils/param/ParamUtils.ts","store/slice/AlgorithmNode/AlgorithmNodeSelectors.ts","store/slice/AlgorithmList/AlgorithmListUtils.ts","store/slice/AlgorithmList/AlgorithmListSelectors.ts","store/slice/AlgorithmList/AlgorithmListType.ts","const/API.ts","store/slice/AlgorithmList/AlgorithmListActions.ts","store/slice/InputNode/InputNodeType.ts","store/slice/FlowElement/FlowElementType.ts","store/slice/FlowElement/FlowElementActions.ts","components/FlowChart/TreeView.tsx","const/flowchart.ts","api/experiments/Experiments.ts","store/slice/Experiments/ExperimentsType.ts","store/slice/Experiments/ExperimentsActions.ts","store/slice/InputNode/InputNodeActions.ts","store/slice/FlowElement/FlowElementUtils.ts","api/run/RunUtils.ts","store/slice/FlowElement/FlowElementSlice.ts","store/slice/FlowElement/FlowElementSelectors.ts","store/slice/InputNode/InputNodeUtils.ts","store/slice/InputNode/InputNodeSelectors.ts","components/FlowChart/FlowChartNode/HandleColorHook.ts","store/slice/HandleTypeColor/HandleTypeColorSelectors.ts","store/slice/FilesTree/FilesTreeSelectors.ts","store/slice/FilesTree/FilesTreeType.ts","store/slice/FilesTree/FilesTreeAction.ts","components/FileSelectDialog.tsx","components/FlowChart/FlowChartNode/LinerProgressWithLabel.tsx","store/slice/FileUploader/FileUploaderType.ts","store/slice/FileUploader/FileUploaderActions.ts","store/slice/FileUploader/FileUploaderInitlalState.ts","store/slice/FileUploader/FileUploaderSelectors.ts","store/slice/FileUploader/FileUploaderHook.ts","components/FlowChart/FlowChartNode/FileSelect.tsx","components/FlowChart/FlowChartNode/FlowChartUtils.ts","components/FlowChart/FlowChartNode/ImageFileNode.tsx","store/slice/RightDrawer/RightDrawerSlice.ts","store/slice/NWB/NWBSelectors.ts","store/slice/Snakemake/SnakemakeSelectors.ts","store/slice/Pipeline/PipelineType.ts","store/slice/DisplayData/DisplayDataType.ts","store/slice/DisplayData/DisplayDataUtils.ts","store/slice/Pipeline/PipelineUtils.ts","store/slice/Pipeline/PipelineSelectors.ts","components/FlowChart/FlowChartNode/AlgorithmNode.tsx","store/slice/InputNode/InputNodeSlice.ts","store/slice/DisplayData/DisplayDataSelectors.ts","store/slice/DisplayData/DisplayDataActions.ts","components/Visualize/DataContext.tsx","utils/EqualityUtils.ts","store/slice/VisualizeItem/VisualizeItemType.ts","store/slice/VisualizeItem/VisualizeItemUtils.ts","store/slice/VisualizeItem/VisualizeItemSelectors.ts","components/Visualize/Plot/CsvPlot.tsx","components/FlowChart/FlowChartNode/CsvFileNode.tsx","store/slice/HDF5/HDF5Selectors.ts","store/slice/HDF5/HDF5Type.ts","store/slice/HDF5/HDF5Action.ts","components/FlowChart/FlowChartNode/HDF5FileNode.tsx","components/FlowChart/CustomEdge.tsx","store/slice/NWB/NWBAction.ts","store/slice/NWB/NWBType.ts","store/slice/NWB/NWBSlice.ts","components/Accordion.tsx","components/ParamFormItemCreator.tsx","components/FlowChart/NWB.tsx","store/slice/Snakemake/SnakemakeType.ts","store/slice/Snakemake/SnakemakeAction.ts","store/slice/Snakemake/SnakemakeSlice.ts","components/FlowChart/Snakemake.tsx","api/run/Run.ts","store/slice/Pipeline/PipelineActions.ts","store/slice/Pipeline/PipelineSlice.ts","components/RunButtons.tsx","components/ToolBar.tsx","components/FlowChart/ReactFlowComponent.tsx","store/slice/RightDrawer/RightDrawerSelectors.ts","store/slice/AlgorithmNode/AlgorithmNodeType.ts","store/slice/AlgorithmNode/AlgorithmNodeActions.ts","store/slice/AlgorithmNode/AlgorithmNodeSlice.ts","components/FlowChart/AlgorithmParamForm.tsx","components/FlowChart/RightDrawer.tsx","components/FlowChart/FlowChart.tsx","store/slice/VisualizeItem/VisualizeItemSlice.ts","components/Visualize/VisualizeItemAddButton.tsx","store/slice/DisplayData/DisplayDataSlice.ts","components/Visualize/DisplayItemDeleteButton.tsx","components/Visualize/Plot/ImagePlot.tsx","components/Visualize/Plot/TimeSeriesPlot.tsx","components/Visualize/Plot/HeatMapPlot.tsx","components/Visualize/FilePathSelect.tsx","components/Visualize/MultiPlotItem.tsx","components/Visualize/Plot/RoiPlot.tsx","components/Visualize/Plot/ScatterPlot.tsx","components/Visualize/Plot/BarPlot.tsx","components/Visualize/Plot/HTMLPlot.tsx","components/Visualize/DisplayDataItem.tsx","components/Visualize/MultiPlotDeleteButton.tsx","components/Visualize/VisualizeItems.tsx","components/Visualize/Editor/GradientColorPicker.tsx","components/Visualize/Editor/ImageItemEditor.tsx","components/Visualize/Editor/CsvItemEditor.tsx","components/Visualize/Editor/HeatmapItemEditor.tsx","components/Visualize/Editor/TimeSeriesItemEditor.tsx","components/Visualize/Editor/RoiItemEditor.tsx","components/Visualize/Editor/ScatterItemEditor.tsx","components/Visualize/Editor/BarItemEditor.tsx","components/Visualize/VisualizeItemEditor.tsx","components/Visualize/Visualize.tsx","store/slice/Experiments/ExperimentsSelectors.ts","components/Experiment/ExperimentStatusIcon.tsx","components/Experiment/CollapsibleTable.tsx","components/Experiment/ExperimentTable.tsx","components/Experiment/Experiment.tsx","components/optinist.png","components/Layout.tsx","store/slice/Pipeline/PipelineHook.ts","App.tsx","reportWebVitals.ts","store/slice/AlgorithmList/AlgorithmListSlice.ts","store/slice/FileUploader/FileUploaderSlice.ts","store/slice/FilesTree/FilesTreeUtils.ts","store/slice/FilesTree/FilesTreeSlice.ts","store/slice/HandleTypeColor/HandleTypeColorSlice.ts","store/slice/HDF5/HDF5Utils.ts","store/slice/HDF5/HDF5Slice.ts","store/slice/Experiments/ExperimentsUtils.ts","store/slice/Experiments/ExperimentsSlice.ts","store/store.ts","Theme.ts","index.tsx"],"names":["getChildParam","path","ParamMap","result","Object","values","node","isParamChild","children","param","type","convertToParamMap","dto","keyList","entries","forEach","name","value","kList","Array","isArray","isDictObject","concat","join","push","selectAlgorithmNode","state","algorithmNode","selectAlgorithmName","nodeId","selectAlgorithmParams","params","isAlgoChild","algoNode","getAlgoChild","algoList","algoName","convertToAlgoListType","prototype","hasOwnProperty","call","functionPath","args","returns","selectAlgorithmList","algorithmList","selectAlgorithmListIsLated","isLatest","selectAlgorithmListTree","tree","ALGORITHM_LIST_SLICE_NAME","HOST","process","PORT","BASE_URL","getAlgoList","createAsyncThunk","_","thunkAPI","a","rejectWithValue","axios","get","response","data","INPUT_NODE_SLICE_NAME","FILE_TYPE_SET","FLOW_ELEMENT_SLICE_NAME","NODE_TYPE_SET","addAlgorithmNode","addInputNode","createAction","AlgorithmTreeView","React","memo","dispatch","useDispatch","useSelector","useEffect","TreeView","sx","flexGrow","height","defaultCollapseIcon","defaultExpandIcon","TreeItem","label","InputNodeComponent","fileName","nodeName","fileType","map","i","AlgoNodeComponent","onAlgoNodeClick","newNode","id","nanoid","toFixed","LeafItem","AddButton","onClick","nodeType","componentType","onDataNodeClick","IconButton","style","padding","size","Typography","variant","textOverflow","overflow","width","display","styled","treeItemClasses","iconContainer","margin","INITIAL_ALGO_STYLE","borderRadius","INITIAL_DATA_STYLE","border","getExperimentsApi","deleteExperimentByUidApi","uid","delete","importExperimentByUidApi","EXPERIMENTS_SLICE_NAME","getExperiments","deleteExperimentByUid","importExperimentByUid","setInputNodeFilePath","isNodeData","isNode","isAlgorithmNodeData","isInputNodePostData","isInputNodeData","isAlgorithmNodePostData","initialFlowPosition","x","y","zoom","initialElementCoord","initialState","flowElements","position","flowPosition","elementCoord","flowElementSlice","createSlice","reducers","setFlowPosition","action","payload","setFlowElements","deleteFlowElements","removeElements","deleteFlowElementsById","element","find","edge","undefined","editFlowElementPositionById","coord","elementIdx","findIndex","ele","targetItem","extraReducers","builder","addCase","fulfilled","meta","arg","targetPosition","Position","Left","sourcePosition","Right","newPosition","updateElementCoord","filePath","split","reverse","targetNode","newNodeList","nodeList","edgeList","actions","selectFlowElements","flowElement","selectFlowPosition","selectNodeById","filter","selectNodeLabelById","isCsvInputNode","inputNode","isHDF5InputNode","selectInputNodeById","selectInputNodeDefined","keys","includes","selectInputNodeSelectedFilePath","selectedFilePath","selectFilePathIsUndefined","length","selectCsvInputNodeParam","Error","selectInputNodeHDF5Path","item","hdf5Path","useHandleColor","key","handleColor","colorMap","selectFilesTree","filesTree","FILES_TREE_SLICE_NAME","FILE_TREE_TYPE_SET","getFilesTree","file_type","FileSelectDialog","open","onClickCancel","onClickOk","onClose","title","useState","clickedFilePath","setClickedFilePath","theme","useTheme","Dialog","fullWidth","DialogTitle","DialogContent","dividers","marginBottom","spacing","borderColor","palette","divider","FileTreeView","onClickFile","DialogActions","Button","color","selectFilesTreeNodes","selectFilesIsLatest","isLoading","selectFilesIsLoading","useFileTree","LinearProgress","TreeNode","isDir","icon","htmlColor","nodes","childNode","fontSize","LinearProgressWithLabel","props","Box","alignItems","mr","minWidth","Math","round","FILE_UPLOADER_SLICE_NAME","setUploadProgress","uploadFile","requestId","formData","config","getUploadConfig","percent","total","progess","post","resultPath","file_path","onUpdateProgressFn","onUploadProgress","progressEvent","percentCompleted","loaded","inistialUploaderState","isUninitialized","pending","uploadingProgress","error","selectFileUploader","fileUploader","useFileUploader","useRef","onUploadFile","useCallback","current","uninitialized","selectFileUploadIsUninitialized","selectUploadFilePath","selectFileUploadIsPending","selectFileUploadIsFulfilled","progress","selectFileUploadProgress","selectFileUploadError","FileSelect","onChangeFilePath","uploadedFilePath","marginLeft","marginRight","FileSelectImple","onSelectFile","selectedPath","fileTreeType","selectButtonLabel","uploadButtonLabel","inputRef","setOpen","accept","getFileInputAccept","ButtonGroup","click","ref","onChange","event","preventDefault","target","files","file","FormData","append","visibility","className","toHandleId","getHandleType","handleId","isValidConnection","connection","sourceHandle","targetHandle","sourceHandleStyle","top","ImageFileNode","ImageFileNodeImple","elementSelected","selected","returnType","imageColor","background","alpha","primary","light","right","RIGHT_DRAWER_MODE","mode","currendNodeId","rightDrawerSlice","openRightDrawer","closeRightDrawer","toggleParamForm","toggleNwb","toggleSnakemake","elm","selectNwb","nwb","selectNwbParamsKeyList","selectNwbParam","paramKey","selectNwbParamsValue","selectSnakemakeParams","snakemake","selectSnakemake","selectSnakemakeParamsKeyList","selectSnakemakeParam","selectSnakemakeParamsValue","PIPELINE_SLICE_NAME","RUN_STATUS","NODE_RESULT_STATUS","RUN_BTN_OPTIONS","RUN_NEW","RUN_ALREADY","RUN_BTN_LABELS","DISPLAY_DATA_SLICE_NAME","DATA_TYPE_SET","toDataType","isNodeResultPending","nodeResult","status","isNodeResultSuccess","isStartedPipeline","pipeline","getInitialRunResult","runPostData","initialResult","convertToOutputPath","selectPipelineLatestUid","currentPipeline","selectRunPostData","nwbParam","selectNwbParams","snakemakeParam","edgeListForRun","isEdge","selectEdgeListForRun","selectNodePostDataListForRun","forceRunList","selectForceRunList","selectInputNodeFileType","selectInputNodeParam","isUpdated","selectPipelineNodeResultStatus","selectStartedPipeline","run","selectPipelineRunBtn","runBtn","selectRunResultPendingNodeIdList","runResult","isNodeResultPendingAndNodeId","selectPipelineStatus","selectPipelineIsCanceled","selectPipelineIsStartedSuccess","isNodeResultSuccessAndNodeId","leftHandleStyle","rightHandleStyle","AlgorithmNode","AlgorithmNodeImple","isConnectable","AlgoName","AlgoArgs","AlgoReturns","Message","latestUid","paddingLeft","textAlign","main","algoArgs","algoListChild","selectAlgoArgs","algoInfoListEqualtyFn","info","algoInfo","ArgHandle","algoReturns","selectAlgoReturns","ReturnHandle","isNone","hex_color","isHover","setHover","rgb_color","hex","exec","parseInt","hexToRgb","onMouseEnter","onMouseLeave","Tooltip","placement","arrow","errorMsg","message","selectPipelineNodeResultMessage","anchorElRef","prevOpen","float","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","FormHelperText","success","b","every","v","inputNodeSlice","deleteInputNode","setCsvInputNodeParam","setInputNodeHDF5Path","setColumn","setIndex","transpose","newState","selectDisplayData","displayData","selectTimeSeriesDataIsInitialized","timeSeries","selectHeatMapDataIsInitialized","heatMap","selectImageData","image","selectImageDataIsInitialized","selectImageDataIsPending","selectCsvDataIsInitialized","csv","selectCsvDataError","selectCsvDataIsPending","selectCsvDataIsFulfilled","selectRoiData","roi","selectRoiDataIsInitialized","selectScatterDataIsInitialized","scatter","selectBarDataIsInitialized","bar","selectHTMLDataIsInitialized","html","getTimeSeriesDataById","index","getTimeSeriesAllData","getHeatMapData","getImageData","startIndex","endIndex","start_index","end_index","getCsvData","getRoiData","getScatterData","getBarData","getHTMLData","DisplayDataContext","createContext","dataType","itemId","NaN","arrayEqualityFn","twoDimarrayEqualityFn","VISUALIZE_ITEM_TYPE_SET","isMultiPlotItem","itemType","isDisplayDataItem","isImageItem","isTimeSeriesItem","isCsvItem","isHeatMapItem","isScatterItem","selectSelectedVisualizeItemId","visualaizeItem","selectedItemId","selectVisualizeItems","items","selectVisualizeItemIdList","Number","selectVisualizeItemType","selectMultiPlotImageItem","imageItem","selectMultiPlotImageItemNodeId","selectMultiPlotImageItemFilePath","selectMultiPlotTimeSeriesItem","timeSeriesItem","selectMultiPlotRoiItem","roiItem","selectMultiPlotRoiItemNodeId","selectMultiPlotRoiItemFilePath","selectMultiPlotTimeSeriesItemNodeId","selectMultiPlotTimeSeriesItemFilePath","selectMultiPlotHeatMapItem","heatMapItem","selectMultiPlotHeatMapItemNodeId","selectMultiPlotHeatMapItemFilePath","selectVisualizeDataType","selectVisualizeDataNodeId","selectVisualizeDataFilePath","selectImageItemFilePath","selectRoiItemFilePath","selectImageItemShowticklabels","showticklabels","selectImageItemZsmooth","zsmooth","selectImageItemStartIndex","selectImageItemEndIndex","selectImageItemShowLine","showline","selectImageItemShowGrid","showgrid","selectImageItemShowScale","showscale","selectImageItemColors","colors","selectImageItemRoiAlpha","roiAlpha","selectTimeSeriesItemOffset","offset","selectTimeSeriesItemSpan","span","selectTimeSeriesItemShowGrid","selectTimeSeriesItemShowLine","selectTimeSeriesItemShowTickLabels","selectTimeSeriesItemZeroLine","zeroline","selectTimeSeriesItemXrange","xrange","selectTimeSeriesItemDisplayNumbers","displayNumbers","selectTimeSeriesItemCheckedList","checkedList","selectRoiItemMaxNumber","roiFilePath","roiData","max","arr","selectHeatMapItemShowScale","selectHeatMapItemColors","selectCsvItemTranspose","selectCsvItemSetColumn","selectCsvItemSetIndex","selectScatterItemXIndex","xIndex","selectScatterItemYIndex","yIndex","CsvPlot","useContext","isInitialized","isPending","isFulfilled","CsvPlotImple","PresentationalCsvPlot","csvData","useMemo","col","row","columns","columnData","field","headerName","idx","rows","row_id","rowObj","fromEntries","CsvFileNode","CsvFileNodeImple","ParamSettingDialog","selectCsvInputNodeParamSetColumn","setSetColumn","selectCsvInputNodeParamSetIndex","setSetIndex","selectCsvInputNodeParamTranspose","setTranspose","p","m","FormControlLabel","control","Switch","checked","TextField","InputLabelProps","shrink","CsvPreview","otherProps","selectHDF5","hdf5","HDF5_SLICE_NAME","getHDF5Tree","HDF5FileNode","HDF5FileNodeImple","ItemSelect","structureFileName","Structure","autoFocus","useHDF5Tree","shape","nbytes","getNWBParams","nwbSlice","updateParam","newValue","Accordion","disableGutters","elevation","square","boxShadow","borderBottom","createParamFormItemComponent","paramSelector","paramValueSelector","paramUpdateActionCreator","useParamValueUpdate","ParamItemForString","updateParamAction","e","multiline","ParamItemForNumber","ParamItemForBoolean","ParamItemForValueType","ParamChildItem","marginTop","verticalAlign","ParamItem","AccordionSummary","expandIcon","AccordionDetails","NWBSettingButton","endIcon","NWBSettingContents","paramKeyList","Component","SNAKEMAKE_SLICE_NAME","getSnakemakeParams","SnakemakeSlice","SnakemakeButton","SnakemakeContents","runApi","runByUidApi","pendingNodeIdList","responseData","runByCurrentUid","currentUid","getState","pollRunResult","pipelineSlice","cancelPipeline","setRunBtnOption","runBtnOption","nodeResultDto","outputPath","outputPaths","convertToRunResult","rejected","addMatcher","isAnyOf","RunButtons","isStartedSuccess","filePathIsUndefined","handleCancelPipeline","handleRunPipeline","handleRunPipelineByUid","dialogOpen","setDialogOpen","enqueueSnackbar","useSnackbar","menuOpen","setMenuOpen","anchorRef","handleClose","contains","uidExists","disabled","Popper","role","transition","disablePortal","TransitionProps","Grow","Paper","ClickAwayListener","onClickAway","MenuList","option","MenuItem","handleMenuItemClick","RunDialog","handleRun","setName","setError","helperText","ToolBar","zIndex","textTransform","componentTypes","edgeTypes","buttonedge","sourceX","sourceY","targetX","targetY","arrowHeadType","markerEndId","edgePath","getBezierPath","markerEnd","getMarkerEnd","getEdgeCenter","edgeCenterX","edgeCenterY","d","foreignObjectSize","ReactFlowComponent","elements","onElementsRemove","elementsToRemove","onConnect","addEdge","animated","onDragOver","dataTransfer","dropEffect","onNodeDragStop","nodeTypes","defaultPosition","defaultZoom","onMoveEnd","selectRightDrawerIsOpen","rightDrawer","selectRightDrawerMode","selectRightDrawerCurrentNodeId","ALGORITHM_NODE_SLICE_NAME","getAlgoParams","algorithmNodeSlice","AlgorithmParamForm","ParamFormContext","algoParamIsLoaded","selectAlgorithmParamsExit","selectAlgorithmParamsKeyList","selectAlgorithmParam","selectAlgorithmParamsValue","Contents","ParamFormConetent","Provider","StyledDrawer","Drawer","flexShrink","drawerClasses","paper","MainContents","RightDrawer","anchor","Toolbar","Divider","FlowChart","RootDiv","DrawerContents","drawerWidth","flexDirection","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","displayDataCommonInitialValue","imageItemInitialValue","rgb","activeIndex","timeSeriesItemInitialValue","left","maxIndex","heatMapItemInitialValue","csvItemInitialValue","roiItemInitialValue","scatterItemInitialValue","barItemInitialValue","hdf5ItemInitialValue","htmlItemInitialValue","getDisplayDataItemInitialValue","MultiPlotItemInitialValue","visualaizeItemSlice","deleteVisualizeItem","addInitialItem","nextId","idList","reduce","getMaxItemId","selectItem","setRoiItemFilePath","setFilePath","setImageItemFilePath","setTimeSeriesItemFilePath","setHeatMapItemFilePath","setDisplayDataPath","setItemType","toggleItemTypeMultiPlot","resetImageActiveIndex","incrementImageActiveIndex","decrementImageActiveIndex","setImageItemShowticklabels","setImageItemZsmooth","setImageItemShowLine","setImageItemShowGrid","setImageItemShowScale","setImageItemColors","setImageItemStartIndex","setImageItemEndIndex","setImageItemRoiAlpha","setTimeSeriesItemOffset","setTimeSeriesItemSpan","setTimeSeriesItemShowGrid","setTimeSeriesItemShowLine","setTimeSeriesItemShowTickLabels","setTimeSeriesItemZeroLine","setTimeSeriesItemXrangeLeft","setTimeSeriesItemXrangeRight","setTimeSeriesItemDisplayNumbers","setTimeSeriesItemCheckedList","setTimeSeriesItemMaxIndex","setHeatMapItemShowScale","setHeatMapItemColors","setCsvItemTranspose","setCsvItemSetColumn","setCsvItemSetIndex","setScatterItemXIndex","setScatterItemYIndex","VisualizeItemAddButton","StyledPaper","justifyContent","StyledButton","borderWidth","displayDataSlice","deleteDisplayItem","std","console","log","DisplayItemDeleteButton","stopPropagation","ImagePlot","selectImageDataError","ImagePlotImple","itemStartIndex","itemEndIndex","itemSize","maxSize","selectImageItemActiveIndex","MobileStepper","steps","activeStep","nextButton","direction","backButton","ImagePlotChart","imageData","selectActiveImageData","imageDataEqualtyFn","colorscale","timeDataMaxIndex","maxIdx","selectRoiItemIndex","colorscaleRoi","createColormap","colormap","nshades","format","z","parseFloat","offsets","min","hoverongaps","hovertemplate","new_i","floor","rgba","r","g","outParts","toString","substring","part","rgba2hex","zmin","zmax","layout","t","l","dragmode","xaxis","autorange","autotick","ticks","yaxis","automargin","plotlyHeight","getBoundingClientRect","getElementsByClassName","clientHeight","plotContainer","timeSeriesFilePath","selectMultiPlotTimeSeriesItemFilepath","selectMultiPlotTimeSeriesItemDisplayNumbers","displayModeBar","responsive","points","curveNumber","onSelecting","range","x1","x2","y1","y2","slice","flat","self","indexOf","TimeSeriesPlot","selectTimeSeriesDataError","selectTimeSeriesDataIsFulfilled","TimeSeriesPlotImple","timeSeriesData","timeSeriesDataEqualityFn","dataXrange","selectTimeSeriesXrange","dataStd","selectTimeSeriesStd","colorScale","activeIdx","mean","sqrt","pow","String","visible","line","error_y","array","annotations","xref","yref","text","arrowhead","ax","ay","autosize","onLegendClick","clickNumber","aArray","bArray","aKey","aValue","bKey","bValue","nestEqualityFun","HeatMapPlot","selectHeatMapDataError","selectHeatMapDataIsFulfilled","HeatMapImple","heatMapData","heatMapDataEqualtyFn","showlegend","FilePathSelect","selectedNodeId","onSelect","inputNodeFilePathInfoList","inputNodes","selectInputNode","toDataTypeFromFileType","inputNodeDataType","algorithmNodeOutputPathInfoList","selectPipelineNodeResultSuccessList","paths","outputKey","onSelectHandle","menuItemList","pathInfo","ListSubheader","FormControl","maxWidth","InputLabel","Select","onOpen","MultiPlotItem","MultiPlot","Grid","container","xs","MultiImagePlot","MultiTimeSeriesPlot","MultiHeatMapPlot","secondary","RoiPlot","selectRoiDataIsFulfilled","selectRoiDataError","RoiPlotImple","ScatterPlot","selectScatterDataError","selectScatterDataIsFulfilled","ScatterPlotImple","scatterData","scatterDataEqualityFn","textposition","textfont","family","marker","font","BarPlot","selectBarDataError","selectBarDataIsFulfilled","BarPlotImple","barData","barDataEqualityFn","HTMLPlot","selectHTMLDataError","selectHTMLDataIsFulfilled","HTMLPlotImple","htmlData","dangerouslySetInnerHTML","__html","DisplayDataItem","DisplayPlot","MultiPlotDeleteButton","VisualizeItems","FlexItemList","itemIdList","flexWrap","Item","isSelected","cursor","ItemByType","DeleteButton","GradientColorPicker","dispatchSetColor","maxStops","paletteHeight","onPaletteChange","colorCode","rgbStr","replace","flatStyle","WrappedSketchPicker","c","ImageItemEditor","SelectedItemIdContext","roiItemNodeId","selectRoiItemNodeId","roiItemFilePath","Showticklabels","ShowLine","ShowGrid","ShowScale","Zsmooth","RoiAlpha","inputError","inputProps","step","StartEndIndex","onChangeStartIndex","onChangeEndIndex","CsvItemEditor","Transpose","SetColumn","SetIndex","HeatmapItemEditor","TimeSeriesItemEditor","Offset","Span","defaultValue","ShowTickLabels","ZeroLine","Xrange","newLeft","newRight","LegendSelect","selectTimeSeriesItemFilePath","handleChange","ml","Checkbox","RoiItemEditor","ScatterItemEditor","XIndex","YIndex","BarItemEditor","VisualizeItemEditor","ItemTypeSelect","isMultiPlot","selectVisualizeItemTypeIsMultiPlot","Editor","MultiPlotItemEditor","DisplayDataItemEditor","prevItem","setPrevItem","DisplayEditor","StyledDrawerContents","Visualize","selectExperiments","experiments","selectExperimentsSatusIsUninitialized","selectExperimentsSatusIsFulfilled","selectExperimentsSatusIsError","selectExperimentsErrorMessage","selectExperimentList","experimentList","selectExperiment","selectExperimentName","selectExperimentFunction","functions","ExperimentStatusIcon","CollapsibleTable","TableRow","TableCell","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","gutterBottom","component","Table","Head","TableHead","Body","ExperimentUidContext","nodeIdList","selectExperimentFunctionNodeIdList","TableBody","TableRowOfFunction","selectExperimentFunctionName","selectExperimentFunctionStatus","scope","ExperimentTable","isError","ExperimentsErrorView","Alert","severity","AlertTitle","TableImple","order","setOrder","sortTarget","setSortTarget","TableContainer","sortHandler","property","sort","getComparator","expData","TableSortLabel","active","Row","timestamp","selectExperimentTimeStamp","statusList","f","selectExperimentStatus","Fragment","tableCellClasses","root","borderBottomWidth","ImportExperimentButton","unwrap","then","DeleteExperimentButton","orderBy","descendingComparator","Experiment","backgroundColor","StyledAppBar","AppBar","drawer","TabPanel","other","hidden","a11yProps","Layout","setValue","runPipeline","isCanceled","intervalId","setInterval","clearInterval","prevStatus","setPrevStatus","useRunPipeline","src","optinistLogo","alt","Tabs","centered","textColor","Tab","SnackbarCloseButton","snackbarKey","closeSnackbar","App","maxSnack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","algorithmListSlice","fileUploaderSlice","setFileUploaderStateById","currentState","convertToTreeNodeType","isdir","filesTreeSlice","ImageData","MuiColors","IscellData","TimeSeriesData","Suite2pData","nextKey","handleTypeColorSlice","HDF5Slice","convertToExperimentType","function","unique_id","postion","convertToExperimentStatus","experimentsSlice","convertToExperimentListType","store","configureStore","reducer","algorithmListReducer","algorithmNodeReducer","displayDataReducer","fileUploaderReducer","flowElementReducer","inputNodeReducer","handleTypeColorReducer","filesTreeReducer","nwbReducer","rightDrawerReducer","visualaizeItemReducer","snakemakeReducer","pipelineReducer","hdf5Reducer","experimentsReducer","createTheme","components","MuiTextField","defaultProps","MuiSelect","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.1584a32c.chunk.js","sourcesContent":["import {\n  ParamDTO,\n  ParamChild,\n  ParamParent,\n  ParamType,\n  ParamMap,\n} from './ParamType'\n\nexport function getChildParam(\n  path: string,\n  ParamMap: ParamMap,\n): ParamChild | null {\n  let result: ParamChild | null = null\n  for (const node of Object.values(ParamMap)) {\n    if (isParamChild(node)) {\n      if (node.path === path) {\n        result = node\n      }\n    } else {\n      result = getChildParam(path, node.children)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function isParamChild(param: ParamType): param is ParamChild {\n  return param.type === 'child'\n}\n\nexport function isParamParent(param: ParamType): param is ParamParent {\n  return param.type === 'parent'\n}\n\nfunction isDictObject(value: unknown): value is { [key: string]: unknown } {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst PATH_SEPARATOR = '/'\n\nexport function convertToParamMap(dto: ParamDTO, keyList?: string[]): ParamMap {\n  const ParamMap: ParamMap = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    const kList = keyList ?? []\n    if (isDictObject(value)) {\n      kList.push(name)\n      ParamMap[name] = {\n        type: 'parent',\n        children: convertToParamMap(value, kList),\n      }\n    } else {\n      ParamMap[name] = {\n        type: 'child',\n        value,\n        path: kList.concat([name]).join(PATH_SEPARATOR),\n      }\n    }\n  })\n  return ParamMap\n}\n\nexport function equalsParamMap(a: ParamMap, b: ParamMap) {\n  if (a === b) {\n    return true\n  }\n  const aArray = Object.keys(a)\n  const bArray = Object.keys(b)\n  return (\n    aArray.length === bArray.length &&\n    aArray.every((aKey) => {\n      const aValue = a[aKey]\n      const bValue = b[aKey]\n      return equalsParam(aValue, bValue)\n    })\n  )\n}\n\nfunction equalsParam(a: ParamType, b: ParamType): boolean {\n  if (a === b) {\n    return true\n  }\n  if (isParamChild(a) && isParamChild(b)) {\n    return equalsParamChild(a, b)\n  } else if (isParamParent(a) && isParamParent(b)) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      aArray.length === bArray.length &&\n      aArray.every((aKey) => {\n        const aValue = a.children[aKey]\n        const bValue = b.children[aKey]\n        return equalsParam(aValue, bValue)\n      })\n    )\n  } else {\n    return false\n  }\n}\n\nfunction equalsParamChild(a: ParamChild, b: ParamChild) {\n  return a.path === b.path && a.value === b.value\n}\n","import { RootState } from 'store/store'\n\nimport { getChildParam } from 'store/utils/param/ParamUtils'\n\nexport const selectAlgorithmNode = (state: RootState) => state.algorithmNode\n\nexport const selectAlgorithmNodeDefined =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(state.algorithmNode).includes(nodeId)\n\nexport const selectAlgorithmFunctionPath =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNode(state)[nodeId].functionPath\n\nexport const selectAlgorithmName = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNode(state)[nodeId].name\n\nexport const selectAlgorithmParams = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNode(state)[nodeId].params\n\nexport const selectAlgorithmIsUpdated =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNode(state)[nodeId].isUpdated\n\nexport const selectAlgorithmParamsExit =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNode(state)[nodeId].params !== null\n\nexport const selectAlgorithmParamsKeyList =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(selectAlgorithmNode(state)[nodeId]?.params ?? {})\n\nexport const selectAlgorithmParamsValue =\n  (nodeId: string, path: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmParam =\n  (nodeId: string, paramKey: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      return params[paramKey]\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n","import {\n  AlgorithmNodeType,\n  AlgoListDTO,\n  AlgorithmInfo,\n  AlgorithmChild,\n  AlgorithmParent,\n  AlgorithmListTree,\n} from './AlgorithmListType'\n\nexport function isAlgoChild(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmChild {\n  return algoNode.type === 'child'\n}\n\nexport function isAlgoParent(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmParent {\n  return algoNode.type === 'parent'\n}\n\nexport function getAlgoChild(\n  algoList: AlgorithmListTree,\n  algoName: string,\n): AlgorithmChild | null {\n  let result: AlgorithmChild | null = null\n  for (const [name, node] of Object.entries(algoList)) {\n    if (isAlgoChild(node)) {\n      if (name === algoName) {\n        result = node\n      }\n    } else {\n      result = getAlgoChild(node.children, algoName)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function convertToAlgoListType(dto: AlgoListDTO) {\n  const algoList: AlgorithmListTree = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    if (Object.prototype.hasOwnProperty.call(value, 'children')) {\n      algoList[name] = {\n        type: 'parent',\n        children: convertToAlgoListType(\n          (\n            value as {\n              children: AlgoListDTO\n            }\n          ).children as AlgoListDTO,\n        ),\n      }\n    } else {\n      const dto = value as {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n      algoList[name] = {\n        type: 'child',\n        functionPath: dto.path,\n        args: dto.args,\n        returns: dto.returns,\n      }\n    }\n  })\n  return algoList\n}\n","import { RootState } from 'store/store'\nimport { selectAlgorithmName } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { getAlgoChild } from './AlgorithmListUtils'\n\nexport const selectAlgorithmList = (state: RootState) => state.algorithmList\n\nexport const selectAlgorithmListIsLated = (state: RootState) =>\n  selectAlgorithmList(state).isLatest\n\nexport const selectAlgorithmListTree = (state: RootState) =>\n  selectAlgorithmList(state).tree\n\nexport const selectAlgoArgs = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.args\n  } else {\n    return undefined\n  }\n}\n\nexport const selectAlgoReturns = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.returns\n  } else {\n    return undefined\n  }\n}\n","export const ALGORITHM_LIST_SLICE_NAME = 'algorithmList'\n\nexport type AlgorithmListType = {\n  isLatest: boolean\n  tree: AlgorithmListTree\n}\n\nexport type AlgorithmListTree = {\n  [algoName: string]: AlgorithmNodeType\n}\n\nexport type AlgorithmNodeType = AlgorithmChild | AlgorithmParent\nexport type AlgorithmChild = {\n  type: 'child'\n  args: AlgorithmInfo[]\n  returns: AlgorithmInfo[]\n  functionPath: string\n}\nexport type AlgorithmParent = {\n  type: 'parent'\n  children: {\n    [name: string]: AlgorithmNodeType\n  }\n}\nexport type AlgorithmInfo = {\n  name: string\n  type: string\n  isNone?: boolean\n}\n\nexport type AlgoListDTO = {\n  [name: string]:\n    | {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n    | { children: AlgoListDTO }\n}\n","const HOST = process.env.REACT_APP_SERVER_HOST\nconst PORT = process.env.REACT_APP_SERVER_PORT\n\nexport const BASE_URL = `http://${HOST}:${PORT}`\nexport const WS_BASE_URL = `ws://${HOST}:${PORT}`\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios'\nimport { AlgoListDTO, ALGORITHM_LIST_SLICE_NAME } from './AlgorithmListType'\nimport { BASE_URL } from 'const/API'\n\nexport const getAlgoList = createAsyncThunk<AlgoListDTO, void>(\n  `${ALGORITHM_LIST_SLICE_NAME}/getAlgoList`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await axios.get(`${BASE_URL}/algolist`)\n      return response.data\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","export const INPUT_NODE_SLICE_NAME = 'inputNode'\n\nexport const FILE_TYPE_SET = {\n  CSV: 'csv',\n  IMAGE: 'image',\n  HDF5: 'hdf5',\n  // NWB:\"nwb\"\n  // JSON:\"json\"\n} as const\n\nexport type FILE_TYPE = typeof FILE_TYPE_SET[keyof typeof FILE_TYPE_SET]\n\nexport type InputNode = {\n  [nodeId: string]: InputNodeType\n}\n\nexport type InputNodeType = CsvInputNode | ImageInputNode | HDF5InputNode\n\ninterface InputNodeBaseType<\n  T extends FILE_TYPE,\n  P extends { [key: string]: unknown },\n> {\n  fileType: T\n  selectedFilePath?: string // 複数ファイル指定の予定あり\n  selectedFileName?: string\n  param: P\n}\n\nexport type CsvInputParamType = {\n  setColumn: number | null\n  setIndex: boolean\n  transpose: boolean\n}\n\nexport interface CsvInputNode\n  extends InputNodeBaseType<'csv', CsvInputParamType> {}\n\nexport interface ImageInputNode extends InputNodeBaseType<'image', {}> {}\n\nexport interface HDF5InputNode extends InputNodeBaseType<'hdf5', {}> {\n  hdf5Path?: string\n}\n","import { Elements, FlowTransform } from 'react-flow-renderer'\n\nexport const FLOW_ELEMENT_SLICE_NAME = 'flowElement'\n\nexport const NODE_TYPE_SET = {\n  INPUT: 'input',\n  ALGORITHM: 'algorithm',\n} as const\n\nexport type NODE_TYPE = typeof NODE_TYPE_SET[keyof typeof NODE_TYPE_SET]\n\nexport type NodeData = AlgorithmNodeData | InputNodeData\n\ninterface NodeDataBaseType<T extends NODE_TYPE> {\n  label: string\n  type: T\n}\n\nexport interface InputNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.INPUT> {}\n\nexport interface AlgorithmNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.ALGORITHM> {}\n\nexport interface ElementCoord {\n  x: number\n  y: number\n}\n\nexport interface FlowElement {\n  flowElements: Elements<NodeData>\n  flowPosition: FlowTransform\n  elementCoord: ElementCoord\n}\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Node } from 'react-flow-renderer'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'store/utils/param/ParamType'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { FLOW_ELEMENT_SLICE_NAME, NodeData } from './FlowElementType'\n\nexport const addAlgorithmNode = createAsyncThunk<\n  ParamDTO,\n  {\n    node: Omit<Node<NodeData>, 'position'>\n    functionPath: string\n    name: string\n  }\n>(`${FLOW_ELEMENT_SLICE_NAME}/addAlgorithmNode`, async ({ name }, thunkAPI) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/params/${name}`)\n    return response.data\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const addInputNode = createAction<{\n  node: Omit<Node<NodeData>, 'position'>\n  fileType: FILE_TYPE\n}>(`${FLOW_ELEMENT_SLICE_NAME}/addInputNode`)\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { nanoid } from '@reduxjs/toolkit'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem'\nimport { styled, Typography } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport IconButton from '@mui/material/IconButton'\nimport AddIcon from '@mui/icons-material/Add'\n\nimport {\n  selectAlgorithmListIsLated,\n  selectAlgorithmListTree,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { AlgorithmNodeType } from 'store/slice/AlgorithmList/AlgorithmListType'\nimport { isAlgoChild } from 'store/slice/AlgorithmList/AlgorithmListUtils'\nimport { getAlgoList } from 'store/slice/AlgorithmList/AlgorithmListActions'\nimport { FILE_TYPE, FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  NODE_TYPE,\n  NODE_TYPE_SET,\n} from 'store/slice/FlowElement/FlowElementType'\nimport {\n  addAlgorithmNode,\n  addInputNode,\n} from 'store/slice/FlowElement/FlowElementActions'\n\nexport const AlgorithmTreeView = React.memo(() => {\n  const dispatch = useDispatch()\n  const algoList = useSelector(selectAlgorithmListTree)\n  const isLatest = useSelector(selectAlgorithmListIsLated)\n\n  useEffect(() => {\n    if (!isLatest) {\n      dispatch(getAlgoList())\n    }\n  }, [dispatch, isLatest])\n\n  const onAlgoNodeClick = (nodeName: string, functionPath: string) => {\n    const name = nodeName\n    const newNode = {\n      id: nanoid(),\n      type: 'AlgorithmNode',\n      data: { label: name, type: NODE_TYPE_SET.ALGORITHM },\n    }\n    dispatch(\n      addAlgorithmNode({\n        node: newNode,\n        name,\n        functionPath,\n      }),\n    )\n  }\n\n  return (\n    <TreeView\n      sx={{\n        flexGrow: 1,\n        height: '100%',\n      }}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId=\"Data\" label=\"Data\">\n        <InputNodeComponent\n          fileName={'image'}\n          nodeName={'imageData'}\n          fileType={FILE_TYPE_SET.IMAGE}\n        />\n        <InputNodeComponent\n          fileName={'csv'}\n          nodeName={'csvData'}\n          fileType={FILE_TYPE_SET.CSV}\n        />\n        <InputNodeComponent\n          fileName={'hdf5'}\n          nodeName={'hdf5Data'}\n          fileType={FILE_TYPE_SET.HDF5}\n        />\n      </TreeItem>\n      <TreeItem nodeId=\"Algorithm\" label=\"Algorithm\">\n        {Object.entries(algoList).map(([name, node], i) => (\n          <AlgoNodeComponent\n            name={name}\n            node={node}\n            onAlgoNodeClick={(name, functionPath) =>\n              onAlgoNodeClick(name, functionPath)\n            }\n            key={i.toFixed()}\n          />\n        ))}\n      </TreeItem>\n    </TreeView>\n  )\n})\n\nconst InputNodeComponent = React.memo<{\n  fileName: string\n  nodeName: string\n  fileType: FILE_TYPE\n}>(({ fileName, nodeName, fileType }) => {\n  const dispatch = useDispatch()\n\n  const onDataNodeClick = (\n    nodeType: NODE_TYPE,\n    nodeName: string,\n    fileType: FILE_TYPE,\n  ) => {\n    let componentType = ''\n    switch (fileType) {\n      case FILE_TYPE_SET.CSV:\n        componentType = 'CsvFileNode'\n        break\n      case FILE_TYPE_SET.IMAGE:\n        componentType = 'ImageFileNode'\n        fileType = FILE_TYPE_SET.IMAGE\n        break\n      case FILE_TYPE_SET.HDF5:\n        componentType = 'HDF5FileNode'\n        fileType = FILE_TYPE_SET.HDF5\n        break\n    }\n    const newNode = {\n      id: nanoid(),\n      type: componentType,\n      data: { label: nodeName, type: nodeType },\n    }\n    dispatch(addInputNode({ node: newNode, fileType }))\n  }\n\n  return (\n    <LeafItem\n      nodeId={fileName}\n      label={\n        <AddButton\n          name={fileName}\n          onClick={() =>\n            onDataNodeClick(NODE_TYPE_SET.INPUT, nodeName, fileType)\n          }\n        />\n      }\n    />\n  )\n})\n\nconst AlgoNodeComponent = React.memo<{\n  name: string\n  node: AlgorithmNodeType\n  onAlgoNodeClick: (nodeName: string, functionPath: string) => void\n}>(({ name, node, onAlgoNodeClick }) => {\n  if (isAlgoChild(node)) {\n    return (\n      <LeafItem\n        nodeId={name}\n        label={\n          <AddButton\n            name={name}\n            onClick={() => onAlgoNodeClick(name, node.functionPath)}\n          />\n        }\n      />\n    )\n  } else {\n    return (\n      <TreeItem nodeId={name} label={name}>\n        {Object.entries(node.children).map(([name, node], i) => (\n          <AlgoNodeComponent\n            name={name}\n            node={node}\n            key={i.toFixed()}\n            onAlgoNodeClick={(name, functionPath) =>\n              onAlgoNodeClick(name, functionPath)\n            }\n          />\n        ))}\n      </TreeItem>\n    )\n  }\n})\n\nconst AddButton = React.memo<{\n  name: string\n  onClick: () => void\n}>(({ name, onClick }) => {\n  return (\n    <>\n      <IconButton aria-label=\"add\" style={{ padding: 2 }} size=\"large\">\n        <AddIcon onClick={() => onClick()} />\n      </IconButton>\n      <Typography\n        variant=\"inherit\"\n        style={{\n          textOverflow: 'ellipsis',\n          overflow: 'visible',\n          width: '8rem',\n          display: 'inline-block',\n        }}\n      >\n        {name}\n      </Typography>\n    </>\n  )\n})\n\n// 未使用icon分の幅を消す\nconst LeafItem = styled(TreeItem)({\n  [`& .${treeItemClasses.iconContainer}`]: {\n    margin: 0,\n    width: 0,\n  },\n})\n","export const INITIAL_IMAGE_ELEMENT_ID = '0'\nexport const INITIAL_IMAGE_ELEMENT_NAME = 'NoName'\nexport const INITIAL_ALGO_ELEMENT_ID = '1'\nexport const INITIAL_ALGO_ELEMENT_NAME = 'dummy_image2image'\nexport const INITIAL_EDGE_ID = '2'\n\nexport const INITIAL_ALGO_STYLE: React.CSSProperties = {\n  width: 180,\n  height: 100,\n  padding: 0,\n  borderRadius: 0,\n} as const\n\nexport const INITIAL_DATA_STYLE: React.CSSProperties = {\n  border: '1px solid #777',\n  height: 120,\n} as const\n","import { RunPostData } from 'api/run/Run'\nimport axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type ExperimentsDTO = {\n  [uid: string]: ExperimentDTO\n}\n\nexport type ExperimentDTO = {\n  function: {\n    [name: string]: {\n      position: {\n        x: number\n        y: number\n      }\n      success: string\n      unique_id: string\n    }\n  }\n  name: string\n  success: string\n  timestamp: string\n  unique_id: string\n}\n\nexport async function getExperimentsApi(): Promise<ExperimentsDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments`)\n  return response.data\n}\n\n// export async function getExperimentByUid(uid: string): Promise<{\n//   // todo\n// }> {\n//   const response = await axios.get(`${BASE_URL}/experiments/${uid}`)\n//   return response.data\n// }\n\nexport async function deleteExperimentByUidApi(uid: string): Promise<boolean> {\n  const response = await axios.delete(`${BASE_URL}/experiments/${uid}`)\n  return response.data\n}\n\nexport async function importExperimentByUidApi(\n  uid: string,\n): Promise<RunPostData> {\n  const response = await axios.get(`${BASE_URL}/experiments/import/${uid}`)\n  return response.data\n}\n","export const EXPERIMENTS_SLICE_NAME = 'experiments'\n\nexport type Experiments =\n  | {\n      status: 'fulfilled'\n      experimentList: ExperimentListType\n    }\n  | {\n      status: 'uninitialized'\n    }\n  | {\n      status: 'pending'\n    }\n  | {\n      status: 'error'\n      message?: string\n    }\n\nexport type ExperimentListType = {\n  [uid: string]: ExperimentType\n}\n\nexport type ExperimentType = {\n  uid: string\n  functions: {\n    [nodeId: string]: ExperimentFunction\n  }\n  name: string\n  timestamp: string\n}\n\nexport type ExperimentFunction = {\n  name: string\n  nodeId: string\n  postion: {\n    x: number\n    y: number\n  }\n  status: EXPERIMENTS_STATUS\n}\n\nexport type EXPERIMENTS_STATUS = 'success' | 'error' | 'running'\n\nexport interface Experiment {\n  uid: string\n  name: string\n  timestamp: string\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  ExperimentsDTO,\n  getExperimentsApi,\n  deleteExperimentByUidApi,\n  importExperimentByUidApi,\n} from 'api/experiments/Experiments'\nimport { RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_SLICE_NAME } from './ExperimentsType'\n\nexport const getExperiments = createAsyncThunk<ExperimentsDTO, undefined>(\n  `${EXPERIMENTS_SLICE_NAME}/getExperiments`,\n  async (_, thunkAPI) => {\n    try {\n      const response = await getExperimentsApi()\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByUid = createAsyncThunk<boolean, string>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const importExperimentByUid = createAsyncThunk<RunPostData, string>(\n  `${EXPERIMENTS_SLICE_NAME}/importExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await importExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { createAction } from '@reduxjs/toolkit'\n\nimport { INPUT_NODE_SLICE_NAME } from './InputNodeType'\n\nexport const setInputNodeFilePath = createAction<{\n  nodeId: string\n  filePath: string\n}>(`${INPUT_NODE_SLICE_NAME}/setInputNodeFilePath`)\n","import { FlowElement, isNode, Node } from 'react-flow-renderer'\nimport {\n  AlgorithmNodeData,\n  NodeData,\n  NODE_TYPE_SET,\n  InputNodeData,\n} from './FlowElementType'\n\nexport function isNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<NodeData> {\n  return node != null && isNode(node) && node.data != null\n}\n\nexport function isAlgorithmNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<AlgorithmNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.ALGORITHM\n}\n\nexport function isInputNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<InputNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.INPUT\n}\n","import type { Node } from 'react-flow-renderer'\nimport {\n  isInputNodeData,\n  isAlgorithmNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport type {\n  NodePostDataType,\n  InputNodePostData,\n  AlgorithmNodePostData,\n} from './Run'\n\nexport function isInputNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<InputNodePostData> {\n  return isInputNodeData(node)\n}\n\nexport function isAlgorithmNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<AlgorithmNodePostData> {\n  return isAlgorithmNodeData(node)\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  Elements,\n  removeElements,\n  Position,\n  isNode,\n  FlowTransform,\n  XYPosition,\n} from 'react-flow-renderer'\nimport {\n  FLOW_ELEMENT_SLICE_NAME,\n  FlowElement,\n  NODE_TYPE_SET,\n  NodeData,\n  ElementCoord,\n} from './FlowElementType'\nimport {\n  INITIAL_ALGO_STYLE,\n  INITIAL_DATA_STYLE,\n  INITIAL_IMAGE_ELEMENT_ID,\n  INITIAL_IMAGE_ELEMENT_NAME,\n} from 'const/flowchart'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { addAlgorithmNode, addInputNode } from './FlowElementActions'\n\nconst initialElements: Elements<NodeData> = [\n  {\n    id: INITIAL_IMAGE_ELEMENT_ID,\n    type: 'ImageFileNode',\n    data: {\n      type: NODE_TYPE_SET.INPUT,\n      label: INITIAL_IMAGE_ELEMENT_NAME,\n    },\n    style: INITIAL_DATA_STYLE,\n    position: { x: 50, y: 150 },\n  },\n]\n\nconst initialFlowPosition: FlowTransform = {\n  x: 0,\n  y: 0,\n  zoom: 0.7,\n}\n\nconst initialElementCoord: ElementCoord = {\n  x: 100,\n  y: 150,\n}\n\nconst initialState: FlowElement = {\n  flowElements: initialElements,\n  flowPosition: initialFlowPosition,\n  elementCoord: initialElementCoord,\n}\n\nexport const flowElementSlice = createSlice({\n  name: FLOW_ELEMENT_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFlowPosition: (state, action: PayloadAction<FlowTransform>) => {\n      state.flowPosition = action.payload\n    },\n    setFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = action.payload\n    },\n    deleteFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = removeElements(action.payload, state.flowElements)\n    },\n    deleteFlowElementsById: (state, action: PayloadAction<string>) => {\n      const element = state.flowElements.find(\n        (edge) => edge.id === action.payload,\n      )\n      if (element !== undefined) {\n        state.flowElements = removeElements([element], state.flowElements)\n      }\n    },\n    editFlowElementPositionById: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        coord: {\n          x: number\n          y: number\n        }\n      }>,\n    ) => {\n      let { nodeId, coord } = action.payload\n      const elementIdx = state.flowElements.findIndex(\n        (ele) => ele.id === nodeId,\n      )\n      const targetItem = state.flowElements[elementIdx]\n      if (isNode(targetItem)) {\n        targetItem.position = coord\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        let { node } = action.meta.arg\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_ALGO_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        const newPosition: XYPosition = state.elementCoord\n        state.flowElements.push({ ...node, position: newPosition })\n        updateElementCoord(state)\n      })\n      .addCase(addInputNode, (state, action) => {\n        let { node } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_DATA_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        const newPosition: XYPosition = state.elementCoord\n        state.flowElements.push({ ...node, position: newPosition })\n        updateElementCoord(state)\n      })\n      .addCase(setInputNodeFilePath, (state, action) => {\n        let { nodeId, filePath } = action.payload\n        const fileName = filePath.split('/').reverse()[0]\n        const elementIdx = state.flowElements.findIndex(\n          (ele) => ele.id === nodeId,\n        )\n        const targetNode = state.flowElements[elementIdx]\n        if (targetNode.data != null) {\n          targetNode.data.label = fileName\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.flowPosition = initialFlowPosition\n        state.elementCoord = initialElementCoord\n        const newNodeList: Elements<NodeData> = action.payload.nodeList.map(\n          (node) => {\n            if (isInputNodePostData(node)) {\n              return {\n                ...node,\n                data: {\n                  label: node.data?.label ?? '',\n                  type: node.data?.type ?? 'input',\n                },\n              }\n            } else {\n              return {\n                ...node,\n                data: {\n                  label: node.data?.label ?? '',\n                  type: node.data?.type ?? 'algorithm',\n                },\n              }\n            }\n          },\n        )\n        state.flowElements = newNodeList.concat(action.payload.edgeList)\n      }),\n})\n\nfunction updateElementCoord(state: FlowElement) {\n  const { x, y } = state.elementCoord\n  if (x > 800 || y > 200) {\n    state.elementCoord.x = 300\n    state.elementCoord.y = 100\n  } else {\n    state.elementCoord.x += 250\n  }\n}\n\nexport const {\n  setFlowPosition,\n  setFlowElements,\n  deleteFlowElements,\n  deleteFlowElementsById,\n  editFlowElementPositionById,\n} = flowElementSlice.actions\n\nexport default flowElementSlice.reducer\n","import { isEdge } from 'react-flow-renderer'\nimport { RootState } from 'store/store'\nimport { isNodeData } from './FlowElementUtils'\n\nexport const selectFlowElements = (state: RootState) =>\n  state.flowElement.flowElements\n\nexport const selectFlowPosition = (state: RootState) =>\n  state.flowElement.flowPosition\n\nexport const selectElementCoord = (state: RootState) =>\n  state.flowElement.elementCoord\n\nexport const selectNodeById = (nodeId: string) => (state: RootState) =>\n  selectFlowElements(state)\n    .filter(isNodeData)\n    .find((node) => node.id === nodeId)\n\nexport const selectNodeTypeById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.type\n\nexport const selectNodeLabelById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.label\n\nexport const selectEdgeListForRun = (state: RootState) =>\n  selectFlowElements(state).filter(isEdge)\n","import {\n  CsvInputNode,\n  ImageInputNode,\n  HDF5InputNode,\n  InputNodeType,\n  FILE_TYPE_SET,\n} from './InputNodeType'\n\nexport function isImageInputNode(\n  inputNode: InputNodeType,\n): inputNode is ImageInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.IMAGE\n}\n\nexport function isCsvInputNode(\n  inputNode: InputNodeType,\n): inputNode is CsvInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.CSV\n}\n\nexport function isHDF5InputNode(\n  inputNode: InputNodeType,\n): inputNode is HDF5InputNode {\n  return inputNode.fileType === FILE_TYPE_SET.HDF5\n}\n","import { RootState } from 'store/store'\nimport { isHDF5InputNode, isCsvInputNode } from './InputNodeUtils'\n\nexport const selectInputNode = (state: RootState) => state.inputNode\n\nexport const selectInputNodeById = (nodeId: string) => (state: RootState) =>\n  state.inputNode[nodeId]\n\nexport const selectInputNodeDefined = (nodeId: string) => (state: RootState) =>\n  Object.keys(state.inputNode).includes(nodeId)\nexport const selectInputNodeFileType = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).fileType\n\nexport const selectInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) =>\n    selectInputNodeById(nodeId)(state).selectedFilePath\n\nexport const selectFilePathIsUndefined = (state: RootState) =>\n  Object.values(state.inputNode).filter(\n    (inputNode) => inputNode.selectedFilePath === undefined,\n  ).length > 0\n\nexport const selectInputNodeParam = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).param\n\nconst selectCsvInputNodeParam = (nodeId: string) => (state: RootState) => {\n  const inputNode = selectInputNodeById(nodeId)(state)\n  if (isCsvInputNode(inputNode)) {\n    return inputNode.param\n  } else {\n    throw new Error(`The InputNode is not CsvInputNode. (nodeId: ${nodeId})`)\n  }\n}\n\nexport const selectCsvInputNodeParamSetColumn =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setColumn\n\nexport const selectCsvInputNodeParamSetIndex =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setIndex\n\nexport const selectCsvInputNodeParamTranspose =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).transpose\n\nexport const selectInputNodeHDF5Path =\n  (nodeId: string) => (state: RootState) => {\n    const item = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(item)) {\n      return item.hdf5Path\n    } else {\n      return undefined\n    }\n  }\n","import { useSelector } from 'react-redux'\nimport { selectHandleTypeColor } from 'store/slice/HandleTypeColor/HandleTypeColorSelectors'\n\nexport function useHandleColor(type: string) {\n  const color = useSelector(selectHandleTypeColor(type))\n  return color\n}\n","import { RootState } from '../../store'\n\nexport const selectHandleTypeColor = (key: string) => (state: RootState) => {\n  if (state.handleColor.colorMap[key] != null) {\n    return state.handleColor.colorMap[key]\n  } else {\n    return undefined\n  }\n}\n","import { RootState } from '../../store'\nimport { FILE_TREE_TYPE } from './FilesTreeType'\n\nexport const selectFilesTree =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) => {\n    if (state.filesTree[fileType] != null) {\n      return state.filesTree[fileType]\n    } else {\n      return undefined\n    }\n  }\n\nexport const selectFilesTreeNodes =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.tree\n\nexport const selectFilesIsLatest =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLatest ?? false\n\nexport const selectFilesIsLoading =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLoading ?? false\n","export const FILES_TREE_SLICE_NAME = 'filesTree'\n\nexport type TreeNodeTypeDTO = DirNodeDTO | FileNodeDTO\n\nexport interface NodeBaseDTO {\n  path: string\n  name: string\n  isdir: boolean\n}\n\nexport interface DirNodeDTO extends NodeBaseDTO {\n  isdir: true\n  nodes: TreeNodeTypeDTO[]\n}\n\nexport interface FileNodeDTO extends NodeBaseDTO {\n  isdir: false\n}\n\nexport type TreeNodeType = DirNode | FileNode\n\nexport interface NodeBase {\n  path: string\n  name: string\n  isDir: boolean\n}\n\nexport interface DirNode extends NodeBase {\n  isDir: true\n  nodes: TreeNodeType[]\n}\n\nexport interface FileNode extends NodeBase {\n  isDir: false\n}\n\nexport interface FilesTree {\n  [fileType: string]: {\n    isLatest: boolean\n    isLoading: boolean\n    tree: TreeNodeType[]\n  }\n}\n\nexport const FILE_TREE_TYPE_SET = {\n  IMAGE: 'image',\n  CSV: 'csv',\n  HDF5: 'hdf5',\n  ALL: 'all',\n} as const\n\nexport type FILE_TREE_TYPE =\n  typeof FILE_TREE_TYPE_SET[keyof typeof FILE_TREE_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\n\nimport {\n  FILES_TREE_SLICE_NAME,\n  FILE_TREE_TYPE,\n  TreeNodeTypeDTO,\n} from './FilesTreeType'\n\nexport const getFilesTree = createAsyncThunk<TreeNodeTypeDTO[], FILE_TREE_TYPE>(\n  `${FILES_TREE_SLICE_NAME}/getFilesTree`,\n  async (fileType, thunkAPI) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/files`, {\n        params: {\n          file_type: fileType,\n        },\n      })\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import Dialog from '@mui/material/Dialog'\nimport { useDispatch, useSelector } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\nimport { useTheme } from '@mui/material/styles'\nimport React from 'react'\n\nimport {\n  selectFilesIsLatest,\n  selectFilesIsLoading,\n  selectFilesTreeNodes,\n} from 'store/slice/FilesTree/FilesTreeSelectors'\nimport { getFilesTree } from 'store/slice/FilesTree/FilesTreeAction'\nimport {\n  FILE_TREE_TYPE,\n  FILE_TREE_TYPE_SET,\n  TreeNodeType,\n} from 'store/slice/FilesTree/FilesTreeType'\n\ntype FileSelectDialogProps = {\n  selectedFilePath: string\n  onClickOk: (path: string) => void\n  fileType?: FILE_TREE_TYPE\n  title?: string\n  open: boolean\n  onClickCancel: () => void\n  onClose?: () => void\n}\n\nexport const FileSelectDialog = React.memo<FileSelectDialogProps>(\n  ({\n    open,\n    selectedFilePath,\n    onClickCancel,\n    onClickOk,\n    onClose,\n    title,\n    fileType = FILE_TREE_TYPE_SET.ALL,\n  }) => {\n    const [clickedFilePath, setClickedFilePath] =\n      React.useState(selectedFilePath)\n    const theme = useTheme()\n    return (\n      <Dialog open={open} onClose={onClose} fullWidth>\n        <DialogTitle>{title ?? 'Select File'}</DialogTitle>\n        <DialogContent dividers>\n          <div\n            style={{\n              height: 300,\n              overflow: 'auto',\n              marginBottom: theme.spacing(1),\n              border: '1px solid',\n              padding: theme.spacing(1),\n              borderColor: theme.palette.divider,\n            }}\n          >\n            <FileTreeView\n              onClickFile={setClickedFilePath}\n              fileType={fileType}\n            />\n          </div>\n          <Typography variant=\"subtitle1\">Select File</Typography>\n          <Typography variant=\"subtitle2\">\n            {!!clickedFilePath ? clickedFilePath : '---'}\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button\n            onClick={() => onClickOk(clickedFilePath)}\n            color=\"primary\"\n            variant=\"outlined\"\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  },\n)\n\nconst FileTreeView = React.memo<{\n  onClickFile: (path: string) => void\n  fileType: FILE_TREE_TYPE\n}>(({ onClickFile, fileType }) => {\n  const [tree, isLoading] = useFileTree(fileType)\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView>\n        {tree?.map((node) => (\n          <TreeNode node={node} onClickFile={onClickFile} />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: TreeNodeType\n  onClickFile: (path: string) => void\n}>(({ node, onClickFile }) => {\n  if (node.isDir) {\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={node.name}\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode node={childNode} key={i} onClickFile={onClickFile} />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={node.name}\n        onClick={() => onClickFile(node.path)}\n      />\n    )\n  }\n})\n\nfunction useFileTree(\n  fileType: FILE_TREE_TYPE,\n): [TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectFilesTreeNodes(fileType))\n  const isLatest = useSelector(selectFilesIsLatest(fileType))\n  const isLoading = useSelector(selectFilesIsLoading(fileType))\n  React.useEffect(() => {\n    if (!isLatest && !isLoading) {\n      dispatch(getFilesTree(fileType))\n    }\n  }, [isLatest, isLoading, fileType, dispatch])\n  return [tree, isLoading]\n}\n","import React from 'react'\nimport LinearProgress, {\n  LinearProgressProps,\n} from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\n\nexport const LinearProgressWithLabel = React.memo<\n  LinearProgressProps & { value: number }\n>((props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  )\n})\n","export const FILE_UPLOADER_SLICE_NAME = 'fileUploader'\n\nexport type FileUploader = {\n  [id: string]: FileUploaderType\n}\n\nexport type FileUploaderType = {\n  path?: string\n  fileName?: string\n  isUninitialized: boolean\n  pending: boolean\n  fulfilled: boolean\n  uploadingProgress?: number\n  error?: string\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\nimport { FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\n\nexport const setUploadProgress = createAction<{\n  requestId: string\n  progess: number\n  total: number\n}>(`${FILE_UPLOADER_SLICE_NAME}/setUploadProgress`)\n\nexport const uploadFile = createAsyncThunk<\n  {\n    resultPath: string\n  },\n  {\n    requestId: string\n    fileName: string\n    formData: FormData\n    fileType?: FILE_TYPE\n  }\n>(\n  `${FILE_UPLOADER_SLICE_NAME}/uploadFile`,\n  async ({ requestId, fileName, formData }, thunkAPI) => {\n    try {\n      const config = getUploadConfig((percent, total) => {\n        thunkAPI.dispatch(\n          setUploadProgress({\n            requestId,\n            progess: percent,\n            total,\n          }),\n        )\n      })\n      const response = await axios.post(\n        `${BASE_URL}/files/upload/${fileName}`,\n        formData,\n        config,\n      )\n      const data = response.data\n      return {\n        resultPath: data.file_path,\n      }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nfunction getUploadConfig(\n  onUpdateProgressFn: (percent: number, totalSize: number) => void,\n) {\n  return {\n    onUploadProgress: function (progressEvent: any) {\n      const percentCompleted = Math.round(\n        (progressEvent.loaded * 100) / progressEvent.total,\n      )\n      onUpdateProgressFn(percentCompleted, progressEvent.total)\n    },\n  }\n}\n","import { FileUploaderType } from './FileUploaderType'\n\nexport const inistialUploaderState: FileUploaderType = {\n  path: undefined,\n  fileName: undefined,\n  isUninitialized: true,\n  pending: false,\n  fulfilled: false,\n  uploadingProgress: undefined,\n  error: undefined,\n}\n","import { RootState } from 'store/store'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nexport const selectFileUploader = (id: string) => (state: RootState) => {\n  if (Object.keys(state.fileUploader).includes(id)) {\n    return state.fileUploader[id]\n  } else {\n    return inistialUploaderState\n  }\n}\n\nexport const selectUploadFilePath = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).path\n\nexport const selectUploadFileName = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fileName\n\nexport const selectFileUploadIsUninitialized =\n  (id: string) => (state: RootState) =>\n    selectFileUploader(id)(state).isUninitialized\n\nexport const selectFileUploadIsPending = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).pending\n\nexport const selectFileUploadIsFulfilled = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fulfilled\n\nexport const selectFileUploadProgress = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).uploadingProgress\n\nexport const selectFileUploadError = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).error\n","import { nanoid } from '@reduxjs/toolkit'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uploadFile } from './FileUploaderActions'\nimport {\n  selectFileUploadIsPending,\n  selectUploadFilePath,\n  selectFileUploadIsFulfilled,\n  selectFileUploadProgress,\n  selectFileUploadIsUninitialized,\n  selectFileUploadError,\n} from './FileUploaderSelectors'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\nexport function useFileUploader(fileType?: FILE_TYPE) {\n  const dispatch = useDispatch()\n  const id = React.useRef(nanoid())\n  // React.useEffect(() => { // todo 解明\n  //   dispatch(setFileUploaderStateById(id.current))\n  // }, [dispatch, id.current])\n  const onUploadFile = React.useCallback(\n    (formData: FormData, fileName: string) => {\n      dispatch(\n        uploadFile({ requestId: id.current, fileName, formData, fileType }),\n      )\n    },\n    [dispatch, fileType],\n  )\n  const uninitialized = useSelector(selectFileUploadIsUninitialized(id.current))\n  const filePath = useSelector(selectUploadFilePath(id.current))\n  const pending = useSelector(selectFileUploadIsPending(id.current))\n  const fulfilled = useSelector(selectFileUploadIsFulfilled(id.current))\n  const progress = useSelector(selectFileUploadProgress(id.current))\n  const error = useSelector(selectFileUploadError(id.current))\n  return {\n    filePath,\n    uninitialized,\n    pending,\n    fulfilled,\n    progress,\n    error,\n    onUploadFile,\n  }\n}\n","import React from 'react'\nimport { Button, Typography } from '@mui/material'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nimport { FileSelectDialog } from 'components/FileSelectDialog'\nimport {\n  FILE_TREE_TYPE,\n  FILE_TREE_TYPE_SET,\n} from 'store/slice/FilesTree/FilesTreeType'\nimport { LinearProgressWithLabel } from './LinerProgressWithLabel'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\n\ntype FileSelectProps = {\n  filePath: string\n  onUploadFile: (formData: FormData, fileName: string) => void\n  onSelectFile: (path: string) => void\n  fileTreeType?: FILE_TREE_TYPE\n  selectButtonLabel?: string\n  uploadButtonLabel?: string\n}\n\nexport const FileSelect = React.memo<{\n  filePath: string\n  fileType: FILE_TYPE\n  onChangeFilePath: (path: string) => void\n}>(({ filePath, fileType, onChangeFilePath }) => {\n  const {\n    filePath: uploadedFilePath,\n    onUploadFile,\n    pending,\n    uninitialized,\n    progress,\n    error,\n  } = useFileUploader(fileType)\n\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n    if (uploadedFilePath != null) {\n      onChangeFilePath(uploadedFilePath)\n    }\n  }\n\n  const onSelectFile = (selectedPath: string) => {\n    onChangeFilePath(selectedPath)\n  }\n\n  return (\n    <>\n      {!uninitialized && pending && progress != null && (\n        <div style={{ marginLeft: 2, marginRight: 2 }}>\n          <LinearProgressWithLabel value={progress} />\n        </div>\n      )}\n      <FileSelectImple\n        filePath={filePath}\n        onSelectFile={onSelectFile}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={fileType}\n        selectButtonLabel={`Select ${fileType}`}\n      />\n      {error != null && (\n        <Typography variant=\"caption\" color=\"error\">\n          {error}\n        </Typography>\n      )}\n    </>\n  )\n})\n\nexport const FileSelectImple = React.memo<FileSelectProps>(\n  ({\n    filePath,\n    onSelectFile,\n    onUploadFile,\n    fileTreeType,\n    selectButtonLabel,\n    uploadButtonLabel,\n  }) => {\n    const onFileInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.preventDefault()\n      if (event.target.files != null && event.target.files[0] != null) {\n        const file = event.target.files[0]\n        const formData = new FormData()\n        formData.append('file', file)\n        const fileName = file.name\n        onUploadFile(formData, fileName)\n      }\n    }\n    const inputRef = React.useRef<HTMLInputElement>(null)\n    const onClick = () => {\n      if (inputRef.current != null) {\n        inputRef.current.click()\n      }\n    }\n    const [open, setOpen] = React.useState(false)\n    const accept = getFileInputAccept(fileTreeType)\n    const fileName = filePath.split('/').reverse()[0]\n    return (\n      <div\n        style={{\n          padding: 5,\n        }}\n      >\n        <ButtonGroup size=\"small\" style={{ marginRight: 4 }}>\n          <Button variant=\"outlined\" onClick={() => setOpen(true)}>\n            {!!selectButtonLabel ? selectButtonLabel : 'Select File'}\n          </Button>\n          <Button onClick={onClick} variant=\"outlined\">\n            {!!uploadButtonLabel ? uploadButtonLabel : 'or Upload'}\n          </Button>\n        </ButtonGroup>\n        <div>\n          <input\n            ref={inputRef}\n            type=\"file\"\n            onChange={onFileInputChange}\n            accept={accept}\n            style={{\n              visibility: 'hidden',\n              width: 0,\n              height: 0,\n            }}\n          />\n          <Typography className=\"selectFilePath\" variant=\"caption\">\n            {!!fileName ? fileName : 'No file is selected.'}\n          </Typography>\n        </div>\n        <FileSelectDialog\n          selectedFilePath={fileName ?? ''}\n          open={open}\n          onClickOk={(path) => {\n            onSelectFile(path)\n            setOpen(false)\n          }}\n          onClickCancel={() => {\n            setOpen(false)\n          }}\n          onClose={() => setOpen(false)}\n          fileType={fileTreeType}\n        />\n      </div>\n    )\n  },\n)\n\nfunction getFileInputAccept(fileType: FILE_TREE_TYPE | undefined) {\n  switch (fileType) {\n    case FILE_TREE_TYPE_SET.IMAGE:\n      return '.tif'\n    case FILE_TREE_TYPE_SET.CSV:\n      return '.csv'\n    case FILE_TREE_TYPE_SET.HDF5:\n      return '.hdf5,.nwb'\n    default:\n      return undefined\n  }\n}\n","import { Connection } from 'react-flow-renderer'\n\nexport function toHandleId(nodeId: string, name: string, type: string) {\n  return `${nodeId}--${name}--${type}`\n}\n\nexport function getHandleType(handleId: string) {\n  return handleId.split('--')[2]\n}\n\nexport function isValidConnection(connection: Connection) {\n  if (connection.sourceHandle != null && connection.targetHandle != null) {\n    return (\n      getHandleType(connection.sourceHandle) ===\n      getHandleType(connection.targetHandle)\n    )\n  } else {\n    return true\n  }\n}\n","import React, { CSSProperties } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport { IconButton } from '@mui/material'\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined'\n\nimport {\n  selectInputNodeDefined,\n  selectInputNodeSelectedFilePath,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { FileSelect } from './FileSelect'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\n\n// Connection部分のレイアウト\nconst sourceHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  top: 15,\n  border: '1px solid',\n  // borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const ImageFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <ImageFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst ImageFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected: elementSelected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(selectInputNodeSelectedFilePath(nodeId))\n    const onChangeFilePath = (path: string) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n\n    const theme = useTheme()\n    const returnType = 'ImageData'\n    const imageColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '250px',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <IconButton\n          aria-label=\"delete\"\n          style={{ color: 'black', position: 'absolute', top: -20, right: -5 }}\n          onClick={onClickDeleteIcon}\n          size=\"large\"\n        >\n          <CloseOutlinedIcon />\n        </IconButton>\n        <FileSelect\n          onChangeFilePath={onChangeFilePath}\n          fileType={FILE_TYPE_SET.IMAGE}\n          filePath={filePath ?? ''}\n        />\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'image', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: imageColor,\n          }}\n          isValidConnection={isValidConnection}\n        />\n      </div>\n    )\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\n\ntype RightDrawer = {\n  open: boolean\n  mode: RIGHT_DRAWER_MODE_TYPE\n  currendNodeId: string | null\n}\n\nexport const RIGHT_DRAWER_MODE = {\n  NONE: 'none',\n  NWB: 'nwb',\n  PARAM_FORM: 'paramForm',\n  SNAKEMAKE: 'snakemake',\n} as const\n\nexport type RIGHT_DRAWER_MODE_TYPE =\n  typeof RIGHT_DRAWER_MODE[keyof typeof RIGHT_DRAWER_MODE]\n\nconst initialState: RightDrawer = {\n  open: false,\n  mode: RIGHT_DRAWER_MODE.NONE,\n  currendNodeId: null,\n}\nexport const rightDrawerSlice = createSlice({\n  name: 'rightDrawer',\n  initialState,\n  reducers: {\n    openRightDrawer: (state, action: PayloadAction<RIGHT_DRAWER_MODE_TYPE>) => {\n      state.open = true\n      state.mode = action.payload\n    },\n    closeRightDrawer: (state) => {\n      state.open = false\n      state.mode = RIGHT_DRAWER_MODE.NONE\n    },\n    toggleParamForm: (state, action: PayloadAction<string>) => {\n      if (\n        state.open &&\n        state.mode === RIGHT_DRAWER_MODE.PARAM_FORM &&\n        state.currendNodeId === action.payload\n      ) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n        state.currendNodeId = null\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.PARAM_FORM\n        state.currendNodeId = action.payload\n      }\n    },\n    toggleNwb: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.NWB) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.NWB\n      }\n      state.currendNodeId = null\n    },\n    toggleSnakemake: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.SNAKEMAKE) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.SNAKEMAKE\n      }\n      state.currendNodeId = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteFlowElements, (state, action) => {\n        if (\n          action.payload.findIndex((elm) => elm.id === state.currendNodeId) > 0\n        ) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (action.payload === state.currendNodeId) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, () => {\n        return initialState\n      })\n  },\n})\n\nexport const {\n  toggleParamForm,\n  toggleNwb,\n  toggleSnakemake,\n  openRightDrawer,\n  closeRightDrawer,\n} = rightDrawerSlice.actions\n\nexport default rightDrawerSlice.reducer\n","import { getChildParam } from 'store/utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nexport const selectNwb = (state: RootState) => state.nwb\n\nexport const selectNwbParams = (state: RootState) => selectNwb(state).params\n\nexport const selectNwbParamsKeyList = (state: RootState) =>\n  Object.keys(selectNwb(state).params)\n\nexport const selectNwbParam = (paramKey: string) => (state: RootState) =>\n  selectNwb(state).params[paramKey]\n\nexport const selectNwbParamsValue = (path: string) => (state: RootState) => {\n  const params = selectNwb(state).params\n  if (params != null) {\n    const target = getChildParam(path, params)\n    return target?.value\n  } else {\n    throw new Error('Param is null')\n  }\n}\n","import { getChildParam } from 'store/utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nconst selectSnakemake = (state: RootState) => state.snakemake\nexport const selectSnakemakeParams = (state: RootState) =>\n  selectSnakemake(state).params\n\nexport const selectSnakemakeParamsKeyList = (state: RootState) =>\n  Object.keys(selectSnakemakeParams(state))\n\nexport const selectSnakemakeParam = (paramKey: string) => (state: RootState) =>\n  selectSnakemakeParams(state)[paramKey]\n\nexport const selectSnakemakeParamsValue =\n  (path: string) => (state: RootState) => {\n    const params = selectSnakemakeParams(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('Param is null')\n    }\n  }\n","import { RunPostData } from 'api/run/Run'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\n\nexport const PIPELINE_SLICE_NAME = 'pipeline'\n\nexport type Pipeline = {\n  run: PipelineType\n  currentPipeline?: {\n    uid: string\n  }\n  runBtn: RUN_BTN_TYPE\n}\n\nexport const RUN_STATUS = {\n  /**\n   * 未実行\n   */\n  START_UNINITIALIZED: 'StartUninitialized',\n  /**\n   * 開始リクエスト中\n   */\n  START_PENDING: 'StartPending',\n  /**\n   * 開始できなかった\n   */\n  START_ERROR: 'StartError',\n  /**\n   * 正常に開始した\n   */\n  START_SUCCESS: 'StartSuccess',\n  /**\n   * 全て終了\n   */\n  FINISHED: 'Finished',\n  /**\n   * 途中終了\n   */\n  ABORTED: 'Aborted',\n  /**\n   * キャンセルされた\n   */\n  CANCELED: 'Canceled',\n} as const\n\nexport type RUN_STATUS_TYPE = typeof RUN_STATUS[keyof typeof RUN_STATUS]\n\nexport type PipelineType =\n  | StartedPipeline\n  | {\n      status:\n        | typeof RUN_STATUS.START_ERROR\n        | typeof RUN_STATUS.START_PENDING\n        | typeof RUN_STATUS.START_UNINITIALIZED\n    }\n\nexport type StartedPipeline = {\n  uid: string\n  status:\n    | typeof RUN_STATUS.START_SUCCESS\n    | typeof RUN_STATUS.FINISHED\n    | typeof RUN_STATUS.ABORTED\n    | typeof RUN_STATUS.CANCELED\n  runPostData: RunPostData\n  runResult: RunResult\n}\n\nexport type RunResult = {\n  [nodeId: string]: NodeResult\n}\n\nexport type NodeResult = NodeResultPending | NodeResultSuccess | NodeResultError\n\nexport const NODE_RESULT_STATUS = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PENDING: 'pending',\n} as const\n\nexport type NODE_RESULT_STATUS_TYPE =\n  typeof NODE_RESULT_STATUS[keyof typeof NODE_RESULT_STATUS]\n\nexport interface NodeResultBaseType<T extends NODE_RESULT_STATUS_TYPE> {\n  status: T\n  message?: string\n  name: string\n}\n\nexport interface NodeResultPending\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.PENDING> {}\n\nexport interface NodeResultSuccess\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.SUCCESS> {\n  outputPaths: OutputPaths\n}\n\nexport type OutputPaths = {\n  [outputKey: string]: {\n    path: string\n    type: DATA_TYPE\n  }\n}\n\nexport interface NodeResultError\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.ERROR> {\n  message: string\n}\n\nexport const RUN_BTN_OPTIONS = {\n  RUN_NEW: 1,\n  RUN_ALREADY: 2,\n} as const\n\nexport type RUN_BTN_TYPE = typeof RUN_BTN_OPTIONS[keyof typeof RUN_BTN_OPTIONS]\n\nexport const RUN_BTN_LABELS = {\n  [RUN_BTN_OPTIONS.RUN_NEW]: 'RUN ALL',\n  [RUN_BTN_OPTIONS.RUN_ALREADY]: 'RUN',\n} as const\n","export const DISPLAY_DATA_SLICE_NAME = 'displayData'\n\nexport type DisplayData = {\n  timeSeries: {\n    [filePath: string]: TimeSeriesDisplayData\n  }\n  heatMap: {\n    [filePath: string]: HeatMapDisplayData\n  }\n  image: {\n    [filePath: string]: ImageDisplayData\n  }\n  csv: {\n    [filePath: string]: CsvDisplayData\n  }\n  roi: {\n    [filePath: string]: RoiDisplayData\n  }\n  scatter: {\n    [filePath: string]: ScatterDisplayData\n  }\n  bar: {\n    [filePath: string]: BarDisplayData\n  }\n  hdf5: {\n    [filePath: string]: HDF5DisplayData\n  }\n  html: {\n    [filePath: string]: HTMLDisplayData\n  }\n}\n\nexport const DATA_TYPE_SET = {\n  TIME_SERIES: 'timeSeries',\n  HEAT_MAP: 'heatMap',\n  IMAGE: 'image',\n  CSV: 'csv',\n  ROI: 'roi',\n  SCATTER: 'scatter',\n  BAR: 'bar',\n  HDF5: 'hdf5',\n  HTML: 'html',\n} as const\n\nexport type DATA_TYPE = typeof DATA_TYPE_SET[keyof typeof DATA_TYPE_SET]\n\ninterface BaseDisplay<T extends DATA_TYPE, Data> {\n  type: T\n  data: Data\n  pending: boolean\n  error: string | null\n  fulfilled: boolean\n}\n\nexport interface TimeSeriesDisplayData\n  extends BaseDisplay<'timeSeries', TimeSeriesData> {\n  xrange: number[]\n  std: TimeSeriesData\n}\nexport type TimeSeriesData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport interface HeatMapDisplayData\n  extends BaseDisplay<'heatMap', HeatMapData> {}\nexport type HeatMapData = number[][]\n\nexport interface ImageDisplayData extends BaseDisplay<'image', ImageData> {}\nexport type ImageData = number[][][]\n\nexport interface CsvDisplayData extends BaseDisplay<'csv', CsvData> {\n  // columns: string[]\n}\nexport type CsvData = number[][]\n\nexport interface RoiDisplayData extends BaseDisplay<'roi', RoiData> {}\nexport type RoiData = number[][][]\n\nexport interface ScatterDisplayData\n  extends BaseDisplay<'scatter', ScatterData> {}\nexport type ScatterData = number[][][]\n\nexport interface BarDisplayData extends BaseDisplay<'bar', BarData> {}\nexport type BarData = number[][][]\n\nexport interface HDF5DisplayData extends BaseDisplay<'hdf5', HDF5Data> {}\nexport type HDF5Data = number[][][]\n\nexport interface HTMLDisplayData extends BaseDisplay<'html', HTMLData> {}\nexport type HTMLData = string\n","import { DATA_TYPE, DATA_TYPE_SET } from './DisplayDataType'\n\n/**\n * サーバーサイドの値をマッピング\n */\nexport function toDataType(value: string): DATA_TYPE {\n  switch (value) {\n    case 'images':\n      return DATA_TYPE_SET.IMAGE\n    case 'timeseries':\n      return DATA_TYPE_SET.TIME_SERIES\n    case 'heatmap':\n      return DATA_TYPE_SET.HEAT_MAP\n    case 'roi':\n      return DATA_TYPE_SET.ROI\n    case 'scatter':\n      return DATA_TYPE_SET.SCATTER\n    case 'bar':\n      return DATA_TYPE_SET.BAR\n    case 'html':\n      return DATA_TYPE_SET.HTML\n    default:\n      throw new Error(`failed to map dataType: ${value}`)\n  }\n}\n","import { RunPostData, RunResultDTO, OutputPathsDTO } from 'api/run/Run'\n\nimport { toDataType } from '../DisplayData/DisplayDataUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  RunResult,\n  OutputPaths,\n  NODE_RESULT_STATUS,\n  PipelineType,\n  RUN_STATUS,\n  StartedPipeline,\n  NodeResultPending,\n  NodeResultError,\n  NodeResultSuccess,\n  NodeResult,\n} from './PipelineType'\n\nexport function isNodeResultPending(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultPending {\n  return nodeResult.status === NODE_RESULT_STATUS.PENDING\n}\n\nexport function isNodeResultSuccess(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultSuccess {\n  return nodeResult.status === NODE_RESULT_STATUS.SUCCESS\n}\n\nexport function isNodeResultError(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultError {\n  return nodeResult.status === NODE_RESULT_STATUS.ERROR\n}\n\nexport function isStartedPipeline(\n  pipeline: PipelineType,\n): pipeline is StartedPipeline {\n  return (\n    pipeline.status === RUN_STATUS.START_SUCCESS ||\n    pipeline.status === RUN_STATUS.FINISHED ||\n    pipeline.status === RUN_STATUS.ABORTED\n  )\n}\n\nexport function getInitialRunResult(runPostData: RunPostData) {\n  const initialResult: RunResult = {}\n  runPostData.nodeList\n    .filter(({ data }) => data?.type === NODE_TYPE_SET.ALGORITHM)\n    .forEach(({ id, data }) => {\n      initialResult[id] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: data?.label ?? '',\n      }\n    })\n  return initialResult\n}\n\nexport function convertToRunResult(dto: RunResultDTO) {\n  const result: RunResult = {}\n  Object.entries(dto).forEach(([nodeId, nodeResultDto]) => {\n    const outputPath = nodeResultDto.outputPaths\n    if (nodeResultDto.status === 'success' && outputPath != null) {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.SUCCESS,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n        outputPaths: convertToOutputPath(outputPath),\n      }\n    } else {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.ERROR,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n      }\n    }\n  })\n  return result\n}\n\nfunction convertToOutputPath(dto: OutputPathsDTO) {\n  const result: OutputPaths = {}\n  Object.entries(dto).forEach(([functionPath, value]) => {\n    result[functionPath] = {\n      path: value.path,\n      type: toDataType(value.type),\n    }\n  })\n  return result\n}\n","import { Node } from 'react-flow-renderer'\n\nimport {\n  AlgorithmNodePostData,\n  InputNodePostData,\n  NodePostDataType,\n  RunPostData,\n} from 'api/run/Run'\n\nimport { RootState } from 'store/store'\nimport {\n  selectEdgeListForRun,\n  selectFlowElements,\n} from '../FlowElement/FlowElementSelectors'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  isAlgorithmNodeData,\n  isNodeData,\n} from '../FlowElement/FlowElementUtils'\nimport { selectNwbParams } from '../NWB/NWBSelectors'\nimport { selectSnakemakeParams } from '../Snakemake/SnakemakeSelectors'\nimport {\n  NodeResult,\n  NodeResultPending,\n  NodeResultSuccess,\n  NODE_RESULT_STATUS,\n  RUN_STATUS,\n} from './PipelineType'\nimport {\n  isNodeResultPending,\n  isStartedPipeline,\n  isNodeResultSuccess,\n} from './PipelineUtils'\n\nimport {\n  selectAlgorithmFunctionPath,\n  selectAlgorithmIsUpdated,\n  selectAlgorithmName,\n  selectAlgorithmParams,\n} from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectInputNodeFileType,\n  selectInputNodeHDF5Path,\n  selectInputNodeParam,\n  selectInputNodeSelectedFilePath,\n} from '../InputNode/InputNodeSelectors'\n\nexport const selectPipelineLatestUid = (state: RootState) => {\n  return state.pipeline.currentPipeline?.uid\n}\n\nexport const selectRunPostData = (state: RootState) => {\n  const nwbParam = selectNwbParams(state)\n  const snakemakeParam = selectSnakemakeParams(state)\n  const edgeListForRun = selectEdgeListForRun(state)\n  const nodePostDataList = selectNodePostDataListForRun(state)\n  const forceRunList = selectForceRunList(state)\n  const runPostData: Omit<RunPostData, 'name'> = {\n    nwbParam,\n    snakemakeParam,\n    edgeList: edgeListForRun,\n    nodeList: nodePostDataList,\n    forceRunList,\n  }\n  return runPostData\n}\n\nexport const selectNodePostDataListForRun = (\n  state: RootState,\n): Node<NodePostDataType>[] => {\n  const elements = selectFlowElements(state)\n  const nodeList = elements.filter(isNodeData).map((node) => {\n    if (isAlgorithmNodeData(node)) {\n      const param = selectAlgorithmParams(node.id)(state) ?? {}\n      const functionPath = selectAlgorithmFunctionPath(node.id)(state)\n      const algorithmNodePostData: Node<AlgorithmNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.ALGORITHM,\n          path: functionPath,\n          param,\n        },\n      }\n      return algorithmNodePostData\n    } else {\n      const filePath = selectInputNodeSelectedFilePath(node.id)(state)\n      const fileType = selectInputNodeFileType(node.id)(state)\n      const param = selectInputNodeParam(node.id)(state)\n      const hdf5Path = selectInputNodeHDF5Path(node.id)(state)\n      const inputNodePosyData: Node<InputNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.INPUT,\n          path: filePath ?? '',\n          param,\n          hdf5Path: hdf5Path,\n          fileType,\n        },\n      }\n      return inputNodePosyData\n    }\n  })\n  return nodeList\n}\n\n/**\n * 前回の結果で、エラーまたはParamに変更があるnodeのリストを返す\n */\nconst selectForceRunList = (state: RootState) => {\n  const elements = selectFlowElements(state)\n  // todo\n  return elements\n    .filter(isAlgorithmNodeData)\n    .filter((node) => {\n      const isUpdated = selectAlgorithmIsUpdated(node.id)(state)\n      const status = selectPipelineNodeResultStatus(node.id)(state)\n      return isUpdated || status === NODE_RESULT_STATUS.ERROR\n    })\n    .map((node) => ({\n      nodeId: node.id,\n      name: selectAlgorithmName(node.id)(state),\n    }))\n}\n\nexport const selectStartedPipeline = (state: RootState) => {\n  return state.pipeline.run\n}\n\nexport const selectPipelineRunBtn = (state: RootState) => {\n  return state.pipeline.runBtn\n}\n\nexport const selectRunResultPendingList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.values(pipeline.runResult).filter(isNodeResultPending)\n  } else {\n    return []\n  }\n}\n\nexport const selectRunResultPendingNodeIdList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => ({ nodeId, nodeResult }))\n      .filter(isNodeResultPendingAndNodeId)\n      .map(({ nodeId }) => nodeId)\n  } else {\n    return []\n  }\n}\n\nfunction isNodeResultPendingAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultPending\n} {\n  return isNodeResultPending(arg.nodeResult)\n}\n\nexport const selectPipelineStatus = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status\n}\n\nexport const selectPipelineIsCanceled = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.CANCELED\n}\n\nexport const selectPipelineIsStartedSuccess = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.START_SUCCESS\n}\n\n// export const selectPipelineRunResult = (state: RootState) => {\n//   const pipeline = selectStartedPipeline(state)\n//   if (isStartedPipeline(pipeline)) {\n//     return pipeline.runResult\n//   } else {\n//     throw new Error(\"todo\")\n//   }\n// }\n\nexport const selectPipelineNodeResultSuccessList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => {\n        return {\n          nodeId,\n          nodeResult,\n        }\n      })\n      .filter(isNodeResultSuccessAndNodeId)\n  } else {\n    return []\n  }\n}\n\n// selectPipelineNodeResultSuccessListの返り値の型を正しく認識させるためだけに作った\nfunction isNodeResultSuccessAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultSuccess\n} {\n  return isNodeResultSuccess(arg.nodeResult)\n}\n\nexport const selectPipelineNodeResultStatus =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].status\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultMessage =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].message\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultOutputKeyList =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return Object.keys(nodeResult.outputPaths)\n      }\n    }\n    return []\n  }\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport {\n  alpha,\n  Typography,\n  useTheme,\n  Tooltip,\n  FormHelperText,\n  IconButton,\n  Button,\n  LinearProgress,\n} from '@mui/material'\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded'\nimport ErrorIcon from '@mui/icons-material/Error'\nimport Popover from '@mui/material/Popover'\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined'\n\nimport { AlgorithmInfo } from 'store/slice/AlgorithmList/AlgorithmListType'\nimport {\n  selectAlgoArgs,\n  selectAlgoReturns,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { selectAlgorithmNodeDefined } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { toggleParamForm } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultMessage,\n  selectPipelineNodeResultStatus,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\nimport { NODE_RESULT_STATUS } from 'store/slice/Pipeline/PipelineType'\n\nconst leftHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\nconst rightHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\n\nexport const AlgorithmNode = React.memo<NodeProps<NodeData>>((element) => {\n  const defined = useSelector(selectAlgorithmNodeDefined(element.id))\n  if (defined) {\n    return <AlgorithmNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst AlgorithmNodeImple = React.memo<NodeProps<NodeData>>(\n  ({ id: nodeId, selected: elementSelected, isConnectable, data }) => {\n    const theme = useTheme()\n    const dispatch = useDispatch()\n\n    const onClickParamButton = () => {\n      dispatch(toggleParamForm(nodeId))\n    }\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          width: '100%',\n          height: '110%',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.15)\n            : undefined,\n          border: '1px solid',\n        }}\n      >\n        <IconButton\n          aria-label=\"delete\"\n          style={{ color: 'black', position: 'absolute', top: -20, right: -5 }}\n          onClick={onClickDeleteIcon}\n          size=\"large\"\n        >\n          <CloseOutlinedIcon />\n        </IconButton>\n        <AlgoName nodeId={nodeId} data={data} />\n        <div>\n          <Button size=\"small\" variant=\"outlined\" onClick={onClickParamButton}>\n            Param\n            {/* <DehazeIcon fontSize='small'/> */}\n          </Button>\n        </div>\n        <AlgoArgs nodeId={nodeId} />\n        <AlgoReturns nodeId={nodeId} isConnectable={isConnectable} />\n        <Message nodeId={nodeId} />\n      </div>\n    )\n  },\n)\n\nconst AlgoName = React.memo<{\n  nodeId: string\n  data: NodeData\n}>(({ nodeId, data }) => {\n  const theme = useTheme()\n  const latestUid = useSelector(selectPipelineLatestUid)\n\n  const status = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultStatus(nodeId)(state)\n      : 'uninitialized',\n  )\n  return (\n    <div\n      style={{\n        padding: 8,\n        paddingLeft: 8,\n      }}\n      className=\"algoName\"\n    >\n      {status === NODE_RESULT_STATUS.PENDING && <LinearProgress />}\n      <Typography\n        style={{\n          textAlign: 'left',\n          color:\n            status === NODE_RESULT_STATUS.ERROR\n              ? theme.palette.error.main\n              : undefined,\n        }}\n      >\n        {data.label}\n      </Typography>\n    </div>\n  )\n})\n\nconst AlgoArgs = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const algoArgs = useSelector(selectAlgoArgs(nodeId), algoInfoListEqualtyFn)\n\n  return (\n    <>\n      {algoArgs != null\n        ? algoArgs\n            .filter((info) => info.type !== 'params')\n            .map((algoInfo, i) => {\n              return <ArgHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n            })\n        : null}\n    </>\n  )\n})\n\nconst AlgoReturns = React.memo<{\n  nodeId: string\n  isConnectable: boolean\n}>(({ nodeId, isConnectable }) => {\n  const algoReturns = useSelector(\n    selectAlgoReturns(nodeId),\n    algoInfoListEqualtyFn,\n  )\n  return (\n    <>\n      {algoReturns != null ? (\n        algoReturns?.map((algoInfo, i) => {\n          return <ReturnHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n        })\n      ) : (\n        // algoReturns.lengthが0の場合の応急処置\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={`${nodeId}`}\n          style={{\n            ...rightHandleStyle,\n            top: 15,\n          }}\n          isConnectable={isConnectable}\n        />\n      )}\n    </>\n  )\n})\n\ntype HandleProps = {\n  algoInfo: AlgorithmInfo\n  nodeId: string\n  i: number\n}\n\nfunction hexToRgb(hex: string | undefined, isNone: boolean | undefined) {\n  if (hex !== undefined) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n    if (result !== null) {\n      if (isNone) {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 0.55)`\n      } else {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 1)`\n      }\n    } else {\n      return undefined\n    }\n  } else {\n    return undefined\n  }\n}\n\nconst ArgHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type, isNone }, nodeId, i }) => {\n    const hex_color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    const rgb_color = hexToRgb(hex_color, isNone)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"target\"\n        position={Position.Left}\n        id={id}\n        style={{\n          ...leftHandleStyle,\n          background: rgb_color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"left-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst ReturnHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type }, nodeId, i }) => {\n    const color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"source\"\n        position={Position.Right}\n        id={id}\n        style={{\n          ...rightHandleStyle,\n          background: color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"right-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst Message = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const status = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultStatus(nodeId)(state)\n      : 'uninitialized',\n  )\n\n  const errorMsg = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultMessage(nodeId)(state) ?? null\n      : null,\n  )\n\n  const anchorElRef = React.useRef<HTMLButtonElement | null>(null)\n  const [open, setOpen] = React.useState(false)\n  const theme = useTheme()\n\n  if (status === NODE_RESULT_STATUS.ERROR) {\n    return (\n      <>\n        <IconButton\n          ref={anchorElRef}\n          onClick={() => setOpen((prevOpen) => !prevOpen)}\n          size=\"small\"\n          style={{ color: theme.palette.error.main, float: 'right' }}\n        >\n          <ErrorIcon />\n        </IconButton>\n        <Popover\n          open={open}\n          anchorEl={anchorElRef.current}\n          onClose={() => setOpen(false)}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n        >\n          <div style={{ margin: 8 }}>\n            <FormHelperText error={true}>{errorMsg}</FormHelperText>\n          </div>\n        </Popover>\n      </>\n    )\n  } else if (status === NODE_RESULT_STATUS.SUCCESS) {\n    return (\n      <IconButton\n        ref={anchorElRef}\n        onClick={() => setOpen((prevOpen) => !prevOpen)}\n        size=\"small\"\n        style={{ color: theme.palette.success.main, float: 'right' }}\n      >\n        <CheckCircleRoundedIcon />\n      </IconButton>\n    )\n  } else {\n    return null\n  }\n})\n\nfunction algoInfoListEqualtyFn(\n  a: AlgorithmInfo[] | undefined,\n  b: AlgorithmInfo[] | undefined,\n) {\n  if (a != null && b != null) {\n    return (\n      a === b ||\n      (a.length === b.length &&\n        a.every((v, i) => v.type === b[i].type && v.name === b[i].name))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { INITIAL_IMAGE_ELEMENT_ID } from 'const/flowchart'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { addInputNode } from '../FlowElement/FlowElementActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { setInputNodeFilePath } from './InputNodeActions'\nimport {\n  CsvInputParamType,\n  FILE_TYPE_SET,\n  InputNode,\n  INPUT_NODE_SLICE_NAME,\n} from './InputNodeType'\nimport { isCsvInputNode, isHDF5InputNode } from './InputNodeUtils'\n\nconst initialState: InputNode = {\n  [INITIAL_IMAGE_ELEMENT_ID]: {\n    fileType: FILE_TYPE_SET.IMAGE,\n    param: {},\n  },\n}\n\nexport const inputNodeSlice = createSlice({\n  name: INPUT_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    deleteInputNode(state, action: PayloadAction<string>) {\n      delete state[action.payload]\n    },\n    setCsvInputNodeParam(\n      state,\n      action: PayloadAction<{ nodeId: string; param: CsvInputParamType }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId]\n      if (isCsvInputNode(inputNode)) {\n        inputNode.param = param\n      }\n    },\n    setInputNodeHDF5Path(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n      }>,\n    ) {\n      const { nodeId, path } = action.payload\n      const item = state[nodeId]\n      if (isHDF5InputNode(item)) {\n        item.hdf5Path = path\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(setInputNodeFilePath, (state, action) => {\n        const { nodeId, filePath } = action.payload\n        state[nodeId].selectedFilePath = filePath\n      })\n      .addCase(addInputNode, (state, action) => {\n        const { node, fileType } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          switch (fileType) {\n            case FILE_TYPE_SET.CSV:\n              state[node.id] = {\n                fileType,\n                param: {\n                  setColumn: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.IMAGE:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.HDF5:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.INPUT) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        action.payload.nodeList.filter(isInputNodePostData).forEach((node) => {\n          if (node.data != null) {\n            if (node.data.fileType === FILE_TYPE_SET.CSV) {\n              newState[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                selectedFilePath: node.data.path,\n                param: node.data.param as CsvInputParamType,\n              }\n            } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n              newState[node.id] = {\n                fileType: FILE_TYPE_SET.HDF5,\n                hdf5Path: node.data.hdf5Path,\n                selectedFilePath: node.data.path,\n                param: {},\n              }\n            } else {\n              newState[node.id] = {\n                fileType: node.data.fileType,\n                selectedFilePath: node.data.path,\n                param: {},\n              }\n            }\n          }\n        })\n        return newState\n      }),\n})\n\nexport const { setCsvInputNodeParam, setInputNodeHDF5Path } =\n  inputNodeSlice.actions\n\nexport default inputNodeSlice.reducer\n","import { RootState } from 'store/store'\n\nconst selectDisplayData = (state: RootState) => state.displayData\n\nexport const selectTimeSeriesData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].data\n\nexport const selectTimeSeriesXrange =\n  (filePath: string) => (state: RootState) =>\n    selectDisplayData(state).timeSeries[filePath].xrange\n\nexport const selectTimeSeriesStd = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].std\n\nexport const selectTimeSeriesDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).timeSeries).includes(filePath)\n\nexport const selectTimeSeriesDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].pending\n\nexport const selectTimeSeriesDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].fulfilled\n\nexport const selectTimeSeriesDataError =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).timeSeries[filePath].error\n      : null\n\nexport const selectHeatMapData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].data\n\nexport const selectHeatMapDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).heatMap).includes(filePath)\n\nexport const selectHeatMapDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].pending\n\nexport const selectHeatMapDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].fulfilled\n\nexport const selectHeatMapDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).heatMap[filePath].error\n      : null\n\nexport const selectImageData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).image[filePath]\n\nexport const selectImageDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).image).includes(filePath)\n\nexport const selectImageDataError = (filePath: string) => (state: RootState) =>\n  selectImageDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).image[filePath].error\n    : null\n\nexport const selectImageDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].pending\n\nexport const selectImageDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].fulfilled\n\nexport const selectImageDataStartIndex =\n  (filePath: string) => (state: RootState) => {\n    if (!selectImageDataIsPending(filePath)(state)) {\n      return 0\n    } else {\n      return undefined\n    }\n  }\n\nexport const selectImageDataEndIndex =\n  (filePath: string) => (state: RootState) => {\n    if (!selectImageDataIsPending(filePath)(state)) {\n      return selectImageData(filePath)(state).data.length - 1\n    } else {\n      return 0\n    }\n  }\n\nexport const selectActiveImageData =\n  (filePath: string, activeIndex: number) => (state: RootState) => {\n    return selectImageData(filePath)(state).data[activeIndex]\n  }\n\nexport const selectCsvData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).csv[filePath].data\n\nexport const selectCsvDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).csv).includes(filePath)\n\nexport const selectCsvDataError = (filePath: string) => (state: RootState) =>\n  selectCsvDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).csv[filePath].error\n    : null\n\nexport const selectCsvDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].pending\n\nexport const selectCsvDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].fulfilled\n\nexport const selectRoiData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).roi[filePath]?.data[0] ?? []\n\nexport const selectRoiDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).roi).includes(filePath)\n\nexport const selectRoiDataError = (filePath: string) => (state: RootState) =>\n  selectRoiDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).roi[filePath].error\n    : null\n\nexport const selectRoiDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].pending\n\nexport const selectRoiDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].fulfilled\n\nexport const selectScatterData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).scatter[filePath]?.data ?? []\n\nexport const selectScatterDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).scatter).includes(filePath)\n\nexport const selectScatterDataError =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).scatter[filePath].error\n      : null\n\nexport const selectScatterDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].pending\n\nexport const selectScatterDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].fulfilled\n\nexport const selectBarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.data ?? []\n\nexport const selectBarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).bar).includes(filePath)\n\nexport const selectBarDataError = (filePath: string) => (state: RootState) =>\n  selectBarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).bar[filePath].error\n    : null\n\nexport const selectBarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].pending\n\nexport const selectBarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].fulfilled\n\nexport const selectHTMLData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).html[filePath]?.data ?? ''\n\nexport const selectHTMLDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).html).includes(filePath)\n\nexport const selectHTMLDataError = (filePath: string) => (state: RootState) =>\n  selectHTMLDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).html[filePath].error\n    : null\n\nexport const selectHTMLDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].pending\n\nexport const selectHTMLDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].fulfilled\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\nimport {\n  ImageData,\n  TimeSeriesData,\n  DISPLAY_DATA_SLICE_NAME,\n  HeatMapData,\n  CsvData,\n  RoiData,\n  ScatterData,\n  BarData,\n  HTMLData,\n} from './DisplayDataType'\n\nexport const getTimeSeriesDataById = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; index: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesDataById`,\n  async ({ path, index }, thunkAPI) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/outputs/timedata/${path}`, {\n        params: {\n          index: index,\n        },\n      })\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesAllData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesAllData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await axios.get(\n        `${BASE_URL}/outputs/alltimedata/${path}`,\n      )\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHeatMapData = createAsyncThunk<\n  { data: HeatMapData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHeatMapData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/outputs/data/${path}`)\n    return response.data\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getImageData = createAsyncThunk<\n  { data: ImageData },\n  { path: string; startIndex?: number; endIndex?: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getImageData`,\n  async ({ path, startIndex, endIndex }, thunkAPI) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n        params: {\n          start_index: startIndex,\n          end_index: endIndex,\n        },\n      })\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getCsvData = createAsyncThunk<\n  {\n    data: CsvData\n  },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getCsvData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/outputs/csv/${path}`)\n    return response.data\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getRoiData = createAsyncThunk<{ data: RoiData }, { path: string }>(\n  `${DISPLAY_DATA_SLICE_NAME}/getRoiData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {})\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getScatterData = createAsyncThunk<\n  { data: ScatterData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getScatterData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n    return response.data\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getBarData = createAsyncThunk<{ data: BarData }, { path: string }>(\n  `${DISPLAY_DATA_SLICE_NAME}/getBarData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHTMLData = createAsyncThunk<\n  { data: HTMLData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHTMLData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/outputs/html/${path}`, {})\n    return response.data\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import React from 'react'\nimport { DATA_TYPE } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const DisplayDataContext = React.createContext<{\n  nodeId: string | null\n  filePath: string\n  dataType: DATA_TYPE\n  itemId: number\n}>({ nodeId: '', filePath: '', dataType: 'csv', itemId: NaN })\n","export function arrayEqualityFn<T>(a: T[], b: T[]) {\n  return a === b || (a.length === b.length && a.every((v, i) => v === b[i]))\n}\n\nexport function twoDimarrayEqualityFn<T>(a: T[][], b: T[][]) {\n  return (\n    a === b ||\n    (a.length === b.length && a.every((v, i) => arrayEqualityFn(v, b[i])))\n  )\n}\n","import { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\n\nexport type VisualaizeItem = {\n  selectedItemId: number | null\n  items: {\n    [itemId: number]: VisualaizeItemType\n  }\n}\n\nexport type VisualaizeItemType = MultiPlotItem | DisplayDataItem\n\nexport interface ItemBaseType<T extends VISUALIZE_ITEM_TYPE> {\n  itemType: T\n}\n\nexport type ColorType = {\n  rgb: string\n  offset: string\n}\n\nexport const VISUALIZE_ITEM_TYPE_SET = {\n  MULTI_PLOT: 'MultiPlot',\n  DISPLAY_DATA: 'displayData',\n} as const\n\nexport type VISUALIZE_ITEM_TYPE =\n  typeof VISUALIZE_ITEM_TYPE_SET[keyof typeof VISUALIZE_ITEM_TYPE_SET]\n\nexport type DisplayDataItem =\n  | ImageItem\n  | TimeSeriesItem\n  | HeatMapItem\n  | CsvItem\n  | RoiItem\n  | ScatterItem\n  | BarItem\n  | HDF5Item\n  | HTMLItem\n\nexport interface DisplayDataItemBaseType extends ItemBaseType<'displayData'> {\n  filePath: string | null\n  nodeId: string | null\n  dataType: DATA_TYPE | null\n}\n\nexport interface MultiPlotItem extends ItemBaseType<'MultiPlot'> {\n  imageItem: ImageItem\n  timeSeriesItem: TimeSeriesItem\n  heatMapItem: HeatMapItem\n  otherItem?: DisplayDataItem\n}\n\nexport interface ImageItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.IMAGE\n  activeIndex: number\n  startIndex: number\n  endIndex: number\n  showticklabels: boolean\n  zsmooth: string | boolean\n  showline: boolean\n  showgrid: boolean\n  showscale: boolean\n  colors: ColorType[]\n  roiItem: RoiItem | null\n  roiAlpha: number\n}\n\nexport interface TimeSeriesItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.TIME_SERIES\n  offset: boolean\n  span: number\n  showgrid: boolean\n  showline: boolean\n  showticklabels: boolean\n  zeroline: boolean\n  xrange: {\n    left: number | undefined\n    right: number | undefined\n  }\n  maxIndex: number\n  displayNumbers: number[]\n  checkedList: boolean[]\n}\n\nexport interface HeatMapItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HEAT_MAP\n  showscale: boolean\n  colors: ColorType[]\n}\nexport interface CsvItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.CSV\n  setColumn: number | null\n  setIndex: boolean\n  transpose: boolean\n}\nexport interface RoiItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.ROI\n  // colors: ColorType[]\n}\n\nexport interface ScatterItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.SCATTER\n  xIndex: number\n  yIndex: number\n}\n\nexport interface BarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BAR\n}\n\nexport interface HDF5Item extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HDF5\n}\n\nexport interface HTMLItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HTML\n}\n","import { DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  VisualaizeItemType,\n  MultiPlotItem,\n  DisplayDataItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  ImageItem,\n  TimeSeriesItem,\n  HeatMapItem,\n  RoiItem,\n  ScatterItem,\n  CsvItem,\n} from './VisualizeItemType'\n\nexport function isMultiPlotItem(\n  item: VisualaizeItemType,\n): item is MultiPlotItem {\n  return item.itemType === VISUALIZE_ITEM_TYPE_SET.MULTI_PLOT\n}\n\nexport function isDisplayDataItem(\n  item: VisualaizeItemType,\n): item is DisplayDataItem {\n  return item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA\n}\n\nexport function isImageItem(item: VisualaizeItemType): item is ImageItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.IMAGE\n  )\n}\n\nexport function isTimeSeriesItem(\n  item: VisualaizeItemType,\n): item is TimeSeriesItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.TIME_SERIES\n  )\n}\n\nexport function isCsvItem(item: VisualaizeItemType): item is CsvItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.CSV\n  )\n}\n\nexport function isHeatMapItem(item: VisualaizeItemType): item is HeatMapItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HEAT_MAP\n  )\n}\n\nexport function isRoiItem(item: VisualaizeItemType): item is RoiItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.ROI\n  )\n}\n\nexport function isScatterItem(item: VisualaizeItemType): item is ScatterItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.SCATTER\n  )\n}\n","import { RootState } from 'store/store'\nimport { selectRoiData } from '../DisplayData/DisplayDataSelectors'\nimport { VISUALIZE_ITEM_TYPE_SET } from './VisualizeItemType'\nimport {\n  isDisplayDataItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isHeatMapItem,\n  isMultiPlotItem,\n  isCsvItem,\n  isScatterItem,\n} from './VisualizeItemUtils'\n\nexport const selectSelectedVisualizeItemId = (state: RootState) =>\n  state.visualaizeItem.selectedItemId\n\nconst selectVisualizeItems = (state: RootState) => state.visualaizeItem.items\n\nexport const selectVisualizeItemIdList = (state: RootState) =>\n  Object.keys(selectVisualizeItems(state)).map((key) => Number(key))\n\nexport const selectVisualizeItemType = (itemId: number) => (state: RootState) =>\n  selectVisualizeItems(state)[itemId].itemType\n\nexport const selectVisualizeItemTypeIsMultiPlot =\n  (itemId: number) => (state: RootState) =>\n    selectVisualizeItemType(itemId)(state) ===\n    VISUALIZE_ITEM_TYPE_SET.MULTI_PLOT\n\nexport const selectMultiPlotImageItem =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isMultiPlotItem(item)) {\n      return item.imageItem\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectMultiPlotImageItemNodeId =\n  (itemId: number) => (state: RootState) =>\n    selectMultiPlotImageItem(itemId)(state).nodeId\n\nexport const selectMultiPlotImageItemFilePath =\n  (itemId: number) => (state: RootState) =>\n    selectMultiPlotImageItem(itemId)(state).filePath\n\nexport const selectMultiPlotTimeSeriesItem =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isMultiPlotItem(item)) {\n      return item.timeSeriesItem\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectMultiPlotRoiItem = (itemId: number) => (state: RootState) =>\n  selectMultiPlotImageItem(itemId)(state).roiItem\n\nexport const selectMultiPlotRoiItemNodeId =\n  (itemId: number) => (state: RootState) =>\n    selectMultiPlotRoiItem(itemId)(state)?.nodeId ?? null\n\nexport const selectMultiPlotRoiItemFilePath =\n  (itemId: number) => (state: RootState) =>\n    selectMultiPlotRoiItem(itemId)(state)?.filePath ?? null\n\nexport const selectMultiPlotTimeSeriesItemNodeId =\n  (itemId: number) => (state: RootState) =>\n    selectMultiPlotTimeSeriesItem(itemId)(state).nodeId\n\nexport const selectMultiPlotTimeSeriesItemFilePath =\n  (itemId: number) => (state: RootState) =>\n    selectMultiPlotTimeSeriesItem(itemId)(state).filePath\n\nexport const selectMultiPlotHeatMapItem =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isMultiPlotItem(item)) {\n      return item.heatMapItem\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectMultiPlotHeatMapItemNodeId =\n  (itemId: number) => (state: RootState) =>\n    selectMultiPlotHeatMapItem(itemId)(state).nodeId\n\nexport const selectMultiPlotHeatMapItemFilePath =\n  (itemId: number) => (state: RootState) =>\n    selectMultiPlotHeatMapItem(itemId)(state).filePath\n\nexport const selectVisualizeDataType =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isDisplayDataItem(item)) {\n      return item.dataType\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataNodeId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isDisplayDataItem(item)) {\n      return item.nodeId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else if (isMultiPlotItem(item)) {\n      return item.imageItem.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else if (isMultiPlotItem(item)) {\n      return item.timeSeriesItem.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemNodeId = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItems(state)[itemId]\n  if (isImageItem(item)) {\n    return item.roiItem?.nodeId ?? null\n  } else if (isMultiPlotItem(item)) {\n    return item.imageItem.roiItem?.nodeId ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemFilePath = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItems(state)[itemId]\n  if (isImageItem(item)) {\n    return item.roiItem?.filePath ?? null\n  } else if (isMultiPlotItem(item)) {\n    return item.imageItem.roiItem?.filePath ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemShowticklabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.showticklabels\n    } else if (isMultiPlotItem(item)) {\n      return item.imageItem.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemZsmooth =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.zsmooth\n    } else if (isMultiPlotItem(item)) {\n      return item.imageItem.zsmooth\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemStartIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.startIndex\n    } else if (isMultiPlotItem(item)) {\n      return item.imageItem.startIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemEndIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.endIndex\n    } else if (isMultiPlotItem(item)) {\n      return item.imageItem.endIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.showline\n    } else if (isMultiPlotItem(item)) {\n      return item.imageItem.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.showgrid\n    } else if (isMultiPlotItem(item)) {\n      return item.imageItem.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.showscale\n    } else if (isMultiPlotItem(item)) {\n      return item.imageItem.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemColors = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItems(state)[itemId]\n  if (isImageItem(item)) {\n    return item.colors\n  } else if (isMultiPlotItem(item)) {\n    return item.imageItem.colors\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemActiveIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.activeIndex\n    } else if (isMultiPlotItem(item)) {\n      return item.imageItem.activeIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemRoiAlpha =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.roiAlpha\n    } else if (isMultiPlotItem(item)) {\n      return item.imageItem.roiAlpha\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemOffset =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.offset\n    } else if (isMultiPlotItem(item)) {\n      return item.timeSeriesItem.offset\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemSpan =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.span\n    } else if (isMultiPlotItem(item)) {\n      return item.timeSeriesItem.span\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.showgrid\n    } else if (isMultiPlotItem(item)) {\n      return item.timeSeriesItem.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.showline\n    } else if (isMultiPlotItem(item)) {\n      return item.timeSeriesItem.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowTickLabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.showticklabels\n    } else if (isMultiPlotItem(item)) {\n      return item.timeSeriesItem.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemZeroLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.zeroline\n    } else if (isMultiPlotItem(item)) {\n      return item.timeSeriesItem.zeroline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemXrange =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.xrange\n    } else if (isMultiPlotItem(item)) {\n      return item.timeSeriesItem.xrange\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemDisplayNumbers =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.displayNumbers\n    } else if (isMultiPlotItem(item)) {\n      return item.timeSeriesItem.displayNumbers\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemCheckedList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.checkedList\n    } else if (isMultiPlotItem(item)) {\n      return item.timeSeriesItem.checkedList\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemIndex =\n  (itemId: number, roiFilePath: string | null) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      const maxIdx = item.maxIndex\n      if (maxIdx !== 0) {\n        return maxIdx\n      }\n    } else if (isMultiPlotItem(item)) {\n      const maxIdx = item.timeSeriesItem.maxIndex\n      if (maxIdx !== 0) {\n        return maxIdx\n      }\n    }\n\n    if (roiFilePath !== null) {\n      return selectRoiItemMaxNumber(roiFilePath)(state)\n    } else {\n      return 0\n    }\n  }\n\nexport const selectRoiItemMaxNumber =\n  (roiFilePath: string) => (state: RootState) => {\n    const roiData = selectRoiData(roiFilePath)(state)\n    if (roiData.length !== 0) {\n      return Math.max(...roiData.map((arr) => Math.max(...arr)))\n    } else {\n      return 0\n    }\n  }\n\nexport const selectHeatMapItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isHeatMapItem(item)) {\n      return item.showscale\n    } else if (isMultiPlotItem(item)) {\n      return item.heatMapItem.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectHeatMapItemColors =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isHeatMapItem(item)) {\n      return item.colors\n    } else if (isMultiPlotItem(item)) {\n      return item.heatMapItem.colors\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemTranspose =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isCsvItem(item)) {\n      return item.transpose\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetColumn =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isCsvItem(item)) {\n      return item.setColumn\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItems(state)[itemId]\n  if (isCsvItem(item)) {\n    return item.setIndex\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectScatterItemXIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isScatterItem(item)) {\n      return item.xIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectScatterItemYIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isScatterItem(item)) {\n      return item.yIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectMultiPlotTimeSeriesItemFilepath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isMultiPlotItem(item)) {\n      const targetItem = selectMultiPlotTimeSeriesItem(itemId)(state)\n      const timeSeriesFilePath = targetItem.filePath\n      return timeSeriesFilePath\n    }\n    return null\n  }\n\nexport const selectMultiPlotTimeSeriesItemDisplayNumbers =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isMultiPlotItem(item)) {\n      const targetItem = selectMultiPlotTimeSeriesItem(itemId)(state)\n      const displayNumbers = targetItem.displayNumbers\n      return displayNumbers\n    }\n    return null\n  }\n","import React from 'react'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectCsvData,\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { CsvData } from 'store/slice/DisplayData/DisplayDataType'\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\nimport {\n  selectCsvItemSetColumn,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const CsvPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <CsvPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst CsvPlotImple = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const setColumn = useSelector(selectCsvItemSetColumn(itemId))\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  return (\n    <PresentationalCsvPlot\n      path={path}\n      transpose={transpose}\n      setColumn={setColumn}\n      setIndex={setIndex}\n    />\n  )\n})\n\n/**\n * CsvFileNodeの設定時に表示するプレビューでも使用することを想定\n *\n * DisplayDataContextに依存しない\n */\nexport const PresentationalCsvPlot = React.memo<{\n  path: string\n  transpose: boolean\n  setColumn: number | null\n  setIndex: boolean\n}>(({ path, transpose, setIndex, setColumn }) => {\n  const data = useSelector(\n    selectCsvData(path),\n    (a: CsvData | undefined, b: CsvData | undefined) => {\n      if (a != null && b != null) {\n        return twoDimarrayEqualityFn(a, b)\n      } else {\n        return a === undefined && b === undefined\n      }\n    },\n  )\n\n  const csvData = React.useMemo(() => {\n    if (transpose) {\n      return data[0].map((col, i) => data.map((row) => row[i]))\n    }\n    return data\n  }, [data, transpose])\n\n  const columns: GridColDef[] = React.useMemo(() => {\n    const columnData = () => {\n      if (setColumn === null) {\n        return csvData[0]\n      } else {\n        if (setColumn >= csvData.length) {\n          return csvData[csvData.length - 1]\n        } else {\n          return csvData[setColumn]\n        }\n      }\n    }\n\n    if (setIndex) {\n      return [\n        { field: 'col0', headerName: 'index', width: 150 },\n        ...columnData().map((value, idx) => {\n          return {\n            field: `col${idx + 1}`,\n            headerName: `${setColumn === null ? idx : value}`,\n            width: 150,\n          }\n        }),\n      ]\n    } else {\n      return columnData().map((value, idx) => {\n        return {\n          field: `col${idx + 1}`,\n          headerName: `${setColumn === null ? idx : value}`,\n          width: 150,\n        }\n      })\n    }\n  }, [csvData, setColumn, setIndex])\n  const rows = csvData\n    .map((row, row_id) => {\n      let rowObj = Object.fromEntries(\n        [row_id, ...row].map((value, index) => {\n          return [`col${index}`, value]\n        }),\n      )\n      rowObj['id'] = row_id\n      return rowObj\n    })\n    .filter(\n      (value, idx) =>\n        setColumn === null || (setColumn !== null && idx > setColumn),\n    )\n\n  return (\n    <div style={{ height: 300, width: '100%' }}>\n      <DataGrid rows={rows} columns={columns} />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  IconButton,\n  DialogTitle,\n  DialogActions,\n  Switch,\n  FormControlLabel,\n  TextField,\n  Box,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeParamSetColumn,\n  selectCsvInputNodeParamSetIndex,\n  selectCsvInputNodeParamTranspose,\n  selectInputNodeDefined,\n  selectInputNodeSelectedFilePath,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setCsvInputNodeParam } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { PresentationalCsvPlot } from 'components/Visualize/Plot/CsvPlot'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const CsvFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <CsvFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst CsvFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <IconButton\n        aria-label=\"delete\"\n        style={{ color: 'black', position: 'absolute', top: -20, right: -5 }}\n        onClick={onClickDeleteIcon}\n        size=\"large\"\n      >\n        <CloseOutlinedIcon />\n      </IconButton>\n      <FileSelect\n        onChangeFilePath={onChangeFilePath}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ? filePath.split('/').reverse()[0] : ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'csv', 'CsvData')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nconst ParamSettingDialog = React.memo<{ nodeId: string; filePath: string }>(\n  ({ nodeId, filePath }) => {\n    const [open, setOpen] = React.useState(false)\n    // OK時のみStoreに反映させるため一時的な値をuseStateで保持しておく。\n    // useStateの初期値はselectorで取得。\n    const [setColumn, setSetColumn] = React.useState(\n      useSelector(selectCsvInputNodeParamSetColumn(nodeId)),\n    )\n    const [setIndex, setSetIndex] = React.useState(\n      useSelector(selectCsvInputNodeParamSetIndex(nodeId)),\n    )\n    const [transpose, setTranspose] = React.useState(\n      useSelector(selectCsvInputNodeParamTranspose(nodeId)),\n    )\n    const dispatch = useDispatch()\n    const onClickCancel = () => {\n      setOpen(false)\n    }\n    const onClickOk = () => {\n      setOpen(false)\n      dispatch(\n        setCsvInputNodeParam({\n          nodeId,\n          param: { setColumn, setIndex, transpose },\n        }),\n      )\n    }\n\n    return (\n      <>\n        <Button onClick={() => setOpen(true)}>Settings</Button>\n        <Dialog open={open}>\n          <DialogTitle>Csv Setting</DialogTitle>\n          <DialogContent dividers>\n            <Box sx={{ display: 'flex', p: 1, m: 1, alignItems: 'flex-start' }}>\n              <FormControlLabel\n                sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n                control={\n                  <Switch\n                    checked={transpose}\n                    onChange={(event) => setTranspose(event.target.checked)}\n                  />\n                }\n                label=\"Transpose\"\n              />\n              <TextField\n                label=\"Column\"\n                sx={{\n                  width: 100,\n                  margin: (theme) => theme.spacing(0, 1, 0, 1),\n                }}\n                type=\"number\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={(event) => {\n                  const value = Number(event.target.value)\n                  if (value >= 0) {\n                    setSetColumn(Number(event.target.value))\n                  }\n                }}\n                value={setColumn}\n              />\n              <FormControlLabel\n                sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n                control={\n                  <Switch\n                    checked={setIndex}\n                    onChange={(event) => setSetIndex(event.target.checked)}\n                  />\n                }\n                label=\"Set Index\"\n              />\n            </Box>\n            <Typography variant=\"h6\">Preview</Typography>\n            <CsvPreview\n              filePath={filePath}\n              transpose={transpose}\n              setColumn={setColumn}\n              setIndex={setIndex}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n              cancel\n            </Button>\n            <Button onClick={onClickOk} color=\"primary\" variant=\"outlined\">\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </>\n    )\n  },\n)\n\nconst CsvPreview = React.memo<{\n  filePath: string\n  transpose: boolean\n  setColumn: number | null\n  setIndex: boolean\n}>(({ filePath: path, ...otherProps }) => {\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PresentationalCsvPlot path={path} {...otherProps} />\n  } else {\n    return null\n  }\n})\n","import { RootState } from '../../store'\n\nexport const selectHDF5 = (state: RootState) => {\n  if (state.hdf5 != null) {\n    return state.hdf5\n  } else {\n    return undefined\n  }\n}\n\nexport const selectHDF5Nodes = () => (state: RootState) =>\n  selectHDF5(state)?.tree\n\nexport const selectHDF5IsLoading = () => (state: RootState) =>\n  selectHDF5(state)?.isLoading ?? false\n","export const HDF5_SLICE_NAME = 'hdf5'\n\nexport type HDF5TreeDTO = HDF5DirDTO | HDF5FileDTO\n\nexport interface HDF5DirDTO {\n  isDir: true\n  name: string\n  nodes: HDF5TreeDTO[]\n  path: string\n}\n\nexport interface HDF5FileDTO {\n  isDir: false\n  name: string\n  shape: [number]\n  path: string\n  nbytes: string\n}\n\nexport interface HDF5Tree {\n  isLoading: boolean\n  tree: HDF5TreeDTO[]\n}\n\nexport const HDF5_TYPE_SET = {\n  ALL: 'all',\n} as const\n\nexport type HDF5_TYPE = typeof HDF5_TYPE_SET[keyof typeof HDF5_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\n\nimport { HDF5_SLICE_NAME, HDF5TreeDTO } from './HDF5Type'\n\nexport const getHDF5Tree = createAsyncThunk<HDF5TreeDTO[], { path: string }>(\n  `${HDF5_SLICE_NAME}/getHDF5Tree`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/hdf5/${path}`)\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\n\nimport { alpha, useTheme } from '@mui/material/styles'\nimport Dialog from '@mui/material/Dialog'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport IconButton from '@mui/material/IconButton'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectInputNodeDefined,\n  selectInputNodeHDF5Path,\n  selectInputNodeSelectedFilePath,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeHDF5Path } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectHDF5IsLoading,\n  selectHDF5Nodes,\n} from 'store/slice/HDF5/HDF5Selectors'\nimport { getHDF5Tree } from 'store/slice/HDF5/HDF5Action'\nimport { HDF5TreeDTO } from 'store/slice/HDF5/HDF5Type'\nimport { Typography } from '@mui/material'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const HDF5FileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <HDF5FileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst HDF5FileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <IconButton\n        aria-label=\"delete\"\n        style={{ color: 'black', position: 'absolute', top: -20, right: -5 }}\n        onClick={onClickDeleteIcon}\n      >\n        <CloseOutlinedIcon />\n      </IconButton>\n      <FileSelect\n        onChangeFilePath={onChangeFilePath}\n        fileType={FILE_TYPE_SET.HDF5}\n        filePath={filePath ? filePath.split('/').reverse()[0] : ''}\n      />\n      {filePath !== undefined && <ItemSelect nodeId={nodeId} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'hdf5', 'HDF5Data')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nconst ItemSelect = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [open, setOpen] = React.useState(false)\n\n  const structureFileName = useSelector(selectInputNodeHDF5Path(nodeId))\n\n  return (\n    <>\n      <Button variant=\"outlined\" size=\"small\" onClick={() => setOpen(true)}>\n        {'Structure'}\n      </Button>\n      <Typography className=\"selectFilePath\" variant=\"caption\">\n        {!!structureFileName ? structureFileName : 'No structure is selected.'}\n      </Typography>\n\n      <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\n        <DialogTitle>{'Select File'}</DialogTitle>\n        <Structure nodeId={nodeId} />\n        <DialogActions>\n          <Button onClick={() => setOpen(false)} variant=\"outlined\">\n            cancel\n          </Button>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"primary\"\n            variant=\"outlined\"\n            autoFocus\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst Structure = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const theme = useTheme()\n  return (\n    <DialogContent dividers>\n      <div\n        style={{\n          height: 300,\n          overflow: 'auto',\n          marginBottom: theme.spacing(1),\n          border: '1px solid',\n          padding: theme.spacing(1),\n          borderColor: theme.palette.divider,\n        }}\n      >\n        <FileTreeView nodeId={nodeId} />\n      </div>\n    </DialogContent>\n  )\n})\n\nconst FileTreeView = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [tree, isLoading] = useHDF5Tree(nodeId)\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView>\n        {tree?.map((node) => (\n          <TreeNode node={node} nodeId={nodeId} />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: HDF5TreeDTO\n  nodeId: string\n}>(({ node, nodeId }) => {\n  const dispatch = useDispatch()\n\n  const onClickFile = (path: string) => {\n    dispatch(setInputNodeHDF5Path({ nodeId, path }))\n  }\n\n  if (node.isDir) {\n    // Directory\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={node.name}\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode node={childNode} key={i} nodeId={nodeId} />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    // File\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={node.name + `   (shape=${node.shape}, nbytes=${node.nbytes})`}\n        onClick={() => onClickFile(node.path)}\n      />\n    )\n  }\n})\n\nfunction useHDF5Tree(nodeId: string): [HDF5TreeDTO[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectHDF5Nodes())\n  const isLoading = useSelector(selectHDF5IsLoading())\n  const filePath = useSelector(selectInputNodeSelectedFilePath(nodeId))\n  React.useEffect(() => {\n    if (!isLoading && filePath) {\n      dispatch(getHDF5Tree({ path: filePath }))\n    }\n  }, [isLoading, filePath, dispatch])\n  return [tree, isLoading]\n}\n","import { useDispatch } from 'react-redux'\nimport {\n  EdgeProps,\n  getBezierPath,\n  getMarkerEnd,\n  getEdgeCenter,\n} from 'react-flow-renderer'\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\n\nconst foreignObjectSize = 40\n\nexport const CustomEdge: React.FC<EdgeProps> = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  arrowHeadType,\n  markerEndId,\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  })\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId)\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  })\n\n  const dispatch = useDispatch()\n\n  const onEdgeClick = () => {\n    dispatch(deleteFlowElementsById(id))\n  }\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <foreignObject\n        width={foreignObjectSize}\n        height={foreignObjectSize}\n        x={edgeCenterX - foreignObjectSize / 2}\n        y={edgeCenterY - foreignObjectSize / 2}\n        className=\"edgebutton-foreignobject\"\n      >\n        <CloseOutlinedIcon onClick={onEdgeClick} />\n      </foreignObject>\n    </>\n  )\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { NWB_SLICE_NAME } from './NWBType'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'store/utils/param/ParamType'\n\nexport const getNWBParams = createAsyncThunk<ParamDTO, void>(\n  `${NWB_SLICE_NAME}/getNWBParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await axios.get(`${BASE_URL}/nwb`)\n      return response.data\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { ParamMap } from 'store/utils/param/ParamType'\n\nexport const NWB_SLICE_NAME = 'NWB'\n\nexport type NWBType = {\n  params: ParamMap\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getNWBParams } from './NWBAction'\nimport { NWBType, NWB_SLICE_NAME } from './NWBType'\nimport { convertToParamMap, getChildParam } from 'store/utils/param/ParamUtils'\n\nconst initialState: NWBType = {\n  params: {},\n}\n\nexport const nwbSlice = createSlice({\n  name: NWB_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const targetNode = getChildParam(path, state.params)\n      if (targetNode != null) {\n        targetNode.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNWBParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = nwbSlice.actions\n\nexport default nwbSlice.reducer\n","import MuiAccordion, { AccordionProps } from '@mui/material/Accordion'\nimport { styled } from '@mui/material/styles'\n\nexport const Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: '1px solid',\n  borderColor: theme.palette.divider,\n  boxShadow: 'none',\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}))\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport Switch from '@mui/material/Switch'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport Typography from '@mui/material/Typography'\n\nimport { isParamChild } from 'store/utils/param/ParamUtils'\nimport { ParamType } from 'store/utils/param/ParamType'\nimport { RootState } from 'store/store'\nimport { Accordion } from 'components/Accordion'\n\ntype ParamSelectorType = (paramKey: string) => (state: RootState) => ParamType\ntype ParamValueSelectorType = (path: string) => (state: RootState) => unknown\ntype ParamUpdateActionCreatorType = (\n  path: string,\n  newValue: unknown,\n) => AnyAction\n\nexport type CreateParamFormItemComponentProps = {\n  paramSelector: ParamSelectorType\n  paramValueSelector: ParamValueSelectorType\n  paramUpdateActionCreator: ParamUpdateActionCreatorType\n}\n\nexport function createParamFormItemComponent({\n  paramSelector,\n  paramValueSelector,\n  paramUpdateActionCreator,\n}: CreateParamFormItemComponentProps): React.FC<{ paramKey: string }> {\n  function useParamValueUpdate(\n    path: string,\n  ): [unknown, (newValue: unknown) => AnyAction] {\n    const value = useSelector(paramValueSelector(path))\n    const updateParamAction = (newValue: unknown) => {\n      return paramUpdateActionCreator(path, newValue)\n    }\n    return [value, updateParamAction]\n  }\n  const ParamItemForString = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    const onChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(updateParamAction(newValue))\n    }\n    return <TextField value={value} onChange={onChange} multiline />\n  })\n  const ParamItemForNumber = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue =\n          event.target.value === '' ? '' : Number(event.target.value)\n        if (typeof newValue === 'number') {\n          dispatch(updateParamAction(newValue))\n        }\n      }\n      return (\n        <TextField\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={value}\n          onChange={onChange}\n        />\n      )\n    } else {\n      return null\n    }\n  })\n  const ParamItemForBoolean = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'boolean') {\n      const onChange = () => {\n        dispatch(updateParamAction(!value))\n      }\n      return <Switch checked={value} onChange={onChange} />\n    } else {\n      return null\n    }\n  })\n  const ParamItemForValueType = React.memo<ParamChildItemProps>(({ path }) => {\n    const [value] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      return <ParamItemForNumber path={path} />\n    } else if (typeof value === 'string') {\n      return <ParamItemForString path={path} />\n    } else if (typeof value === 'boolean') {\n      return <ParamItemForBoolean path={path} />\n    } else {\n      return <ParamItemForString path={path} />\n    }\n  })\n  const ParamChildItem = React.memo<ParamChildItemProps & { name: string }>(\n    ({ path, name }) => {\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            marginTop: (theme) => theme.spacing(2),\n            marginBottom: (theme) => theme.spacing(2),\n            alignItems: 'center',\n            overflow: 'scroll',\n          }}\n        >\n          <Box\n            style={{ verticalAlign: 'middle' }}\n            sx={{\n              flexGrow: 1,\n              width: '50%',\n            }}\n          >\n            <Typography style={{ overflow: 'scroll' }}>{name}</Typography>\n          </Box>\n          <Box sx={{ width: '50%' }}>\n            <ParamItemForValueType path={path} />\n          </Box>\n        </Box>\n      )\n    },\n  )\n  const ParamItem = React.memo<ParamItemProps>(({ paramKey, param }) => {\n    if (isParamChild(param)) {\n      return <ParamChildItem path={param.path} name={paramKey} />\n    } else {\n      return (\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            {paramKey}\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              {Object.entries(param.children).map(([paramKey, param], i) => (\n                <ParamItem param={param} paramKey={paramKey} />\n              ))}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      )\n    }\n  })\n  return React.memo<{ paramKey: string }>(({ paramKey }) => {\n    const param = useSelector(paramSelector(paramKey)) // 一階層目\n    return <ParamItem paramKey={paramKey} param={param} />\n  })\n}\n\ntype ParamItemProps = {\n  paramKey: string\n  param: ParamType\n}\n\ntype ParamChildItemProps = {\n  path: string\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\nimport { updateParam } from 'store/slice/NWB/NWBSlice'\nimport { getNWBParams } from 'store/slice/NWB/NWBAction'\nimport { toggleNwb } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectNwbParam,\n  selectNwbParamsKeyList,\n  selectNwbParamsValue,\n} from 'store/slice/NWB/NWBSelectors'\nimport { createParamFormItemComponent } from 'components/ParamFormItemCreator'\n\nexport const NWBSettingButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleNwb())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      NWB setting\n    </Button>\n  )\n})\n\nexport const NWBSettingContents = React.memo(() => {\n  const dispatch = useDispatch()\n\n  const paramKeyList = useSelector(selectNwbParamsKeyList, arrayEqualityFn)\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getNWBParams())\n    }\n  })\n\n  return (\n    <div className=\"nwbParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectNwbParam,\n    paramValueSelector: selectNwbParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import { ParamMap } from 'store/utils/param/ParamType'\n\nexport const SNAKEMAKE_SLICE_NAME = 'Snakemake'\n\nexport type SnakemakeType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'store/utils/param/ParamType'\n\nexport const getSnakemakeParams = createAsyncThunk<ParamDTO, void>(\n  `${SNAKEMAKE_SLICE_NAME}/getSnakemakeParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await axios.get(`${BASE_URL}/snakemake`)\n      return response.data\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { convertToParamMap, getChildParam } from 'store/utils/param/ParamUtils'\nimport { getSnakemakeParams } from './SnakemakeAction'\nimport { SnakemakeType, SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nconst initialState: SnakemakeType = {\n  params: {},\n}\n\nexport const SnakemakeSlice = createSlice({\n  name: SNAKEMAKE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const target = getChildParam(path, state.params)\n      if (target != null) {\n        target.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getSnakemakeParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = SnakemakeSlice.actions\n\nexport default SnakemakeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\n\nimport { updateParam } from 'store/slice/Snakemake/SnakemakeSlice'\nimport { getSnakemakeParams } from 'store/slice/Snakemake/SnakemakeAction'\nimport { toggleSnakemake } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport {\n  selectSnakemakeParam,\n  selectSnakemakeParamsKeyList,\n  selectSnakemakeParamsValue,\n} from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from 'components/ParamFormItemCreator'\n\nexport const SnakemakeButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleSnakemake())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      Snakemake\n    </Button>\n  )\n})\n\nexport const SnakemakeContents = React.memo(() => {\n  const dispatch = useDispatch()\n  const paramKeyList = useSelector(\n    selectSnakemakeParamsKeyList,\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getSnakemakeParams())\n    }\n  })\n  return (\n    <div className=\"SnakemakeParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectSnakemakeParam,\n    paramValueSelector: selectSnakemakeParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nimport type { Edge, Node } from 'react-flow-renderer'\nimport type {\n  AlgorithmNodeData,\n  InputNodeData,\n} from 'store/slice/FlowElement/FlowElementType'\nimport type { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport type { ParamMap } from 'store/utils/param/ParamType'\n\nexport type RunPostData = {\n  name: string\n  nodeList: Node<NodePostDataType>[]\n  edgeList: Edge[]\n  nwbParam: ParamMap\n  snakemakeParam: ParamMap\n  forceRunList: { nodeId: string; name: string }[]\n}\n\nexport type NodePostDataType = AlgorithmNodePostData | InputNodePostData\n\nexport interface InputNodePostData extends InputNodeData {\n  path: string\n  fileType: FILE_TYPE\n  param?: {\n    [key: string]: unknown\n  }\n  hdf5Path?: string\n}\n\nexport interface AlgorithmNodePostData extends AlgorithmNodeData {\n  path: string\n  param: ParamMap\n}\n\nexport async function runApi(data: RunPostData): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run`, data)\n  return response.data\n}\n\nexport async function runByUidApi(\n  uid: string,\n  data: Omit<RunPostData, 'name'>,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${uid}`, data)\n  return response.data\n}\n\nexport type RunResultDTO = {\n  [nodeId: string]: {\n    status: string\n    message: string\n    name: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type OutputPathsDTO = {\n  [outputKey: string]: {\n    path: string\n    type: string\n  }\n}\n\nexport async function runResult(data: {\n  uid: string\n  pendingNodeIdList: string[]\n}): Promise<RunResultDTO> {\n  const { uid, pendingNodeIdList } = data\n  const response = await axios.post(`${BASE_URL}/run/result/${uid}`, {\n    pendingNodeIdList,\n  })\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { ThunkApiConfig } from 'store/store'\nimport { PIPELINE_SLICE_NAME } from './PipelineType'\nimport {\n  runApi,\n  runByUidApi,\n  runResult,\n  RunResultDTO,\n  RunPostData,\n} from 'api/run/Run'\nimport {\n  selectPipelineLatestUid,\n  selectRunResultPendingNodeIdList,\n} from './PipelineSelectors'\n\nexport const run = createAsyncThunk<\n  string,\n  { runPostData: RunPostData },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/run`, async ({ runPostData }, thunkAPI) => {\n  try {\n    const responseData = await runApi(runPostData)\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const runByCurrentUid = createAsyncThunk<\n  string,\n  { runPostData: Omit<RunPostData, 'name'> },\n  ThunkApiConfig\n>(\n  `${PIPELINE_SLICE_NAME}/runByCurrentUid`,\n  async ({ runPostData }, thunkAPI) => {\n    const currentUid = selectPipelineLatestUid(thunkAPI.getState())\n    if (currentUid != null) {\n      try {\n        const responseData = await runByUidApi(currentUid, runPostData)\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    } else {\n      return thunkAPI.rejectWithValue('currentUid dose not exist.')\n    }\n  },\n)\n\nexport const pollRunResult = createAsyncThunk<\n  RunResultDTO,\n  {\n    uid: string\n  },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/pollRunResult`, async ({ uid }, thunkAPI) => {\n  const pendingNodeIdList = selectRunResultPendingNodeIdList(\n    thunkAPI.getState(),\n  )\n  try {\n    const responseData = await runResult({ uid, pendingNodeIdList })\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { pollRunResult, run, runByCurrentUid } from './PipelineActions'\nimport {\n  Pipeline,\n  PIPELINE_SLICE_NAME,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n  RUN_STATUS,\n} from './PipelineType'\n\nimport {\n  getInitialRunResult,\n  convertToRunResult,\n  isNodeResultPending,\n} from './PipelineUtils'\n\nconst initialState: Pipeline = {\n  run: {\n    status: RUN_STATUS.START_UNINITIALIZED,\n  },\n  runBtn: RUN_BTN_OPTIONS.RUN_NEW,\n}\n\nexport const pipelineSlice = createSlice({\n  name: PIPELINE_SLICE_NAME,\n  initialState,\n  reducers: {\n    cancelPipeline(state) {\n      state.run.status = RUN_STATUS.CANCELED\n    },\n    setRunBtnOption: (\n      state,\n      action: PayloadAction<{\n        runBtnOption: RUN_BTN_TYPE\n      }>,\n    ) => {\n      state.runBtn = action.payload.runBtnOption\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.run.status === RUN_STATUS.START_SUCCESS) {\n          state.run.runResult = {\n            ...state.run.runResult, // pendingのNodeResultはそのままでsuccessもしくはerrorのみ上書き\n            ...convertToRunResult(action.payload),\n          }\n          const runResultPendingList = Object.values(\n            state.run.runResult,\n          ).filter(isNodeResultPending)\n          if (runResultPendingList.length === 0) {\n            // 終了\n            state.run.status = RUN_STATUS.FINISHED\n          }\n        }\n      })\n      .addCase(pollRunResult.rejected, (state, action) => {\n        state.run.status = RUN_STATUS.ABORTED\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.meta.arg,\n        }\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addMatcher(\n        isAnyOf(run.pending, runByCurrentUid.pending),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_PENDING,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          const uid = action.payload\n          state.run = {\n            uid,\n            status: RUN_STATUS.START_SUCCESS,\n            runResult: getInitialRunResult({ name: '', ...runPostData }),\n            runPostData: { name: '', ...runPostData },\n          }\n          state.currentPipeline = {\n            uid: action.payload,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.rejected, runByCurrentUid.rejected),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_ERROR,\n          }\n        },\n      )\n  },\n})\n\nexport const { cancelPipeline, setRunBtnOption } = pipelineSlice.actions\n\nexport default pipelineSlice.reducer\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\nimport Grow from '@mui/material/Grow'\nimport Paper from '@mui/material/Paper'\nimport Popper from '@mui/material/Popper'\nimport MenuItem from '@mui/material/MenuItem'\nimport MenuList from '@mui/material/MenuList'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nimport { useSnackbar } from 'notistack'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport {\n  RUN_BTN_LABELS,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n} from 'store/slice/Pipeline/PipelineType'\nimport { selectPipelineRunBtn } from 'store/slice/Pipeline/PipelineSelectors'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\n\nexport const RunButtons = React.memo<UseRunPipelineReturnType>((props) => {\n  const {\n    uid,\n    isStartedSuccess,\n    filePathIsUndefined,\n    handleCancelPipeline,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const runBtnOption = useSelector(selectPipelineRunBtn)\n\n  const [dialogOpen, setDialogOpen] = React.useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n  const handleClick = () => {\n    if (!filePathIsUndefined) {\n      if (runBtnOption === RUN_BTN_OPTIONS.RUN_NEW) {\n        setDialogOpen(true)\n      } else {\n        handleRunPipelineByUid()\n      }\n    } else {\n      enqueueSnackbar('please select input file', { variant: 'error' })\n    }\n  }\n  const onClickDialogRun = (name: string) => {\n    handleRunPipeline(name)\n    setDialogOpen(false)\n  }\n  const onClickCancel = () => {\n    handleCancelPipeline()\n  }\n  const [menuOpen, setMenuOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLDivElement>(null)\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    option: RUN_BTN_TYPE,\n  ) => {\n    dispatch(setRunBtnOption({ runBtnOption: option }))\n    setMenuOpen(false)\n  }\n  const handleToggle = () => {\n    setMenuOpen((prevOpen) => !prevOpen)\n  }\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n    setMenuOpen(false)\n  }\n  const uidExists = uid != null\n  return (\n    <>\n      <ButtonGroup\n        sx={{\n          margin: 1,\n        }}\n        variant=\"contained\"\n        ref={anchorRef}\n        disabled={isStartedSuccess}\n      >\n        <Button onClick={handleClick}>{RUN_BTN_LABELS[runBtnOption]}</Button>\n        <Button size=\"small\" onClick={handleToggle}>\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={menuOpen}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList>\n                  {Object.values(RUN_BTN_OPTIONS).map((option) => (\n                    <MenuItem\n                      key={option}\n                      disabled={\n                        !uidExists && option === RUN_BTN_OPTIONS.RUN_ALREADY\n                      }\n                      selected={option === runBtnOption}\n                      onClick={(event) => handleMenuItemClick(event, option)}\n                    >\n                      {RUN_BTN_LABELS[option]}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n      <Button\n        variant=\"outlined\"\n        endIcon={<CloseIcon />}\n        onClick={onClickCancel}\n        sx={{\n          margin: 1,\n          marginRight: 4,\n        }}\n      >\n        Cancel\n      </Button>\n      <RunDialog\n        open={dialogOpen}\n        handleRun={onClickDialogRun}\n        handleClose={() => setDialogOpen(false)}\n      />\n    </>\n  )\n})\n\nconst RunDialog = React.memo<{\n  open: boolean\n  handleRun: (name: string) => void\n  handleClose: () => void\n}>(({ open, handleClose, handleRun }) => {\n  const [name, setName] = React.useState('New flow')\n  const [error, setError] = React.useState<string | null>(null)\n  const onClickRun = () => {\n    if (name !== '') {\n      handleRun(name)\n    } else {\n      setError('name is empty')\n    }\n  }\n  const onChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    if (event.target.value !== '') {\n      setError(null)\n    }\n  }\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Name and run flowchart</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"name\"\n          autoFocus\n          margin=\"dense\"\n          fullWidth\n          variant=\"standard\"\n          onChange={onChangeName}\n          error={error != null}\n          helperText={error}\n          value={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"inherit\" variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button onClick={onClickRun} color=\"primary\" variant=\"outlined\">\n          Run\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","import React from 'react'\nimport Box from '@mui/material/Box'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { NWBSettingButton } from './FlowChart/NWB'\nimport { SnakemakeButton } from './FlowChart/Snakemake'\nimport { RunButtons } from './RunButtons'\n\nexport const ToolBar = React.memo<UseRunPipelineReturnType>((props) => (\n  <Box\n    style={{\n      position: 'absolute',\n      float: 'right',\n      textAlign: 'right',\n      top: -7,\n      right: 10,\n      zIndex: 4,\n      textTransform: 'none',\n    }}\n  >\n    <SnakemakeButton />\n    <NWBSettingButton />\n    <RunButtons {...props} />\n  </Box>\n))\n","import React, { DragEvent, MouseEvent } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  Controls,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  FlowTransform,\n} from 'react-flow-renderer'\n\nimport 'style/flow.css'\nimport {\n  deleteFlowElements,\n  editFlowElementPositionById,\n  setFlowElements,\n  setFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectFlowElements,\n  selectFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { ImageFileNode } from './FlowChartNode/ImageFileNode'\nimport { AlgorithmNode } from './FlowChartNode/AlgorithmNode'\nimport { CsvFileNode } from './FlowChartNode/CsvFileNode'\nimport { HDF5FileNode } from './FlowChartNode/HDF5FileNode'\nimport { CustomEdge } from './CustomEdge'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { ToolBar } from 'components/ToolBar'\n\nconst componentTypes = {\n  ImageFileNode,\n  CsvFileNode,\n  HDF5FileNode,\n  AlgorithmNode,\n} as const\n\nconst edgeTypes = {\n  buttonedge: CustomEdge,\n} as const\n\nexport const ReactFlowComponent = React.memo<UseRunPipelineReturnType>(\n  (props) => {\n    const flowElements = useSelector(selectFlowElements)\n    const dispatch = useDispatch()\n\n    const onConnect = (params: Connection | Edge) => {\n      dispatch(\n        setFlowElements(\n          addEdge(\n            {\n              ...params,\n              animated: false,\n              style: { width: 5 },\n              type: 'buttonedge',\n            },\n            flowElements,\n          ),\n        ),\n      )\n    }\n\n    const onElementsRemove = (elementsToRemove: Elements) => {\n      dispatch(deleteFlowElements(elementsToRemove))\n    }\n\n    const onDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    const onNodeDragStop = (event: MouseEvent, node: Node) => {\n      dispatch(\n        editFlowElementPositionById({\n          nodeId: node.id,\n          coord: { x: node.position.x, y: node.position.y },\n        }),\n      )\n    }\n\n    const flowPosition = useSelector(selectFlowPosition)\n\n    const onMoveEnd = (event: FlowTransform | undefined) => {\n      if (event !== undefined) {\n        dispatch(setFlowPosition(event))\n      }\n    }\n\n    return (\n      <div className=\"flow\">\n        <ReactFlowProvider>\n          <div className=\"reactflow-wrapper\">\n            <ReactFlow\n              elements={flowElements}\n              onElementsRemove={onElementsRemove}\n              onConnect={onConnect}\n              onDragOver={onDragOver}\n              onNodeDragStop={onNodeDragStop}\n              nodeTypes={componentTypes}\n              edgeTypes={edgeTypes}\n              defaultPosition={[flowPosition.x, flowPosition.y]}\n              defaultZoom={flowPosition.zoom}\n              onMoveEnd={onMoveEnd}\n            >\n              <ToolBar {...props} />\n              <Controls />\n            </ReactFlow>\n          </div>\n        </ReactFlowProvider>\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nexport const selectRightDrawerIsOpen = (state: RootState) =>\n  state.rightDrawer.open\n\nexport const selectRightDrawerMode = (state: RootState) =>\n  state.rightDrawer.mode\n\nexport const selectRightDrawerCurrentNodeId = (state: RootState) =>\n  state.rightDrawer.currendNodeId\n","import { ParamMap } from 'store/utils/param/ParamType'\n\nexport const ALGORITHM_NODE_SLICE_NAME = 'algorithmNode'\n\nexport type AlgorithmNode = {\n  [nodeId: string]: AlgrithmNodeType\n}\n\ntype AlgrithmNodeType = {\n  functionPath: string\n  name: string\n  params: ParamMap | null\n  isUpdated: boolean\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'store/utils/param/ParamType'\nimport { ALGORITHM_NODE_SLICE_NAME } from './AlgorithmNodeType'\n\nexport const getAlgoParams = createAsyncThunk<\n  ParamDTO,\n  { nodeId: string; algoName: string }\n>(\n  `${ALGORITHM_NODE_SLICE_NAME}/getAlgoParams`,\n  async ({ algoName }, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await axios.get(`${BASE_URL}/params/${algoName}`)\n      return response.data\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\n\nimport { convertToParamMap, getChildParam } from 'store/utils/param/ParamUtils'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { getAlgoParams } from './AlgorithmNodeActions'\nimport { ALGORITHM_NODE_SLICE_NAME, AlgorithmNode } from './AlgorithmNodeType'\nimport { isAlgorithmNodePostData } from 'api/run/RunUtils'\nimport { run, runByCurrentUid } from '../Pipeline/PipelineActions'\nimport { addAlgorithmNode } from '../FlowElement/FlowElementActions'\n\nconst initialState: AlgorithmNode = {}\n\nexport const algorithmNodeSlice = createSlice({\n  name: ALGORITHM_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        // paramKey: string\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { nodeId, path, newValue } = action.payload\n      const param = state[nodeId].params\n      if (param != null) {\n        const target = getChildParam(path, param)\n        if (target != null) {\n          target.value = newValue\n          state[nodeId].isUpdated = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAlgoParams.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        state[nodeId].params = convertToParamMap(action.payload)\n      })\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        const { node, functionPath, name } = action.meta.arg\n        const params = action.payload\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          state[node.id] = {\n            functionPath,\n            name,\n            params: convertToParamMap(params),\n            isUpdated: false,\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: AlgorithmNode = {}\n        action.payload.nodeList\n          .filter(isAlgorithmNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              newState[node.id] = {\n                name: node.data.label,\n                functionPath: node.data.path,\n                params: node.data.param,\n                isUpdated: false,\n              }\n            }\n          })\n        return newState\n      })\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          runPostData.nodeList\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              state[node.id].isUpdated = false\n            })\n        },\n      )\n  },\n})\n\nexport const { updateParam } = algorithmNodeSlice.actions\nexport default algorithmNodeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Typography from '@mui/material/Typography'\n\nimport {\n  selectAlgorithmName,\n  selectAlgorithmParamsExit,\n  selectAlgorithmParamsKeyList,\n  selectAlgorithmParamsValue,\n  selectAlgorithmParam,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { updateParam } from 'store/slice/AlgorithmNode/AlgorithmNodeSlice'\nimport { getAlgoParams } from 'store/slice/AlgorithmNode/AlgorithmNodeActions'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from '../ParamFormItemCreator'\nimport { ParamFormContext } from './RightDrawer'\n\nexport const AlgorithmParamForm = React.memo(() => {\n  const nodeId = React.useContext(ParamFormContext)\n  const dispatch = useDispatch()\n  const algoName = useSelector(selectAlgorithmName(nodeId))\n  const algoParamIsLoaded = useSelector(selectAlgorithmParamsExit(nodeId))\n  const paramKeyList = useSelector(\n    selectAlgorithmParamsKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (!algoParamIsLoaded) {\n      dispatch(getAlgoParams({ nodeId, algoName }))\n    }\n  }, [dispatch, nodeId, algoName, algoParamIsLoaded])\n  return (\n    <div style={{ padding: 8 }}>\n      <Typography variant=\"h5\">{algoName}</Typography>\n      <div style={{ paddingLeft: 8 }}>\n        {paramKeyList.map((paramKey) => (\n          <ParamItem key={paramKey} paramKey={paramKey} />\n        ))}\n      </div>\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const nodeId = React.useContext(ParamFormContext)\n  const Component = createParamFormItemComponent({\n    paramSelector: (paramKey) => selectAlgorithmParam(nodeId, paramKey),\n    paramValueSelector: (path) => selectAlgorithmParamsValue(nodeId, path),\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ nodeId, path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Divider from '@mui/material/Divider'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport Box from '@mui/material/Box'\nimport {\n  selectRightDrawerCurrentNodeId,\n  selectRightDrawerIsOpen,\n  selectRightDrawerMode,\n} from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport {\n  closeRightDrawer,\n  RIGHT_DRAWER_MODE,\n} from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { NWBSettingContents } from './NWB'\nimport { RootState } from 'store/store'\nimport { AlgorithmParamForm } from './AlgorithmParamForm'\nimport { SnakemakeContents } from './Snakemake'\n\nconst RightDrawer: React.FC = () => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(closeRightDrawer())\n  const title = useSelector((state: RootState) => {\n    const mode = selectRightDrawerMode(state)\n    switch (mode) {\n      case RIGHT_DRAWER_MODE.NWB:\n        return 'NWB Setting'\n      case RIGHT_DRAWER_MODE.PARAM_FORM:\n        return 'Param From'\n      case RIGHT_DRAWER_MODE.SNAKEMAKE:\n        return 'Snakemake'\n      default:\n        return 'none'\n    }\n  })\n  return (\n    <StyledDrawer open={open} anchor=\"right\" variant=\"persistent\">\n      <Toolbar />\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton color=\"inherit\" onClick={onClick} size=\"large\">\n          <ChevronRightIcon />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Box>\n      <Divider />\n      <MainContents>\n        <Contents />\n      </MainContents>\n    </StyledDrawer>\n  )\n}\n\nconst Contents: React.FC = () => {\n  const mode = useSelector(selectRightDrawerMode)\n  switch (mode) {\n    case RIGHT_DRAWER_MODE.NWB:\n      return <NWBSettingContents />\n    case RIGHT_DRAWER_MODE.PARAM_FORM:\n      return <ParamFormConetent />\n    case RIGHT_DRAWER_MODE.SNAKEMAKE:\n      return <SnakemakeContents />\n    default:\n      return null\n  }\n}\n\n/**\n * nodeId\n */\nexport const ParamFormContext = React.createContext<string>('')\n\nconst ParamFormConetent: React.FC = () => {\n  const nodeId = useSelector(selectRightDrawerCurrentNodeId)\n  if (nodeId != null) {\n    return (\n      <ParamFormContext.Provider value={nodeId}>\n        <AlgorithmParamForm />\n      </ParamFormContext.Provider>\n    )\n  } else {\n    return null\n  }\n}\n\nexport const rightDrawerWidth = 320\n\nconst StyledDrawer = styled(Drawer)({\n  width: rightDrawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: rightDrawerWidth,\n  },\n})\n\nconst MainContents = styled('main')({\n  height: '100%',\n})\n\nexport default RightDrawer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport { default as MuiToolbar } from '@mui/material/Toolbar'\nimport { styled } from '@mui/material/styles'\nimport { AlgorithmTreeView } from './TreeView'\nimport { ReactFlowComponent } from './ReactFlowComponent'\nimport RightDrawer, { rightDrawerWidth } from './RightDrawer'\nimport { selectRightDrawerIsOpen } from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\n\nconst FlowChart = React.memo<UseRunPipelineReturnType>((props) => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  return (\n    <RootDiv>\n      <StyledDrawer variant=\"permanent\">\n        <MuiToolbar />\n        <DrawerContents>\n          <AlgorithmTreeView />\n        </DrawerContents>\n      </StyledDrawer>\n\n      <MainContents open={open}>\n        <MuiToolbar />\n        <ReactFlowComponent {...props} />\n      </MainContents>\n      <RightDrawer />\n    </RootDiv>\n  )\n})\n\nexport const drawerWidth = 240\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n})\n\nconst StyledDrawer = styled(Drawer)({\n  width: drawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n})\n\nconst DrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')<{ open: boolean }>(\n  ({ theme }) => ({\n    flexDirection: 'column',\n    flexGrow: 1,\n    height: '90vh',\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -rightDrawerWidth,\n  }),\n  ({ open, theme }) =>\n    open\n      ? {\n          transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n          marginRight: 0,\n        }\n      : undefined,\n)\n\nexport default FlowChart\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\n\nimport {\n  MultiPlotItem,\n  HeatMapItem,\n  ImageItem,\n  CsvItem,\n  TimeSeriesItem,\n  RoiItem,\n  ScatterItem,\n  VisualaizeItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  BarItem,\n  HDF5Item,\n  HTMLItem,\n} from './VisualizeItemType'\nimport {\n  isMultiPlotItem,\n  isDisplayDataItem,\n  isHeatMapItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isCsvItem,\n  isScatterItem,\n} from './VisualizeItemUtils'\n\nexport const initialState: VisualaizeItem = {\n  items: {},\n  selectedItemId: null,\n}\nconst displayDataCommonInitialValue = {\n  itemType: VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA,\n  filePath: null,\n  nodeId: null,\n}\nconst imageItemInitialValue: ImageItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.IMAGE,\n  startIndex: 1,\n  endIndex: 10,\n  showticklabels: false,\n  showline: true,\n  zsmooth: 'best',\n  showgrid: false,\n  showscale: false,\n  colors: [\n    { rgb: `rgb(0, 0, 0)`, offset: '0' },\n    { rgb: `rgb(255, 255, 255)`, offset: '1.0' },\n  ],\n  activeIndex: 0,\n  roiItem: null,\n  roiAlpha: 1.0,\n}\nconst timeSeriesItemInitialValue: TimeSeriesItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.TIME_SERIES,\n  offset: false,\n  span: 3,\n  showgrid: true,\n  showline: true,\n  showticklabels: true,\n  zeroline: false,\n  xrange: {\n    left: undefined,\n    right: undefined,\n  },\n  maxIndex: 0,\n  displayNumbers: [0],\n  checkedList: [],\n}\nconst heatMapItemInitialValue: HeatMapItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HEAT_MAP,\n  showscale: true,\n  colors: [\n    { rgb: `rgb(0, 0, 255)`, offset: '0' },\n    { rgb: `rgb(200, 200, 200)`, offset: '0.5' },\n    { rgb: `rgb(255, 0, 0)`, offset: '1.0' },\n  ],\n}\nconst csvItemInitialValue: CsvItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.CSV,\n  setColumn: null,\n  setIndex: false,\n  transpose: false,\n}\nconst roiItemInitialValue: RoiItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.ROI,\n}\nconst scatterItemInitialValue: ScatterItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.SCATTER,\n  xIndex: 0,\n  yIndex: 1,\n}\nconst barItemInitialValue: BarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BAR,\n}\nconst hdf5ItemInitialValue: HDF5Item = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HDF5,\n}\nconst htmlItemInitialValue: HTMLItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HTML,\n}\n\nfunction getDisplayDataItemInitialValue(dataType: DATA_TYPE) {\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return imageItemInitialValue\n    case DATA_TYPE_SET.HEAT_MAP:\n      return heatMapItemInitialValue\n    case DATA_TYPE_SET.TIME_SERIES:\n      return timeSeriesItemInitialValue\n    case DATA_TYPE_SET.CSV:\n      return csvItemInitialValue\n    case DATA_TYPE_SET.ROI:\n      return roiItemInitialValue\n    case DATA_TYPE_SET.SCATTER:\n      return scatterItemInitialValue\n    case DATA_TYPE_SET.BAR:\n      return barItemInitialValue\n    case DATA_TYPE_SET.HDF5:\n      return hdf5ItemInitialValue\n    case DATA_TYPE_SET.HTML:\n      return htmlItemInitialValue\n  }\n}\n\nconst MultiPlotItemInitialValue: MultiPlotItem = {\n  itemType: VISUALIZE_ITEM_TYPE_SET.MULTI_PLOT,\n  imageItem: imageItemInitialValue,\n  timeSeriesItem: timeSeriesItemInitialValue,\n  heatMapItem: heatMapItemInitialValue,\n}\nexport const visualaizeItemSlice = createSlice({\n  name: 'visualaizeItem',\n  initialState,\n  reducers: {\n    deleteVisualizeItem: (state, action: PayloadAction<number>) => {\n      const itemId = action.payload\n      delete state.items[itemId]\n      if (itemId === state.selectedItemId) {\n        state.selectedItemId = null\n      }\n    },\n    addInitialItem: (state) => {\n      const nextId = getMaxItemId(state) + 1\n      state.items[nextId] = getDisplayDataItemInitialValue(DATA_TYPE_SET.IMAGE)\n      state.selectedItemId = nextId\n    },\n    selectItem: (state, action: PayloadAction<number>) => {\n      state.selectedItemId = action.payload\n    },\n    setRoiItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isMultiPlotItem(targetItem)) {\n        if (targetItem.imageItem.roiItem != null) {\n          targetItem.imageItem.roiItem.filePath = filePath\n          targetItem.imageItem.roiItem.nodeId = nodeId\n        } else {\n          targetItem.imageItem.roiItem = {\n            ...roiItemInitialValue,\n            filePath,\n            nodeId,\n          }\n        }\n      } else if (isImageItem(targetItem)) {\n        if (targetItem.roiItem != null) {\n          targetItem.roiItem.filePath = filePath\n          targetItem.roiItem.nodeId = nodeId\n        } else {\n          targetItem.roiItem = {\n            ...roiItemInitialValue,\n            filePath,\n            nodeId,\n          }\n        }\n      }\n    },\n    setFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n        dataType?: string\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId, dataType } = action.payload\n      const targetItem = state.items[itemId]\n      if (isMultiPlotItem(targetItem)) {\n        if (dataType === DATA_TYPE_SET.IMAGE) {\n          targetItem.imageItem.filePath = filePath\n          targetItem.imageItem.nodeId = nodeId\n        } else if (dataType === DATA_TYPE_SET.TIME_SERIES) {\n          targetItem.timeSeriesItem.filePath = filePath\n          targetItem.timeSeriesItem.nodeId = nodeId\n        } else if (dataType === DATA_TYPE_SET.HEAT_MAP) {\n          targetItem.heatMapItem.filePath = filePath\n          targetItem.heatMapItem.nodeId = nodeId\n        }\n      } else if (isDisplayDataItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      } else {\n        throw new Error('error')\n      }\n    },\n    setImageItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isMultiPlotItem(targetItem)) {\n        targetItem.imageItem.filePath = filePath\n        targetItem.imageItem.nodeId = nodeId\n      } else if (isImageItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setTimeSeriesItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isMultiPlotItem(targetItem)) {\n        targetItem.timeSeriesItem.filePath = filePath\n        targetItem.timeSeriesItem.nodeId = nodeId\n      } else if (isTimeSeriesItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setHeatMapItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isMultiPlotItem(targetItem)) {\n        targetItem.heatMapItem.filePath = filePath\n        targetItem.heatMapItem.nodeId = nodeId\n      } else if (isHeatMapItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setDisplayDataPath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n        dataType?: DATA_TYPE\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId, dataType } = action.payload\n      const targetItem = state.items[itemId]\n      if (isMultiPlotItem(targetItem)) {\n        if (dataType != null && targetItem.imageItem.dataType !== dataType) {\n          state.items[itemId] = {\n            ...getDisplayDataItemInitialValue(dataType),\n            filePath,\n            nodeId,\n          }\n        } else {\n          targetItem.imageItem.filePath = filePath\n          targetItem.imageItem.nodeId = nodeId\n        }\n      } else if (isDisplayDataItem(targetItem)) {\n        if (dataType != null && targetItem.dataType !== dataType) {\n          state.items[itemId] = {\n            ...getDisplayDataItemInitialValue(dataType),\n            filePath,\n            nodeId,\n          }\n        } else {\n          targetItem.filePath = filePath\n          targetItem.nodeId = nodeId\n        }\n      } else {\n        throw new Error('invalid VisualaizeItemType')\n      }\n    },\n    setItemType: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        type: typeof VISUALIZE_ITEM_TYPE_SET.MULTI_PLOT | DATA_TYPE\n      }>,\n    ) => {\n      const { itemId, type } = action.payload\n      if (type === VISUALIZE_ITEM_TYPE_SET.MULTI_PLOT) {\n        state.items[itemId] = MultiPlotItemInitialValue\n      } else {\n        state.items[itemId] = getDisplayDataItemInitialValue(type)\n      }\n    },\n    toggleItemTypeMultiPlot: (state, action: PayloadAction<number>) => {\n      const itemId = action.payload\n      if (state.items[itemId].itemType === VISUALIZE_ITEM_TYPE_SET.MULTI_PLOT) {\n        state.items[itemId] = {\n          ...getDisplayDataItemInitialValue(DATA_TYPE_SET.IMAGE), // FIXME dataTypeの型をNullableに変更して影響箇所も修正する\n        }\n      } else {\n        state.items[itemId] = MultiPlotItemInitialValue\n      }\n    },\n    resetImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex?: number\n        endIndex?: number\n      }>,\n    ) => {\n      const { itemId, startIndex, endIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex = 0\n      } else if (isMultiPlotItem(targetItem)) {\n        targetItem.imageItem.activeIndex = 0\n        if (startIndex != null) {\n          targetItem.imageItem.startIndex = startIndex\n        }\n        if (endIndex != null) {\n          targetItem.imageItem.endIndex = endIndex\n        }\n      }\n    },\n    incrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex++\n      } else if (isMultiPlotItem(targetItem)) {\n        targetItem.imageItem.activeIndex++\n      }\n    },\n    decrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex--\n      } else if (isMultiPlotItem(targetItem)) {\n        targetItem.imageItem.activeIndex--\n      }\n    },\n    setImageItemShowticklabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      } else if (isMultiPlotItem(targetItem)) {\n        targetItem.imageItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setImageItemZsmooth: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zsmooth: string | boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.zsmooth = action.payload.zsmooth\n      } else if (isMultiPlotItem(targetItem)) {\n        targetItem.imageItem.zsmooth = action.payload.zsmooth\n      }\n    },\n    setImageItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      } else if (isMultiPlotItem(targetItem)) {\n        targetItem.imageItem.showline = action.payload.showline\n      }\n    },\n    setImageItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      } else if (isMultiPlotItem(targetItem)) {\n        targetItem.imageItem.showgrid = action.payload.showgrid\n      }\n    },\n    setImageItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      } else if (isMultiPlotItem(targetItem)) {\n        targetItem.imageItem.showscale = action.payload.showscale\n      }\n    },\n    setImageItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      } else if (isMultiPlotItem(targetItem)) {\n        targetItem.imageItem.colors = action.payload.colors\n      }\n    },\n    setImageItemStartIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.startIndex = action.payload.startIndex\n      } else if (isMultiPlotItem(targetItem)) {\n        targetItem.imageItem.startIndex = action.payload.startIndex\n      }\n    },\n    setImageItemEndIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        endIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.endIndex = action.payload.endIndex\n      } else if (isMultiPlotItem(targetItem)) {\n        targetItem.imageItem.endIndex = action.payload.endIndex\n      }\n    },\n    setImageItemRoiAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        roiAlpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.roiAlpha = action.payload.roiAlpha\n      } else if (isMultiPlotItem(targetItem)) {\n        targetItem.imageItem.roiAlpha = action.payload.roiAlpha\n      }\n    },\n    setTimeSeriesItemOffset: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        offset: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.offset = action.payload.offset\n      } else if (isMultiPlotItem(targetItem)) {\n        targetItem.timeSeriesItem.offset = action.payload.offset\n      }\n    },\n    setTimeSeriesItemSpan: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        span: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.span = action.payload.span\n      } else if (isMultiPlotItem(targetItem)) {\n        targetItem.timeSeriesItem.span = action.payload.span\n      }\n    },\n    setTimeSeriesItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      } else if (isMultiPlotItem(targetItem)) {\n        targetItem.timeSeriesItem.showgrid = action.payload.showgrid\n      }\n    },\n    setTimeSeriesItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      } else if (isMultiPlotItem(targetItem)) {\n        targetItem.timeSeriesItem.showline = action.payload.showline\n      }\n    },\n    setTimeSeriesItemShowTickLabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      } else if (isMultiPlotItem(targetItem)) {\n        targetItem.timeSeriesItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setTimeSeriesItemZeroLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zeroline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.zeroline = action.payload.zeroline\n      } else if (isMultiPlotItem(targetItem)) {\n        targetItem.timeSeriesItem.zeroline = action.payload.zeroline\n      }\n    },\n    setTimeSeriesItemXrangeLeft: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        left: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.left = action.payload.left\n      } else if (isMultiPlotItem(targetItem)) {\n        targetItem.timeSeriesItem.xrange.left = action.payload.left\n      }\n    },\n    setTimeSeriesItemXrangeRight: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        right: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.right = action.payload.right\n      } else if (isMultiPlotItem(targetItem)) {\n        targetItem.timeSeriesItem.xrange.right = action.payload.right\n      }\n    },\n    setTimeSeriesItemDisplayNumbers: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        displayNumbers: number[]\n      }>,\n    ) => {\n      const { itemId, displayNumbers } = action.payload\n      const targetItem = state.items[itemId]\n      if (isMultiPlotItem(targetItem)) {\n        targetItem.timeSeriesItem.displayNumbers = displayNumbers\n      } else if (isTimeSeriesItem(targetItem)) {\n        targetItem.displayNumbers = displayNumbers\n      }\n    },\n    setTimeSeriesItemCheckedList: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        checkedList: boolean[]\n      }>,\n    ) => {\n      const { itemId, checkedList } = action.payload\n      const targetItem = state.items[itemId]\n      if (isMultiPlotItem(targetItem)) {\n        targetItem.timeSeriesItem.checkedList = checkedList\n      } else if (isTimeSeriesItem(targetItem)) {\n        targetItem.checkedList = checkedList\n      }\n    },\n    setTimeSeriesItemMaxIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        maxIndex: number\n      }>,\n    ) => {\n      const { itemId, maxIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isMultiPlotItem(targetItem)) {\n        targetItem.timeSeriesItem.maxIndex = maxIndex\n      } else if (isTimeSeriesItem(targetItem)) {\n        targetItem.maxIndex = maxIndex\n      }\n    },\n    setHeatMapItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      } else if (isMultiPlotItem(targetItem)) {\n        targetItem.heatMapItem.showscale = action.payload.showscale\n      }\n    },\n    setHeatMapItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      } else if (isMultiPlotItem(targetItem)) {\n        targetItem.heatMapItem.colors = action.payload.colors\n      }\n    },\n    setCsvItemTranspose: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        transpose: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.transpose = action.payload.transpose\n      }\n    },\n    setCsvItemSetColumn: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setColumn: number | null\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setColumn = action.payload.setColumn\n      }\n    },\n    setCsvItemSetIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setIndex: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setIndex = action.payload.setIndex\n      }\n    },\n    setScatterItemXIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        xIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.xIndex = action.payload.xIndex\n      }\n    },\n    setScatterItemYIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        yIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.yIndex = action.payload.yIndex\n      }\n    },\n  },\n})\n\nfunction getMaxItemId(state: VisualaizeItem) {\n  const idList = Object.keys(state.items).map((key) => Number(key))\n  const maxId = idList.length > 0 ? idList.reduce((a, b) => Math.max(a, b)) : 0\n  return maxId\n}\n\nexport const {\n  addInitialItem,\n  deleteVisualizeItem,\n  selectItem,\n  setItemType,\n  toggleItemTypeMultiPlot,\n  setFilePath,\n  setHeatMapItemFilePath,\n  setImageItemFilePath,\n  setTimeSeriesItemFilePath,\n  setRoiItemFilePath,\n  setDisplayDataPath,\n  resetImageActiveIndex,\n  incrementImageActiveIndex,\n  decrementImageActiveIndex,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowLine,\n  setImageItemShowGrid,\n  setImageItemShowScale,\n  setImageItemColors,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemRoiAlpha,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemDisplayNumbers,\n  setTimeSeriesItemCheckedList,\n  setTimeSeriesItemMaxIndex,\n  setHeatMapItemShowScale,\n  setHeatMapItemColors,\n  setCsvItemTranspose,\n  setCsvItemSetColumn,\n  setCsvItemSetIndex,\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} = visualaizeItemSlice.actions\n\nexport default visualaizeItemSlice.reducer\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport AddIcon from '@mui/icons-material/Add'\nimport Button from '@mui/material/Button'\nimport { addInitialItem } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const VisualizeItemAddButton: React.FC = () => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(addInitialItem())\n  }\n  return (\n    <StyledPaper elevation={1} variant=\"outlined\">\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height=\"100%\"\n      >\n        <StyledButton onClick={onClick}>\n          <AddIcon fontSize=\"large\" color=\"primary\" />\n        </StyledButton>\n      </Box>\n    </StyledPaper>\n  )\n}\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  width: 260,\n  height: 255,\n  border: 'dashed',\n  borderWidth: 2,\n  borderColor: theme.palette.divider,\n  margin: theme.spacing(1),\n}))\n\nconst StyledButton = styled(Button)({\n  width: '100%',\n  height: '100%',\n})\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n  DisplayData,\n  DISPLAY_DATA_SLICE_NAME,\n} from './DisplayDataType'\nimport {\n  getCsvData,\n  getHeatMapData,\n  getImageData,\n  getTimeSeriesDataById,\n  getTimeSeriesAllData,\n  getRoiData,\n  getScatterData,\n  getBarData,\n  getHTMLData,\n} from './DisplayDataActions'\n\nconst initialState: DisplayData = {\n  timeSeries: {},\n  heatMap: {},\n  image: {},\n  csv: {},\n  roi: {},\n  scatter: {},\n  bar: {},\n  hdf5: {},\n  html: {},\n}\n\nexport const displayDataSlice = createSlice({\n  name: DISPLAY_DATA_SLICE_NAME,\n  initialState,\n  reducers: {\n    deleteDisplayItem: (\n      state,\n      action: PayloadAction<{\n        dataType: DATA_TYPE\n        filePath: string | null\n      }>,\n    ) => {\n      const { dataType, filePath } = action.payload\n      if (filePath !== null) {\n        if (dataType === DATA_TYPE_SET.IMAGE) {\n          delete state.image[filePath]\n        } else if (dataType === DATA_TYPE_SET.TIME_SERIES) {\n          delete state.timeSeries[filePath]\n        } else if (dataType === DATA_TYPE_SET.CSV) {\n          delete state.csv[filePath]\n        } else if (dataType === DATA_TYPE_SET.HEAT_MAP) {\n          delete state.heatMap[filePath]\n        } else if (dataType === DATA_TYPE_SET.ROI) {\n          delete state.roi[filePath]\n        } else if (dataType === DATA_TYPE_SET.SCATTER) {\n          delete state.scatter[filePath]\n        } else if (dataType === DATA_TYPE_SET.BAR) {\n          delete state.bar[filePath]\n        } else if (dataType === DATA_TYPE_SET.HTML) {\n          delete state.html[filePath]\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getTimeSeriesDataById.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesDataById.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesDataById.fulfilled, (state, action) => {\n        const { path, index } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n        if (Object.keys(state.timeSeries[path].data).length === 0) {\n          state.timeSeries[path].xrange = action.payload.xrange\n          state.timeSeries[path].data = action.payload.data\n          state.timeSeries[path].std = action.payload.std\n        } else {\n          state.timeSeries[path].data[index] = action.payload.data[index]\n          console.log(action.payload.std)\n          if (action.payload.std[index] !== undefined) {\n            state.timeSeries[path].std[index] = action.payload.std[index]\n          }\n        }\n      })\n      .addCase(getTimeSeriesAllData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesAllData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesAllData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        if (action.payload.std !== undefined) {\n          state.timeSeries[path].std = action.payload.std\n        }\n      })\n      .addCase(getHeatMapData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getImageData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getImageData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getCsvData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getRoiData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getRoiData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getRoiData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getScatterData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getBarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getBarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHTMLData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n  },\n})\n\nexport const { deleteDisplayItem } = displayDataSlice.actions\n\nexport default displayDataSlice.reducer\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport { deleteVisualizeItem } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  selectVisualizeDataFilePath,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { deleteDisplayItem } from 'store/slice/DisplayData/DisplayDataSlice'\n\nexport const DisplayItemDeleteButton = React.memo<{ itemId: number }>(\n  ({ itemId }) => {\n    const dispatch = useDispatch()\n\n    const dataType = useSelector(selectVisualizeDataType(itemId))\n    const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n\n    const onClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n      e.stopPropagation() // 親divのonClickを反応させないため\n      dispatch(deleteVisualizeItem(itemId))\n      // visualize Itemで同じpathのデータ個数を調べて、1だったら、displayも削除\n      dispatch(deleteDisplayItem({ dataType, filePath }))\n    }\n    return (\n      <IconButton onClick={onClick} size=\"large\">\n        <CloseIcon />\n      </IconButton>\n    )\n  },\n)\n","import React, { useEffect } from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  Button,\n  LinearProgress,\n  MobileStepper,\n  Typography,\n  useTheme,\n} from '@mui/material'\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport { DisplayDataContext } from '../DataContext'\n\nimport {\n  selectImageDataError,\n  selectImageDataIsInitialized,\n  selectImageDataIsPending,\n  selectImageDataIsFulfilled,\n  selectActiveImageData,\n  selectRoiData,\n  selectImageDataEndIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getImageData,\n  getRoiData,\n  getTimeSeriesDataById,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowLine,\n  selectImageItemShowGrid,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemActiveIndex,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectRoiItemFilePath,\n  selectMultiPlotTimeSeriesItemFilepath,\n  selectMultiPlotTimeSeriesItemDisplayNumbers,\n  selectRoiItemIndex,\n  selectImageItemRoiAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  decrementImageActiveIndex,\n  incrementImageActiveIndex,\n  setTimeSeriesItemDisplayNumbers,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { RootState } from 'store/store'\nimport { Datum, LayoutAxis, PlotData } from 'plotly.js'\nimport createColormap from 'colormap'\nimport GetAppIcon from '@mui/icons-material/GetApp'\n\nexport const ImagePlot = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const isPending = useSelector(selectImageDataIsPending(path))\n  const isInitialized = useSelector(selectImageDataIsInitialized(path))\n  const isFulfilled = useSelector(selectImageDataIsFulfilled(path))\n  const error = useSelector(selectImageDataError(path))\n\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(\n        getImageData({\n          path,\n          startIndex: startIndex ?? 1,\n          endIndex: endIndex ?? 10,\n        }),\n      )\n    }\n    if (roiFilePath != null) {\n      dispatch(getRoiData({ path: roiFilePath }))\n    }\n  }, [dispatch, isInitialized, path, startIndex, endIndex, roiFilePath])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ImagePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ImagePlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const itemStartIndex = useSelector(selectImageItemStartIndex(itemId))\n  const itemEndIndex = useSelector(selectImageItemEndIndex(itemId))\n  const itemSize = itemEndIndex - itemStartIndex\n  const maxSize = useSelector(selectImageDataEndIndex(path))\n  const activeIndex = useSelector(selectImageItemActiveIndex(itemId))\n  const dispatch = useDispatch()\n  const handleNext = () => dispatch(incrementImageActiveIndex({ itemId }))\n  const handleBack = () => dispatch(decrementImageActiveIndex({ itemId }))\n  const theme = useTheme()\n  return (\n    <>\n      <MobileStepper\n        steps={itemSize - maxSize ? maxSize + 1 : itemEndIndex}\n        position=\"static\"\n        variant=\"text\"\n        activeStep={activeIndex + itemStartIndex - 1}\n        nextButton={\n          <Button\n            size=\"small\"\n            onClick={handleNext}\n            disabled={activeIndex === (maxSize ?? 0)}\n          >\n            <Typography>Next</Typography>\n            {theme.direction === 'rtl' ? (\n              <KeyboardArrowLeft />\n            ) : (\n              <KeyboardArrowRight />\n            )}\n          </Button>\n        }\n        backButton={\n          <Button\n            size=\"small\"\n            onClick={handleBack}\n            disabled={activeIndex === 0}\n          >\n            {theme.direction === 'rtl' ? (\n              <KeyboardArrowRight />\n            ) : (\n              <KeyboardArrowLeft />\n            )}\n            <Typography>Back</Typography>\n          </Button>\n        }\n      />\n      {/* <div style={{ display: \"flex\", justifyContent: \"center\" }}> */}\n      <ImagePlotChart activeIndex={activeIndex} />\n      {/* </div> */}\n    </>\n  )\n})\n\nconst ImagePlotChart = React.memo<{\n  activeIndex: number\n}>(({ activeIndex }) => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(\n    selectActiveImageData(path, activeIndex),\n    imageDataEqualtyFn,\n  )\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const roiData = useSelector(\n    (state: RootState) =>\n      roiFilePath != null ? selectRoiData(roiFilePath)(state) : [],\n    imageDataEqualtyFn,\n  )\n\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const colorscale = useSelector(selectImageItemColors(itemId))\n\n  const timeDataMaxIndex = useSelector(selectRoiItemIndex(itemId, roiFilePath))\n\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n\n  const colorscaleRoi = createColormap({\n    colormap: 'jet',\n    nshades: 100, //timeDataMaxIndex >= 6 ? timeDataMaxIndex : 6,\n    format: 'rgba',\n    alpha: 1.0,\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'images',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          return [offset, value.rgb]\n        }),\n        hoverongaps: false,\n        showscale: showscale,\n        zsmooth: zsmooth, // ['best', 'fast', false]\n        // showlegend: true,\n      },\n      {\n        z: roiData,\n        type: 'heatmap',\n        name: 'roi',\n        hovertemplate: 'cell id: %{z}',\n        colorscale: [...Array(timeDataMaxIndex)].map((_, i) => {\n          const new_i = Math.floor((i % 10) * 10 + i / 10)\n          const offset = i / (timeDataMaxIndex - 1)\n          const rgba = colorscaleRoi[new_i]\n          const hex = rgba2hex(rgba, roiAlpha)\n          return [offset, hex]\n        }),\n        zmin: 1,\n        zmax: timeDataMaxIndex,\n        hoverongaps: false,\n        zsmooth: false,\n        showscale: false,\n      },\n    ],\n    [\n      imageData,\n      roiData,\n      zsmooth,\n      showscale,\n      colorscale,\n      colorscaleRoi,\n      timeDataMaxIndex,\n      roiAlpha,\n    ],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      title: path.split('/').reverse()[0],\n      // modebar: {\n      //   add: \"select\",\n      // },\n      // width: 600,\n      // height: 600,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan', //'select',\n      xaxis: {\n        autorange: true,\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n        showticklabels: showticklabels,\n      },\n      yaxis: {\n        automargin: true,\n        autorange: 'reversed',\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n        showticklabels: showticklabels, // todo\n      },\n    }),\n    [path, showgrid, showline, showticklabels],\n  )\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n  }\n\n  const ref = React.useRef<HTMLDivElement>(null)\n  const plotlyHeight = ref.current?.getBoundingClientRect().height\n\n  useEffect(() => {\n    const height =\n      ref.current?.getElementsByClassName('main-svg')[0].clientHeight\n    const plotContainer = (\n      ref.current?.getElementsByClassName(\n        'plot-container',\n      ) as HTMLCollectionOf<HTMLElement>\n    )[0]\n\n    if (height !== undefined && plotContainer !== undefined) {\n      plotContainer.style.height = `${height}px`\n    }\n  }, [plotlyHeight, activeIndex])\n\n  const dispatch = useDispatch()\n  const timeSeriesFilePath = useSelector(\n    selectMultiPlotTimeSeriesItemFilepath(itemId),\n  )\n  const displayNumbers = useSelector(\n    selectMultiPlotTimeSeriesItemDisplayNumbers(itemId),\n  )\n\n  const onClick = (event: any) => {\n    const points: PlotDatum = event.points[0]\n    if (\n      timeSeriesFilePath !== null &&\n      displayNumbers !== null &&\n      points.curveNumber >= 1 &&\n      !displayNumbers.includes(points.z - 1)\n    ) {\n      const newValue = [...displayNumbers, points.z - 1]\n      dispatch(\n        setTimeSeriesItemDisplayNumbers({\n          itemId,\n          displayNumbers: newValue,\n        }),\n      )\n      dispatch(\n        getTimeSeriesDataById({\n          path: timeSeriesFilePath,\n          index: points.z - 1,\n        }),\n      )\n    }\n  }\n\n  const onSelecting = (event: any) => {\n    if (event.range) {\n      const x1 = event.range.x[0]\n      const x2 = event.range.x[1]\n      const y1 = event.range.y[0]\n      const y2 = event.range.y[1]\n\n      const newArray = roiData\n        .slice(y1, y2)\n        .map((arr) => arr.slice(x1, x2).filter((v) => v))\n        .flat()\n        .filter((v, idx, self) => {\n          return self.indexOf(v) === idx\n        })\n    }\n  }\n\n  return (\n    <div ref={ref}>\n      <PlotlyChart\n        data={data}\n        layout={layout}\n        config={config}\n        onClick={onClick}\n        onSelecting={onSelecting}\n      />\n    </div>\n  )\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\ninterface PlotDatum {\n  curveNumber: number\n  data: PlotData\n  customdata: Datum\n  pointIndex: number\n  pointNumber: number\n  x: Datum\n  xaxis: LayoutAxis\n  y: Datum\n  yaxis: LayoutAxis\n  z: number\n}\n\nfunction rgba2hex(rgba: [number, number, number, number], alpha: number) {\n  const r = rgba[0]\n  const g = rgba[1]\n  const b = rgba[2]\n  const a = alpha\n\n  var outParts = [\n    r.toString(16),\n    g.toString(16),\n    b.toString(16),\n    Math.round(a * 255)\n      .toString(16)\n      .substring(0, 2),\n  ]\n\n  // Pad single-digit output values\n  outParts.forEach(function (part, i) {\n    if (part.length === 1) {\n      outParts[i] = '0' + part\n    }\n  })\n\n  return '#' + outParts.join('')\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LegendClickEvent } from 'plotly.js'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectTimeSeriesData,\n  selectTimeSeriesDataError,\n  selectTimeSeriesDataIsFulfilled,\n  selectTimeSeriesDataIsInitialized,\n  selectTimeSeriesDataIsPending,\n  selectTimeSeriesStd,\n  selectTimeSeriesXrange,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getTimeSeriesDataById } from 'store/slice/DisplayData/DisplayDataActions'\nimport { TimeSeriesData } from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectTimeSeriesItemCheckedList,\n  selectTimeSeriesItemDisplayNumbers,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setTimeSeriesItemCheckedList } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport createColormap from 'colormap'\nimport { setTimeSeriesItemDisplayNumbers } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const TimeSeriesPlot = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const displayNumbers = useSelector(selectTimeSeriesItemDisplayNumbers(itemId))\n  const isPending = useSelector(selectTimeSeriesDataIsPending(path))\n  const isInitialized = useSelector(selectTimeSeriesDataIsInitialized(path))\n  const error = useSelector(selectTimeSeriesDataError(path))\n  const isFulfilled = useSelector(selectTimeSeriesDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getTimeSeriesDataById({ path, index: 0 }))\n    }\n  }, [dispatch, isInitialized, path, displayNumbers])\n\n  if (!isInitialized) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isPending || isFulfilled) {\n    return <TimeSeriesPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst TimeSeriesPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  // 0番のデータとkeysだけをとってくる\n  const dispatch = useDispatch()\n  const timeSeriesData = useSelector(\n    selectTimeSeriesData(path),\n    timeSeriesDataEqualityFn,\n  )\n\n  const dataXrange = useSelector(selectTimeSeriesXrange(path))\n  const dataStd = useSelector(selectTimeSeriesStd(path))\n\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n  const displayNumbers = useSelector(selectTimeSeriesItemDisplayNumbers(itemId))\n  const checkedList = useSelector(selectTimeSeriesItemCheckedList(itemId))\n\n  const colorScale = createColormap({\n    colormap: 'jet',\n    nshades: 100, //maxIndex >= 6 ? maxIndex : 6,\n    format: 'hex',\n    alpha: 1,\n  })\n\n  React.useEffect(() => {\n    const keys = Object.keys(timeSeriesData)\n    if (checkedList.length === 0 && keys.length !== 0) {\n      const checkedList = keys.map((_, i) => {\n        if (i === 0) {\n          return true\n        }\n        return false\n      })\n      dispatch(\n        setTimeSeriesItemCheckedList({\n          itemId,\n          checkedList,\n        }),\n      )\n    }\n  }, [timeSeriesData, dispatch, itemId, checkedList.length])\n\n  const data = React.useMemo(() => {\n    if (timeSeriesData === null) {\n      return []\n    }\n    return Object.keys(timeSeriesData).map((key, i) => {\n      let y = Object.values(timeSeriesData[key])\n      const new_i = Math.floor((i % 10) * 10 + i / 10) % 100\n\n      if (displayNumbers.includes(i)) {\n        if (offset) {\n          const activeIdx: number = displayNumbers.findIndex(\n            (value) => value === i,\n          )\n          const mean: number = y.reduce((a, b) => a + b) / y.length\n          const std: number =\n            span *\n            Math.sqrt(y.reduce((a, b) => a + Math.pow(b - mean, 2)) / y.length)\n          return {\n            name: `(${String(parseInt(key) + 1)})`,\n            x: dataXrange,\n            y: y.map((value) => (value - mean) / std + activeIdx),\n            visible: true,\n            line: { color: colorScale[new_i] },\n            error_y: {\n              type: 'data',\n              array: null,\n              visible: true,\n            },\n          }\n        } else {\n          return {\n            name: `(${String(parseInt(key) + 1)})`,\n            x: dataXrange,\n            y: y,\n            visible: true,\n            line: { color: colorScale[new_i] },\n            error_y: {\n              type: 'data',\n              array: Object.keys(dataStd).includes(key)\n                ? Object.values(dataStd[key])\n                : null,\n              visible: true,\n            },\n          }\n        }\n      } else {\n        return {\n          name: `(${String(parseInt(key) + 1)})`,\n          x: dataXrange,\n          y: y,\n          visible: 'legendonly',\n          line: { color: colorScale[new_i] },\n          error_y: {\n            type: 'data',\n            array: Object.keys(dataStd).includes(key)\n              ? Object.values(dataStd[key])\n              : null,\n            visible: true,\n          },\n        }\n      }\n    })\n  }, [\n    timeSeriesData,\n    displayNumbers,\n    offset,\n    span,\n    colorScale,\n    dataStd,\n    dataXrange,\n  ])\n\n  const annotations = React.useMemo(() => {\n    if (data.length !== 0) {\n      return displayNumbers.map((i) => {\n        return {\n          x: Number(dataXrange[dataXrange.length - 1]) + 50,\n          y: data[i].y[dataXrange.length - 1],\n          xref: 'x',\n          yref: 'y',\n          text: `cell: ${i + 1}`,\n          arrowhead: 1,\n          ax: 0,\n          ay: -10,\n        }\n      })\n    } else {\n      return []\n    }\n  }, [data, displayNumbers, dataXrange])\n\n  const layout = React.useMemo(\n    () => ({\n      title: path.split('/').reverse()[0],\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      height: 300,\n      xaxis: {\n        range: [xrange.left, xrange.right],\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      yaxis: {\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      annotations: annotations,\n    }),\n    [path, xrange, showgrid, showline, showticklabels, zeroline, annotations],\n  )\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n  }\n\n  const onLegendClick = (event: LegendClickEvent) => {\n    const clickNumber = event.curveNumber\n\n    // set DisplayNumbers\n    if (displayNumbers.includes(clickNumber)) {\n      dispatch(\n        setTimeSeriesItemDisplayNumbers({\n          itemId,\n          displayNumbers: displayNumbers.filter(\n            (value) => value !== clickNumber,\n          ),\n        }),\n      )\n\n      dispatch(\n        setTimeSeriesItemCheckedList({\n          itemId,\n          checkedList: checkedList.map((v, i) => {\n            if (i === clickNumber) {\n              return false\n            }\n            return v\n          }),\n        }),\n      )\n    } else {\n      dispatch(\n        setTimeSeriesItemDisplayNumbers({\n          itemId,\n          displayNumbers: [...displayNumbers, clickNumber],\n        }),\n      )\n\n      dispatch(\n        setTimeSeriesItemCheckedList({\n          itemId,\n          checkedList: checkedList.map((v, i) => {\n            if (i === clickNumber) {\n              return true\n            }\n            return v\n          }),\n        }),\n      )\n\n      dispatch(getTimeSeriesDataById({ path, index: clickNumber }))\n    }\n\n    return false\n  }\n\n  const ref = React.useRef<HTMLDivElement>(null)\n  const plotlyHeight = ref.current?.getBoundingClientRect().height\n\n  useEffect(() => {\n    const height =\n      ref.current?.getElementsByClassName('main-svg')[0].clientHeight\n    const plotContainer = (\n      ref.current?.getElementsByClassName(\n        'plot-container',\n      ) as HTMLCollectionOf<HTMLElement>\n    )[0]\n\n    if (height !== undefined && plotContainer !== undefined) {\n      plotContainer.style.height = `${height}px`\n    }\n  }, [plotlyHeight])\n\n  return (\n    <div ref={ref}>\n      <PlotlyChart\n        data={data}\n        layout={layout}\n        config={config}\n        onLegendClick={onLegendClick}\n      />\n    </div>\n  )\n})\n\nfunction timeSeriesDataEqualityFn(\n  a: TimeSeriesData | undefined,\n  b: TimeSeriesData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.entries(a)\n    const bArray = Object.entries(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every(([aKey, aValue], i) => {\n          const [bKey, bValue] = bArray[i]\n          return bKey === aKey && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction nestEqualityFun(\n  a: {\n    [key: number]: number\n  },\n  b: {\n    [key: number]: number\n  },\n) {\n  const aArray = Object.entries(a)\n  const bArray = Object.entries(b)\n  return (\n    a === b ||\n    (aArray.length === bArray.length &&\n      aArray.every(([aKey, aValue], i) => {\n        const [bKey, bValue] = bArray[i]\n        return bKey === aKey && bValue === aValue\n      }))\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectHeatMapData,\n  selectHeatMapDataError,\n  selectHeatMapDataIsFulfilled,\n  selectHeatMapDataIsInitialized,\n  selectHeatMapDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHeatMapData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const HeatMapPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHeatMapDataIsPending(path))\n  const isInitialized = useSelector(selectHeatMapDataIsInitialized(path))\n  const error = useSelector(selectHeatMapDataError(path))\n  const isFulfilled = useSelector(selectHeatMapDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHeatMapData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HeatMapImple />\n  } else {\n    return null\n  }\n})\n\nconst HeatMapImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const heatMapData = useSelector(selectHeatMapData(path), heatMapDataEqualtyFn)\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const colorscale = useSelector(selectHeatMapItemColors(itemId))\n\n  const data = React.useMemo(\n    () =>\n      heatMapData != null\n        ? [\n            {\n              z: heatMapData,\n              x: heatMapData.map((_, i) => i),\n              y: heatMapData[0].map((_, i) => i),\n              type: 'heatmap',\n              name: 'heatmap',\n              colorscale: colorscale.map((value) => {\n                let offset: number = parseFloat(value.offset)\n                const offsets: number[] = colorscale.map((v) => {\n                  return parseFloat(v.offset)\n                })\n                // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n                if (offset === Math.max(...offsets)) {\n                  offset = 1.0\n                }\n                if (offset === Math.min(...offsets)) {\n                  offset = 0.0\n                }\n                return [offset, value.rgb]\n              }),\n              hoverongaps: false,\n              showlegend: true,\n              showscale: showscale,\n            },\n          ]\n        : [],\n    [heatMapData, showscale, colorscale],\n  )\n\n  const layout = {\n    title: path.split('/').reverse()[0],\n    dragmode: 'pan',\n    margin: {\n      t: 60, // top\n      l: 50, // left\n      b: 30, // bottom\n    },\n    autosize: true,\n    height: 350,\n  }\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n  }\n\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction heatMapDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport FormControl from '@mui/material/FormControl'\nimport MenuItem from '@mui/material/MenuItem'\nimport InputLabel from '@mui/material/InputLabel'\nimport FormHelperText from '@mui/material/FormHelperText'\nimport Select from '@mui/material/Select'\nimport ListSubheader from '@mui/material/ListSubheader'\n\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { RootState } from 'store/store'\nimport { selectInputNode } from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { selectNodeLabelById } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultSuccessList,\n} from 'store/slice/Pipeline/PipelineSelectors'\n\nexport const FilePathSelect: React.FC<{\n  dataType?: DATA_TYPE\n  selectedNodeId: string | null\n  selectedFilePath: string | null\n  onSelect: (nodeId: string, filePath: string, dataType: DATA_TYPE) => void\n  label?: string\n}> = ({ dataType, selectedNodeId, selectedFilePath, onSelect, label }) => {\n  const inputNodeFilePathInfoList = useSelector(\n    (state: RootState) => {\n      const inputNodes = selectInputNode(state)\n      return Object.entries(inputNodes)\n        .map(([nodeId, inputNode]) => ({\n          nodeId,\n          filePath: inputNode.selectedFilePath,\n          fileType: inputNode.fileType,\n          dataType: toDataTypeFromFileType(inputNode.fileType),\n          nodeName: selectNodeLabelById(nodeId)(state),\n        }))\n        .filter(({ filePath }) => filePath != null)\n        .filter(({ dataType: inputNodeDataType }) =>\n          dataType != null ? inputNodeDataType === dataType : true,\n        )\n    },\n    // todo 比較関数\n  )\n\n  const latestUid = useSelector(selectPipelineLatestUid)\n\n  const algorithmNodeOutputPathInfoList = useSelector((state: RootState) => {\n    if (latestUid != null) {\n      const runResult = selectPipelineNodeResultSuccessList(state)\n      return runResult.map(({ nodeId, nodeResult }) => {\n        return {\n          nodeId,\n          nodeName: selectNodeLabelById(nodeId)(state),\n          paths: Object.entries(nodeResult.outputPaths)\n            .map(([outputKey, value]) => {\n              return {\n                outputKey,\n                filePath: value.path,\n                type: value.type,\n              }\n            })\n            .filter(({ type }) =>\n              dataType != null ? type === dataType : true,\n            ),\n        }\n      })\n    } else {\n      return []\n    }\n  })\n\n  const [open, setOpen] = React.useState(false)\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const onSelectHandle = (\n    nodeId: string,\n    filePath: string,\n    dataType: DATA_TYPE,\n  ) => {\n    onSelect(nodeId, filePath, dataType)\n    handleClose()\n  }\n\n  const menuItemList: React.ReactElement[] = []\n  inputNodeFilePathInfoList.forEach((pathInfo) => {\n    menuItemList.push(\n      <MenuItem\n        value={`${pathInfo.nodeId}/${pathInfo.filePath}`}\n        onClick={() =>\n          onSelectHandle(\n            pathInfo.nodeId,\n            pathInfo.filePath ?? '',\n            pathInfo.dataType,\n          )\n        }\n        key={pathInfo.nodeId}\n      >\n        {pathInfo.nodeName}\n      </MenuItem>,\n    )\n  })\n  algorithmNodeOutputPathInfoList.forEach((pathInfo) => {\n    menuItemList.push(<ListSubheader>{pathInfo.nodeName}</ListSubheader>)\n    pathInfo.paths.forEach((outputPath, i) => {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${outputPath.filePath}`}\n          onClick={() =>\n            onSelectHandle(\n              pathInfo.nodeId,\n              outputPath.filePath,\n              outputPath.type,\n            )\n          }\n          key={`${pathInfo.nodeId}/${outputPath.filePath}`}\n        >\n          {outputPath.outputKey}\n        </MenuItem>,\n      )\n    })\n  })\n\n  return (\n    <FormControl style={{ minWidth: 150, maxWidth: 220 }}>\n      <InputLabel>{!!label ? label : 'Select Item'}</InputLabel>\n      <Select\n        value={`${selectedNodeId}/${selectedFilePath}`}\n        open={open}\n        onClose={handleClose}\n        onOpen={handleOpen}\n      >\n        {menuItemList}\n      </Select>\n      {inputNodeFilePathInfoList.length +\n        algorithmNodeOutputPathInfoList.length ===\n        0 && <FormHelperText error={true}>no data</FormHelperText>}\n    </FormControl>\n  )\n}\n\nfunction toDataTypeFromFileType(fileType: FILE_TYPE) {\n  switch (fileType) {\n    case FILE_TYPE_SET.IMAGE:\n      return DATA_TYPE_SET.IMAGE\n    case FILE_TYPE_SET.CSV:\n      return DATA_TYPE_SET.CSV\n    case FILE_TYPE_SET.HDF5:\n      return DATA_TYPE_SET.HDF5\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Paper from '@mui/material/Paper'\nimport Grid from '@mui/material/Grid'\n\nimport {\n  selectMultiPlotImageItemNodeId,\n  selectMultiPlotImageItemFilePath,\n  selectMultiPlotTimeSeriesItemNodeId,\n  selectMultiPlotTimeSeriesItemFilePath,\n  selectMultiPlotHeatMapItemNodeId,\n  selectMultiPlotHeatMapItemFilePath,\n  selectMultiPlotRoiItemNodeId,\n  selectMultiPlotRoiItemFilePath,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  setHeatMapItemFilePath,\n  setImageItemFilePath,\n  setTimeSeriesItemFilePath,\n  setRoiItemFilePath,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { ImagePlot } from './Plot/ImagePlot'\nimport { DisplayDataContext } from './DataContext'\nimport { TimeSeriesPlot } from './Plot/TimeSeriesPlot'\nimport { HeatMapPlot } from './Plot/HeatMapPlot'\nimport { FilePathSelect } from './FilePathSelect'\n\nexport const MultiPlotItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  return (\n    <>\n      <FilePathSelect\n        dataType={DATA_TYPE_SET.IMAGE}\n        selectedNodeId={useSelector(selectMultiPlotImageItemNodeId(itemId))}\n        selectedFilePath={useSelector(selectMultiPlotImageItemFilePath(itemId))}\n        onSelect={(nodeId, filePath) =>\n          dispatch(setImageItemFilePath({ itemId, nodeId, filePath }))\n        }\n        label=\"Select image\"\n      />\n      <FilePathSelect\n        dataType={DATA_TYPE_SET.TIME_SERIES}\n        selectedNodeId={useSelector(\n          selectMultiPlotTimeSeriesItemNodeId(itemId),\n        )}\n        selectedFilePath={useSelector(\n          selectMultiPlotTimeSeriesItemFilePath(itemId),\n        )}\n        onSelect={(nodeId, filePath) =>\n          dispatch(setTimeSeriesItemFilePath({ itemId, nodeId, filePath }))\n        }\n        label=\"Select timeseries\"\n      />\n      <FilePathSelect\n        dataType={DATA_TYPE_SET.HEAT_MAP}\n        selectedNodeId={useSelector(selectMultiPlotHeatMapItemNodeId(itemId))}\n        selectedFilePath={useSelector(\n          selectMultiPlotHeatMapItemFilePath(itemId),\n        )}\n        onSelect={(nodeId, filePath) =>\n          dispatch(setHeatMapItemFilePath({ itemId, nodeId, filePath }))\n        }\n        label=\"Select heatmap\"\n      />\n      <FilePathSelect\n        dataType={DATA_TYPE_SET.ROI}\n        selectedNodeId={useSelector(selectMultiPlotRoiItemNodeId(itemId))}\n        selectedFilePath={useSelector(selectMultiPlotRoiItemFilePath(itemId))}\n        onSelect={(nodeId, filePath) =>\n          dispatch(setRoiItemFilePath({ itemId, nodeId, filePath }))\n        }\n        label=\"Select roi\"\n      />\n      <MultiPlot itemId={itemId} />\n    </>\n  )\n})\n\nconst MultiPlot = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  return (\n    <Grid container>\n      <Grid item xs={7}>\n        <StyledPaper>\n          <MultiImagePlot itemId={itemId} />\n        </StyledPaper>\n      </Grid>\n      <Grid item xs={5}>\n        <Grid>\n          <StyledPaper>\n            <MultiTimeSeriesPlot itemId={itemId} />\n          </StyledPaper>\n          <StyledPaper>\n            <MultiHeatMapPlot itemId={itemId} />\n          </StyledPaper>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n})\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(1),\n  margin: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}))\n\nconst MultiImagePlot = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectMultiPlotImageItemFilePath(itemId))\n  const nodeId = useSelector(selectMultiPlotImageItemNodeId(itemId))\n  if (filePath != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{ nodeId, filePath, dataType: DATA_TYPE_SET.IMAGE, itemId }}\n      >\n        <ImagePlot />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n\nconst MultiTimeSeriesPlot = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectMultiPlotTimeSeriesItemFilePath(itemId))\n  const nodeId = useSelector(selectMultiPlotTimeSeriesItemNodeId(itemId))\n  if (filePath != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{\n          nodeId,\n          filePath,\n          dataType: DATA_TYPE_SET.TIME_SERIES,\n          itemId,\n        }}\n      >\n        <TimeSeriesPlot />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n\nconst MultiHeatMapPlot = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectMultiPlotHeatMapItemFilePath(itemId))\n  const nodeId = useSelector(selectMultiPlotHeatMapItemNodeId(itemId))\n  if (filePath != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{ nodeId, filePath, dataType: DATA_TYPE_SET.HEAT_MAP, itemId }}\n      >\n        <HeatMapPlot />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n","import React from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectRoiData,\n  selectRoiDataError,\n  selectRoiDataIsFulfilled,\n  selectRoiDataIsInitialized,\n  selectRoiDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { getRoiData } from 'store/slice/DisplayData/DisplayDataActions'\nimport createColormap from 'colormap'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const RoiPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isPending = useSelector(selectRoiDataIsPending(path))\n  const isInitialized = useSelector(selectRoiDataIsInitialized(path))\n  const isFulfilled = useSelector(selectRoiDataIsFulfilled(path))\n  const error = useSelector(selectRoiDataError(path))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getRoiData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <RoiPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst RoiPlotImple = React.memo<{}>(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(selectRoiData(path), imageDataEqualtyFn)\n\n  const colorscale: ColorType[] = createColormap({\n    colormap: 'jet',\n    nshades: 10,\n    format: 'hex',\n    alpha: 1,\n  }).map((v, idx) => {\n    return { rgb: v, offset: String(idx / 9) }\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'roi',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          return [offset, value.rgb]\n        }),\n        hoverongaps: false,\n        // zsmooth: zsmooth, // ['best', 'fast', false]\n        zsmooth: false,\n        showlegend: true,\n      },\n    ],\n    [imageData, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      title: path.split('/').reverse()[0],\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      xaxis: {\n        autorange: true,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n      },\n      yaxis: {\n        autorange: 'reversed',\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n      },\n    }),\n    [path],\n  )\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n  }\n  return (\n    <div className=\"imagePlotChart\">\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectScatterData,\n  selectScatterDataError,\n  selectScatterDataIsFulfilled,\n  selectScatterDataIsInitialized,\n  selectScatterDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getScatterData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { ScatterData } from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const ScatterPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectScatterDataIsPending(path))\n  const isInitialized = useSelector(selectScatterDataIsInitialized(path))\n  const error = useSelector(selectScatterDataError(path))\n  const isFulfilled = useSelector(selectScatterDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getScatterData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ScatterPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ScatterPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const scatterData = useSelector(\n    selectScatterData(path),\n    scatterDataEqualityFn,\n  )\n\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n  const maxIndex = Object.keys(scatterData).length - 1\n\n  const data = React.useMemo(\n    () => [\n      {\n        x:\n          xIndex < maxIndex\n            ? Object.values(scatterData[xIndex])\n            : Object.values(scatterData[maxIndex]),\n        y:\n          yIndex < maxIndex\n            ? Object.values(scatterData[yIndex])\n            : Object.values(scatterData[maxIndex]),\n        type: 'scatter',\n        mode: 'markers', //'markers+text',\n        text: Object.keys(scatterData[0]),\n        textposition: 'top center',\n        textfont: {\n          family: 'Raleway, sans-serif',\n        },\n        marker: {\n          size: 5,\n          color: Object.keys(scatterData[0]),\n        },\n      },\n    ],\n    [scatterData, xIndex, yIndex, maxIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      title: path.split('/').reverse()[0],\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      xaxis: {\n        title: {\n          text: `x: ${\n            xIndex < Object.keys(scatterData).length ? xIndex : maxIndex\n          }`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: `y: ${\n            yIndex < Object.keys(scatterData).length ? yIndex : maxIndex\n          }`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n    }),\n    [xIndex, yIndex, maxIndex, path, scatterData],\n  )\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n  }\n\n  const ref = React.useRef<HTMLDivElement>(null)\n  const plotlyHeight = ref.current?.getBoundingClientRect().height\n\n  useEffect(() => {\n    const height =\n      ref.current?.getElementsByClassName('main-svg')[0].clientHeight\n    const plotContainer = (\n      ref.current?.getElementsByClassName(\n        'plot-container',\n      ) as HTMLCollectionOf<HTMLElement>\n    )[0]\n\n    if (height !== undefined && plotContainer !== undefined) {\n      plotContainer.style.height = `${height}px`\n    }\n  }, [plotlyHeight])\n\n  return (\n    <div ref={ref}>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nfunction scatterDataEqualityFn(\n  a: ScatterData | undefined,\n  b: ScatterData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\n// function nestEqualityFun(\n//   a: {\n//     [key: number]: number\n//   },\n//   b: {\n//     [key: number]: number\n//   },\n// ) {\n//   const aArray = Object.entries(a)\n//   const bArray = Object.entries(b)\n//   return (\n//     a === b ||\n//     (aArray.length === bArray.length &&\n//       aArray.every(([aKey, aValue], i) => {\n//         const [bKey, bValue] = bArray[i]\n//         return bKey === aKey && bValue === aValue\n//       }))\n//   )\n// }\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectBarData,\n  selectBarDataError,\n  selectBarDataIsFulfilled,\n  selectBarDataIsInitialized,\n  selectBarDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getBarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { BarData } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const BarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectBarDataIsPending(path))\n  const isInitialized = useSelector(selectBarDataIsInitialized(path))\n  const error = useSelector(selectBarDataError(path))\n  const isFulfilled = useSelector(selectBarDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getBarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <BarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst BarPlotImple = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n\n  const barData = useSelector(selectBarData(path), barDataEqualityFn)\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: Object.keys(barData[0]),\n        y: Object.values(barData[0]),\n        type: 'bar',\n      },\n    ],\n    [barData],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      title: path.split('/').reverse()[0],\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n    }),\n    [path],\n  )\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n  }\n\n  const ref = React.useRef<HTMLDivElement>(null)\n  const plotlyHeight = ref.current?.getBoundingClientRect().height\n\n  useEffect(() => {\n    const height =\n      ref.current?.getElementsByClassName('main-svg')[0].clientHeight\n    const plotContainer = (\n      ref.current?.getElementsByClassName(\n        'plot-container',\n      ) as HTMLCollectionOf<HTMLElement>\n    )[0]\n\n    if (height !== undefined && plotContainer !== undefined) {\n      plotContainer.style.height = `${height}px`\n    }\n  }, [plotlyHeight])\n\n  return (\n    <div ref={ref}>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nfunction barDataEqualityFn(a: BarData | undefined, b: BarData | undefined) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHTMLData,\n  selectHTMLDataError,\n  selectHTMLDataIsFulfilled,\n  selectHTMLDataIsInitialized,\n  selectHTMLDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHTMLData } from 'store/slice/DisplayData/DisplayDataActions'\n\nexport const HTMLPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHTMLDataIsPending(path))\n  const isInitialized = useSelector(selectHTMLDataIsInitialized(path))\n  const error = useSelector(selectHTMLDataError(path))\n  const isFulfilled = useSelector(selectHTMLDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHTMLData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HTMLPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HTMLPlotImple = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const htmlData = useSelector(selectHTMLData(path))\n\n  return <div dangerouslySetInnerHTML={{ __html: htmlData }} />\n})\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectVisualizeDataFilePath,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { DisplayDataContext } from './DataContext'\nimport { HeatMapPlot } from './Plot/HeatMapPlot'\nimport { ImagePlot } from './Plot/ImagePlot'\nimport { RoiPlot } from './Plot/RoiPlot'\nimport { ScatterPlot } from './Plot/ScatterPlot'\nimport { CsvPlot } from './Plot/CsvPlot'\nimport { TimeSeriesPlot } from './Plot/TimeSeriesPlot'\nimport { BarPlot } from './Plot/BarPlot'\nimport { HTMLPlot } from './Plot/HTMLPlot'\n\nexport const DisplayDataItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const nodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  if (filePath != null && dataType != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{ nodeId, filePath, dataType, itemId }}\n      >\n        <DisplayPlot dataType={dataType} />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n\nconst DisplayPlot = React.memo<{\n  dataType: DATA_TYPE\n}>(({ dataType }) => {\n  switch (dataType) {\n    case DATA_TYPE_SET.CSV:\n      return <CsvPlot />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesPlot />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatMapPlot />\n    case DATA_TYPE_SET.IMAGE:\n      return <ImagePlot />\n    case DATA_TYPE_SET.ROI:\n      return <RoiPlot />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterPlot />\n    case DATA_TYPE_SET.BAR:\n      return <BarPlot />\n    case DATA_TYPE_SET.HTML:\n      return <HTMLPlot />\n    default:\n      return null\n  }\n})\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport { deleteVisualizeItem } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const MultiPlotDeleteButton = React.memo<{ itemId: number }>(\n  ({ itemId }) => {\n    const dispatch = useDispatch()\n\n    const onClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n      e.stopPropagation() // 親divのonClickを反応させないため\n      dispatch(deleteVisualizeItem(itemId))\n    }\n    return (\n      <IconButton onClick={onClick} size=\"large\">\n        <CloseIcon />\n      </IconButton>\n    )\n  },\n)\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useTheme } from '@mui/material/styles'\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\nimport {\n  selectSelectedVisualizeItemId,\n  selectVisualizeItemIdList,\n  selectVisualizeItemType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nimport { VisualizeItemAddButton } from './VisualizeItemAddButton'\nimport { DisplayItemDeleteButton } from './DisplayItemDeleteButton'\nimport { MultiPlotItem } from './MultiPlotItem'\nimport { DisplayDataItem } from './DisplayDataItem'\nimport { selectItem } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { RootState } from 'store/store'\nimport { MultiPlotDeleteButton } from './MultiPlotDeleteButton'\n\nexport const VisualizeItems: React.FC = () => {\n  return (\n    <>\n      <FlexItemList />\n    </>\n  )\n}\n\nconst FlexItemList: React.FC = () => {\n  const itemIdList = useSelector(selectVisualizeItemIdList, arrayEqualityFn)\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\" p={1} m={1}>\n      {itemIdList.map((itemId) => (\n        <Item itemId={itemId} key={itemId} />\n      ))}\n      <VisualizeItemAddButton />\n    </Box>\n  )\n}\n\nconst Item = React.memo<{ itemId: number }>(({ itemId }) => {\n  const itemType = useSelector(selectVisualizeItemType(itemId))\n\n  const dispatch = useDispatch()\n  const onSelect = () => {\n    dispatch(selectItem(itemId))\n  }\n  const isSelected = useSelector(\n    (state: RootState) => selectSelectedVisualizeItemId(state) === itemId,\n  )\n  const theme = useTheme()\n\n  return (\n    <Paper\n      variant=\"outlined\"\n      key={itemId}\n      style={{\n        width: '100%',\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        cursor: 'pointer',\n        borderColor: isSelected ? theme.palette.primary.light : undefined,\n      }}\n      onClick={onSelect}\n    >\n      <Box display=\"flex\" justifyContent=\"flex-end\">\n        <Box>\n          <DeleteButton itemType={itemType} itemId={itemId} />\n        </Box>\n      </Box>\n      <ItemByType itemType={itemType} itemId={itemId} />\n    </Paper>\n  )\n})\n\nconst DeleteButton: React.FC<{\n  itemType: string\n  itemId: number\n}> = ({ itemType, itemId }) => {\n  switch (itemType) {\n    case 'displayData':\n      return <DisplayItemDeleteButton itemId={itemId} />\n    case 'MultiPlot':\n      return <MultiPlotDeleteButton itemId={itemId} />\n    default:\n      throw new Error('itemType Error')\n  }\n}\n\nconst ItemByType = React.memo<{\n  itemType: string\n  itemId: number\n}>(({ itemType, itemId }) => {\n  switch (itemType) {\n    case 'MultiPlot':\n      return <MultiPlotItem itemId={itemId} />\n    case 'displayData':\n      return <DisplayDataItem itemId={itemId} />\n    default:\n      throw new Error('itemType Error')\n  }\n})\n","import React, { useState } from 'react'\n\nimport { GradientPickerPopover } from 'react-linear-gradient-picker'\nimport { SketchPicker } from 'react-color'\nimport { PALETTE_COLOR_SHAPE_TYPE } from 'react-linear-gradient-picker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const GradientColorPicker = React.memo<{\n  colors: { rgb: string; offset: string }[]\n  dispatchSetColor: (colorCode: ColorType[]) => void\n}>(({ colors, dispatchSetColor }) => {\n  const palette: PALETTE_COLOR_SHAPE_TYPE[] = colors.map((value) => {\n    return {\n      offset: value.offset,\n      color: value.rgb,\n    }\n  })\n\n  const onPaletteChange = (palette: PALETTE_COLOR_SHAPE_TYPE[]) => {\n    const colorCode = palette.map((value) => {\n      const color = value.color\n      const rgbStr = color.replace(/[^0-9,]/g, '').split(',')\n      const rgb = {\n        r: Number(rgbStr[0]),\n        g: Number(rgbStr[1]),\n        b: Number(rgbStr[2]),\n      }\n      return {\n        rgb: `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`,\n        offset: value.offset,\n      }\n    })\n    dispatchSetColor(colorCode)\n  }\n\n  const [open, setOpen] = useState(false)\n\n  return (\n    <GradientPickerPopover\n      open={open}\n      setOpen={() => setOpen(!open)}\n      // showAnglePicker={true}\n      width={150}\n      maxStops={10}\n      paletteHeight={25}\n      palette={palette}\n      onPaletteChange={onPaletteChange}\n      flatStyle={true}\n    >\n      <WrappedSketchPicker />\n    </GradientPickerPopover>\n  )\n})\n\ntype WrapperPropTypes = {\n  onSelect?: (color: string, opacity?: number) => void\n  color?: string\n}\n\nconst WrappedSketchPicker: React.FC<WrapperPropTypes> = ({\n  onSelect,\n  color,\n}) => {\n  return (\n    <SketchPicker\n      color={color}\n      width=\"150px\"\n      // styles={{width: \"10px\"}}\n      onChange={(c) => {\n        const { r, g, b, a } = c.rgb\n        onSelect?.(`rgb(${r}, ${g}, ${b})`, a)\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Switch from '@mui/material/Switch'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\n\nimport {\n  selectImageItemShowGrid,\n  selectImageItemShowLine,\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectRoiItemNodeId,\n  selectRoiItemFilePath,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemFilePath,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setImageItemShowGrid,\n  setImageItemShowLine,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowScale,\n  setDisplayDataPath,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemColors,\n  setRoiItemFilePath,\n  resetImageActiveIndex,\n  setImageItemRoiAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\nimport { FileSelectImple } from 'components/FlowChart/FlowChartNode/FileSelect'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'store/slice/FilesTree/FilesTreeType'\nimport { Box, TextField } from '@mui/material'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { FilePathSelect } from '../FilePathSelect'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\nimport Button from '@mui/material/Button'\nimport { getImageData } from 'store/slice/DisplayData/DisplayDataActions'\n\nexport const ImageItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const onSelectImageFile = (path: string) => {\n    dispatch(setDisplayDataPath({ nodeId: null, filePath: path, itemId }))\n    dispatch(resetImageActiveIndex({ itemId }))\n  }\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n\n  const { onUploadFile } = useFileUploader(FILE_TYPE_SET.IMAGE)\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  const colors = useSelector(selectImageItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setImageItemColors({ itemId, colors: colorCode }))\n  }\n\n  const roiItemNodeId = useSelector(selectRoiItemNodeId(itemId))\n  const roiItemFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const onSelectRoiFilePath = (nodeId: string, filePath: string) => {\n    dispatch(setRoiItemFilePath({ itemId, nodeId, filePath }))\n  }\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={onSelectImageFile}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.IMAGE}\n        selectButtonLabel=\"Select Image\"\n      />\n      <StartEndIndex />\n      <Showticklabels />\n      <ShowLine />\n      <ShowGrid />\n      <ShowScale />\n      <Zsmooth />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <div>\n        <h3>Roi Setting</h3>\n        <FilePathSelect\n          selectedFilePath={roiItemFilePath}\n          selectedNodeId={roiItemNodeId}\n          onSelect={onSelectRoiFilePath}\n          dataType={DATA_TYPE_SET.ROI}\n          label={'Select Roi'}\n        />\n        <RoiAlpha />\n      </div>\n    </div>\n  )\n}\n\nconst Showticklabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setImageItemShowticklabels({ itemId, showticklabels: !showticklabels }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"Showticklabels\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"ShowLine\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"ShowGrid\"\n    />\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"ShowScale\"\n    />\n  )\n}\n\nconst Zsmooth: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string | boolean>) => {\n    dispatch(setImageItemZsmooth({ itemId, zsmooth: event.target.value }))\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>smooth</InputLabel>\n      <Select label=\"smooth\" value={zsmooth} onChange={handleChange}>\n        <MenuItem value={'best'}>best</MenuItem>\n        <MenuItem value={'fast'}>fast</MenuItem>\n        <MenuItem value={'false'}>False</MenuItem>\n      </Select>\n    </FormControl>\n  )\n}\n\nconst RoiAlpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const inputError = !(roiAlpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemRoiAlpha({ itemId, roiAlpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={roiAlpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n      alpha\n    </>\n  )\n}\n\nconst StartEndIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const [startIndex, onChangeStartIndex] = React.useState(\n    useSelector(selectImageItemStartIndex(itemId)),\n  )\n  const [endIndex, onChangeEndIndex] = React.useState(\n    useSelector(selectImageItemEndIndex(itemId)),\n  )\n  const inputError = !(startIndex > 0)\n  const dispatch = useDispatch()\n  const onStartChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeStartIndex(newValue)\n    }\n  }\n  const onEndChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeEndIndex(newValue)\n    }\n  }\n\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n  const onClickButton = () => {\n    if (startIndex > 0) {\n      dispatch(setImageItemStartIndex({ itemId, startIndex }))\n      dispatch(setImageItemEndIndex({ itemId, endIndex }))\n      dispatch(resetImageActiveIndex({ itemId, startIndex, endIndex }))\n      if (filePath !== null) {\n        dispatch(\n          getImageData({\n            path: filePath,\n            startIndex: startIndex ?? 1,\n            endIndex: endIndex ?? 10,\n          }),\n        )\n      }\n    }\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>\n      <TextField\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 1,\n          min: 0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onStartChange}\n        value={startIndex}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n      ~\n      <TextField\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onEndChange}\n        value={endIndex}\n      />\n      <Button\n        size=\"small\"\n        className=\"ctrl_btn\"\n        variant=\"contained\"\n        onClick={onClickButton}\n      >\n        load\n      </Button>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FileSelectImple } from 'components/FlowChart/FlowChartNode/FileSelect'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  selectCsvItemSetColumn,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n  selectVisualizeDataFilePath,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setCsvItemSetColumn,\n  setCsvItemSetIndex,\n  setCsvItemTranspose,\n  setDisplayDataPath,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'store/slice/FilesTree/FilesTreeType'\nimport { FormControlLabel, Switch, TextField } from '@mui/material'\n\nexport const CsvItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const dispatch = useDispatch()\n  const onSelectFile = (path: string) => {\n    dispatch(setDisplayDataPath({ nodeId: null, filePath: path, itemId }))\n  }\n  const { onUploadFile } = useFileUploader(FILE_TYPE_SET.CSV)\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={onSelectFile}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.CSV}\n        selectButtonLabel=\"Select CSV\"\n      />\n      <Transpose />\n      <SetColumn />\n      <SetIndex />\n    </div>\n  )\n}\n\nconst Transpose: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemTranspose({ itemId, transpose: !transpose }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={transpose} onChange={toggleChecked} />}\n      label=\"transpose\"\n    />\n  )\n}\n\nconst SetColumn: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setColumn = useSelector(selectCsvItemSetColumn(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeSetColumn = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value === '' ? null : Number(event.target.value)\n    if (newValue === null || newValue >= 0) {\n      dispatch(setCsvItemSetColumn({ itemId, setColumn: newValue }))\n    }\n  }\n\n  return (\n    <div>\n      <TextField\n        label=\"column\"\n        style={{ width: 50 }}\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeSetColumn}\n        value={setColumn}\n      />\n    </div>\n  )\n}\n\nconst SetIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemSetIndex({ itemId, setIndex: !setIndex }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={setIndex} onChange={toggleChecked} />}\n      label=\"setIndex\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FormControlLabel, Switch } from '@mui/material'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setHeatMapItemColors,\n  setHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const HeatmapItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const colors = useSelector(selectHeatMapItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setHeatMapItemColors({ itemId, colors: colorCode }))\n  }\n  return (\n    <>\n      <ShowScale />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n    </>\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setHeatMapItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"showscale\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FormControlLabel, Switch, TextField } from '@mui/material'\nimport Box from '@mui/material/Box'\nimport Checkbox from '@mui/material/Checkbox'\nimport {\n  selectTimeSeriesItemCheckedList,\n  selectTimeSeriesItemDisplayNumbers,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectTimeSeriesItemFilePath,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  setTimeSeriesItemCheckedList,\n  setTimeSeriesItemDisplayNumbers,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemZeroLine,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  getTimeSeriesAllData,\n  getTimeSeriesDataById,\n} from 'store/slice/DisplayData/DisplayDataActions'\n\nexport const TimeSeriesItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <Offset />\n      <Span />\n      <ShowGrid />\n      <ShowLine />\n      <ShowTickLabels />\n      <ZeroLine />\n      <Xrange />\n      <LegendSelect />\n    </div>\n  )\n}\n\nconst Offset: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemOffset({ itemId, offset: !offset }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={offset} onChange={toggleChecked} />}\n      label=\"offset\"\n    />\n  )\n}\n\nconst Span: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n\n  const dispatch = useDispatch()\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number' && newValue > 0) {\n      dispatch(setTimeSeriesItemSpan({ itemId, span: newValue }))\n    }\n  }\n  return (\n    <FormControlLabel\n      control={\n        <TextField\n          type=\"number\"\n          style={{ width: '6vw' }}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={onChange}\n          defaultValue={span}\n        />\n      }\n      label=\"offset std\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"showgrid\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"showline\"\n    />\n  )\n}\n\nconst ShowTickLabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setTimeSeriesItemShowTickLabels({\n        itemId,\n        showticklabels: !showticklabels,\n      }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"showticklabels\"\n    />\n  )\n}\n\nconst ZeroLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemZeroLine({ itemId, zeroline: !zeroline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={zeroline} onChange={toggleChecked} />}\n      label=\"zeroline\"\n    />\n  )\n}\n\nconst Xrange: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeLeft = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newLeft = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newLeft === 'number') {\n      dispatch(setTimeSeriesItemXrangeLeft({ itemId, left: newLeft }))\n    }\n  }\n  const onChangeRight = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newRight = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newRight === 'number') {\n      dispatch(setTimeSeriesItemXrangeRight({ itemId, right: newRight }))\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <>\n          left:\n          <TextField\n            style={{ width: 50 }}\n            type=\"number\"\n            inputProps={{\n              step: 1,\n              min: 0,\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeLeft}\n            defaultValue={xrange.left}\n          />\n          right:\n          <TextField\n            style={{ width: 50 }}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeRight}\n            defaultValue={xrange.right}\n          />\n        </>\n      }\n      label=\"\"\n    />\n  )\n}\n\nconst LegendSelect: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const checkedList = useSelector(selectTimeSeriesItemCheckedList(itemId))\n  const displayNumbers = useSelector(selectTimeSeriesItemDisplayNumbers(itemId))\n  const filePath = useSelector(selectTimeSeriesItemFilePath(itemId))\n\n  const allHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      setTimeSeriesItemCheckedList({\n        itemId,\n        checkedList: checkedList.map((_) => {\n          return event.target.checked\n        }),\n      }),\n    )\n\n    if (event.target.checked) {\n      dispatch(\n        setTimeSeriesItemDisplayNumbers({\n          itemId,\n          displayNumbers: checkedList.map((_, i) => {\n            return i\n          }),\n        }),\n      )\n      if (filePath !== null) {\n        dispatch(getTimeSeriesAllData({ path: filePath }))\n      }\n    } else {\n      dispatch(\n        setTimeSeriesItemDisplayNumbers({\n          itemId,\n          displayNumbers: [],\n        }),\n      )\n    }\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const index = parseInt(event.target.value)\n\n    // displayNumbers\n    if (event.target.checked) {\n      dispatch(\n        setTimeSeriesItemDisplayNumbers({\n          itemId,\n          displayNumbers: [...displayNumbers, index],\n        }),\n      )\n    } else {\n      dispatch(\n        setTimeSeriesItemDisplayNumbers({\n          itemId,\n          displayNumbers: displayNumbers.filter((value) => value !== index),\n        }),\n      )\n    }\n\n    // CheckList\n    dispatch(\n      setTimeSeriesItemCheckedList({\n        itemId,\n        checkedList: checkedList.map((v, i) => {\n          if (i === index) {\n            return event.target.checked\n          }\n          return v\n        }),\n      }),\n    )\n\n    if (filePath !== null) {\n      dispatch(getTimeSeriesDataById({ path: filePath, index }))\n    }\n  }\n\n  const children = (\n    <Box sx={{ display: 'flex', flexDirection: 'column', ml: 3 }}>\n      {checkedList.map((v, i) => (\n        <FormControlLabel\n          key={`${i}`}\n          label={`Index ${i + 1}`}\n          control={<Checkbox checked={v} onChange={handleChange} value={i} />}\n        />\n      ))}\n    </Box>\n  )\n\n  return (\n    <div>\n      <FormControlLabel\n        label=\"All Check\"\n        control={\n          <Checkbox\n            checked={checkedList.every((v) => {\n              return v\n            })}\n            onChange={allHandleChange}\n          />\n        }\n      />\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\n// import { useSelector, useDispatch } from 'react-redux'\n// import { SelectedItemIdContext } from '../VisualizeItemEditor'\n// import { selectRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n// import { setRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n// import { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\n// import { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n// import { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const RoiItemEditor: React.FC = () => {\n  // const itemId = React.useContext(SelectedItemIdContext)\n  // const dispatch = useDispatch()\n  // const { onUploadFile } = useFileUploader(FILE_TYPE_SET.CSV)\n  // const onUploadFileHandle = (formData: FormData, fileName: string) => {\n  //   onUploadFile(formData, fileName)\n  // }\n\n  // const colors = useSelector(selectRoiItemColors(itemId))\n  // const dispathSetColor = (colorCode: ColorType[]) => {\n  //   dispatch(setRoiItemColors({ itemId, colors: colorCode }))\n  // }\n\n  return (\n    <>\n      {/* <GradientColorPicker /> */}\n      {/* <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} /> */}\n    </>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FormControlLabel, TextField } from '@mui/material'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nexport const ScatterItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <XIndex />\n      <YIndex />\n    </div>\n  )\n}\n\nconst XIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeXIndex = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value === '' ? null : Number(event.target.value)\n    if (newValue !== null && newValue >= 0) {\n      dispatch(setScatterItemXIndex({ itemId, xIndex: newValue }))\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <>\n          <TextField\n            style={{ width: 50 }}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeXIndex}\n            defaultValue={xIndex}\n          />\n          xIndex\n        </>\n      }\n      label=\"\"\n    />\n  )\n}\n\nconst YIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeYIndex = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value === '' ? null : Number(event.target.value)\n    if (newValue !== null && newValue >= 0) {\n      dispatch(setScatterItemYIndex({ itemId, yIndex: newValue }))\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <>\n          <TextField\n            style={{ width: 50 }}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeYIndex}\n            defaultValue={yIndex}\n          />\n          yIndex\n        </>\n      }\n      label=\"\"\n    />\n  )\n}\n","import React from 'react'\n\nexport const BarItemEditor: React.FC = () => {\n  return <div style={{ margin: '10px', padding: 10 }}></div>\n}\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport FormControl from '@mui/material/FormControl'\nimport Box from '@mui/material/Box'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  FormControlLabel,\n  Switch,\n  Typography,\n} from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\nimport {\n  selectSelectedVisualizeItemId,\n  selectImageItemFilePath,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n  selectVisualizeItemType,\n  selectVisualizeItemTypeIsMultiPlot,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { VISUALIZE_ITEM_TYPE_SET } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  resetImageActiveIndex,\n  setDisplayDataPath,\n  toggleItemTypeMultiPlot,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { ImageItemEditor } from './Editor/ImageItemEditor'\nimport { CsvItemEditor } from './Editor/CsvItemEditor'\nimport { HeatmapItemEditor } from './Editor/HeatmapItemEditor'\nimport { TimeSeriesItemEditor } from './Editor/TimeSeriesItemEditor'\nimport { RoiItemEditor } from './Editor/RoiItemEditor'\nimport { FilePathSelect } from './FilePathSelect'\nimport { ScatterItemEditor } from './Editor/ScatterItemEditor'\nimport { BarItemEditor } from './Editor/BarItemEditor'\nimport { deleteDisplayItem } from 'store/slice/DisplayData/DisplayDataSlice'\n\nexport const VisualizeItemEditor = () => {\n  const selectedItemId = useSelector(selectSelectedVisualizeItemId)\n  return (\n    <>\n      {selectedItemId != null ? (\n        <SelectedItemIdContext.Provider value={selectedItemId}>\n          <Box m={1}>\n            <ItemTypeSelect />\n            <Editor />\n          </Box>\n        </SelectedItemIdContext.Provider>\n      ) : (\n        'Please select item...'\n      )}\n      <br />\n    </>\n  )\n}\n\nexport const SelectedItemIdContext = React.createContext<number>(NaN)\n\nconst ItemTypeSelect: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const isMultiPlot = useSelector(selectVisualizeItemTypeIsMultiPlot(itemId))\n  const onChageToggle = () => {\n    dispatch(toggleItemTypeMultiPlot(itemId))\n  }\n  return (\n    <FormControl style={{ minWidth: 120, marginBottom: 12 }}>\n      <FormControlLabel\n        control={<Switch checked={isMultiPlot} onChange={onChageToggle} />}\n        label=\"Multi plot\"\n      />\n    </FormControl>\n  )\n}\n\nconst Editor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const itemType = useSelector(selectVisualizeItemType(itemId))\n  switch (itemType) {\n    case VISUALIZE_ITEM_TYPE_SET.MULTI_PLOT:\n      return <MultiPlotItemEditor />\n    case VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA:\n      return <DisplayDataItemEditor />\n  }\n}\n\nconst MultiPlotItemEditor: React.FC = () => {\n  return (\n    <div>\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography>ImageEditor</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <ImageItemEditor />\n        </AccordionDetails>\n      </Accordion>\n\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2a-content\"\n          id=\"panel2a-header\"\n        >\n          <Typography>TimeSeriesEditor</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <TimeSeriesItemEditor />\n        </AccordionDetails>\n      </Accordion>\n\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel3a-content\"\n          id=\"panel3a-header\"\n        >\n          <Typography>HeatmapEditor</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <HeatmapItemEditor />\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  )\n}\n\nconst DisplayDataItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const selectedNodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const selectedFilePath = useSelector(selectImageItemFilePath(itemId))\n\n  const [prevItem, setPrevItem] = useState<{\n    dataType: DATA_TYPE\n    filePath: string | null\n  }>({\n    dataType: 'image',\n    filePath: null,\n  })\n\n  useEffect(() => {\n    setPrevItem({ dataType, filePath: selectedFilePath })\n  }, [selectedFilePath, dataType])\n\n  const dispatch = useDispatch()\n  const onSelect = (nodeId: string, filePath: string, dataType: DATA_TYPE) => {\n    dispatch(setDisplayDataPath({ itemId, nodeId, filePath, dataType }))\n    dispatch(resetImageActiveIndex({ itemId }))\n    dispatch(deleteDisplayItem(prevItem))\n  }\n\n  return (\n    <>\n      <FilePathSelect\n        selectedNodeId={selectedNodeId}\n        selectedFilePath={selectedFilePath}\n        onSelect={onSelect}\n      />\n      <div style={{ marginTop: 8 }}>\n        <DisplayEditor dataType={dataType} />\n      </div>\n    </>\n  )\n}\n\nconst DisplayEditor: React.FC<{\n  dataType: DATA_TYPE | null\n}> = ({ dataType }) => {\n  /* 他のtypeのEditorも必要になったら追加する */\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return <ImageItemEditor />\n    case DATA_TYPE_SET.CSV:\n      return <CsvItemEditor />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatmapItemEditor />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesItemEditor />\n    case DATA_TYPE_SET.ROI:\n      return <RoiItemEditor />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterItemEditor />\n    case DATA_TYPE_SET.BAR:\n      return <BarItemEditor />\n    case DATA_TYPE_SET.HTML:\n      return <div>html editor</div>\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport { default as MuiToolbar } from '@mui/material/Toolbar'\nimport { styled } from '@mui/material/styles'\nimport { drawerWidth } from 'components/FlowChart/FlowChart'\nimport { VisualizeItems } from './VisualizeItems'\nimport { VisualizeItemEditor } from './VisualizeItemEditor'\n\nconst Visualize: React.FC = () => {\n  return (\n    <RootDiv>\n      <StyledDrawer variant=\"permanent\">\n        <MuiToolbar />\n        <StyledDrawerContents>\n          <VisualizeItemEditor />\n        </StyledDrawerContents>\n      </StyledDrawer>\n      <MainContents>\n        <MuiToolbar />\n        <VisualizeItems />\n      </MainContents>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n})\n\nconst StyledDrawer = styled(Drawer)({\n  width: drawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n})\n\nconst StyledDrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')({\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n  height: '100vh',\n})\n\nexport default Visualize\n","import { RootState } from 'store/store'\nimport { EXPERIMENTS_STATUS } from './ExperimentsType'\n\nconst selectExperiments = (state: RootState) => state.experiments\n\nexport const selectExperimentsSatusIsUninitialized = (state: RootState) =>\n  selectExperiments(state).status === 'uninitialized'\n\nexport const selectExperimentsSatusIsPending = (state: RootState) =>\n  selectExperiments(state).status === 'pending'\n\nexport const selectExperimentsSatusIsFulfilled = (state: RootState) =>\n  selectExperiments(state).status === 'fulfilled'\n\nexport const selectExperimentsSatusIsError = (state: RootState) =>\n  selectExperiments(state).status === 'error'\n\nexport const selectExperimentsErrorMessage = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'error') {\n    return experiments.message\n  } else {\n    throw new Error('experiments status is not error')\n  }\n}\n\nexport const selectExperimentList = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'fulfilled') {\n    return experiments.experimentList\n  } else {\n    throw new Error('experiments status is not fulfilled')\n  }\n}\n\nexport const selectExperimentUidList = (state: RootState) =>\n  Object.keys(selectExperimentList(state))\n\nexport const selectExperiment = (uid: string) => (state: RootState) =>\n  selectExperimentList(state)[uid]\n\nexport const selectExperimentTimeStamp = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).timestamp\n\nexport const selectExperimentName = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).name\n\nexport const selectExperimentStatus =\n  (uid: string) =>\n  (state: RootState): EXPERIMENTS_STATUS => {\n    const functions = selectExperimentList(state)[uid].functions\n    const statusList = Object.values(functions).map((f) => f.status)\n    if (statusList.findIndex((status) => status === 'error') >= 0) {\n      return 'error'\n    } else if (statusList.findIndex((status) => status === 'running') >= 0) {\n      return 'running'\n    } else {\n      return 'success'\n    }\n  }\n\nexport const selectExperimentFunctionNodeIdList =\n  (uid: string) => (state: RootState) =>\n    Object.keys(selectExperimentList(state)[uid].functions)\n\nexport const selectExperimentFunction =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentList(state)[uid].functions[nodeId]\n\nexport const selectExperimentFunctionName =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).name\n\nexport const selectExperimentFunctionStatus =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n","import React from 'react'\nimport DoneIcon from '@mui/icons-material/Done'\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline'\nimport HorizontalRuleIcon from '@mui/icons-material/HorizontalRule'\n\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport const ExperimentStatusIcon = React.memo<{ status: EXPERIMENTS_STATUS }>(\n  ({ status }) => {\n    switch (status) {\n      case 'error':\n        return <ErrorOutlineIcon color=\"error\" />\n      case 'success':\n        return <DoneIcon color=\"success\" />\n      case 'running':\n        return <HorizontalRuleIcon color=\"inherit\" />\n    }\n  },\n)\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport Collapse from '@mui/material/Collapse'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Typography from '@mui/material/Typography'\n\nimport { ExperimentUidContext } from './ExperimentTable'\nimport {\n  selectExperimentFunctionName,\n  selectExperimentFunctionNodeIdList,\n  selectExperimentFunctionStatus,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\nexport const CollapsibleTable: React.FC<{\n  open: boolean\n}> = ({ open }) => {\n  return (\n    <TableRow>\n      <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Box margin={1}>\n            <Typography variant=\"h6\" gutterBottom component=\"div\">\n              Details\n            </Typography>\n            <Table size=\"small\" aria-label=\"purchases\">\n              <Head />\n              <Body />\n            </Table>\n          </Box>\n        </Collapse>\n      </TableCell>\n    </TableRow>\n  )\n}\n\nconst Head: React.FC = () => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>Function</TableCell>\n        <TableCell>nodeID</TableCell>\n        <TableCell>Success</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n}\n\nconst Body: React.FC = () => {\n  const uid = React.useContext(ExperimentUidContext)\n  const nodeIdList = useSelector(\n    selectExperimentFunctionNodeIdList(uid),\n    arrayEqualityFn,\n  )\n  return (\n    <TableBody>\n      {nodeIdList.map((nodeId) => (\n        <TableRowOfFunction nodeId={nodeId} />\n      ))}\n    </TableBody>\n  )\n}\n\nconst TableRowOfFunction = React.memo<{ nodeId: string }>(({ nodeId }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const name = useSelector(selectExperimentFunctionName(uid, nodeId))\n  const status = useSelector(selectExperimentFunctionStatus(uid, nodeId))\n  return (\n    <TableRow key={nodeId}>\n      <TableCell component=\"th\" scope=\"row\">\n        {name}\n      </TableCell>\n      <TableCell>{nodeId}</TableCell>\n      <TableCell>\n        <ExperimentStatusIcon status={status} />\n      </TableCell>\n    </TableRow>\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\nimport Alert from '@mui/material/Alert'\nimport AlertTitle from '@mui/material/AlertTitle'\nimport IconButton from '@mui/material/IconButton'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline'\nimport GetAppIcon from '@mui/icons-material/GetApp'\nimport ReplayIcon from '@mui/icons-material/Replay'\nimport { useSnackbar } from 'notistack'\n\nimport { CollapsibleTable } from './CollapsibleTable'\nimport {\n  selectExperimentsSatusIsUninitialized,\n  selectExperimentsSatusIsFulfilled,\n  selectExperimentTimeStamp,\n  selectExperimentName,\n  selectExperimentStatus,\n  selectExperimentsSatusIsError,\n  selectExperimentsErrorMessage,\n  selectExperimentList,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport {\n  deleteExperimentByUid,\n  importExperimentByUid,\n} from 'store/slice/Experiments/ExperimentsActions'\nimport { getExperiments } from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { AppDispatch } from 'store/store'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\nimport { RUN_BTN_OPTIONS } from 'store/slice/Pipeline/PipelineType'\nimport { Experiment } from 'store/slice/Experiments/ExperimentsType'\nimport { TableSortLabel } from '@mui/material'\n\nexport const ExperimentTable: React.FC = () => {\n  const isUninitialized = useSelector(selectExperimentsSatusIsUninitialized)\n  const isFulfilled = useSelector(selectExperimentsSatusIsFulfilled)\n  const isError = useSelector(selectExperimentsSatusIsError)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (isUninitialized) {\n      dispatch(getExperiments())\n    }\n  }, [dispatch, isUninitialized])\n  if (isFulfilled) {\n    return <TableImple />\n  } else if (isError) {\n    return <ExperimentsErrorView />\n  } else {\n    return null\n  }\n}\n\nconst ExperimentsErrorView: React.FC = () => {\n  const message = useSelector(selectExperimentsErrorMessage)\n  return (\n    <Alert severity=\"error\">\n      <AlertTitle>failed to get experiments...</AlertTitle>\n      {message}\n    </Alert>\n  )\n}\n\nexport const ExperimentUidContext = React.createContext<string>('')\n\nconst TableImple: React.FC = () => {\n  const experimentList = useSelector(selectExperimentList)\n  const dispatch = useDispatch()\n  const onClickReload = () => {\n    dispatch(getExperiments())\n  }\n\n  const [order, setOrder] = React.useState<Order>('asc')\n  const [sortTarget, setSortTarget] =\n    React.useState<keyof Experiment>('timestamp')\n  const sortHandler =\n    (property: keyof Experiment) => (event: React.MouseEvent<unknown>) => {\n      const isAsc = sortTarget === property && order === 'asc'\n      setOrder(isAsc ? 'desc' : 'asc')\n      setSortTarget(property)\n    }\n\n  return (\n    <Box>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        <Button\n          sx={{\n            marginBottom: (theme) => theme.spacing(1),\n          }}\n          variant=\"outlined\"\n          endIcon={<ReplayIcon />}\n          onClick={onClickReload}\n        >\n          Reload\n        </Button>\n      </Box>\n      <TableContainer component={Paper} elevation={0} variant=\"outlined\">\n        <Table aria-label=\"collapsible table\">\n          <TableHead>\n            <Head order={order} sortHandler={sortHandler} />\n          </TableHead>\n          <TableBody>\n            {Object.values(experimentList)\n              .sort(getComparator(order, sortTarget))\n              .map((expData) => (\n                <ExperimentUidContext.Provider\n                  value={expData.uid}\n                  key={expData.uid}\n                >\n                  <Row />\n                </ExperimentUidContext.Provider>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  )\n}\n\nconst Head: React.FC<{\n  order: Order\n  sortHandler: any\n}> = ({ order, sortHandler }) => {\n  return (\n    <TableRow>\n      <TableCell />\n      <TableCell>\n        <TableSortLabel\n          active\n          direction={order}\n          onClick={sortHandler('timestamp')}\n        >\n          Timestamp\n        </TableSortLabel>\n      </TableCell>\n      <TableCell>\n        <TableSortLabel active direction={order} onClick={sortHandler('uid')}>\n          ID\n        </TableSortLabel>\n      </TableCell>\n      <TableCell>\n        <TableSortLabel active direction={order} onClick={sortHandler('name')}>\n          Name\n        </TableSortLabel>\n      </TableCell>\n      <TableCell>Success</TableCell>\n      <TableCell>Import</TableCell>\n      <TableCell>Delete</TableCell>\n    </TableRow>\n  )\n}\n\nconst Row: React.FC = () => {\n  const uid = React.useContext(ExperimentUidContext)\n  const timestamp = useSelector(selectExperimentTimeStamp(uid))\n  const status = useSelector(selectExperimentStatus(uid))\n  const name = useSelector(selectExperimentName(uid))\n  const [open, setOpen] = React.useState(false)\n  return (\n    <React.Fragment>\n      <TableRow\n        sx={{\n          '& > *': {\n            borderBottom: 'unset',\n          },\n          [`& .${tableCellClasses.root}`]: {\n            borderBottomWidth: 0,\n          },\n        }}\n      >\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {timestamp}\n        </TableCell>\n        <TableCell>{uid}</TableCell>\n        <TableCell>{name}</TableCell>\n        <TableCell>\n          <ExperimentStatusIcon status={status} />\n        </TableCell>\n        <TableCell>\n          <ImportExperimentButton />\n        </TableCell>\n        <TableCell>\n          <DeleteExperimentButton />\n        </TableCell>\n      </TableRow>\n      <CollapsibleTable open={open} />\n    </React.Fragment>\n  )\n}\n\nconst ImportExperimentButton: React.FC = () => {\n  const dispatch: AppDispatch = useDispatch()\n  const uid = React.useContext(ExperimentUidContext)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = () => {\n    dispatch(importExperimentByUid(uid))\n      .unwrap()\n      .then(() =>\n        enqueueSnackbar('Successfully imported.', { variant: 'success' }),\n      )\n    dispatch(setRunBtnOption({ runBtnOption: RUN_BTN_OPTIONS.RUN_ALREADY }))\n  }\n  return (\n    <IconButton onClick={onClick}>\n      <GetAppIcon color=\"primary\" />\n    </IconButton>\n  )\n}\n\nconst DeleteExperimentButton: React.FC = () => {\n  const dispatch = useDispatch()\n  const uid = React.useContext(ExperimentUidContext)\n\n  const name = useSelector(selectExperimentName(uid))\n  const [open, setOpen] = React.useState(false)\n\n  const onClickOpen = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(deleteExperimentByUid(uid))\n  }\n  return (\n    <>\n      <IconButton onClick={onClickOpen}>\n        <DeleteOutlineIcon color=\"error\" />\n      </IconButton>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete {name}?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\ntype Order = 'asc' | 'desc'\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string },\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n","import React from 'react'\nimport { default as MuiToolbar } from '@mui/material/Toolbar'\nimport { ExperimentTable } from './ExperimentTable'\n\nconst Experiment: React.FC = () => {\n  return (\n    <div style={{ display: 'flex' }}>\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1,\n          height: '100vh',\n          padding: 16,\n        }}\n      >\n        <MuiToolbar />\n        {/* <VisualizeItems /> */}\n        <ExperimentTable />\n      </main>\n    </div>\n  )\n}\n\nexport default Experiment\n","export default __webpack_public_path__ + \"static/media/optinist.8794a1aa.png\";","import React from 'react'\nimport AppBar from '@mui/material/AppBar'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Typography from '@mui/material/Typography'\nimport Toolbar from '@mui/material/Toolbar'\nimport { styled } from '@mui/material/styles'\nimport FlowChart from './FlowChart/FlowChart'\nimport Visualize from './Visualize/Visualize'\nimport Experiment from './Experiment/Experiment'\nimport { useRunPipeline } from 'store/slice/Pipeline/PipelineHook'\nimport optinistLogo from './optinist.png'\n\nconst Layout: React.FC = () => {\n  const [value, setValue] = React.useState(0)\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue)\n  }\n\n  const runPipeline = useRunPipeline() // タブ切り替えによって結果取得処理が止まってしまうのを回避するため、タブの親レイヤーで呼び出している\n\n  return (\n    <RootDiv>\n      <StyledAppBar position=\"fixed\" color=\"inherit\">\n        <Toolbar variant=\"dense\">\n          <img src={optinistLogo} alt=\"optinist\" width={120} />\n          <Tabs\n            sx={{ width: '100%' }}\n            value={value}\n            onChange={handleChange}\n            centered\n            textColor=\"primary\"\n          >\n            <Tab label=\"Workflow\" {...a11yProps(0)} />\n            <Tab label=\"Visualize\" {...a11yProps(1)} />\n            <Tab label=\"Record\" {...a11yProps(2)} />\n          </Tabs>\n        </Toolbar>\n      </StyledAppBar>\n      <TabPanel value={value} index={0}>\n        <FlowChart {...runPipeline} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Visualize />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Experiment />\n      </TabPanel>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  backgroundColor: theme.palette.background.paper,\n}))\n\nconst StyledAppBar = styled(AppBar)(({ theme }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  backgroundColor: '#C3EBE1',\n}))\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: any\n  value: any\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Typography>{children}</Typography>}\n    </div>\n  )\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  selectPipelineIsCanceled,\n  selectPipelineIsStartedSuccess,\n  selectPipelineLatestUid,\n  selectPipelineStatus,\n  selectRunPostData,\n} from './PipelineSelectors'\nimport { run, pollRunResult, runByCurrentUid } from './PipelineActions'\nimport { cancelPipeline } from './PipelineSlice'\nimport { selectFilePathIsUndefined } from '../InputNode/InputNodeSelectors'\nimport { useSnackbar } from 'notistack'\nimport { RUN_STATUS } from './PipelineType'\n\nconst POLLING_INTERVAL = 5000\n\nexport type UseRunPipelineReturnType = ReturnType<typeof useRunPipeline>\n\nexport function useRunPipeline() {\n  const dispatch = useDispatch()\n  const uid = useSelector(selectPipelineLatestUid)\n  const isCanceled = useSelector(selectPipelineIsCanceled)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n  const filePathIsUndefined = useSelector(selectFilePathIsUndefined)\n  const runPostData = useSelector(selectRunPostData)\n  const handleRunPipeline = React.useCallback(\n    (name: string) => {\n      dispatch(run({ runPostData: { name, ...runPostData, forceRunList: [] } }))\n    },\n    [dispatch, runPostData],\n  )\n  const handleRunPipelineByUid = React.useCallback(() => {\n    dispatch(runByCurrentUid({ runPostData }))\n  }, [dispatch, runPostData])\n  const handleCancelPipeline = React.useCallback(() => {\n    if (uid != null) {\n      dispatch(cancelPipeline())\n    }\n  }, [dispatch, uid])\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isStartedSuccess && !isCanceled && uid != null) {\n        dispatch(pollRunResult({ uid: uid }))\n      }\n    }, POLLING_INTERVAL)\n    return () => {\n      clearInterval(intervalId)\n    }\n  }, [dispatch, uid, isCanceled, isStartedSuccess])\n  const status = useSelector(selectPipelineStatus)\n  const { enqueueSnackbar } = useSnackbar()\n  // タブ移動による再レンダリングするたびにスナックバーが実行されてしまう挙動を回避するために前回の値を保持\n  const [prevStatus, setPrevStatus] = React.useState(status)\n  React.useEffect(() => {\n    if (prevStatus !== status) {\n      if (status === RUN_STATUS.FINISHED) {\n        enqueueSnackbar('Finished', { variant: 'success' })\n      } else if (status === RUN_STATUS.ABORTED) {\n        enqueueSnackbar('Aborted', { variant: 'error' })\n      } else if (status === RUN_STATUS.CANCELED) {\n        enqueueSnackbar('Canceled', { variant: 'info' })\n      }\n      setPrevStatus(status)\n    }\n  }, [status, prevStatus, enqueueSnackbar])\n  return {\n    filePathIsUndefined,\n    uid,\n    status,\n    isStartedSuccess,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n    handleCancelPipeline,\n  }\n}\n","import React from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport Close from '@mui/icons-material/Close'\nimport { SnackbarProvider, SnackbarKey, useSnackbar } from 'notistack'\n\nimport AppLayout from './components/Layout'\n\nconst App: React.FC = () => {\n  return (\n    <SnackbarProvider\n      maxSnack={5}\n      action={(snackbarKey) => (\n        <SnackbarCloseButton snackbarKey={snackbarKey} />\n      )}\n    >\n      <AppLayout />\n    </SnackbarProvider>\n  )\n}\n\nconst SnackbarCloseButton: React.FC<{ snackbarKey: SnackbarKey }> = ({\n  snackbarKey,\n}) => {\n  const { closeSnackbar } = useSnackbar()\n  return (\n    <IconButton onClick={() => closeSnackbar(snackbarKey)} size=\"large\">\n      <Close style={{ color: 'white' }} />\n    </IconButton>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  ALGORITHM_LIST_SLICE_NAME,\n  AlgorithmListType,\n} from './AlgorithmListType'\nimport { getAlgoList } from './AlgorithmListActions'\nimport { convertToAlgoListType } from './AlgorithmListUtils'\n\nconst initialState: AlgorithmListType = {\n  isLatest: false,\n  tree: {},\n}\n\nexport const algorithmListSlice = createSlice({\n  name: ALGORITHM_LIST_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlgoList.fulfilled, (state, action) => {\n      state.tree = convertToAlgoListType(action.payload)\n      state.isLatest = true\n    })\n  },\n})\n\nexport default algorithmListSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { FileUploader, FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\nimport { setUploadProgress, uploadFile } from './FileUploaderActions'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nconst initialState: FileUploader = {}\n\nexport const fileUploaderSlice = createSlice({\n  name: FILE_UPLOADER_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFileUploaderStateById(state, action: PayloadAction<string>) {\n      state[action.payload] = inistialUploaderState\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(setUploadProgress, (state, action) => {\n        const { progess, requestId } = action.payload\n        state[requestId].uploadingProgress = progess\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileName, requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          fileName,\n          isUninitialized: false,\n          pending: true,\n          fulfilled: false,\n          uploadingProgress: 0,\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { requestId } = action.meta.arg\n        const { resultPath } = action.payload\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          path: resultPath,\n          pending: false,\n          fulfilled: true,\n        }\n      })\n      .addCase(uploadFile.rejected, (state, action) => {\n        const { requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          pending: false,\n          fulfilled: false,\n          error: action.error.message,\n        }\n      })\n  },\n})\n\nexport const { setFileUploaderStateById } = fileUploaderSlice.actions\n\nexport default fileUploaderSlice.reducer\n","import { TreeNodeTypeDTO, TreeNodeType } from './FilesTreeType'\n\nexport function convertToTreeNodeType(dto: TreeNodeTypeDTO[]): TreeNodeType[] {\n  return dto.map((node) =>\n    node.isdir\n      ? {\n          path: node.path,\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n        }\n      : {\n          path: node.path,\n          name: node.name,\n          isDir: false,\n        },\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\nimport { uploadFile } from 'store/slice/FileUploader/FileUploaderActions'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { getFilesTree } from './FilesTreeAction'\nimport {\n  FilesTree,\n  FILES_TREE_SLICE_NAME,\n  FILE_TREE_TYPE_SET,\n} from './FilesTreeType'\nimport { convertToTreeNodeType } from './FilesTreeUtils'\n\nconst initialState: FilesTree = {}\nexport const filesTreeSlice = createSlice({\n  name: FILES_TREE_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getFilesTree.pending, (state, action) => {\n        const fileType = action.meta.arg\n        state[fileType] = {\n          isLoading: true,\n          isLatest: false,\n          tree: [],\n        }\n      })\n      .addCase(getFilesTree.fulfilled, (state, action) => {\n        const fileTreeType = action.meta.arg\n        state[fileTreeType].tree = convertToTreeNodeType(action.payload)\n        state[fileTreeType].isLatest = true\n        state[fileTreeType].isLoading = false\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          if (state[FILE_TREE_TYPE_SET.IMAGE] != null) {\n            state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.IMAGE] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          if (state[FILE_TREE_TYPE_SET.CSV] != null) {\n            state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.CSV] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          if (state[FILE_TREE_TYPE_SET.HDF5] != null) {\n            state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.HDF5] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else {\n          if (state[FILE_TREE_TYPE_SET.ALL] != null) {\n            state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.ALL] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n        } else {\n          state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n        }\n      })\n  },\n})\n\nexport default filesTreeSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as MuiColors from '@mui/material/colors'\n\nexport type HandleTypeColor = {\n  colorMap: { [type: string]: string }\n  /**\n   * HANDLE_COLOR_PRESET_MAPのkey\n   */\n  nextKey: number\n}\n\nconst initialState: HandleTypeColor = {\n  colorMap: {\n    ImageData: MuiColors.red[500],\n    IscellData: MuiColors.indigo[500],\n    TimeSeriesData: MuiColors.yellow[500],\n    Suite2pData: MuiColors.green[500],\n  },\n  nextKey: 0,\n}\n\nconst SLICE_NAME = 'handleTypeColor'\n\nexport const handleTypeColorSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {},\n})\n\nexport default handleTypeColorSlice.reducer\n","import { HDF5TreeDTO } from './HDF5Type'\n\nexport function convertToTreeNodeType(dto: HDF5TreeDTO[]): HDF5TreeDTO[] {\n  return dto.map((node) =>\n    node.isDir\n      ? {\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n          path: node.path,\n        }\n      : {\n          name: node.name,\n          isDir: false,\n          shape: node.shape,\n          path: node.path,\n          nbytes: node.nbytes,\n        },\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { getHDF5Tree } from './HDF5Action'\nimport { HDF5Tree, HDF5_SLICE_NAME } from './HDF5Type'\nimport { convertToTreeNodeType } from './HDF5Utils'\n\nconst initialState: HDF5Tree = {\n  isLoading: false,\n  tree: [],\n}\nexport const HDF5Slice = createSlice({\n  name: HDF5_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHDF5Tree.pending, (state, action) => {\n        state = {\n          isLoading: true,\n          tree: [],\n        }\n      })\n      .addCase(getHDF5Tree.fulfilled, (state, action) => {\n        state.tree = convertToTreeNodeType(action.payload)\n        state.isLoading = false\n      })\n  },\n})\n\nexport default HDF5Slice.reducer\n","import type { ExperimentDTO, ExperimentsDTO } from 'api/experiments/Experiments'\nimport type {\n  ExperimentListType,\n  ExperimentType,\n  ExperimentFunction,\n  EXPERIMENTS_STATUS,\n} from './ExperimentsType'\n\nexport function convertToExperimentListType(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n\nexport function convertToExperimentType(dto: ExperimentDTO): ExperimentType {\n  const functions: { [nodeId: string]: ExperimentFunction } = {}\n  Object.entries(dto.function).forEach(([name, value]) => {\n    functions[value.unique_id] = {\n      name,\n      nodeId: value.unique_id,\n      postion: value.position,\n      status: convertToExperimentStatus(value.success),\n    }\n  })\n  return {\n    uid: dto.unique_id,\n    timestamp: dto.timestamp,\n    name: dto.name,\n    functions,\n  }\n}\n\nfunction convertToExperimentStatus(dto: string): EXPERIMENTS_STATUS {\n  switch (dto) {\n    case 'running':\n      return 'running'\n    case 'success':\n      return 'success'\n    case 'error':\n      return 'error'\n    default:\n      throw new Error('failed to convert to EXPERIMENTS_STATUS')\n  }\n}\n\nexport function convertToFlowChartList(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { EXPERIMENTS_SLICE_NAME, Experiments } from './ExperimentsType'\nimport { getExperiments, deleteExperimentByUid } from './ExperimentsActions'\nimport { convertToExperimentListType } from './ExperimentsUtils'\nimport {\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from '../Pipeline/PipelineActions'\n\nconst initialState: Experiments = {\n  status: 'uninitialized',\n}\n\nexport const experimentsSlice = createSlice({\n  name: EXPERIMENTS_SLICE_NAME,\n  initialState: initialState as Experiments,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getExperiments.pending, () => {\n        return {\n          status: 'pending',\n        }\n      })\n      .addCase(getExperiments.fulfilled, (state, action) => {\n        const experimentList = convertToExperimentListType(action.payload)\n        return {\n          status: 'fulfilled',\n          experimentList,\n        }\n      })\n      .addCase(getExperiments.rejected, (state, action) => {\n        return {\n          status: 'error',\n          message: action.error.message,\n        }\n      })\n      .addCase(deleteExperimentByUid.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          delete state.experimentList[action.meta.arg]\n        }\n      })\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          const uid = action.meta.arg.uid\n          const target = state.experimentList[uid]\n          Object.entries(action.payload).forEach(([nodeId, value]) => {\n            if (value.status === 'success') {\n              target.functions[nodeId].status = 'success'\n            } else if (value.status === 'error') {\n              target.functions[nodeId].status = 'error'\n            }\n          })\n        }\n      })\n      .addMatcher(isAnyOf(run.fulfilled, runByCurrentUid.fulfilled), () => {\n        return {\n          status: 'uninitialized',\n        }\n      })\n  },\n})\n\nexport default experimentsSlice.reducer\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\nimport {\n  algorithmListReducer,\n  algorithmNodeReducer,\n  displayDataReducer,\n  fileUploaderReducer,\n  flowElementReducer,\n  inputNodeReducer,\n  nwbReducer,\n  filesTreeReducer,\n  handleTypeColorReducer,\n  rightDrawerReducer,\n  visualaizeItemReducer,\n  snakemakeReducer,\n  pipelineReducer,\n  hdf5Reducer,\n  experimentsReducer,\n} from './slice'\n\nexport const store = configureStore({\n  reducer: {\n    algorithmList: algorithmListReducer,\n    algorithmNode: algorithmNodeReducer,\n    displayData: displayDataReducer,\n    fileUploader: fileUploaderReducer,\n    flowElement: flowElementReducer,\n    inputNode: inputNodeReducer,\n    handleColor: handleTypeColorReducer,\n    filesTree: filesTreeReducer,\n    nwb: nwbReducer,\n    rightDrawer: rightDrawerReducer,\n    visualaizeItem: visualaizeItemReducer,\n    snakemake: snakemakeReducer,\n    pipeline: pipelineReducer,\n    hdf5: hdf5Reducer,\n    experiments: experimentsReducer,\n  },\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\nexport type ThunkApiConfig<T = unknown, PendingMeta = unknown> = {\n  state: RootState\n  dispatch: AppDispatch\n  rejectValue: T\n  penfingMeta: PendingMeta\n}\n","import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme({\n  components: {\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiSelect: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from 'store/store'\n\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './Theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}