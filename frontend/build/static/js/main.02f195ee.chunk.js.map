{"version":3,"sources":["store/utils/param/ParamUtils.ts","store/slice/AlgorithmNode/AlgorithmNodeSelectors.ts","store/slice/AlgorithmList/AlgorithmListUtils.ts","store/slice/AlgorithmList/AlgorithmListSelectors.ts","store/slice/AlgorithmList/AlgorithmListType.ts","const/API.ts","store/slice/AlgorithmList/AlgorithmListActions.ts","store/slice/InputNode/InputNodeType.ts","store/slice/FlowElement/FlowElementType.ts","store/slice/FlowElement/FlowElementActions.ts","components/FlowChart/TreeView.tsx","const/flowchart.ts","api/experiments/Experiments.ts","store/slice/Experiments/ExperimentsType.ts","store/slice/Experiments/ExperimentsActions.ts","store/slice/InputNode/InputNodeActions.ts","store/slice/FlowElement/FlowElementUtils.ts","api/run/RunUtils.ts","store/slice/FlowElement/FlowElementSlice.ts","store/slice/FlowElement/FlowElementSelectors.ts","store/slice/InputNode/InputNodeUtils.ts","store/slice/InputNode/InputNodeSelectors.ts","components/FlowChart/FlowChartNode/HandleColorHook.ts","store/slice/HandleTypeColor/HandleTypeColorSelectors.ts","store/slice/FilesTree/FilesTreeSelectors.ts","store/slice/FilesTree/FilesTreeType.ts","store/slice/FilesTree/FilesTreeAction.ts","store/slice/FilesTree/FilesTreeUtils.ts","components/FileSelectDialog.tsx","components/FlowChart/FlowChartNode/LinerProgressWithLabel.tsx","store/slice/FileUploader/FileUploaderType.ts","store/slice/FileUploader/FileUploaderActions.ts","store/slice/FileUploader/FileUploaderInitlalState.ts","store/slice/FileUploader/FileUploaderSelectors.ts","store/slice/FileUploader/FileUploaderHook.ts","components/FlowChart/FlowChartNode/FileSelect.tsx","components/FlowChart/FlowChartNode/FlowChartUtils.ts","utils/EqualityUtils.ts","components/FlowChart/FlowChartNode/ImageFileNode.tsx","store/slice/RightDrawer/RightDrawerSlice.ts","store/slice/NWB/NWBSelectors.ts","store/slice/Snakemake/SnakemakeSelectors.ts","store/slice/Pipeline/PipelineType.ts","store/slice/DisplayData/DisplayDataType.ts","store/slice/DisplayData/DisplayDataUtils.ts","store/slice/Pipeline/PipelineUtils.ts","store/slice/Pipeline/PipelineSelectors.ts","store/slice/DisplayData/DisplayDataSelectors.ts","store/slice/VisualizeItem/VisualizeItemType.ts","store/slice/VisualizeItem/VisualizeItemUtils.ts","store/slice/VisualizeItem/VisualizeItemSelectors.ts","store/slice/DisplayData/DisplayDataActions.ts","store/slice/VisualizeItem/VisualizeItemActions.ts","store/slice/VisualizeItem/VisualizeItemSlice.ts","components/Visualize/DataContext.tsx","components/Visualize/Plot/HeatMapPlot.tsx","components/Visualize/Plot/ImagePlot.tsx","components/Visualize/Plot/RoiPlot.tsx","components/Visualize/Plot/ScatterPlot.tsx","components/Visualize/Plot/CsvPlot.tsx","components/Visualize/Plot/TimeSeriesPlot.tsx","components/Visualize/Plot/BarPlot.tsx","components/Visualize/Plot/HTMLPlot.tsx","components/Visualize/DisplayDataItem.tsx","components/FlowChart/FlowChartNode/AlgorithmOutputDialog.tsx","components/FlowChart/FlowChartNode/AlgorithmNode.tsx","store/slice/InputNode/InputNodeSlice.ts","components/FlowChart/FlowChartNode/CsvFileNode.tsx","store/slice/HDF5/HDF5Selectors.ts","store/slice/HDF5/HDF5Type.ts","store/slice/HDF5/HDF5Action.ts","components/FlowChart/FlowChartNode/HDF5FileNode.tsx","components/FlowChart/FlowChartNode/FluoFileNode.tsx","components/FlowChart/FlowChartNode/BehaviorFileNode.tsx","store/slice/NWB/NWBAction.ts","store/slice/NWB/NWBType.ts","store/slice/NWB/NWBSlice.ts","components/Accordion.tsx","components/ParamFormItemCreator.tsx","components/FlowChart/NWB.tsx","store/slice/Snakemake/SnakemakeType.ts","store/slice/Snakemake/SnakemakeAction.ts","store/slice/Snakemake/SnakemakeSlice.ts","components/FlowChart/Snakemake.tsx","api/run/Run.ts","store/slice/Pipeline/PipelineActions.ts","store/slice/Pipeline/PipelineSlice.ts","components/RunButtons.tsx","components/ToolBar.tsx","components/FlowChart/ReactFlowComponent.tsx","components/FlowChart/CustomEdge.tsx","store/slice/RightDrawer/RightDrawerSelectors.ts","store/slice/AlgorithmNode/AlgorithmNodeType.ts","store/slice/AlgorithmNode/AlgorithmNodeActions.ts","store/slice/AlgorithmNode/AlgorithmNodeSlice.ts","components/FlowChart/AlgorithmParamForm.tsx","components/FlowChart/RightDrawer.tsx","components/FlowChart/FlowChart.tsx","components/Visualize/VisualizeItemAddButton.tsx","components/Visualize/VisualizeItemLayoutMenuIcon.tsx","components/Visualize/FilePathSelect.tsx","components/Visualize/VisualizeItems.tsx","components/Visualize/Editor/GradientColorPicker.tsx","components/Visualize/Editor/ImageItemEditor.tsx","components/Visualize/Editor/CsvItemEditor.tsx","components/Visualize/Editor/HeatmapItemEditor.tsx","components/Visualize/Editor/TimeSeriesItemEditor.tsx","components/Visualize/Editor/RoiItemEditor.tsx","components/Visualize/Editor/ScatterItemEditor.tsx","components/Visualize/Editor/BarItemEditor.tsx","components/Visualize/VisualizeItemEditor.tsx","components/Visualize/Visualize.tsx","store/slice/Experiments/ExperimentsSelectors.ts","components/Experiment/ExperimentStatusIcon.tsx","components/Experiment/Button/DownloadButton.tsx","components/Experiment/CollapsibleTable.tsx","components/Experiment/Button/DeleteButton.tsx","components/Experiment/Button/ImportButton.tsx","components/Experiment/ExperimentTable.tsx","components/Experiment/Experiment.tsx","components/optinist.png","components/Layout.tsx","store/slice/Pipeline/PipelineHook.ts","App.tsx","reportWebVitals.ts","store/slice/AlgorithmList/AlgorithmListSlice.ts","store/slice/DisplayData/DisplayDataSlice.ts","store/slice/FileUploader/FileUploaderSlice.ts","store/slice/FilesTree/FilesTreeSlice.ts","store/slice/HandleTypeColor/HandleTypeColorSlice.ts","store/slice/HDF5/HDF5Utils.ts","store/slice/HDF5/HDF5Slice.ts","store/slice/Experiments/ExperimentsUtils.ts","store/slice/Experiments/ExperimentsSlice.ts","store/store.ts","Theme.ts","index.tsx"],"names":["getChildParam","path","ParamMap","result","Object","values","node","isParamChild","children","param","type","convertToParamMap","dto","keyList","entries","forEach","name","value","kList","Array","isArray","isDictObject","concat","join","push","selectAlgorithmNode","state","algorithmNode","selectAlgorithmName","nodeId","selectAlgorithmParams","params","isAlgoChild","algoNode","getAlgoChild","algoList","algoName","convertToAlgoListType","prototype","hasOwnProperty","call","functionPath","args","returns","selectAlgorithmList","algorithmList","selectAlgorithmListIsLated","isLatest","selectAlgorithmListTree","tree","ALGORITHM_LIST_SLICE_NAME","HOST","process","PORT","BASE_URL","getAlgoList","createAsyncThunk","_","thunkAPI","a","rejectWithValue","axios","get","response","data","INPUT_NODE_SLICE_NAME","FILE_TYPE_SET","FLOW_ELEMENT_SLICE_NAME","NODE_TYPE_SET","addAlgorithmNode","addInputNode","createAction","AlgorithmTreeView","React","memo","dispatch","useDispatch","useSelector","useEffect","TreeView","sx","flexGrow","height","defaultCollapseIcon","defaultExpandIcon","TreeItem","label","InputNodeComponent","fileName","nodeName","fileType","map","i","AlgoNodeComponent","onAlgoNodeClick","newNode","id","nanoid","toFixed","LeafItem","AddButton","onClick","nodeType","componentType","onDataNodeClick","IconButton","style","padding","size","Typography","variant","textOverflow","overflow","width","display","styled","treeItemClasses","iconContainer","margin","INITIAL_ALGO_STYLE","borderRadius","INITIAL_DATA_STYLE","border","getExperimentsApi","deleteExperimentByUidApi","uid","delete","deleteExperimentByListApi","uidList","post","importExperimentByUidApi","EXPERIMENTS_SLICE_NAME","getExperiments","deleteExperimentByUid","deleteExperimentByList","importExperimentByUid","setInputNodeFilePath","isNodeData","isNode","isAlgorithmNodeData","getLabelByPath","filePath","length","getFileName","split","reverse","isInputNodePostData","isInputNodeData","isAlgorithmNodePostData","initialFlowPosition","x","y","zoom","initialElementCoord","initialState","flowElements","position","flowPosition","elementCoord","flowElementSlice","createSlice","reducers","setFlowPosition","action","payload","setFlowElements","deleteFlowElements","removeElements","deleteFlowElementsById","element","find","edge","undefined","editFlowElementPositionById","coord","elementIdx","findIndex","ele","targetItem","extraReducers","builder","addCase","fulfilled","meta","arg","targetPosition","Position","Left","sourcePosition","Right","newPosition","updateElementCoord","targetNode","newNodeList","nodeList","edgeList","min","max","Math","random","actions","selectFlowElements","flowElement","selectFlowPosition","selectNodeById","filter","selectNodeLabelById","isCsvInputNode","inputNode","isHDF5InputNode","selectInputNodeById","selectInputNodeDefined","keys","includes","selectCsvInputNodeSelectedFilePath","selectedFilePath","Error","selectImageInputNodeSelectedFilePath","selectHDF5InputNodeSelectedFilePath","selectFilePathIsUndefined","selectCsvInputNodeParam","selectInputNodeHDF5Path","item","hdf5Path","useHandleColor","key","handleColor","colorMap","selectFilesTree","filesTree","FILES_TREE_SLICE_NAME","FILE_TREE_TYPE_SET","getFilesTree","file_type","convertToTreeNodeType","isdir","isDir","nodes","getNodeByPath","FileSelectDialog","open","initialFilePath","onClickCancel","onClickOk","onClose","title","multiSelect","useState","setSelectedFilePath","theme","useTheme","Dialog","fullWidth","DialogTitle","DialogContent","dividers","marginBottom","spacing","borderColor","palette","divider","FileTreeView","FilePathSelectedListView","DialogActions","Button","color","selectFilesTreeNodes","selectFilesIsLatest","isLoading","selectFilesIsLoading","useFileTree","onCheckFile","selectedPath","onCheckDir","checked","childrenFilePathList","from","Set","LinearProgress","disableSelection","onNodeSelect","event","nodeIds","isDirNodeByPath","TreeNode","allChecked","every","allNotChecked","indeterminate","icon","htmlColor","TreeItemLabel","checkboxProps","e","stopPropagation","onChange","target","childNode","fontSize","Box","alignItems","Checkbox","disableRipple","marginRight","text","LinearProgressWithLabel","props","mr","minWidth","round","FILE_UPLOADER_SLICE_NAME","setUploadProgress","uploadFile","requestId","formData","config","getUploadConfig","percent","total","progess","resultPath","file_path","onUpdateProgressFn","onUploadProgress","progressEvent","percentCompleted","loaded","inistialUploaderState","isUninitialized","pending","uploadingProgress","error","selectFileUploader","fileUploader","useFileUploader","useRef","onUploadFile","useCallback","current","uninitialized","selectFileUploadIsUninitialized","selectUploadFilePath","selectFileUploadIsPending","selectFileUploadIsFulfilled","progress","selectFileUploadProgress","selectFileUploadError","FileSelect","onChangeFilePath","uploadedFilePath","marginLeft","FileSelectImple","onSelectFile","fileTreeType","selectButtonLabel","uploadButtonLabel","inputRef","setOpen","accept","getFileInputAccept","ButtonGroup","click","ref","preventDefault","files","file","FormData","append","visibility","className","toHandleId","getHandleType","handleId","isValidConnection","connection","sourceHandle","targetHandle","arrayEqualityFn","b","v","twoDimarrayEqualityFn","sourceHandleStyle","top","ImageFileNode","ImageFileNodeImple","elementSelected","selected","returnType","imageColor","background","alpha","primary","light","right","RIGHT_DRAWER_MODE","mode","currendNodeId","rightDrawerSlice","openRightDrawer","closeRightDrawer","toggleParamForm","toggleNwb","toggleSnakemake","elm","selectNwb","nwb","selectNwbParamsKeyList","selectNwbParam","paramKey","selectNwbParamsValue","selectSnakemakeParams","snakemake","selectSnakemake","selectSnakemakeParamsKeyList","selectSnakemakeParam","selectSnakemakeParamsValue","PIPELINE_SLICE_NAME","RUN_STATUS","NODE_RESULT_STATUS","RUN_BTN_OPTIONS","RUN_NEW","RUN_ALREADY","RUN_BTN_LABELS","DISPLAY_DATA_SLICE_NAME","DATA_TYPE_SET","toDataType","isNodeResultPending","nodeResult","status","isNodeResultSuccess","isStartedPipeline","pipeline","getInitialRunResult","runPostData","initialResult","convertToOutputPath","selectPipelineLatestUid","currentPipeline","selectRunPostData","nwbParam","selectNwbParams","snakemakeParam","edgeListForRun","isEdge","selectEdgeListForRun","selectNodePostDataListForRun","forceRunList","selectForceRunList","selectInputNodeSelectedFilePath","selectInputNodeFileType","selectInputNodeParam","isUpdated","selectPipelineNodeResultStatus","selectStartedPipeline","run","selectPipelineRunBtn","runBtn","selectRunResultPendingNodeIdList","runResult","isNodeResultPendingAndNodeId","selectPipelineStatus","selectPipelineIsCanceled","selectPipelineIsStartedSuccess","isNodeResultSuccessAndNodeId","selectPipelineNodeResultOutputPaths","outputPaths","selectDisplayData","displayData","selectTimeSeriesDataIsInitialized","timeSeries","selectHeatMapDataIsInitialized","heatMap","selectImageData","image","selectImageDataIsInitialized","selectImageDataIsPending","selectCsvDataIsInitialized","csv","selectCsvDataError","selectCsvDataIsPending","selectCsvDataIsFulfilled","selectRoiData","roi","selectRoiDataIsInitialized","selectScatterDataIsInitialized","scatter","selectBarDataIsInitialized","bar","selectHTMLDataIsInitialized","html","VISUALIZE_ITEM_SLICE_NAME","VISUALIZE_ITEM_TYPE_SET","isDisplayDataItem","itemType","isImageItem","dataType","isTimeSeriesItem","isCsvItem","isHeatMapItem","isScatterItem","selectSelectedVisualizeItemId","visualaizeItem","selectedItemId","selectVisualizeImageItemIdList","items","Number","itemId","selectVisualizeItems","isWorkflowDialog","selectVisualizeItemLayout","layout","selectVisualizeItemWidth","selectVisualizeItemHeight","selectVisualizeDataType","selectVisualizeDataNodeId","selectVisualizeDataFilePath","selectImageItemFilePath","selectRoiItemFilePath","roiItem","selectImageItemShowticklabels","showticklabels","selectImageItemZsmooth","zsmooth","selectImageItemStartIndex","startIndex","selectImageItemEndIndex","endIndex","selectImageItemShowLine","showline","selectImageItemShowGrid","showgrid","selectImageItemShowScale","showscale","selectImageItemColors","colors","selectImageItemRoiAlpha","roiAlpha","selectTimeSeriesItemOffset","offset","selectTimeSeriesItemSpan","span","selectTimeSeriesItemShowGrid","selectTimeSeriesItemShowLine","selectTimeSeriesItemShowTickLabels","selectTimeSeriesItemZeroLine","zeroline","selectTimeSeriesItemXrange","xrange","selectTimeSeriesItemDisplayNumbers","refImageItemId","displayNumbers","selectTimeSeriesItemRefImageItemId","selectTimeSeriesItemCheckedList","checkedList","selectRoiItemMaxNumber","roiFilePath","roiData","arr","selectHeatMapItemShowScale","selectHeatMapItemColors","selectCsvItemTranspose","transpose","selectCsvItemSetHeader","setHeader","selectCsvItemSetIndex","setIndex","selectScatterItemXIndex","xIndex","selectScatterItemYIndex","yIndex","selectDisplayDataIsSingle","targetFilePath","getTimeSeriesDataById","index","getTimeSeriesAllData","getHeatMapData","getImageData","start_index","end_index","getCsvData","getRoiData","getScatterData","getBarData","getHTMLData","setImageItemClikedDataId","clickedDataId","getState","deleteDisplayItem","setNewDisplayDataPath","displayDataCommonInitialValue","imageItemInitialValue","rgb","activeIndex","duration","timeSeriesItemInitialValue","left","maxIndex","heatMapItemInitialValue","csvItemInitialValue","roiItemInitialValue","scatterItemInitialValue","barItemInitialValue","hdf5ItemInitialValue","htmlItemInitialValue","fluoItemInitialValue","behaviorItemInitialValue","getDisplayDataItemInitialValue","visualaizeItemSlice","pushInitialItemToNewRow","newItemId","addInitialItemFn","insertInitialItemToNextColumn","targetItemId","targetRowIndex","row","targetColumnIndex","indexOf","splice","addItemForWorkflowDialog","getMaxItemId","deleteAllItemForWorkflowDialog","setItemSize","selectItem","setRoiItemFilePath","setFilePath","setImageItemFilePath","setTimeSeriesItemFilePath","setHeatMapItemFilePath","setItemType","resetImageActiveIndex","resetImageActiveIndexFn","incrementImageActiveIndex","decrementImageActiveIndex","setImageActiveIndex","setImageItemShowticklabels","setImageItemZsmooth","setImageItemShowLine","setImageItemShowGrid","setImageItemShowScale","setImageItemColors","setImageItemStartIndex","setImageItemEndIndex","setImageItemRoiAlpha","setImageItemDuration","setTimeSeriesItemOffset","setTimeSeriesItemSpan","setTimeSeriesItemShowGrid","setTimeSeriesItemShowLine","setTimeSeriesItemShowTickLabels","setTimeSeriesItemZeroLine","setTimeSeriesItemXrangeLeft","setTimeSeriesItemXrangeRight","setTimeSeriesItemDisplayNumbers","setTimeSeriesItemCheckedList","setTimeSeriesItemMaxIndex","setTimeSeriesRefImageItemId","setHeatMapItemShowScale","setHeatMapItemColors","setCsvItemTranspose","setCsvItemSetHeader","setCsvItemSetIndex","setScatterItemXIndex","setScatterItemYIndex","imageItemId","idList","reduce","nextId","DisplayDataContext","createContext","NaN","HeatMapPlot","useContext","isPending","isInitialized","selectHeatMapDataError","isFulfilled","selectHeatMapDataIsFulfilled","HeatMapImple","heatMapData","heatMapDataEqualtyFn","colorscale","useMemo","z","parseFloat","offsets","hoverongaps","showlegend","dragmode","t","l","autosize","displayModeBar","responsive","ImagePlot","selectImageDataError","ImagePlotImple","selectImageItemActiveIndex","ImagePlotChart","imageData","selectActiveImageData","imageDataEqualtyFn","maxSize","selectImageItemDuration","timeDataMaxIndex","maxIdx","selectRoiItemIndex","colorscaleRoi","createColormap","colormap","nshades","format","hovertemplate","new_i","floor","hex","rgba","r","g","outParts","toString","substring","part","rgba2hex","zmin","zmax","xaxis","autorange","autotick","ticks","yaxis","automargin","plotlyHeight","getBoundingClientRect","getElementsByClassName","clientHeight","plotContainer","intervalRef","clearInterval","onPlayClick","setInterval","onDurationChange","newValue","TextField","inputProps","step","InputLabelProps","shrink","Slider","defaultValue","valueLabelDisplay","marks","activeThumb","newIndex","points","curveNumber","RoiPlot","selectRoiDataIsFulfilled","selectRoiDataError","RoiPlotImple","idx","String","ScatterPlot","selectScatterDataError","selectScatterDataIsFulfilled","ScatterPlotImple","scatterData","scatterDataEqualityFn","textposition","textfont","family","marker","font","aArray","bArray","aKey","CsvPlot","CsvPlotImple","PresentationalCsvPlot","csvData","col","header","headerData","field","headerName","rows","row_id","rowObj","fromEntries","columns","TimeSeriesPlot","selectTimeSeriesDataError","selectTimeSeriesDataIsFulfilled","TimeSeriesPlotImple","timeSeriesData","timeSeriesDataEqualityFn","dataXrange","selectTimeSeriesXrange","dataStd","std","selectTimeSeriesStd","colorScale","activeIdx","mean","sqrt","pow","parseInt","visible","line","error_y","array","annotations","xref","yref","arrowhead","ax","ay","range","onLegendClick","clickNumber","aValue","bKey","bValue","nestEqualityFun","BarPlot","selectBarDataError","selectBarDataIsFulfilled","BarPlotImple","barData","barDataEqualityFn","HTMLPlot","selectHTMLDataError","selectHTMLDataIsFulfilled","HTMLPlotImple","htmlData","dangerouslySetInnerHTML","__html","DisplayDataItem","Provider","DisplayPlot","AlgorithmOutputDialog","closeFn","TitleWithCloseButton","pt","px","OutputViewer","m","p","outputKeyList","selectPipelineNodeResultOutputKeyList","selectedOutoutKey","setSelectedOutputKey","OutputSelectTabs","onSelectOutput","DisplayDataView","outputKey","Tabs","scrollButtons","tabsClasses","opacity","Tab","textTransform","selectPipelineNodeResultOutputFilePath","selectPipelineNodeResultOutputFileDataType","selectVisualizeItemIdForWorkflowDialog","mx","my","leftHandleStyle","rightHandleStyle","AlgorithmNode","AlgorithmNodeImple","isConnectable","useStatus","AlgoName","disabled","AlgoArgs","AlgoReturns","Message","paddingLeft","textAlign","main","algoArgs","algoListChild","selectAlgoArgs","algoInfoListEqualtyFn","info","algoInfo","ArgHandle","algoReturns","selectAlgoReturns","ReturnHandle","isNone","hex_color","isHover","setHover","rgb_color","exec","hexToRgb","onMouseEnter","onMouseLeave","Tooltip","placement","arrow","latestUid","errorMsg","message","selectPipelineNodeResultMessage","anchorElRef","prevOpen","float","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","FormHelperText","inputNodeSlice","deleteInputNode","setCsvInputNodeParam","setInputNodeHDF5Path","newState","CsvFileNode","CsvFileNodeImple","ParamSettingDialog","selectCsvInputNodeParamSetHeader","setSetHeader","selectCsvInputNodeParamSetIndex","setSetIndex","selectCsvInputNodeParamTranspose","setTranspose","FormControlLabel","control","Switch","CsvPreview","otherProps","selectHDF5","hdf5","HDF5_SLICE_NAME","getHDF5Tree","HDF5FileNode","HDF5FileNodeImple","ItemSelect","structureFileName","Structure","autoFocus","useHDF5Tree","shape","nbytes","FluoFileNode","FluoFileNodeImple","fluoColor","BehaviorFileNode","BehaviorFileNodeImple","behaviorColor","getNWBParams","nwbSlice","updateParam","Accordion","disableGutters","elevation","square","boxShadow","borderBottom","createParamFormItemComponent","paramSelector","paramValueSelector","paramUpdateActionCreator","useParamValueUpdate","ParamItemForString","updateParamAction","multiline","ParamItemForNumber","ParamItemForBoolean","ParamItemForValueType","ParamChildItem","marginTop","verticalAlign","ParamItem","AccordionSummary","expandIcon","AccordionDetails","NWBSettingButton","endIcon","NWBSettingContents","paramKeyList","Component","SNAKEMAKE_SLICE_NAME","getSnakemakeParams","SnakemakeSlice","SnakemakeButton","SnakemakeContents","runApi","runByUidApi","pendingNodeIdList","responseData","runByCurrentUid","currentUid","pollRunResult","pipelineSlice","cancelPipeline","setRunBtnOption","runBtnOption","nodeResultDto","outputPath","convertToRunResult","rejected","addMatcher","isAnyOf","RunButtons","isStartedSuccess","filePathIsUndefined","handleCancelPipeline","handleRunPipeline","handleRunPipelineByUid","dialogOpen","setDialogOpen","enqueueSnackbar","useSnackbar","menuOpen","setMenuOpen","anchorRef","handleClose","contains","uidExists","Popper","role","transition","disablePortal","TransitionProps","Grow","Paper","ClickAwayListener","onClickAway","MenuList","option","MenuItem","handleMenuItemClick","RunDialog","handleRun","setName","setError","helperText","ToolBar","zIndex","componentTypes","edgeTypes","buttonedge","sourceX","sourceY","targetX","targetY","arrowHeadType","markerEndId","edgePath","getBezierPath","markerEnd","getMarkerEnd","getEdgeCenter","edgeCenterX","edgeCenterY","d","foreignObjectSize","ReactFlowComponent","elements","onElementsRemove","elementsToRemove","onConnect","addEdge","animated","onDragOver","dataTransfer","dropEffect","onNodeDragStop","nodeTypes","defaultPosition","defaultZoom","onMoveEnd","selectRightDrawerIsOpen","rightDrawer","selectRightDrawerMode","selectRightDrawerCurrentNodeId","ALGORITHM_NODE_SLICE_NAME","getAlgoParams","algorithmNodeSlice","AlgorithmParamForm","ParamFormContext","algoParamIsLoaded","selectAlgorithmParamsExit","selectAlgorithmParamsKeyList","selectAlgorithmParam","selectAlgorithmParamsValue","Contents","ParamFormConetent","StyledDrawer","Drawer","flexShrink","drawerClasses","paper","MainContents","RightDrawer","anchor","Toolbar","Divider","FlowChart","RootDiv","DrawerContents","drawerWidth","flexDirection","transitions","create","easing","sharp","leavingScreen","easeOut","enteringScreen","VisualizeItemAddButton","StyledPaper","justifyContent","StyledButton","borderWidth","DisplayDataItemLayoutMenuIcon","isSingleData","PresentationalLayoutMenuIcon","onClickDeleteMenu","deleteData","onClickInsertMenu","Menu","ListItemIcon","ListItemText","FilePathSelect","selectedNodeId","onSelect","inputNodeFilePathInfoList","inputNodes","selectInputNode","toDataTypeFromFileType","inputNodeDataType","algorithmNodeOutputPathInfoList","selectPipelineNodeResultSuccessList","paths","onSelectHandle","menuItemList","pathInfo","pathElm","ListSubheader","FormControl","maxWidth","InputLabel","Select","onOpen","FlexItemList","flexWrap","Item","isSelected","itemDataType","resizeTrigger","setResizeTrigger","resizeCoord","setResizeCoord","cursor","onMouseDown","screenX","screenY","onMouseUp","onMouseMove","newWidth","newHeight","FilePathSelectItem","RefImageItemIdSelect","newFilePath","newDataType","basePayload","prevDataType","prevFilePath","itemIdList","selectedRefImageItemId","isNaN","GradientColorPicker","dispatchSetColor","maxStops","paletteHeight","onPaletteChange","colorCode","rgbStr","replace","flatStyle","WrappedSketchPicker","c","ImageItemEditor","SelectedItemIdContext","roiItemNodeId","selectRoiItemNodeId","roiItemFilePath","newPath","onSelectImageFile","Showticklabels","ShowLine","ShowGrid","ShowScale","Zsmooth","RoiAlpha","inputError","StartEndIndex","onChangeStartIndex","onChangeEndIndex","CsvItemEditor","Transpose","SetHeader","SetIndex","HeatmapItemEditor","TimeSeriesItemEditor","Offset","Span","ShowTickLabels","ZeroLine","Xrange","newLeft","newRight","LegendSelect","selectTimeSeriesItemFilePath","handleChange","ml","RoiItemEditor","ScatterItemEditor","XIndex","YIndex","BarItemEditor","VisualizeItemEditor","DisplayDataItemEditor","DisplayEditor","StyledDrawerContents","Visualize","selectExperiments","experiments","selectExperimentsSatusIsUninitialized","selectExperimentsSatusIsFulfilled","selectExperimentsSatusIsError","selectExperimentsErrorMessage","selectExperimentList","experimentList","selectExperiment","selectExperimentName","selectExperimentFunction","functions","ExperimentStatusIcon","NWBDownloadButton","ExperimentUidContext","url","setFileUrl","responseType","URL","createObjectURL","Blob","revokeObjectURL","href","download","ConfigDownloadButton","CollapsibleTable","TableRow","TableCell","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","gutterBottom","component","Table","Head","Body","TableHead","nodeIdList","selectExperimentFunctionNodeIdList","TableBody","TableRowOfFunction","selectExperimentFunctionName","selectExperimentFunctionStatus","scope","DeleteButton","ImportButton","unwrap","then","ExperimentTable","isError","TableImple","ExperimentsErrorView","Alert","severity","AlertTitle","order","setOrder","sortTarget","setSortTarget","setCheckedList","onCheckBoxClick","TableContainer","HeadItem","sortHandler","property","sort","getComparator","expData","RowItem","TableSortLabel","active","direction","timestamp","selectExperimentTimeStamp","statusList","f","selectExperimentStatus","Fragment","tableCellClasses","root","borderBottomWidth","orderBy","descendingComparator","Experiment","backgroundColor","StyledAppBar","AppBar","drawer","TabPanel","other","hidden","a11yProps","Layout","setValue","runPipeline","isCanceled","intervalId","prevStatus","setPrevStatus","useRunPipeline","src","optinistLogo","alt","centered","textColor","SnackbarCloseButton","snackbarKey","closeSnackbar","App","maxSnack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","algorithmListSlice","deleteDisplayDataFn","displayDataSlice","fileUploaderSlice","setFileUploaderStateById","currentState","filesTreeSlice","ImageData","MuiColors","IscellData","TimeSeriesData","Suite2pData","FluoData","BehaviorData","nextKey","handleTypeColorSlice","HDF5Slice","convertToExperimentType","function","unique_id","postion","convertToExperimentStatus","success","experimentsSlice","convertToExperimentListType","store","configureStore","reducer","algorithmListReducer","algorithmNodeReducer","displayDataReducer","fileUploaderReducer","flowElementReducer","inputNodeReducer","handleTypeColorReducer","filesTreeReducer","nwbReducer","rightDrawerReducer","visualaizeItemReducer","snakemakeReducer","pipelineReducer","hdf5Reducer","experimentsReducer","createTheme","components","MuiTextField","defaultProps","MuiSelect","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.02f195ee.chunk.js","sourcesContent":["import {\n  ParamDTO,\n  ParamChild,\n  ParamParent,\n  ParamType,\n  ParamMap,\n} from './ParamType'\n\nexport function getChildParam(\n  path: string,\n  ParamMap: ParamMap,\n): ParamChild | null {\n  let result: ParamChild | null = null\n  for (const node of Object.values(ParamMap)) {\n    if (isParamChild(node)) {\n      if (node.path === path) {\n        result = node\n      }\n    } else {\n      result = getChildParam(path, node.children)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function isParamChild(param: ParamType): param is ParamChild {\n  return param.type === 'child'\n}\n\nexport function isParamParent(param: ParamType): param is ParamParent {\n  return param.type === 'parent'\n}\n\nfunction isDictObject(value: unknown): value is { [key: string]: unknown } {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst PATH_SEPARATOR = '/'\n\nexport function convertToParamMap(dto: ParamDTO, keyList?: string[]): ParamMap {\n  const ParamMap: ParamMap = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    const kList = keyList ?? []\n    if (isDictObject(value)) {\n      kList.push(name)\n      ParamMap[name] = {\n        type: 'parent',\n        children: convertToParamMap(value, kList),\n      }\n    } else {\n      ParamMap[name] = {\n        type: 'child',\n        value,\n        path: kList.concat([name]).join(PATH_SEPARATOR),\n      }\n    }\n  })\n  return ParamMap\n}\n\nexport function equalsParamMap(a: ParamMap, b: ParamMap) {\n  if (a === b) {\n    return true\n  }\n  const aArray = Object.keys(a)\n  const bArray = Object.keys(b)\n  return (\n    aArray.length === bArray.length &&\n    aArray.every((aKey) => {\n      const aValue = a[aKey]\n      const bValue = b[aKey]\n      return equalsParam(aValue, bValue)\n    })\n  )\n}\n\nfunction equalsParam(a: ParamType, b: ParamType): boolean {\n  if (a === b) {\n    return true\n  }\n  if (isParamChild(a) && isParamChild(b)) {\n    return equalsParamChild(a, b)\n  } else if (isParamParent(a) && isParamParent(b)) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      aArray.length === bArray.length &&\n      aArray.every((aKey) => {\n        const aValue = a.children[aKey]\n        const bValue = b.children[aKey]\n        return equalsParam(aValue, bValue)\n      })\n    )\n  } else {\n    return false\n  }\n}\n\nfunction equalsParamChild(a: ParamChild, b: ParamChild) {\n  return a.path === b.path && a.value === b.value\n}\n","import { RootState } from 'store/store'\n\nimport { getChildParam } from 'store/utils/param/ParamUtils'\n\nexport const selectAlgorithmNode = (state: RootState) => state.algorithmNode\n\nexport const selectAlgorithmNodeDefined =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(state.algorithmNode).includes(nodeId)\n\nexport const selectAlgorithmFunctionPath =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNode(state)[nodeId].functionPath\n\nexport const selectAlgorithmName = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNode(state)[nodeId].name\n\nexport const selectAlgorithmParams = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNode(state)[nodeId].params\n\nexport const selectAlgorithmIsUpdated =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNode(state)[nodeId].isUpdated\n\nexport const selectAlgorithmParamsExit =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNode(state)[nodeId].params !== null\n\nexport const selectAlgorithmParamsKeyList =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(selectAlgorithmNode(state)[nodeId]?.params ?? {})\n\nexport const selectAlgorithmParamsValue =\n  (nodeId: string, path: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmParam =\n  (nodeId: string, paramKey: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      return params[paramKey]\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n","import {\n  AlgorithmNodeType,\n  AlgoListDTO,\n  AlgorithmInfo,\n  AlgorithmChild,\n  AlgorithmParent,\n  AlgorithmListTree,\n} from './AlgorithmListType'\n\nexport function isAlgoChild(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmChild {\n  return algoNode.type === 'child'\n}\n\nexport function isAlgoParent(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmParent {\n  return algoNode.type === 'parent'\n}\n\nexport function getAlgoChild(\n  algoList: AlgorithmListTree,\n  algoName: string,\n): AlgorithmChild | null {\n  let result: AlgorithmChild | null = null\n  for (const [name, node] of Object.entries(algoList)) {\n    if (isAlgoChild(node)) {\n      if (name === algoName) {\n        result = node\n      }\n    } else {\n      result = getAlgoChild(node.children, algoName)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function convertToAlgoListType(dto: AlgoListDTO) {\n  const algoList: AlgorithmListTree = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    if (Object.prototype.hasOwnProperty.call(value, 'children')) {\n      algoList[name] = {\n        type: 'parent',\n        children: convertToAlgoListType(\n          (\n            value as {\n              children: AlgoListDTO\n            }\n          ).children as AlgoListDTO,\n        ),\n      }\n    } else {\n      const dto = value as {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n      algoList[name] = {\n        type: 'child',\n        functionPath: dto.path,\n        args: dto.args,\n        returns: dto.returns,\n      }\n    }\n  })\n  return algoList\n}\n","import { RootState } from 'store/store'\nimport { selectAlgorithmName } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { getAlgoChild } from './AlgorithmListUtils'\n\nexport const selectAlgorithmList = (state: RootState) => state.algorithmList\n\nexport const selectAlgorithmListIsLated = (state: RootState) =>\n  selectAlgorithmList(state).isLatest\n\nexport const selectAlgorithmListTree = (state: RootState) =>\n  selectAlgorithmList(state).tree\n\nexport const selectAlgoArgs = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.args\n  } else {\n    return undefined\n  }\n}\n\nexport const selectAlgoReturns = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.returns\n  } else {\n    return undefined\n  }\n}\n","export const ALGORITHM_LIST_SLICE_NAME = 'algorithmList'\n\nexport type AlgorithmListType = {\n  isLatest: boolean\n  tree: AlgorithmListTree\n}\n\nexport type AlgorithmListTree = {\n  [algoName: string]: AlgorithmNodeType\n}\n\nexport type AlgorithmNodeType = AlgorithmChild | AlgorithmParent\nexport type AlgorithmChild = {\n  type: 'child'\n  args: AlgorithmInfo[]\n  returns: AlgorithmInfo[]\n  functionPath: string\n}\nexport type AlgorithmParent = {\n  type: 'parent'\n  children: {\n    [name: string]: AlgorithmNodeType\n  }\n}\nexport type AlgorithmInfo = {\n  name: string\n  type: string\n  isNone?: boolean\n}\n\nexport type AlgoListDTO = {\n  [name: string]:\n    | {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n    | { children: AlgoListDTO }\n}\n","const HOST = process.env.REACT_APP_SERVER_HOST\nconst PORT = process.env.REACT_APP_SERVER_PORT\n\nexport const BASE_URL = `http://${HOST}:${PORT}`\nexport const WS_BASE_URL = `ws://${HOST}:${PORT}`\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios'\nimport { AlgoListDTO, ALGORITHM_LIST_SLICE_NAME } from './AlgorithmListType'\nimport { BASE_URL } from 'const/API'\n\nexport const getAlgoList = createAsyncThunk<AlgoListDTO, void>(\n  `${ALGORITHM_LIST_SLICE_NAME}/getAlgoList`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await axios.get(`${BASE_URL}/algolist`)\n      return response.data\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","export const INPUT_NODE_SLICE_NAME = 'inputNode'\n\nexport const FILE_TYPE_SET = {\n  CSV: 'csv',\n  IMAGE: 'image',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type FILE_TYPE = typeof FILE_TYPE_SET[keyof typeof FILE_TYPE_SET]\n\nexport type InputNode = {\n  [nodeId: string]: InputNodeType\n}\n\nexport type InputNodeType = CsvInputNode | ImageInputNode | HDF5InputNode\n\ninterface InputNodeBaseType<\n  T extends FILE_TYPE,\n  P extends { [key: string]: unknown },\n> {\n  fileType: T\n  selectedFilePath?: string | string[]\n  selectedFileName?: string\n  param: P\n}\n\nexport type CsvInputParamType = {\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\n\nexport interface CsvInputNode\n  extends InputNodeBaseType<'csv', CsvInputParamType> {\n  selectedFilePath?: string\n}\n\nexport interface ImageInputNode extends InputNodeBaseType<'image', {}> {\n  selectedFilePath?: string[]\n}\n\nexport interface HDF5InputNode extends InputNodeBaseType<'hdf5', {}> {\n  selectedFilePath?: string\n  hdf5Path?: string\n}\n","import { Elements, FlowTransform } from 'react-flow-renderer'\n\nexport const FLOW_ELEMENT_SLICE_NAME = 'flowElement'\n\nexport const NODE_TYPE_SET = {\n  INPUT: 'input',\n  ALGORITHM: 'algorithm',\n} as const\n\nexport type NODE_TYPE = typeof NODE_TYPE_SET[keyof typeof NODE_TYPE_SET]\n\nexport type NodeData = AlgorithmNodeData | InputNodeData\n\ninterface NodeDataBaseType<T extends NODE_TYPE> {\n  label: string\n  type: T\n}\n\nexport interface InputNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.INPUT> {}\n\nexport interface AlgorithmNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.ALGORITHM> {}\n\nexport interface ElementCoord {\n  x: number\n  y: number\n}\n\nexport interface FlowElement {\n  flowElements: Elements<NodeData>\n  flowPosition: FlowTransform\n  elementCoord: ElementCoord\n}\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Node } from 'react-flow-renderer'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'store/utils/param/ParamType'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { FLOW_ELEMENT_SLICE_NAME, NodeData } from './FlowElementType'\n\nexport const addAlgorithmNode = createAsyncThunk<\n  ParamDTO,\n  {\n    node: Omit<Node<NodeData>, 'position'>\n    functionPath: string\n    name: string\n  }\n>(`${FLOW_ELEMENT_SLICE_NAME}/addAlgorithmNode`, async ({ name }, thunkAPI) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/params/${name}`)\n    return response.data\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const addInputNode = createAction<{\n  node: Omit<Node<NodeData>, 'position'>\n  fileType: FILE_TYPE\n}>(`${FLOW_ELEMENT_SLICE_NAME}/addInputNode`)\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { nanoid } from '@reduxjs/toolkit'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem'\nimport { styled, Typography } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport IconButton from '@mui/material/IconButton'\nimport AddIcon from '@mui/icons-material/Add'\n\nimport {\n  selectAlgorithmListIsLated,\n  selectAlgorithmListTree,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { AlgorithmNodeType } from 'store/slice/AlgorithmList/AlgorithmListType'\nimport { isAlgoChild } from 'store/slice/AlgorithmList/AlgorithmListUtils'\nimport { getAlgoList } from 'store/slice/AlgorithmList/AlgorithmListActions'\nimport { FILE_TYPE, FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  NODE_TYPE,\n  NODE_TYPE_SET,\n} from 'store/slice/FlowElement/FlowElementType'\nimport {\n  addAlgorithmNode,\n  addInputNode,\n} from 'store/slice/FlowElement/FlowElementActions'\n\nexport const AlgorithmTreeView = React.memo(() => {\n  const dispatch = useDispatch()\n  const algoList = useSelector(selectAlgorithmListTree)\n  const isLatest = useSelector(selectAlgorithmListIsLated)\n\n  useEffect(() => {\n    if (!isLatest) {\n      dispatch(getAlgoList())\n    }\n  }, [dispatch, isLatest])\n\n  const onAlgoNodeClick = (nodeName: string, functionPath: string) => {\n    const name = nodeName\n    const newNode = {\n      id: nanoid(),\n      type: 'AlgorithmNode',\n      data: { label: name, type: NODE_TYPE_SET.ALGORITHM },\n    }\n    dispatch(\n      addAlgorithmNode({\n        node: newNode,\n        name,\n        functionPath,\n      }),\n    )\n  }\n\n  return (\n    <TreeView\n      sx={{\n        flexGrow: 1,\n        height: '100%',\n      }}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId=\"Data\" label=\"Data\">\n        <InputNodeComponent\n          fileName={'image'}\n          nodeName={'imageData'}\n          fileType={FILE_TYPE_SET.IMAGE}\n        />\n        <InputNodeComponent\n          fileName={'csv'}\n          nodeName={'csvData'}\n          fileType={FILE_TYPE_SET.CSV}\n        />\n        <InputNodeComponent\n          fileName={'hdf5'}\n          nodeName={'hdf5Data'}\n          fileType={FILE_TYPE_SET.HDF5}\n        />\n        <InputNodeComponent\n          fileName={'fluo'}\n          nodeName={'fluoData'}\n          fileType={FILE_TYPE_SET.FLUO}\n        />\n        <InputNodeComponent\n          fileName={'behavior'}\n          nodeName={'behaviorData'}\n          fileType={FILE_TYPE_SET.BEHAVIOR}\n        />\n      </TreeItem>\n      <TreeItem nodeId=\"Algorithm\" label=\"Algorithm\">\n        {Object.entries(algoList).map(([name, node], i) => (\n          <AlgoNodeComponent\n            name={name}\n            node={node}\n            onAlgoNodeClick={(name, functionPath) =>\n              onAlgoNodeClick(name, functionPath)\n            }\n            key={i.toFixed()}\n          />\n        ))}\n      </TreeItem>\n    </TreeView>\n  )\n})\n\nconst InputNodeComponent = React.memo<{\n  fileName: string\n  nodeName: string\n  fileType: FILE_TYPE\n}>(({ fileName, nodeName, fileType }) => {\n  const dispatch = useDispatch()\n\n  const onDataNodeClick = (\n    nodeType: NODE_TYPE,\n    nodeName: string,\n    fileType: FILE_TYPE,\n  ) => {\n    let componentType = ''\n    switch (fileType) {\n      case FILE_TYPE_SET.CSV:\n        componentType = 'CsvFileNode'\n        break\n      case FILE_TYPE_SET.IMAGE:\n        componentType = 'ImageFileNode'\n        fileType = FILE_TYPE_SET.IMAGE\n        break\n      case FILE_TYPE_SET.HDF5:\n        componentType = 'HDF5FileNode'\n        fileType = FILE_TYPE_SET.HDF5\n        break\n      case FILE_TYPE_SET.FLUO:\n        componentType = 'FluoFileNode'\n        fileType = FILE_TYPE_SET.FLUO\n        break\n      case FILE_TYPE_SET.BEHAVIOR:\n        componentType = 'BehaviorFileNode'\n        fileType = FILE_TYPE_SET.BEHAVIOR\n        break\n    }\n    const newNode = {\n      id: nanoid(),\n      type: componentType,\n      data: { label: nodeName, type: nodeType },\n    }\n    dispatch(addInputNode({ node: newNode, fileType }))\n  }\n\n  return (\n    <LeafItem\n      nodeId={fileName}\n      label={\n        <AddButton\n          name={fileName}\n          onClick={() =>\n            onDataNodeClick(NODE_TYPE_SET.INPUT, nodeName, fileType)\n          }\n        />\n      }\n    />\n  )\n})\n\nconst AlgoNodeComponent = React.memo<{\n  name: string\n  node: AlgorithmNodeType\n  onAlgoNodeClick: (nodeName: string, functionPath: string) => void\n}>(({ name, node, onAlgoNodeClick }) => {\n  if (isAlgoChild(node)) {\n    return (\n      <LeafItem\n        nodeId={name}\n        label={\n          <AddButton\n            name={name}\n            onClick={() => onAlgoNodeClick(name, node.functionPath)}\n          />\n        }\n      />\n    )\n  } else {\n    return (\n      <TreeItem nodeId={name} label={name}>\n        {Object.entries(node.children).map(([name, node], i) => (\n          <AlgoNodeComponent\n            name={name}\n            node={node}\n            key={i.toFixed()}\n            onAlgoNodeClick={(name, functionPath) =>\n              onAlgoNodeClick(name, functionPath)\n            }\n          />\n        ))}\n      </TreeItem>\n    )\n  }\n})\n\nconst AddButton = React.memo<{\n  name: string\n  onClick: () => void\n}>(({ name, onClick }) => {\n  return (\n    <>\n      <IconButton aria-label=\"add\" style={{ padding: 2 }} size=\"large\">\n        <AddIcon onClick={() => onClick()} />\n      </IconButton>\n      <Typography\n        variant=\"inherit\"\n        style={{\n          textOverflow: 'ellipsis',\n          overflow: 'visible',\n          width: '8rem',\n          display: 'inline-block',\n        }}\n      >\n        {name}\n      </Typography>\n    </>\n  )\n})\n\n// 未使用icon分の幅を消す\nconst LeafItem = styled(TreeItem)({\n  [`& .${treeItemClasses.iconContainer}`]: {\n    margin: 0,\n    width: 0,\n  },\n})\n","export const INITIAL_IMAGE_ELEMENT_ID = '0'\nexport const INITIAL_IMAGE_ELEMENT_NAME = 'NoName'\nexport const INITIAL_ALGO_ELEMENT_ID = '1'\nexport const INITIAL_ALGO_ELEMENT_NAME = 'dummy_image2image'\nexport const INITIAL_EDGE_ID = '2'\n\nexport const INITIAL_ALGO_STYLE: React.CSSProperties = {\n  width: 180,\n  height: 100,\n  padding: 0,\n  borderRadius: 0,\n} as const\n\nexport const INITIAL_DATA_STYLE: React.CSSProperties = {\n  border: '1px solid #777',\n  height: 120,\n} as const\n","import { RunPostData } from 'api/run/Run'\nimport axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type ExperimentsDTO = {\n  [uid: string]: ExperimentDTO\n}\n\nexport type ExperimentDTO = {\n  function: {\n    [uid: string]: {\n      name: string\n      position: {\n        x: number\n        y: number\n      }\n      success: string\n      unique_id: string\n    }\n  }\n  name: string\n  success: string\n  timestamp: string\n  unique_id: string\n}\n\nexport async function getExperimentsApi(): Promise<ExperimentsDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments`)\n  return response.data\n}\n\n// export async function getExperimentByUid(uid: string): Promise<{\n//   // todo\n// }> {\n//   const response = await axios.get(`${BASE_URL}/experiments/${uid}`)\n//   return response.data\n// }\n\nexport async function deleteExperimentByUidApi(uid: string): Promise<boolean> {\n  const response = await axios.delete(`${BASE_URL}/experiments/${uid}`)\n  return response.data\n}\n\nexport async function deleteExperimentByListApi(\n  uidList: Array<string>,\n): Promise<boolean> {\n  const response = await axios.post(`${BASE_URL}/experiments/delete`, {\n    uidList,\n  })\n  return response.data\n}\n\nexport async function importExperimentByUidApi(\n  uid: string,\n): Promise<RunPostData> {\n  const response = await axios.get(`${BASE_URL}/experiments/import/${uid}`)\n  return response.data\n}\n\n// export async function downloadExperimentByUidApi(uid: string): Promise<void> {\n//   const response = await axios.get(`${BASE_URL}/experiments/download/${uid}`)\n//   const url = URL.createObjectURL(new Blob([response.data]))\n//   URL.revokeObjectURL(url)\n// }\n","export const EXPERIMENTS_SLICE_NAME = 'experiments'\n\nexport type Experiments =\n  | {\n      status: 'fulfilled'\n      experimentList: ExperimentListType\n    }\n  | {\n      status: 'uninitialized'\n    }\n  | {\n      status: 'pending'\n    }\n  | {\n      status: 'error'\n      message?: string\n    }\n\nexport type ExperimentListType = {\n  [uid: string]: ExperimentType\n}\n\nexport type ExperimentType = {\n  uid: string\n  functions: {\n    [nodeId: string]: ExperimentFunction\n  }\n  name: string\n  timestamp: string\n}\n\nexport type ExperimentFunction = {\n  name: string\n  nodeId: string\n  postion: {\n    x: number\n    y: number\n  }\n  status: EXPERIMENTS_STATUS\n}\n\nexport type EXPERIMENTS_STATUS = 'success' | 'error' | 'running'\n\nexport interface Experiment {\n  uid: string\n  name: string\n  timestamp: string\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  ExperimentsDTO,\n  getExperimentsApi,\n  deleteExperimentByUidApi,\n  importExperimentByUidApi,\n  deleteExperimentByListApi,\n} from 'api/experiments/Experiments'\nimport { RunPostData } from 'api/run/Run'\nimport { EXPERIMENTS_SLICE_NAME } from './ExperimentsType'\n\nexport const getExperiments = createAsyncThunk<ExperimentsDTO, undefined>(\n  `${EXPERIMENTS_SLICE_NAME}/getExperiments`,\n  async (_, thunkAPI) => {\n    try {\n      const response = await getExperimentsApi()\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByUid = createAsyncThunk<boolean, string>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteExperimentByList = createAsyncThunk<boolean, string[]>(\n  `${EXPERIMENTS_SLICE_NAME}/deleteExperimentByList`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await deleteExperimentByListApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const importExperimentByUid = createAsyncThunk<RunPostData, string>(\n  `${EXPERIMENTS_SLICE_NAME}/importExperimentByUid`,\n  async (uid, thunkAPI) => {\n    try {\n      const response = await importExperimentByUidApi(uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\n// export const downloadExperimentByUid = createAsyncThunk<void, string>(\n//   `${EXPERIMENTS_SLICE_NAME}/downloadExperimentByUid`,\n//   async (uid, thunkAPI) => {\n//     try {\n//       const response = await downloadExperimentByUidApi(uid)\n//       return response\n//     } catch (e) {\n//       return thunkAPI.rejectWithValue(e)\n//     }\n//   },\n// )\n","import { createAction } from '@reduxjs/toolkit'\n\nimport { INPUT_NODE_SLICE_NAME } from './InputNodeType'\n\nexport const setInputNodeFilePath = createAction<{\n  nodeId: string\n  filePath: string | string[]\n}>(`${INPUT_NODE_SLICE_NAME}/setInputNodeFilePath`)\n","import { FlowElement, isNode, Node } from 'react-flow-renderer'\nimport {\n  AlgorithmNodeData,\n  NodeData,\n  NODE_TYPE_SET,\n  InputNodeData,\n} from './FlowElementType'\n\nexport function isNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<NodeData> {\n  return node != null && isNode(node) && node.data != null\n}\n\nexport function isAlgorithmNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<AlgorithmNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.ALGORITHM\n}\n\nexport function isInputNodeData(\n  node: FlowElement<NodeData> | undefined,\n): node is Node<InputNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.INPUT\n}\n\nexport function getLabelByPath(filePath: string | string[]) {\n  if (Array.isArray(filePath)) {\n    if (filePath.length === 0) {\n      return ''\n    } else if (filePath.length === 1) {\n      return getFileName(filePath[0])\n    } else {\n      return getFileName(filePath[0]) + ` ... and ${filePath.length - 1} files`\n    }\n  } else {\n    return getFileName(filePath)\n  }\n}\n\nexport function getFileName(filePath: string) {\n  return filePath.split('/').reverse()[0]\n}\n","import type { Node } from 'react-flow-renderer'\nimport {\n  isInputNodeData,\n  isAlgorithmNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport type {\n  NodePostDataType,\n  InputNodePostData,\n  AlgorithmNodePostData,\n} from './Run'\n\nexport function isInputNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<InputNodePostData> {\n  return isInputNodeData(node)\n}\n\nexport function isAlgorithmNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<AlgorithmNodePostData> {\n  return isAlgorithmNodeData(node)\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  Elements,\n  removeElements,\n  Position,\n  isNode,\n  FlowTransform,\n  XYPosition,\n} from 'react-flow-renderer'\nimport {\n  FLOW_ELEMENT_SLICE_NAME,\n  FlowElement,\n  NODE_TYPE_SET,\n  NodeData,\n  ElementCoord,\n} from './FlowElementType'\nimport {\n  INITIAL_ALGO_STYLE,\n  INITIAL_DATA_STYLE,\n  INITIAL_IMAGE_ELEMENT_ID,\n  INITIAL_IMAGE_ELEMENT_NAME,\n} from 'const/flowchart'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { addAlgorithmNode, addInputNode } from './FlowElementActions'\nimport { getLabelByPath } from './FlowElementUtils'\n\nconst initialElements: Elements<NodeData> = [\n  {\n    id: INITIAL_IMAGE_ELEMENT_ID,\n    type: 'ImageFileNode',\n    data: {\n      type: NODE_TYPE_SET.INPUT,\n      label: INITIAL_IMAGE_ELEMENT_NAME,\n    },\n    style: INITIAL_DATA_STYLE,\n    position: { x: 50, y: 150 },\n  },\n]\n\nconst initialFlowPosition: FlowTransform = {\n  x: 0,\n  y: 0,\n  zoom: 0.7,\n}\n\nconst initialElementCoord: ElementCoord = {\n  x: 100,\n  y: 150,\n}\n\nconst initialState: FlowElement = {\n  flowElements: initialElements,\n  flowPosition: initialFlowPosition,\n  elementCoord: initialElementCoord,\n}\n\nexport const flowElementSlice = createSlice({\n  name: FLOW_ELEMENT_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFlowPosition: (state, action: PayloadAction<FlowTransform>) => {\n      state.flowPosition = action.payload\n    },\n    setFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = action.payload\n    },\n    deleteFlowElements: (state, action: PayloadAction<Elements>) => {\n      state.flowElements = removeElements(action.payload, state.flowElements)\n    },\n    deleteFlowElementsById: (state, action: PayloadAction<string>) => {\n      const element = state.flowElements.find(\n        (edge) => edge.id === action.payload,\n      )\n      if (element !== undefined) {\n        state.flowElements = removeElements([element], state.flowElements)\n      }\n    },\n    editFlowElementPositionById: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        coord: {\n          x: number\n          y: number\n        }\n      }>,\n    ) => {\n      let { nodeId, coord } = action.payload\n      const elementIdx = state.flowElements.findIndex(\n        (ele) => ele.id === nodeId,\n      )\n      const targetItem = state.flowElements[elementIdx]\n      if (isNode(targetItem)) {\n        targetItem.position = coord\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        let { node } = action.meta.arg\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_ALGO_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        const newPosition: XYPosition = state.elementCoord\n        state.flowElements.push({ ...node, position: newPosition })\n        updateElementCoord(state)\n      })\n      .addCase(addInputNode, (state, action) => {\n        let { node } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_DATA_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        const newPosition: XYPosition = state.elementCoord\n        state.flowElements.push({ ...node, position: newPosition })\n        updateElementCoord(state)\n      })\n      .addCase(setInputNodeFilePath, (state, action) => {\n        let { nodeId, filePath } = action.payload\n        const label = getLabelByPath(filePath)\n        const elementIdx = state.flowElements.findIndex(\n          (ele) => ele.id === nodeId,\n        )\n        const targetNode = state.flowElements[elementIdx]\n        if (targetNode.data != null) {\n          targetNode.data.label = label\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.flowPosition = initialFlowPosition\n        state.elementCoord = initialElementCoord\n        const newNodeList: Elements<NodeData> = action.payload.nodeList.map(\n          (node) => {\n            if (isInputNodePostData(node)) {\n              return {\n                ...node,\n                data: {\n                  label: node.data?.label ?? '',\n                  type: node.data?.type ?? 'input',\n                },\n              }\n            } else {\n              return {\n                ...node,\n                data: {\n                  label: node.data?.label ?? '',\n                  type: node.data?.type ?? 'algorithm',\n                },\n              }\n            }\n          },\n        )\n        state.flowElements = newNodeList.concat(action.payload.edgeList)\n      }),\n})\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nfunction updateElementCoord(state: FlowElement) {\n  const { x } = state.elementCoord\n  if (x > 800) {\n    state.elementCoord.x = 300\n    state.elementCoord.y += 100\n  } else {\n    state.elementCoord.x += 250\n    state.elementCoord.y += getRandomArbitrary(-20, 20)\n  }\n}\n\nexport const {\n  setFlowPosition,\n  setFlowElements,\n  deleteFlowElements,\n  deleteFlowElementsById,\n  editFlowElementPositionById,\n} = flowElementSlice.actions\n\nexport default flowElementSlice.reducer\n","import { isEdge } from 'react-flow-renderer'\nimport { RootState } from 'store/store'\nimport { isNodeData } from './FlowElementUtils'\n\nexport const selectFlowElements = (state: RootState) =>\n  state.flowElement.flowElements\n\nexport const selectFlowPosition = (state: RootState) =>\n  state.flowElement.flowPosition\n\nexport const selectElementCoord = (state: RootState) =>\n  state.flowElement.elementCoord\n\nexport const selectNodeById = (nodeId: string) => (state: RootState) =>\n  selectFlowElements(state)\n    .filter(isNodeData)\n    .find((node) => node.id === nodeId)\n\nexport const selectNodeTypeById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.type\n\nexport const selectNodeLabelById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.label\n\nexport const selectEdgeListForRun = (state: RootState) =>\n  selectFlowElements(state).filter(isEdge)\n","import {\n  CsvInputNode,\n  ImageInputNode,\n  HDF5InputNode,\n  InputNodeType,\n  FILE_TYPE_SET,\n} from './InputNodeType'\n\nexport function isImageInputNode(\n  inputNode: InputNodeType,\n): inputNode is ImageInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.IMAGE\n}\n\nexport function isCsvInputNode(\n  inputNode: InputNodeType,\n): inputNode is CsvInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.CSV\n}\n\nexport function isHDF5InputNode(\n  inputNode: InputNodeType,\n): inputNode is HDF5InputNode {\n  return inputNode.fileType === FILE_TYPE_SET.HDF5\n}\n","import { RootState } from 'store/store'\nimport {\n  isHDF5InputNode,\n  isCsvInputNode,\n  isImageInputNode,\n  // isFluoInputNode,\n  // isBehaviorInputNode,\n} from './InputNodeUtils'\n\nexport const selectInputNode = (state: RootState) => state.inputNode\n\nexport const selectInputNodeById = (nodeId: string) => (state: RootState) =>\n  state.inputNode[nodeId]\n\nexport const selectInputNodeDefined = (nodeId: string) => (state: RootState) =>\n  Object.keys(state.inputNode).includes(nodeId)\n\nexport const selectInputNodeFileType = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).fileType\n\nexport const selectInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) =>\n    selectInputNodeById(nodeId)(state).selectedFilePath\n\nexport const selectCsvInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isCsvInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectImageInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isImageInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectHDF5InputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectFilePathIsUndefined = (state: RootState) =>\n  Object.values(state.inputNode).filter(\n    (inputNode) => inputNode.selectedFilePath === undefined,\n  ).length > 0\n\nexport const selectInputNodeParam = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).param\n\nconst selectCsvInputNodeParam = (nodeId: string) => (state: RootState) => {\n  const inputNode = selectInputNodeById(nodeId)(state)\n  if (isCsvInputNode(inputNode)) {\n    return inputNode.param\n  } else {\n    throw new Error(`The InputNode is not CsvInputNode. (nodeId: ${nodeId})`)\n  }\n}\n\nexport const selectCsvInputNodeParamSetHeader =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setHeader\n\nexport const selectCsvInputNodeParamSetIndex =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setIndex\n\nexport const selectCsvInputNodeParamTranspose =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).transpose\n\nexport const selectInputNodeHDF5Path =\n  (nodeId: string) => (state: RootState) => {\n    const item = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(item)) {\n      return item.hdf5Path\n    } else {\n      return undefined\n    }\n  }\n","import { useSelector } from 'react-redux'\nimport { selectHandleTypeColor } from 'store/slice/HandleTypeColor/HandleTypeColorSelectors'\n\nexport function useHandleColor(type: string) {\n  const color = useSelector(selectHandleTypeColor(type))\n  return color\n}\n","import { RootState } from '../../store'\n\nexport const selectHandleTypeColor = (key: string) => (state: RootState) => {\n  if (state.handleColor.colorMap[key] != null) {\n    return state.handleColor.colorMap[key]\n  } else {\n    return undefined\n  }\n}\n","import { RootState } from '../../store'\nimport { FILE_TREE_TYPE } from './FilesTreeType'\n\nexport const selectFilesTree =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) => {\n    if (state.filesTree[fileType] != null) {\n      return state.filesTree[fileType]\n    } else {\n      return undefined\n    }\n  }\n\nexport const selectFilesTreeNodes =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.tree\n\nexport const selectFilesIsLatest =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLatest ?? false\n\nexport const selectFilesIsLoading =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLoading ?? false\n","export const FILES_TREE_SLICE_NAME = 'filesTree'\n\nexport type TreeNodeTypeDTO = DirNodeDTO | FileNodeDTO\n\nexport interface NodeBaseDTO {\n  path: string\n  name: string\n  isdir: boolean\n}\n\nexport interface DirNodeDTO extends NodeBaseDTO {\n  isdir: true\n  nodes: TreeNodeTypeDTO[]\n}\n\nexport interface FileNodeDTO extends NodeBaseDTO {\n  isdir: false\n}\n\nexport type TreeNodeType = DirNode | FileNode\n\nexport interface NodeBase {\n  path: string\n  name: string\n  isDir: boolean\n}\n\nexport interface DirNode extends NodeBase {\n  isDir: true\n  nodes: TreeNodeType[]\n}\n\nexport interface FileNode extends NodeBase {\n  isDir: false\n}\n\nexport interface FilesTree {\n  [fileType: string]: {\n    isLatest: boolean\n    isLoading: boolean\n    tree: TreeNodeType[]\n  }\n}\n\nexport const FILE_TREE_TYPE_SET = {\n  IMAGE: 'image',\n  CSV: 'csv',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  ALL: 'all',\n} as const\n\nexport type FILE_TREE_TYPE =\n  typeof FILE_TREE_TYPE_SET[keyof typeof FILE_TREE_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\n\nimport {\n  FILES_TREE_SLICE_NAME,\n  FILE_TREE_TYPE,\n  TreeNodeTypeDTO,\n} from './FilesTreeType'\n\nexport const getFilesTree = createAsyncThunk<TreeNodeTypeDTO[], FILE_TREE_TYPE>(\n  `${FILES_TREE_SLICE_NAME}/getFilesTree`,\n  async (fileType, thunkAPI) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/files`, {\n        params: {\n          file_type: fileType,\n        },\n      })\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { TreeNodeTypeDTO, TreeNodeType } from './FilesTreeType'\n\nexport function convertToTreeNodeType(dto: TreeNodeTypeDTO[]): TreeNodeType[] {\n  return dto.map((node) =>\n    node.isdir\n      ? {\n          path: node.path,\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n        }\n      : {\n          path: node.path,\n          name: node.name,\n          isDir: false,\n        },\n  )\n}\n\nexport function isDirNodeByPath(path: string, tree: TreeNodeType[]): boolean {\n  const node = getNodeByPath(path, tree)\n  if (node != null) {\n    return node.isDir\n  } else {\n    throw new Error(`failed to get node: ${path}`)\n  }\n}\n\nexport function getNodeByPath(\n  path: string,\n  tree: TreeNodeType[],\n): TreeNodeType | null {\n  let targetNode: TreeNodeType | null = null\n  for (const node of tree) {\n    if (path === node.path) {\n      targetNode = node\n      break\n    } else {\n      if (node.isDir) {\n        targetNode = getNodeByPath(path, node.nodes)\n        if (targetNode != null) {\n          break\n        }\n      }\n    }\n  }\n  return targetNode\n}\n","import Dialog from '@mui/material/Dialog'\nimport { useDispatch, useSelector } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\nimport Checkbox, { CheckboxProps } from '@mui/material/Checkbox'\n\nimport Box from '@mui/material/Box'\nimport { useTheme } from '@mui/material/styles'\nimport React from 'react'\n\nimport {\n  selectFilesIsLatest,\n  selectFilesIsLoading,\n  selectFilesTreeNodes,\n} from 'store/slice/FilesTree/FilesTreeSelectors'\nimport { getFilesTree } from 'store/slice/FilesTree/FilesTreeAction'\nimport {\n  FILE_TREE_TYPE,\n  FILE_TREE_TYPE_SET,\n  TreeNodeType,\n} from 'store/slice/FilesTree/FilesTreeType'\nimport {\n  getNodeByPath,\n  isDirNodeByPath,\n} from 'store/slice/FilesTree/FilesTreeUtils'\n\ntype FileSelectDialogProps = {\n  initialFilePath: string[] | string\n  onClickOk: (path: string[] | string) => void\n  fileType?: FILE_TREE_TYPE\n  title?: string\n  open: boolean\n  onClickCancel: () => void\n  onClose?: () => void\n  multiSelect: boolean\n}\n\nexport const FileSelectDialog = React.memo<FileSelectDialogProps>(\n  function FileSelectDialog({\n    open,\n    initialFilePath,\n    onClickCancel,\n    onClickOk,\n    onClose,\n    title,\n    fileType = FILE_TREE_TYPE_SET.ALL,\n    multiSelect,\n  }) {\n    const [selectedFilePath, setSelectedFilePath] =\n      React.useState(initialFilePath)\n    const onCancel = () => {\n      setSelectedFilePath(initialFilePath) // 選択内容を反映させない\n      onClickCancel()\n    }\n    const onOk = () => {\n      onClickOk(selectedFilePath)\n    }\n    const theme = useTheme()\n    return (\n      <Dialog open={open} onClose={onClose} fullWidth>\n        <DialogTitle>{title ?? 'Select File'}</DialogTitle>\n        <DialogContent dividers>\n          <div\n            style={{\n              height: 300,\n              overflow: 'auto',\n              marginBottom: theme.spacing(1),\n              border: '1px solid',\n              padding: theme.spacing(1),\n              borderColor: theme.palette.divider,\n            }}\n          >\n            <FileTreeView\n              setSelectedFilePath={setSelectedFilePath}\n              multiSelect={multiSelect}\n              fileType={fileType}\n              selectedFilePath={selectedFilePath}\n            />\n          </div>\n          <Typography variant=\"subtitle1\">Select File</Typography>\n          <FilePathSelectedListView path={selectedFilePath} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  },\n)\n\nconst FileTreeView = React.memo<{\n  setSelectedFilePath: (path: string[] | string) => void\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  fileType: FILE_TREE_TYPE\n}>(({ setSelectedFilePath, selectedFilePath, fileType, multiSelect }) => {\n  const [tree, isLoading] = useFileTree(fileType)\n  const onNodeSelectHandler = (\n    event: React.SyntheticEvent,\n    nodeIds: Array<string> | string,\n  ) => {\n    if (!multiSelect && tree != null) {\n      // multiSelectがfalseの場合、ディレクトリは選択しない\n      const path = nodeIds as string\n      if (!isDirNodeByPath(path, tree)) {\n        setSelectedFilePath(path)\n      }\n    }\n  }\n  // multiSelectでチェックボックスを使用する時用のハンドラ\n  const onCheckFile = (path: string) => {\n    if (Array.isArray(selectedFilePath)) {\n      if (selectedFilePath.includes(path)) {\n        setSelectedFilePath(\n          selectedFilePath.filter((selectedPath) => path !== selectedPath),\n        )\n      } else {\n        setSelectedFilePath(selectedFilePath.concat(path))\n      }\n    }\n  }\n  const onCheckDir = (path: string, checked: boolean) => {\n    if (tree != null && Array.isArray(selectedFilePath)) {\n      const node = getNodeByPath(path, tree)\n      if (node != null && node.isDir) {\n        const childrenFilePathList = node.nodes\n          .filter((node) => !node.isDir)\n          .map((node) => node.path)\n        if (checked) {\n          setSelectedFilePath(\n            // concat時の重複を削除\n            Array.from(new Set(selectedFilePath.concat(childrenFilePathList))),\n          )\n        } else {\n          setSelectedFilePath(\n            selectedFilePath.filter(\n              (selectedPath) => !childrenFilePathList.includes(selectedPath),\n            ),\n          )\n        }\n      }\n    }\n  }\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView\n        disableSelection={multiSelect}\n        multiSelect={multiSelect}\n        onNodeSelect={onNodeSelectHandler}\n      >\n        {tree?.map((node) => (\n          <TreeNode\n            node={node}\n            selectedFilePath={selectedFilePath}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: TreeNodeType\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  onCheckFile: (path: string) => void\n  onCheckDir: (path: string, checked: boolean) => void\n}>(({ node, selectedFilePath, multiSelect, onCheckDir, onCheckFile }) => {\n  if (node.isDir) {\n    const allChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => selectedFilePath.includes(filePath))\n    const allNotChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => !selectedFilePath.includes(filePath))\n    const indeterminate = !(allChecked || allNotChecked)\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={\n          multiSelect && node.nodes.filter((node) => !node.isDir).length > 0 ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                indeterminate,\n                checked: allChecked,\n                onClick: (e) => {\n                  e.stopPropagation() // on/offのクリックにつられてTreeを開閉させないようにする\n                },\n                onChange: (e) => onCheckDir(node.path, e.target.checked),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode\n            node={childNode}\n            selectedFilePath={selectedFilePath}\n            key={i}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={\n          multiSelect ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                checked:\n                  Array.isArray(selectedFilePath) &&\n                  selectedFilePath.includes(node.path),\n                onChange: () => onCheckFile(node.path),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n        onClick={() => onCheckFile(node.path)}\n      />\n    )\n  }\n})\n\nconst TreeItemLabel = React.memo<{\n  label: string\n  checkboxProps: CheckboxProps\n}>(({ label, checkboxProps }) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box flexGrow={1}>{label}</Box>\n      <Box>\n        <Checkbox\n          {...checkboxProps}\n          disableRipple\n          size=\"small\"\n          sx={{\n            marginRight: '4px',\n            padding: '2px',\n          }}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectedListView = React.memo<{ path: string | string[] }>(\n  ({ path }) => {\n    return (\n      <Typography variant=\"subtitle2\">\n        {!!path\n          ? Array.isArray(path)\n            ? path.map((text) => <li>{text}</li>)\n            : path\n          : '---'}\n      </Typography>\n    )\n  },\n)\n\nfunction useFileTree(\n  fileType: FILE_TREE_TYPE,\n): [TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectFilesTreeNodes(fileType))\n  const isLatest = useSelector(selectFilesIsLatest(fileType))\n  const isLoading = useSelector(selectFilesIsLoading(fileType))\n  React.useEffect(() => {\n    if (!isLatest && !isLoading) {\n      dispatch(getFilesTree(fileType))\n    }\n  }, [isLatest, isLoading, fileType, dispatch])\n  return [tree, isLoading]\n}\n","import React from 'react'\nimport LinearProgress, {\n  LinearProgressProps,\n} from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\n\nexport const LinearProgressWithLabel = React.memo<\n  LinearProgressProps & { value: number }\n>((props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  )\n})\n","export const FILE_UPLOADER_SLICE_NAME = 'fileUploader'\n\nexport type FileUploader = {\n  [id: string]: FileUploaderType\n}\n\nexport type FileUploaderType = {\n  path?: string\n  fileName?: string\n  isUninitialized: boolean\n  pending: boolean\n  fulfilled: boolean\n  uploadingProgress?: number\n  error?: string\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\nimport { FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\n\nexport const setUploadProgress = createAction<{\n  requestId: string\n  progess: number\n  total: number\n}>(`${FILE_UPLOADER_SLICE_NAME}/setUploadProgress`)\n\nexport const uploadFile = createAsyncThunk<\n  {\n    resultPath: string\n  },\n  {\n    requestId: string\n    fileName: string\n    formData: FormData\n    fileType?: FILE_TYPE\n  }\n>(\n  `${FILE_UPLOADER_SLICE_NAME}/uploadFile`,\n  async ({ requestId, fileName, formData }, thunkAPI) => {\n    try {\n      const config = getUploadConfig((percent, total) => {\n        thunkAPI.dispatch(\n          setUploadProgress({\n            requestId,\n            progess: percent,\n            total,\n          }),\n        )\n      })\n      const response = await axios.post(\n        `${BASE_URL}/files/upload/${fileName}`,\n        formData,\n        config,\n      )\n      const data = response.data\n      return {\n        resultPath: data.file_path,\n      }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nfunction getUploadConfig(\n  onUpdateProgressFn: (percent: number, totalSize: number) => void,\n) {\n  return {\n    onUploadProgress: function (progressEvent: any) {\n      const percentCompleted = Math.round(\n        (progressEvent.loaded * 100) / progressEvent.total,\n      )\n      onUpdateProgressFn(percentCompleted, progressEvent.total)\n    },\n  }\n}\n","import { FileUploaderType } from './FileUploaderType'\n\nexport const inistialUploaderState: FileUploaderType = {\n  path: undefined,\n  fileName: undefined,\n  isUninitialized: true,\n  pending: false,\n  fulfilled: false,\n  uploadingProgress: undefined,\n  error: undefined,\n}\n","import { RootState } from 'store/store'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nexport const selectFileUploader = (id: string) => (state: RootState) => {\n  if (Object.keys(state.fileUploader).includes(id)) {\n    return state.fileUploader[id]\n  } else {\n    return inistialUploaderState\n  }\n}\n\nexport const selectUploadFilePath = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).path\n\nexport const selectUploadFileName = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fileName\n\nexport const selectFileUploadIsUninitialized =\n  (id: string) => (state: RootState) =>\n    selectFileUploader(id)(state).isUninitialized\n\nexport const selectFileUploadIsPending = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).pending\n\nexport const selectFileUploadIsFulfilled = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fulfilled\n\nexport const selectFileUploadProgress = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).uploadingProgress\n\nexport const selectFileUploadError = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).error\n","import { nanoid } from '@reduxjs/toolkit'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uploadFile } from './FileUploaderActions'\nimport {\n  selectFileUploadIsPending,\n  selectUploadFilePath,\n  selectFileUploadIsFulfilled,\n  selectFileUploadProgress,\n  selectFileUploadIsUninitialized,\n  selectFileUploadError,\n} from './FileUploaderSelectors'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\nexport function useFileUploader(fileType?: FILE_TYPE) {\n  const dispatch = useDispatch()\n  const id = React.useRef(nanoid())\n  const onUploadFile = React.useCallback(\n    (formData: FormData, fileName: string) => {\n      dispatch(\n        uploadFile({ requestId: id.current, fileName, formData, fileType }),\n      )\n    },\n    [dispatch, fileType],\n  )\n  const uninitialized = useSelector(selectFileUploadIsUninitialized(id.current))\n  const filePath = useSelector(selectUploadFilePath(id.current))\n  const pending = useSelector(selectFileUploadIsPending(id.current))\n  const fulfilled = useSelector(selectFileUploadIsFulfilled(id.current))\n  const progress = useSelector(selectFileUploadProgress(id.current))\n  const error = useSelector(selectFileUploadError(id.current))\n  return {\n    filePath,\n    uninitialized,\n    pending,\n    fulfilled,\n    progress,\n    error,\n    onUploadFile,\n  }\n}\n","import React from 'react'\nimport { Button, Typography } from '@mui/material'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nimport { FileSelectDialog } from 'components/FileSelectDialog'\nimport {\n  FILE_TREE_TYPE,\n  FILE_TREE_TYPE_SET,\n} from 'store/slice/FilesTree/FilesTreeType'\nimport { LinearProgressWithLabel } from './LinerProgressWithLabel'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { getLabelByPath } from 'store/slice/FlowElement/FlowElementUtils'\n\nexport const FileSelect = React.memo<{\n  multiSelect?: boolean\n  filePath: string | string[]\n  fileType: FILE_TYPE\n  onChangeFilePath: (path: string | string[]) => void\n}>(({ multiSelect = false, filePath, fileType, onChangeFilePath }) => {\n  const {\n    filePath: uploadedFilePath,\n    onUploadFile,\n    pending,\n    uninitialized,\n    progress,\n    error,\n  } = useFileUploader(fileType)\n\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n    if (uploadedFilePath != null) {\n      onChangeFilePath(uploadedFilePath)\n    }\n  }\n\n  return (\n    <>\n      {!uninitialized && pending && progress != null && (\n        <div style={{ marginLeft: 2, marginRight: 2 }}>\n          <LinearProgressWithLabel value={progress} />\n        </div>\n      )}\n      <FileSelectImple\n        multiSelect={multiSelect}\n        filePath={filePath}\n        onSelectFile={onChangeFilePath}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={fileType}\n        selectButtonLabel={`Select ${fileType}`}\n      />\n      {error != null && (\n        <Typography variant=\"caption\" color=\"error\">\n          {error}\n        </Typography>\n      )}\n    </>\n  )\n})\n\ntype FileSelectImpleProps = {\n  multiSelect?: boolean\n  filePath: string | string[]\n  onUploadFile: (formData: FormData, fileName: string) => void\n  onSelectFile: (path: string | string[]) => void\n  fileTreeType?: FILE_TREE_TYPE\n  selectButtonLabel?: string\n  uploadButtonLabel?: string\n}\n\nexport const FileSelectImple = React.memo<FileSelectImpleProps>(\n  ({\n    multiSelect = false,\n    filePath,\n    onSelectFile,\n    onUploadFile,\n    fileTreeType,\n    selectButtonLabel,\n    uploadButtonLabel,\n  }) => {\n    const onFileInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.preventDefault()\n      if (event.target.files != null && event.target.files[0] != null) {\n        const file = event.target.files[0]\n        const formData = new FormData()\n        formData.append('file', file)\n        const fileName = file.name\n        onUploadFile(formData, fileName)\n      }\n    }\n    const inputRef = React.useRef<HTMLInputElement>(null)\n    const onClick = () => {\n      if (inputRef.current != null) {\n        inputRef.current.click()\n      }\n    }\n    const [open, setOpen] = React.useState(false)\n    const accept = getFileInputAccept(fileTreeType)\n    const fileName = getLabelByPath(filePath)\n    return (\n      <div\n        style={{\n          padding: 5,\n        }}\n      >\n        <ButtonGroup size=\"small\" style={{ marginRight: 4 }}>\n          <Button variant=\"outlined\" onClick={() => setOpen(true)}>\n            {!!selectButtonLabel ? selectButtonLabel : 'Select File'}\n          </Button>\n          <Button onClick={onClick} variant=\"outlined\">\n            {!!uploadButtonLabel ? uploadButtonLabel : 'or Upload'}\n          </Button>\n        </ButtonGroup>\n        <div>\n          <input\n            ref={inputRef}\n            type=\"file\"\n            onChange={onFileInputChange}\n            accept={accept}\n            style={{\n              visibility: 'hidden',\n              width: 0,\n              height: 0,\n            }}\n          />\n          <Typography className=\"selectFilePath\" variant=\"caption\">\n            {!!fileName ? fileName : 'No file is selected.'}\n          </Typography>\n        </div>\n        <FileSelectDialog\n          multiSelect={multiSelect}\n          initialFilePath={filePath}\n          open={open}\n          onClickOk={(path) => {\n            onSelectFile(path)\n            setOpen(false)\n          }}\n          onClickCancel={() => {\n            setOpen(false)\n          }}\n          onClose={() => setOpen(false)}\n          fileType={fileTreeType}\n        />\n      </div>\n    )\n  },\n)\n\nfunction getFileInputAccept(fileType: FILE_TREE_TYPE | undefined) {\n  switch (fileType) {\n    case FILE_TREE_TYPE_SET.IMAGE:\n      return '.tif'\n    case FILE_TREE_TYPE_SET.CSV:\n      return '.csv'\n    case FILE_TREE_TYPE_SET.HDF5:\n      return '.hdf5,.nwb'\n    default:\n      return undefined\n  }\n}\n","import { Connection } from 'react-flow-renderer'\n\nexport function toHandleId(nodeId: string, name: string, type: string) {\n  return `${nodeId}--${name}--${type}`\n}\n\nexport function getHandleType(handleId: string) {\n  return handleId.split('--')[2]\n}\n\nexport function isValidConnection(connection: Connection) {\n  if (connection.sourceHandle != null && connection.targetHandle != null) {\n    return (\n      getHandleType(connection.sourceHandle) ===\n      getHandleType(connection.targetHandle)\n    )\n  } else {\n    return true\n  }\n}\n","export function arrayEqualityFn<T>(a: T[], b: T[]) {\n  return a === b || (a.length === b.length && a.every((v, i) => v === b[i]))\n}\n\nexport function twoDimarrayEqualityFn<T>(a: T[][], b: T[][]) {\n  return (\n    a === b ||\n    (a.length === b.length && a.every((v, i) => arrayEqualityFn(v, b[i])))\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport { IconButton } from '@mui/material'\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined'\n\nimport {\n  selectImageInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { FileSelect } from './FileSelect'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\n// Connection部分のレイアウト\nconst sourceHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  top: 15,\n  border: '1px solid',\n  // borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const ImageFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <ImageFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst ImageFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected: elementSelected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectImageInputNodeSelectedFilePath(nodeId),\n      (a, b) => (a != null && b != null ? arrayEqualityFn(a, b) : a === b),\n    )\n    const onChangeFilePath = (path: string[]) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n\n    const theme = useTheme()\n    const returnType = 'ImageData'\n    const imageColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '250px',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <IconButton\n          aria-label=\"delete\"\n          style={{ color: 'black', position: 'absolute', top: -20, right: -5 }}\n          onClick={onClickDeleteIcon}\n          size=\"large\"\n        >\n          <CloseOutlinedIcon />\n        </IconButton>\n        <FileSelect\n          multiSelect\n          onChangeFilePath={(path) => {\n            if (Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.IMAGE}\n          filePath={filePath ?? []}\n        />\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'image', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: imageColor,\n          }}\n          isValidConnection={isValidConnection}\n        />\n      </div>\n    )\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\n\ntype RightDrawer = {\n  open: boolean\n  mode: RIGHT_DRAWER_MODE_TYPE\n  currendNodeId: string | null\n}\n\nexport const RIGHT_DRAWER_MODE = {\n  NONE: 'none',\n  NWB: 'nwb',\n  PARAM_FORM: 'paramForm',\n  SNAKEMAKE: 'snakemake',\n} as const\n\nexport type RIGHT_DRAWER_MODE_TYPE =\n  typeof RIGHT_DRAWER_MODE[keyof typeof RIGHT_DRAWER_MODE]\n\nconst initialState: RightDrawer = {\n  open: false,\n  mode: RIGHT_DRAWER_MODE.NONE,\n  currendNodeId: null,\n}\nexport const rightDrawerSlice = createSlice({\n  name: 'rightDrawer',\n  initialState,\n  reducers: {\n    openRightDrawer: (state, action: PayloadAction<RIGHT_DRAWER_MODE_TYPE>) => {\n      state.open = true\n      state.mode = action.payload\n    },\n    closeRightDrawer: (state) => {\n      state.open = false\n      state.mode = RIGHT_DRAWER_MODE.NONE\n    },\n    toggleParamForm: (state, action: PayloadAction<string>) => {\n      if (\n        state.open &&\n        state.mode === RIGHT_DRAWER_MODE.PARAM_FORM &&\n        state.currendNodeId === action.payload\n      ) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n        state.currendNodeId = null\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.PARAM_FORM\n        state.currendNodeId = action.payload\n      }\n    },\n    toggleNwb: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.NWB) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.NWB\n      }\n      state.currendNodeId = null\n    },\n    toggleSnakemake: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.SNAKEMAKE) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.SNAKEMAKE\n      }\n      state.currendNodeId = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteFlowElements, (state, action) => {\n        if (\n          action.payload.findIndex((elm) => elm.id === state.currendNodeId) > 0\n        ) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (action.payload === state.currendNodeId) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, () => {\n        return initialState\n      })\n  },\n})\n\nexport const {\n  toggleParamForm,\n  toggleNwb,\n  toggleSnakemake,\n  openRightDrawer,\n  closeRightDrawer,\n} = rightDrawerSlice.actions\n\nexport default rightDrawerSlice.reducer\n","import { getChildParam } from 'store/utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nexport const selectNwb = (state: RootState) => state.nwb\n\nexport const selectNwbParams = (state: RootState) => selectNwb(state).params\n\nexport const selectNwbParamsKeyList = (state: RootState) =>\n  Object.keys(selectNwb(state).params)\n\nexport const selectNwbParam = (paramKey: string) => (state: RootState) =>\n  selectNwb(state).params[paramKey]\n\nexport const selectNwbParamsValue = (path: string) => (state: RootState) => {\n  const params = selectNwb(state).params\n  if (params != null) {\n    const target = getChildParam(path, params)\n    return target?.value\n  } else {\n    throw new Error('Param is null')\n  }\n}\n","import { getChildParam } from 'store/utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nconst selectSnakemake = (state: RootState) => state.snakemake\nexport const selectSnakemakeParams = (state: RootState) =>\n  selectSnakemake(state).params\n\nexport const selectSnakemakeParamsKeyList = (state: RootState) =>\n  Object.keys(selectSnakemakeParams(state))\n\nexport const selectSnakemakeParam = (paramKey: string) => (state: RootState) =>\n  selectSnakemakeParams(state)[paramKey]\n\nexport const selectSnakemakeParamsValue =\n  (path: string) => (state: RootState) => {\n    const params = selectSnakemakeParams(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('Param is null')\n    }\n  }\n","import { RunPostData } from 'api/run/Run'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\n\nexport const PIPELINE_SLICE_NAME = 'pipeline'\n\nexport type Pipeline = {\n  run: PipelineType\n  currentPipeline?: {\n    uid: string\n  }\n  runBtn: RUN_BTN_TYPE\n}\n\nexport const RUN_STATUS = {\n  /**\n   * 未実行\n   */\n  START_UNINITIALIZED: 'StartUninitialized',\n  /**\n   * 開始リクエスト中\n   */\n  START_PENDING: 'StartPending',\n  /**\n   * 開始できなかった\n   */\n  START_ERROR: 'StartError',\n  /**\n   * 正常に開始した\n   */\n  START_SUCCESS: 'StartSuccess',\n  /**\n   * 全て終了\n   */\n  FINISHED: 'Finished',\n  /**\n   * 途中終了\n   */\n  ABORTED: 'Aborted',\n  /**\n   * キャンセルされた\n   */\n  CANCELED: 'Canceled',\n} as const\n\nexport type RUN_STATUS_TYPE = typeof RUN_STATUS[keyof typeof RUN_STATUS]\n\nexport type PipelineType =\n  | StartedPipeline\n  | {\n      status:\n        | typeof RUN_STATUS.START_ERROR\n        | typeof RUN_STATUS.START_PENDING\n        | typeof RUN_STATUS.START_UNINITIALIZED\n    }\n\nexport type StartedPipeline = {\n  uid: string\n  status:\n    | typeof RUN_STATUS.START_SUCCESS\n    | typeof RUN_STATUS.FINISHED\n    | typeof RUN_STATUS.ABORTED\n    | typeof RUN_STATUS.CANCELED\n  runPostData: RunPostData\n  runResult: RunResult\n}\n\nexport type RunResult = {\n  [nodeId: string]: NodeResult\n}\n\nexport type NodeResult = NodeResultPending | NodeResultSuccess | NodeResultError\n\nexport const NODE_RESULT_STATUS = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PENDING: 'pending',\n} as const\n\nexport type NODE_RESULT_STATUS_TYPE =\n  typeof NODE_RESULT_STATUS[keyof typeof NODE_RESULT_STATUS]\n\nexport interface NodeResultBaseType<T extends NODE_RESULT_STATUS_TYPE> {\n  status: T\n  message?: string\n  name: string\n}\n\nexport interface NodeResultPending\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.PENDING> {}\n\nexport interface NodeResultSuccess\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.SUCCESS> {\n  outputPaths: OutputPaths\n}\n\nexport type OutputPaths = {\n  [outputKey: string]: {\n    path: string\n    type: DATA_TYPE\n  }\n}\n\nexport interface NodeResultError\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.ERROR> {\n  message: string\n}\n\nexport const RUN_BTN_OPTIONS = {\n  RUN_NEW: 1,\n  RUN_ALREADY: 2,\n} as const\n\nexport type RUN_BTN_TYPE = typeof RUN_BTN_OPTIONS[keyof typeof RUN_BTN_OPTIONS]\n\nexport const RUN_BTN_LABELS = {\n  [RUN_BTN_OPTIONS.RUN_NEW]: 'RUN ALL',\n  [RUN_BTN_OPTIONS.RUN_ALREADY]: 'RUN',\n} as const\n","export const DISPLAY_DATA_SLICE_NAME = 'displayData'\n\nexport type DisplayData = {\n  timeSeries: {\n    [filePath: string]: TimeSeriesDisplayData\n  }\n  heatMap: {\n    [filePath: string]: HeatMapDisplayData\n  }\n  image: {\n    [filePath: string]: ImageDisplayData\n  }\n  csv: {\n    [filePath: string]: CsvDisplayData\n  }\n  roi: {\n    [filePath: string]: RoiDisplayData\n  }\n  scatter: {\n    [filePath: string]: ScatterDisplayData\n  }\n  bar: {\n    [filePath: string]: BarDisplayData\n  }\n  hdf5: {\n    [filePath: string]: HDF5DisplayData\n  }\n  html: {\n    [filePath: string]: HTMLDisplayData\n  }\n}\n\nexport const DATA_TYPE_SET = {\n  TIME_SERIES: 'timeSeries',\n  HEAT_MAP: 'heatMap',\n  IMAGE: 'image',\n  CSV: 'csv',\n  ROI: 'roi',\n  SCATTER: 'scatter',\n  BAR: 'bar',\n  HDF5: 'hdf5',\n  HTML: 'html',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type DATA_TYPE = typeof DATA_TYPE_SET[keyof typeof DATA_TYPE_SET]\n\ninterface BaseDisplay<T extends DATA_TYPE, Data> {\n  type: T\n  data: Data\n  pending: boolean\n  error: string | null\n  fulfilled: boolean\n}\n\nexport interface TimeSeriesDisplayData\n  extends BaseDisplay<'timeSeries', TimeSeriesData> {\n  xrange: number[]\n  std: TimeSeriesData\n}\nexport type TimeSeriesData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport interface HeatMapDisplayData\n  extends BaseDisplay<'heatMap', HeatMapData> {}\nexport type HeatMapData = number[][]\n\nexport interface ImageDisplayData extends BaseDisplay<'image', ImageData> {}\nexport type ImageData = number[][][]\n\nexport interface CsvDisplayData extends BaseDisplay<'csv', CsvData> {\n  // columns: string[]\n}\nexport type CsvData = number[][]\n\nexport interface RoiDisplayData extends BaseDisplay<'roi', RoiData> {}\nexport type RoiData = number[][][]\n\nexport interface ScatterDisplayData\n  extends BaseDisplay<'scatter', ScatterData> {}\nexport type ScatterData = number[][][]\n\nexport interface BarDisplayData extends BaseDisplay<'bar', BarData> {}\nexport type BarData = number[][][]\n\nexport interface HDF5DisplayData extends BaseDisplay<'hdf5', HDF5Data> {}\nexport type HDF5Data = number[][][]\n\nexport interface HTMLDisplayData extends BaseDisplay<'html', HTMLData> {}\nexport type HTMLData = string\n","import { DATA_TYPE, DATA_TYPE_SET } from './DisplayDataType'\n\n/**\n * サーバーサイドの値をマッピング\n */\nexport function toDataType(value: string): DATA_TYPE {\n  switch (value) {\n    case 'images':\n      return DATA_TYPE_SET.IMAGE\n    case 'timeseries':\n      return DATA_TYPE_SET.TIME_SERIES\n    case 'heatmap':\n      return DATA_TYPE_SET.HEAT_MAP\n    case 'roi':\n      return DATA_TYPE_SET.ROI\n    case 'scatter':\n      return DATA_TYPE_SET.SCATTER\n    case 'bar':\n      return DATA_TYPE_SET.BAR\n    case 'html':\n      return DATA_TYPE_SET.HTML\n    default:\n      throw new Error(`failed to map dataType: ${value}`)\n  }\n}\n","import { RunPostData, RunResultDTO, OutputPathsDTO } from 'api/run/Run'\n\nimport { toDataType } from '../DisplayData/DisplayDataUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  RunResult,\n  OutputPaths,\n  NODE_RESULT_STATUS,\n  PipelineType,\n  RUN_STATUS,\n  StartedPipeline,\n  NodeResultPending,\n  NodeResultError,\n  NodeResultSuccess,\n  NodeResult,\n} from './PipelineType'\n\nexport function isNodeResultPending(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultPending {\n  return nodeResult.status === NODE_RESULT_STATUS.PENDING\n}\n\nexport function isNodeResultSuccess(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultSuccess {\n  return nodeResult.status === NODE_RESULT_STATUS.SUCCESS\n}\n\nexport function isNodeResultError(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultError {\n  return nodeResult.status === NODE_RESULT_STATUS.ERROR\n}\n\nexport function isStartedPipeline(\n  pipeline: PipelineType,\n): pipeline is StartedPipeline {\n  return (\n    pipeline.status === RUN_STATUS.START_SUCCESS ||\n    pipeline.status === RUN_STATUS.FINISHED ||\n    pipeline.status === RUN_STATUS.ABORTED\n  )\n}\n\nexport function getInitialRunResult(runPostData: RunPostData) {\n  const initialResult: RunResult = {}\n  runPostData.nodeList\n    .filter(({ data }) => data?.type === NODE_TYPE_SET.ALGORITHM)\n    .forEach(({ id, data }) => {\n      initialResult[id] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: data?.label ?? '',\n      }\n    })\n  return initialResult\n}\n\nexport function convertToRunResult(dto: RunResultDTO) {\n  const result: RunResult = {}\n  Object.entries(dto).forEach(([nodeId, nodeResultDto]) => {\n    const outputPath = nodeResultDto.outputPaths\n    if (nodeResultDto.status === 'success' && outputPath != null) {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.SUCCESS,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n        outputPaths: convertToOutputPath(outputPath),\n      }\n    } else {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.ERROR,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n      }\n    }\n  })\n  return result\n}\n\nfunction convertToOutputPath(dto: OutputPathsDTO) {\n  const result: OutputPaths = {}\n  Object.entries(dto).forEach(([functionPath, value]) => {\n    result[functionPath] = {\n      path: value.path,\n      type: toDataType(value.type),\n    }\n  })\n  return result\n}\n","import { Node } from 'react-flow-renderer'\n\nimport {\n  AlgorithmNodePostData,\n  InputNodePostData,\n  NodePostDataType,\n  RunPostData,\n} from 'api/run/Run'\n\nimport { RootState } from 'store/store'\nimport {\n  selectEdgeListForRun,\n  selectFlowElements,\n} from '../FlowElement/FlowElementSelectors'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  isAlgorithmNodeData,\n  isNodeData,\n} from '../FlowElement/FlowElementUtils'\nimport { selectNwbParams } from '../NWB/NWBSelectors'\nimport { selectSnakemakeParams } from '../Snakemake/SnakemakeSelectors'\nimport {\n  NodeResult,\n  NodeResultPending,\n  NodeResultSuccess,\n  NODE_RESULT_STATUS,\n  RUN_STATUS,\n} from './PipelineType'\nimport {\n  isNodeResultPending,\n  isStartedPipeline,\n  isNodeResultSuccess,\n} from './PipelineUtils'\n\nimport {\n  selectAlgorithmFunctionPath,\n  selectAlgorithmIsUpdated,\n  selectAlgorithmName,\n  selectAlgorithmParams,\n} from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectInputNodeFileType,\n  selectInputNodeHDF5Path,\n  selectInputNodeParam,\n  selectInputNodeSelectedFilePath,\n} from '../InputNode/InputNodeSelectors'\n\nexport const selectPipelineLatestUid = (state: RootState) => {\n  return state.pipeline.currentPipeline?.uid\n}\n\nexport const selectRunPostData = (state: RootState) => {\n  const nwbParam = selectNwbParams(state)\n  const snakemakeParam = selectSnakemakeParams(state)\n  const edgeListForRun = selectEdgeListForRun(state)\n  const nodePostDataList = selectNodePostDataListForRun(state)\n  const forceRunList = selectForceRunList(state)\n  const runPostData: Omit<RunPostData, 'name'> = {\n    nwbParam,\n    snakemakeParam,\n    edgeList: edgeListForRun,\n    nodeList: nodePostDataList,\n    forceRunList,\n  }\n  return runPostData\n}\n\nexport const selectNodePostDataListForRun = (\n  state: RootState,\n): Node<NodePostDataType>[] => {\n  const elements = selectFlowElements(state)\n  const nodeList = elements.filter(isNodeData).map((node) => {\n    if (isAlgorithmNodeData(node)) {\n      const param = selectAlgorithmParams(node.id)(state) ?? {}\n      const functionPath = selectAlgorithmFunctionPath(node.id)(state)\n      const algorithmNodePostData: Node<AlgorithmNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.ALGORITHM,\n          path: functionPath,\n          param,\n        },\n      }\n      return algorithmNodePostData\n    } else {\n      const filePath = selectInputNodeSelectedFilePath(node.id)(state)\n      const fileType = selectInputNodeFileType(node.id)(state)\n      const param = selectInputNodeParam(node.id)(state)\n      const hdf5Path = selectInputNodeHDF5Path(node.id)(state)\n      const inputNodePosyData: Node<InputNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.INPUT,\n          path: filePath ?? '',\n          param,\n          hdf5Path: hdf5Path,\n          fileType,\n        },\n      }\n      return inputNodePosyData\n    }\n  })\n  return nodeList\n}\n\n/**\n * 前回の結果で、エラーまたはParamに変更があるnodeのリストを返す\n */\nconst selectForceRunList = (state: RootState) => {\n  const elements = selectFlowElements(state)\n  // todo\n  return elements\n    .filter(isAlgorithmNodeData)\n    .filter((node) => {\n      const isUpdated = selectAlgorithmIsUpdated(node.id)(state)\n      const status = selectPipelineNodeResultStatus(node.id)(state)\n      return isUpdated || status === NODE_RESULT_STATUS.ERROR\n    })\n    .map((node) => ({\n      nodeId: node.id,\n      name: selectAlgorithmName(node.id)(state),\n    }))\n}\n\nexport const selectStartedPipeline = (state: RootState) => {\n  return state.pipeline.run\n}\n\nexport const selectPipelineRunBtn = (state: RootState) => {\n  return state.pipeline.runBtn\n}\n\nexport const selectRunResultPendingList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.values(pipeline.runResult).filter(isNodeResultPending)\n  } else {\n    return []\n  }\n}\n\nexport const selectRunResultPendingNodeIdList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => ({ nodeId, nodeResult }))\n      .filter(isNodeResultPendingAndNodeId)\n      .map(({ nodeId }) => nodeId)\n  } else {\n    return []\n  }\n}\n\nfunction isNodeResultPendingAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultPending\n} {\n  return isNodeResultPending(arg.nodeResult)\n}\n\nexport const selectPipelineStatus = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status\n}\n\nexport const selectPipelineIsCanceled = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.CANCELED\n}\n\nexport const selectPipelineIsStartedSuccess = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.START_SUCCESS\n}\n\n// export const selectPipelineRunResult = (state: RootState) => {\n//   const pipeline = selectStartedPipeline(state)\n//   if (isStartedPipeline(pipeline)) {\n//     return pipeline.runResult\n//   } else {\n//     throw new Error(\"todo\")\n//   }\n// }\n\nexport const selectPipelineNodeResultSuccessList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => {\n        return {\n          nodeId,\n          nodeResult,\n        }\n      })\n      .filter(isNodeResultSuccessAndNodeId)\n  } else {\n    return []\n  }\n}\n\n// selectPipelineNodeResultSuccessListの返り値の型を正しく認識させるためだけに作った\nfunction isNodeResultSuccessAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultSuccess\n} {\n  return isNodeResultSuccess(arg.nodeResult)\n}\n\nexport const selectPipelineNodeResultStatus =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].status\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultMessage =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].message\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultOutputKeyList =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return Object.keys(nodeResult.outputPaths)\n      }\n    }\n    return []\n  }\n\nconst selectPipelineNodeResultOutputPaths =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return nodeResult.outputPaths\n      }\n    }\n    throw new Error(`key error. nodeId:${nodeId}`)\n  }\n\nexport const selectPipelineNodeResultOutputFilePath =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].path\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n\nexport const selectPipelineNodeResultOutputFileDataType =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].type\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n","import { RootState } from 'store/store'\n\nconst selectDisplayData = (state: RootState) => state.displayData\n\nexport const selectTimeSeriesData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].data\n\nexport const selectTimeSeriesXrange =\n  (filePath: string) => (state: RootState) =>\n    selectDisplayData(state).timeSeries[filePath].xrange\n\nexport const selectTimeSeriesStd = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].std\n\nexport const selectTimeSeriesDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).timeSeries).includes(filePath)\n\nexport const selectTimeSeriesDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].pending\n\nexport const selectTimeSeriesDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].fulfilled\n\nexport const selectTimeSeriesDataError =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).timeSeries[filePath].error\n      : null\n\nexport const selectHeatMapData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].data\n\nexport const selectHeatMapDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).heatMap).includes(filePath)\n\nexport const selectHeatMapDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].pending\n\nexport const selectHeatMapDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].fulfilled\n\nexport const selectHeatMapDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).heatMap[filePath].error\n      : null\n\nexport const selectImageData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).image[filePath]\n\nexport const selectImageDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).image).includes(filePath)\n\nexport const selectImageDataError = (filePath: string) => (state: RootState) =>\n  selectImageDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).image[filePath].error\n    : null\n\nexport const selectImageDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].pending\n\nexport const selectImageDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].fulfilled\n\nexport const selectImageDataMaxSize =\n  (filePath: string) => (state: RootState) => {\n    if (!selectImageDataIsPending(filePath)(state)) {\n      return selectImageData(filePath)(state).data.length - 1\n    } else {\n      return 0\n    }\n  }\n\nexport const selectActiveImageData =\n  (filePath: string, activeIndex: number) => (state: RootState) => {\n    return selectImageData(filePath)(state).data[activeIndex]\n  }\n\nexport const selectCsvData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).csv[filePath].data\n\nexport const selectCsvDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).csv).includes(filePath)\n\nexport const selectCsvDataError = (filePath: string) => (state: RootState) =>\n  selectCsvDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).csv[filePath].error\n    : null\n\nexport const selectCsvDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].pending\n\nexport const selectCsvDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].fulfilled\n\nexport const selectRoiData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).roi[filePath]?.data[0] ?? []\n\nexport const selectRoiDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).roi).includes(filePath)\n\nexport const selectRoiDataError = (filePath: string) => (state: RootState) =>\n  selectRoiDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).roi[filePath].error\n    : null\n\nexport const selectRoiDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].pending\n\nexport const selectRoiDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].fulfilled\n\nexport const selectScatterData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).scatter[filePath]?.data ?? []\n\nexport const selectScatterDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).scatter).includes(filePath)\n\nexport const selectScatterDataError =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).scatter[filePath].error\n      : null\n\nexport const selectScatterDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].pending\n\nexport const selectScatterDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].fulfilled\n\nexport const selectBarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.data ?? []\n\nexport const selectBarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).bar).includes(filePath)\n\nexport const selectBarDataError = (filePath: string) => (state: RootState) =>\n  selectBarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).bar[filePath].error\n    : null\n\nexport const selectBarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].pending\n\nexport const selectBarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].fulfilled\n\nexport const selectHTMLData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).html[filePath]?.data ?? ''\n\nexport const selectHTMLDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).html).includes(filePath)\n\nexport const selectHTMLDataError = (filePath: string) => (state: RootState) =>\n  selectHTMLDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).html[filePath].error\n    : null\n\nexport const selectHTMLDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].pending\n\nexport const selectHTMLDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].fulfilled\n","import { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\n\nexport const VISUALIZE_ITEM_SLICE_NAME = 'visualaizeItem'\n\nexport type VisualaizeItem = {\n  selectedItemId: number | null\n  items: {\n    [itemId: number]: VisualaizeItemType\n  }\n  layout: ItemLayout\n}\n\nexport type ItemLayout = number[][] // itemIdをrow,columnで並べる\n\nexport type VisualaizeItemType = DisplayDataItem\n\nexport interface ItemBaseType<T extends VISUALIZE_ITEM_TYPE> {\n  itemType: T\n  width: number\n  height: number\n}\n\nexport type ColorType = {\n  rgb: string\n  offset: string\n}\n\nexport const VISUALIZE_ITEM_TYPE_SET = {\n  DISPLAY_DATA: 'displayData',\n} as const\n\nexport type VISUALIZE_ITEM_TYPE =\n  typeof VISUALIZE_ITEM_TYPE_SET[keyof typeof VISUALIZE_ITEM_TYPE_SET]\n\nexport type DisplayDataItem =\n  | ImageItem\n  | TimeSeriesItem\n  | HeatMapItem\n  | CsvItem\n  | RoiItem\n  | ScatterItem\n  | BarItem\n  | HDF5Item\n  | HTMLItem\n  | FluoItem\n  | BehaviorItem\n\nexport interface DisplayDataItemBaseType extends ItemBaseType<'displayData'> {\n  filePath: string | null\n  nodeId: string | null\n  dataType: DATA_TYPE | null\n  isWorkflowDialog: boolean\n}\n\nexport interface ImageItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.IMAGE\n  activeIndex: number\n  startIndex: number\n  endIndex: number\n  showticklabels: boolean\n  zsmooth: string | boolean\n  showline: boolean\n  showgrid: boolean\n  showscale: boolean\n  colors: ColorType[]\n  roiItem: RoiItem | null\n  roiAlpha: number\n  duration: number\n  clickedDataId?: number\n}\n\nexport interface TimeSeriesItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.TIME_SERIES\n  offset: boolean\n  span: number\n  showgrid: boolean\n  showline: boolean\n  showticklabels: boolean\n  zeroline: boolean\n  xrange: {\n    left: number | undefined\n    right: number | undefined\n  }\n  maxIndex: number\n  displayNumbers: number[]\n  refImageItemId?: number\n  checkedList: boolean[]\n}\n\nexport interface HeatMapItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HEAT_MAP\n  showscale: boolean\n  colors: ColorType[]\n}\nexport interface CsvItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.CSV\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\nexport interface RoiItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.ROI\n  // colors: ColorType[]\n}\n\nexport interface ScatterItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.SCATTER\n  xIndex: number\n  yIndex: number\n}\n\nexport interface BarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BAR\n}\n\nexport interface HDF5Item extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HDF5\n}\n\nexport interface HTMLItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HTML\n}\n\nexport interface FluoItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.FLUO\n}\n\nexport interface BehaviorItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BEHAVIOR\n}\n","import { DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  VisualaizeItemType,\n  DisplayDataItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  ImageItem,\n  TimeSeriesItem,\n  HeatMapItem,\n  RoiItem,\n  ScatterItem,\n  CsvItem,\n} from './VisualizeItemType'\n\nexport function isDisplayDataItem(\n  item: VisualaizeItemType,\n): item is DisplayDataItem {\n  return item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA\n}\n\nexport function isImageItem(item: VisualaizeItemType): item is ImageItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.IMAGE\n  )\n}\n\nexport function isTimeSeriesItem(\n  item: VisualaizeItemType,\n): item is TimeSeriesItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.TIME_SERIES\n  )\n}\n\nexport function isCsvItem(item: VisualaizeItemType): item is CsvItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.CSV\n  )\n}\n\nexport function isHeatMapItem(item: VisualaizeItemType): item is HeatMapItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HEAT_MAP\n  )\n}\n\nexport function isRoiItem(item: VisualaizeItemType): item is RoiItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.ROI\n  )\n}\n\nexport function isScatterItem(item: VisualaizeItemType): item is ScatterItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.SCATTER\n  )\n}\n","import { RootState } from 'store/store'\nimport { selectRoiData } from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport {\n  isDisplayDataItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isHeatMapItem,\n  isCsvItem,\n  isScatterItem,\n} from './VisualizeItemUtils'\n\nexport const selectSelectedVisualizeItemId = (state: RootState) =>\n  state.visualaizeItem.selectedItemId\n\nexport const selectVisualizeImageItemIdList = (state: RootState) =>\n  Object.keys(state.visualaizeItem.items)\n    .map(Number)\n    .filter((itemId) => {\n      const item = selectVisualizeItems(state)[itemId]\n      return isImageItem(item) && !item.isWorkflowDialog\n    })\n\nexport const selectVisualizeItems = (state: RootState) =>\n  state.visualaizeItem.items\n\nexport const selectVisualizeItemLayout = (state: RootState) =>\n  state.visualaizeItem.layout\n\nexport const selectVisualizeItemIsWorkflowDialog =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItems(state)[itemId].isWorkflowDialog\n  }\n\nexport const selectVisualizeItemIdForWorkflowDialog =\n  (nodeId: string, filePath: string, dataType: DATA_TYPE) =>\n  (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    let targetItemId: null | number = null\n    for (const [itemId, value] of Object.entries(items)) {\n      if (\n        value.nodeId === nodeId &&\n        value.filePath === filePath &&\n        value.dataType === dataType &&\n        value.isWorkflowDialog\n      ) {\n        targetItemId = Number(itemId)\n      }\n    }\n    return targetItemId\n  }\n\nexport const selectVisualizeItemWidth =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItems(state)[itemId].width\n  }\n\nexport const selectVisualizeItemHeight =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItems(state)[itemId].height\n  }\n\nexport const selectVisualizeItemType = (itemId: number) => (state: RootState) =>\n  selectVisualizeItems(state)[itemId].itemType\n\nexport const selectVisualizeDataType =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isDisplayDataItem(item)) {\n      return item.dataType\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataNodeId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isDisplayDataItem(item)) {\n      return item.nodeId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemNodeId = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItems(state)[itemId]\n  if (isImageItem(item)) {\n    return item.roiItem?.nodeId ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemFilePath = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItems(state)[itemId]\n  if (isImageItem(item)) {\n    return item.roiItem?.filePath ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemShowticklabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemZsmooth =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.zsmooth\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemStartIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.startIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemEndIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.endIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemColors = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItems(state)[itemId]\n  if (isImageItem(item)) {\n    return item.colors\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemActiveIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.activeIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemRoiAlpha =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.roiAlpha\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemDuration =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isImageItem(item)) {\n      return item.duration\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemOffset =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.offset\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemSpan =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.span\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowTickLabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemZeroLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.zeroline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemXrange =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.xrange\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemDisplayNumbers =\n  (itemId: number, refImageItemId?: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      // if (refImageItemId != null) {\n      //   const refItem = selectVisualizeItems(state)[refImageItemId]\n      //   if (isImageItem(refItem) && refItem.clickedDataId != null) {\n      //     return [...item.displayNumbers, refItem.clickedDataId]\n      //   }\n      // }\n      return item.displayNumbers\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectTimeSeriesItemRefImageItemId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.refImageItemId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemCheckedList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      return item.checkedList\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemIndex =\n  (itemId: number, roiFilePath: string | null) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isTimeSeriesItem(item)) {\n      const maxIdx = item.maxIndex\n      if (maxIdx !== 0) {\n        return maxIdx\n      }\n    }\n\n    if (roiFilePath !== null) {\n      return selectRoiItemMaxNumber(roiFilePath)(state)\n    } else {\n      return 0\n    }\n  }\n\nexport const selectRoiItemMaxNumber =\n  (roiFilePath: string) => (state: RootState) => {\n    const roiData = selectRoiData(roiFilePath)(state)\n    if (roiData.length !== 0) {\n      return Math.max(...roiData.map((arr) => Math.max(...arr)))\n    } else {\n      return 0\n    }\n  }\n\nexport const selectHeatMapItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isHeatMapItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectHeatMapItemColors =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isHeatMapItem(item)) {\n      return item.colors\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemTranspose =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isCsvItem(item)) {\n      return item.transpose\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetHeader =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isCsvItem(item)) {\n      return item.setHeader\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItems(state)[itemId]\n  if (isCsvItem(item)) {\n    return item.setIndex\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectScatterItemXIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isScatterItem(item)) {\n      return item.xIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectScatterItemYIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItems(state)[itemId]\n    if (isScatterItem(item)) {\n      return item.yIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectDisplayDataIsSingle =\n  (itemId: number) => (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    const item = items[itemId]\n    const targetFilePath = item.filePath\n    return (\n      Object.values(items).filter((value) => value.filePath === targetFilePath)\n        .length === 1\n    )\n  }\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\nimport {\n  ImageData,\n  TimeSeriesData,\n  DISPLAY_DATA_SLICE_NAME,\n  HeatMapData,\n  CsvData,\n  RoiData,\n  ScatterData,\n  BarData,\n  HTMLData,\n} from './DisplayDataType'\n\nexport const getTimeSeriesDataById = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string; index: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesDataById`,\n  async ({ path, index }, thunkAPI) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/outputs/timedata/${path}`, {\n        params: {\n          index: index,\n        },\n      })\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesAllData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: number[]; std: TimeSeriesData },\n  { path: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesAllData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await axios.get(\n        `${BASE_URL}/outputs/alltimedata/${path}`,\n      )\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHeatMapData = createAsyncThunk<\n  { data: HeatMapData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHeatMapData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/outputs/data/${path}`)\n    return response.data\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getImageData = createAsyncThunk<\n  { data: ImageData },\n  { path: string; startIndex?: number; endIndex?: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getImageData`,\n  async ({ path, startIndex, endIndex }, thunkAPI) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n        params: {\n          start_index: startIndex,\n          end_index: endIndex,\n        },\n      })\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getCsvData = createAsyncThunk<\n  {\n    data: CsvData\n  },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getCsvData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/outputs/csv/${path}`)\n    return response.data\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getRoiData = createAsyncThunk<{ data: RoiData }, { path: string }>(\n  `${DISPLAY_DATA_SLICE_NAME}/getRoiData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {})\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getScatterData = createAsyncThunk<\n  { data: ScatterData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getScatterData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n    return response.data\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getBarData = createAsyncThunk<{ data: BarData }, { path: string }>(\n  `${DISPLAY_DATA_SLICE_NAME}/getBarData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHTMLData = createAsyncThunk<\n  { data: HTMLData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHTMLData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await axios.get(`${BASE_URL}/outputs/html/${path}`, {})\n    return response.data\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { ThunkApiConfig } from 'store/store'\nimport { getTimeSeriesDataById } from '../DisplayData/DisplayDataActions'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport { selectVisualizeItems } from './VisualizeItemSelectors'\nimport { VISUALIZE_ITEM_SLICE_NAME } from './VisualizeItemType'\nimport { isTimeSeriesItem } from './VisualizeItemUtils'\n\nexport const setImageItemClikedDataId = createAsyncThunk<\n  void,\n  { itemId: number; clickedDataId: number },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setImageItemClikedDataId`,\n  ({ itemId, clickedDataId }, thunkAPI) => {\n    const items = selectVisualizeItems(thunkAPI.getState())\n    Object.values(items).forEach((item) => {\n      if (\n        isTimeSeriesItem(item) &&\n        item.filePath != null &&\n        item.refImageItemId === itemId &&\n        !item.displayNumbers.includes(clickedDataId)\n      ) {\n        thunkAPI.dispatch(\n          getTimeSeriesDataById({ path: item.filePath, index: clickedDataId }),\n        )\n      }\n    })\n    return\n  },\n)\n\ntype DeleteOption =\n  | {\n      deleteData: true\n      dataType: DATA_TYPE\n      filePath: string\n    }\n  | { deleteData: false }\n\ntype DeleteDisplayItemArgs = {\n  itemId: number\n} & DeleteOption\n\nexport const deleteDisplayItem = createAction<DeleteDisplayItemArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/deleteDisplayItem`,\n)\n\ntype SetNewDisplayDataPathArgs = {\n  itemId: number\n  filePath: string\n  nodeId: string | null\n  dataType?: DATA_TYPE\n} & (\n  | {\n      deleteData: true\n      prevFilePath: string\n      prevDataType: DATA_TYPE\n    }\n  | { deleteData: false }\n)\n\nexport const setNewDisplayDataPath = createAction<SetNewDisplayDataPathArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setNewDisplayDataPath`,\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  deleteDisplayItem,\n  setImageItemClikedDataId,\n  setNewDisplayDataPath,\n} from './VisualizeItemActions'\n\nimport {\n  HeatMapItem,\n  ImageItem,\n  CsvItem,\n  TimeSeriesItem,\n  RoiItem,\n  ScatterItem,\n  VisualaizeItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  BarItem,\n  HDF5Item,\n  HTMLItem,\n  FluoItem,\n  BehaviorItem,\n  VISUALIZE_ITEM_SLICE_NAME,\n} from './VisualizeItemType'\nimport {\n  isDisplayDataItem,\n  isHeatMapItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isCsvItem,\n  isScatterItem,\n} from './VisualizeItemUtils'\n\nexport const initialState: VisualaizeItem = {\n  items: {},\n  selectedItemId: null,\n  layout: [],\n}\nconst displayDataCommonInitialValue = {\n  itemType: VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA,\n  filePath: null,\n  nodeId: null,\n  width: 500,\n  height: 500,\n  isWorkflowDialog: false,\n}\nconst imageItemInitialValue: ImageItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.IMAGE,\n  startIndex: 1,\n  endIndex: 10,\n  showticklabels: false,\n  showline: true,\n  zsmooth: 'best',\n  showgrid: false,\n  showscale: false,\n  colors: [\n    { rgb: `rgb(0, 0, 0)`, offset: '0' },\n    { rgb: `rgb(255, 255, 255)`, offset: '1.0' },\n  ],\n  activeIndex: 0,\n  roiItem: null,\n  roiAlpha: 1.0,\n  duration: 500,\n}\nconst timeSeriesItemInitialValue: TimeSeriesItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.TIME_SERIES,\n  offset: true,\n  span: 3,\n  showgrid: true,\n  showline: true,\n  showticklabels: true,\n  zeroline: false,\n  xrange: {\n    left: undefined,\n    right: undefined,\n  },\n  maxIndex: 0,\n  displayNumbers: [0],\n  checkedList: [],\n}\nconst heatMapItemInitialValue: HeatMapItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HEAT_MAP,\n  showscale: true,\n  colors: [\n    { rgb: `rgb(0, 0, 255)`, offset: '0' },\n    { rgb: `rgb(200, 200, 200)`, offset: '0.5' },\n    { rgb: `rgb(255, 0, 0)`, offset: '1.0' },\n  ],\n}\nconst csvItemInitialValue: CsvItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.CSV,\n  setHeader: null,\n  setIndex: false,\n  transpose: false,\n}\nconst roiItemInitialValue: RoiItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.ROI,\n}\nconst scatterItemInitialValue: ScatterItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.SCATTER,\n  xIndex: 0,\n  yIndex: 1,\n}\nconst barItemInitialValue: BarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BAR,\n}\nconst hdf5ItemInitialValue: HDF5Item = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HDF5,\n}\nconst htmlItemInitialValue: HTMLItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HTML,\n}\nconst fluoItemInitialValue: FluoItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.FLUO,\n}\nconst behaviorItemInitialValue: BehaviorItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BEHAVIOR,\n}\n\nfunction getDisplayDataItemInitialValue(dataType: DATA_TYPE) {\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return imageItemInitialValue\n    case DATA_TYPE_SET.HEAT_MAP:\n      return heatMapItemInitialValue\n    case DATA_TYPE_SET.TIME_SERIES:\n      return timeSeriesItemInitialValue\n    case DATA_TYPE_SET.CSV:\n      return csvItemInitialValue\n    case DATA_TYPE_SET.ROI:\n      return roiItemInitialValue\n    case DATA_TYPE_SET.SCATTER:\n      return scatterItemInitialValue\n    case DATA_TYPE_SET.BAR:\n      return barItemInitialValue\n    case DATA_TYPE_SET.HDF5:\n      return hdf5ItemInitialValue\n    case DATA_TYPE_SET.HTML:\n      return htmlItemInitialValue\n    case DATA_TYPE_SET.FLUO:\n      return fluoItemInitialValue\n    case DATA_TYPE_SET.BEHAVIOR:\n      return behaviorItemInitialValue\n  }\n}\n\nexport const visualaizeItemSlice = createSlice({\n  name: VISUALIZE_ITEM_SLICE_NAME,\n  initialState,\n  reducers: {\n    pushInitialItemToNewRow: (state) => {\n      const newItemId = addInitialItemFn(state)\n      state.layout.push([newItemId])\n    },\n    insertInitialItemToNextColumn: (state, action: PayloadAction<number>) => {\n      const newItemId = addInitialItemFn(state)\n      const targetItemId = action.payload\n      const targetRowIndex = state.layout.findIndex((row) =>\n        row.includes(targetItemId),\n      )\n      const targetColumnIndex =\n        state.layout[targetRowIndex].indexOf(targetItemId)\n      state.layout[targetRowIndex].splice(targetColumnIndex + 1, 0, newItemId)\n    },\n    addItemForWorkflowDialog: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        filePath: string\n        dataType: DATA_TYPE\n      }>,\n    ) => {\n      const { nodeId, filePath, dataType } = action.payload\n      const newItemId = getMaxItemId(state) + 1\n      state.items[newItemId] = {\n        ...getDisplayDataItemInitialValue(dataType),\n        isWorkflowDialog: true,\n        nodeId,\n        filePath,\n      }\n    },\n    deleteAllItemForWorkflowDialog: (state) => {\n      const targetItemIdList = Object.entries(state.items)\n        .filter(([itemId, value]) => value.isWorkflowDialog)\n        .map(([itemId, value]) => Number(itemId))\n      targetItemIdList.forEach(\n        (targetItemId) => delete state.items[targetItemId],\n      )\n    },\n    setItemSize: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        width: number\n        height: number\n      }>,\n    ) => {\n      const { itemId, width, height } = action.payload\n      const targetItem = state.items[itemId]\n      targetItem.width = width\n      targetItem.height = height\n    },\n    selectItem: (state, action: PayloadAction<number>) => {\n      state.selectedItemId = action.payload\n    },\n    setRoiItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        if (targetItem.roiItem != null) {\n          targetItem.roiItem.filePath = filePath\n          targetItem.roiItem.nodeId = nodeId\n        } else {\n          targetItem.roiItem = {\n            ...roiItemInitialValue,\n            filePath,\n            nodeId,\n          }\n        }\n      }\n    },\n    setFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isDisplayDataItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      } else {\n        throw new Error('error')\n      }\n    },\n    setImageItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setTimeSeriesItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setHeatMapItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setItemType: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        type: DATA_TYPE\n      }>,\n    ) => {\n      const { itemId, type } = action.payload\n      state.items[itemId] = getDisplayDataItemInitialValue(type)\n    },\n    resetImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex?: number\n        endIndex?: number\n      }>,\n    ) => {\n      resetImageActiveIndexFn(state, action.payload)\n    },\n    incrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex++\n      }\n    },\n    decrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex--\n      }\n    },\n    setImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        activeIndex: number\n      }>,\n    ) => {\n      const { itemId, activeIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex = activeIndex\n      }\n    },\n    setImageItemShowticklabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setImageItemZsmooth: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zsmooth: string | boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.zsmooth = action.payload.zsmooth\n      }\n    },\n    setImageItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setImageItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setImageItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setImageItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setImageItemStartIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.startIndex = action.payload.startIndex\n      }\n    },\n    setImageItemEndIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        endIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.endIndex = action.payload.endIndex\n      }\n    },\n    setImageItemRoiAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        roiAlpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.roiAlpha = action.payload.roiAlpha\n      }\n    },\n    setImageItemDuration: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        duration: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.duration = action.payload.duration\n      }\n    },\n    setTimeSeriesItemOffset: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        offset: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.offset = action.payload.offset\n      }\n    },\n    setTimeSeriesItemSpan: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        span: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.span = action.payload.span\n      }\n    },\n    setTimeSeriesItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setTimeSeriesItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setTimeSeriesItemShowTickLabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setTimeSeriesItemZeroLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zeroline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.zeroline = action.payload.zeroline\n      }\n    },\n    setTimeSeriesItemXrangeLeft: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        left: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.left = action.payload.left\n      }\n    },\n    setTimeSeriesItemXrangeRight: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        right: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.right = action.payload.right\n      }\n    },\n    setTimeSeriesItemDisplayNumbers: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        displayNumbers: number[]\n      }>,\n    ) => {\n      const { itemId, displayNumbers } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.displayNumbers = displayNumbers\n      }\n    },\n    setTimeSeriesItemCheckedList: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        checkedList: boolean[]\n      }>,\n    ) => {\n      const { itemId, checkedList } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.checkedList = checkedList\n      }\n    },\n    setTimeSeriesItemMaxIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        maxIndex: number\n      }>,\n    ) => {\n      const { itemId, maxIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.maxIndex = maxIndex\n      }\n    },\n    setTimeSeriesRefImageItemId: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        refImageItemId: number | null\n      }>,\n    ) => {\n      const { itemId, refImageItemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.refImageItemId = refImageItemId ?? undefined\n      }\n    },\n    setHeatMapItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setHeatMapItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setCsvItemTranspose: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        transpose: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.transpose = action.payload.transpose\n      }\n    },\n    setCsvItemSetHeader: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setHeader: number | null\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setHeader = action.payload.setHeader\n      }\n    },\n    setCsvItemSetIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setIndex: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setIndex = action.payload.setIndex\n      }\n    },\n    setScatterItemXIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        xIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.xIndex = action.payload.xIndex\n      }\n    },\n    setScatterItemYIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        yIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.yIndex = action.payload.yIndex\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        const itemId = action.payload.itemId\n        delete state.items[itemId]\n        if (itemId === state.selectedItemId) {\n          state.selectedItemId = null\n        }\n        state.layout.forEach((row, i) => {\n          const index = row.indexOf(itemId)\n          if (index !== -1) {\n            row.splice(index, 1)\n          }\n          if (row.length === 0) {\n            state.layout.splice(i, 1)\n          }\n        })\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        const { itemId, filePath, nodeId, dataType } = action.payload\n        const targetItem = state.items[itemId]\n        if (isDisplayDataItem(targetItem)) {\n          if (dataType != null && targetItem.dataType !== dataType) {\n            state.items[itemId] = {\n              ...getDisplayDataItemInitialValue(dataType),\n              filePath,\n              nodeId,\n            }\n          } else {\n            targetItem.filePath = filePath\n            targetItem.nodeId = nodeId\n          }\n        } else {\n          throw new Error('invalid VisualaizeItemType')\n        }\n        resetImageActiveIndexFn(state, { itemId })\n      })\n      .addCase(setImageItemClikedDataId.fulfilled, (state, action) => {\n        const { itemId: imageItemId, clickedDataId } = action.meta.arg\n        const targetItem = state.items[imageItemId]\n        if (isImageItem(targetItem)) {\n          targetItem.clickedDataId = clickedDataId\n        }\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId &&\n              !item.displayNumbers.includes(clickedDataId)\n            ) {\n              item.displayNumbers.push(clickedDataId)\n              item.checkedList[clickedDataId] = true\n            }\n          }\n        })\n      })\n  },\n})\n\nfunction getMaxItemId(state: VisualaizeItem) {\n  const idList = Object.keys(state.items).map((key) => Number(key))\n  const maxId = idList.length > 0 ? idList.reduce((a, b) => Math.max(a, b)) : 0\n  return maxId\n}\n\nfunction addInitialItemFn(state: VisualaizeItem) {\n  const nextId = getMaxItemId(state) + 1\n  state.items[nextId] = getDisplayDataItemInitialValue(DATA_TYPE_SET.IMAGE)\n  state.selectedItemId = nextId\n  return nextId\n}\n\nfunction resetImageActiveIndexFn(\n  state: VisualaizeItem,\n  args: {\n    itemId: number\n  },\n) {\n  const { itemId } = args\n  const targetItem = state.items[itemId]\n  if (isImageItem(targetItem)) {\n    targetItem.activeIndex = 0\n  }\n}\n\nexport const {\n  pushInitialItemToNewRow,\n  insertInitialItemToNextColumn,\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n  setItemSize,\n  selectItem,\n  setItemType,\n  setFilePath,\n  setHeatMapItemFilePath,\n  setImageItemFilePath,\n  setTimeSeriesItemFilePath,\n  setRoiItemFilePath,\n  resetImageActiveIndex,\n  incrementImageActiveIndex,\n  decrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowLine,\n  setImageItemShowGrid,\n  setImageItemShowScale,\n  setImageItemColors,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemRoiAlpha,\n  setImageItemDuration,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemDisplayNumbers,\n  setTimeSeriesItemCheckedList,\n  setTimeSeriesItemMaxIndex,\n  setTimeSeriesRefImageItemId,\n  setHeatMapItemShowScale,\n  setHeatMapItemColors,\n  setCsvItemTranspose,\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} = visualaizeItemSlice.actions\n\nexport default visualaizeItemSlice.reducer\n","import React from 'react'\nimport { DATA_TYPE } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const DisplayDataContext = React.createContext<{\n  nodeId: string | null\n  filePath: string\n  dataType: DATA_TYPE\n  itemId: number\n}>({ nodeId: '', filePath: '', dataType: 'csv', itemId: NaN })\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectHeatMapData,\n  selectHeatMapDataError,\n  selectHeatMapDataIsFulfilled,\n  selectHeatMapDataIsInitialized,\n  selectHeatMapDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHeatMapData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const HeatMapPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHeatMapDataIsPending(path))\n  const isInitialized = useSelector(selectHeatMapDataIsInitialized(path))\n  const error = useSelector(selectHeatMapDataError(path))\n  const isFulfilled = useSelector(selectHeatMapDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHeatMapData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HeatMapImple />\n  } else {\n    return null\n  }\n})\n\nconst HeatMapImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const heatMapData = useSelector(selectHeatMapData(path), heatMapDataEqualtyFn)\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const colorscale = useSelector(selectHeatMapItemColors(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      heatMapData != null\n        ? [\n            {\n              z: heatMapData,\n              x: heatMapData.map((_, i) => i),\n              y: heatMapData[0].map((_, i) => i),\n              type: 'heatmap',\n              name: 'heatmap',\n              colorscale: colorscale.map((value) => {\n                let offset: number = parseFloat(value.offset)\n                const offsets: number[] = colorscale.map((v) => {\n                  return parseFloat(v.offset)\n                })\n                // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n                if (offset === Math.max(...offsets)) {\n                  offset = 1.0\n                }\n                if (offset === Math.min(...offsets)) {\n                  offset = 0.0\n                }\n                return [offset, value.rgb]\n              }),\n              hoverongaps: false,\n              showlegend: true,\n              showscale: showscale,\n            },\n          ]\n        : [],\n    [heatMapData, showscale, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n  }\n\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction heatMapDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, { useCallback, useEffect } from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Button, LinearProgress, TextField, Typography } from '@mui/material'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport { DisplayDataContext } from '../DataContext'\n\nimport {\n  selectImageDataError,\n  selectImageDataIsInitialized,\n  selectImageDataIsPending,\n  selectImageDataIsFulfilled,\n  selectActiveImageData,\n  selectRoiData,\n  selectImageDataMaxSize,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getImageData,\n  getRoiData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowLine,\n  selectImageItemShowGrid,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemActiveIndex,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectRoiItemFilePath,\n  selectRoiItemIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemDuration,\n  selectVisualizeItemWidth,\n  selectVisualizeItemHeight,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  incrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemDuration,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { RootState } from 'store/store'\nimport { Datum, LayoutAxis, PlotData } from 'plotly.js'\nimport createColormap from 'colormap'\nimport Slider from '@mui/material/Slider'\nimport Box from '@mui/material/Box'\nimport { setImageItemClikedDataId } from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const ImagePlot = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const isPending = useSelector(selectImageDataIsPending(path))\n  const isInitialized = useSelector(selectImageDataIsInitialized(path))\n  const isFulfilled = useSelector(selectImageDataIsFulfilled(path))\n  const error = useSelector(selectImageDataError(path))\n\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(\n        getImageData({\n          path,\n          startIndex: startIndex ?? 1,\n          endIndex: endIndex ?? 10,\n        }),\n      )\n    }\n    if (roiFilePath != null) {\n      dispatch(getRoiData({ path: roiFilePath }))\n    }\n  }, [dispatch, isInitialized, path, startIndex, endIndex, roiFilePath])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ImagePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ImagePlotImple = React.memo(() => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const activeIndex = useSelector(selectImageItemActiveIndex(itemId))\n  return (\n    <>\n      <ImagePlotChart activeIndex={activeIndex} />\n    </>\n  )\n})\n\nconst ImagePlotChart = React.memo<{\n  activeIndex: number\n}>(({ activeIndex }) => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(\n    selectActiveImageData(path, activeIndex),\n    imageDataEqualtyFn,\n  )\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const roiData = useSelector(\n    (state: RootState) =>\n      roiFilePath != null ? selectRoiData(roiFilePath)(state) : [],\n    imageDataEqualtyFn,\n  )\n\n  const maxSize = useSelector(selectImageDataMaxSize(path))\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const colorscale = useSelector(selectImageItemColors(itemId))\n  const duration = useSelector(selectImageItemDuration(itemId))\n  const timeDataMaxIndex = useSelector(selectRoiItemIndex(itemId, roiFilePath))\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscaleRoi = createColormap({\n    colormap: 'jet',\n    nshades: 100, //timeDataMaxIndex >= 6 ? timeDataMaxIndex : 6,\n    format: 'rgba',\n    alpha: 1.0,\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'images',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          return [offset, value.rgb]\n        }),\n        hoverongaps: false,\n        showscale: showscale,\n        zsmooth: zsmooth, // ['best', 'fast', false]\n        // showlegend: true,\n      },\n      {\n        z: roiData,\n        type: 'heatmap',\n        name: 'roi',\n        hovertemplate: 'cell id: %{z}',\n        colorscale: [...Array(timeDataMaxIndex)].map((_, i) => {\n          const new_i = Math.floor(((i % 10) * 10 + i / 10) % 100)\n          const offset = i / (timeDataMaxIndex - 1)\n          const rgba = colorscaleRoi[new_i]\n          const hex = rgba2hex(rgba, roiAlpha)\n          return [offset, hex]\n        }),\n        zmin: 1,\n        zmax: timeDataMaxIndex,\n        hoverongaps: false,\n        zsmooth: false,\n        showscale: false,\n      },\n    ],\n    [\n      imageData,\n      roiData,\n      zsmooth,\n      showscale,\n      colorscale,\n      colorscaleRoi,\n      timeDataMaxIndex,\n      roiAlpha,\n    ],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 170,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan', //'select',\n      xaxis: {\n        autorange: true,\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n        showticklabels: showticklabels,\n      },\n      yaxis: {\n        automargin: true,\n        autorange: 'reversed',\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n        showticklabels: showticklabels, // todo\n      },\n    }),\n    [showgrid, showline, showticklabels, width, height],\n  )\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n  }\n\n  const ref = React.useRef<HTMLDivElement>(null)\n  const plotlyHeight = ref.current?.getBoundingClientRect().height\n\n  useEffect(() => {\n    const height =\n      ref.current?.getElementsByClassName('main-svg')[0].clientHeight\n    const plotContainer = (\n      ref.current?.getElementsByClassName(\n        'plot-container',\n      ) as HTMLCollectionOf<HTMLElement>\n    )[0]\n\n    if (height !== undefined && plotContainer !== undefined) {\n      plotContainer.style.height = `${height}px`\n    }\n  }, [plotlyHeight, activeIndex])\n\n  const dispatch = useDispatch()\n\n  const onClick = (event: any) => {\n    const points: PlotDatum = event.points[0]\n    if (points.curveNumber >= 1) {\n      dispatch(\n        setImageItemClikedDataId({ itemId, clickedDataId: points.z - 1 }),\n      )\n    }\n  }\n\n  const onSliderChange = (\n    event: Event,\n    value: number | number[],\n    activeThumb: number,\n  ) => {\n    if (typeof value === 'number') {\n      const newIndex = value - startIndex\n      if (newIndex >= 0 && newIndex !== activeIndex) {\n        dispatch(setImageActiveIndex({ itemId, activeIndex: newIndex }))\n      }\n    }\n  }\n\n  const intervalRef = React.useRef<null | NodeJS.Timeout>(null)\n\n  useEffect(() => {\n    if (intervalRef.current !== null) {\n      if (activeIndex >= maxSize) {\n        clearInterval(intervalRef.current)\n        intervalRef.current = null\n      }\n    }\n  }, [activeIndex, maxSize])\n\n  const onPlayClick = useCallback(() => {\n    if (activeIndex >= maxSize) {\n      dispatch(setImageActiveIndex({ itemId, activeIndex: 0 }))\n    }\n    if (maxSize > 1 && intervalRef.current === null) {\n      intervalRef.current = setInterval(() => {\n        dispatch(incrementImageActiveIndex({ itemId }))\n      }, duration)\n    }\n  }, [activeIndex, maxSize, dispatch, duration, itemId])\n\n  const onPauseClick = () => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current)\n      intervalRef.current = null\n    }\n  }\n\n  const onDurationChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue =\n        event.target.value === '' ? '' : Number(event.target.value)\n      if (typeof newValue === 'number') {\n        dispatch(setImageItemDuration({ itemId, duration: newValue }))\n      }\n    },\n    [dispatch, itemId],\n  )\n\n  return (\n    <div ref={ref}>\n      <Box sx={{ width: '50%' }}>\n        <Button variant=\"outlined\" onClick={onPlayClick}>\n          Play\n        </Button>\n        <Button variant=\"outlined\" onClick={onPauseClick}>\n          Pause\n        </Button>\n        <TextField\n          // error={inputError}\n          type=\"number\"\n          inputProps={{\n            step: 100,\n            min: 0,\n            max: 1000,\n          }}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={onDurationChange}\n          value={duration}\n          // helperText={inputError ? 'index > 0' : undefined}\n        />\n        msec\n        <div>Index: {startIndex + activeIndex}</div>\n        <Slider\n          aria-label=\"Index\"\n          defaultValue={1}\n          value={startIndex + activeIndex}\n          valueLabelDisplay=\"auto\"\n          step={1}\n          marks\n          min={startIndex}\n          max={maxSize === 0 ? 0 : endIndex}\n          onChange={onSliderChange}\n        />\n      </Box>\n      <PlotlyChart\n        data={data}\n        layout={layout}\n        config={config}\n        onClick={onClick}\n      />\n    </div>\n  )\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\ninterface PlotDatum {\n  curveNumber: number\n  data: PlotData\n  customdata: Datum\n  pointIndex: number\n  pointNumber: number\n  x: Datum\n  xaxis: LayoutAxis\n  y: Datum\n  yaxis: LayoutAxis\n  z: number\n}\n\nfunction rgba2hex(rgba: [number, number, number, number], alpha: number) {\n  const r = rgba[0]\n  const g = rgba[1]\n  const b = rgba[2]\n  const a = alpha\n\n  var outParts = [\n    r.toString(16),\n    g.toString(16),\n    b.toString(16),\n    Math.round(a * 255)\n      .toString(16)\n      .substring(0, 2),\n  ]\n\n  // Pad single-digit output values\n  outParts.forEach(function (part, i) {\n    if (part.length === 1) {\n      outParts[i] = '0' + part\n    }\n  })\n\n  return '#' + outParts.join('')\n}\n","import React from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectRoiData,\n  selectRoiDataError,\n  selectRoiDataIsFulfilled,\n  selectRoiDataIsInitialized,\n  selectRoiDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { getRoiData } from 'store/slice/DisplayData/DisplayDataActions'\nimport createColormap from 'colormap'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const RoiPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isPending = useSelector(selectRoiDataIsPending(path))\n  const isInitialized = useSelector(selectRoiDataIsInitialized(path))\n  const isFulfilled = useSelector(selectRoiDataIsFulfilled(path))\n  const error = useSelector(selectRoiDataError(path))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getRoiData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <RoiPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst RoiPlotImple = React.memo<{}>(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(selectRoiData(path), imageDataEqualtyFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscale: ColorType[] = createColormap({\n    colormap: 'jet',\n    nshades: 10,\n    format: 'hex',\n    alpha: 1,\n  }).map((v, idx) => {\n    return { rgb: v, offset: String(idx / 9) }\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'roi',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          return [offset, value.rgb]\n        }),\n        hoverongaps: false,\n        // zsmooth: zsmooth, // ['best', 'fast', false]\n        zsmooth: false,\n        showlegend: true,\n      },\n    ],\n    [imageData, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      xaxis: {\n        autorange: true,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n      },\n      yaxis: {\n        autorange: 'reversed',\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n      },\n    }),\n    [width, height],\n  )\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n  }\n  return (\n    <div className=\"imagePlotChart\">\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectScatterData,\n  selectScatterDataError,\n  selectScatterDataIsFulfilled,\n  selectScatterDataIsInitialized,\n  selectScatterDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getScatterData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { ScatterData } from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const ScatterPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectScatterDataIsPending(path))\n  const isInitialized = useSelector(selectScatterDataIsInitialized(path))\n  const error = useSelector(selectScatterDataError(path))\n  const isFulfilled = useSelector(selectScatterDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getScatterData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ScatterPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ScatterPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const scatterData = useSelector(\n    selectScatterData(path),\n    scatterDataEqualityFn,\n  )\n\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n  const maxIndex = Object.keys(scatterData).length - 1\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x:\n          xIndex < maxIndex\n            ? Object.values(scatterData[xIndex])\n            : Object.values(scatterData[maxIndex]),\n        y:\n          yIndex < maxIndex\n            ? Object.values(scatterData[yIndex])\n            : Object.values(scatterData[maxIndex]),\n        type: 'scatter',\n        mode: 'markers', //'markers+text',\n        text: Object.keys(scatterData[0]),\n        textposition: 'top center',\n        textfont: {\n          family: 'Raleway, sans-serif',\n        },\n        marker: {\n          size: 5,\n          color: Object.keys(scatterData[0]),\n        },\n      },\n    ],\n    [scatterData, xIndex, yIndex, maxIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      xaxis: {\n        title: {\n          text: `x: ${\n            xIndex < Object.keys(scatterData).length ? xIndex : maxIndex\n          }`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: `y: ${\n            yIndex < Object.keys(scatterData).length ? yIndex : maxIndex\n          }`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n    }),\n    [xIndex, yIndex, maxIndex, scatterData, width, height],\n  )\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n  }\n\n  const ref = React.useRef<HTMLDivElement>(null)\n  const plotlyHeight = ref.current?.getBoundingClientRect().height\n\n  useEffect(() => {\n    const height =\n      ref.current?.getElementsByClassName('main-svg')[0].clientHeight\n    const plotContainer = (\n      ref.current?.getElementsByClassName(\n        'plot-container',\n      ) as HTMLCollectionOf<HTMLElement>\n    )[0]\n\n    if (height !== undefined && plotContainer !== undefined) {\n      plotContainer.style.height = `${height}px`\n    }\n  }, [plotlyHeight])\n\n  return (\n    <div ref={ref}>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nfunction scatterDataEqualityFn(\n  a: ScatterData | undefined,\n  b: ScatterData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectCsvData,\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { CsvData } from 'store/slice/DisplayData/DisplayDataType'\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const CsvPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <CsvPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst CsvPlotImple = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  return (\n    <PresentationalCsvPlot\n      path={path}\n      transpose={transpose}\n      setHeader={setHeader}\n      setIndex={setIndex}\n    />\n  )\n})\n\n/**\n * CsvFileNodeの設定時に表示するプレビューでも使用することを想定\n *\n * DisplayDataContextに依存しない\n */\nexport const PresentationalCsvPlot = React.memo<{\n  path: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ path, transpose, setIndex, setHeader }) => {\n  const data = useSelector(\n    selectCsvData(path),\n    (a: CsvData | undefined, b: CsvData | undefined) => {\n      if (a != null && b != null) {\n        return twoDimarrayEqualityFn(a, b)\n      } else {\n        return a === undefined && b === undefined\n      }\n    },\n  )\n\n  const csvData = React.useMemo(() => {\n    if (transpose) {\n      return data[0].map((col, i) => data.map((row) => row[i]))\n    }\n    return data\n  }, [data, transpose])\n\n  const header: GridColDef[] = React.useMemo(() => {\n    const headerData = () => {\n      if (setHeader === null) {\n        return csvData[0]\n      } else {\n        if (setHeader >= csvData.length) {\n          return csvData[csvData.length - 1]\n        } else {\n          return csvData[setHeader]\n        }\n      }\n    }\n\n    if (setIndex) {\n      return [\n        { field: 'col0', headerName: 'index', width: 150 },\n        ...headerData().map((value, idx) => {\n          return {\n            field: `col${idx + 1}`,\n            headerName: `${setHeader === null ? idx : value}`,\n            width: 150,\n          }\n        }),\n      ]\n    } else {\n      return headerData().map((value, idx) => {\n        return {\n          field: `col${idx + 1}`,\n          headerName: `${setHeader === null ? idx : value}`,\n          width: 150,\n        }\n      })\n    }\n  }, [csvData, setHeader, setIndex])\n  const rows = csvData\n    .map((row, row_id) => {\n      let rowObj = Object.fromEntries(\n        [row_id, ...row].map((value, index) => {\n          return [`col${index}`, value]\n        }),\n      )\n      rowObj['id'] = row_id\n      return rowObj\n    })\n    .filter(\n      (value, idx) =>\n        setHeader === null || (setHeader !== null && idx > setHeader),\n    )\n\n  return (\n    <div style={{ height: 300, width: '100%' }}>\n      <DataGrid rows={rows} columns={header} />\n    </div>\n  )\n})\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LegendClickEvent } from 'plotly.js'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectTimeSeriesData,\n  selectTimeSeriesDataError,\n  selectTimeSeriesDataIsFulfilled,\n  selectTimeSeriesDataIsInitialized,\n  selectTimeSeriesDataIsPending,\n  selectTimeSeriesStd,\n  selectTimeSeriesXrange,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getTimeSeriesDataById } from 'store/slice/DisplayData/DisplayDataActions'\nimport { TimeSeriesData } from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectTimeSeriesItemCheckedList,\n  selectTimeSeriesItemDisplayNumbers,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemRefImageItemId,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setTimeSeriesItemCheckedList } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport createColormap from 'colormap'\nimport { setTimeSeriesItemDisplayNumbers } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const TimeSeriesPlot = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const displayNumbers = useSelector(selectTimeSeriesItemDisplayNumbers(itemId))\n  const isPending = useSelector(selectTimeSeriesDataIsPending(path))\n  const isInitialized = useSelector(selectTimeSeriesDataIsInitialized(path))\n  const error = useSelector(selectTimeSeriesDataError(path))\n  const isFulfilled = useSelector(selectTimeSeriesDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getTimeSeriesDataById({ path, index: 0 }))\n    }\n  }, [dispatch, isInitialized, path, displayNumbers])\n\n  if (!isInitialized) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isPending || isFulfilled) {\n    return <TimeSeriesPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst TimeSeriesPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  // 0番のデータとkeysだけをとってくる\n  const dispatch = useDispatch()\n  const timeSeriesData = useSelector(\n    selectTimeSeriesData(path),\n    timeSeriesDataEqualityFn,\n  )\n\n  const dataXrange = useSelector(selectTimeSeriesXrange(path))\n  const dataStd = useSelector(selectTimeSeriesStd(path))\n\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n  const refImageItemId = useSelector(selectTimeSeriesItemRefImageItemId(itemId))\n  const displayNumbers = useSelector(\n    selectTimeSeriesItemDisplayNumbers(itemId, refImageItemId),\n  )\n  const checkedList = useSelector(selectTimeSeriesItemCheckedList(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorScale = createColormap({\n    colormap: 'jet',\n    nshades: 100, //maxIndex >= 6 ? maxIndex : 6,\n    format: 'hex',\n    alpha: 1,\n  })\n\n  React.useEffect(() => {\n    const keys = Object.keys(timeSeriesData)\n    if (checkedList.length === 0 && keys.length !== 0) {\n      const checkedList = keys.map((_, i) => {\n        if (i === 0) {\n          return true\n        }\n        return false\n      })\n      dispatch(\n        setTimeSeriesItemCheckedList({\n          itemId,\n          checkedList,\n        }),\n      )\n    }\n  }, [timeSeriesData, dispatch, itemId, checkedList.length])\n\n  const data = React.useMemo(() => {\n    if (timeSeriesData === null) {\n      return []\n    }\n    return Object.keys(timeSeriesData).map((key, i) => {\n      let y = Object.values(timeSeriesData[key])\n      const new_i = Math.floor((i % 10) * 10 + i / 10) % 100\n\n      if (displayNumbers.includes(i)) {\n        if (offset) {\n          const activeIdx: number = displayNumbers.findIndex(\n            (value) => value === i,\n          )\n          const mean: number = y.reduce((a, b) => a + b) / y.length\n          const std: number =\n            span *\n            Math.sqrt(y.reduce((a, b) => a + Math.pow(b - mean, 2)) / y.length)\n          return {\n            name: `(${String(parseInt(key) + 1)})`,\n            x: dataXrange,\n            y: y.map((value) => (value - mean) / (std + 1e-10) + activeIdx),\n            visible: true,\n            line: { color: colorScale[new_i] },\n            error_y: {\n              type: 'data',\n              array: null,\n              visible: true,\n            },\n          }\n        } else {\n          return {\n            name: `(${String(parseInt(key) + 1)})`,\n            x: dataXrange,\n            y: y,\n            visible: true,\n            line: { color: colorScale[new_i] },\n            error_y: {\n              type: 'data',\n              array: Object.keys(dataStd).includes(key)\n                ? Object.values(dataStd[key])\n                : null,\n              visible: true,\n            },\n          }\n        }\n      } else {\n        return {\n          name: `(${String(parseInt(key) + 1)})`,\n          x: dataXrange,\n          y: y,\n          visible: 'legendonly',\n          line: { color: colorScale[new_i] },\n          error_y: {\n            type: 'data',\n            array: Object.keys(dataStd).includes(key)\n              ? Object.values(dataStd[key])\n              : null,\n            visible: true,\n          },\n        }\n      }\n    })\n  }, [\n    timeSeriesData,\n    displayNumbers,\n    offset,\n    span,\n    colorScale,\n    dataStd,\n    dataXrange,\n  ])\n\n  const annotations = React.useMemo(() => {\n    if (data.length !== 0) {\n      return displayNumbers.map((i) => {\n        return {\n          x: Number(dataXrange[dataXrange.length - 1]) + dataXrange.length / 10,\n          y: data[i].y[dataXrange.length - 1],\n          xref: 'x',\n          yref: 'y',\n          text: `cell: ${i + 1}`,\n          arrowhead: 1,\n          ax: 0,\n          ay: -10,\n        }\n      })\n    } else {\n      return []\n    }\n  }, [data, displayNumbers, dataXrange])\n\n  const layout = React.useMemo(\n    () => ({\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      width: width,\n      height: height - 50,\n      xaxis: {\n        range: [xrange.left, xrange.right],\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      yaxis: {\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      annotations: annotations,\n    }),\n    [\n      xrange,\n      showgrid,\n      showline,\n      showticklabels,\n      zeroline,\n      annotations,\n      width,\n      height,\n    ],\n  )\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n  }\n\n  const onLegendClick = (event: LegendClickEvent) => {\n    const clickNumber = event.curveNumber\n\n    // set DisplayNumbers\n    if (displayNumbers.includes(clickNumber)) {\n      dispatch(\n        setTimeSeriesItemDisplayNumbers({\n          itemId,\n          displayNumbers: displayNumbers.filter(\n            (value) => value !== clickNumber,\n          ),\n        }),\n      )\n\n      dispatch(\n        setTimeSeriesItemCheckedList({\n          itemId,\n          checkedList: checkedList.map((v, i) => {\n            if (i === clickNumber) {\n              return false\n            }\n            return v\n          }),\n        }),\n      )\n    } else {\n      dispatch(\n        setTimeSeriesItemDisplayNumbers({\n          itemId,\n          displayNumbers: [...displayNumbers, clickNumber],\n        }),\n      )\n\n      dispatch(\n        setTimeSeriesItemCheckedList({\n          itemId,\n          checkedList: checkedList.map((v, i) => {\n            if (i === clickNumber) {\n              return true\n            }\n            return v\n          }),\n        }),\n      )\n\n      dispatch(getTimeSeriesDataById({ path, index: clickNumber }))\n    }\n\n    return false\n  }\n\n  const ref = React.useRef<HTMLDivElement>(null)\n  const plotlyHeight = ref.current?.getBoundingClientRect().height\n\n  useEffect(() => {\n    const height =\n      ref.current?.getElementsByClassName('main-svg')[0].clientHeight\n    const plotContainer = (\n      ref.current?.getElementsByClassName(\n        'plot-container',\n      ) as HTMLCollectionOf<HTMLElement>\n    )[0]\n\n    if (height !== undefined && plotContainer !== undefined) {\n      plotContainer.style.height = `${height}px`\n    }\n  }, [plotlyHeight])\n\n  return (\n    <div ref={ref}>\n      <PlotlyChart\n        data={data}\n        layout={layout}\n        config={config}\n        onLegendClick={onLegendClick}\n      />\n    </div>\n  )\n})\n\nfunction timeSeriesDataEqualityFn(\n  a: TimeSeriesData | undefined,\n  b: TimeSeriesData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.entries(a)\n    const bArray = Object.entries(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every(([aKey, aValue], i) => {\n          const [bKey, bValue] = bArray[i]\n          return bKey === aKey && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction nestEqualityFun(\n  a: {\n    [key: number]: number\n  },\n  b: {\n    [key: number]: number\n  },\n) {\n  const aArray = Object.entries(a)\n  const bArray = Object.entries(b)\n  return (\n    a === b ||\n    (aArray.length === bArray.length &&\n      aArray.every(([aKey, aValue], i) => {\n        const [bKey, bValue] = bArray[i]\n        return bKey === aKey && bValue === aValue\n      }))\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectBarData,\n  selectBarDataError,\n  selectBarDataIsFulfilled,\n  selectBarDataIsInitialized,\n  selectBarDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getBarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { BarData } from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const BarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectBarDataIsPending(path))\n  const isInitialized = useSelector(selectBarDataIsInitialized(path))\n  const error = useSelector(selectBarDataError(path))\n  const isFulfilled = useSelector(selectBarDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getBarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <BarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst BarPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const barData = useSelector(selectBarData(path), barDataEqualityFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: Object.keys(barData[0]),\n        y: Object.values(barData[0]),\n        type: 'bar',\n      },\n    ],\n    [barData],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n  }\n\n  const ref = React.useRef<HTMLDivElement>(null)\n  const plotlyHeight = ref.current?.getBoundingClientRect().height\n\n  useEffect(() => {\n    const height =\n      ref.current?.getElementsByClassName('main-svg')[0].clientHeight\n    const plotContainer = (\n      ref.current?.getElementsByClassName(\n        'plot-container',\n      ) as HTMLCollectionOf<HTMLElement>\n    )[0]\n\n    if (height !== undefined && plotContainer !== undefined) {\n      plotContainer.style.height = `${height}px`\n    }\n  }, [plotlyHeight])\n\n  return (\n    <div ref={ref}>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nfunction barDataEqualityFn(a: BarData | undefined, b: BarData | undefined) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHTMLData,\n  selectHTMLDataError,\n  selectHTMLDataIsFulfilled,\n  selectHTMLDataIsInitialized,\n  selectHTMLDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHTMLData } from 'store/slice/DisplayData/DisplayDataActions'\n\nexport const HTMLPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHTMLDataIsPending(path))\n  const isInitialized = useSelector(selectHTMLDataIsInitialized(path))\n  const error = useSelector(selectHTMLDataError(path))\n  const isFulfilled = useSelector(selectHTMLDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHTMLData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HTMLPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HTMLPlotImple = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const htmlData = useSelector(selectHTMLData(path))\n\n  return <div dangerouslySetInnerHTML={{ __html: htmlData }} />\n})\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectVisualizeDataFilePath,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { DisplayDataContext } from './DataContext'\nimport { HeatMapPlot } from './Plot/HeatMapPlot'\nimport { ImagePlot } from './Plot/ImagePlot'\nimport { RoiPlot } from './Plot/RoiPlot'\nimport { ScatterPlot } from './Plot/ScatterPlot'\nimport { CsvPlot } from './Plot/CsvPlot'\nimport { TimeSeriesPlot } from './Plot/TimeSeriesPlot'\nimport { BarPlot } from './Plot/BarPlot'\nimport { HTMLPlot } from './Plot/HTMLPlot'\n\nexport const DisplayDataItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const nodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  if (filePath != null && dataType != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{ nodeId, filePath, dataType, itemId }}\n      >\n        <DisplayPlot dataType={dataType} />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n\nconst DisplayPlot = React.memo<{\n  dataType: DATA_TYPE\n}>(({ dataType }) => {\n  switch (dataType) {\n    case DATA_TYPE_SET.CSV:\n      return <CsvPlot />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesPlot />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatMapPlot />\n    case DATA_TYPE_SET.IMAGE:\n      return <ImagePlot />\n    case DATA_TYPE_SET.ROI:\n      return <RoiPlot />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterPlot />\n    case DATA_TYPE_SET.BAR:\n      return <BarPlot />\n    case DATA_TYPE_SET.HTML:\n      return <HTMLPlot />\n    default:\n      return null\n  }\n})\n","import { useDispatch, useSelector } from 'react-redux'\nimport Tabs, { tabsClasses } from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box'\nimport React from 'react'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { selectAlgorithmName } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectPipelineNodeResultOutputKeyList,\n  selectPipelineNodeResultOutputFileDataType,\n  selectPipelineNodeResultOutputFilePath,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { selectVisualizeItemIdForWorkflowDialog } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { DisplayDataItem } from 'components/Visualize/DisplayDataItem'\n\nexport const AlgorithmOutputDialog = React.memo<{\n  open: boolean\n  onClose: () => void\n  nodeId: string\n}>(({ open, onClose, nodeId }) => {\n  const dispatch = useDispatch()\n  const closeFn = () => {\n    onClose()\n    dispatch(deleteAllItemForWorkflowDialog())\n  }\n  return (\n    <Dialog open={open} onClose={closeFn} fullWidth>\n      <TitleWithCloseButton onClose={closeFn} nodeId={nodeId} />\n      <DialogContent\n        dividers\n        sx={{\n          pt: 1,\n          px: 2,\n        }}\n      >\n        {open && <OutputViewer nodeId={nodeId} />}\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nconst TitleWithCloseButton = React.memo<{\n  onClose: () => void\n  nodeId: string\n}>(({ nodeId, onClose }) => {\n  const nodeName = useSelector(selectAlgorithmName(nodeId))\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }}>\n      Output of {nodeName}\n      <IconButton\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 10,\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </DialogTitle>\n  )\n})\n\nconst OutputViewer = React.memo<{ nodeId: string }>(({ nodeId }) => {\n  const outputKeyList = useSelector(\n    selectPipelineNodeResultOutputKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  const [selectedOutoutKey, setSelectedOutputKey] = React.useState(\n    outputKeyList[0],\n  )\n  return (\n    <>\n      <OutputSelectTabs\n        outputKeyList={outputKeyList}\n        selectedOutoutKey={selectedOutoutKey}\n        onSelectOutput={setSelectedOutputKey}\n      />\n      <DisplayDataView nodeId={nodeId} outputKey={selectedOutoutKey} />\n    </>\n  )\n})\n\nconst OutputSelectTabs = React.memo<{\n  selectedOutoutKey: string\n  outputKeyList: string[]\n  onSelectOutput: (selectedKey: string) => void\n}>(({ selectedOutoutKey, outputKeyList, onSelectOutput }) => {\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    onSelectOutput(newValue)\n  }\n  return (\n    <Tabs\n      value={selectedOutoutKey}\n      onChange={handleChange}\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n      sx={{\n        [`& .${tabsClasses.scrollButtons}`]: {\n          '&.Mui-disabled': { opacity: 0.3 },\n        },\n      }}\n    >\n      {outputKeyList.map((outputKey) => (\n        <Tab\n          value={outputKey}\n          label={outputKey}\n          sx={{\n            textTransform: 'none',\n          }}\n        />\n      ))}\n    </Tabs>\n  )\n})\n\nconst DisplayDataView = React.memo<{ nodeId: string; outputKey: string }>(\n  ({ nodeId, outputKey }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectPipelineNodeResultOutputFilePath(nodeId, outputKey),\n    )\n    const dataType = useSelector(\n      selectPipelineNodeResultOutputFileDataType(nodeId, outputKey),\n    )\n    const itemId = useSelector(\n      selectVisualizeItemIdForWorkflowDialog(nodeId, filePath, dataType),\n    )\n    React.useEffect(() => {\n      if (itemId === null) {\n        dispatch(addItemForWorkflowDialog({ nodeId, filePath, dataType }))\n      }\n    }, [dispatch, nodeId, filePath, dataType, itemId])\n    return (\n      <Box\n        sx={{\n          mx: 1,\n          my: 2,\n        }}\n      >\n        {itemId != null && <DisplayDataItem itemId={itemId} />}\n      </Box>\n    )\n  },\n)\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport {\n  alpha,\n  Typography,\n  useTheme,\n  Tooltip,\n  FormHelperText,\n  IconButton,\n  Button,\n  LinearProgress,\n  ButtonGroup,\n} from '@mui/material'\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded'\nimport ErrorIcon from '@mui/icons-material/Error'\nimport Popover from '@mui/material/Popover'\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined'\n\nimport { AlgorithmInfo } from 'store/slice/AlgorithmList/AlgorithmListType'\nimport {\n  selectAlgoArgs,\n  selectAlgoReturns,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { selectAlgorithmNodeDefined } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { toggleParamForm } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultMessage,\n  selectPipelineNodeResultStatus,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\nimport { NODE_RESULT_STATUS } from 'store/slice/Pipeline/PipelineType'\nimport { AlgorithmOutputDialog } from './AlgorithmOutputDialog'\n\nconst leftHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\nconst rightHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\n\nexport const AlgorithmNode = React.memo<NodeProps<NodeData>>((element) => {\n  const defined = useSelector(selectAlgorithmNodeDefined(element.id))\n  if (defined) {\n    return <AlgorithmNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst AlgorithmNodeImple = React.memo<NodeProps<NodeData>>(\n  ({ id: nodeId, selected: elementSelected, isConnectable, data }) => {\n    const theme = useTheme()\n    const dispatch = useDispatch()\n\n    const onClickParamButton = () => {\n      dispatch(toggleParamForm(nodeId))\n    }\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    const [open, setOpen] = React.useState(false)\n    const onCloseOutputDialog = () => {\n      setOpen(false)\n    }\n    const onClickOutputButton = () => {\n      setOpen(true)\n    }\n\n    const status = useStatus(nodeId)\n\n    return (\n      <div\n        style={{\n          width: '100%',\n          height: '110%',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.15)\n            : undefined,\n          border: '1px solid',\n        }}\n      >\n        <IconButton\n          aria-label=\"delete\"\n          style={{ color: 'black', position: 'absolute', top: -20, right: -5 }}\n          onClick={onClickDeleteIcon}\n          size=\"large\"\n        >\n          <CloseOutlinedIcon />\n        </IconButton>\n        <AlgoName nodeId={nodeId} data={data} />\n        <ButtonGroup sx={{ mx: 1 }}>\n          <Button size=\"small\" onClick={onClickParamButton}>\n            Param\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={onClickOutputButton}\n            disabled={status !== NODE_RESULT_STATUS.SUCCESS}\n          >\n            Output\n          </Button>\n          <AlgorithmOutputDialog\n            nodeId={nodeId}\n            open={open}\n            onClose={onCloseOutputDialog}\n          />\n        </ButtonGroup>\n        <AlgoArgs nodeId={nodeId} />\n        <AlgoReturns nodeId={nodeId} isConnectable={isConnectable} />\n        <Message nodeId={nodeId} />\n      </div>\n    )\n  },\n)\n\nconst AlgoName = React.memo<{\n  nodeId: string\n  data: NodeData\n}>(({ nodeId, data }) => {\n  const theme = useTheme()\n  const status = useStatus(nodeId)\n  return (\n    <div\n      style={{\n        padding: 8,\n        paddingLeft: 8,\n      }}\n      className=\"algoName\"\n    >\n      {status === NODE_RESULT_STATUS.PENDING && <LinearProgress />}\n      <Typography\n        style={{\n          textAlign: 'left',\n          color:\n            status === NODE_RESULT_STATUS.ERROR\n              ? theme.palette.error.main\n              : undefined,\n        }}\n      >\n        {data.label}\n      </Typography>\n    </div>\n  )\n})\n\nconst AlgoArgs = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const algoArgs = useSelector(selectAlgoArgs(nodeId), algoInfoListEqualtyFn)\n\n  return (\n    <>\n      {algoArgs != null\n        ? algoArgs\n            .filter((info) => info.type !== 'params')\n            .map((algoInfo, i) => {\n              return <ArgHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n            })\n        : null}\n    </>\n  )\n})\n\nconst AlgoReturns = React.memo<{\n  nodeId: string\n  isConnectable: boolean\n}>(({ nodeId, isConnectable }) => {\n  const algoReturns = useSelector(\n    selectAlgoReturns(nodeId),\n    algoInfoListEqualtyFn,\n  )\n  return (\n    <>\n      {algoReturns != null ? (\n        algoReturns?.map((algoInfo, i) => {\n          return <ReturnHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n        })\n      ) : (\n        // algoReturns.lengthが0の場合の応急処置\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={`${nodeId}`}\n          style={{\n            ...rightHandleStyle,\n            top: 15,\n          }}\n          isConnectable={isConnectable}\n        />\n      )}\n    </>\n  )\n})\n\ntype HandleProps = {\n  algoInfo: AlgorithmInfo\n  nodeId: string\n  i: number\n}\n\nfunction hexToRgb(hex: string | undefined, isNone: boolean | undefined) {\n  if (hex !== undefined) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n    if (result !== null) {\n      if (isNone) {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 0.55)`\n      } else {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 1)`\n      }\n    } else {\n      return undefined\n    }\n  } else {\n    return undefined\n  }\n}\n\nconst ArgHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type, isNone }, nodeId, i }) => {\n    const hex_color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    const rgb_color = hexToRgb(hex_color, isNone)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"target\"\n        position={Position.Left}\n        id={id}\n        style={{\n          ...leftHandleStyle,\n          background: rgb_color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"left-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst ReturnHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type }, nodeId, i }) => {\n    const color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"source\"\n        position={Position.Right}\n        id={id}\n        style={{\n          ...rightHandleStyle,\n          background: color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"right-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst Message = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const status = useStatus(nodeId)\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const errorMsg = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultMessage(nodeId)(state) ?? null\n      : null,\n  )\n\n  const anchorElRef = React.useRef<HTMLButtonElement | null>(null)\n  const [open, setOpen] = React.useState(false)\n  const theme = useTheme()\n\n  if (status === NODE_RESULT_STATUS.ERROR) {\n    return (\n      <>\n        <IconButton\n          ref={anchorElRef}\n          onClick={() => setOpen((prevOpen) => !prevOpen)}\n          size=\"small\"\n          style={{ color: theme.palette.error.main, float: 'right' }}\n        >\n          <ErrorIcon />\n        </IconButton>\n        <Popover\n          open={open}\n          anchorEl={anchorElRef.current}\n          onClose={() => setOpen(false)}\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n        >\n          <div style={{ margin: 8 }}>\n            <FormHelperText error={true}>{errorMsg}</FormHelperText>\n          </div>\n        </Popover>\n      </>\n    )\n  } else if (status === NODE_RESULT_STATUS.SUCCESS) {\n    return <CheckCircleRoundedIcon color=\"success\" sx={{ float: 'right' }} />\n  } else {\n    return null\n  }\n})\n\nfunction algoInfoListEqualtyFn(\n  a: AlgorithmInfo[] | undefined,\n  b: AlgorithmInfo[] | undefined,\n) {\n  if (a != null && b != null) {\n    return (\n      a === b ||\n      (a.length === b.length &&\n        a.every((v, i) => v.type === b[i].type && v.name === b[i].name))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction useStatus(nodeId: string) {\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const status = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultStatus(nodeId)(state)\n      : 'uninitialized',\n  )\n  return status\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { INITIAL_IMAGE_ELEMENT_ID } from 'const/flowchart'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { addInputNode } from '../FlowElement/FlowElementActions'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { setInputNodeFilePath } from './InputNodeActions'\nimport {\n  CsvInputParamType,\n  FILE_TYPE_SET,\n  InputNode,\n  INPUT_NODE_SLICE_NAME,\n} from './InputNodeType'\nimport { isCsvInputNode, isHDF5InputNode } from './InputNodeUtils'\n\nconst initialState: InputNode = {\n  [INITIAL_IMAGE_ELEMENT_ID]: {\n    fileType: FILE_TYPE_SET.IMAGE,\n    param: {},\n  },\n}\n\nexport const inputNodeSlice = createSlice({\n  name: INPUT_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    deleteInputNode(state, action: PayloadAction<string>) {\n      delete state[action.payload]\n    },\n    setCsvInputNodeParam(\n      state,\n      action: PayloadAction<{ nodeId: string; param: CsvInputParamType }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId]\n      if (isCsvInputNode(inputNode)) {\n        inputNode.param = param\n      }\n    },\n    setInputNodeHDF5Path(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n      }>,\n    ) {\n      const { nodeId, path } = action.payload\n      const item = state[nodeId]\n      if (isHDF5InputNode(item)) {\n        item.hdf5Path = path\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(setInputNodeFilePath, (state, action) => {\n        const { nodeId, filePath } = action.payload\n        state[nodeId].selectedFilePath = filePath\n      })\n      .addCase(addInputNode, (state, action) => {\n        const { node, fileType } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          switch (fileType) {\n            case FILE_TYPE_SET.CSV:\n              state[node.id] = {\n                fileType,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.IMAGE:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.HDF5:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.FLUO:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.BEHAVIOR:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.INPUT) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        action.payload.nodeList.filter(isInputNodePostData).forEach((node) => {\n          if (node.data != null) {\n            if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n              newState[node.id] = {\n                fileType: FILE_TYPE_SET.IMAGE,\n                selectedFilePath: node.data.path as string[],\n                param: {},\n              }\n            } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n              newState[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                selectedFilePath: node.data.path as string,\n                param: node.data.param as CsvInputParamType,\n              }\n            } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n              newState[node.id] = {\n                fileType: FILE_TYPE_SET.HDF5,\n                hdf5Path: node.data.hdf5Path,\n                selectedFilePath: node.data.path as string,\n                param: {},\n              }\n            }\n          }\n        })\n        return newState\n      }),\n})\n\nexport const { setCsvInputNodeParam, setInputNodeHDF5Path } =\n  inputNodeSlice.actions\n\nexport default inputNodeSlice.reducer\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  IconButton,\n  DialogTitle,\n  DialogActions,\n  Switch,\n  FormControlLabel,\n  TextField,\n  Box,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeParamSetHeader,\n  selectCsvInputNodeParamSetIndex,\n  selectCsvInputNodeParamTranspose,\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setCsvInputNodeParam } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { PresentationalCsvPlot } from 'components/Visualize/Plot/CsvPlot'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const CsvFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <CsvFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst CsvFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <IconButton\n        aria-label=\"delete\"\n        style={{ color: 'black', position: 'absolute', top: -20, right: -5 }}\n        onClick={onClickDeleteIcon}\n        size=\"large\"\n      >\n        <CloseOutlinedIcon />\n      </IconButton>\n      <FileSelect\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'csv', 'CsvData')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nexport const ParamSettingDialog = React.memo<{\n  nodeId: string\n  filePath: string\n}>(({ nodeId, filePath }) => {\n  const [open, setOpen] = React.useState(false)\n  // OK時のみStoreに反映させるため一時的な値をuseStateで保持しておく。\n  // useStateの初期値はselectorで取得。\n  const [setHeader, setSetHeader] = React.useState(\n    useSelector(selectCsvInputNodeParamSetHeader(nodeId)),\n  )\n  const [setIndex, setSetIndex] = React.useState(\n    useSelector(selectCsvInputNodeParamSetIndex(nodeId)),\n  )\n  const [transpose, setTranspose] = React.useState(\n    useSelector(selectCsvInputNodeParamTranspose(nodeId)),\n  )\n  const dispatch = useDispatch()\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(\n      setCsvInputNodeParam({\n        nodeId,\n        param: { setHeader, setIndex, transpose },\n      }),\n    )\n  }\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>Settings</Button>\n      <Dialog open={open}>\n        <DialogTitle>Csv Setting</DialogTitle>\n        <DialogContent dividers>\n          <Box sx={{ display: 'flex', p: 1, m: 1, alignItems: 'flex-start' }}>\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={transpose}\n                  onChange={(event) => setTranspose(event.target.checked)}\n                />\n              }\n              label=\"Transpose\"\n            />\n            <TextField\n              label=\"header\"\n              sx={{\n                width: 100,\n                margin: (theme) => theme.spacing(0, 1, 0, 1),\n              }}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(event) => {\n                const value = Number(event.target.value)\n                if (value >= 0) {\n                  setSetHeader(value)\n                }\n              }}\n              value={setHeader}\n            />\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={setIndex}\n                  onChange={(event) => setSetIndex(event.target.checked)}\n                />\n              }\n              label=\"Set Index\"\n            />\n          </Box>\n          <Typography variant=\"h6\">Preview</Typography>\n          <CsvPreview\n            filePath={filePath}\n            transpose={transpose}\n            setHeader={setHeader}\n            setIndex={setIndex}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onClickOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst CsvPreview = React.memo<{\n  filePath: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ filePath: path, ...otherProps }) => {\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getCsvData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PresentationalCsvPlot path={path} {...otherProps} />\n  } else {\n    return null\n  }\n})\n","import { RootState } from '../../store'\n\nexport const selectHDF5 = (state: RootState) => {\n  if (state.hdf5 != null) {\n    return state.hdf5\n  } else {\n    return undefined\n  }\n}\n\nexport const selectHDF5Nodes = () => (state: RootState) =>\n  selectHDF5(state)?.tree\n\nexport const selectHDF5IsLoading = () => (state: RootState) =>\n  selectHDF5(state)?.isLoading ?? false\n","export const HDF5_SLICE_NAME = 'hdf5'\n\nexport type HDF5TreeDTO = HDF5DirDTO | HDF5FileDTO\n\nexport interface HDF5DirDTO {\n  isDir: true\n  name: string\n  nodes: HDF5TreeDTO[]\n  path: string\n}\n\nexport interface HDF5FileDTO {\n  isDir: false\n  name: string\n  shape: [number]\n  path: string\n  nbytes: string\n}\n\nexport interface HDF5Tree {\n  isLoading: boolean\n  tree: HDF5TreeDTO[]\n}\n\nexport const HDF5_TYPE_SET = {\n  ALL: 'all',\n} as const\n\nexport type HDF5_TYPE = typeof HDF5_TYPE_SET[keyof typeof HDF5_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\n\nimport { HDF5_SLICE_NAME, HDF5TreeDTO } from './HDF5Type'\n\nexport const getHDF5Tree = createAsyncThunk<HDF5TreeDTO[], { path: string }>(\n  `${HDF5_SLICE_NAME}/getHDF5Tree`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/hdf5/${path}`)\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\n\nimport { alpha, useTheme } from '@mui/material/styles'\nimport Dialog from '@mui/material/Dialog'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport IconButton from '@mui/material/IconButton'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectHDF5InputNodeSelectedFilePath,\n  selectInputNodeDefined,\n  selectInputNodeHDF5Path,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeHDF5Path } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectHDF5IsLoading,\n  selectHDF5Nodes,\n} from 'store/slice/HDF5/HDF5Selectors'\nimport { getHDF5Tree } from 'store/slice/HDF5/HDF5Action'\nimport { HDF5TreeDTO } from 'store/slice/HDF5/HDF5Type'\nimport { Typography } from '@mui/material'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const HDF5FileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <HDF5FileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst HDF5FileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <IconButton\n        aria-label=\"delete\"\n        style={{ color: 'black', position: 'absolute', top: -20, right: -5 }}\n        onClick={onClickDeleteIcon}\n      >\n        <CloseOutlinedIcon />\n      </IconButton>\n      <FileSelect\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.HDF5}\n        filePath={filePath ?? ''}\n      />\n      {filePath !== undefined && <ItemSelect nodeId={nodeId} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'hdf5', 'HDF5Data')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nconst ItemSelect = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [open, setOpen] = React.useState(false)\n\n  const structureFileName = useSelector(selectInputNodeHDF5Path(nodeId))\n\n  return (\n    <>\n      <Button variant=\"outlined\" size=\"small\" onClick={() => setOpen(true)}>\n        {'Structure'}\n      </Button>\n      <Typography className=\"selectFilePath\" variant=\"caption\">\n        {!!structureFileName ? structureFileName : 'No structure is selected.'}\n      </Typography>\n\n      <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\n        <DialogTitle>{'Select File'}</DialogTitle>\n        <Structure nodeId={nodeId} />\n        <DialogActions>\n          <Button onClick={() => setOpen(false)} variant=\"outlined\">\n            cancel\n          </Button>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"primary\"\n            variant=\"outlined\"\n            autoFocus\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst Structure = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const theme = useTheme()\n  return (\n    <DialogContent dividers>\n      <div\n        style={{\n          height: 300,\n          overflow: 'auto',\n          marginBottom: theme.spacing(1),\n          border: '1px solid',\n          padding: theme.spacing(1),\n          borderColor: theme.palette.divider,\n        }}\n      >\n        <FileTreeView nodeId={nodeId} />\n      </div>\n    </DialogContent>\n  )\n})\n\nconst FileTreeView = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [tree, isLoading] = useHDF5Tree(nodeId)\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView>\n        {tree?.map((node) => (\n          <TreeNode node={node} nodeId={nodeId} />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: HDF5TreeDTO\n  nodeId: string\n}>(({ node, nodeId }) => {\n  const dispatch = useDispatch()\n\n  const onClickFile = (path: string) => {\n    dispatch(setInputNodeHDF5Path({ nodeId, path }))\n  }\n\n  if (node.isDir) {\n    // Directory\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={node.name}\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode node={childNode} key={i} nodeId={nodeId} />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    // File\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={node.name + `   (shape=${node.shape}, nbytes=${node.nbytes})`}\n        onClick={() => onClickFile(node.path)}\n      />\n    )\n  }\n})\n\nfunction useHDF5Tree(nodeId: string): [HDF5TreeDTO[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectHDF5Nodes())\n  const isLoading = useSelector(selectHDF5IsLoading())\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  React.useEffect(() => {\n    if (!isLoading && filePath) {\n      dispatch(getHDF5Tree({ path: filePath }))\n    }\n  }, [isLoading, filePath, dispatch])\n  return [tree, isLoading]\n}\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport { IconButton } from '@mui/material'\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const FluoFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <FluoFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst FluoFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n  const returnType = 'FluoData'\n  const fluoColor = useHandleColor(returnType)\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowElementsById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <IconButton\n        aria-label=\"delete\"\n        style={{ color: 'black', position: 'absolute', top: -20, right: -5 }}\n        onClick={onClickDeleteIcon}\n        size=\"large\"\n      >\n        <CloseOutlinedIcon />\n      </IconButton>\n      <FileSelect\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'fluo', returnType)}\n        style={{\n          ...sourceHandleStyle,\n          background: fluoColor,\n        }}\n      />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport { IconButton } from '@mui/material'\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const BehaviorFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <BehaviorFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst BehaviorFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n    const onChangeFilePath = (path: string) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n    const theme = useTheme()\n    const returnType = 'BehaviorData'\n    const behaviorColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowElementsById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '230px',\n          background: selected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <IconButton\n          aria-label=\"delete\"\n          style={{ color: 'black', position: 'absolute', top: -20, right: -5 }}\n          onClick={onClickDeleteIcon}\n          size=\"large\"\n        >\n          <CloseOutlinedIcon />\n        </IconButton>\n        <FileSelect\n          onChangeFilePath={(path) => {\n            if (!Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.CSV}\n          filePath={filePath ?? ''}\n        />\n        {!!filePath && (\n          <ParamSettingDialog nodeId={nodeId} filePath={filePath} />\n        )}\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'behavior', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: behaviorColor,\n          }}\n        />\n      </div>\n    )\n  },\n)\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { NWB_SLICE_NAME } from './NWBType'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'store/utils/param/ParamType'\n\nexport const getNWBParams = createAsyncThunk<ParamDTO, void>(\n  `${NWB_SLICE_NAME}/getNWBParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await axios.get(`${BASE_URL}/nwb`)\n      return response.data\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { ParamMap } from 'store/utils/param/ParamType'\n\nexport const NWB_SLICE_NAME = 'NWB'\n\nexport type NWBType = {\n  params: ParamMap\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getNWBParams } from './NWBAction'\nimport { NWBType, NWB_SLICE_NAME } from './NWBType'\nimport { convertToParamMap, getChildParam } from 'store/utils/param/ParamUtils'\n\nconst initialState: NWBType = {\n  params: {},\n}\n\nexport const nwbSlice = createSlice({\n  name: NWB_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const targetNode = getChildParam(path, state.params)\n      if (targetNode != null) {\n        targetNode.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNWBParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = nwbSlice.actions\n\nexport default nwbSlice.reducer\n","import MuiAccordion, { AccordionProps } from '@mui/material/Accordion'\nimport { styled } from '@mui/material/styles'\n\nexport const Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: '1px solid',\n  borderColor: theme.palette.divider,\n  boxShadow: 'none',\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}))\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport Switch from '@mui/material/Switch'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport Typography from '@mui/material/Typography'\n\nimport { isParamChild } from 'store/utils/param/ParamUtils'\nimport { ParamType } from 'store/utils/param/ParamType'\nimport { RootState } from 'store/store'\nimport { Accordion } from 'components/Accordion'\n\ntype ParamSelectorType = (paramKey: string) => (state: RootState) => ParamType\ntype ParamValueSelectorType = (path: string) => (state: RootState) => unknown\ntype ParamUpdateActionCreatorType = (\n  path: string,\n  newValue: unknown,\n) => AnyAction\n\nexport type CreateParamFormItemComponentProps = {\n  paramSelector: ParamSelectorType\n  paramValueSelector: ParamValueSelectorType\n  paramUpdateActionCreator: ParamUpdateActionCreatorType\n}\n\nexport function createParamFormItemComponent({\n  paramSelector,\n  paramValueSelector,\n  paramUpdateActionCreator,\n}: CreateParamFormItemComponentProps): React.FC<{ paramKey: string }> {\n  function useParamValueUpdate(\n    path: string,\n  ): [unknown, (newValue: unknown) => AnyAction] {\n    const value = useSelector(paramValueSelector(path))\n    const updateParamAction = (newValue: unknown) => {\n      return paramUpdateActionCreator(path, newValue)\n    }\n    return [value, updateParamAction]\n  }\n  const ParamItemForString = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    const onChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(updateParamAction(newValue))\n    }\n    return <TextField value={value} onChange={onChange} multiline />\n  })\n  const ParamItemForNumber = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue =\n          event.target.value === '' ? '' : Number(event.target.value)\n        if (typeof newValue === 'number') {\n          dispatch(updateParamAction(newValue))\n        }\n      }\n      return (\n        <TextField\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={value}\n          onChange={onChange}\n        />\n      )\n    } else {\n      return null\n    }\n  })\n  const ParamItemForBoolean = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'boolean') {\n      const onChange = () => {\n        dispatch(updateParamAction(!value))\n      }\n      return <Switch checked={value} onChange={onChange} />\n    } else {\n      return null\n    }\n  })\n  const ParamItemForValueType = React.memo<ParamChildItemProps>(({ path }) => {\n    const [value] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      return <ParamItemForNumber path={path} />\n    } else if (typeof value === 'string') {\n      return <ParamItemForString path={path} />\n    } else if (typeof value === 'boolean') {\n      return <ParamItemForBoolean path={path} />\n    } else {\n      return <ParamItemForString path={path} />\n    }\n  })\n  const ParamChildItem = React.memo<ParamChildItemProps & { name: string }>(\n    ({ path, name }) => {\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            marginTop: (theme) => theme.spacing(2),\n            marginBottom: (theme) => theme.spacing(2),\n            alignItems: 'center',\n            overflow: 'scroll',\n          }}\n        >\n          <Box\n            style={{ verticalAlign: 'middle' }}\n            sx={{\n              flexGrow: 1,\n              width: '50%',\n            }}\n          >\n            <Typography style={{ overflow: 'scroll' }}>{name}</Typography>\n          </Box>\n          <Box sx={{ width: '50%' }}>\n            <ParamItemForValueType path={path} />\n          </Box>\n        </Box>\n      )\n    },\n  )\n  const ParamItem = React.memo<ParamItemProps>(({ paramKey, param }) => {\n    if (isParamChild(param)) {\n      return <ParamChildItem path={param.path} name={paramKey} />\n    } else {\n      return (\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            {paramKey}\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              {Object.entries(param.children).map(([paramKey, param], i) => (\n                <ParamItem param={param} paramKey={paramKey} />\n              ))}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      )\n    }\n  })\n  return React.memo<{ paramKey: string }>(({ paramKey }) => {\n    const param = useSelector(paramSelector(paramKey)) // 一階層目\n    return <ParamItem paramKey={paramKey} param={param} />\n  })\n}\n\ntype ParamItemProps = {\n  paramKey: string\n  param: ParamType\n}\n\ntype ParamChildItemProps = {\n  path: string\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\nimport { updateParam } from 'store/slice/NWB/NWBSlice'\nimport { getNWBParams } from 'store/slice/NWB/NWBAction'\nimport { toggleNwb } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectNwbParam,\n  selectNwbParamsKeyList,\n  selectNwbParamsValue,\n} from 'store/slice/NWB/NWBSelectors'\nimport { createParamFormItemComponent } from 'components/ParamFormItemCreator'\n\nexport const NWBSettingButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleNwb())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      NWB setting\n    </Button>\n  )\n})\n\nexport const NWBSettingContents = React.memo(() => {\n  const dispatch = useDispatch()\n\n  const paramKeyList = useSelector(selectNwbParamsKeyList, arrayEqualityFn)\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getNWBParams())\n    }\n  })\n\n  return (\n    <div className=\"nwbParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectNwbParam,\n    paramValueSelector: selectNwbParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import { ParamMap } from 'store/utils/param/ParamType'\n\nexport const SNAKEMAKE_SLICE_NAME = 'Snakemake'\n\nexport type SnakemakeType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'store/utils/param/ParamType'\n\nexport const getSnakemakeParams = createAsyncThunk<ParamDTO, void>(\n  `${SNAKEMAKE_SLICE_NAME}/getSnakemakeParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await axios.get(`${BASE_URL}/snakemake`)\n      return response.data\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { convertToParamMap, getChildParam } from 'store/utils/param/ParamUtils'\nimport { getSnakemakeParams } from './SnakemakeAction'\nimport { SnakemakeType, SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nconst initialState: SnakemakeType = {\n  params: {},\n}\n\nexport const SnakemakeSlice = createSlice({\n  name: SNAKEMAKE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const target = getChildParam(path, state.params)\n      if (target != null) {\n        target.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getSnakemakeParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = SnakemakeSlice.actions\n\nexport default SnakemakeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\n\nimport { updateParam } from 'store/slice/Snakemake/SnakemakeSlice'\nimport { getSnakemakeParams } from 'store/slice/Snakemake/SnakemakeAction'\nimport { toggleSnakemake } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport {\n  selectSnakemakeParam,\n  selectSnakemakeParamsKeyList,\n  selectSnakemakeParamsValue,\n} from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from 'components/ParamFormItemCreator'\n\nexport const SnakemakeButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleSnakemake())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      Snakemake\n    </Button>\n  )\n})\n\nexport const SnakemakeContents = React.memo(() => {\n  const dispatch = useDispatch()\n  const paramKeyList = useSelector(\n    selectSnakemakeParamsKeyList,\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getSnakemakeParams())\n    }\n  })\n  return (\n    <div className=\"SnakemakeParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectSnakemakeParam,\n    paramValueSelector: selectSnakemakeParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import axios from 'axios'\n\nimport { BASE_URL } from 'const/API'\n\nimport type { Edge, Node } from 'react-flow-renderer'\nimport type {\n  AlgorithmNodeData,\n  InputNodeData,\n} from 'store/slice/FlowElement/FlowElementType'\nimport type { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport type { ParamMap } from 'store/utils/param/ParamType'\n\nexport type RunPostData = {\n  name: string\n  nodeList: Node<NodePostDataType>[]\n  edgeList: Edge[]\n  nwbParam: ParamMap\n  snakemakeParam: ParamMap\n  forceRunList: { nodeId: string; name: string }[]\n}\n\nexport type NodePostDataType = AlgorithmNodePostData | InputNodePostData\n\nexport interface InputNodePostData extends InputNodeData {\n  path: string | string[]\n  fileType: FILE_TYPE\n  param?: {\n    [key: string]: unknown\n  }\n  hdf5Path?: string\n}\n\nexport interface AlgorithmNodePostData extends AlgorithmNodeData {\n  path: string\n  param: ParamMap\n}\n\nexport async function runApi(data: RunPostData): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run`, data)\n  return response.data\n}\n\nexport async function runByUidApi(\n  uid: string,\n  data: Omit<RunPostData, 'name'>,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${uid}`, data)\n  return response.data\n}\n\nexport type RunResultDTO = {\n  [nodeId: string]: {\n    status: string\n    message: string\n    name: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type OutputPathsDTO = {\n  [outputKey: string]: {\n    path: string\n    type: string\n  }\n}\n\nexport async function runResult(data: {\n  uid: string\n  pendingNodeIdList: string[]\n}): Promise<RunResultDTO> {\n  const { uid, pendingNodeIdList } = data\n  const response = await axios.post(`${BASE_URL}/run/result/${uid}`, {\n    pendingNodeIdList,\n  })\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { ThunkApiConfig } from 'store/store'\nimport { PIPELINE_SLICE_NAME } from './PipelineType'\nimport {\n  runApi,\n  runByUidApi,\n  runResult,\n  RunResultDTO,\n  RunPostData,\n} from 'api/run/Run'\nimport {\n  selectPipelineLatestUid,\n  selectRunResultPendingNodeIdList,\n} from './PipelineSelectors'\n\nexport const run = createAsyncThunk<\n  string,\n  { runPostData: RunPostData },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/run`, async ({ runPostData }, thunkAPI) => {\n  try {\n    const responseData = await runApi(runPostData)\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const runByCurrentUid = createAsyncThunk<\n  string,\n  { runPostData: Omit<RunPostData, 'name'> },\n  ThunkApiConfig\n>(\n  `${PIPELINE_SLICE_NAME}/runByCurrentUid`,\n  async ({ runPostData }, thunkAPI) => {\n    const currentUid = selectPipelineLatestUid(thunkAPI.getState())\n    if (currentUid != null) {\n      try {\n        const responseData = await runByUidApi(currentUid, runPostData)\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    } else {\n      return thunkAPI.rejectWithValue('currentUid dose not exist.')\n    }\n  },\n)\n\nexport const pollRunResult = createAsyncThunk<\n  RunResultDTO,\n  {\n    uid: string\n  },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/pollRunResult`, async ({ uid }, thunkAPI) => {\n  const pendingNodeIdList = selectRunResultPendingNodeIdList(\n    thunkAPI.getState(),\n  )\n  try {\n    const responseData = await runResult({ uid, pendingNodeIdList })\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { pollRunResult, run, runByCurrentUid } from './PipelineActions'\nimport {\n  Pipeline,\n  PIPELINE_SLICE_NAME,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n  RUN_STATUS,\n} from './PipelineType'\n\nimport {\n  getInitialRunResult,\n  convertToRunResult,\n  isNodeResultPending,\n} from './PipelineUtils'\n\nconst initialState: Pipeline = {\n  run: {\n    status: RUN_STATUS.START_UNINITIALIZED,\n  },\n  runBtn: RUN_BTN_OPTIONS.RUN_NEW,\n}\n\nexport const pipelineSlice = createSlice({\n  name: PIPELINE_SLICE_NAME,\n  initialState,\n  reducers: {\n    cancelPipeline(state) {\n      state.run.status = RUN_STATUS.CANCELED\n    },\n    setRunBtnOption: (\n      state,\n      action: PayloadAction<{\n        runBtnOption: RUN_BTN_TYPE\n      }>,\n    ) => {\n      state.runBtn = action.payload.runBtnOption\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.run.status === RUN_STATUS.START_SUCCESS) {\n          state.run.runResult = {\n            ...state.run.runResult, // pendingのNodeResultはそのままでsuccessもしくはerrorのみ上書き\n            ...convertToRunResult(action.payload),\n          }\n          const runResultPendingList = Object.values(\n            state.run.runResult,\n          ).filter(isNodeResultPending)\n          if (runResultPendingList.length === 0) {\n            // 終了\n            state.run.status = RUN_STATUS.FINISHED\n          }\n        }\n      })\n      .addCase(pollRunResult.rejected, (state, action) => {\n        state.run.status = RUN_STATUS.ABORTED\n      })\n      .addCase(importExperimentByUid.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.meta.arg,\n        }\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addMatcher(\n        isAnyOf(run.pending, runByCurrentUid.pending),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_PENDING,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          const uid = action.payload\n          state.run = {\n            uid,\n            status: RUN_STATUS.START_SUCCESS,\n            runResult: getInitialRunResult({ name: '', ...runPostData }),\n            runPostData: { name: '', ...runPostData },\n          }\n          state.currentPipeline = {\n            uid: action.payload,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.rejected, runByCurrentUid.rejected),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_ERROR,\n          }\n        },\n      )\n  },\n})\n\nexport const { cancelPipeline, setRunBtnOption } = pipelineSlice.actions\n\nexport default pipelineSlice.reducer\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\nimport Grow from '@mui/material/Grow'\nimport Paper from '@mui/material/Paper'\nimport Popper from '@mui/material/Popper'\nimport MenuItem from '@mui/material/MenuItem'\nimport MenuList from '@mui/material/MenuList'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nimport { useSnackbar } from 'notistack'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport {\n  RUN_BTN_LABELS,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n} from 'store/slice/Pipeline/PipelineType'\nimport { selectPipelineRunBtn } from 'store/slice/Pipeline/PipelineSelectors'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\n\nexport const RunButtons = React.memo<UseRunPipelineReturnType>((props) => {\n  const {\n    uid,\n    isStartedSuccess,\n    filePathIsUndefined,\n    handleCancelPipeline,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const runBtnOption = useSelector(selectPipelineRunBtn)\n\n  const [dialogOpen, setDialogOpen] = React.useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n  const handleClick = () => {\n    if (!filePathIsUndefined) {\n      if (runBtnOption === RUN_BTN_OPTIONS.RUN_NEW) {\n        setDialogOpen(true)\n      } else {\n        handleRunPipelineByUid()\n      }\n    } else {\n      enqueueSnackbar('please select input file', { variant: 'error' })\n    }\n  }\n  const onClickDialogRun = (name: string) => {\n    handleRunPipeline(name)\n    setDialogOpen(false)\n  }\n  const onClickCancel = () => {\n    handleCancelPipeline()\n  }\n  const [menuOpen, setMenuOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLDivElement>(null)\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    option: RUN_BTN_TYPE,\n  ) => {\n    dispatch(setRunBtnOption({ runBtnOption: option }))\n    setMenuOpen(false)\n  }\n  const handleToggle = () => {\n    setMenuOpen((prevOpen) => !prevOpen)\n  }\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n    setMenuOpen(false)\n  }\n  const uidExists = uid != null\n  return (\n    <>\n      <ButtonGroup\n        sx={{\n          margin: 1,\n        }}\n        variant=\"contained\"\n        ref={anchorRef}\n        disabled={isStartedSuccess}\n      >\n        <Button onClick={handleClick}>{RUN_BTN_LABELS[runBtnOption]}</Button>\n        <Button size=\"small\" onClick={handleToggle}>\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={menuOpen}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList>\n                  {Object.values(RUN_BTN_OPTIONS).map((option) => (\n                    <MenuItem\n                      key={option}\n                      disabled={\n                        !uidExists && option === RUN_BTN_OPTIONS.RUN_ALREADY\n                      }\n                      selected={option === runBtnOption}\n                      onClick={(event) => handleMenuItemClick(event, option)}\n                    >\n                      {RUN_BTN_LABELS[option]}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n      <Button\n        variant=\"outlined\"\n        endIcon={<CloseIcon />}\n        onClick={onClickCancel}\n        sx={{\n          margin: 1,\n          marginRight: 4,\n        }}\n      >\n        Cancel\n      </Button>\n      <RunDialog\n        open={dialogOpen}\n        handleRun={onClickDialogRun}\n        handleClose={() => setDialogOpen(false)}\n      />\n    </>\n  )\n})\n\nconst RunDialog = React.memo<{\n  open: boolean\n  handleRun: (name: string) => void\n  handleClose: () => void\n}>(({ open, handleClose, handleRun }) => {\n  const [name, setName] = React.useState('New flow')\n  const [error, setError] = React.useState<string | null>(null)\n  const onClickRun = () => {\n    if (name !== '') {\n      handleRun(name)\n    } else {\n      setError('name is empty')\n    }\n  }\n  const onChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    if (event.target.value !== '') {\n      setError(null)\n    }\n  }\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Name and run flowchart</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"name\"\n          autoFocus\n          margin=\"dense\"\n          fullWidth\n          variant=\"standard\"\n          onChange={onChangeName}\n          error={error != null}\n          helperText={error}\n          value={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"inherit\" variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button onClick={onClickRun} color=\"primary\" variant=\"outlined\">\n          Run\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","import React from 'react'\nimport Box from '@mui/material/Box'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { NWBSettingButton } from './FlowChart/NWB'\nimport { SnakemakeButton } from './FlowChart/Snakemake'\nimport { RunButtons } from './RunButtons'\n\nexport const ToolBar = React.memo<UseRunPipelineReturnType>((props) => (\n  <Box\n    style={{\n      position: 'absolute',\n      float: 'right',\n      textAlign: 'right',\n      top: -7,\n      right: 10,\n      zIndex: 4,\n      textTransform: 'none',\n    }}\n  >\n    <SnakemakeButton />\n    <NWBSettingButton />\n    <RunButtons {...props} />\n  </Box>\n))\n","import React, { DragEvent, MouseEvent } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  Controls,\n  Elements,\n  Connection,\n  Edge,\n  Node,\n  FlowTransform,\n} from 'react-flow-renderer'\n\nimport 'style/flow.css'\nimport {\n  deleteFlowElements,\n  editFlowElementPositionById,\n  setFlowElements,\n  setFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectFlowElements,\n  selectFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { ImageFileNode } from './FlowChartNode/ImageFileNode'\nimport { AlgorithmNode } from './FlowChartNode/AlgorithmNode'\nimport { CsvFileNode } from './FlowChartNode/CsvFileNode'\nimport { HDF5FileNode } from './FlowChartNode/HDF5FileNode'\nimport { FluoFileNode } from './FlowChartNode/FluoFileNode'\nimport { BehaviorFileNode } from './FlowChartNode/BehaviorFileNode'\nimport { CustomEdge } from './CustomEdge'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { ToolBar } from 'components/ToolBar'\n\nconst componentTypes = {\n  ImageFileNode,\n  CsvFileNode,\n  HDF5FileNode,\n  AlgorithmNode,\n  FluoFileNode,\n  BehaviorFileNode,\n} as const\n\nconst edgeTypes = {\n  buttonedge: CustomEdge,\n} as const\n\nexport const ReactFlowComponent = React.memo<UseRunPipelineReturnType>(\n  (props) => {\n    const flowElements = useSelector(selectFlowElements)\n    const dispatch = useDispatch()\n\n    const onConnect = (params: Connection | Edge) => {\n      dispatch(\n        setFlowElements(\n          addEdge(\n            {\n              ...params,\n              animated: false,\n              style: { width: 5 },\n              type: 'buttonedge',\n            },\n            flowElements,\n          ),\n        ),\n      )\n    }\n\n    const onElementsRemove = (elementsToRemove: Elements) => {\n      dispatch(deleteFlowElements(elementsToRemove))\n    }\n\n    const onDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    const onNodeDragStop = (event: MouseEvent, node: Node) => {\n      dispatch(\n        editFlowElementPositionById({\n          nodeId: node.id,\n          coord: { x: node.position.x, y: node.position.y },\n        }),\n      )\n    }\n\n    const flowPosition = useSelector(selectFlowPosition)\n\n    const onMoveEnd = (event: FlowTransform | undefined) => {\n      if (event !== undefined) {\n        dispatch(setFlowPosition(event))\n      }\n    }\n\n    return (\n      <div className=\"flow\">\n        <ReactFlowProvider>\n          <div className=\"reactflow-wrapper\">\n            <ReactFlow\n              elements={flowElements}\n              onElementsRemove={onElementsRemove}\n              onConnect={onConnect}\n              onDragOver={onDragOver}\n              onNodeDragStop={onNodeDragStop}\n              nodeTypes={componentTypes}\n              edgeTypes={edgeTypes}\n              defaultPosition={[flowPosition.x, flowPosition.y]}\n              defaultZoom={flowPosition.zoom}\n              onMoveEnd={onMoveEnd}\n            >\n              <ToolBar {...props} />\n              <Controls />\n            </ReactFlow>\n          </div>\n        </ReactFlowProvider>\n      </div>\n    )\n  },\n)\n","import { useDispatch } from 'react-redux'\nimport {\n  EdgeProps,\n  getBezierPath,\n  getMarkerEnd,\n  getEdgeCenter,\n} from 'react-flow-renderer'\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined'\nimport { deleteFlowElementsById } from 'store/slice/FlowElement/FlowElementSlice'\n\nconst foreignObjectSize = 40\n\nexport const CustomEdge: React.FC<EdgeProps> = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  arrowHeadType,\n  markerEndId,\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  })\n  const markerEnd = getMarkerEnd(arrowHeadType, markerEndId)\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  })\n\n  const dispatch = useDispatch()\n\n  const onEdgeClick = () => {\n    dispatch(deleteFlowElementsById(id))\n  }\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <foreignObject\n        width={foreignObjectSize}\n        height={foreignObjectSize}\n        x={edgeCenterX - foreignObjectSize / 2}\n        y={edgeCenterY - foreignObjectSize / 2}\n        className=\"edgebutton-foreignobject\"\n      >\n        <CloseOutlinedIcon onClick={onEdgeClick} />\n      </foreignObject>\n    </>\n  )\n}\n","import { RootState } from 'store/store'\n\nexport const selectRightDrawerIsOpen = (state: RootState) =>\n  state.rightDrawer.open\n\nexport const selectRightDrawerMode = (state: RootState) =>\n  state.rightDrawer.mode\n\nexport const selectRightDrawerCurrentNodeId = (state: RootState) =>\n  state.rightDrawer.currendNodeId\n","import { ParamMap } from 'store/utils/param/ParamType'\n\nexport const ALGORITHM_NODE_SLICE_NAME = 'algorithmNode'\n\nexport type AlgorithmNode = {\n  [nodeId: string]: AlgrithmNodeType\n}\n\ntype AlgrithmNodeType = {\n  functionPath: string\n  name: string\n  params: ParamMap | null\n  isUpdated: boolean\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios'\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'store/utils/param/ParamType'\nimport { ALGORITHM_NODE_SLICE_NAME } from './AlgorithmNodeType'\n\nexport const getAlgoParams = createAsyncThunk<\n  ParamDTO,\n  { nodeId: string; algoName: string }\n>(\n  `${ALGORITHM_NODE_SLICE_NAME}/getAlgoParams`,\n  async ({ algoName }, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await axios.get(`${BASE_URL}/params/${algoName}`)\n      return response.data\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\n\nimport { convertToParamMap, getChildParam } from 'store/utils/param/ParamUtils'\nimport {\n  deleteFlowElements,\n  deleteFlowElementsById,\n} from '../FlowElement/FlowElementSlice'\nimport { isNodeData } from '../FlowElement/FlowElementUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { importExperimentByUid } from '../Experiments/ExperimentsActions'\nimport { getAlgoParams } from './AlgorithmNodeActions'\nimport { ALGORITHM_NODE_SLICE_NAME, AlgorithmNode } from './AlgorithmNodeType'\nimport { isAlgorithmNodePostData } from 'api/run/RunUtils'\nimport { run, runByCurrentUid } from '../Pipeline/PipelineActions'\nimport { addAlgorithmNode } from '../FlowElement/FlowElementActions'\n\nconst initialState: AlgorithmNode = {}\n\nexport const algorithmNodeSlice = createSlice({\n  name: ALGORITHM_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        // paramKey: string\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { nodeId, path, newValue } = action.payload\n      const param = state[nodeId].params\n      if (param != null) {\n        const target = getChildParam(path, param)\n        if (target != null) {\n          target.value = newValue\n          state[nodeId].isUpdated = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAlgoParams.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        state[nodeId].params = convertToParamMap(action.payload)\n      })\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        const { node, functionPath, name } = action.meta.arg\n        const params = action.payload\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          state[node.id] = {\n            functionPath,\n            name,\n            params: convertToParamMap(params),\n            isUpdated: false,\n          }\n        }\n      })\n      .addCase(deleteFlowElements, (state, action) => {\n        action.payload\n          .filter((node) => isNodeData(node))\n          .forEach((node) => {\n            if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n              delete state[node.id]\n            }\n          })\n      })\n      .addCase(deleteFlowElementsById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(importExperimentByUid.fulfilled, (_, action) => {\n        const newState: AlgorithmNode = {}\n        action.payload.nodeList\n          .filter(isAlgorithmNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              newState[node.id] = {\n                name: node.data.label,\n                functionPath: node.data.path,\n                params: node.data.param,\n                isUpdated: false,\n              }\n            }\n          })\n        return newState\n      })\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          runPostData.nodeList\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              state[node.id].isUpdated = false\n            })\n        },\n      )\n  },\n})\n\nexport const { updateParam } = algorithmNodeSlice.actions\nexport default algorithmNodeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Typography from '@mui/material/Typography'\n\nimport {\n  selectAlgorithmName,\n  selectAlgorithmParamsExit,\n  selectAlgorithmParamsKeyList,\n  selectAlgorithmParamsValue,\n  selectAlgorithmParam,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { updateParam } from 'store/slice/AlgorithmNode/AlgorithmNodeSlice'\nimport { getAlgoParams } from 'store/slice/AlgorithmNode/AlgorithmNodeActions'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from '../ParamFormItemCreator'\nimport { ParamFormContext } from './RightDrawer'\n\nexport const AlgorithmParamForm = React.memo(() => {\n  const nodeId = React.useContext(ParamFormContext)\n  const dispatch = useDispatch()\n  const algoName = useSelector(selectAlgorithmName(nodeId))\n  const algoParamIsLoaded = useSelector(selectAlgorithmParamsExit(nodeId))\n  const paramKeyList = useSelector(\n    selectAlgorithmParamsKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (!algoParamIsLoaded) {\n      dispatch(getAlgoParams({ nodeId, algoName }))\n    }\n  }, [dispatch, nodeId, algoName, algoParamIsLoaded])\n  return (\n    <div style={{ padding: 8 }}>\n      <Typography variant=\"h5\">{algoName}</Typography>\n      <div style={{ paddingLeft: 8 }}>\n        {paramKeyList.map((paramKey) => (\n          <ParamItem key={paramKey} paramKey={paramKey} />\n        ))}\n      </div>\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const nodeId = React.useContext(ParamFormContext)\n  const Component = createParamFormItemComponent({\n    paramSelector: (paramKey) => selectAlgorithmParam(nodeId, paramKey),\n    paramValueSelector: (path) => selectAlgorithmParamsValue(nodeId, path),\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ nodeId, path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Divider from '@mui/material/Divider'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport Box from '@mui/material/Box'\nimport {\n  selectRightDrawerCurrentNodeId,\n  selectRightDrawerIsOpen,\n  selectRightDrawerMode,\n} from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport {\n  closeRightDrawer,\n  RIGHT_DRAWER_MODE,\n} from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { NWBSettingContents } from './NWB'\nimport { RootState } from 'store/store'\nimport { AlgorithmParamForm } from './AlgorithmParamForm'\nimport { SnakemakeContents } from './Snakemake'\n\nconst RightDrawer: React.FC = () => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(closeRightDrawer())\n  const title = useSelector((state: RootState) => {\n    const mode = selectRightDrawerMode(state)\n    switch (mode) {\n      case RIGHT_DRAWER_MODE.NWB:\n        return 'NWB Setting'\n      case RIGHT_DRAWER_MODE.PARAM_FORM:\n        return 'Param From'\n      case RIGHT_DRAWER_MODE.SNAKEMAKE:\n        return 'Snakemake'\n      default:\n        return 'none'\n    }\n  })\n  return (\n    <StyledDrawer open={open} anchor=\"right\" variant=\"persistent\">\n      <Toolbar />\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton color=\"inherit\" onClick={onClick} size=\"large\">\n          <ChevronRightIcon />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Box>\n      <Divider />\n      <MainContents>\n        <Contents />\n      </MainContents>\n    </StyledDrawer>\n  )\n}\n\nconst Contents: React.FC = () => {\n  const mode = useSelector(selectRightDrawerMode)\n  switch (mode) {\n    case RIGHT_DRAWER_MODE.NWB:\n      return <NWBSettingContents />\n    case RIGHT_DRAWER_MODE.PARAM_FORM:\n      return <ParamFormConetent />\n    case RIGHT_DRAWER_MODE.SNAKEMAKE:\n      return <SnakemakeContents />\n    default:\n      return null\n  }\n}\n\n/**\n * nodeId\n */\nexport const ParamFormContext = React.createContext<string>('')\n\nconst ParamFormConetent: React.FC = () => {\n  const nodeId = useSelector(selectRightDrawerCurrentNodeId)\n  if (nodeId != null) {\n    return (\n      <ParamFormContext.Provider value={nodeId}>\n        <AlgorithmParamForm />\n      </ParamFormContext.Provider>\n    )\n  } else {\n    return null\n  }\n}\n\nexport const rightDrawerWidth = 320\n\nconst StyledDrawer = styled(Drawer)({\n  width: rightDrawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: rightDrawerWidth,\n  },\n})\n\nconst MainContents = styled('main')({\n  height: '100%',\n})\n\nexport default RightDrawer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport { default as MuiToolbar } from '@mui/material/Toolbar'\nimport { styled } from '@mui/material/styles'\nimport { AlgorithmTreeView } from './TreeView'\nimport { ReactFlowComponent } from './ReactFlowComponent'\nimport RightDrawer, { rightDrawerWidth } from './RightDrawer'\nimport { selectRightDrawerIsOpen } from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\n\nconst FlowChart = React.memo<UseRunPipelineReturnType>((props) => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  return (\n    <RootDiv>\n      <StyledDrawer variant=\"permanent\">\n        <MuiToolbar />\n        <DrawerContents>\n          <AlgorithmTreeView />\n        </DrawerContents>\n      </StyledDrawer>\n\n      <MainContents open={open}>\n        <MuiToolbar />\n        <ReactFlowComponent {...props} />\n      </MainContents>\n      <RightDrawer />\n    </RootDiv>\n  )\n})\n\nexport const drawerWidth = 240\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n})\n\nconst StyledDrawer = styled(Drawer)({\n  width: drawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n})\n\nconst DrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')<{ open: boolean }>(\n  ({ theme }) => ({\n    flexDirection: 'column',\n    flexGrow: 1,\n    height: '90vh',\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -rightDrawerWidth,\n  }),\n  ({ open, theme }) =>\n    open\n      ? {\n          transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n          marginRight: 0,\n        }\n      : undefined,\n)\n\nexport default FlowChart\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport AddIcon from '@mui/icons-material/Add'\nimport Button from '@mui/material/Button'\nimport { pushInitialItemToNewRow } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const VisualizeItemAddButton: React.FC = () => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(pushInitialItemToNewRow())\n  }\n  return (\n    <StyledPaper elevation={1} variant=\"outlined\">\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height=\"100%\"\n      >\n        <StyledButton onClick={onClick}>\n          <AddIcon fontSize=\"large\" color=\"primary\" />\n        </StyledButton>\n      </Box>\n    </StyledPaper>\n  )\n}\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  width: 260,\n  height: 255,\n  border: 'dashed',\n  borderWidth: 2,\n  borderColor: theme.palette.divider,\n  margin: theme.spacing(1),\n}))\n\nconst StyledButton = styled(Button)({\n  width: '100%',\n  height: '100%',\n})\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport Menu from '@mui/material/Menu'\nimport MenuItem from '@mui/material/MenuItem'\nimport ListItemText from '@mui/material/ListItemText'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport AddIcon from '@mui/icons-material/Add'\nimport {\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { insertInitialItemToNextColumn } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { deleteDisplayItem } from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const DisplayDataItemLayoutMenuIcon = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onClickDeleteMenu = () => {\n    // visualize Itemで同じpathのデータ個数を調べて、1だったら、displayも削除\n    dispatch(\n      deleteDisplayItem(\n        isSingleData && filePath != null && dataType != null\n          ? { itemId, deleteData: true, filePath, dataType }\n          : { itemId, deleteData: false },\n      ),\n    )\n  }\n  const onClickInsertMenu = () => {\n    dispatch(insertInitialItemToNextColumn(itemId))\n  }\n  return (\n    <PresentationalLayoutMenuIcon\n      onClickDeleteMenu={onClickDeleteMenu}\n      onClickInsertMenu={onClickInsertMenu}\n    />\n  )\n})\n\nconst PresentationalLayoutMenuIcon = React.memo<{\n  onClickDeleteMenu: () => void\n  onClickInsertMenu: () => void\n}>(({ onClickDeleteMenu, onClickInsertMenu }) => {\n  const [open, setOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLButtonElement>(null)\n  const onClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.stopPropagation() // 親divのonClickを反応させないため\n    setOpen((prevOpen) => !prevOpen)\n  }\n  const onClose = () => {\n    setOpen(false)\n  }\n  const onClickDeleteMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickDeleteMenu()\n    setOpen(false)\n  }\n  const onClickInsertMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickInsertMenu()\n    setOpen(false)\n  }\n  return (\n    <>\n      <IconButton ref={anchorRef} onClick={onClick}>\n        <MoreVertIcon />\n      </IconButton>\n      <Menu anchorEl={anchorRef.current} open={open} onClose={onClose}>\n        <MenuItem onClick={onClickInsertMenuFn}>\n          <ListItemIcon>\n            <AddIcon />\n          </ListItemIcon>\n          <ListItemText>Insert into next column</ListItemText>\n        </MenuItem>\n        <MenuItem onClick={onClickDeleteMenuFn}>\n          <ListItemIcon>\n            <DeleteIcon />\n          </ListItemIcon>\n          <ListItemText>Delete</ListItemText>\n        </MenuItem>\n      </Menu>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport FormControl from '@mui/material/FormControl'\nimport MenuItem from '@mui/material/MenuItem'\nimport InputLabel from '@mui/material/InputLabel'\nimport FormHelperText from '@mui/material/FormHelperText'\nimport Select from '@mui/material/Select'\nimport ListSubheader from '@mui/material/ListSubheader'\n\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { RootState } from 'store/store'\nimport { selectInputNode } from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { selectNodeLabelById } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultSuccessList,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { getFileName } from 'store/slice/FlowElement/FlowElementUtils'\n\nexport const FilePathSelect: React.FC<{\n  dataType?: DATA_TYPE\n  selectedNodeId: string | null\n  selectedFilePath: string | null\n  onSelect: (nodeId: string, filePath: string, dataType: DATA_TYPE) => void\n  label?: string\n}> = ({ dataType, selectedNodeId, selectedFilePath, onSelect, label }) => {\n  const inputNodeFilePathInfoList = useSelector(\n    (state: RootState) => {\n      const inputNodes = selectInputNode(state)\n      return Object.entries(inputNodes)\n        .map(([nodeId, inputNode]) => ({\n          nodeId,\n          filePath: inputNode.selectedFilePath,\n          fileType: inputNode.fileType,\n          dataType: toDataTypeFromFileType(inputNode.fileType),\n          nodeName: selectNodeLabelById(nodeId)(state),\n        }))\n        .filter(({ filePath }) => filePath != null)\n        .filter(({ dataType: inputNodeDataType }) =>\n          dataType != null ? inputNodeDataType === dataType : true,\n        )\n    },\n    // todo 比較関数\n  )\n\n  const latestUid = useSelector(selectPipelineLatestUid)\n\n  const algorithmNodeOutputPathInfoList = useSelector((state: RootState) => {\n    if (latestUid != null) {\n      const runResult = selectPipelineNodeResultSuccessList(state)\n      return runResult.map(({ nodeId, nodeResult }) => {\n        return {\n          nodeId,\n          nodeName: selectNodeLabelById(nodeId)(state),\n          paths: Object.entries(nodeResult.outputPaths)\n            .map(([outputKey, value]) => {\n              return {\n                outputKey,\n                filePath: value.path,\n                type: value.type,\n              }\n            })\n            .filter(({ type }) =>\n              dataType != null ? type === dataType : true,\n            ),\n        }\n      })\n    } else {\n      return []\n    }\n  })\n\n  const [open, setOpen] = React.useState(false)\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const onSelectHandle = (\n    nodeId: string,\n    filePath: string,\n    dataType: DATA_TYPE,\n  ) => {\n    onSelect(nodeId, filePath, dataType)\n    handleClose()\n  }\n\n  const menuItemList: React.ReactElement[] = []\n  inputNodeFilePathInfoList.forEach((pathInfo) => {\n    const filePath = pathInfo.filePath\n    if (Array.isArray(filePath)) {\n      filePath.forEach((pathElm) => {\n        menuItemList.push(\n          <MenuItem\n            value={`${pathInfo.nodeId}/${pathElm}`}\n            onClick={() =>\n              onSelectHandle(pathInfo.nodeId, pathElm ?? '', pathInfo.dataType)\n            }\n            key={pathInfo.nodeId}\n          >\n            {getFileName(pathElm)}\n          </MenuItem>,\n        )\n      })\n    } else {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${pathInfo.filePath}`}\n          onClick={() =>\n            onSelectHandle(pathInfo.nodeId, filePath ?? '', pathInfo.dataType)\n          }\n          key={pathInfo.nodeId}\n        >\n          {pathInfo.nodeName}\n        </MenuItem>,\n      )\n    }\n  })\n  algorithmNodeOutputPathInfoList.forEach((pathInfo) => {\n    menuItemList.push(<ListSubheader>{pathInfo.nodeName}</ListSubheader>)\n    pathInfo.paths.forEach((outputPath, i) => {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${outputPath.filePath}`}\n          onClick={() =>\n            onSelectHandle(\n              pathInfo.nodeId,\n              outputPath.filePath,\n              outputPath.type,\n            )\n          }\n          key={`${pathInfo.nodeId}/${outputPath.filePath}`}\n        >\n          {outputPath.outputKey}\n        </MenuItem>,\n      )\n    })\n  })\n\n  return (\n    <FormControl style={{ minWidth: 150, maxWidth: 220 }} variant=\"standard\">\n      <InputLabel>{!!label ? label : 'Select Item'}</InputLabel>\n      <Select\n        value={`${selectedNodeId}/${selectedFilePath}`}\n        open={open}\n        onClose={handleClose}\n        onOpen={handleOpen}\n      >\n        {menuItemList}\n      </Select>\n      {inputNodeFilePathInfoList.length +\n        algorithmNodeOutputPathInfoList.length ===\n        0 && <FormHelperText error={true}>no data</FormHelperText>}\n    </FormControl>\n  )\n}\n\nfunction toDataTypeFromFileType(fileType: FILE_TYPE) {\n  switch (fileType) {\n    case FILE_TYPE_SET.IMAGE:\n      return DATA_TYPE_SET.IMAGE\n    case FILE_TYPE_SET.CSV:\n      return DATA_TYPE_SET.CSV\n    case FILE_TYPE_SET.HDF5:\n      return DATA_TYPE_SET.HDF5\n    case FILE_TYPE_SET.FLUO:\n      return DATA_TYPE_SET.FLUO\n    case FILE_TYPE_SET.BEHAVIOR:\n      return DATA_TYPE_SET.BEHAVIOR\n  }\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useTheme } from '@mui/material/styles'\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport FormControl from '@mui/material/FormControl'\n\nimport { arrayEqualityFn, twoDimarrayEqualityFn } from 'utils/EqualityUtils'\n\nimport {\n  selectDisplayDataIsSingle,\n  selectImageItemFilePath,\n  selectSelectedVisualizeItemId,\n  selectTimeSeriesItemRefImageItemId,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n  selectVisualizeImageItemIdList,\n  selectVisualizeItemHeight,\n  selectVisualizeItemLayout,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nimport { VisualizeItemAddButton } from './VisualizeItemAddButton'\nimport { DisplayDataItemLayoutMenuIcon } from './VisualizeItemLayoutMenuIcon'\nimport { DisplayDataItem } from './DisplayDataItem'\nimport {\n  selectItem,\n  setItemSize,\n  setTimeSeriesRefImageItemId,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { RootState } from 'store/store'\nimport { FilePathSelect } from './FilePathSelect'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const FlexItemList: React.FC = () => {\n  const layout = useSelector(selectVisualizeItemLayout, twoDimarrayEqualityFn)\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"column\" p={1} m={1}>\n      {layout.map((row) => (\n        <Box display=\"flex\" flexDirection=\"row\">\n          {row.map((itemId) => (\n            <Item itemId={itemId} key={itemId} />\n          ))}\n        </Box>\n      ))}\n      <VisualizeItemAddButton />\n    </Box>\n  )\n}\n\nconst Item = React.memo<{ itemId: number }>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(selectItem(itemId))\n  }\n  const isSelected = useSelector(\n    (state: RootState) => selectSelectedVisualizeItemId(state) === itemId,\n  )\n  const theme = useTheme()\n\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const itemDataType = useSelector(selectVisualizeDataType(itemId))\n\n  const [resizeTrigger, setResizeTrigger] = React.useState(false)\n  const [resizeCoord, setResizeCoord] = React.useState<{\n    x: number\n    y: number\n  }>({ x: 0, y: 0 })\n\n  const onMouseDown = (event: React.MouseEvent<HTMLInputElement>) => {\n    setResizeTrigger(true)\n    setResizeCoord({ x: event.screenX, y: event.screenY })\n  }\n\n  const onMouseUp = () => {\n    setResizeTrigger(false)\n  }\n\n  const onMouseLeave = () => {\n    setResizeTrigger(false)\n  }\n\n  const onMouseMove = (event: React.MouseEvent<HTMLInputElement>) => {\n    if (resizeTrigger) {\n      const newWidth = width + (event.screenX - resizeCoord.x)\n      const newHeight = height + (event.screenY - resizeCoord.y)\n      dispatch(\n        setItemSize({\n          itemId,\n          width: newWidth,\n          height: newHeight,\n        }),\n      )\n      setResizeCoord({ x: event.screenX, y: event.screenY })\n    }\n  }\n\n  return (\n    <Paper\n      variant=\"outlined\"\n      key={itemId}\n      style={{\n        width: `${width}px`,\n        height: `${height}px`,\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        cursor: resizeTrigger ? 'nwse-resize' : 'pointer',\n        borderColor: isSelected ? theme.palette.primary.light : undefined,\n      }}\n      onClick={onClick}\n      onMouseDown={onMouseDown}\n      onMouseLeave={onMouseLeave}\n      onMouseUp={onMouseUp}\n      onMouseMove={onMouseMove}\n    >\n      <Box display=\"flex\" justifyContent=\"flex-end\">\n        <Box flexGrow={1}>\n          <>ID: {itemId}</>\n          <FilePathSelectItem itemId={itemId} />\n        </Box>\n        {itemDataType === DATA_TYPE_SET.TIME_SERIES && (\n          <Box flexGrow={1}>\n            <RefImageItemIdSelect itemId={itemId} />\n          </Box>\n        )}\n        <Box>\n          <DisplayDataItemLayoutMenuIcon itemId={itemId} />\n        </Box>\n      </Box>\n      <DisplayDataItem itemId={itemId} />\n    </Paper>\n  )\n})\n\nconst FilePathSelectItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const selectedNodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const selectedFilePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFilePath = (\n    nodeId: string,\n    newFilePath: string,\n    newDataType: DATA_TYPE,\n  ) => {\n    const basePayload = {\n      itemId,\n      nodeId,\n      filePath: newFilePath,\n      dataType: newDataType,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && selectedFilePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: dataType,\n              prevFilePath: selectedFilePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n\n  return (\n    <FilePathSelect\n      selectedNodeId={selectedNodeId}\n      selectedFilePath={selectedFilePath}\n      onSelect={onSelectFilePath}\n    />\n  )\n})\n\nconst RefImageItemIdSelect = React.memo<{ itemId: number }>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const itemIdList = useSelector(\n    selectVisualizeImageItemIdList,\n    arrayEqualityFn,\n  )\n  const onChangeRefImageItemId = (event: SelectChangeEvent) => {\n    const value = Number(event.target.value)\n    dispatch(\n      setTimeSeriesRefImageItemId({\n        itemId,\n        refImageItemId: isNaN(value) ? null : value,\n      }),\n    )\n  }\n  const selectedRefImageItemId = useSelector(\n    selectTimeSeriesItemRefImageItemId(itemId),\n  )\n  return (\n    <FormControl fullWidth variant=\"standard\">\n      <InputLabel>ref image</InputLabel>\n      <Select\n        value={String(selectedRefImageItemId)}\n        onChange={onChangeRefImageItemId}\n      >\n        <MenuItem value={undefined}>{'None'}</MenuItem>\n        {itemIdList.map((value) => (\n          <MenuItem value={value}>{value}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n","import React, { useState } from 'react'\n\nimport { GradientPickerPopover } from 'react-linear-gradient-picker'\nimport { SketchPicker } from 'react-color'\nimport { PALETTE_COLOR_SHAPE_TYPE } from 'react-linear-gradient-picker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const GradientColorPicker = React.memo<{\n  colors: { rgb: string; offset: string }[]\n  dispatchSetColor: (colorCode: ColorType[]) => void\n}>(({ colors, dispatchSetColor }) => {\n  const palette: PALETTE_COLOR_SHAPE_TYPE[] = colors.map((value) => {\n    return {\n      offset: value.offset,\n      color: value.rgb,\n    }\n  })\n\n  const onPaletteChange = (palette: PALETTE_COLOR_SHAPE_TYPE[]) => {\n    const colorCode = palette.map((value) => {\n      const color = value.color\n      const rgbStr = color.replace(/[^0-9,]/g, '').split(',')\n      const rgb = {\n        r: Number(rgbStr[0]),\n        g: Number(rgbStr[1]),\n        b: Number(rgbStr[2]),\n      }\n      return {\n        rgb: `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`,\n        offset: value.offset,\n      }\n    })\n    dispatchSetColor(colorCode)\n  }\n\n  const [open, setOpen] = useState(false)\n\n  return (\n    <GradientPickerPopover\n      open={open}\n      setOpen={() => setOpen(!open)}\n      // showAnglePicker={true}\n      width={150}\n      maxStops={10}\n      paletteHeight={25}\n      palette={palette}\n      onPaletteChange={onPaletteChange}\n      flatStyle={true}\n    >\n      <WrappedSketchPicker />\n    </GradientPickerPopover>\n  )\n})\n\ntype WrapperPropTypes = {\n  onSelect?: (color: string, opacity?: number) => void\n  color?: string\n}\n\nconst WrappedSketchPicker: React.FC<WrapperPropTypes> = ({\n  onSelect,\n  color,\n}) => {\n  return (\n    <SketchPicker\n      color={color}\n      width=\"150px\"\n      // styles={{width: \"10px\"}}\n      onChange={(c) => {\n        const { r, g, b, a } = c.rgb\n        onSelect?.(`rgb(${r}, ${g}, ${b})`, a)\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Switch from '@mui/material/Switch'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\n\nimport {\n  selectImageItemShowGrid,\n  selectImageItemShowLine,\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectRoiItemNodeId,\n  selectRoiItemFilePath,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemFilePath,\n  selectDisplayDataIsSingle,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setImageItemShowGrid,\n  setImageItemShowLine,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowScale,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemColors,\n  setRoiItemFilePath,\n  resetImageActiveIndex,\n  setImageItemRoiAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\nimport { FileSelectImple } from 'components/FlowChart/FlowChartNode/FileSelect'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'store/slice/FilesTree/FilesTreeType'\nimport { Box, TextField } from '@mui/material'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { FilePathSelect } from '../FilePathSelect'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\nimport Button from '@mui/material/Button'\nimport { getImageData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const ImageItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectImageFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.IMAGE,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n\n  const { onUploadFile } = useFileUploader(FILE_TYPE_SET.IMAGE)\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  const colors = useSelector(selectImageItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setImageItemColors({ itemId, colors: colorCode }))\n  }\n\n  const roiItemNodeId = useSelector(selectRoiItemNodeId(itemId))\n  const roiItemFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const onSelectRoiFilePath = (nodeId: string, filePath: string) => {\n    dispatch(setRoiItemFilePath({ itemId, nodeId, filePath }))\n  }\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectImageFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.IMAGE}\n        selectButtonLabel=\"Select Image\"\n      />\n      <StartEndIndex />\n      <Showticklabels />\n      <ShowLine />\n      <ShowGrid />\n      <ShowScale />\n      <Zsmooth />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <div>\n        <h3>Roi Setting</h3>\n        <FilePathSelect\n          selectedFilePath={roiItemFilePath}\n          selectedNodeId={roiItemNodeId}\n          onSelect={onSelectRoiFilePath}\n          dataType={DATA_TYPE_SET.ROI}\n          label={'Select Roi'}\n        />\n        <RoiAlpha />\n      </div>\n    </div>\n  )\n}\n\nconst Showticklabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setImageItemShowticklabels({ itemId, showticklabels: !showticklabels }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"Showticklabels\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"ShowLine\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"ShowGrid\"\n    />\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"ShowScale\"\n    />\n  )\n}\n\nconst Zsmooth: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string | boolean>) => {\n    dispatch(setImageItemZsmooth({ itemId, zsmooth: event.target.value }))\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>smooth</InputLabel>\n      <Select label=\"smooth\" value={zsmooth} onChange={handleChange}>\n        <MenuItem value={'best'}>best</MenuItem>\n        <MenuItem value={'fast'}>fast</MenuItem>\n        <MenuItem value={'false'}>False</MenuItem>\n      </Select>\n    </FormControl>\n  )\n}\n\nconst RoiAlpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const inputError = !(roiAlpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemRoiAlpha({ itemId, roiAlpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={roiAlpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n      alpha\n    </>\n  )\n}\n\nconst StartEndIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const [startIndex, onChangeStartIndex] = React.useState(\n    useSelector(selectImageItemStartIndex(itemId)),\n  )\n  const [endIndex, onChangeEndIndex] = React.useState(\n    useSelector(selectImageItemEndIndex(itemId)),\n  )\n  const inputError = !(startIndex > 0)\n  const dispatch = useDispatch()\n  const onStartChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeStartIndex(newValue)\n    }\n  }\n  const onEndChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeEndIndex(newValue)\n    }\n  }\n\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n  const onClickButton = () => {\n    if (startIndex > 0) {\n      dispatch(setImageItemStartIndex({ itemId, startIndex }))\n      dispatch(setImageItemEndIndex({ itemId, endIndex }))\n      dispatch(resetImageActiveIndex({ itemId, startIndex, endIndex }))\n      if (filePath !== null) {\n        dispatch(\n          getImageData({\n            path: filePath,\n            startIndex: startIndex ?? 1,\n            endIndex: endIndex ?? 10,\n          }),\n        )\n      }\n    }\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>\n      <TextField\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 1,\n          min: 0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onStartChange}\n        value={startIndex}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n      ~\n      <TextField\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onEndChange}\n        value={endIndex}\n      />\n      <Button\n        size=\"small\"\n        className=\"ctrl_btn\"\n        variant=\"contained\"\n        onClick={onClickButton}\n      >\n        load\n      </Button>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FileSelectImple } from 'components/FlowChart/FlowChartNode/FileSelect'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'store/slice/FilesTree/FilesTreeType'\nimport { FormControlLabel, Switch, TextField } from '@mui/material'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const CsvItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const dispatch = useDispatch()\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.CSV,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n  const { onUploadFile } = useFileUploader(FILE_TYPE_SET.CSV)\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.CSV}\n        selectButtonLabel=\"Select CSV\"\n      />\n      <Transpose />\n      <SetHeader />\n      <SetIndex />\n    </div>\n  )\n}\n\nconst Transpose: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemTranspose({ itemId, transpose: !transpose }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={transpose} onChange={toggleChecked} />}\n      label=\"transpose\"\n    />\n  )\n}\n\nconst SetHeader: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeSetHeader = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value === '' ? null : Number(event.target.value)\n    if (newValue === null || newValue >= 0) {\n      dispatch(setCsvItemSetHeader({ itemId, setHeader: newValue }))\n    }\n  }\n\n  return (\n    <>\n      <TextField\n        label=\"header\"\n        sx={{\n          width: 100,\n          margin: (theme) => theme.spacing(0, 1, 0, 1),\n        }}\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeSetHeader}\n        value={setHeader}\n      />\n    </>\n  )\n}\n\nconst SetIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemSetIndex({ itemId, setIndex: !setIndex }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={setIndex} onChange={toggleChecked} />}\n      label=\"setIndex\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FormControlLabel, Switch } from '@mui/material'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setHeatMapItemColors,\n  setHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const HeatmapItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const colors = useSelector(selectHeatMapItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setHeatMapItemColors({ itemId, colors: colorCode }))\n  }\n  return (\n    <>\n      <ShowScale />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n    </>\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setHeatMapItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"showscale\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FormControlLabel, Switch, TextField } from '@mui/material'\nimport Box from '@mui/material/Box'\nimport Checkbox from '@mui/material/Checkbox'\nimport {\n  selectTimeSeriesItemCheckedList,\n  selectTimeSeriesItemDisplayNumbers,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectTimeSeriesItemFilePath,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  setTimeSeriesItemCheckedList,\n  setTimeSeriesItemDisplayNumbers,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemZeroLine,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  getTimeSeriesAllData,\n  getTimeSeriesDataById,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\nexport const TimeSeriesItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <Offset />\n      <Span />\n      <ShowGrid />\n      <ShowLine />\n      <ShowTickLabels />\n      <ZeroLine />\n      <Xrange />\n      <LegendSelect />\n    </div>\n  )\n}\n\nconst Offset: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemOffset({ itemId, offset: !offset }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={offset} onChange={toggleChecked} />}\n      label=\"offset\"\n    />\n  )\n}\n\nconst Span: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n\n  const dispatch = useDispatch()\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number' && newValue > 0) {\n      dispatch(setTimeSeriesItemSpan({ itemId, span: newValue }))\n    }\n  }\n  return (\n    <FormControlLabel\n      control={\n        <TextField\n          type=\"number\"\n          style={{ width: '6vw' }}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={onChange}\n          defaultValue={span}\n        />\n      }\n      label=\"offset std\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"showgrid\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"showline\"\n    />\n  )\n}\n\nconst ShowTickLabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setTimeSeriesItemShowTickLabels({\n        itemId,\n        showticklabels: !showticklabels,\n      }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"showticklabels\"\n    />\n  )\n}\n\nconst ZeroLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemZeroLine({ itemId, zeroline: !zeroline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={zeroline} onChange={toggleChecked} />}\n      label=\"zeroline\"\n    />\n  )\n}\n\nconst Xrange: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeLeft = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newLeft = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newLeft === 'number') {\n      dispatch(setTimeSeriesItemXrangeLeft({ itemId, left: newLeft }))\n    }\n  }\n  const onChangeRight = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newRight = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newRight === 'number') {\n      dispatch(setTimeSeriesItemXrangeRight({ itemId, right: newRight }))\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <>\n          left:\n          <TextField\n            style={{ width: 50 }}\n            type=\"number\"\n            inputProps={{\n              step: 1,\n              min: 0,\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeLeft}\n            defaultValue={xrange.left}\n          />\n          right:\n          <TextField\n            style={{ width: 50 }}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeRight}\n            defaultValue={xrange.right}\n          />\n        </>\n      }\n      label=\"\"\n    />\n  )\n}\n\nconst LegendSelect: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const checkedList = useSelector(\n    selectTimeSeriesItemCheckedList(itemId),\n    arrayEqualityFn,\n  )\n  const displayNumbers = useSelector(selectTimeSeriesItemDisplayNumbers(itemId))\n  const filePath = useSelector(selectTimeSeriesItemFilePath(itemId))\n\n  const allHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      setTimeSeriesItemCheckedList({\n        itemId,\n        checkedList: checkedList.map((_) => {\n          return event.target.checked\n        }),\n      }),\n    )\n\n    if (event.target.checked) {\n      dispatch(\n        setTimeSeriesItemDisplayNumbers({\n          itemId,\n          displayNumbers: checkedList.map((_, i) => {\n            return i\n          }),\n        }),\n      )\n      if (filePath !== null) {\n        dispatch(getTimeSeriesAllData({ path: filePath }))\n      }\n    } else {\n      dispatch(\n        setTimeSeriesItemDisplayNumbers({\n          itemId,\n          displayNumbers: [],\n        }),\n      )\n    }\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const index = parseInt(event.target.value)\n\n    // displayNumbers\n    if (event.target.checked) {\n      dispatch(\n        setTimeSeriesItemDisplayNumbers({\n          itemId,\n          displayNumbers: [...displayNumbers, index],\n        }),\n      )\n    } else {\n      dispatch(\n        setTimeSeriesItemDisplayNumbers({\n          itemId,\n          displayNumbers: displayNumbers.filter((value) => value !== index),\n        }),\n      )\n    }\n\n    // CheckList\n    dispatch(\n      setTimeSeriesItemCheckedList({\n        itemId,\n        checkedList: checkedList.map((v, i) => {\n          if (i === index) {\n            return event.target.checked\n          }\n          return v\n        }),\n      }),\n    )\n\n    if (filePath !== null) {\n      dispatch(getTimeSeriesDataById({ path: filePath, index }))\n    }\n  }\n\n  const children = (\n    <Box sx={{ display: 'flex', flexDirection: 'column', ml: 3 }}>\n      {checkedList.map((v, i) => (\n        <FormControlLabel\n          key={`${i}`}\n          label={`Index ${i + 1}`}\n          control={<Checkbox checked={v} onChange={handleChange} value={i} />}\n        />\n      ))}\n    </Box>\n  )\n\n  return (\n    <div>\n      <FormControlLabel\n        label=\"All Check\"\n        control={\n          <Checkbox\n            checked={checkedList.every((v) => {\n              return v\n            })}\n            onChange={allHandleChange}\n          />\n        }\n      />\n      {children}\n    </div>\n  )\n}\n","import React from 'react'\n// import { useSelector, useDispatch } from 'react-redux'\n// import { SelectedItemIdContext } from '../VisualizeItemEditor'\n// import { selectRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n// import { setRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n// import { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\n// import { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n// import { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const RoiItemEditor: React.FC = () => {\n  // const itemId = React.useContext(SelectedItemIdContext)\n  // const dispatch = useDispatch()\n  // const { onUploadFile } = useFileUploader(FILE_TYPE_SET.CSV)\n  // const onUploadFileHandle = (formData: FormData, fileName: string) => {\n  //   onUploadFile(formData, fileName)\n  // }\n\n  // const colors = useSelector(selectRoiItemColors(itemId))\n  // const dispathSetColor = (colorCode: ColorType[]) => {\n  //   dispatch(setRoiItemColors({ itemId, colors: colorCode }))\n  // }\n\n  return (\n    <>\n      {/* <GradientColorPicker /> */}\n      {/* <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} /> */}\n    </>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FormControlLabel, TextField } from '@mui/material'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nexport const ScatterItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <XIndex />\n      <YIndex />\n    </div>\n  )\n}\n\nconst XIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeXIndex = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value === '' ? null : Number(event.target.value)\n    if (newValue !== null && newValue >= 0) {\n      dispatch(setScatterItemXIndex({ itemId, xIndex: newValue }))\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <>\n          <TextField\n            style={{ width: 50 }}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeXIndex}\n            defaultValue={xIndex}\n          />\n          xIndex\n        </>\n      }\n      label=\"\"\n    />\n  )\n}\n\nconst YIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeYIndex = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value === '' ? null : Number(event.target.value)\n    if (newValue !== null && newValue >= 0) {\n      dispatch(setScatterItemYIndex({ itemId, yIndex: newValue }))\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <>\n          <TextField\n            style={{ width: 50 }}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeYIndex}\n            defaultValue={yIndex}\n          />\n          yIndex\n        </>\n      }\n      label=\"\"\n    />\n  )\n}\n","import React from 'react'\n\nexport const BarItemEditor: React.FC = () => {\n  return <div style={{ margin: '10px', padding: 10 }}></div>\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport {\n  selectSelectedVisualizeItemId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { ImageItemEditor } from './Editor/ImageItemEditor'\nimport { CsvItemEditor } from './Editor/CsvItemEditor'\nimport { HeatmapItemEditor } from './Editor/HeatmapItemEditor'\nimport { TimeSeriesItemEditor } from './Editor/TimeSeriesItemEditor'\nimport { RoiItemEditor } from './Editor/RoiItemEditor'\nimport { ScatterItemEditor } from './Editor/ScatterItemEditor'\nimport { BarItemEditor } from './Editor/BarItemEditor'\n\nexport const VisualizeItemEditor = () => {\n  const selectedItemId = useSelector(selectSelectedVisualizeItemId)\n  return (\n    <>\n      {selectedItemId != null ? (\n        <SelectedItemIdContext.Provider value={selectedItemId}>\n          <Box m={1}>\n            <DisplayDataItemEditor />\n          </Box>\n        </SelectedItemIdContext.Provider>\n      ) : (\n        'Please select item...'\n      )}\n    </>\n  )\n}\n\nexport const SelectedItemIdContext = React.createContext<number>(NaN)\n\nconst DisplayDataItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <div style={{ marginTop: 8 }}>\n      <DisplayEditor dataType={dataType} />\n    </div>\n  )\n}\n\nconst DisplayEditor: React.FC<{\n  dataType: DATA_TYPE | null\n}> = ({ dataType }) => {\n  /* 他のtypeのEditorも必要になったら追加する */\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return <ImageItemEditor />\n    case DATA_TYPE_SET.CSV:\n      return <CsvItemEditor />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatmapItemEditor />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesItemEditor />\n    case DATA_TYPE_SET.ROI:\n      return <RoiItemEditor />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterItemEditor />\n    case DATA_TYPE_SET.BAR:\n      return <BarItemEditor />\n    case DATA_TYPE_SET.HTML:\n      return <div>html editor</div>\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport { default as MuiToolbar } from '@mui/material/Toolbar'\nimport { styled } from '@mui/material/styles'\nimport { drawerWidth } from 'components/FlowChart/FlowChart'\nimport { FlexItemList } from './VisualizeItems'\nimport { VisualizeItemEditor } from './VisualizeItemEditor'\n\nconst Visualize: React.FC = () => {\n  return (\n    <RootDiv>\n      <StyledDrawer variant=\"permanent\">\n        <MuiToolbar />\n        <StyledDrawerContents>\n          <VisualizeItemEditor />\n        </StyledDrawerContents>\n      </StyledDrawer>\n      <MainContents>\n        <MuiToolbar />\n        <FlexItemList />\n      </MainContents>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n})\n\nconst StyledDrawer = styled(Drawer)({\n  width: drawerWidth,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: drawerWidth,\n  },\n})\n\nconst StyledDrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')({\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n  height: '100vh',\n})\n\nexport default Visualize\n","import { RootState } from 'store/store'\nimport { EXPERIMENTS_STATUS } from './ExperimentsType'\n\nconst selectExperiments = (state: RootState) => state.experiments\n\nexport const selectExperimentsSatusIsUninitialized = (state: RootState) =>\n  selectExperiments(state).status === 'uninitialized'\n\nexport const selectExperimentsSatusIsPending = (state: RootState) =>\n  selectExperiments(state).status === 'pending'\n\nexport const selectExperimentsSatusIsFulfilled = (state: RootState) =>\n  selectExperiments(state).status === 'fulfilled'\n\nexport const selectExperimentsSatusIsError = (state: RootState) =>\n  selectExperiments(state).status === 'error'\n\nexport const selectExperimentsErrorMessage = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'error') {\n    return experiments.message\n  } else {\n    throw new Error('experiments status is not error')\n  }\n}\n\nexport const selectExperimentList = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'fulfilled') {\n    return experiments.experimentList\n  } else {\n    throw new Error('experiments status is not fulfilled')\n  }\n}\n\nexport const selectExperimentUidList = (state: RootState) =>\n  Object.keys(selectExperimentList(state))\n\nexport const selectExperiment = (uid: string) => (state: RootState) =>\n  selectExperimentList(state)[uid]\n\nexport const selectExperimentTimeStamp = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).timestamp\n\nexport const selectExperimentName = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).name\n\nexport const selectExperimentStatus =\n  (uid: string) =>\n  (state: RootState): EXPERIMENTS_STATUS => {\n    const functions = selectExperimentList(state)[uid].functions\n    const statusList = Object.values(functions).map((f) => f.status)\n    if (statusList.findIndex((status) => status === 'error') >= 0) {\n      return 'error'\n    } else if (statusList.findIndex((status) => status === 'running') >= 0) {\n      return 'running'\n    } else {\n      return 'success'\n    }\n  }\n\nexport const selectExperimentCheckList =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionNodeIdList =\n  (uid: string) => (state: RootState) =>\n    Object.keys(selectExperimentList(state)[uid].functions)\n\nexport const selectExperimentFunction =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentList(state)[uid].functions[nodeId]\n\nexport const selectExperimentFunctionName =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).name\n\nexport const selectExperimentFunctionStatus =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n","import React from 'react'\nimport DoneIcon from '@mui/icons-material/Done'\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline'\nimport HorizontalRuleIcon from '@mui/icons-material/HorizontalRule'\n\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport const ExperimentStatusIcon = React.memo<{ status: EXPERIMENTS_STATUS }>(\n  ({ status }) => {\n    switch (status) {\n      case 'error':\n        return <ErrorOutlineIcon color=\"error\" />\n      case 'success':\n        return <DoneIcon color=\"success\" />\n      case 'running':\n        return <HorizontalRuleIcon color=\"inherit\" />\n    }\n  },\n)\n","import React, { useState, useRef } from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport { BASE_URL } from 'const/API'\nimport axios from 'axios'\nimport GetAppIcon from '@mui/icons-material/GetApp'\n\nexport const NWBDownloadButton = React.memo<{\n  name: string\n}>(({ name }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n\n  const onClick = async () => {\n    try {\n      const response = await axios.get(\n        `${BASE_URL}/experiments/download/nwb/${uid}`,\n        {\n          responseType: 'blob',\n        },\n      )\n      const url = URL.createObjectURL(new Blob([response.data]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      throw new Error('Download Error')\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick}>\n        <GetAppIcon color=\"primary\" />\n      </IconButton>\n      <a href={url} download={`${name}.nwb`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n\nexport const ConfigDownloadButton = React.memo(() => {\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n\n  const onClick = async () => {\n    try {\n      const response = await axios.get(\n        `${BASE_URL}/experiments/download/config/${uid}`,\n        {\n          responseType: 'blob',\n        },\n      )\n      const url = URL.createObjectURL(new Blob([response.data]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      throw new Error('Download Error')\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick}>\n        <GetAppIcon color=\"primary\" />\n      </IconButton>\n      <a href={url} download={`config.yaml`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport Collapse from '@mui/material/Collapse'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Typography from '@mui/material/Typography'\n\nimport { ExperimentUidContext } from './ExperimentTable'\nimport {\n  selectExperimentFunctionName,\n  selectExperimentFunctionNodeIdList,\n  selectExperimentFunctionStatus,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { NWBDownloadButton } from './Button/DownloadButton'\n\nexport const CollapsibleTable = React.memo<{\n  open: boolean\n}>(({ open }) => {\n  return (\n    <TableRow>\n      <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Box margin={1}>\n            <Typography variant=\"h6\" gutterBottom component=\"div\">\n              Details\n            </Typography>\n            <Table size=\"small\" aria-label=\"purchases\">\n              <Head />\n              <Body />\n            </Table>\n          </Box>\n        </Collapse>\n      </TableCell>\n    </TableRow>\n  )\n})\n\nconst Head = React.memo(() => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>Function</TableCell>\n        <TableCell>nodeID</TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>NWB</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst Body = React.memo(() => {\n  const uid = React.useContext(ExperimentUidContext)\n  const nodeIdList = useSelector(\n    selectExperimentFunctionNodeIdList(uid),\n    arrayEqualityFn,\n  )\n  return (\n    <TableBody>\n      {nodeIdList.map((nodeId) => (\n        <TableRowOfFunction nodeId={nodeId} />\n      ))}\n    </TableBody>\n  )\n})\n\nconst TableRowOfFunction = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const name = useSelector(selectExperimentFunctionName(uid, nodeId))\n  const status = useSelector(selectExperimentFunctionStatus(uid, nodeId))\n  return (\n    <TableRow key={nodeId}>\n      <TableCell component=\"th\" scope=\"row\">\n        {name}\n      </TableCell>\n      <TableCell>{nodeId}</TableCell>\n      <TableCell>\n        <ExperimentStatusIcon status={status} />\n      </TableCell>\n      <TableCell>\n        <NWBDownloadButton name={name} />\n      </TableCell>\n    </TableRow>\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport IconButton from '@mui/material/IconButton'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline'\nimport { selectExperimentName } from 'store/slice/Experiments/ExperimentsSelectors'\nimport { deleteExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentUidContext } from '../ExperimentTable'\n\nexport const DeleteButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const uid = React.useContext(ExperimentUidContext)\n\n  const name = useSelector(selectExperimentName(uid))\n  const [open, setOpen] = React.useState(false)\n\n  const onClickOpen = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(deleteExperimentByUid(uid))\n  }\n  return (\n    <>\n      <IconButton onClick={onClickOpen}>\n        <DeleteOutlineIcon color=\"error\" />\n      </IconButton>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete {name}?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport { useSnackbar } from 'notistack'\nimport { importExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { AppDispatch } from 'store/store'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\nimport { RUN_BTN_OPTIONS } from 'store/slice/Pipeline/PipelineType'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport ReplyIcon from '@mui/icons-material/Reply'\n\nexport const ImportButton = React.memo(() => {\n  const dispatch: AppDispatch = useDispatch()\n  const uid = React.useContext(ExperimentUidContext)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = () => {\n    dispatch(importExperimentByUid(uid))\n      .unwrap()\n      .then(() =>\n        enqueueSnackbar('Successfully imported.', { variant: 'success' }),\n      )\n    dispatch(setRunBtnOption({ runBtnOption: RUN_BTN_OPTIONS.RUN_ALREADY }))\n  }\n  return (\n    <IconButton onClick={onClick}>\n      <ReplyIcon />\n    </IconButton>\n  )\n})\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\nimport Alert from '@mui/material/Alert'\nimport AlertTitle from '@mui/material/AlertTitle'\nimport IconButton from '@mui/material/IconButton'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Paper from '@mui/material/Paper'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport ReplayIcon from '@mui/icons-material/Replay'\nimport DeleteIcon from '@mui/icons-material/Delete'\n\nimport { CollapsibleTable } from './CollapsibleTable'\nimport {\n  selectExperimentsSatusIsUninitialized,\n  selectExperimentsSatusIsFulfilled,\n  selectExperimentTimeStamp,\n  selectExperimentName,\n  selectExperimentStatus,\n  selectExperimentsSatusIsError,\n  selectExperimentsErrorMessage,\n  selectExperimentList,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport {\n  deleteExperimentByList,\n  getExperiments,\n} from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { Experiment } from 'store/slice/Experiments/ExperimentsType'\nimport {\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  TableSortLabel,\n} from '@mui/material'\nimport { DeleteButton } from './Button/DeleteButton'\nimport {\n  NWBDownloadButton,\n  ConfigDownloadButton,\n} from './Button/DownloadButton'\nimport { ImportButton } from './Button/ImportButton'\n\nexport const ExperimentUidContext = React.createContext<string>('')\n\nexport const ExperimentTable: React.FC = () => {\n  const isUninitialized = useSelector(selectExperimentsSatusIsUninitialized)\n  const isFulfilled = useSelector(selectExperimentsSatusIsFulfilled)\n  const isError = useSelector(selectExperimentsSatusIsError)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (isUninitialized) {\n      dispatch(getExperiments())\n    }\n  }, [dispatch, isUninitialized])\n  if (isFulfilled) {\n    return <TableImple />\n  } else if (isError) {\n    return <ExperimentsErrorView />\n  } else {\n    return null\n  }\n}\n\nconst ExperimentsErrorView: React.FC = () => {\n  const message = useSelector(selectExperimentsErrorMessage)\n  return (\n    <Alert severity=\"error\">\n      <AlertTitle>failed to get experiments...</AlertTitle>\n      {message}\n    </Alert>\n  )\n}\n\nconst TableImple = React.memo(() => {\n  const experimentList = useSelector(selectExperimentList)\n  const dispatch = useDispatch()\n  const onClickReload = () => {\n    dispatch(getExperiments())\n  }\n  const [order, setOrder] = React.useState<Order>('asc')\n  const [sortTarget, setSortTarget] =\n    React.useState<keyof Experiment>('timestamp')\n  const sortHandler =\n    (property: keyof Experiment) => (event: React.MouseEvent<unknown>) => {\n      const isAsc = sortTarget === property && order === 'asc'\n      setOrder(isAsc ? 'desc' : 'asc')\n      setSortTarget(property)\n    }\n\n  const [checkedList, setCheckedList] = useState<string[]>([])\n  const [open, setOpen] = React.useState(false)\n\n  const onCheckBoxClick = (uid: string) => {\n    if (checkedList.includes(uid)) {\n      setCheckedList(checkedList.filter((v) => v !== uid))\n    } else {\n      setCheckedList([...checkedList, uid])\n    }\n  }\n  const onClickDelete = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    dispatch(deleteExperimentByList(checkedList))\n    setCheckedList([])\n    setOpen(false)\n  }\n\n  return (\n    <Box>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n        }}\n      >\n        <Button\n          sx={{\n            marginBottom: (theme) => theme.spacing(1),\n          }}\n          variant=\"outlined\"\n          endIcon={<ReplayIcon />}\n          onClick={onClickReload}\n        >\n          Reload\n        </Button>\n        <Button\n          sx={{\n            marginBottom: (theme) => theme.spacing(1),\n          }}\n          variant=\"outlined\"\n          color=\"error\"\n          endIcon={<DeleteIcon />}\n          onClick={onClickDelete}\n          disabled={checkedList.length === 0}\n        >\n          Delete\n        </Button>\n      </Box>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <TableContainer component={Paper} elevation={0} variant=\"outlined\">\n        <Table aria-label=\"collapsible table\">\n          <HeadItem order={order} sortHandler={sortHandler} />\n          <TableBody>\n            {Object.values(experimentList)\n              .sort(getComparator(order, sortTarget))\n              .map((expData) => (\n                <ExperimentUidContext.Provider\n                  value={expData.uid}\n                  key={expData.uid}\n                >\n                  <RowItem onCheckBoxClick={onCheckBoxClick} />\n                </ExperimentUidContext.Provider>\n              ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  )\n})\n\nconst HeadItem = React.memo<{\n  order: Order\n  sortHandler: any\n}>(({ order, sortHandler }) => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell />\n        <TableCell />\n        <TableCell>\n          <TableSortLabel\n            active\n            direction={order}\n            onClick={sortHandler('timestamp')}\n          >\n            Timestamp\n          </TableSortLabel>\n        </TableCell>\n        <TableCell>\n          <TableSortLabel active direction={order} onClick={sortHandler('uid')}>\n            ID\n          </TableSortLabel>\n        </TableCell>\n        <TableCell>\n          <TableSortLabel\n            active\n            direction={order}\n            onClick={sortHandler('name')}\n          >\n            Name\n          </TableSortLabel>\n        </TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>Reproduce</TableCell>\n        <TableCell>workflow</TableCell>\n        <TableCell>NWB</TableCell>\n        <TableCell>Delete</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst RowItem = React.memo<{\n  onCheckBoxClick: (uid: string) => void\n}>(({ onCheckBoxClick }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const timestamp = useSelector(selectExperimentTimeStamp(uid))\n  const status = useSelector(selectExperimentStatus(uid))\n  const name = useSelector(selectExperimentName(uid))\n  const [open, setOpen] = React.useState(false)\n\n  return (\n    <React.Fragment>\n      <TableRow\n        sx={{\n          '& > *': {\n            borderBottom: 'unset',\n          },\n          [`& .${tableCellClasses.root}`]: {\n            borderBottomWidth: 0,\n          },\n        }}\n      >\n        <TableCell>\n          <Checkbox onChange={() => onCheckBoxClick(uid)} />\n        </TableCell>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {timestamp}\n        </TableCell>\n        <TableCell>{uid}</TableCell>\n        <TableCell>{name}</TableCell>\n        <TableCell>\n          <ExperimentStatusIcon status={status} />\n        </TableCell>\n        <TableCell>\n          <ImportButton />\n        </TableCell>\n        <TableCell>\n          <ConfigDownloadButton />\n        </TableCell>\n        <TableCell>\n          <NWBDownloadButton name={uid} />\n        </TableCell>\n        <TableCell>\n          <DeleteButton />\n        </TableCell>\n      </TableRow>\n      <CollapsibleTable open={open} />\n    </React.Fragment>\n  )\n})\n\ntype Order = 'asc' | 'desc'\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string },\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n","import React from 'react'\nimport { default as MuiToolbar } from '@mui/material/Toolbar'\nimport { ExperimentTable } from './ExperimentTable'\n\nconst Experiment = React.memo(() => {\n  return (\n    <div style={{ display: 'flex' }}>\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1,\n          height: '100vh',\n          padding: 16,\n        }}\n      >\n        <MuiToolbar />\n        <ExperimentTable />\n      </main>\n    </div>\n  )\n})\n\nexport default Experiment\n","export default __webpack_public_path__ + \"static/media/optinist.8794a1aa.png\";","import React from 'react'\nimport AppBar from '@mui/material/AppBar'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Typography from '@mui/material/Typography'\nimport Toolbar from '@mui/material/Toolbar'\nimport { styled } from '@mui/material/styles'\nimport FlowChart from './FlowChart/FlowChart'\nimport Visualize from './Visualize/Visualize'\nimport Experiment from './Experiment/Experiment'\nimport { useRunPipeline } from 'store/slice/Pipeline/PipelineHook'\nimport optinistLogo from './optinist.png'\n\nconst Layout: React.FC = () => {\n  const [value, setValue] = React.useState(0)\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue)\n  }\n\n  const runPipeline = useRunPipeline() // タブ切り替えによって結果取得処理が止まってしまうのを回避するため、タブの親レイヤーで呼び出している\n\n  return (\n    <RootDiv>\n      <StyledAppBar position=\"fixed\" color=\"inherit\">\n        <Toolbar variant=\"dense\">\n          <img src={optinistLogo} alt=\"optinist\" width={120} />\n          <Tabs\n            sx={{ width: '100%' }}\n            value={value}\n            onChange={handleChange}\n            centered\n            textColor=\"primary\"\n          >\n            <Tab label=\"Workflow\" {...a11yProps(0)} />\n            <Tab label=\"Visualize\" {...a11yProps(1)} />\n            <Tab label=\"Record\" {...a11yProps(2)} />\n          </Tabs>\n        </Toolbar>\n      </StyledAppBar>\n      <TabPanel value={value} index={0}>\n        <FlowChart {...runPipeline} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Visualize />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <Experiment />\n      </TabPanel>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  backgroundColor: theme.palette.background.paper,\n}))\n\nconst StyledAppBar = styled(AppBar)(({ theme }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  backgroundColor: '#C3EBE1',\n}))\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: any\n  value: any\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Typography>{children}</Typography>}\n    </div>\n  )\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default Layout\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  selectPipelineIsCanceled,\n  selectPipelineIsStartedSuccess,\n  selectPipelineLatestUid,\n  selectPipelineStatus,\n  selectRunPostData,\n} from './PipelineSelectors'\nimport { run, pollRunResult, runByCurrentUid } from './PipelineActions'\nimport { cancelPipeline } from './PipelineSlice'\nimport { selectFilePathIsUndefined } from '../InputNode/InputNodeSelectors'\nimport { useSnackbar } from 'notistack'\nimport { RUN_STATUS } from './PipelineType'\n\nconst POLLING_INTERVAL = 5000\n\nexport type UseRunPipelineReturnType = ReturnType<typeof useRunPipeline>\n\nexport function useRunPipeline() {\n  const dispatch = useDispatch()\n  const uid = useSelector(selectPipelineLatestUid)\n  const isCanceled = useSelector(selectPipelineIsCanceled)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n  const filePathIsUndefined = useSelector(selectFilePathIsUndefined)\n  const runPostData = useSelector(selectRunPostData)\n  const handleRunPipeline = React.useCallback(\n    (name: string) => {\n      dispatch(run({ runPostData: { name, ...runPostData, forceRunList: [] } }))\n    },\n    [dispatch, runPostData],\n  )\n  const handleRunPipelineByUid = React.useCallback(() => {\n    dispatch(runByCurrentUid({ runPostData }))\n  }, [dispatch, runPostData])\n  const handleCancelPipeline = React.useCallback(() => {\n    if (uid != null) {\n      dispatch(cancelPipeline())\n    }\n  }, [dispatch, uid])\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isStartedSuccess && !isCanceled && uid != null) {\n        dispatch(pollRunResult({ uid: uid }))\n      }\n    }, POLLING_INTERVAL)\n    return () => {\n      clearInterval(intervalId)\n    }\n  }, [dispatch, uid, isCanceled, isStartedSuccess])\n  const status = useSelector(selectPipelineStatus)\n  const { enqueueSnackbar } = useSnackbar()\n  // タブ移動による再レンダリングするたびにスナックバーが実行されてしまう挙動を回避するために前回の値を保持\n  const [prevStatus, setPrevStatus] = React.useState(status)\n  React.useEffect(() => {\n    if (prevStatus !== status) {\n      if (status === RUN_STATUS.FINISHED) {\n        enqueueSnackbar('Finished', { variant: 'success' })\n      } else if (status === RUN_STATUS.ABORTED) {\n        enqueueSnackbar('Aborted', { variant: 'error' })\n      } else if (status === RUN_STATUS.CANCELED) {\n        enqueueSnackbar('Canceled', { variant: 'info' })\n      }\n      setPrevStatus(status)\n    }\n  }, [status, prevStatus, enqueueSnackbar])\n  return {\n    filePathIsUndefined,\n    uid,\n    status,\n    isStartedSuccess,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n    handleCancelPipeline,\n  }\n}\n","import React from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport Close from '@mui/icons-material/Close'\nimport { SnackbarProvider, SnackbarKey, useSnackbar } from 'notistack'\n\nimport AppLayout from './components/Layout'\n\nconst App: React.FC = () => {\n  return (\n    <SnackbarProvider\n      maxSnack={5}\n      action={(snackbarKey) => (\n        <SnackbarCloseButton snackbarKey={snackbarKey} />\n      )}\n    >\n      <AppLayout />\n    </SnackbarProvider>\n  )\n}\n\nconst SnackbarCloseButton: React.FC<{ snackbarKey: SnackbarKey }> = ({\n  snackbarKey,\n}) => {\n  const { closeSnackbar } = useSnackbar()\n  return (\n    <IconButton onClick={() => closeSnackbar(snackbarKey)} size=\"large\">\n      <Close style={{ color: 'white' }} />\n    </IconButton>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  ALGORITHM_LIST_SLICE_NAME,\n  AlgorithmListType,\n} from './AlgorithmListType'\nimport { getAlgoList } from './AlgorithmListActions'\nimport { convertToAlgoListType } from './AlgorithmListUtils'\n\nconst initialState: AlgorithmListType = {\n  isLatest: false,\n  tree: {},\n}\n\nexport const algorithmListSlice = createSlice({\n  name: ALGORITHM_LIST_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlgoList.fulfilled, (state, action) => {\n      state.tree = convertToAlgoListType(action.payload)\n      state.isLatest = true\n    })\n  },\n})\n\nexport default algorithmListSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n  DisplayData,\n  DISPLAY_DATA_SLICE_NAME,\n} from './DisplayDataType'\nimport {\n  getCsvData,\n  getHeatMapData,\n  getImageData,\n  getTimeSeriesDataById,\n  getTimeSeriesAllData,\n  getRoiData,\n  getScatterData,\n  getBarData,\n  getHTMLData,\n} from './DisplayDataActions'\nimport {\n  deleteDisplayItem,\n  setNewDisplayDataPath,\n} from '../VisualizeItem/VisualizeItemActions'\n\nconst initialState: DisplayData = {\n  timeSeries: {},\n  heatMap: {},\n  image: {},\n  csv: {},\n  roi: {},\n  scatter: {},\n  bar: {},\n  hdf5: {},\n  html: {},\n}\n\nexport const displayDataSlice = createSlice({\n  name: DISPLAY_DATA_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        if (action.payload.deleteData) {\n          const { filePath, dataType } = action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        if (action.payload.deleteData) {\n          const { prevDataType: dataType, prevFilePath: filePath } =\n            action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(getTimeSeriesDataById.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesDataById.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesDataById.fulfilled, (state, action) => {\n        const { path, index } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n        if (Object.keys(state.timeSeries[path].data).length === 0) {\n          state.timeSeries[path].xrange = action.payload.xrange\n          state.timeSeries[path].data = action.payload.data\n          state.timeSeries[path].std = action.payload.std\n        } else {\n          state.timeSeries[path].data[index] = action.payload.data[index]\n          if (action.payload.std[index] !== undefined) {\n            state.timeSeries[path].std[index] = action.payload.std[index]\n          }\n        }\n      })\n      .addCase(getTimeSeriesAllData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesAllData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesAllData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        if (action.payload.std !== undefined) {\n          state.timeSeries[path].std = action.payload.std\n        }\n      })\n      .addCase(getHeatMapData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getImageData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getImageData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getCsvData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getRoiData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getRoiData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getRoiData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getScatterData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getBarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getBarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHTMLData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n  },\n})\n\nfunction deleteDisplayDataFn(\n  state: DisplayData,\n  filePath: string,\n  dataType: DATA_TYPE,\n) {\n  if (dataType === DATA_TYPE_SET.IMAGE) {\n    delete state.image[filePath]\n  } else if (dataType === DATA_TYPE_SET.TIME_SERIES) {\n    delete state.timeSeries[filePath]\n  } else if (dataType === DATA_TYPE_SET.CSV) {\n    delete state.csv[filePath]\n  } else if (dataType === DATA_TYPE_SET.HEAT_MAP) {\n    delete state.heatMap[filePath]\n    // } else if (dataType === DATA_TYPE_SET.ROI) {\n    //   delete state.roi[filePath]\n  } else if (dataType === DATA_TYPE_SET.SCATTER) {\n    delete state.scatter[filePath]\n  } else if (dataType === DATA_TYPE_SET.BAR) {\n    delete state.bar[filePath]\n  } else if (dataType === DATA_TYPE_SET.HTML) {\n    delete state.html[filePath]\n  }\n}\n\n// export const { } = displayDataSlice.actions\n\nexport default displayDataSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { FileUploader, FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\nimport { setUploadProgress, uploadFile } from './FileUploaderActions'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nconst initialState: FileUploader = {}\n\nexport const fileUploaderSlice = createSlice({\n  name: FILE_UPLOADER_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFileUploaderStateById(state, action: PayloadAction<string>) {\n      state[action.payload] = inistialUploaderState\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(setUploadProgress, (state, action) => {\n        const { progess, requestId } = action.payload\n        state[requestId].uploadingProgress = progess\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileName, requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          fileName,\n          isUninitialized: false,\n          pending: true,\n          fulfilled: false,\n          uploadingProgress: 0,\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { requestId } = action.meta.arg\n        const { resultPath } = action.payload\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          path: resultPath,\n          pending: false,\n          fulfilled: true,\n        }\n      })\n      .addCase(uploadFile.rejected, (state, action) => {\n        const { requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          pending: false,\n          fulfilled: false,\n          error: action.error.message,\n        }\n      })\n  },\n})\n\nexport const { setFileUploaderStateById } = fileUploaderSlice.actions\n\nexport default fileUploaderSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { uploadFile } from 'store/slice/FileUploader/FileUploaderActions'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { getFilesTree } from './FilesTreeAction'\nimport {\n  FilesTree,\n  FILES_TREE_SLICE_NAME,\n  FILE_TREE_TYPE_SET,\n} from './FilesTreeType'\nimport { convertToTreeNodeType } from './FilesTreeUtils'\n\nconst initialState: FilesTree = {}\nexport const filesTreeSlice = createSlice({\n  name: FILES_TREE_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getFilesTree.pending, (state, action) => {\n        const fileType = action.meta.arg\n        state[fileType] = {\n          isLoading: true,\n          isLatest: false,\n          tree: [],\n        }\n      })\n      .addCase(getFilesTree.fulfilled, (state, action) => {\n        const fileTreeType = action.meta.arg\n        state[fileTreeType].tree = convertToTreeNodeType(action.payload)\n        state[fileTreeType].isLatest = true\n        state[fileTreeType].isLoading = false\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          if (state[FILE_TREE_TYPE_SET.IMAGE] != null) {\n            state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.IMAGE] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          if (state[FILE_TREE_TYPE_SET.CSV] != null) {\n            state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.CSV] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          if (state[FILE_TREE_TYPE_SET.HDF5] != null) {\n            state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.HDF5] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else {\n          if (state[FILE_TREE_TYPE_SET.ALL] != null) {\n            state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.ALL] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n        } else {\n          state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n        }\n      })\n  },\n})\n\nexport default filesTreeSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as MuiColors from '@mui/material/colors'\n\nexport type HandleTypeColor = {\n  colorMap: { [type: string]: string }\n  /**\n   * HANDLE_COLOR_PRESET_MAPのkey\n   */\n  nextKey: number\n}\n\nconst initialState: HandleTypeColor = {\n  colorMap: {\n    ImageData: MuiColors.red[500],\n    IscellData: MuiColors.indigo[500],\n    TimeSeriesData: MuiColors.yellow[500],\n    Suite2pData: MuiColors.green[500],\n    FluoData: MuiColors.orange[500],\n    BehaviorData: MuiColors.yellow[500],\n  },\n  nextKey: 0,\n}\n\nconst SLICE_NAME = 'handleTypeColor'\n\nexport const handleTypeColorSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {},\n})\n\nexport default handleTypeColorSlice.reducer\n","import { HDF5TreeDTO } from './HDF5Type'\n\nexport function convertToTreeNodeType(dto: HDF5TreeDTO[]): HDF5TreeDTO[] {\n  return dto.map((node) =>\n    node.isDir\n      ? {\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n          path: node.path,\n        }\n      : {\n          name: node.name,\n          isDir: false,\n          shape: node.shape,\n          path: node.path,\n          nbytes: node.nbytes,\n        },\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { getHDF5Tree } from './HDF5Action'\nimport { HDF5Tree, HDF5_SLICE_NAME } from './HDF5Type'\nimport { convertToTreeNodeType } from './HDF5Utils'\n\nconst initialState: HDF5Tree = {\n  isLoading: false,\n  tree: [],\n}\nexport const HDF5Slice = createSlice({\n  name: HDF5_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHDF5Tree.pending, (state, action) => {\n        state = {\n          isLoading: true,\n          tree: [],\n        }\n      })\n      .addCase(getHDF5Tree.fulfilled, (state, action) => {\n        state.tree = convertToTreeNodeType(action.payload)\n        state.isLoading = false\n      })\n  },\n})\n\nexport default HDF5Slice.reducer\n","import type { ExperimentDTO, ExperimentsDTO } from 'api/experiments/Experiments'\nimport type {\n  ExperimentListType,\n  ExperimentType,\n  ExperimentFunction,\n  EXPERIMENTS_STATUS,\n} from './ExperimentsType'\n\nexport function convertToExperimentListType(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n\nexport function convertToExperimentType(dto: ExperimentDTO): ExperimentType {\n  const functions: { [nodeId: string]: ExperimentFunction } = {}\n  Object.entries(dto.function).forEach(([_, value]) => {\n    functions[value.unique_id] = {\n      name: value.name,\n      nodeId: value.unique_id,\n      postion: value.position,\n      status: convertToExperimentStatus(value.success),\n    }\n  })\n  return {\n    uid: dto.unique_id,\n    timestamp: dto.timestamp,\n    name: dto.name,\n    functions,\n  }\n}\n\nfunction convertToExperimentStatus(dto: string): EXPERIMENTS_STATUS {\n  switch (dto) {\n    case 'running':\n      return 'running'\n    case 'success':\n      return 'success'\n    case 'error':\n      return 'error'\n    default:\n      throw new Error('failed to convert to EXPERIMENTS_STATUS')\n  }\n}\n\nexport function convertToFlowChartList(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { EXPERIMENTS_SLICE_NAME, Experiments } from './ExperimentsType'\nimport {\n  getExperiments,\n  deleteExperimentByUid,\n  deleteExperimentByList,\n} from './ExperimentsActions'\nimport { convertToExperimentListType } from './ExperimentsUtils'\nimport {\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from '../Pipeline/PipelineActions'\n\nconst initialState: Experiments = {\n  status: 'uninitialized',\n}\n\nexport const experimentsSlice = createSlice({\n  name: EXPERIMENTS_SLICE_NAME,\n  initialState: initialState as Experiments,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getExperiments.pending, () => {\n        return {\n          status: 'pending',\n        }\n      })\n      .addCase(getExperiments.fulfilled, (state, action) => {\n        const experimentList = convertToExperimentListType(action.payload)\n        return {\n          status: 'fulfilled',\n          experimentList,\n        }\n      })\n      .addCase(getExperiments.rejected, (state, action) => {\n        return {\n          status: 'error',\n          message: action.error.message,\n        }\n      })\n      .addCase(deleteExperimentByUid.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          delete state.experimentList[action.meta.arg]\n        }\n      })\n      .addCase(deleteExperimentByList.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          action.meta.arg.map((v) => delete state.experimentList[v])\n        }\n      })\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          const uid = action.meta.arg.uid\n          const target = state.experimentList[uid]\n          Object.entries(action.payload).forEach(([nodeId, value]) => {\n            if (value.status === 'success') {\n              target.functions[nodeId].status = 'success'\n            } else if (value.status === 'error') {\n              target.functions[nodeId].status = 'error'\n            }\n          })\n        }\n      })\n      .addMatcher(isAnyOf(run.fulfilled, runByCurrentUid.fulfilled), () => {\n        return {\n          status: 'uninitialized',\n        }\n      })\n  },\n})\n\nexport default experimentsSlice.reducer\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\nimport {\n  algorithmListReducer,\n  algorithmNodeReducer,\n  displayDataReducer,\n  fileUploaderReducer,\n  flowElementReducer,\n  inputNodeReducer,\n  nwbReducer,\n  filesTreeReducer,\n  handleTypeColorReducer,\n  rightDrawerReducer,\n  visualaizeItemReducer,\n  snakemakeReducer,\n  pipelineReducer,\n  hdf5Reducer,\n  experimentsReducer,\n} from './slice'\n\nexport const store = configureStore({\n  reducer: {\n    algorithmList: algorithmListReducer,\n    algorithmNode: algorithmNodeReducer,\n    displayData: displayDataReducer,\n    fileUploader: fileUploaderReducer,\n    flowElement: flowElementReducer,\n    inputNode: inputNodeReducer,\n    handleColor: handleTypeColorReducer,\n    filesTree: filesTreeReducer,\n    nwb: nwbReducer,\n    rightDrawer: rightDrawerReducer,\n    visualaizeItem: visualaizeItemReducer,\n    snakemake: snakemakeReducer,\n    pipeline: pipelineReducer,\n    hdf5: hdf5Reducer,\n    experiments: experimentsReducer,\n  },\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\nexport type ThunkApiConfig<T = unknown, PendingMeta = unknown> = {\n  state: RootState\n  dispatch: AppDispatch\n  rejectValue: T\n  penfingMeta: PendingMeta\n}\n","import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme({\n  components: {\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiSelect: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from 'store/store'\n\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './Theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}