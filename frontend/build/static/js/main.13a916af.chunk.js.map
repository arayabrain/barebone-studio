{"version":3,"sources":["@types/index.ts","utils/auth/AuthUtils.ts","store/slice/User/UserSelector.ts","store/slice/User/UserType.ts","api/auth/Auth.ts","const/API.ts","utils/axios.ts","api/users/UsersMe.ts","api/users/UsersAdmin.ts","store/slice/User/UserActions.ts","components/logo.png","components/Layout/Tooltips.tsx","store/slice/Workspace/WorkspaceSelector.ts","store/slice/Workspace/WorkspaceType.ts","store/slice/Workflow/WorkflowType.ts","api/workflow/Workflow.ts","store/slice/Workflow/WorkflowActions.ts","api/workspace/index.ts","store/slice/Workspace/WorkspaceActions.ts","store/slice/Workspace/WorkspaceSlice.ts","components/Workspace/WorkspaceTabs.tsx","store/slice/User/UserSlice.ts","const/Layout.ts","components/Layout/Header.tsx","components/Layout/LeftMenu.tsx","components/common/Loading.tsx","components/Layout/index.tsx","pages/Dashboard/index.tsx","components/common/Input.tsx","components/Account/InputPassword.tsx","components/Account/ChangePasswordModal.tsx","components/common/DeleteConfirmModal.tsx","pages/Account/index.tsx","components/common/InputError.tsx","components/common/SelectError.tsx","components/common/PaginationCustom.tsx","pages/AccountManager/index.tsx","pages/Login/index.tsx","pages/ResetPassword/index.tsx","components/Workspace/PopupShare.tsx","pages/Workspace/index.tsx","utils/param/ParamUtils.ts","store/slice/AlgorithmNode/AlgorithmNodeSelectors.ts","store/slice/FlowElement/FlowElementSelectors.ts","store/slice/FlowElement/FlowElementType.ts","store/slice/FlowElement/FlowElementUtils.ts","store/slice/NWB/NWBSelectors.ts","store/slice/Pipeline/PipelineType.ts","store/slice/DisplayData/DisplayDataType.ts","store/slice/DisplayData/DisplayDataUtils.ts","store/slice/Pipeline/PipelineUtils.ts","store/slice/Pipeline/PipelineSelectors.ts","store/slice/Snakemake/SnakemakeSelectors.ts","store/slice/InputNode/InputNodeType.ts","store/slice/InputNode/InputNodeUtils.ts","store/slice/InputNode/InputNodeSelectors.ts","store/slice/Run/RunSelectors.ts","api/run/Run.ts","store/slice/Pipeline/PipelineActions.ts","api/experiments/Experiments.ts","store/slice/Experiments/ExperimentsType.ts","store/slice/Experiments/ExperimentsActions.ts","store/slice/Experiments/ExperimentsUtils.ts","store/slice/Experiments/ExperimentsSlice.ts","store/slice/Experiments/ExperimentsSelectors.ts","components/Workspace/Experiment/ExperimentStatusIcon.tsx","utils/EqualityUtils.ts","components/Workspace/Experiment/Button/DownloadButton.tsx","components/Workspace/Experiment/CollapsibleTable.tsx","store/slice/Pipeline/PipelineSlice.ts","components/Workspace/Experiment/Button/DeleteButton.tsx","api/outputs/Outputs.ts","store/slice/DisplayData/DisplayDataActions.ts","store/slice/DisplayData/DisplayDataSelectors.ts","store/slice/VisualizeItem/VisualizeItemType.ts","store/slice/VisualizeItem/VisualizeItemUtils.ts","store/slice/VisualizeItem/VisualizeItemSelectors.ts","store/slice/VisualizeItem/VisualizeItemActions.ts","store/slice/VisualizeItem/VisualizeItemSlice.ts","components/Workspace/Experiment/Button/ReproduceButton.tsx","components/Workspace/Experiment/ExperimentTable.tsx","components/utils/LocalStorageUtil.ts","components/Workspace/Experiment/Experiment.tsx","store/slice/AlgorithmList/AlgorithmListUtils.ts","store/slice/AlgorithmList/AlgorithmListSelectors.ts","store/slice/AlgorithmList/AlgorithmListType.ts","api/algolist/AlgoList.ts","store/slice/AlgorithmList/AlgorithmListActions.ts","api/params/Params.ts","store/slice/FlowElement/FlowElementActions.ts","utils/nanoid/NanoIdUtils.ts","const/flowchart.ts","components/Workspace/FlowChart/DnDItemType.ts","components/Workspace/FlowChart/TreeView.tsx","store/slice/InputNode/InputNodeActions.ts","api/run/RunUtils.ts","api/files/Files.ts","store/slice/FileUploader/FileUploaderType.ts","store/slice/FileUploader/FileUploaderActions.ts","store/slice/FlowElement/FlowElementSlice.ts","api/nwb/NWB.ts","store/slice/NWB/NWBType.ts","store/slice/NWB/NWBAction.ts","store/slice/NWB/NWBSlice.ts","store/slice/RightDrawer/RightDrawerSlice.ts","components/common/Accordion.tsx","components/common/ParamFormItemCreator.tsx","components/Workspace/FlowChart/NWB.tsx","api/snakemake/Snakemake.ts","store/slice/Snakemake/SnakemakeType.ts","store/slice/Snakemake/SnakemakeAction.ts","store/slice/Snakemake/SnakemakeSlice.ts","components/Workspace/FlowChart/Snakemake.tsx","components/Workspace/RunButtons.tsx","components/Workspace/FlowChart/ImportWorkflowConfigButton.tsx","components/Workspace/ToolBar.tsx","components/Workspace/FlowChart/FlowChartNode/HandleColorHook.ts","store/slice/HandleTypeColor/HandleTypeColorSelectors.ts","components/Workspace/FlowChart/FlowChartNode/LinerProgressWithLabel.tsx","store/slice/FileUploader/FileUploaderInitlalState.ts","store/slice/FileUploader/FileUploaderSelectors.ts","store/slice/FileUploader/FileUploaderHook.ts","components/Workspace/FlowChart/DialogContext.tsx","components/Workspace/FlowChart/FlowChartNode/FileSelect.tsx","components/Workspace/FlowChart/FlowChartNode/FlowChartUtils.ts","components/Workspace/FlowChart/FlowChartNode/ImageFileNode.tsx","components/Workspace/FlowChart/FlowChartNode/AlgorithmNode.tsx","store/slice/InputNode/InputNodeSlice.ts","components/Workspace/Visualize/DataContext.tsx","components/Workspace/Visualize/Plot/CsvPlot.tsx","components/Workspace/FlowChart/FlowChartNode/CsvFileNode.tsx","store/slice/HDF5/HDF5Selectors.ts","api/hdf5/HDF5.ts","store/slice/HDF5/HDF5Type.ts","store/slice/HDF5/HDF5Action.ts","components/Workspace/FlowChart/FlowChartNode/HDF5FileNode.tsx","components/Workspace/FlowChart/FlowChartNode/FluoFileNode.tsx","components/Workspace/FlowChart/FlowChartNode/BehaviorFileNode.tsx","components/Workspace/FlowChart/FlowChartNode/ReactFlowNodeTypesConst.ts","components/Workspace/FlowChart/CustomEdge.tsx","components/Workspace/Visualize/Plot/HeatMapPlot.tsx","components/Workspace/Visualize/Plot/ImagePlot.tsx","components/Workspace/Visualize/Plot/RoiPlot.tsx","components/Workspace/Visualize/Plot/ScatterPlot.tsx","components/Workspace/Visualize/Plot/TimeSeriesPlot.tsx","components/Workspace/Visualize/Plot/BarPlot.tsx","components/Workspace/Visualize/Plot/HTMLPlot.tsx","components/Workspace/Visualize/Plot/HistogramPlot.tsx","components/Workspace/Visualize/Plot/LinePlot.tsx","components/Workspace/Visualize/Plot/PiePlot.tsx","components/Workspace/Visualize/Plot/PolarPlot.tsx","components/Workspace/Visualize/DisplayDataItem.tsx","components/Workspace/FlowChart/FlowChartNode/AlgorithmOutputDialog.tsx","store/slice/FilesTree/FilesTreeSelectors.ts","store/slice/FilesTree/FilesTreeType.ts","store/slice/FilesTree/FilesTreeAction.ts","store/slice/FilesTree/FilesTreeUtils.ts","components/common/FileSelectDialog.tsx","components/Workspace/FlowChart/ReactFlowComponent.tsx","store/slice/RightDrawer/RightDrawerSelectors.ts","store/slice/AlgorithmNode/AlgorithmNodeType.ts","store/slice/AlgorithmNode/AlgorithmNodeActions.ts","store/slice/AlgorithmNode/AlgorithmNodeSlice.ts","components/Workspace/FlowChart/AlgorithmParamForm.tsx","components/Workspace/FlowChart/RightDrawer.tsx","components/common/CurrentPipelineInfo.tsx","components/Workspace/FlowChart/FlowChart.tsx","components/Workspace/Visualize/VisualizeItemAddButton.tsx","components/utils/MouseDragUtil.ts","components/Workspace/Visualize/VisualizeItemLayoutMenuIcon.tsx","components/Workspace/Visualize/FilePathSelect.tsx","components/Workspace/Visualize/VisualizeItem.tsx","components/Workspace/Visualize/FlexItemList.tsx","components/Workspace/Visualize/Editor/GradientColorPicker.tsx","components/Workspace/Visualize/Editor/SaveFig.tsx","components/Workspace/Visualize/Editor/ImageItemEditor.tsx","components/Workspace/Visualize/Editor/CsvItemEditor.tsx","components/Workspace/Visualize/Editor/HeatmapItemEditor.tsx","components/Workspace/Visualize/Editor/TimeSeriesItemEditor.tsx","components/Workspace/Visualize/Editor/RoiItemEditor.tsx","components/Workspace/Visualize/Editor/ScatterItemEditor.tsx","components/Workspace/Visualize/Editor/BarItemEditor.tsx","components/Workspace/Visualize/Editor/HistogramItemEditor.tsx","components/Workspace/Visualize/Editor/LineItemEditor.tsx","components/Workspace/Visualize/Editor/PieItemEditor.tsx","components/Workspace/Visualize/Editor/PolarItemEditor.tsx","components/Workspace/Visualize/VisualizeItemEditor.tsx","components/Workspace/Visualize/Visualize.tsx","pages/Workspace/Workspace.tsx","store/slice/Pipeline/PipelineHook.ts","const/Mode.ts","App.tsx","reportWebVitals.ts","store/slice/AlgorithmList/AlgorithmListSlice.ts","store/slice/DisplayData/DisplayDataSlice.ts","store/slice/FileUploader/FileUploaderSlice.ts","store/slice/FilesTree/FilesTreeSlice.ts","store/slice/HandleTypeColor/HandleTypeColorSlice.ts","store/slice/HDF5/HDF5Utils.ts","store/slice/HDF5/HDF5Slice.ts","store/store.ts","Theme.ts","index.tsx"],"names":["ROLE","SHARE","saveToken","access_token","localStorage","setItem","getToken","getItem","logout","removeItem","removeToken","removeExToken","window","location","href","selectCurrentUser","state","user","currentUser","isAdmin","ADMIN","role_id","USER_SLICE_NAME","loginApi","data","a","axios","post","response","refreshTokenApi","refresh_token","HOST","process","PORT","BASE_URL","axiosLibrary","create","baseURL","timeout","interceptors","request","use","config","headers","Authorization","ExToken","error","Promise","reject","res","status","getMeApi","get","updateMeApi","put","updateMePasswordApi","deleteMeApi","delete","createUserApi","listUsersApi","paramsNew","qs","stringify","indices","updateUserApi","id","deleteUserApi","getListSearchApi","keyword","login","createAsyncThunk","thunkAPI","responseData","rejectWithValue","getMe","_","updateMe","dispatch","deleteMe","updateMePassword","getListUser","params","getListSearch","createUser","props","updateUser","deleteUser","Tooltips","Tooltip","title","IconButton","sx","mr","target","selectActiveTab","workspace","currentWorkspace","selectedTab","selectCurrentWorkspaceId","workspaceId","selectIsWorkspaceOwner","WORKSPACE_SLICE_NAME","WORKFLOW_SLICE_NAME","reproduceWorkflowApi","uid","downloadWorkflowConfigApi","responseType","importWorkflowConfigApi","formData","reproduceWorkflow","importWorkflowConfig","getWorkspaceApi","getWorkspacesApi","delWorkspaceApi","postWorkspaceApi","putWorkspaceApi","name","getListUserShareWorkspaceApi","postListUserShareWorkspaceApi","getWorkspace","getWorkspaceList","delWorkspace","Number","postWorkspace","putWorkspace","getListUserShareWorkSpaces","postListUserShareWorkspaces","initialState","items","total","limit","offset","loading","listUserShare","undefined","workspaceSlice","createSlice","reducers","setActiveTab","action","payload","setCurrentWorkspace","clearCurrentWorkspace","extraReducers","builder","addCase","fulfilled","meta","arg","ownerId","addMatcher","isAnyOf","rejected","pending","actions","a11yProps","index","WorkspaceTabs","useDispatch","activeTab","useSelector","Tabs","width","value","onChange","event","newValue","centered","textColor","Tab","label","listUserSearch","listUser","userSlice","resetUserSearch","ex_token","CONTENT_HEIGHT","StandaloneHeader","StyledAppBar","Toolbar","Box","display","flexGrow","src","Logo","alt","height","styled","MuiAppBar","position","backgroundColor","color","Header","Typography","fontWeight","fontSize","handleDrawerOpen","LeftMenu","open","handleDrawerClose","navigate","useNavigate","admin","Drawer","anchor","onClose","List","ListItem","disablePadding","ListItemButton","onClick","ListItemIcon","ListItemText","primary","LoaderWrapper","theme","top","bottom","left","right","zIndex","rotate","keyframes","prixClipFix","Loader","borderRadius","animation","content","boxSizing","inset","border","Loading","AuthedLayout","children","useState","setOpen","LayoutWrapper","ContentBodyWrapper","ChildrenWrapper","paddingTop","paddingRight","overflow","shouldForwardProp","prop","padding","spacing","transition","transitions","easing","sharp","duration","leavingScreen","Layout","useLocation","useEffect","pathname","Link","textDecoration","alignItems","justifyContent","flexWrap","gap","textAlign","transform","marginTop","borderColor","marginBottom","outline","minHeight","lineHeight","wordBreak","margin","Button","marginLeft","maxWidth","minWidth","Select","cursor","userSelect","marginRight","button","boxShadow","Dialog","background","borderBottomLeftRadius","borderBottomRightRadius","maxHeight","listStyle","getChildParam","path","ParamMap","result","Object","values","node","isParamChild","param","type","convertToParamMap","dto","keyList","entries","forEach","kList","Array","isArray","isDictObject","concat","join","push","selectAlgorithmNodeById","nodeId","algorithmNode","selectAlgorithmName","selectAlgorithmParams","selectAlgorithmNodeNotExist","keys","selectAlgorithmNode","length","selectFlowNodes","flowElement","flowNodes","selectFlowEdges","flowEdges","selectFlowPosition","flowPosition","selectNodeById","find","selectNodeLabelById","FLOW_ELEMENT_SLICE_NAME","NODE_TYPE_SET","isNodeData","isNode","isAlgorithmNodeData","getLabelByPath","filePath","getFileName","split","reverse","selectNwb","nwb","selectNwbParamsKeyList","selectNwbParam","paramKey","selectNwbParamsValue","Error","PIPELINE_SLICE_NAME","RUN_STATUS","NODE_RESULT_STATUS","RUN_BTN_OPTIONS","RUN_NEW","RUN_ALREADY","RUN_BTN_LABELS","DISPLAY_DATA_SLICE_NAME","DATA_TYPE_SET","toDataType","isNodeResultPending","nodeResult","isNodeResultSuccess","isStartedPipeline","pipeline","getInitialRunResult","runPostData","initialResult","nodeDict","filter","convertToRunResult","nodeResultDto","outputPath","outputPaths","message","convertToOutputPath","functionPath","selectPipelineLatestUid","currentPipeline","selectStartedPipeline","run","selectPipelineRunBtn","runBtn","selectRunResultPendingNodeIdList","runResult","map","isNodeResultPendingAndNodeId","selectPipelineStatus","selectPipelineIsCanceled","selectPipelineIsStartedSuccess","isNodeResultSuccessAndNodeId","selectPipelineNodeResultStatus","includes","selectPipelineNodeResultOutputPaths","selectSnakemakeParams","snakemake","selectSnakemake","selectSnakemakeParamsKeyList","selectSnakemakeParam","selectSnakemakeParamsValue","INPUT_NODE_SLICE_NAME","FILE_TYPE_SET","isCsvInputNode","inputNode","fileType","isHDF5InputNode","selectInputNodeById","selectInputNodeDefined","selectCsvInputNodeSelectedFilePath","selectedFilePath","selectImageInputNodeSelectedFilePath","selectHDF5InputNodeSelectedFilePath","selectFilePathIsUndefined","hdf5Path","selectCsvInputNodeParam","selectInputNodeHDF5Path","item","selectRunPostData","nwbParam","selectNwbParams","snakemakeParam","edgeDict","selectEdgeDictForRun","selectNodeDictForRun","forceRunList","selectForceRunList","isUpdated","nodes","algorithmNodePostData","selectInputNodeSelectedFilePath","selectInputNodeFileType","selectInputNodeParam","inputNodePosyData","edge","runApi","runByUidApi","pendingNodeIdList","cancelResultApi","getState","runByCurrentUid","currentUid","pollRunResult","cancelResult","getExperimentsApi","deleteExperimentByUidApi","deleteExperimentByListApi","uidList","downloadExperimentNwbApi","downloadExperimentConfigApi","fetchExperimentApi","workspace_id","renameExperiment","new_name","patch","EXPERIMENTS_SLICE_NAME","getExperiments","deleteExperimentByUid","deleteExperimentByList","fetchExperiment","convertToExperimentType","functions","function","convertToExperimentStatus","success","unique_id","hasNWB","timestamp","started_at","frameRate","imaging_plane","imaging_rate","convertFunctionsToRunResultDTO","experimentsSlice","clearExperiments","experimentList","convertToExperimentListType","v","selectExperiments","experiments","selectExperimentsStatusIsUninitialized","selectExperimentsStatusIsFulfilled","selectExperimentsStatusIsError","selectExperimentsErrorMessage","selectExperimentList","selectExperiment","selectExperimentName","selectExperimentFunction","selectFrameRate","currentPipelineUid","ExperimentStatusIcon","React","memo","arrayEqualityFn","b","every","i","twoDimarrayEqualityFn","NWBDownloadButton","useContext","ExperimentUidContext","ref","useRef","url","setFileUrl","enqueueSnackbar","useSnackbar","URL","createObjectURL","Blob","current","click","revokeObjectURL","variant","disabled","download","className","SnakemakeDownloadButton","WorkflowDownloadButton","CollapsibleTable","TableRow","TableCell","paddingBottom","colSpan","Collapse","in","unmountOnExit","gutterBottom","component","Table","size","Head","Body","TableHead","nodeIdList","selectExperimentFunctionNodeIdList","TableBody","TableRowOfFunction","selectExperimentFunctionName","selectExperimentFunctionStatus","selectExperimentFunctionHasNWB","scope","pipelineSlice","setRunBtnOption","runBtnOption","clearCurrentPipeline","DeleteButton","isRunning","isPending","DialogTitle","DialogActions","autoFocus","getTimeSeriesInitDataApi","getTimeSeriesDataByIdApi","getTimeSeriesAllDataApi","getHeatMapDataApi","getImageDataApi","start_index","startIndex","end_index","endIndex","getCsvDataApi","getRoiDataApi","getScatterDataApi","getBarDataApi","getHTMLDataApi","addRoiApi","mergeRoiApi","deleteRoiApi","getLineDataApi","getPolarDataApi","getHistogramDataApi","getPieDataApi","getTimeSeriesInitData","getTimeSeriesDataById","getTimeSeriesAllData","getHeatMapData","getImageData","getCsvData","getRoiData","getScatterData","getBarData","getHTMLData","getHistogramData","getLineData","getPieData","getPolarData","selectDisplayData","displayData","selectTimeSeriesData","timeSeries","selectTimeSeriesDataIsInitialized","selectHeatMapDataIsInitialized","heatMap","selectImageData","image","selectImageDataIsInitialized","selectImageDataIsPending","selectCsvDataIsInitialized","csv","selectCsvDataError","selectCsvDataIsPending","selectCsvDataIsFulfilled","selectRoiData","roi","selectRoiDataIsInitialized","selectRoiDataIsFulfilled","selectScatterDataIsInitialized","scatter","selectBarDataIsInitialized","bar","selectHTMLDataIsInitialized","html","selectHistogramDataIsInitialized","histogram","selectLineDataIsInitialized","line","selectPieDataIsInitialized","pie","selectPolarDataIsInitialized","polar","VISUALIZE_ITEM_SLICE_NAME","VISUALIZE_ITEM_TYPE_SET","isDisplayDataItem","itemType","isImageItem","dataType","isTimeSeriesItem","isCsvItem","isHeatMapItem","isScatterItem","isBarItem","isHistogramItem","isLineItem","isPolarItem","selectSelectedVisualizeItemId","visualaizeItem","selectedItemId","selectVisualizeImageItemIdList","itemId","selectVisualizeItemById","isWorkflowDialog","selectVisualizeItems","selectVisualizeItemLayout","layout","selectVisualizeItemWidth","selectVisualizeItemHeight","selectVisualizeDataType","selectVisualizeDataNodeId","selectVisualizeDataFilePath","selectVisualizeSaveFilename","saveFileName","selectVisualizeSaveFormat","saveFormat","selectImageItemFilePath","selectTimeSeriesItemFilePath","selectRoiItemFilePath","roiItem","selectImageItemShowticklabels","showticklabels","selectImageItemZsmooth","zsmooth","selectImageItemStartIndex","selectImageItemEndIndex","selectImageItemShowLine","showline","selectImageItemShowGrid","showgrid","selectImageItemShowScale","showscale","selectImageItemColors","colors","selectImageItemAlpha","alpha","selectImageItemRoiAlpha","roiAlpha","selectTimeSeriesItemOffset","selectTimeSeriesItemSpan","span","selectTimeSeriesItemShowGrid","selectTimeSeriesItemShowLine","selectTimeSeriesItemShowTickLabels","selectTimeSeriesItemZeroLine","zeroline","selectTimeSeriesItemXrange","xrange","selectTimeSeriesItemDrawOrderList","drawOrderList","selectTimeSeriesItemRefRoiUniqueList","refImageItemId","imageItem","roiUniqueList","selectTimeSeriesItemKeys","dataKeys","key","selectRoiItemMaxNumber","roiFilePath","roiData","Math","max","arr","selectHeatMapItemShowScale","selectHeatMapItemColors","selectCsvItemTranspose","transpose","selectCsvItemSetHeader","setHeader","selectCsvItemSetIndex","setIndex","selectBarItemIndex","selectScatterItemXIndex","xIndex","selectScatterItemYIndex","yIndex","selectDisplayDataIsSingle","targetFilePath","selectHistogramItemBins","bins","selectLineItemSelectedIndex","selectedIndex","selectPolarItemSelectedIndex","selectImageItemRangeUnit","rangeUnit","setImageItemClikedDataId","clickedDataId","selectingImageArea","range","x","y","round","x1","x2","y1","y2","selectedZList","z","zNum","String","selectedZ","deleteDisplayItem","createAction","setNewDisplayDataPath","displayDataCommonInitialValue","imageItemInitialValue","rgb","activeIndex","timeSeriesItemInitialValue","maxIndex","heatMapItemInitialValue","csvItemInitialValue","roiItemInitialValue","scatterItemInitialValue","barItemInitialValue","hdf5ItemInitialValue","htmlItemInitialValue","fluoItemInitialValue","behaviorItemInitialValue","histogramItemInitialValue","lineItemInitialValue","pieItemInitialValue","polarItemInitialValue","getDisplayDataItemInitialValue","visualaizeItemSlice","changeRangeUnit","targetItem","pushInitialItemToNewRow","newItemId","addInitialItemFn","insertInitialItemToNextColumn","targetItemId","targetRowIndex","findIndex","row","targetColumnIndex","indexOf","splice","addItemForWorkflowDialog","maxId","getMaxItemId","deleteAllItemForWorkflowDialog","setItemSize","selectItem","reset","setRoiItemFilePath","outputKey","setFilePath","setSaveFormat","setSaveFileName","setImageItemFilePath","setTimeSeriesItemFilePath","setHeatMapItemFilePath","resetImageActiveIndex","resetImageActiveIndexFn","incrementImageActiveIndex","decrementImageActiveIndex","setImageActiveIndex","setImageItemShowticklabels","setImageItemZsmooth","setImageItemShowLine","setImageItemShowGrid","setImageItemShowScale","setImageItemColors","setImageItemStartIndex","setImageItemEndIndex","setImageItemAlpha","setImageItemRoiAlpha","setImageItemDuration","setTimeSeriesItemOffset","setTimeSeriesItemSpan","setTimeSeriesItemShowGrid","setTimeSeriesItemShowLine","setTimeSeriesItemShowTickLabels","setTimeSeriesItemZeroLine","setTimeSeriesItemXrangeLeft","setTimeSeriesItemXrangeRight","setTimeSeriesItemDrawOrderList","resetAllOrderList","setTimeSeriesItemMaxIndex","setTimeSeriesRefImageItemId","setHeatMapItemShowScale","setHeatMapItemColors","setCsvItemTranspose","setCsvItemSetHeader","setCsvItemSetIndex","setScatterItemXIndex","setScatterItemYIndex","setBarItemIndex","setHistogramItemBins","setLineItemSelectedIndex","setPolartemItemSelectedIndex","imageItemId","idList","reduce","nextId","args","ReproduceButton","unwrap","then","catch","createContext","ExperimentTable","isUninitialized","isFulfilled","isError","TableImple","ExperimentsErrorView","Alert","severity","AlertTitle","isOwner","experimentListValues","experimentListKeys","order","setOrder","sortTarget","setSortTarget","checkedList","setCheckedList","onCheckBoxClick","recordsIsEmpty","page","setPage","storageKey","initialValue","parseFn","savedStr","JSON","parse","setValue","useLocalStorage","valueNum","isNaN","rowsPerPage","setRowsPerPage","emptyRows","flexDirection","m","endIcon","Paper","elevation","flexGlow","TableContainer","HeadItem","sortHandler","property","allCheckIndeterminate","allChecked","onChangeAllCheck","checked","experiment","checkboxVisible","sort","getComparator","slice","expData","Provider","RowItem","style","palette","text","secondary","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","Checkbox","visibility","indeterminate","e","TableSortLabel","active","direction","selectExperimentTimeStamp","statusList","f","selectExperimentStatus","selectExperimentHasNWB","isEdit","setEdit","errorEdit","setErrorEdit","valueEdit","setValueEdit","onSaveNewName","Fragment","borderBottom","tableCellClasses","root","borderBottomWidth","prevOpen","preventDefault","placeholder","trim","onBlur","setTimeout","Input","TextError","orderBy","descendingComparator","Experiment","isAlgoChild","algoNode","getAlgoChild","algoList","algoName","convertToAlgoListType","prototype","hasOwnProperty","call","returns","selectAlgorithmList","algorithmList","selectAlgorithmListIsLated","isLatest","selectAlgorithmListTree","tree","ALGORITHM_LIST_SLICE_NAME","getAlgoListApi","getAlgoList","getAlgoParamsApi","addAlgorithmNode","addInputNode","nanoid","customAlphabet","getNanoId","INITIAL_IMAGE_ELEMENT_ID","INITIAL_ALGO_STYLE","INITIAL_DATA_STYLE","REACT_FLOW_NODE_TYPE_KEY","DND_ITEM_TYPE_SET","AlgorithmTreeView","onAddAlgoNode","useCallback","nodeName","newNode","TreeView","defaultCollapseIcon","defaultExpandIcon","TreeItem","InputNodeComponent","fileName","AlgoNodeComponentRecursive","toFixed","onAddDataNode","nodeType","reactFlowNodeType","useLeafItemDrag","isDragging","dragRef","LeafItem","opacity","onFocusCapture","stopPropagation","AddButton","AlgoNodeComponent","textOverflow","treeItemClasses","iconContainer","onDragEnd","useDrag","end","monitor","getDropResult","didDrop","collect","setInputNodeFilePath","isInputNodePostData","isInputNodeData","isAlgorithmNodePostData","FILE_TREE_TYPE_SET","getFilesTreeApi","file_type","uploadFileApi","FILE_UPLOADER_SLICE_NAME","setUploadProgress","uploadFile","requestId","getUploadConfig","percent","progess","resultPath","file_path","onUpdateProgressFn","onUploadProgress","progressEvent","percentCompleted","loaded","initialFlowPosition","initialElementCoord","elementCoord","flowElementSlice","setFlowPosition","setFlowNodes","setFlowEdges","deleteFlowNodes","applyNodeChanges","setNodesChange","setEdgesChange","applyEdgeChanges","deleteFlowEdgeById","element","deleteFlowNodeById","source","editFlowNodePositionById","coord","elementIdx","targetPosition","Position","Left","sourcePosition","Right","updateElementCoord","nodeIdx","targetNode","min","random","getNWBParamsApi","getNWBParams","nwbSlice","updateParam","RIGHT_DRAWER_MODE","mode","currendNodeId","rightDrawerSlice","openRightDrawer","closeRightDrawer","toggleParamForm","toggleNwb","toggleSnakemake","elm","Accordion","disableGutters","square","divider","createParamFormItemComponent","paramSelector","paramValueSelector","paramUpdateActionCreator","useParamValueUpdate","ParamItemForString","updateParamAction","TextField","multiline","Boolean","ParamItemForNumber","InputLabelProps","shrink","ParamItemForBoolean","Switch","ParamItemForValueType","ParamChildItem","verticalAlign","ParamItem","AccordionSummary","expandIcon","AccordionDetails","NWBSettingButton","NWBSettingContents","paramKeyList","Component","getSnakemakeParamsApi","SNAKEMAKE_SLICE_NAME","getSnakemakeParams","SnakemakeSlice","SnakemakeButton","SnakemakeContents","RunButtons","runDisabled","filePathIsUndefined","algorithmNodeNotExist","handleCancelPipeline","handleRunPipeline","handleRunPipelineByUid","isStartedSuccess","dialogOpen","setDialogOpen","menuOpen","setMenuOpen","anchorRef","handleClose","contains","uidExists","ButtonGroup","errorMessage","Popper","anchorEl","role","disablePortal","TransitionProps","placement","Grow","transformOrigin","ClickAwayListener","onClickAway","MenuList","option","MenuItem","selected","handleMenuItemClick","RunDialog","handleRun","setName","setError","DialogContent","fullWidth","helperText","ImportWorkflowConfigButton","inputRef","UploadFile","hidden","accept","files","file","FormData","append","ToolBar","float","textTransform","useHandleColor","handleColor","colorMap","LinearProgressWithLabel","LinearProgress","inistialUploaderState","uploadingProgress","selectFileUploader","fileUploader","useFileUploader","onUploadFile","uninitialized","selectFileUploadIsUninitialized","selectUploadFilePath","selectFileUploadIsPending","selectFileUploadIsFulfilled","progress","selectFileUploadProgress","selectFileUploadError","DialogContext","onOpen","onOpenDialogFile","onMessageError","FileSelect","multiSelect","onChangeFilePath","FileSelectImple","onSelectFile","fileTreeType","selectButtonLabel","uploadButtonLabel","getFileInputAccept","toHandleId","getHandleType","handleId","isValidConnection","connection","sourceHandle","targetHandle","sourceHandleStyle","ImageFileNode","ImageFileNodeImple","elementSelected","useTheme","returnType","imageColor","light","leftHandleStyle","rightHandleStyle","AlgorithmNode","AlgorithmNodeImple","isConnectable","useStatus","tabIndex","AlgoName","mx","AlgoArgs","AlgoReturns","Message","pipelineStatus","paddingLeft","main","algoArgs","algoListChild","selectAlgoArgs","algoInfoListEqualtyFn","info","algoInfo","ArgHandle","algoReturns","selectAlgoReturns","ReturnHandle","isNone","hex_color","isHover","setHover","rgb_color","hex","exec","hexToRgb","onMouseEnter","onMouseLeave","arrow","latestUid","errorMsg","selectPipelineNodeResultMessage","anchorElRef","inputNodeSlice","deleteInputNode","setCsvInputNodeParam","setInputNodeHDF5Path","newState","DisplayDataContext","NaN","CsvPlot","isInitialized","CsvPlotImple","PresentationalCsvPlot","csvData","useMemo","col","header","headerData","field","headerName","idx","rows","row_id","rowObj","fromEntries","DataGrid","columns","CsvFileNode","CsvFileNodeImple","ParamSettingDialog","selectCsvInputNodeParamSetHeader","setSetHeader","selectCsvInputNodeParamSetIndex","setSetIndex","selectCsvInputNodeParamTranspose","setTranspose","dividers","p","FormControlLabel","control","CsvPreview","otherProps","selectHDF5","hdf5","getHDF5TreeApi","HDF5_SLICE_NAME","getHDF5Tree","HDF5FileNode","HDF5FileNodeImple","ItemSelect","structureFileName","Structure","FileTreeView","isLoading","useHDF5Tree","TreeNode","isDir","icon","htmlColor","childNode","shape","nbytes","FluoFileNode","FluoFileNodeImple","fluoColor","BehaviorFileNode","BehaviorFileNodeImple","behaviorColor","reactFlowNodeTypes","reactFlowEdgeTypes","buttonedge","sourceX","sourceY","targetX","targetY","markerEnd","edgePath","getBezierPath","getEdgeCenter","edgeCenterX","edgeCenterY","d","foreignObjectSize","HeatMapPlot","selectHeatMapDataError","selectHeatMapDataIsFulfilled","HeatMapImple","heatMapData","heatMapDataEqualtyFn","selectHeatMapColumns","selectHeatMapIndex","colorscale","parseFloat","offsets","hoverongaps","showlegend","dragmode","t","l","autosize","displayModeBar","responsive","toImageButtonOptions","format","filename","PositionDrag","initSizeDrag","floor","sChart","ImagePlot","selectImageDataError","ImagePlotImple","selectImageItemActiveIndex","ImagePlotChart","imageData","selectActiveImageData","imageDataEqualtyFn","isAddRoi","setIsAddRoi","loadingApi","setLoadingApi","roiDataState","setRoiDataState","pointClick","setPointClick","itemsVisual","timeDataMaxIndex","maxIdx","selectRoiItemIndex","sizeDrag","setSizeDrag","startDragAddRoi","setStartDragAddRoi","positionDrag","setChangeSize","selectRoiItemOutputKeys","refPageXSize","refPageYSize","colorscaleRoi","createColormap","colormap","nshades","onCancel","onCancelAdd","rgba2hex","replace","hovertemplate","new_i","zmin","zmax","selectMode","setSelectMode","onSelecting","callback","timeoutId","delay","clearTimeout","debounce","xaxis","autorange","autotick","ticks","yaxis","automargin","setSelectRoi","point","newPoints","newRoi","some","addRoi","onMouseUpDragAddRoi","onMouseDownSize","pageX","pageY","addRoiSubmit","sizeX","sizeY","xAdd","yAdd","pointCenter","posx","posy","sizex","sizey","resetTimeSeries","onMergeRoi","ids","onDeleteRoi","mt","PlayBack","ml","BoxDiv","LinkDiv","points","curveNumber","toString","DivAddRoi","DivSvg","onMouseMove","newSizeDrag","currentTarget","getBoundingClientRect","newX","newY","ceil","scrollY","LEFT","newWidth","newLeft","RIGHT","BOTTOM","newHeight","TOP","newTop","onMouseUp","DivDrag","DragCenter","onMouseDown","DragSizeLeft","DragSizeRight","DragSizeTop","DragSizeBottom","maxSize","selectImageItemDuration","intervalRef","clearInterval","onPlayClick","setInterval","onDurationChange","inputProps","step","Slider","defaultValue","valueLabelDisplay","marks","activeThumb","newIndex","rgba","r","g","outParts","substring","part","DragSize","RoiPlot","selectRoiDataError","RoiPlotImple","ScatterPlot","selectScatterDataError","selectScatterDataIsFulfilled","ScatterPlotImple","scatterData","scatterDataEqualityFn","textposition","textfont","family","marker","font","XIndex","YIndex","FormControl","InputLabel","aArray","bArray","aKey","TimeSeriesPlot","selectTimeSeriesDataError","selectTimeSeriesDataIsFulfilled","TimeSeriesPlotImple","timeSeriesData","timeSeriesDataEqualityFn","dataXrange","dataStd","std","selectTimeSeriesStd","newDataXrange","setNewDataXrange","newTimeSeriesData","setNewTimeSeriesData","seriesData","newSeriesData","keyTime","newKeyTime","colorScale","activeIdx","mean","sqrt","pow","visible","error_y","array","annotations","xref","yref","arrowhead","ax","ay","titlefont","tickfont","onLegendClick","clickNumber","newDrawOrderList","aValue","bKey","bValue","nestEqualityFun","BarPlot","selectBarDataError","selectBarDataIsFulfilled","BarPlotImple","barData","barDataEqualityFn","selectBarIndex","SelectIndex","HTMLPlot","selectHTMLDataError","selectHTMLDataIsFulfilled","HTMLPlotImple","htmlData","dangerouslySetInnerHTML","__html","HistogramPlot","selectHistogramDataError","selectHistogramDataIsFulfilled","HistogramPlotImple","histogramData","autobinx","xbins","InputBins","LinePlot","selectLineDataError","selectLineDataIsFulfilled","LinePlotImple","lineData","selectLineColumns","selectLineIndex","tickvals","LineItemIndexSelect","PiePlot","selectPieDataError","selectPieDataIsFulfilled","PiePlotImple","pieData","selectPieColumns","labels","PolarPlot","selectPolarDataError","selectPolarDataIsFulfilled","PolarPlotImple","polarData","selectPolarColumns","selectPolarIndex","theta","PolarItemIndexSelect","DisplayDataItem","DisplayPlot","AlgorithmOutputDialog","closeFn","TitleWithCloseButton","pt","px","OutputViewer","outputKeyList","selectPipelineNodeResultOutputKeyList","selectedOutoutKey","setSelectedOutputKey","OutputSelectTabs","onSelectOutput","DisplayDataView","scrollButtons","tabsClasses","selectPipelineNodeResultOutputFilePath","selectPipelineNodeResultOutputFileDataType","selectVisualizeItemIdForWorkflowDialog","my","selectFilesTree","filesTree","FILES_TREE_SLICE_NAME","getFilesTree","convertToTreeNodeType","isdir","getNodeByPath","FileSelectDialog","initialFilePath","onClickCancel","onClickOk","setSelectedFilePath","FilePathSelectedListView","selectFilesTreeNodes","selectFilesIsLatest","selectFilesIsLoading","useFileTree","onCheckFile","selectedPath","onCheckDir","childrenFilePathList","from","Set","disableSelection","onNodeSelect","nodeIds","isDirNodeByPath","allNotChecked","TreeItemLabel","checkboxProps","disableRipple","initDialogFile","ReactFlowComponent","dialogNodeId","setDialogNodeId","dialogFile","setDialogFile","messageError","setMessageError","reactFlowInstance","setReactFlowInstance","wrapparRef","useDrop","drop","monitorOffset","getClientOffset","project","offsetLeft","offsetTop","edges","onNodesChange","changes","onEdgesChange","onConnect","addEdge","animated","onInit","onDragOver","dataTransfer","dropEffect","onNodeDragStop","nodeTypes","edgeTypes","defaultPosition","defaultZoom","onMoveEnd","viewport","zoom","Popover","anchorOrigin","vertical","horizontal","FormHelperText","selectRightDrawerIsOpen","rightDrawer","selectRightDrawerMode","selectRightDrawerCurrentNodeId","ALGORITHM_NODE_SLICE_NAME","getAlgoParams","algorithmNodeSlice","AlgorithmParamForm","ParamFormContext","algoParamIsLoaded","selectAlgorithmParamsExit","selectAlgorithmParamsKeyList","selectAlgorithmParam","selectAlgorithmParamsValue","Contents","ParamFormConetent","StyledDrawer","flexShrink","drawerClasses","paper","MainContents","RightDrawer","Divider","CurrentPipelineInfo","isFulFilled","Grid","container","paddingX","ExperimentUidInfo","ExperimentNameInfo","LabelValueGridRow","xs","FlowChart","RootDiv","DndProvider","backend","HTML5Backend","borderRight","grey","DrawerContents","easeOut","enteringScreen","VisualizeItemAddButton","StyledPaper","StyledButton","borderWidth","useMouseDragHandler","dependencies","document","addEventListener","removeEventListener","once","DisplayDataItemLayoutMenuIcon","isSingleData","PresentationalLayoutMenuIcon","onClickDeleteMenu","deleteData","onClickInsertMenu","FilePathSelect","selectedNodeId","onSelect","inputNodeFilePathInfoList","inputNodes","selectInputNode","toDataTypeFromFileType","inputNodeDataType","algorithmNodeOutputPathInfoList","selectPipelineNodeResultSuccessList","paths","onSelectHandle","menuItemList","pathInfo","pathElm","ListSubheader","VisualizeItem","isSelected","movingSize","setMovingSize","onCommitSize","onMouseDownX","downEvent","movingX","screenX","movingWidth","moveEvent","MIN_WIDTH","onMouseDownY","movingY","screenY","movingHeight","MIN_HEIFHT","onMouseDownXY","useItemDragResize","ItemHeader","itemDataType","FilePathSelectItem","RefImageItemIdSelect","RoiSelect","newFilePath","newDataType","basePayload","prevDataType","prevFilePath","itemIdList","selectedRefImageItemId","selectTimeSeriesItemRefImageItemId","roiItemNodeId","selectRoiItemNodeId","roiItemFilePath","FlexItemList","GradientColorPicker","dispatchSetColor","maxStops","paletteHeight","onPaletteChange","colorCode","rgbStr","flatStyle","WrappedSketchPicker","c","SaveFig","SelectedItemIdContext","ImageItemEditor","newPath","onSelectImageFile","Showticklabels","ShowLine","ShowGrid","ShowScale","Zsmooth","Alpha","inputError","RoiAlpha","StartEndIndex","onChangeStartIndex","onChangeEndIndex","CsvItemEditor","Transpose","SetHeader","SetIndex","HeatmapItemEditor","TimeSeriesItemEditor","Offset","Span","ShowTickLabels","ZeroLine","SelectValue","onChangeValue","Xrange","xrangeSelector","setXrange","newRight","LegendSelect","handleChange","drawIndexMap","RoiItemEditor","ScatterItemEditor","BarItemEditor","HistogramItemEditor","LineItemEditor","PieItemEditor","PolarItemEditor","VisualizeItemEditor","DisplayDataItemEditor","DisplayEditor","StyledDrawerContents","Visualize","TabPanel","other","Workspace","runPipeline","appDispatch","useParams","_workspaceId","isCanceled","intervalId","prevStatus","setPrevStatus","useRunPipeline","SnackbarCloseButton","snackbarKey","closeSnackbar","App","maxSnack","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","algorithmListSlice","deleteDisplayDataFn","displayDataSlice","roi1Ddata","flat","roiUniqueIdList","n1","n2","fileUploaderSlice","setFileUploaderStateById","currentState","filesTreeSlice","ImageData","MuiColors","IscellData","TimeSeriesData","Suite2pData","FluoData","BehaviorData","nextKey","handleTypeColorSlice","HDF5Slice","rootReducer","combineReducers","algorithmListReducer","algorithmNodeReducer","displayDataReducer","fileUploaderReducer","flowElementReducer","inputNodeReducer","handleTypeColorReducer","filesTreeReducer","nwbReducer","rightDrawerReducer","visualaizeItemReducer","snakemakeReducer","pipelineReducer","hdf5Reducer","experimentsReducer","workspaceReducer","userReducer","store","configureStore","reducer","createTheme","components","MuiTextField","defaultProps","MuiSelect","MuiDialog","disableEscapeKeyDown","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.13a916af.chunk.js","sourcesContent":["export enum ROLE {\n  ADMIN = 1,\n  OPERATOR = 20,\n}\n\nexport const enum SHARE {\n  NOSHARE = 0,\n  ORGANIZATION = 2,\n  USERS = 1,\n}\n","export const saveToken = (access_token: string) => {\n  localStorage.setItem('access_token', access_token)\n}\n\nexport const getToken = () => {\n  return localStorage.getItem('access_token')\n}\n\nexport const saveRefreshToken = (refresh_token: string) => {\n  localStorage.setItem('refresh_token', refresh_token)\n}\n\nexport const getRefreshToken = () => {\n  return localStorage.getItem('refresh_token')\n}\n\nexport const removeRefreshToken = () => {\n  return localStorage.removeItem('refresh_token')\n}\n\nexport const logout = () => {\n  removeRefreshToken()\n  removeToken()\n  removeExToken()\n  window.location.href = '/login'\n}\n\nexport const removeToken = () => {\n  return localStorage.removeItem('access_token')\n}\n\nexport const saveExToken = (ExToken: string) => {\n  localStorage.setItem('ExToken', ExToken)\n}\n\nexport const getExToken = () => {\n  return localStorage.getItem('ExToken')\n}\n\nexport const removeExToken = () => {\n  return localStorage.removeItem('ExToken')\n}\n","import { ROLE } from '@types'\nimport { RootState } from 'store/store'\n\nexport const selectCurrentUser = (state: RootState) => state.user.currentUser\nexport const selectCurrentUserId = (state: RootState) =>\n  selectCurrentUser(state)?.id\nexport const selectListUser = (state: RootState) => state.user.listUser\nexport const selectLoading = (state: RootState) => state.user.loading\nexport const selectCurrentUserUid = (state: RootState) =>\n  selectCurrentUser(state)?.uid\nexport const selectCurrentUserEmail = (state: RootState) =>\n  selectCurrentUser(state)?.email\nexport const selectListSearch = (state: RootState) => state.user.listUserSearch\nexport const isAdmin = (state: RootState) => {\n  return state.user && ROLE.ADMIN === state.user.currentUser?.role_id\n}\n","import { UserListDTO, UserDTO } from 'api/users/UsersApiDTO'\n\nexport const USER_SLICE_NAME = 'user'\n\nexport type User = {\n  currentUser?: UserDTO\n  listUserSearch?: UserDTO[]\n  loading: boolean\n  listUser?: UserListDTO\n}\n","import axios from 'utils/axios'\nimport { getRefreshToken } from 'utils/auth/AuthUtils'\n\nexport type LoginDTO = {\n  email: string\n  password: string\n}\n\nexport type TokenDTO = {\n  access_token: string\n  token_type: string\n  refresh_token: string\n  ex_token: string\n}\nexport type AccessTokenDTO = {\n  access_token: string\n}\n\nexport const loginApi = async (data: LoginDTO): Promise<TokenDTO> => {\n  const response = await axios.post('/auth/login', data)\n  return response.data\n}\n\nexport const refreshTokenApi = async (): Promise<AccessTokenDTO> => {\n  const response = await axios.post('/auth/refresh', {\n    refresh_token: getRefreshToken(),\n  })\n  return response.data\n}\n\nexport const sendResetPasswordMailApi = async (\n  email: string,\n): Promise<string> => {\n  const response = await axios.post(\n    `/auth/send_reset_password_mail?email=${email}`,\n  )\n  return response.data\n}\n","const HOST = process.env.REACT_APP_SERVER_HOST\nconst PORT = process.env.REACT_APP_SERVER_PORT\n\nexport const BASE_URL = `http://${HOST}:${PORT}`\nexport const WS_BASE_URL = `ws://${HOST}:${PORT}`\n","import axiosLibrary from 'axios'\nimport { refreshTokenApi } from 'api/auth/Auth'\nimport { BASE_URL } from 'const/API'\nimport { getExToken, getToken, logout, saveToken } from 'utils/auth/AuthUtils'\n\nconst axios = axiosLibrary.create({\n  baseURL: BASE_URL,\n  timeout: 600000,\n})\n\naxios.interceptors.request.use(\n  async (config) => {\n    config.headers.Authorization = `Bearer ${getToken()}`\n    config.headers.ExToken = getExToken()\n    return config\n  },\n  (error) => Promise.reject(error),\n)\n\naxios.interceptors.response.use(\n  async (res) => res,\n  async (error) => {\n    if (error?.response?.status === 401) {\n      try {\n        const { access_token } = await refreshTokenApi()\n        saveToken(access_token)\n        error.config.headers.Authorization = `Bearer ${access_token}`\n        return axiosLibrary(error.config)\n      } catch (e: any) {\n        if (e?.response?.status === 400) {\n          logout()\n        }\n        throw e\n      }\n    }\n    return Promise.reject(error)\n  },\n)\n\nexport default axios\n","import axios from 'utils/axios'\nimport { UserDTO, UpdateUserDTO, UpdateUserPasswordDTO } from './UsersApiDTO'\n\nexport const getMeApi = async (): Promise<UserDTO> => {\n  const response = await axios.get('/users/me')\n  return response.data\n}\n\nexport const updateMeApi = async (data: UpdateUserDTO): Promise<UserDTO> => {\n  const response = await axios.put('/users/me', data)\n  return response.data\n}\n\nexport const updateMePasswordApi = async (\n  data: UpdateUserPasswordDTO,\n): Promise<UserDTO> => {\n  const response = await axios.put('/users/me/password', data)\n  return response.data\n}\n\nexport const deleteMeApi = async (): Promise<string> => {\n  const response = await axios.delete('/users/me')\n  return response.data\n}\n","import axios from 'utils/axios'\nimport {\n  AddUserDTO,\n  UserDTO,\n  ListUsersQueryDTO,\n  UpdateUserDTO,\n  UserListDTO,\n} from './UsersApiDTO'\nimport qs from 'qs'\n\nexport const createUserApi = async (data: AddUserDTO): Promise<UserDTO> => {\n  const response = await axios.post('/admin/users', data)\n  return response.data\n}\n\nexport const getUserApi = async (uid: string): Promise<UserDTO> => {\n  const response = await axios.get(`/admin/users/${uid}`)\n  return response.data\n}\n\nexport const listUsersApi = async (\n  data: ListUsersQueryDTO,\n): Promise<UserListDTO> => {\n  const paramsNew = qs.stringify(data, { indices: false })\n  const response = await axios.get(`/admin/users?${paramsNew}`)\n  return response.data\n}\n\nexport const updateUserApi = async (\n  id: number,\n  data: UpdateUserDTO,\n): Promise<UserDTO> => {\n  const response = await axios.put(`/admin/users/${id}`, data)\n  return response.data\n}\n\nexport const deleteUserApi = async (id: number): Promise<string> => {\n  const response = await axios.delete(`/admin/users/${id}`)\n  return response.data\n}\n\nexport const getListSearchApi = async (data: {\n  keyword: string | null\n}): Promise<UserDTO[]> => {\n  const response = await axios.get(\n    `/users/search/share_users${\n      data.keyword ? `?keyword=${data.keyword}` : ''\n    }`,\n  )\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { USER_SLICE_NAME } from './UserType'\nimport {\n  deleteMeApi,\n  getMeApi,\n  updateMeApi,\n  updateMePasswordApi,\n} from 'api/users/UsersMe'\nimport {\n  AddUserDTO,\n  ListUsersQueryDTO,\n  UpdateUserDTO,\n  UpdateUserPasswordDTO,\n  UserDTO,\n} from 'api/users/UsersApiDTO'\nimport { LoginDTO, loginApi } from 'api/auth/Auth'\nimport {\n  deleteUserApi,\n  createUserApi,\n  listUsersApi,\n  updateUserApi,\n} from 'api/users/UsersAdmin'\nimport { getListSearchApi } from 'api/users/UsersAdmin'\n\nexport const login = createAsyncThunk(\n  `${USER_SLICE_NAME}/login`,\n  async (data: LoginDTO, thunkAPI) => {\n    try {\n      const responseData = await loginApi(data)\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getMe = createAsyncThunk(\n  `${USER_SLICE_NAME}/getMe`,\n  async (_, thunkAPI) => {\n    try {\n      const responseData = await getMeApi()\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const updateMe = createAsyncThunk(\n  `${USER_SLICE_NAME}/updateMe`,\n  async (data: UpdateUserDTO, thunkAPI) => {\n    try {\n      const responseData = await updateMeApi(data)\n      await thunkAPI.dispatch(getMe())\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const deleteMe = createAsyncThunk(\n  `${USER_SLICE_NAME}/deleteMe`,\n  async (_, thunkAPI) => {\n    try {\n      const responseData = await deleteMeApi()\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const updateMePassword = createAsyncThunk(\n  `${USER_SLICE_NAME}/updateMePassword`,\n  async (data: UpdateUserPasswordDTO, thunkAPI) => {\n    try {\n      return await updateMePasswordApi(data)\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getListUser = createAsyncThunk(\n  `${USER_SLICE_NAME}/getListUser`,\n  async (params: ListUsersQueryDTO, thunkAPI) => {\n    try {\n      return await listUsersApi(params)\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getListSearch = createAsyncThunk<\n  UserDTO[],\n  { keyword: string | null }\n>(`${USER_SLICE_NAME}/getListSearch`, async (params, thunkAPI) => {\n  try {\n    const responseData = await getListSearchApi(params)\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const createUser = createAsyncThunk<\n  UserDTO,\n  { data: AddUserDTO; params: ListUsersQueryDTO }\n>(`${USER_SLICE_NAME}/createUser`, async (props, thunkAPI) => {\n  try {\n    const { dispatch } = thunkAPI\n    const responseData = await createUserApi(props.data)\n    await dispatch(getListUser(props.params))\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const updateUser = createAsyncThunk<\n  UserDTO,\n  { id: number; data: UpdateUserDTO; params: ListUsersQueryDTO }\n>(`${USER_SLICE_NAME}/updateUser`, async (props, thunkAPI) => {\n  const { dispatch } = thunkAPI\n  try {\n    const responseData = await updateUserApi(props.id, props.data)\n    await dispatch(getListUser(props.params))\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const deleteUser = createAsyncThunk<\n  string,\n  { id: number; params: ListUsersQueryDTO }\n>(`${USER_SLICE_NAME}/deleteUser`, async (data, thunkAPI) => {\n  const { dispatch } = thunkAPI\n  try {\n    const responseData = await deleteUserApi(data.id)\n    await dispatch(getListUser(data.params))\n    return responseData\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","export default __webpack_public_path__ + \"static/media/logo.e44efe32.png\";","import IconButton from '@mui/material/IconButton'\nimport GitHubIcon from '@mui/icons-material/GitHub'\nimport MenuBookIcon from '@mui/icons-material/MenuBook'\nimport { Tooltip } from '@mui/material'\n\n\nconst Tooltips: React.FC = () => {\n  return (\n    <>\n      <Tooltip title=\"GitHub repository\">\n        <IconButton\n          sx={{ mr: 1 }}\n          href=\"https://github.com/oist/optinist\"\n          target=\"_blank\"\n        >\n          <GitHubIcon />\n        </IconButton>\n      </Tooltip>\n      <Tooltip title=\"Documentation\">\n        <IconButton\n          href=\"https://optinist.readthedocs.io/en/latest/\"\n          target=\"_blank\"\n        >\n          <MenuBookIcon />\n        </IconButton>\n      </Tooltip>\n    </>\n  )\n}\n\nexport default Tooltips\n","import { IS_STANDALONE } from 'const/Mode'\nimport { RootState } from 'store/store'\n\nexport const selectWorkspace = (state: RootState) => state.workspace\nexport const selectWorkspaceListUserShare = (state: RootState) =>\n  state.workspace.listUserShare\nexport const selectWorkspaceData = (state: RootState) =>\n  state.workspace.workspace\n\nexport const selectWorkspaceItem =\n  (workspaceId: number) => (state: RootState) =>\n    selectWorkspaceData(state).items.find((item) => item.id === workspaceId)\n\nexport const selectActiveTab = (state: RootState) =>\n  state.workspace.currentWorkspace.selectedTab\n\nexport const selectCurrentWorkspaceId = (state: RootState) =>\n  state.workspace.currentWorkspace.workspaceId\n\nexport const selectCurrentWorkspaceOwnerId = (state: RootState) =>\n  state.workspace.currentWorkspace.ownerId\n\nexport const selectIsLoadingWorkspaceList = (state: RootState) =>\n  state.workspace.loading\n\nexport const selectIsWorkspaceOwner = (state: RootState) =>\n  IS_STANDALONE\n    ? true\n    : state.workspace.currentWorkspace.ownerId === state.user.currentUser?.id\n","import { UserDTO } from '../../../api/users/UsersApiDTO'\n\nexport const WORKSPACE_SLICE_NAME = 'workspace'\n\nexport type ItemsWorkspace = {\n  id: number\n  name: string\n  user: {\n    id: number\n    name: string\n    email: string\n    created_at: string\n    updated_at: string\n  }\n  created_at: string\n  updated_at: string\n}\n\nexport type WorkspaceDataDTO = {\n  items: ItemsWorkspace[]\n  total: number\n  limit: number\n  offset: number\n}\n\nexport type Workspace = {\n  workspace: WorkspaceDataDTO\n  currentWorkspace: {\n    workspaceId?: number\n    selectedTab: number\n    ownerId?: number\n  }\n  loading: boolean\n  listUserShare?: ListUserShareWorkspaceDTO\n}\n\nexport type ListUserShareWorkSpace = {\n  id: number\n  name: string\n  email: string\n  created_at: string\n  updated_at: string\n}\n\nexport type ListUserShareWorkspaceDTO = {\n  users: UserDTO[]\n}\n\nexport type WorkspaceParams = {\n  [key: string]: string | undefined | number | string[] | object\n}\n","export const WORKFLOW_SLICE_NAME = 'workflow'\n","import axios from 'utils/axios'\n\nimport { EdgeDict, NodeDict } from 'api/run/Run'\nimport { BASE_URL } from 'const/API'\n\nexport type WorkflowConfigDTO = {\n  nodeDict: NodeDict\n  edgeDict: EdgeDict\n}\n\nexport async function reproduceWorkflowApi(\n  workspaceId: number,\n  uid: string,\n): Promise<WorkflowConfigDTO> {\n  const response = await axios.get(\n    `${BASE_URL}/workflow/reproduce/${workspaceId}/${uid}`,\n  )\n  return response.data\n}\n\nexport async function downloadWorkflowConfigApi(\n  workspaceId: number,\n  uid: string,\n) {\n  const response = await axios.get(\n    `${BASE_URL}/workflow/download/${workspaceId}/${uid}`,\n    {\n      responseType: 'blob',\n    },\n  )\n  return response.data\n}\n\nexport async function importWorkflowConfigApi(\n  formData: FormData,\n): Promise<WorkflowConfigDTO> {\n  const response = await axios.post(`${BASE_URL}/workflow/import`, formData)\n  return response.data\n}\n","import { WORKFLOW_SLICE_NAME } from './WorkflowType'\nimport { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  reproduceWorkflowApi,\n  importWorkflowConfigApi,\n  WorkflowConfigDTO,\n} from 'api/workflow/Workflow'\n\nexport const reproduceWorkflow = createAsyncThunk<\n  WorkflowConfigDTO,\n  { workspaceId: number; uid: string }\n>(\n  `${WORKFLOW_SLICE_NAME}/reproduceWorkflow`,\n  async ({ workspaceId, uid }, thunkAPI) => {\n    try {\n      const response = await reproduceWorkflowApi(workspaceId, uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const importWorkflowConfig = createAsyncThunk<\n  WorkflowConfigDTO,\n  { formData: FormData }\n>(\n  `${WORKFLOW_SLICE_NAME}/importWorkflowConfig`,\n  async ({ formData }, thunkAPI) => {\n    try {\n      const response = await importWorkflowConfigApi(formData)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import axios from 'utils/axios'\nimport qs from 'qs'\nimport {\n  ItemsWorkspace,\n  WorkspaceDataDTO,\n  ListUserShareWorkspaceDTO,\n} from 'store/slice/Workspace/WorkspaceType'\n\nexport type WorkspacePostDataDTO = { name: string; id?: number }\n\nexport const getWorkspaceApi = async (id: number): Promise<ItemsWorkspace> => {\n  const response = await axios.get(`/workspace/${id}`)\n  return response.data\n}\n\nexport const getWorkspacesApi = async (params: {\n  [key: string]: number\n}): Promise<WorkspaceDataDTO> => {\n  const paramsNew = qs.stringify(params, { indices: false })\n  const response = await axios.get(`/workspaces?${paramsNew}`)\n  return response.data\n}\n\nexport const delWorkspaceApi = async (id: number): Promise<boolean> => {\n  const response = await axios.delete(`/workspace/${id}`)\n  return response.data\n}\n\nexport const postWorkspaceApi = async (\n  data: WorkspacePostDataDTO,\n): Promise<ItemsWorkspace> => {\n  const response = await axios.post(`/workspace`, data)\n  return response.data\n}\n\nexport const putWorkspaceApi = async (\n  data: WorkspacePostDataDTO,\n): Promise<ItemsWorkspace> => {\n  const response = await axios.put(`/workspace/${data.id}`, { name: data.name })\n  return response.data\n}\n\nexport const getListUserShareWorkspaceApi = async (\n  id: number,\n): Promise<ListUserShareWorkspaceDTO> => {\n  const response = await axios.get(`/workspace/share/${id}/status`)\n  return response.data\n}\n\nexport const postListUserShareWorkspaceApi = async (\n  id: number,\n  data: { user_ids: number[] },\n): Promise<boolean> => {\n  const response = await axios.post(`/workspace/share/${id}/status`, data)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  WorkspacePostDataDTO,\n  delWorkspaceApi,\n  getWorkspaceApi,\n  getWorkspacesApi,\n  postWorkspaceApi,\n  putWorkspaceApi,\n  getListUserShareWorkspaceApi,\n  postListUserShareWorkspaceApi,\n} from 'api/workspace'\nimport {\n  ItemsWorkspace,\n  WorkspaceDataDTO,\n  WorkspaceParams,\n  ListUserShareWorkspaceDTO,\n  WORKSPACE_SLICE_NAME,\n} from './WorkspaceType'\n\nexport const getWorkspace = createAsyncThunk<ItemsWorkspace, { id: number }>(\n  `${WORKSPACE_SLICE_NAME}/getWorkspace`,\n  async (data, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getWorkspaceApi(data.id)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const getWorkspaceList = createAsyncThunk<\n  WorkspaceDataDTO,\n  { [key: string]: number }\n>(`${WORKSPACE_SLICE_NAME}/getWorkspaceList`, async (params, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await getWorkspacesApi(params)\n    return response\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n\nexport const delWorkspace = createAsyncThunk<boolean, WorkspaceParams>(\n  `${WORKSPACE_SLICE_NAME}/delWorkspaceList`,\n  async (data, thunkAPI) => {\n    const { rejectWithValue, dispatch } = thunkAPI\n    try {\n      const response = await delWorkspaceApi(Number(data.id))\n      await dispatch(getWorkspaceList(data.params as { [key: string]: number }))\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const postWorkspace = createAsyncThunk<\n  ItemsWorkspace,\n  WorkspacePostDataDTO\n>(`${WORKSPACE_SLICE_NAME}/postWorkspaceList`, async (data, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await postWorkspaceApi(data)\n    return response\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n\nexport const putWorkspace = createAsyncThunk<\n  ItemsWorkspace,\n  WorkspacePostDataDTO\n>(`${WORKSPACE_SLICE_NAME}/putWorkspaceList`, async (data, thunkAPI) => {\n  const { rejectWithValue } = thunkAPI\n  try {\n    const response = await putWorkspaceApi(data)\n    return response\n  } catch (e) {\n    return rejectWithValue(e)\n  }\n})\n\nexport const getListUserShareWorkSpaces = createAsyncThunk<\n  ListUserShareWorkspaceDTO,\n  { id: number }\n>(\n  `${WORKSPACE_SLICE_NAME}/getListUserShareWorkSpaces`,\n  async (params, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getListUserShareWorkspaceApi(params.id)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n\nexport const postListUserShareWorkspaces = createAsyncThunk<\n  boolean,\n  {\n    id: number\n    data: { user_ids: number[] }\n  }\n>(\n  `${WORKSPACE_SLICE_NAME}/postListUserShareWorkspaces`,\n  async (params, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await postListUserShareWorkspaceApi(\n        params.id,\n        params.data,\n      )\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { PayloadAction, createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { WORKSPACE_SLICE_NAME, Workspace } from './WorkspaceType'\nimport { reproduceWorkflow } from '../Workflow/WorkflowActions'\nimport {\n  delWorkspace,\n  getListUserShareWorkSpaces,\n  getWorkspace,\n  getWorkspaceList,\n  postListUserShareWorkspaces,\n  postWorkspace,\n  putWorkspace,\n} from './WorkspaceActions'\n\nconst initialState: Workspace = {\n  currentWorkspace: {\n    selectedTab: 0,\n  },\n  workspace: {\n    items: [],\n    total: 0,\n    limit: 50,\n    offset: 0,\n  },\n  loading: false,\n  listUserShare: undefined,\n}\n\nexport const workspaceSlice = createSlice({\n  name: WORKSPACE_SLICE_NAME,\n  initialState,\n  reducers: {\n    setActiveTab: (state, action: PayloadAction<number>) => {\n      state.currentWorkspace.selectedTab = action.payload\n    },\n    setCurrentWorkspace: (state, action: PayloadAction<number>) => {\n      state.currentWorkspace.workspaceId = action.payload\n    },\n    clearCurrentWorkspace: (state) => {\n      state.currentWorkspace = {\n        selectedTab: 0,\n      }\n    },\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(reproduceWorkflow.fulfilled, (state, action) => {\n        state.currentWorkspace.workspaceId = action.meta.arg.workspaceId\n      })\n      .addCase(getWorkspace.fulfilled, (state, action) => {\n        state.currentWorkspace.workspaceId = action.payload.id\n        state.currentWorkspace.ownerId = action.payload.user.id\n        state.loading = false\n      })\n      .addCase(getWorkspaceList.fulfilled, (state, action) => {\n        state.workspace = action.payload\n        state.loading = false\n      })\n      .addCase(getListUserShareWorkSpaces.fulfilled, (state, action) => {\n        state.listUserShare = action.payload\n        state.loading = false\n      })\n      .addMatcher(\n        isAnyOf(\n          getWorkspace.rejected,\n          getWorkspaceList.rejected,\n          postWorkspace.fulfilled,\n          postWorkspace.rejected,\n          putWorkspace.fulfilled,\n          putWorkspace.rejected,\n          delWorkspace.fulfilled,\n          delWorkspace.rejected,\n          getListUserShareWorkSpaces.rejected,\n          postListUserShareWorkspaces.rejected,\n        ),\n        (state) => {\n          state.loading = false\n        },\n      )\n      .addMatcher(\n        isAnyOf(\n          getWorkspace.pending,\n          getWorkspaceList.pending,\n          postWorkspace.pending,\n          putWorkspace.pending,\n          delWorkspace.pending,\n          getListUserShareWorkSpaces.pending,\n          postListUserShareWorkspaces.pending,\n        ),\n        (state) => {\n          state.loading = true\n        },\n      )\n  },\n})\n\nexport const { setCurrentWorkspace, clearCurrentWorkspace, setActiveTab } =\n  workspaceSlice.actions\nexport default workspaceSlice.reducer\n","import { FC } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Tabs from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport { selectActiveTab } from 'store/slice/Workspace/WorkspaceSelector'\nimport { setActiveTab } from 'store/slice/Workspace/WorkspaceSlice'\n\nconst WorkspaceTabs: FC = () => {\n  const dispatch = useDispatch()\n  const activeTab = useSelector(selectActiveTab)\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    dispatch(setActiveTab(newValue))\n  }\n\n  return (\n    <Tabs\n      sx={{ width: '100%' }}\n      value={activeTab}\n      onChange={handleChange}\n      centered\n      textColor=\"primary\"\n    >\n      <Tab label=\"Workflow\" {...a11yProps(0)} />\n      <Tab label=\"Visualize\" {...a11yProps(1)} />\n      <Tab label=\"Record\" {...a11yProps(2)} />\n    </Tabs>\n  )\n}\n\nfunction a11yProps(index: number | string) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  }\n}\n\nexport default WorkspaceTabs\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { USER_SLICE_NAME } from './UserType'\nimport { User } from './UserType'\nimport {\n  deleteMe,\n  getListUser,\n  getListSearch,\n  getMe,\n  login,\n  updateMe,\n  updateMePassword,\n  deleteUser,\n  createUser,\n  updateUser,\n} from './UserActions'\nimport {\n  removeExToken,\n  removeToken,\n  saveExToken,\n  saveRefreshToken,\n  saveToken,\n} from 'utils/auth/AuthUtils'\n\nconst initialState: User = {\n  currentUser: undefined,\n  listUserSearch: undefined,\n  listUser: undefined,\n  loading: false,\n}\n\nexport const userSlice = createSlice({\n  name: USER_SLICE_NAME,\n  initialState,\n  reducers: {\n    logout: (state) => {\n      removeToken()\n      removeExToken()\n      state = initialState\n    },\n    resetUserSearch: (state) => {\n      state.listUserSearch = []\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(login.fulfilled, (_, action) => {\n        saveToken(action.payload.access_token)\n        saveRefreshToken(action.payload.refresh_token)\n        saveExToken(action.payload.ex_token)\n      })\n      .addCase(getMe.fulfilled, (state, action) => {\n        state.currentUser = action.payload\n      })\n      .addCase(getListUser.fulfilled, (state, action) => {\n        state.listUser = action.payload\n        state.loading = false\n      })\n      .addCase(getListSearch.fulfilled, (state, action) => {\n        state.listUserSearch = action.payload\n      })\n      .addMatcher(\n        isAnyOf(\n          getListSearch.rejected,\n          createUser.rejected,\n          getListUser.rejected,\n          updateUser.rejected,\n          updateMePassword.rejected,\n          updateMePassword.fulfilled,\n          deleteUser.fulfilled,\n          deleteUser.rejected,\n          deleteMe.rejected,\n          deleteMe.fulfilled,\n          updateMe.rejected,\n          updateMe.fulfilled,\n          createUser.fulfilled,\n        ),\n        (state) => {\n          state.loading = false\n        },\n      )\n      .addMatcher(\n        isAnyOf(\n          getListUser.pending,\n          deleteUser.pending,\n          createUser.pending,\n          updateMe.pending,\n          deleteMe.pending,\n          updateUser.pending,\n          updateMePassword.pending,\n        ),\n        (state) => {\n          state.loading = true\n        },\n      )\n      .addMatcher(\n        isAnyOf(login.rejected, getMe.rejected, deleteMe.fulfilled),\n        (state) => {\n          removeToken()\n          removeExToken()\n          state = initialState\n        },\n      )\n  },\n})\n\nexport const { logout, resetUserSearch } = userSlice.actions\nexport default userSlice.reducer\n","export const APP_BAR_HEIGHT = 60\nexport const CONTENT_HEIGHT = `calc(100vh - 48px - ${APP_BAR_HEIGHT}px)` // 48px: spacing(3)\nexport const DRAWER_WIDTH = 240\nexport const RIGHT_DRAWER_WIDTH = 320\n","import { FC } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { styled } from '@mui/material/styles'\nimport MuiAppBar from '@mui/material/AppBar'\nimport Box from '@mui/material/Box'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport IconButton from '@mui/material/IconButton'\nimport MenuIcon from '@mui/icons-material/Menu'\nimport Logo from 'components/logo.png'\nimport Tooltips from 'components/Layout/Tooltips'\nimport WorkspaceTabs from 'components/Workspace/WorkspaceTabs'\nimport { IS_STANDALONE } from 'const/Mode'\nimport Profile from './Profile'\nimport { APP_BAR_HEIGHT } from 'const/Layout'\n\nconst Header: FC<{\n  handleDrawerOpen: () => void\n}> = ({ handleDrawerOpen }) => {\n  return IS_STANDALONE ? (\n    <StandaloneHeader />\n  ) : (\n    <MultiUserHeader handleDrawerOpen={handleDrawerOpen} />\n  )\n}\n\nconst StandaloneHeader: FC = () => {\n  return (\n    <StyledAppBar>\n      <Toolbar>\n        <Box display=\"flex\" flexGrow={1}>\n          <img src={Logo} alt=\"logo\" width={75} height={50} />\n        </Box>\n        <WorkspaceTabs />\n        <Tooltips />\n      </Toolbar>\n    </StyledAppBar>\n  )\n}\n\nconst MultiUserHeader: FC<{ handleDrawerOpen: () => void }> = ({\n  handleDrawerOpen,\n}) => {\n  const showTabsRegex = /^\\/console\\/workspaces\\/.+$/\n  const location = useLocation()\n\n  return (\n    <StyledAppBar>\n      <Toolbar>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          edge=\"start\"\n        >\n          <MenuIcon />\n        </IconButton>\n        <Box display=\"flex\" flexGrow={1}>\n          <TitleLogo>STUDIO</TitleLogo>\n        </Box>\n        {showTabsRegex.test(location.pathname) && <WorkspaceTabs />}\n        <Profile />\n      </Toolbar>\n    </StyledAppBar>\n  )\n}\n\nconst StyledAppBar = styled(MuiAppBar)({\n  position: 'fixed',\n  backgroundColor: '#E1DEDB',\n  color: '#000000',\n  height: APP_BAR_HEIGHT,\n})\n\nconst TitleLogo = styled(Typography)({\n  fontWeight: 600,\n  fontSize: 22,\n})\n\nexport default Header\n","import { FC } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport Drawer from '@mui/material/Drawer'\nimport List from '@mui/material/List'\nimport ListItem from '@mui/material/ListItem'\nimport ListItemButton from '@mui/material/ListItemButton'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport ListItemText from '@mui/material/ListItemText'\nimport DashboardIcon from '@mui/icons-material/Dashboard'\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts'\nimport AnalyticsIcon from '@mui/icons-material/Analytics'\nimport { DRAWER_WIDTH } from 'const/Layout'\nimport { Box } from '@mui/material'\nimport { useSelector } from 'react-redux'\nimport { isAdmin } from '../../store/slice/User/UserSelector'\n\nconst LeftMenu: FC<{ open: boolean; handleDrawerClose: () => void }> = ({\n  open,\n  handleDrawerClose,\n}) => {\n  const navigate = useNavigate()\n  const admin = useSelector(isAdmin)\n\n  const onClickDashboard = () => {\n    handleDrawerClose()\n    navigate('/console')\n  }\n\n  const onClickWorkspaces = () => {\n    handleDrawerClose()\n    navigate('/console/workspaces')\n  }\n\n  const onClickAccountManager = () => {\n    handleDrawerClose()\n    navigate('/console/account-manager')\n  }\n\n  return (\n    <>\n      <Drawer anchor=\"left\" open={open} onClose={handleDrawerClose}>\n        <Box sx={{ width: DRAWER_WIDTH }}>\n          <List>\n            <ListItem key=\"dashboard\" disablePadding>\n              <ListItemButton onClick={onClickDashboard}>\n                <ListItemIcon>\n                  <DashboardIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Dashboard\" />\n              </ListItemButton>\n            </ListItem>\n            <ListItem key=\"workspaces\" disablePadding>\n              <ListItemButton onClick={onClickWorkspaces}>\n                <ListItemIcon>\n                  <AnalyticsIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Workspaces\" />\n              </ListItemButton>\n            </ListItem>\n            {admin ? (\n              <ListItem key=\"account-manager\" disablePadding>\n                <ListItemButton onClick={onClickAccountManager}>\n                  <ListItemIcon>\n                    <ManageAccountsIcon />\n                  </ListItemIcon>\n                  <ListItemText primary=\"Account Manager\" />\n                </ListItemButton>\n              </ListItem>\n            ) : null}\n          </List>\n        </Box>\n      </Drawer>\n    </>\n  )\n}\n\nexport default LeftMenu\n","import { Box, keyframes, styled } from '@mui/material'\n\nconst Loading = () => {\n  return (\n    <LoaderWrapper>\n      <Loader />\n    </LoaderWrapper>\n  )\n}\n\nconst LoaderWrapper = styled(Box)(({ theme }) => ({\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  position: 'fixed',\n  backgroundColor: 'rgba(255,255,255,0.6)',\n  zIndex: 100000,\n}))\n\nconst rotate = keyframes`\n  100%   {transform: rotate(360deg)}\n`\n\nconst prixClipFix = keyframes`\n  0%   {clip-path:polygon(50% 50%,0 0,0 0,0 0,0 0,0 0)}\n  25%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 0,100% 0,100% 0)}\n  50%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,100% 100%,100% 100%)}\n  75%  {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 100%)}\n  100% {clip-path:polygon(50% 50%,0 0,100% 0,100% 100%,0 100%,0 0)}\n`\n\nconst Loader = styled('span')(({ theme }) => ({\n  display: 'block',\n  width: 48,\n  height: 48,\n  borderRadius: '50%',\n  position: 'relative',\n  zIndex: 100,\n  top: 'calc(50% - 24px)',\n  left: 'calc(50% - 24px)',\n  animation: `${rotate} 1s linear infinite`,\n  '&:before': {\n    content: \"''\",\n    boxSizing: 'border-box',\n    position: 'absolute',\n    inset: 0,\n    borderRadius: '50%',\n    border: '3px solid rgba(0,0,0,0.8)',\n    animation: `${prixClipFix} 2s linear infinite`,\n  },\n}))\n\nexport default Loading\n","import { FC, ReactNode, useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { Box } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { getToken } from 'utils/auth/AuthUtils'\nimport { selectCurrentUser } from 'store/slice/User/UserSelector'\nimport { getMe } from 'store/slice/User/UserActions'\nimport Header from './Header'\nimport LeftMenu from './LeftMenu'\nimport { IS_STANDALONE } from 'const/Mode'\nimport Loading from 'components/common/Loading'\nimport { APP_BAR_HEIGHT } from 'const/Layout'\n\nconst authRequiredPathRegex = /^\\/console\\/?.*/\n\nconst Layout = ({ children }: { children?: ReactNode }) => {\n  const user = useSelector(selectCurrentUser)\n  const location = useLocation()\n  const navigate = useNavigate()\n  const dispatch = useDispatch()\n\n  const [loading, setLoadingAuth] = useState(\n    !IS_STANDALONE && authRequiredPathRegex.test(location.pathname),\n  )\n\n  useEffect(() => {\n    !IS_STANDALONE &&\n      authRequiredPathRegex.test(location.pathname) &&\n      checkAuth()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname, user])\n\n  const checkAuth = async () => {\n    if (user) {\n      if (loading) setLoadingAuth(false)\n      return\n    }\n    const token = getToken()\n    const isLogin = location.pathname === '/login'\n\n    try {\n      if (token) {\n        await dispatch(getMe())\n        if (isLogin) navigate('/console')\n        return\n      } else if (!isLogin) throw new Error('fail auth')\n    } catch {\n      navigate('/login', { replace: true })\n    } finally {\n      if (loading) setLoadingAuth(false)\n    }\n  }\n\n  if (loading) return <Loading />\n\n  return IS_STANDALONE || authRequiredPathRegex.test(location.pathname) ? (\n    <AuthedLayout>{children}</AuthedLayout>\n  ) : (\n    <UnauthedLayout>{children}</UnauthedLayout>\n  )\n}\n\nconst AuthedLayout: FC = ({ children }) => {\n  const [open, setOpen] = useState(false)\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n  return (\n    <LayoutWrapper>\n      <Header handleDrawerOpen={handleDrawerOpen} />\n      <ContentBodyWrapper>\n        <LeftMenu open={open} handleDrawerClose={handleDrawerClose} />\n        <ChildrenWrapper>{children}</ChildrenWrapper>\n      </ContentBodyWrapper>\n    </LayoutWrapper>\n  )\n}\n\nconst UnauthedLayout: FC = ({ children }) => {\n  return (\n    <LayoutWrapper>\n      <ContentBodyWrapper>\n        <ChildrenWrapper>{children}</ChildrenWrapper>\n      </ContentBodyWrapper>\n    </LayoutWrapper>\n  )\n}\n\nconst LayoutWrapper = styled(Box)({\n  height: '100%',\n  width: '100%',\n})\n\nconst ContentBodyWrapper = styled(Box)(() => ({\n  backgroundColor: '#ffffff',\n  display: 'flex',\n  paddingTop: APP_BAR_HEIGHT,\n  height: `calc(100% - ${APP_BAR_HEIGHT}px)`,\n  paddingRight: 10,\n  overflow: 'auto',\n}))\n\nconst ChildrenWrapper = styled('main', {\n  shouldForwardProp: (prop) => prop !== 'open',\n})<{}>(({ theme }) => ({\n  flexGrow: 1,\n  padding: theme.spacing(3),\n  transition: theme.transitions.create('margin', {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n}))\n\nexport default Layout\n","import { Link } from 'react-router-dom'\nimport { Box, styled, Typography } from '@mui/material'\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\nimport AnalyticsIcon from '@mui/icons-material/Analytics'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {isAdmin, selectCurrentUser} from 'store/slice/User/UserSelector'\nimport {useEffect} from \"react\";\nimport {getMe} from \"../../store/slice/User/UserActions\";\n\nconst Dashboard = () => {\n  const dispatch = useDispatch()\n  const admin = useSelector(isAdmin)\n  const user = useSelector(selectCurrentUser)\n  useEffect(() => {\n    if(!user) return\n    dispatch(getMe())\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <BoxWrapper>\n      <h1 style={{ paddingLeft: 16 }}>Dashboard</h1>\n      <DashboardWrapper>\n        <DashboardContent>\n          <LinkWrapper to=\"/console/workspaces\">\n            <BoxMenu>\n              <Box>\n                <AnalyticsIcon fontSize=\"large\" />\n                <TitleMenu>Workspaces</TitleMenu>\n              </Box>\n            </BoxMenu>\n          </LinkWrapper>\n          {\n            admin ?\n              <LinkWrapper to=\"/console/account-manager\">\n                <BoxMenu>\n                  <Box>\n                    <ManageAccountsIcon fontSize=\"large\" />\n                    <TitleMenu>Account Manager</TitleMenu>\n                  </Box>\n                </BoxMenu>\n              </LinkWrapper>: null\n          }\n        </DashboardContent>\n      </DashboardWrapper>\n    </BoxWrapper>\n  )\n}\n\nconst BoxWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n})\n\nconst LinkWrapper = styled(Link)(() => ({\n  textDecoration: 'none',\n}))\n\nconst DashboardWrapper = styled(Box)(() => ({\n  width: '100%',\n  height: 'calc(100% - 90px)',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}))\n\nconst DashboardContent = styled(Box)(() => ({\n  padding: 30,\n  display: 'flex',\n  justifyContent: 'center',\n  flexWrap: 'wrap',\n  gap: 32,\n}))\n\nconst BoxMenu = styled(Box)(() => ({\n  width: 170,\n  height: 150,\n  backgroundColor: '#283237',\n  borderRadius: 4,\n  padding: '40px 30px',\n  color: '#fff',\n  textAlign: 'center',\n  fontSize: 24,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  transition: 'all 0.3s',\n  '&:hover': {\n    transform: 'scale(1.1)',\n    backgroundColor: 'rgba(40,50,55,0.9)',\n  },\n}))\n\nconst TitleMenu = styled(Typography)(() => ({\n  fontSize: 24,\n  marginTop: 30,\n}))\n\nexport default Dashboard\n","import { styled } from '@mui/material'\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error?: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nexport default Input\n","import { ChangeEvent, FC, FocusEvent, useState } from 'react'\nimport { Box, styled, Typography } from '@mui/material'\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff'\nimport VisibilityIcon from '@mui/icons-material/Visibility'\nimport Input from 'components/common/Input'\n\nconst style: object = {\n  position: 'absolute',\n  right: 5,\n  top: 8,\n  fontSize: 20,\n  cursor: 'pointer',\n  color: 'rgba(0,0,0,0.6)',\n}\n\ntype InputPasswordProps = {\n  onChange?: (event: ChangeEvent<HTMLInputElement>) => void\n  error?: string\n  name?: string\n  placeholder?: string\n  onBlur?:  (event: FocusEvent<HTMLInputElement>) => void\n}\n\nconst InputPassword: FC<InputPasswordProps> = ({ error, ...p }) => {\n  const [type, setType] = useState('password')\n\n  const onShow = () => {\n    setType('text')\n  }\n\n  const onHidden = () => {\n    setType('password')\n  }\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <Input {...p} type={type} />\n      {type === 'password' ? (\n        <VisibilityIcon style={style} onClick={onShow} />\n      ) : (\n        <VisibilityOffIcon style={style} onClick={onHidden} />\n      )}\n      <TextError>{error}</TextError>\n    </Box>\n  )\n}\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  marginTop: -14,\n  wordBreak: 'break-word',\n})\n\nexport default InputPassword\n","import { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport { ChangeEvent, FC, useState } from 'react'\nimport { regexIgnoreS, regexPassword } from 'const/Auth'\nimport InputPassword from 'components/Account/InputPassword'\n\ntype ChangePasswordModalProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: (oldPass: string, newPass: string) => void\n}\n\nconst ChangePasswordModal: FC<ChangePasswordModalProps> = ({\n  onClose,\n  open,\n  onSubmit,\n}) => {\n  const [errors, setErrors] = useState<{ [key: string]: string }>({})\n  const [values, setValues] = useState<{ [key: string]: string }>({})\n  const onChangeValue = (\n    event: ChangeEvent<HTMLInputElement>,\n    validate?: Function,\n  ) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    if(name === 'new_password' && values.confirm_password) {\n      if(!validate?.(value)) {\n        setErrors({ ...errors, [name]: validate?.(value), confirm_password: value !== values.confirm_password ? 'Passwords do not match' : ''})\n        return\n      }\n        setErrors({ ...errors, [name]: validate?.(value), confirm_password: ''})\n        return\n    }\n    setErrors({ ...errors, [name]: validate?.(value) })\n  }\n\n  const validatePassword = (value: string): string => {\n    if (!value) return 'This field is required'\n    if(value.length > 255) return 'The text may not be longer than 255 characters'\n    if (!regexPassword.test(value)) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    if(regexIgnoreS.test(value)) {\n      return 'Allowed special characters (!#$%&()*+,-./@_|)'\n    }\n    return ''\n  }\n\n  const validateReEnter = (value: string): string => {\n    if (!value) return 'This field is required'\n    if (value !== values.new_password) {\n      return 'Passwords do not match'\n    }\n    return ''\n  }\n\n  const validateReEnterWhenInputPassword = () => {\n    const { reEnter, new_password } = values\n    if (!new_password) setErrors((pre) => ({ ...pre, new_password: 'This field is required' }))\n    if (reEnter && reEnter !== new_password) {\n      setErrors((pre) => ({ ...pre, reEnter: 'Passwords do not match' }))\n    }\n  }\n\n  const validateForm = () => {\n    const errorNewPass = validatePassword(values.new_password)\n    const errorConfirmPass = validatePassword(values.confirm_password)\n    return {\n      new_password: errorNewPass,\n      confirm_password: errorConfirmPass\n    }\n  }\n\n  const onChangePass = () => {\n    const newErrors: { [key: string]: string } = validateForm()\n    if(errors.new_password || errors.confirm_password) return\n    if(newErrors.new_password || newErrors.confirm_password) {\n      setErrors(newErrors)\n      return\n    }\n    onSubmit(values.password, values.new_password)\n  }\n\n  const onCloseModal = () => {\n    setErrors({})\n    setValues({})\n    onClose()\n  }\n\n  return (\n    <Modal\n      open={open}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <ContentDelete>\n        <BoxTitle>\n          <Typography sx={{ fontWeight: 600, fontSize: 18 }}>\n            Change Password\n          </Typography>\n          <Typography style={{ fontSize: 13 }}>\n            <span style={{ color: 'red' }}>*</span> is required\n          </Typography>\n        </BoxTitle>\n        <BoxConfirm>\n          <FormInline>\n            <Label>\n              Old Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e)}\n              name=\"password\"\n              error={errors.password}\n              onBlur={(e) => onChangeValue(e)}\n              placeholder=\"Old Password\"\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              New Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validatePassword)}\n              name=\"new_password\"\n              error={errors.new_password}\n              placeholder=\"New Password\"\n              onBlur={validateReEnterWhenInputPassword}\n            />\n          </FormInline>\n          <FormInline>\n            <Label>\n              Confirm Password <span style={{ color: 'red' }}>*</span>\n            </Label>\n            <InputPassword\n              onChange={(e) => onChangeValue(e, validateReEnter)}\n              name=\"confirm_password\"\n              error={errors.confirm_password}\n              placeholder=\"Confirm Password\"\n              onBlur={(e) => onChangeValue(e, validateReEnter)}\n            />\n          </FormInline>\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <ButtonConfirm onClick={() => onChangePass()}>UPDATE</ButtonConfirm>\n          </Box>\n        </BoxConfirm>\n        <Button onClick={onCloseModal}>\n          <Typography\n            sx={{\n              textDecoration: 'underline',\n              textTransform: 'none',\n              lineHeight: '17px',\n            }}\n          >\n            Close\n          </Typography>\n        </Button>\n      </ContentDelete>\n    </Modal>\n  )\n}\n\nconst BoxTitle = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n})\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 450px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0',\n})\n\nconst FormInline = styled(Box)({\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: 10,\n})\n\nconst Label = styled(Typography)({\n  fontSize: 14,\n  marginTop: 7,\n  width: '100%',\n})\n\nconst ButtonConfirm = styled(Button)({\n  height: 36,\n  color: '#ffffff',\n  marginTop: -1,\n  width: 90,\n  backgroundColor: '#283237 !important',\n  \"&:hover\": {\n    backgroundColor: '#283237',\n  }\n})\n\nexport default ChangePasswordModal\n","import { FC, useState } from 'react'\nimport { Box, Button, Modal, styled, Typography } from '@mui/material'\nimport Input  from 'components/common/Input'\nimport Loading from \"../common/Loading\";\n\ntype DeleteConfirmModalProps = {\n  onClose: () => void\n  open: boolean\n  onSubmit: () => void\n  titleSubmit: string\n  description: string\n  isLoading?: boolean\n}\nconst DeleteConfirmModal: FC<DeleteConfirmModalProps> = ({\n  onClose,\n  open,\n  onSubmit,\n  isLoading,\n  titleSubmit,\n  description,\n}) => {\n  const [textDelete, setTextDelete] = useState('')\n\n  const onConfirm = () => {\n    if (textDelete !== 'DELETE') return\n    onSubmit?.()\n    setTextDelete('')\n  }\n\n  return (\n    <>\n      <Modal\n          open={open}\n          onClose={onClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n      >\n        <ContentDelete>\n          <Typography style={{ whiteSpace: 'pre-wrap' }}>\n            {description}\n            This operation cannot be undone.\n            To continue, type \"<span style={{ fontWeight: 600 }}>DELETE</span>\" in the box below:\n          </Typography>\n          <BoxConfirm>\n            <Input\n                placeholder=\"DELETE\"\n                value={textDelete}\n                onChange={(e) => setTextDelete(e.target.value)}\n            />\n            <ButtonConfirm onClick={onConfirm} sx={{ backgroundColor: 'red !important' }}>{titleSubmit}</ButtonConfirm>\n          </BoxConfirm>\n          <Button onClick={onClose}>\n            <Typography\n                sx={{\n                  textDecoration: 'underline',\n                  textTransform: 'none',\n                  lineHeight: '17px',\n                }}\n            >\n              Close\n            </Typography>\n          </Button>\n        </ContentDelete>\n      </Modal>\n      {\n        isLoading ? <Loading /> : null\n      }\n    </>\n  )\n}\n\nconst ContentDelete = styled(Box)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 500px;\n  background-color: rgb(255, 255, 255);\n  box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,\n    rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;\n  padding: 16px;\n  border-radius: 4px;\n  outline: none;\n`\n\nconst ButtonConfirm = styled(Button)({\n  backgroundColor: '#283237 !important',\n  height: 36,\n  marginLeft: 10,\n  color: '#ffffff',\n  marginTop: -1,\n})\n\nconst BoxConfirm = styled(Box)({\n  margin: '20px 0 0',\n})\n\nexport default DeleteConfirmModal\n","import { useSelector, useDispatch } from 'react-redux'\nimport {\n  Box,\n  Button,\n  IconButton,\n  Input,\n  styled,\n  Typography,\n} from '@mui/material'\nimport Loading from 'components/common/Loading'\nimport ChangePasswordModal from 'components/Account/ChangePasswordModal'\nimport DeleteConfirmModal from 'components/common/DeleteConfirmModal'\nimport { ChangeEvent, useEffect, useRef, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport {\n  deleteMe,\n  updateMe,\n  updateMePassword,\n} from 'store/slice/User/UserActions'\nimport { selectCurrentUser, selectLoading } from 'store/slice/User/UserSelector'\nimport { ROLE } from '../../@types'\nimport { useSnackbar, VariantType } from 'notistack'\nimport Edit from '@mui/icons-material/Edit'\nconst Account = () => {\n  const user = useSelector(selectCurrentUser)\n  const loading = useSelector(selectLoading)\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const [isDeleteConfirmModalOpen, setIsDeleteConfirmModalOpen] =\n    useState(false)\n  const [isChangePwModalOpen, setIsChangePwModalOpen] = useState(false)\n  const [isEditName, setIsEditName] = useState(false)\n  const [isName, setIsName] = useState<string>()\n\n  const ref = useRef<HTMLInputElement>(null)\n\n  const { enqueueSnackbar } = useSnackbar()\n\n  const handleClickVariant = (variant: VariantType, mess: string) => {\n    enqueueSnackbar(mess, { variant })\n  }\n\n  useEffect(() => {\n    if (!user) return\n    setIsName(user.name)\n    //eslint-disable-next-line\n  }, [])\n\n  const handleCloseDeleteComfirmModal = () => {\n    setIsDeleteConfirmModalOpen(false)\n  }\n\n  const onDeleteAccountClick = () => {\n    setIsDeleteConfirmModalOpen(true)\n  }\n\n  const onConfirmDelete = async () => {\n    if (!user) return\n    const data = await dispatch(deleteMe())\n    if ((data as any).error) {\n      handleClickVariant('error', 'Account deleted failed!')\n    } else {\n      navigate('/login')\n    }\n    handleCloseDeleteComfirmModal()\n  }\n\n  const handleCloseChangePw = () => {\n    setIsChangePwModalOpen(false)\n  }\n\n  const onChangePwClick = () => {\n    setIsChangePwModalOpen(true)\n  }\n\n  const onConfirmChangePw = async (oldPass: string, newPass: string) => {\n    const data = await dispatch(\n      updateMePassword({ old_password: oldPass, new_password: newPass }),\n    )\n    if ((data as any).error) {\n      handleClickVariant('error', 'Failed to Change Password!')\n    } else {\n      handleClickVariant(\n        'success',\n        'Your password has been successfully changed!',\n      )\n    }\n    handleCloseChangePw()\n  }\n\n  const onEditName = (e: ChangeEvent<HTMLInputElement>) => {\n    setIsName(e.target.value)\n  }\n\n  const onSubmit = async (e: any) => {\n    if (!user || !user.name || !user.email) return\n    if (isName === user.name) {\n      setIsEditName(false)\n      return\n    }\n    if (!e.target.value) {\n      handleClickVariant('error', \"Full name cann't empty!\")\n      setIsName(user?.name)\n    } else {\n      const data = await dispatch(\n        updateMe({\n          name: e.target.value,\n          email: user.email,\n        }),\n      )\n      if ((data as any).error) {\n        handleClickVariant('error', 'Full name edited failed!')\n      } else {\n        handleClickVariant('success', 'Full name edited successfully!')\n      }\n    }\n    setIsEditName(false)\n  }\n\n  const getRole = (role?: number) => {\n    if (!role) return\n    let newRole = ''\n    switch (role) {\n      case ROLE.ADMIN:\n        newRole = 'Admin'\n        break\n      case ROLE.OPERATOR:\n        newRole = 'Operator'\n        break\n    }\n    return newRole\n  }\n\n  const handleName = (event: any) => {\n    if (event.key === 'Escape') {\n      setIsName(user?.name)\n      setIsEditName(false)\n      return\n    }\n    if (event.key === 'Enter') {\n      if (ref.current) ref.current?.querySelector('input')?.blur?.()\n      return\n    }\n  }\n\n  return (\n    <AccountWrapper>\n      <DeleteConfirmModal\n        titleSubmit=\"Delete My Account\"\n        onClose={handleCloseDeleteComfirmModal}\n        open={isDeleteConfirmModalOpen}\n        onSubmit={onConfirmDelete}\n        description=\"Delete account will erase all of your data.\"\n      />\n      <ChangePasswordModal\n        onSubmit={onConfirmChangePw}\n        open={isChangePwModalOpen}\n        onClose={handleCloseChangePw}\n      />\n      <Title>Account Profile</Title>\n      <BoxFlex>\n        <TitleData>Organization</TitleData>\n        <BoxData>{user?.organization?.name}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Name</TitleData>\n        {isEditName ? (\n          <Input\n            sx={{ width: 400 }}\n            autoFocus\n            onBlur={onSubmit}\n            placeholder=\"Name\"\n            value={isName}\n            onChange={onEditName}\n            onKeyDown={handleName}\n            ref={ref}\n          />\n        ) : (\n          <>\n            <Box>{isName ? isName : user?.name}</Box>\n            <IconButton sx={{ ml: 1 }} onClick={() => setIsEditName(true)}>\n              <Edit />\n            </IconButton>\n          </>\n        )}\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Email</TitleData>\n        <BoxData>{user?.email}</BoxData>\n      </BoxFlex>\n      <BoxFlex>\n        <TitleData>Role</TitleData>\n        <BoxData>{getRole(user?.role_id)}</BoxData>\n      </BoxFlex>\n      <BoxFlex sx={{ justifyContent: 'space-between', mt: 10, maxWidth: 600 }}>\n        <Button variant=\"contained\" color=\"primary\" onClick={onChangePwClick}>\n          Change Password\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"error\"\n          onClick={onDeleteAccountClick}\n        >\n          Delete Account\n        </Button>\n      </BoxFlex>\n      {loading ? <Loading /> : null}\n    </AccountWrapper>\n  )\n}\n\nconst AccountWrapper = styled(Box)({\n  padding: '0 20px',\n})\n\nconst BoxFlex = styled(Box)({\n  display: 'flex',\n  margin: '20px 0 10px 0',\n  alignItems: 'center',\n  maxWidth: 1000,\n})\n\nconst Title = styled('h2')({\n  marginBottom: 40,\n})\n\nconst BoxData = styled(Typography)({\n  fontWeight: 700,\n  minWidth: 272,\n})\n\nconst TitleData = styled(Typography)({\n  width: 250,\n  minWidth: 250,\n})\n\nexport default Account\n","import { InputProps, styled, Typography } from '@mui/material'\n\ninterface InputErrorProps extends InputProps {\n  errorMessage: string\n  value?: string\n}\n\nconst InputError = ({\n  errorMessage,\n  onChange,\n  value,\n  type,\n  onBlur,\n  name,\n}: InputErrorProps) => {\n  return (\n    <>\n      <Input\n        autoComplete=\"Off\"\n        error={!!errorMessage}\n        onChange={onChange}\n        value={value}\n        type={type}\n        name={name}\n        onBlur={onBlur}\n      />\n      <TextError>{errorMessage}</TextError>\n    </>\n  )\n}\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 15,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  margin: '-14px 0px 0px 305px',\n  wordBreak: 'break-word',\n})\n\nexport default InputError\n","import {\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  styled,\n  Typography,\n} from '@mui/material'\nimport { FC, FocusEvent } from 'react'\n\ntype SelectErrorProps = {\n  value?: string\n  onChange?: (value: SelectChangeEvent, child: React.ReactNode) => void\n  onBlur?: (event: FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => void\n  errorMessage: string\n  name?: string\n  options: string[]\n}\n\nconst SelectError: FC<SelectErrorProps> = ({\n  value,\n  onChange,\n  onBlur,\n  errorMessage,\n  options,\n  name,\n}) => {\n  return (\n    <>\n      <SelectModal\n        name={name}\n        value={value}\n        onChange={\n          onChange as (\n            value: SelectChangeEvent<unknown>,\n            child: React.ReactNode,\n          ) => void\n        }\n        onBlur={onBlur}\n        error={!!errorMessage}\n      >\n        {options.map((item: string) => {\n          return (\n            <MenuItem key={item} value={item}>\n              {item}\n            </MenuItem>\n          )\n        })}\n      </SelectModal>\n      <TextError>{errorMessage}</TextError>\n    </>\n  )\n}\n\nconst SelectModal = styled(Select, {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ theme, error }) => ({\n  width: 272,\n  marginBottom: '15px',\n  border: '1px solid #d9d9d9',\n  borderColor: error ? 'red' : '#d9d9d9',\n  borderRadius: 4,\n}))\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  minHeight: 18,\n  color: 'red',\n  lineHeight: '14px',\n  margin: '-14px 0px 0px 305px',\n  wordBreak: 'break-word',\n})\nexport default SelectError\n","import {\n  Box,\n  FormControl,\n  NativeSelect,\n  Pagination,\n  styled,\n} from '@mui/material'\nimport { WorkspaceDataDTO } from '../../store/slice/Workspace/WorkspaceType'\nimport { ChangeEvent } from 'react'\nimport { UserListDTO } from '../../api/users/UsersApiDTO'\n\ntype PagiProps = {\n  data: WorkspaceDataDTO | UserListDTO\n  handlePage: (e: ChangeEvent<unknown>, page: number) => void\n  handleLimit: (e: ChangeEvent<HTMLSelectElement>) => void\n  limit: number | null\n}\n\nconst PaginationCustom = ({\n  data,\n  handlePage,\n  handleLimit,\n  limit,\n}: PagiProps) => {\n  return (\n    <PaginationCustomWrapper>\n      <span>Rows per page: </span>\n      <FormControl sx={{ width: 'max-content', margin: '4px 16px 0 12px' }}>\n        <NativeSelect\n          value={limit || 50}\n          onChange={handleLimit}\n          inputProps={{\n            name: 'limit',\n            id: 'uncontrolled-native',\n          }}\n        >\n          <option value={10}>10</option>\n          <option value={50}>50</option>\n          <option value={100}>100</option>\n        </NativeSelect>\n      </FormControl>\n      <span>{`${(data?.offset || 0) + 1} - ${\n        (data?.offset || 0) + (data?.items?.length || 0)\n      } of ${data?.total || 0}`}</span>\n      <Pagination\n        count={Math.ceil(data.total / data.limit)}\n        page={Math.ceil(data.offset / data.limit) + 1}\n        onChange={handlePage}\n      />\n    </PaginationCustomWrapper>\n  )\n}\n\nconst PaginationCustomWrapper = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'end',\n  alignItems: 'center',\n  marginTop: theme.spacing(2),\n  gap: 2,\n}))\n\nexport default PaginationCustom\n","import EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport { SelectChangeEvent } from '@mui/material/Select'\nimport {\n  ChangeEvent,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  MouseEvent,\n} from 'react'\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  Input,\n  styled,\n} from '@mui/material'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  isAdmin,\n  selectCurrentUser,\n  selectListUser,\n  selectLoading,\n} from 'store/slice/User/UserSelector'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport {\n  deleteUser,\n  createUser,\n  getListUser,\n  updateUser,\n} from 'store/slice/User/UserActions'\nimport Loading from 'components/common/Loading'\nimport { AddUserDTO, UserDTO } from 'api/users/UsersApiDTO'\nimport { ROLE } from '@types'\nimport {\n  DataGrid,\n  GridFilterModel,\n  GridSortDirection,\n  GridSortItem,\n  GridSortModel,\n} from '@mui/x-data-grid'\nimport { regexEmail, regexIgnoreS, regexPassword } from 'const/Auth'\nimport InputError from 'components/common/InputError'\nimport SelectError from 'components/common/SelectError'\nimport PaginationCustom from 'components/common/PaginationCustom'\nimport { useSnackbar, VariantType } from 'notistack'\n\nlet timeout: NodeJS.Timeout | undefined = undefined\n\ntype ModalComponentProps = {\n  onSubmitEdit: (\n    id: number | string | undefined,\n    data: { [key: string]: string },\n  ) => void\n  setOpenModal: (v: boolean) => void\n  dataEdit?: {\n    [key: string]: string\n  }\n}\n\ntype PopupType = {\n  open: boolean\n  handleClose: () => void\n  handleOkDel: () => void\n  name?: string\n}\n\nconst initState = {\n  email: '',\n  password: '',\n  role_id: '',\n  name: '',\n  confirmPassword: '',\n}\n\nconst ModalComponent = ({\n  onSubmitEdit,\n  setOpenModal,\n  dataEdit,\n}: ModalComponentProps) => {\n  const [formData, setFormData] = useState<{ [key: string]: string }>(\n    dataEdit || initState,\n  )\n  const [isDisabled, setIsDisabled] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>(initState)\n\n  const validateEmail = (value: string): string => {\n    const error = validateField('email', 255, value)\n    if (error) return error\n    if (!regexEmail.test(value)) {\n      return 'Invalid email format'\n    }\n    return ''\n  }\n\n  const validatePassword = (\n    value: string,\n    isConfirm: boolean = false,\n    values?: { [key: string]: string },\n  ): string => {\n    if (!value && !dataEdit?.uid) return 'This field is required'\n    const errorLength = validateLength('password', 255, value)\n    if (errorLength) {\n      return errorLength\n    }\n    let datas = values || formData\n    if (!regexPassword.test(value) && value) {\n      return 'Your password must be at least 6 characters long and must contain at least one letter, number, and special character'\n    }\n    if (regexIgnoreS.test(value)) {\n      return 'Allowed special characters (!#$%&()*+,-./@_|)'\n    }\n    if (isConfirm && datas.password !== value && value) {\n      return 'password is not match'\n    }\n    return ''\n  }\n\n  const validateField = (name: string, length: number, value?: string) => {\n    if (!value) return 'This field is required'\n    return validateLength(name, length, value)\n  }\n\n  const validateLength = (name: string, length: number, value?: string) => {\n    if (value && value.length > length)\n      return `The text may not be longer than ${length} characters`\n    if (formData[name]?.length && value && value.length > length) {\n      return `The text may not be longer than ${length} characters`\n    }\n    return ''\n  }\n\n  const validateForm = (): { [key: string]: string } => {\n    const errorName = validateField('name', 100, formData.name)\n    const errorEmail = validateEmail(formData.email)\n    const errorRole = validateField('role_id', 50, formData.role_id)\n    const errorPassword = dataEdit?.id\n      ? ''\n      : validatePassword(formData.password)\n    const errorConfirmPassword = dataEdit?.id\n      ? ''\n      : validatePassword(formData.confirmPassword, true)\n    return {\n      email: errorEmail,\n      password: errorPassword,\n      confirmPassword: errorConfirmPassword,\n      name: errorName,\n      role_id: errorRole,\n    }\n  }\n\n  const onChangeData = (\n    e: ChangeEvent<HTMLTextAreaElement | HTMLInputElement> | SelectChangeEvent,\n    length: number,\n  ) => {\n    const { value, name } = e.target\n    const newDatas = { ...formData, [name]: value }\n    setFormData(newDatas)\n    let error: string =\n      name === 'email'\n        ? validateEmail(value)\n        : validateField(name, length, value)\n    let errorConfirm = errors.confirmPassword\n    if (name.toLowerCase().includes('password')) {\n      error = validatePassword(value, name === 'confirmPassword', newDatas)\n      if (name !== 'confirmPassword' && formData.confirmPassword) {\n        errorConfirm = validatePassword(\n          newDatas.confirmPassword,\n          true,\n          newDatas,\n        )\n      }\n    }\n    setErrors({ ...errors, confirmPassword: errorConfirm, [name]: error })\n  }\n\n  const onSubmit = async (e: MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n    setIsDisabled(true)\n    const newErrors = validateForm()\n    if (Object.keys(newErrors).some((key) => !!newErrors[key])) {\n      setErrors(newErrors)\n      setIsDisabled(false)\n      return\n    }\n    try {\n      await onSubmitEdit(dataEdit?.id, formData)\n      setOpenModal(false)\n    } finally {\n      setIsDisabled(false)\n    }\n  }\n  const onCancel = () => {\n    setOpenModal(false)\n  }\n\n  return (\n    <Modal>\n      <ModalBox>\n        <TitleModal>{dataEdit?.id ? 'Edit' : 'Add'} Account</TitleModal>\n        <BoxData>\n          <LabelModal>Name: </LabelModal>\n          <InputError\n            name=\"name\"\n            value={formData?.name || ''}\n            onChange={(e) => onChangeData(e, 100)}\n            onBlur={(e) => onChangeData(e, 100)}\n            errorMessage={errors.name}\n          />\n          <LabelModal>Role: </LabelModal>\n          <SelectError\n            value={formData?.role_id || ''}\n            options={Object.keys(ROLE).filter((key) => !Number(key))}\n            name=\"role_id\"\n            onChange={(e) => onChangeData(e, 50)}\n            onBlur={(e) => onChangeData(e, 50)}\n            errorMessage={errors.role_id}\n          />\n          <LabelModal>e-mail: </LabelModal>\n          <InputError\n            name=\"email\"\n            value={formData?.email || ''}\n            onChange={(e) => onChangeData(e, 255)}\n            onBlur={(e) => onChangeData(e, 255)}\n            errorMessage={errors.email}\n          />\n          {!dataEdit?.id ? (\n            <>\n              <LabelModal>Password: </LabelModal>\n              <InputError\n                name=\"password\"\n                value={formData?.password || ''}\n                onChange={(e) => onChangeData(e, 255)}\n                onBlur={(e) => onChangeData(e, 255)}\n                type={'password'}\n                errorMessage={errors.password}\n              />\n              <LabelModal>Confirm Password: </LabelModal>\n              <InputError\n                name=\"confirmPassword\"\n                value={formData?.confirmPassword || ''}\n                onChange={(e) => onChangeData(e, 255)}\n                onBlur={(e) => onChangeData(e, 255)}\n                type={'password'}\n                errorMessage={errors.confirmPassword}\n              />\n            </>\n          ) : null}\n        </BoxData>\n        <ButtonModal>\n          <Button onClick={() => onCancel()}>Cancel</Button>\n          <Button disabled={isDisabled} onClick={(e) => onSubmit(e)}>\n            Ok\n          </Button>\n        </ButtonModal>\n      </ModalBox>\n      {isDisabled ? <Loading /> : null}\n    </Modal>\n  )\n}\n\nconst PopupDelete = ({ open, handleClose, handleOkDel, name }: PopupType) => {\n  if (!open) return null\n  return (\n    <Box>\n      <Dialog open={open} onClose={handleClose} sx={{ margin: 0 }}>\n        <DialogTitle>Do you want delete User \"{name}\"?</DialogTitle>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleOkDel}>Ok</Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  )\n}\n\nconst AccountManager = () => {\n  const dispatch = useDispatch()\n\n  const navigate = useNavigate()\n\n  const listUser = useSelector(selectListUser)\n  const loading = useSelector(selectLoading)\n  const user = useSelector(selectCurrentUser)\n  const admin = useSelector(isAdmin)\n\n  const [searchParams, setParams] = useSearchParams()\n\n  const [openModal, setOpenModal] = useState(false)\n  const [dataEdit, setDataEdit] = useState({})\n  const [newParams, setNewParams] = useState(\n    window.location.search.replace('?', ''),\n  )\n\n  const limit = searchParams.get('limit') || 50\n  const offset = searchParams.get('offset') || 0\n  const name = searchParams.get('name') || undefined\n  const email = searchParams.get('email') || undefined\n  const sort = searchParams.getAll('sort') || []\n  const [openDel, setOpenDel] =\n    useState<{ id?: number; name?: string; open: boolean }>()\n\n  const filterParams = useMemo(() => {\n    return {\n      name: name,\n      email: email,\n    }\n  }, [name, email])\n\n  const sortParams = useMemo(() => {\n    return {\n      sort: sort,\n    }\n    //eslint-disable-next-line\n  }, [JSON.stringify(sort)])\n\n  const params = useMemo(() => {\n    return {\n      limit: Number(limit),\n      offset: Number(offset),\n    }\n  }, [limit, offset])\n\n  const [model, setModel] = useState<{ filter: GridFilterModel; sort: any }>({\n    filter: {\n      items: [\n        {\n          field:\n            Object.keys(filterParams).find(\n              (key) => (filterParams as any)[key],\n            ) || '',\n          operator: 'contains',\n          value: Object.values(filterParams).find((value) => value) || null,\n        },\n      ],\n    },\n    sort: [\n      {\n        field: sortParams.sort[0]?.replace('role', 'role_id') || '',\n        sort: sortParams.sort[1] as GridSortDirection,\n      },\n    ],\n  })\n\n  const { enqueueSnackbar } = useSnackbar()\n\n  const handleClickVariant = (variant: VariantType, mess: string) => {\n    enqueueSnackbar(mess, { variant })\n  }\n\n  useEffect(() => {\n    if (!admin) navigate('/console')\n    //eslint-disable-next-line\n  }, [JSON.stringify(admin)])\n\n  useEffect(() => {\n    setModel({\n      filter: {\n        items: [\n          {\n            field:\n              Object.keys(filterParams).find(\n                (key) => (filterParams as any)[key],\n              ) || '',\n            operator: 'contains',\n            value: Object.values(filterParams).find((value) => value) || null,\n          },\n        ],\n      },\n      sort: [\n        {\n          field: sortParams.sort[0]?.replace('role', 'role_id') || '',\n          sort: sortParams.sort[1] as GridSortDirection,\n        },\n      ],\n    })\n    //eslint-disable-next-line\n  }, [sortParams, filterParams])\n\n  useEffect(() => {\n    if (newParams && newParams !== window.location.search.replace('?', '')) {\n      setNewParams(window.location.search.replace('?', ''))\n    }\n    //eslint-disable-next-line\n  }, [searchParams])\n\n  useEffect(() => {\n    if (newParams === window.location.search.replace('?', '')) return\n    setParams(newParams)\n    //eslint-disable-next-line\n  }, [newParams])\n\n  useEffect(() => {\n    dispatch(getListUser({ ...filterParams, ...sortParams, ...params }))\n    //eslint-disable-next-line\n  }, [limit, offset, email, name, JSON.stringify(sort)])\n\n  const getParamsData = () => {\n    const dataFilter = Object.keys(filterParams)\n      .filter((key) => (filterParams as any)[key])\n      .map((key) => `${key}=${(filterParams as any)[key]}`)\n      .join('&')\n    return dataFilter\n  }\n\n  const paramsManager = useCallback(\n    (page?: number) => {\n      return `limit=${limit}&offset=${page ? page - 1 : offset}`\n    },\n    [limit, offset],\n  )\n\n  const handleSort = useCallback(\n    (rowSelectionModel: GridSortModel) => {\n      setModel({\n        ...model,\n        sort: rowSelectionModel,\n      })\n      let param\n      const filter = getParamsData()\n      if (!rowSelectionModel[0]) {\n        param =\n          filter || sortParams.sort[0] || offset\n            ? `${filter ? `${filter}&` : ''}${paramsManager()}`\n            : ''\n      } else {\n        param = `${filter}${\n          rowSelectionModel[0]\n            ? `${filter ? `&` : ''}sort=${rowSelectionModel[0].field.replace(\n                '_id',\n                '',\n              )}&sort=${rowSelectionModel[0].sort}`\n            : ''\n        }&${paramsManager()}`\n      }\n      setNewParams(param)\n    },\n    //eslint-disable-next-line\n    [paramsManager, getParamsData, model],\n  )\n\n  const handleFilter = (modelFilter: GridFilterModel) => {\n    setModel({\n      ...model,\n      filter: modelFilter,\n    })\n    let filter = ''\n    if (!!modelFilter.items[0]?.value) {\n      filter = modelFilter.items\n        .filter((item) => item.value)\n        .map((item: any) => `${item.field}=${item?.value}`)\n        .join('&')\n    }\n    const { sort } = sortParams\n    const param =\n      sort[0] || filter || offset\n        ? `${filter}${\n            sort[0] ? `${filter ? '&' : ''}sort=${sort[0]}&sort=${sort[1]}` : ''\n          }&${paramsManager()}`\n        : ''\n    setNewParams(param)\n  }\n\n  const handleOpenModal = () => {\n    setOpenModal(true)\n  }\n\n  const handleEdit = (dataEdit: UserDTO) => {\n    setOpenModal(true)\n    setDataEdit(dataEdit)\n  }\n\n  const onSubmitEdit = async (\n    id: number | string | undefined,\n    data: { [key: string]: string },\n  ) => {\n    const { confirmPassword, role_id, ...newData } = data\n    let newRole\n    switch (role_id) {\n      case 'ADMIN':\n        newRole = ROLE.ADMIN\n        break\n      case 'OPERATOR':\n        newRole = ROLE.OPERATOR\n        break\n    }\n    if (id !== undefined) {\n      const data = await dispatch(\n        updateUser({\n          id: id as number,\n          data: { name: newData.name, email: newData.email, role_id: newRole },\n          params: { ...filterParams, ...sortParams, ...params },\n        }),\n      )\n      if ((data as any).error) {\n        if (!navigator.onLine) {\n          handleClickVariant('error', 'Account update failed!')\n          return\n        }\n        handleClickVariant('error', 'This email already exists!')\n      } else {\n        handleClickVariant(\n          'success',\n          'Your account has been edited successfully!',\n        )\n      }\n    } else {\n      const data = await dispatch(\n        createUser({\n          data: { ...newData, role_id: newRole } as AddUserDTO,\n          params: { ...filterParams, ...sortParams, ...params },\n        }),\n      )\n      if (!(data as any).error) {\n        handleClickVariant(\n          'success',\n          'Your account has been created successfully!',\n        )\n      } else {\n        if (!navigator.onLine) {\n          handleClickVariant('error', 'Account creation failed!')\n          return\n        }\n        handleClickVariant('error', 'This email already exists!')\n      }\n    }\n    return undefined\n  }\n\n  const handleOpenPopupDel = (id?: number, name?: string) => {\n    if (!id) return\n    setOpenDel({ id: id, name: name, open: true })\n  }\n\n  const handleClosePopupDel = () => {\n    setOpenDel({ ...openDel, open: false })\n  }\n\n  const handleOkDel = async () => {\n    if (!openDel?.id || !openDel) return\n    const data = await dispatch(\n      deleteUser({\n        id: openDel.id,\n        params: { ...filterParams, ...sortParams, ...params },\n      }),\n    )\n    if ((data as any).error) {\n      handleClickVariant('error', 'Delete user failed!')\n    } else {\n      handleClickVariant('success', 'Account deleted successfully!')\n    }\n    setOpenDel({ ...openDel, open: false })\n  }\n\n  const handleLimit = (event: ChangeEvent<HTMLSelectElement>) => {\n    let filter = ''\n    filter = Object.keys(filterParams)\n      .filter((key) => (filterParams as any)[key])\n      .map((item: any) => `${item}=${(filterParams as any)[item]}`)\n      .join('&')\n    const { sort } = sortParams\n    const param = `${filter}${\n      sort[0] ? `${filter ? '&' : ''}sort=${sort[0]}&sort=${sort[1]}` : ''\n    }&limit=${Number(event.target.value)}&offset=0`\n    setNewParams(param)\n  }\n\n  const handlePage = (event: ChangeEvent<unknown>, page: number) => {\n    if (!listUser) return\n    let filter = ''\n    filter = Object.keys(filterParams)\n      .filter((key) => (filterParams as any)[key])\n      .map((item: any) => `${item}=${(filterParams as any)[item]}`)\n      .join('&')\n    const { sort } = sortParams\n    const param = `${filter}${\n      sort[0] ? `${filter ? '&' : ''}sort=${sort[0]}&sort=${sort[1]}` : ''\n    }&limit=${listUser.limit}&offset=${(page - 1) * Number(limit)}`\n    setNewParams(param)\n  }\n\n  const columns = [\n    {\n      headerName: 'ID',\n      field: 'id',\n      filterable: false,\n      minWidth: 100,\n      flex: 1,\n    },\n    {\n      headerName: 'Name',\n      field: 'name',\n      minWidth: 100,\n      flex: 2,\n      filterOperators: [\n        {\n          label: 'Contains',\n          value: 'contains',\n          InputComponent: ({ applyValue, item }: any) => {\n            return (\n              <Input\n                sx={{ paddingTop: '16px' }}\n                defaultValue={item.value || ''}\n                onChange={(e) => {\n                  if (timeout) clearTimeout(timeout)\n                  timeout = setTimeout(() => {\n                    applyValue({ ...item, value: e.target.value })\n                  }, 300)\n                }}\n              />\n            )\n          },\n        },\n      ],\n      type: 'string',\n    },\n    {\n      headerName: 'Role',\n      field: 'role_id',\n      filterable: false,\n      minWidth: 100,\n      flex: 1,\n      renderCell: (params: { value: number }) => {\n        let role\n        switch (params.value) {\n          case ROLE.ADMIN:\n            role = 'Admin'\n            break\n          case ROLE.OPERATOR:\n            role = 'OPERATOR'\n            break\n        }\n        return <span>{role}</span>\n      },\n    },\n    {\n      headerName: 'Mail',\n      field: 'email',\n      minWidth: 100,\n      flex: 2,\n      filterOperators: [\n        {\n          label: 'Contains',\n          value: 'contains',\n          InputComponent: ({ applyValue, item }: any) => {\n            return (\n              <Input\n                sx={{ paddingTop: '16px' }}\n                defaultValue={item.value || ''}\n                onChange={(e) => {\n                  if (timeout) clearTimeout(timeout)\n                  timeout = setTimeout(() => {\n                    applyValue({ ...item, value: e.target.value })\n                  }, 300)\n                }}\n              />\n            )\n          },\n        },\n      ],\n      type: 'string',\n    },\n    {\n      headerName: '',\n      field: 'action',\n      sortable: false,\n      filterable: false,\n      minWidth: 100,\n      flex: 1,\n      renderCell: (params: { row: UserDTO }) => {\n        const { id, role_id, name, email } = params.row\n        if (!id || !role_id || !name || !email) return null\n        let role: any\n        switch (role_id) {\n          case ROLE.ADMIN:\n            role = 'ADMIN'\n            break\n          case ROLE.OPERATOR:\n            role = 'OPERATOR'\n            break\n        }\n\n        return (\n          <>\n            <ALink\n              sx={{ color: 'red' }}\n              onClick={() =>\n                handleEdit({ id, role_id: role, name, email } as UserDTO)\n              }\n            >\n              <EditIcon sx={{ color: 'black' }} />\n            </ALink>\n            {!(params.row?.id === user?.id) ? (\n              <ALink\n                sx={{ ml: 1.25 }}\n                onClick={() =>\n                  handleOpenPopupDel(params.row?.id, params.row?.name)\n                }\n              >\n                <DeleteIcon sx={{ color: 'red' }} />\n              </ALink>\n            ) : null}\n          </>\n        )\n      },\n    },\n  ]\n\n  return (\n    <AccountManagerWrapper>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          gap: 2,\n          marginBottom: 2,\n        }}\n      >\n        <Button\n          sx={{\n            background: '#000000c4',\n            '&:hover': { backgroundColor: '#00000090' },\n          }}\n          variant=\"contained\"\n          onClick={handleOpenModal}\n        >\n          Add\n        </Button>\n      </Box>\n      <DataGrid\n        sx={{ minHeight: 400, height: 'calc(100vh - 300px)' }}\n        columns={columns as any}\n        rows={listUser?.items || []}\n        filterMode={'server'}\n        sortingMode={'server'}\n        hideFooter\n        onSortModelChange={handleSort}\n        filterModel={model.filter}\n        sortModel={model.sort as GridSortItem[]}\n        onFilterModelChange={handleFilter as any}\n      />\n      {listUser && listUser.items.length > 0 ? (\n        <PaginationCustom\n          data={listUser}\n          handlePage={handlePage}\n          handleLimit={handleLimit}\n          limit={Number(limit)}\n        />\n      ) : null}\n      <PopupDelete\n        open={openDel?.open || false}\n        handleClose={handleClosePopupDel}\n        handleOkDel={handleOkDel}\n        name={openDel?.name}\n      />\n      {openModal ? (\n        <ModalComponent\n          onSubmitEdit={onSubmitEdit}\n          setOpenModal={(flag) => {\n            setOpenModal(flag)\n            if (!flag) {\n              setDataEdit({})\n            }\n          }}\n          dataEdit={dataEdit}\n        />\n      ) : null}\n      {loading ? <Loading /> : null}\n    </AccountManagerWrapper>\n  )\n}\n\nconst AccountManagerWrapper = styled(Box)(({ theme }) => ({\n  width: '80%',\n  margin: theme.spacing(5, 'auto'),\n}))\n\nconst ALink = styled('a')({\n  color: '#1677ff',\n  textDecoration: 'none',\n  cursor: 'pointer',\n  userSelect: 'none',\n})\n\nconst Modal = styled(Box)(({ theme }) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  width: '100%',\n  height: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: '#cccccc80',\n}))\n\nconst ModalBox = styled(Box)(({ theme }) => ({\n  width: 800,\n  backgroundColor: 'white',\n  border: '1px solid black',\n}))\n\nconst TitleModal = styled(Box)(({ theme }) => ({\n  fontSize: 25,\n  margin: theme.spacing(5),\n}))\n\nconst BoxData = styled(Box)(({ theme }) => ({\n  marginTop: 35,\n}))\n\nconst LabelModal = styled(Box)(({ theme }) => ({\n  width: 300,\n  display: 'inline-block',\n  textAlign: 'end',\n  marginRight: theme.spacing(0.5),\n}))\n\nconst ButtonModal = styled(Box)(({ theme }) => ({\n  button: {\n    fontSize: 20,\n  },\n  display: 'flex',\n  justifyContent: 'end',\n  margin: theme.spacing(5),\n}))\n\nexport default AccountManager\n","import { Box, Stack, styled, Typography } from '@mui/material'\nimport { useDispatch } from 'react-redux'\nimport { getMe, login } from 'store/slice/User/UserActions'\nimport { AppDispatch } from 'store/store'\nimport { ChangeEvent, FormEvent, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport Loading from 'components/common/Loading'\n\nconst Login = () => {\n  const navigate = useNavigate()\n  const dispatch: AppDispatch = useDispatch()\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [errors, setErrors] = useState<{ [key: string]: string }>({\n    email: '',\n    password: '',\n  })\n  const [values, setValues] = useState<{ email: string; password: string }>({\n    email: '',\n    password: '',\n  })\n\n  const onSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    const errorCheck = validateSubmit()\n    if (errorCheck) return\n    setIsLoading(true)\n    dispatch(login(values))\n      .unwrap()\n      .then(async (_) => {\n        await dispatch(getMe())\n        navigate('/console')\n      })\n      .catch((_) => {\n        setErrors({ email: 'Email or password is wrong', password: '' })\n      })\n      .finally(() => {\n        setIsLoading(false)\n      })\n  }\n\n  const validateSubmit = () => {\n    let errors = { email: '', password: '' }\n    if (!values.email) {\n      errors.email = 'This field is required'\n    }\n    if (!values.password) {\n      errors.password = 'This field is required'\n    }\n    setErrors(errors)\n    return errors.password || errors.email\n  }\n\n  const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target\n    setValues({ ...values, [name]: value })\n    setErrors({ ...errors, [name]: !value ? 'This field is required' : '' })\n  }\n\n  return (\n    <LoginWrapper>\n      <LoginContent>\n        <Title data-testid=\"title\">Sign in to your account</Title>\n        <FormSignUp autoComplete=\"off\" onSubmit={onSubmit}>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Email<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"email\"\n              autoComplete=\"off\"\n              error={!!errors.email}\n              name=\"email\"\n              onChange={onChangeValue}\n              value={values.email}\n              placeholder=\"Enter your email\"\n            />\n            <TextError data-testid=\"error-email\">{errors.email}</TextError>\n          </Box>\n          <Box sx={{ position: 'relative' }}>\n            <LabelField>\n              Password<LableRequired>*</LableRequired>\n            </LabelField>\n            <Input\n              data-testid=\"password\"\n              autoComplete=\"off\"\n              error={!!errors.password}\n              onChange={onChangeValue}\n              name=\"password\"\n              type=\"password\"\n              value={values.password}\n              placeholder=\"Enter your password\"\n            />\n            <TextError data-testid=\"error-password\">\n              {errors.password}\n            </TextError>\n          </Box>\n          <Description>\n            Forgot your password?\n            <LinkWrappper to=\"/reset-password\">Reset password</LinkWrappper>\n          </Description>\n          <Stack\n            flexDirection=\"row\"\n            gap={2}\n            mt={3}\n            alignItems=\"center\"\n            justifyContent=\"flex-end\"\n          >\n            <ButtonLogin data-testid=\"button-submit\" type=\"submit\">\n              SIGN IN\n            </ButtonLogin>\n          </Stack>\n        </FormSignUp>\n      </LoginContent>\n      {isLoading && <Loading />}\n    </LoginWrapper>\n  )\n}\n\nconst LoginWrapper = styled(Box)({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n  padding: 30,\n  boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n  borderRadius: 4,\n})\n\nconst Title = styled(Typography)({\n  fontSize: 15,\n  fontWeight: 600,\n  marginBottom: 24,\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n  fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n  color: 'red',\n  fontSize: 14,\n  marginLeft: 2,\n})\n\nconst Input = styled('input', {\n  shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n  return {\n    width: 250,\n    height: 24,\n    borderRadius: 4,\n    border: '1px solid',\n    borderColor: error ? 'red' : '#d9d9d9',\n    padding: '5px 10px',\n    marginBottom: 22,\n    transition: 'all 0.3s',\n    outline: 'none',\n    ':focus, :hover': {\n      borderColor: '#1677ff',\n    },\n  }\n})\n\nconst Description = styled(Typography)(({ theme }) => ({\n  fontSize: 12,\n  color: 'rgba(0, 0, 0, 0.65)',\n  marginTop: theme.spacing(1),\n}))\n\nconst LinkWrappper = styled(Link)({\n  marginLeft: 6,\n  color: '#1892d1',\n})\n\nconst ButtonLogin = styled('button')({\n  backgroundColor: '#283237',\n  color: '#ffffff',\n  borderRadius: 4,\n  border: 'none',\n  outline: 'none',\n  padding: '10px 20px',\n  cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n  fontSize: 12,\n  color: 'red',\n  position: 'absolute',\n  bottom: 4,\n})\n\nexport default Login\n","import { ChangeEvent, FormEvent, useState } from 'react'\nimport { useNavigate } from \"react-router-dom\"\nimport { Box, Stack, styled, Typography, Link } from '@mui/material'\nimport { sendResetPasswordMailApi } from 'api/auth/Auth'\nimport Loading from \"components/common/Loading\"\nimport { regexEmail } from 'const/Auth'\n\nconst ResetPassword = () => {\n    const navigate = useNavigate()\n    const [isLoading, setIsLoading] = useState(false)\n    const [errors, setErrors] = useState<{ [key: string]: string }>({\n        email: '',\n    })\n    const [values, setValues] = useState<{ email: string }>({\n        email: '',\n    })\n\n    const onReset = async (event: FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n\n        const errorCheck = validateSubmit()\n        if (errors.email || errorCheck) return\n        setIsLoading(true)\n        try {\n            await sendResetPasswordMailApi(values.email)\n            setTimeout(()=>{\n                alert(` You'll receive a link to reset your password at ${values.email}. Please check your mail!`)\n            },300)\n        }\n        catch {\n            setTimeout(()=>{\n                alert('Email does not exists!')\n            },300)\n        }\n        finally {\n            setIsLoading(false)\n        }\n    }\n\n    const validateEmail = (value: string): string => {\n        if(!value) return 'This field is required'\n        if(value.length > 255) return 'The text may not be longer than 255 characters'\n        if(!regexEmail.test(value)) return 'The email is invalid'\n        return ''\n    }\n\n    const validateSubmit = () => {\n        let errors = { email: '' }\n        errors.email = validateEmail(values.email)\n        setErrors(errors)\n        return errors.email\n    }\n\n    const onChangeValue = (event: ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target\n        const error = validateEmail(value)\n        setValues({ ...values, [name]: value })\n        setErrors({ ...errors, [name]: error })\n    }\n\n    return (\n        <LoginWrapper>\n            <LoginContent>\n                <Heading>Forgot password?</Heading>\n                <Title>No worries, we'll send you reset instructions.</Title>\n                <FormSignUp autoComplete=\"off\" onSubmit={onReset}>\n                    <Box sx={{ position: 'relative' }}>\n                        <LabelField>\n                            Email<LableRequired>*</LableRequired>\n                        </LabelField>\n                        <Input\n                            autoComplete=\"off\"\n                            error={!!errors.email}\n                            name=\"email\"\n                            onChange={onChangeValue}\n                            value={values.email}\n                            placeholder=\"Enter your email\"\n                        />\n                        <TextError>{errors.email}</TextError>\n                    </Box>\n                    <Stack\n                        flexDirection=\"row\"\n                        gap={2}\n                        mt={3}\n                        alignItems=\"center\"\n                        justifyContent=\"space-between\"\n                    >\n                        <ButtonSignIn onClick={() => navigate('/login')}>Back to SIGN IN</ButtonSignIn>\n                        <ButtonLogin type=\"submit\">Reset Password</ButtonLogin>\n                    </Stack>\n                </FormSignUp>\n            </LoginContent>\n            {\n                isLoading && <Loading />\n            }\n        </LoginWrapper>\n    )\n}\n\nconst LoginWrapper = styled(Box)({\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n})\n\nconst LoginContent = styled(Box)({\n    padding: 30,\n    boxShadow: '2px 1px 3px 1px rgba(0,0,0,0.1)',\n    borderRadius: 4,\n})\n\nconst Heading = styled(Typography)({\n    fontSize: 22,\n    textAlign: 'center',\n    fontWeight: 600,\n})\n\nconst Title = styled(Typography)({\n    textAlign: 'center',\n    marginBottom: 24,\n    fontSize: 12,\n    color: 'rgba(0, 0, 0, 0.65)',\n})\n\nconst ButtonSignIn = styled(Link)({\n    fontSize: 12,\n    '&:hover': {\n        cursor: 'pointer'\n    }\n})\n\nconst FormSignUp = styled('form')({})\n\nconst LabelField = styled(Typography)({\n    fontSize: 14,\n})\n\nconst LableRequired = styled('span')({\n    color: 'red',\n    fontSize: 14,\n    marginLeft: 2,\n})\n\nconst Input = styled('input', {\n    shouldForwardProp: (props) => props !== 'error',\n})<{ error: boolean }>(({ error }) => {\n    return {\n        width: 250,\n        height: 24,\n        borderRadius: 4,\n        border: '1px solid',\n        borderColor: error ? 'red' : '#d9d9d9',\n        padding: '5px 10px',\n        marginBottom: 22,\n        transition: 'all 0.3s',\n        outline: 'none',\n        ':focus, :hover': {\n            borderColor: '#1677ff',\n        },\n    }\n})\n\n\nconst ButtonLogin = styled('button')({\n    backgroundColor: '#283237',\n    color: '#ffffff',\n    borderRadius: 4,\n    border: 'none',\n    outline: 'none',\n    padding: '10px 20px',\n    cursor: 'pointer',\n})\n\nconst TextError = styled(Typography)({\n    fontSize: 12,\n    color: 'red',\n    position: 'absolute',\n    bottom: 4,\n})\n\nexport default ResetPassword\n","import {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Input,\n  styled,\n} from '@mui/material'\nimport {\n  DataGrid,\n  GridRenderCellParams,\n  GridValidRowModel,\n} from '@mui/x-data-grid'\nimport {\n  ChangeEvent,\n  MouseEvent as MouseEventReact,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport CancelIcon from '@mui/icons-material/Cancel'\nimport { postListUserShareWorkspaces } from 'store/slice/Workspace/WorkspaceActions'\nimport { selectListSearch, selectLoading } from 'store/slice/User/UserSelector'\nimport { getListSearch } from 'store/slice/User/UserActions'\nimport Loading from 'components/common/Loading'\nimport { UserDTO } from 'api/users/UsersApiDTO'\nimport CheckIcon from '@mui/icons-material/Check'\nimport { resetUserSearch } from 'store/slice/User/UserSlice'\n\ntype PopupType = {\n  open: boolean\n  id: number\n  handleClose: (v: boolean) => void\n  title?: string\n  usersShare?: {\n    share_type?: number\n    users: UserDTO[]\n  }\n}\n\ntype TableSearch = {\n  usersSuggest: UserDTO[]\n  onClose: () => void\n  handleAddListUser: (user: UserDTO) => void\n  stateUserShare: UserDTO[]\n}\n\nconst TableListSearch = ({\n  usersSuggest,\n  onClose,\n  handleAddListUser,\n  stateUserShare,\n}: TableSearch) => {\n  const ref = useRef<HTMLLIElement | null>(null)\n\n  useEffect(() => {\n    window.addEventListener('mousedown', onMouseDown)\n    return () => {\n      window.removeEventListener('mousedown', onMouseDown)\n    }\n    //eslint-disable-next-line\n  }, [])\n\n  const onMouseDown = (event: MouseEvent) => {\n    if (\n      ref.current?.contains((event as any).target) ||\n      (event as any).target.id === 'inputSearch'\n    )\n      return\n    onClose?.()\n  }\n\n  return (\n    <TableListSearchWrapper ref={ref} onBlur={() => console.log(123)}>\n      <UlCustom>\n        {usersSuggest.map((item) => {\n          const isSelected = stateUserShare.some((i) => i.id === item.id)\n          return (\n            <LiCustom\n              key={item.id}\n              onClick={() => handleAddListUser(item)}\n              style={{\n                cursor: isSelected ? 'not-allowed' : 'pointer',\n              }}\n            >\n              {`${item.name} (${item.email})`}\n              {isSelected ? <CheckIcon style={{ fontSize: 14 }} /> : null}\n            </LiCustom>\n          )\n        })}\n      </UlCustom>\n    </TableListSearchWrapper>\n  )\n}\nconst PopupShare = ({\n  open,\n  handleClose,\n  usersShare,\n  id,\n  title,\n}: PopupType) => {\n  const usersSuggest = useSelector(selectListSearch)\n  const loading = useSelector(selectLoading)\n  const [textSearch, setTextSearch] = useState('')\n  const [stateUserShare, setStateUserShare] = useState(usersShare || undefined)\n  const dispatch = useDispatch()\n  let timeout = useRef<NodeJS.Timeout | undefined>()\n\n  useEffect(() => {\n    if (usersShare) {\n      // setUserIdsSelected(usersShare.users.map(user => user.id));\n      setStateUserShare(usersShare)\n    }\n  }, [usersShare])\n\n  useEffect(() => {\n    if (timeout.current) clearTimeout(timeout.current)\n    if (!textSearch) {\n      dispatch(resetUserSearch())\n      return\n    }\n    timeout.current = setTimeout(() => {\n      dispatch(getListSearch({ keyword: textSearch }))\n    }, 300)\n    //eslint-disable-next-line\n  }, [textSearch])\n\n  const handleShareFalse = (\n    e: any,\n    params: GridRenderCellParams<GridValidRowModel>,\n  ) => {\n    e.preventDefault()\n    e.stopPropagation()\n    if (!stateUserShare) return\n    const indexCheck = stateUserShare.users.findIndex(\n      (user) => user.id === params.id,\n    )\n    const newStateUserShare = stateUserShare.users.filter(\n      (user, index) => index !== indexCheck,\n    )\n    setStateUserShare({ ...setStateUserShare, users: newStateUserShare })\n  }\n\n  const columnsShare = useCallback(\n    (\n      handleShareFalse: (\n        e: MouseEventReact<HTMLButtonElement>,\n        parmas: GridRenderCellParams<GridValidRowModel>,\n      ) => void,\n    ) => [\n      {\n        field: 'name',\n        headerName: 'Name',\n        minWidth: 140,\n        renderCell: (params: GridRenderCellParams<GridValidRowModel>) => (\n          <span>{params.row.name}</span>\n        ),\n      },\n      {\n        field: 'email',\n        headerName: 'Email',\n        minWidth: 280,\n        renderCell: (params: GridRenderCellParams<GridValidRowModel>) => (\n          <span>{params.row.email}</span>\n        ),\n      },\n      {\n        field: 'share',\n        headerName: '',\n        filterable: false,\n        sortable: false,\n        minWidth: 130,\n        renderCell: (params: GridRenderCellParams<GridValidRowModel>) => {\n          if (!params.row.share) return ''\n          return (\n            <Button onClick={(e) => handleShareFalse(e, params)}>\n              <CancelIcon color={'error'} />\n            </Button>\n          )\n        },\n      },\n    ],\n    //eslint-disable-next-line\n    [JSON.stringify(stateUserShare?.users)],\n  )\n\n  const handleOke = async () => {\n    if (!stateUserShare) return\n    let newUserIds = stateUserShare.users.map((user) => user.id)\n    await dispatch(\n      postListUserShareWorkspaces({\n        id,\n        data: { user_ids: newUserIds as number[] },\n      }),\n    )\n    handleClose(true)\n  }\n\n  const handleSearch = (event: ChangeEvent<HTMLInputElement>) => {\n    setTextSearch(event.target.value)\n  }\n\n  const handleCloseSearch = () => {\n    setTextSearch('')\n    dispatch(resetUserSearch())\n  }\n\n  const handleAddListUser = (user: any) => {\n    if (!usersSuggest || !stateUserShare) return\n    if (!stateUserShare.users.find((item) => item.id === user.id)) {\n      setStateUserShare({\n        ...stateUserShare,\n        users: [...stateUserShare.users, user],\n      })\n    }\n  }\n\n  const handleClosePopup = (event: any) => {\n    if (event.key === 'Escape') {\n      handleClose(false)\n    }\n  }\n\n  if (!usersShare) return null\n\n  return (\n    <Box>\n      <DialogCustom\n        open={open}\n        onClose={handleClose}\n        sx={{ margin: 0 }}\n        onKeyDown={handleClosePopup}\n      >\n        <DialogTitle>{title || 'Share Database Record'}</DialogTitle>\n        <DialogContent>\n          <>\n            <Box style={{ position: 'relative' }}>\n              <Input\n                id=\"inputSearch\"\n                sx={{ width: '60%' }}\n                placeholder={'Search and add users'}\n                value={textSearch}\n                onChange={handleSearch}\n              />\n              {textSearch && usersSuggest ? (\n                <TableListSearch\n                  onClose={handleCloseSearch}\n                  usersSuggest={usersSuggest}\n                  stateUserShare={stateUserShare?.users || []}\n                  handleAddListUser={handleAddListUser}\n                />\n              ) : null}\n            </Box>\n            <p>Permitted users</p>\n            {stateUserShare && (\n              <DataGrid\n                sx={{ minHeight: 400 }}\n                // onRowClick={handleShareTrue}\n                rows={stateUserShare?.users.map((user: any) => ({\n                  ...user,\n                  share: true,\n                }))}\n                columns={columnsShare(handleShareFalse)}\n                hideFooterPagination\n              />\n            )}\n          </>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleClose(false)}>Cancel</Button>\n          <Button onClick={handleOke}>Ok</Button>\n        </DialogActions>\n      </DialogCustom>\n      {loading ? <Loading /> : null}\n    </Box>\n  )\n}\n\nconst DialogCustom = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialog-container': {\n    '& .MuiPaper-root': {\n      width: '70%',\n      maxWidth: '890px',\n    },\n  },\n}))\n\nconst TableListSearchWrapper = styled(Box)(({ theme }) => ({\n  position: 'absolute',\n  background: '#fff',\n  zIndex: 100,\n  width: '60%',\n  boxShadow:\n    '0 6px 16px 0 rgba(0,0,0,.08), 0 3px 6px -4px rgba(0,0,0,.12), 0 9px 28px 8px rgba(0,0,0,.05)',\n  borderBottomLeftRadius: 8,\n  borderBottomRightRadius: 8,\n  maxHeight: 200,\n  overflow: 'auto',\n}))\n\nconst UlCustom = styled('ul')(({ theme }) => ({\n  listStyle: 'none',\n  padding: 0,\n  margin: 0,\n}))\n\nconst LiCustom = styled('li')(({ theme }) => ({\n  padding: theme.spacing(1, 2),\n  fontSize: 14,\n  cursor: 'pointer',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  '&:hover': {\n    backgroundColor: 'rgba(0,0,0,.04)',\n  },\n}))\n\nexport default PopupShare\n","import { useSelector, useDispatch } from 'react-redux'\nimport {\n  Box,\n  styled,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Input,\n  Tooltip,\n} from '@mui/material'\nimport {\n  GridEventListener,\n  GridRenderCellParams,\n  GridRowModes,\n  GridValidRowModel,\n  DataGrid,\n} from '@mui/x-data-grid'\nimport { useNavigate, useSearchParams } from 'react-router-dom'\nimport Loading from 'components/common/Loading'\nimport {\n  selectIsLoadingWorkspaceList,\n  selectWorkspaceData,\n  selectWorkspaceListUserShare,\n} from 'store/slice/Workspace/WorkspaceSelector'\nimport { ChangeEvent, useCallback, useEffect, useMemo, useState } from 'react'\nimport {\n  delWorkspace,\n  getListUserShareWorkSpaces,\n  getWorkspaceList,\n  postWorkspace,\n  putWorkspace,\n} from 'store/slice/Workspace/WorkspaceActions'\nimport PopupShare from 'components/Workspace/PopupShare'\nimport moment from 'moment'\nimport GroupsIcon from '@mui/icons-material/Groups'\nimport EditIcon from '@mui/icons-material/Edit'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport { selectCurrentUser } from 'store/slice/User/UserSelector'\nimport { UserDTO } from 'api/users/UsersApiDTO'\nimport { isMine } from 'store/slice/Workspace/WorkspaceUtils'\nimport PaginationCustom from 'components/common/PaginationCustom'\nimport { useSnackbar, VariantType } from 'notistack'\n\ntype PopupType = {\n  open: boolean\n  handleClose: () => void\n  handleOkDel?: () => void\n  setNewWorkSpace?: (name: string) => void\n  value?: string\n  handleOkNew?: () => void\n  handleOkSave?: () => void\n  error?: string\n  nameWorkspace?: string\n}\n\nconst columns = (\n  handleOpenPopupShare: (id: number) => void,\n  handleOpenPopupDel: (id: number, nameWorkspace: string) => void,\n  handleNavWorkflow: (id: number) => void,\n  handleNavRecords: (id: number) => void,\n  user?: UserDTO,\n  onEdit?: (id: number) => void,\n) => [\n  {\n    field: 'id',\n    headerName: 'ID',\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    flex: 1,\n    minWidth: 70,\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) => (\n      <span>{params.value}</span>\n    ),\n  },\n  {\n    field: 'name',\n    headerName: 'Workspace Name',\n    flex: 2,\n    minWidth: 100,\n    editable: true,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) => {\n      const { row, value } = params\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            gap: 2,\n            justifyContent: 'space-between',\n            width: '100%',\n          }}\n        >\n          <Tooltip title={value} placement=\"top\">\n            <span\n              style={{\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                width: '100%',\n              }}\n            >\n              {value}\n            </span>\n          </Tooltip>\n          {isMine(user, row?.user?.id) ? (\n            <ButtonIcon onClick={() => onEdit?.(row.id)}>\n              <EditIcon style={{ fontSize: 16 }} />\n            </ButtonIcon>\n          ) : null}\n        </Box>\n      )\n    },\n  },\n  {\n    field: 'user',\n    headerName: 'Owner',\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    flex: 2,\n    minWidth: 100,\n    renderCell: (\n      params: GridRenderCellParams<{ name: string; id: number }>,\n    ) => (\n      <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n        {params.value ? (\n          <>\n            <span>{params.value?.name}</span>\n            {!isMine(user, params?.value.id) ? <GroupsIcon /> : ''}\n          </>\n        ) : null}\n      </Box>\n    ),\n  },\n  {\n    field: 'created_at',\n    headerName: 'Created',\n    flex: 2,\n    minWidth: 100,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) => (\n      <span\n        style={{\n          whiteSpace: 'normal',\n          wordBreak: 'break-all',\n          overflowWrap: 'break-word',\n        }}\n      >\n        {moment(params.value).format('YYYY/MM/DD hh:mm')}\n      </span>\n    ),\n  },\n  {\n    field: 'workflow',\n    headerName: '',\n    flex: 1,\n    minWidth: 160,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) => (\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        onClick={() => handleNavWorkflow(params.row.id)}\n      >\n        Workflow\n      </Button>\n    ),\n  },\n  {\n    field: 'records',\n    headerName: '',\n    flex: 1,\n    minWidth: 100,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) => {\n      return (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          onClick={() => handleNavRecords(params.row.id)}\n        >\n          Records\n        </Button>\n      )\n    },\n  },\n  {\n    field: 'share',\n    headerName: '',\n    flex: 1,\n    minWidth: 70,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) =>\n      isMine(user, params.row?.user?.id) ? (\n        <ButtonIcon onClick={() => handleOpenPopupShare(params.row.id)}>\n          <GroupsIcon color={params.row.shared_count ? 'primary' : 'inherit'} />\n        </ButtonIcon>\n      ) : null,\n  },\n  {\n    field: 'delete',\n    headerName: '',\n    flex: 1,\n    minWidth: 70,\n    filterable: false, // todo enable when api complete\n    sortable: false, // todo enable when api complete\n    renderCell: (params: GridRenderCellParams<GridValidRowModel>) =>\n      isMine(user, params.row?.user?.id) ? (\n        <ButtonIcon\n          onClick={() => handleOpenPopupDel(params.row.id, params.row.name)}\n        >\n          <DeleteIcon color=\"error\" />\n        </ButtonIcon>\n      ) : null,\n  },\n]\n\nconst PopupNew = ({\n  open,\n  handleClose,\n  value,\n  setNewWorkSpace,\n  handleOkNew,\n  error,\n}: PopupType) => {\n  if (!setNewWorkSpace) return null\n  const handleName = (event: ChangeEvent<HTMLInputElement>) => {\n    setNewWorkSpace(event.target.value)\n  }\n\n  return (\n    <Box>\n      <Dialog open={open} onClose={handleClose} sx={{ margin: 0 }}>\n        <DialogTitle>New Workspace</DialogTitle>\n        <DialogContent sx={{ minWidth: 300 }}>\n          <Input\n            sx={{ width: '80%' }}\n            placeholder={'Workspace Name'}\n            value={value || ''}\n            onChange={handleName}\n          />\n          <br />\n          {error ? <span style={{ color: 'red' }}>{error}</span> : null}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleOkNew}>Ok</Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  )\n}\n\nconst PopupDelete = ({\n  open,\n  handleClose,\n  handleOkDel,\n  nameWorkspace,\n}: PopupType) => {\n  if (!open) return null\n  return (\n    <Box>\n      <Dialog open={open} onClose={handleClose} sx={{ margin: 0 }}>\n        <DialogTitle>\n          Do you want delete Workspace \"{nameWorkspace}\"?\n        </DialogTitle>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleOkDel}>Ok</Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  )\n}\n\nconst Workspaces = () => {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const loading = useSelector(selectIsLoadingWorkspaceList)\n  const listUserShare = useSelector(selectWorkspaceListUserShare)\n  const data = useSelector(selectWorkspaceData)\n  const user = useSelector(selectCurrentUser)\n  const [open, setOpen] = useState({\n    share: false,\n    del: false,\n    new: false,\n    shareId: 0,\n  })\n  const [workspaceDel, setWorkspaceDel] =\n    useState<{ id: number; name: string }>()\n  const [newWorkspace, setNewWorkSpace] = useState<string>()\n  const [error, setError] = useState('')\n  const [initName, setInitName] = useState('')\n  const [rowModesModel, setRowModesModel] = useState<any>({})\n  const [searchParams, setParams] = useSearchParams()\n\n  const { enqueueSnackbar } = useSnackbar()\n\n  const handleClickVariant = (variant: VariantType, mess: string) => {\n    enqueueSnackbar(mess, { variant })\n  }\n\n  const offset = searchParams.get('offset')\n  const limit = searchParams.get('limit')\n\n  const dataParams = useMemo(() => {\n    return {\n      offset: Number(offset) || 0,\n      limit: Number(limit) || 50,\n    }\n    //eslint-disable-next-line\n  }, [offset, limit])\n\n  useEffect(() => {\n    dispatch(getWorkspaceList(dataParams))\n    //eslint-disable-next-line\n  }, [dataParams])\n\n  const handleOpenPopupShare = (shareId: number) => {\n    setOpen({ ...open, share: true, shareId })\n  }\n\n  useEffect(() => {\n    if (!open.share || !open.shareId) return\n    dispatch(getListUserShareWorkSpaces({ id: open.shareId }))\n    //eslint-disable-next-line\n  }, [open.share, open.shareId])\n\n  const handleClosePopupShare = () => {\n    setOpen({ ...open, share: false })\n  }\n\n  const handleOpenPopupDel = (id: number, name: string) => {\n    setWorkspaceDel({ id, name })\n    setOpen({ ...open, del: true })\n  }\n\n  const handleOkDel = async () => {\n    if (!workspaceDel) return\n    const data = await dispatch(\n      delWorkspace({ id: workspaceDel.id, params: dataParams }),\n    )\n    if ((data as any).error) {\n      handleClickVariant('error', 'Workspace deletion failed!')\n    } else {\n      handleClickVariant(\n        'success',\n        'The workspace has been deleted successfully!',\n      )\n    }\n    setOpen({ ...open, del: false })\n  }\n\n  const handleClosePopupDel = () => {\n    setOpen({ ...open, del: false })\n  }\n\n  const handleOpenPopupNew = () => {\n    setOpen({ ...open, new: true })\n  }\n\n  const handleClosePopupNew = () => {\n    setOpen({ ...open, new: false })\n    setError('')\n  }\n\n  const handleNavWorkflow = (id: number) => {\n    navigate(`/console/workspaces/${id}`)\n  }\n\n  const handleNavRecords = (id: number) => {\n    navigate(`/console/workspaces/${id}`, { state: { tab: 2 } })\n  }\n\n  const onEditName = (id: number) => {\n    setRowModesModel((pre: any) => ({\n      ...pre,\n      [id]: { mode: GridRowModes.Edit },\n    }))\n  }\n\n  const handleOkNew = async () => {\n    if (!newWorkspace) {\n      setError(\"Workspace Name cann't empty\")\n      return\n    }\n    const data = await dispatch(postWorkspace({ name: newWorkspace }))\n    if ((data as any).error) {\n      handleClickVariant('error', 'Workspace creation failed!')\n    } else {\n      handleClickVariant(\n        'success',\n        'The workspace has been created successfully!',\n      )\n    }\n    await dispatch(getWorkspaceList(dataParams))\n    setOpen({ ...open, new: false })\n    setError('')\n    setNewWorkSpace('')\n  }\n\n  const onProcessRowUpdateError = (newRow: any) => {\n    return newRow\n  }\n\n  const pagi = useCallback(\n    (page?: number) => {\n      return `limit=${data.limit}&offset=${\n        page ? (page - 1) * data.limit : data.offset\n      }`\n    },\n    [data?.limit, data?.offset],\n  )\n\n  const handlePage = (e: ChangeEvent<unknown>, page: number) => {\n    setParams(`&${pagi(page)}`)\n  }\n\n  const handleRowModesModelChange = (newRowModesModel: any) => {\n    setRowModesModel(newRowModesModel)\n  }\n\n  const onRowEditStop: GridEventListener<'rowEditStop'> = (params, event) => {\n    setInitName(params.row.name)\n  }\n\n  const onCellClick: GridEventListener<'cellClick'> | undefined = (\n    event: any,\n  ) => {\n    if (event.field === 'name') return\n    setRowModesModel((pre: any) => {\n      const object: any = {}\n      Object.keys(pre).forEach((key) => {\n        object[key] = {\n          mode: GridRowModes.View,\n          ignoreModifications: false,\n        }\n      })\n      return object\n    })\n  }\n\n  const processRowUpdate = async (newRow: any) => {\n    if (!newRow.name) {\n      handleClickVariant('error', \"Workspace Name cann't empty\")\n      return { ...newRow, name: initName }\n    }\n    if (newRow.name === initName) return newRow\n    const data = await dispatch(\n      putWorkspace({ name: newRow.name, id: newRow.id }),\n    )\n    if ((data as any).error) {\n      handleClickVariant('error', 'Workspace name edit failed!')\n    } else {\n      handleClickVariant('success', 'Workspace name edited successfully!')\n    }\n    await dispatch(getWorkspaceList(dataParams))\n    return newRow\n  }\n\n  const handleLimit = (event: ChangeEvent<HTMLSelectElement>) => {\n    setParams(`limit=${Number(event.target.value)}&offset=0`)\n  }\n\n  return (\n    <WorkspacesWrapper>\n      <WorkspacesTitle>Workspaces</WorkspacesTitle>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          gap: 2,\n          marginBottom: 2,\n        }}\n      >\n        <Button\n          sx={{\n            background: '#000000c4',\n            '&:hover': { backgroundColor: '#00000090' },\n          }}\n          variant=\"contained\"\n          onClick={handleOpenPopupNew}\n        >\n          New\n        </Button>\n      </Box>\n      {user ? (\n        <Box\n          sx={{\n            minHeight: 500,\n            height: 'calc(100vh - 350px)',\n          }}\n        >\n          <DataGrid\n            onCellClick={onCellClick}\n            rows={data?.items}\n            editMode=\"row\"\n            rowModesModel={rowModesModel}\n            columns={\n              columns(\n                handleOpenPopupShare,\n                handleOpenPopupDel,\n                handleNavWorkflow,\n                handleNavRecords,\n                user,\n                onEditName,\n              ).filter(Boolean) as any\n            }\n            onRowModesModelChange={handleRowModesModelChange}\n            isCellEditable={(params) => isMine(user, params.row.user?.id)}\n            onProcessRowUpdateError={onProcessRowUpdateError}\n            onRowEditStop={onRowEditStop}\n            processRowUpdate={processRowUpdate as any}\n            hideFooter={true}\n          />\n        </Box>\n      ) : null}\n      {data?.items.length > 0 ? (\n        <PaginationCustom\n          data={data}\n          handlePage={handlePage}\n          handleLimit={handleLimit}\n          limit={Number(limit)}\n        />\n      ) : null}\n      {open.share ? (\n        <PopupShare\n          title=\"Share Workspace\"\n          usersShare={listUserShare}\n          open={open.share}\n          handleClose={(_isSubmit: boolean) => {\n            if (_isSubmit) {\n              dispatch(getWorkspaceList(dataParams))\n            }\n            handleClosePopupShare()\n          }}\n          id={open.shareId}\n        />\n      ) : null}\n      <PopupDelete\n        open={open.del}\n        handleClose={handleClosePopupDel}\n        handleOkDel={handleOkDel}\n        nameWorkspace={workspaceDel?.name}\n      />\n      <PopupNew\n        open={open.new}\n        handleClose={handleClosePopupNew}\n        setNewWorkSpace={setNewWorkSpace}\n        value={newWorkspace}\n        error={error}\n        handleOkNew={handleOkNew}\n      />\n      {loading ? <Loading /> : null}\n    </WorkspacesWrapper>\n  )\n}\n\nconst WorkspacesWrapper = styled(Box)(({ theme }) => ({\n  margin: 'auto',\n  width: '90vw',\n  padding: theme.spacing(2),\n  overflow: 'auto',\n}))\n\nconst WorkspacesTitle = styled('h1')(({ theme }) => ({}))\n\nconst ButtonIcon = styled('button')(({ theme }) => ({\n  minWidth: '32px',\n  minHeight: '32px',\n  width: '32px',\n  height: '32px',\n  color: '#444',\n  border: 'none',\n  borderRadius: '50%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  cursor: 'pointer',\n  background: 'transparent',\n  '&:hover': {\n    background: 'rgb(239 239 239)',\n  },\n}))\n\nexport default Workspaces\n","import {\n  ParamDTO,\n  ParamChild,\n  ParamParent,\n  ParamType,\n  ParamMap,\n} from './ParamType'\n\nexport function getChildParam(\n  path: string,\n  ParamMap: ParamMap,\n): ParamChild | null {\n  let result: ParamChild | null = null\n  for (const node of Object.values(ParamMap)) {\n    if (isParamChild(node)) {\n      if (node.path === path) {\n        result = node\n      }\n    } else {\n      result = getChildParam(path, node.children)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function isParamChild(param: ParamType): param is ParamChild {\n  return param.type === 'child'\n}\n\nexport function isParamParent(param: ParamType): param is ParamParent {\n  return param.type === 'parent'\n}\n\nfunction isDictObject(value: unknown): value is { [key: string]: unknown } {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst PATH_SEPARATOR = '/'\n\nexport function convertToParamMap(dto: ParamDTO, keyList?: string[]): ParamMap {\n  const ParamMap: ParamMap = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    const kList = keyList ?? []\n    if (isDictObject(value)) {\n      kList.push(name)\n      ParamMap[name] = {\n        type: 'parent',\n        children: convertToParamMap(value, kList),\n      }\n    } else {\n      ParamMap[name] = {\n        type: 'child',\n        value,\n        path: kList.concat([name]).join(PATH_SEPARATOR),\n      }\n    }\n  })\n  return ParamMap\n}\n\nexport function equalsParamMap(a: ParamMap, b: ParamMap) {\n  if (a === b) {\n    return true\n  }\n  const aArray = Object.keys(a)\n  const bArray = Object.keys(b)\n  return (\n    aArray.length === bArray.length &&\n    aArray.every((aKey) => {\n      const aValue = a[aKey]\n      const bValue = b[aKey]\n      return equalsParam(aValue, bValue)\n    })\n  )\n}\n\nfunction equalsParam(a: ParamType, b: ParamType): boolean {\n  if (a === b) {\n    return true\n  }\n  if (isParamChild(a) && isParamChild(b)) {\n    return equalsParamChild(a, b)\n  } else if (isParamParent(a) && isParamParent(b)) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      aArray.length === bArray.length &&\n      aArray.every((aKey) => {\n        const aValue = a.children[aKey]\n        const bValue = b.children[aKey]\n        return equalsParam(aValue, bValue)\n      })\n    )\n  } else {\n    return false\n  }\n}\n\nfunction equalsParamChild(a: ParamChild, b: ParamChild) {\n  return a.path === b.path && a.value === b.value\n}\n","import { RootState } from 'store/store'\n\nimport { getChildParam } from 'utils/param/ParamUtils'\n\nexport const selectAlgorithmNode = (state: RootState) => state.algorithmNode\n\nexport const selectAlgorithmNodeById = (nodeId: string) => (state: RootState) =>\n  state.algorithmNode[nodeId]\n\nexport const selectAlgorithmNodeDefined =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(state.algorithmNode).includes(nodeId)\n\nexport const selectAlgorithmFunctionPath =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).functionPath\n\nexport const selectAlgorithmName = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).name\n\nexport const selectAlgorithmParams = (nodeId: string) => (state: RootState) =>\n  selectAlgorithmNodeById(nodeId)(state).params\n\nexport const selectAlgorithmIsUpdated =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).isUpdated\n\nexport const selectAlgorithmParamsExit =\n  (nodeId: string) => (state: RootState) =>\n    selectAlgorithmNodeById(nodeId)(state).params !== null\n\nexport const selectAlgorithmParamsKeyList =\n  (nodeId: string) => (state: RootState) =>\n    Object.keys(selectAlgorithmNodeById(nodeId)(state)?.params ?? {})\n\nexport const selectAlgorithmParamsValue =\n  (nodeId: string, path: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmParam =\n  (nodeId: string, paramKey: string) => (state: RootState) => {\n    const params = selectAlgorithmParams(nodeId)(state)\n    if (params != null) {\n      return params[paramKey]\n    } else {\n      throw new Error('AlgorithmParam is null')\n    }\n  }\n\nexport const selectAlgorithmNodeNotExist = (state: RootState) =>\n  Object.keys(selectAlgorithmNode(state)).length === 0\n","import { RootState } from 'store/store'\n\nexport const selectFlowNodes = (state: RootState) => state.flowElement.flowNodes\n\nexport const selectFlowEdges = (state: RootState) => state.flowElement.flowEdges\n\nexport const selectFlowPosition = (state: RootState) =>\n  state.flowElement.flowPosition\n\nexport const selectElementCoord = (state: RootState) =>\n  state.flowElement.elementCoord\n\nexport const selectNodeById = (nodeId: string) => (state: RootState) =>\n  selectFlowNodes(state).find((node) => node.id === nodeId)\n\nexport const selectNodeTypeById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.type\n\nexport const selectNodeLabelById = (nodeId: string) => (state: RootState) =>\n  selectNodeById(nodeId)(state)?.data?.label\n","import { Transform, Node, Edge } from 'react-flow-renderer'\n\nexport const FLOW_ELEMENT_SLICE_NAME = 'flowElement'\n\nexport const NODE_TYPE_SET = {\n  INPUT: 'input',\n  ALGORITHM: 'algorithm',\n} as const\n\nexport type NODE_TYPE = (typeof NODE_TYPE_SET)[keyof typeof NODE_TYPE_SET]\n\nexport type NodeData = AlgorithmNodeData | InputNodeData\n\ninterface NodeDataBaseType<T extends NODE_TYPE> {\n  label: string\n  type: T\n}\n\nexport interface InputNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.INPUT> {}\n\nexport interface AlgorithmNodeData\n  extends NodeDataBaseType<typeof NODE_TYPE_SET.ALGORITHM> {}\n\nexport interface ElementCoord {\n  x: number\n  y: number\n}\n\nexport interface FlowElement {\n  flowNodes: Node<NodeData>[]\n  flowEdges: Edge[]\n  flowPosition: Transform\n  elementCoord: ElementCoord\n}\n","import { isNode, Node } from 'react-flow-renderer'\nimport {\n  AlgorithmNodeData,\n  NodeData,\n  NODE_TYPE_SET,\n  InputNodeData,\n} from './FlowElementType'\n\nexport function isNodeData(\n  node: Node<NodeData> | undefined,\n): node is Node<NodeData> {\n  return node != null && isNode(node) && node.data != null\n}\n\nexport function isAlgorithmNodeData(\n  node: Node<NodeData> | undefined,\n): node is Node<AlgorithmNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.ALGORITHM\n}\n\nexport function isInputNodeData(\n  node: Node<NodeData> | undefined,\n): node is Node<InputNodeData> {\n  return isNodeData(node) && node.data?.type === NODE_TYPE_SET.INPUT\n}\n\nexport function getLabelByPath(filePath: string | string[]) {\n  if (Array.isArray(filePath)) {\n    if (filePath.length === 0) {\n      return ''\n    } else if (filePath.length === 1) {\n      return getFileName(filePath[0])\n    } else {\n      return getFileName(filePath[0]) + ` ... and ${filePath.length - 1} files`\n    }\n  } else {\n    return getFileName(filePath)\n  }\n}\n\nexport function getFileName(filePath: string) {\n  return filePath.split('/').reverse()[0]\n}\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nexport const selectNwb = (state: RootState) => state.nwb\n\nexport const selectNwbParams = (state: RootState) => selectNwb(state).params\n\nexport const selectNwbParamsKeyList = (state: RootState) =>\n  Object.keys(selectNwb(state).params)\n\nexport const selectNwbParam = (paramKey: string) => (state: RootState) =>\n  selectNwb(state).params[paramKey]\n\nexport const selectNwbParamsValue = (path: string) => (state: RootState) => {\n  const params = selectNwb(state).params\n  if (params != null) {\n    const target = getChildParam(path, params)\n    return target?.value\n  } else {\n    throw new Error('Param is null')\n  }\n}\n","import { RunPostData } from 'api/run/Run'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\n\nexport const PIPELINE_SLICE_NAME = 'pipeline'\n\nexport type Pipeline = {\n  run: PipelineType\n  currentPipeline?: {\n    uid: string\n  }\n  runBtn: RUN_BTN_TYPE\n}\n\nexport const RUN_STATUS = {\n  /**\n   * 未実行\n   */\n  START_UNINITIALIZED: 'StartUninitialized',\n  /**\n   * 開始リクエスト中\n   */\n  START_PENDING: 'StartPending',\n  /**\n   * 開始できなかった\n   */\n  START_ERROR: 'StartError',\n  /**\n   * 正常に開始した\n   */\n  START_SUCCESS: 'StartSuccess',\n  /**\n   * 全て終了\n   */\n  FINISHED: 'Finished',\n  /**\n   * 途中終了\n   */\n  ABORTED: 'Aborted',\n  /**\n   * キャンセルされた\n   */\n  CANCELED: 'Canceled',\n} as const\n\nexport type RUN_STATUS_TYPE = typeof RUN_STATUS[keyof typeof RUN_STATUS]\n\nexport type PipelineType =\n  | StartedPipeline\n  | {\n      status:\n        | typeof RUN_STATUS.START_ERROR\n        | typeof RUN_STATUS.START_PENDING\n        | typeof RUN_STATUS.START_UNINITIALIZED\n    }\n\nexport type StartedPipeline = {\n  uid: string\n  status:\n    | typeof RUN_STATUS.START_SUCCESS\n    | typeof RUN_STATUS.FINISHED\n    | typeof RUN_STATUS.ABORTED\n    | typeof RUN_STATUS.CANCELED\n  runPostData: RunPostData\n  runResult: RunResult\n}\n\nexport type RunResult = {\n  [nodeId: string]: NodeResult\n}\n\nexport type NodeResult = NodeResultPending | NodeResultSuccess | NodeResultError\n\nexport const NODE_RESULT_STATUS = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  PENDING: 'pending',\n} as const\n\nexport type NODE_RESULT_STATUS_TYPE =\n  typeof NODE_RESULT_STATUS[keyof typeof NODE_RESULT_STATUS]\n\nexport interface NodeResultBaseType<T extends NODE_RESULT_STATUS_TYPE> {\n  status: T\n  message?: string\n  name: string\n}\n\nexport interface NodeResultPending\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.PENDING> {}\n\nexport interface NodeResultSuccess\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.SUCCESS> {\n  outputPaths: OutputPaths\n}\n\nexport type OutputPaths = {\n  [outputKey: string]: {\n    path: string\n    type: DATA_TYPE\n  }\n}\n\nexport interface NodeResultError\n  extends NodeResultBaseType<typeof NODE_RESULT_STATUS.ERROR> {\n  message: string\n}\n\nexport const RUN_BTN_OPTIONS = {\n  RUN_NEW: 1,\n  RUN_ALREADY: 2,\n} as const\n\nexport type RUN_BTN_TYPE = typeof RUN_BTN_OPTIONS[keyof typeof RUN_BTN_OPTIONS]\n\nexport const RUN_BTN_LABELS = {\n  [RUN_BTN_OPTIONS.RUN_NEW]: 'RUN ALL',\n  [RUN_BTN_OPTIONS.RUN_ALREADY]: 'RUN',\n} as const\n","import {\n  HeatMapData,\n  TimeSeriesData,\n  BarData,\n  CsvData,\n  RoiData,\n  ImageData,\n  ScatterData,\n  HTMLData,\n  HistogramData,\n  LineData,\n  PieData,\n  PolarData,\n} from 'api/outputs/Outputs'\n\nexport const DISPLAY_DATA_SLICE_NAME = 'displayData'\n\nexport type DisplayData = {\n  timeSeries: {\n    [filePath: string]: TimeSeriesDisplayData\n  }\n  heatMap: {\n    [filePath: string]: HeatMapDisplayData\n  }\n  image: {\n    [filePath: string]: ImageDisplayData\n  }\n  csv: {\n    [filePath: string]: CsvDisplayData\n  }\n  roi: {\n    [filePath: string]: RoiDisplayData\n  }\n  scatter: {\n    [filePath: string]: ScatterDisplayData\n  }\n  bar: {\n    [filePath: string]: BarDisplayData\n  }\n  // hdf5: {\n  //   [filePath: string]: HDF5DisplayData\n  // }\n  html: {\n    [filePath: string]: HTMLDisplayData\n  }\n  histogram: {\n    [filePath: string]: HistogramDisplayData\n  }\n  line: {\n    [filePath: string]: LineDisplayData\n  }\n  pie: {\n    [filepath: string]: PieDisplayData\n  }\n  polar: {\n    [filePath: string]: PolarDisplayData\n  }\n}\n\nexport const DATA_TYPE_SET = {\n  TIME_SERIES: 'timeSeries',\n  HEAT_MAP: 'heatMap',\n  IMAGE: 'image',\n  CSV: 'csv',\n  ROI: 'roi',\n  SCATTER: 'scatter',\n  BAR: 'bar',\n  HDF5: 'hdf5',\n  HTML: 'html',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  HISTOGRAM: 'histogram',\n  LINE: 'line',\n  PIE: 'pie',\n  POLAR: 'polar',\n} as const\n\nexport type DATA_TYPE = typeof DATA_TYPE_SET[keyof typeof DATA_TYPE_SET]\n\ninterface BaseDisplay<T extends DATA_TYPE, Data> {\n  type: T\n  data: Data\n  pending: boolean\n  error: string | null\n  fulfilled: boolean\n}\n\nexport interface TimeSeriesDisplayData\n  extends BaseDisplay<'timeSeries', TimeSeriesData> {\n  xrange: string[]\n  std: TimeSeriesData\n}\n\nexport interface HeatMapDisplayData\n  extends BaseDisplay<'heatMap', HeatMapData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface ImageDisplayData extends BaseDisplay<'image', ImageData> {}\n\nexport interface CsvDisplayData extends BaseDisplay<'csv', CsvData> {\n  // columns: string[]\n}\n\nexport interface RoiDisplayData extends BaseDisplay<'roi', RoiData> {\n  roiUniqueList: string[]\n}\n\nexport interface ScatterDisplayData\n  extends BaseDisplay<'scatter', ScatterData> {}\n\nexport interface BarDisplayData extends BaseDisplay<'bar', BarData> {\n  columns: string[]\n  index: string[]\n}\n\nexport interface HTMLDisplayData extends BaseDisplay<'html', HTMLData> {}\n\nexport interface HistogramDisplayData\n  extends BaseDisplay<'histogram', HistogramData> {}\n\nexport interface LineDisplayData extends BaseDisplay<'line', LineData> {\n  columns: number[]\n  index: number[]\n}\n\nexport interface PieDisplayData extends BaseDisplay<'pie', PieData> {\n  columns: string[]\n}\n\nexport interface PolarDisplayData extends BaseDisplay<'polar', PolarData> {\n  columns: number[]\n  index: number[]\n}\n","import { DATA_TYPE, DATA_TYPE_SET } from './DisplayDataType'\n\n/**\n * サーバーサイドの値をマッピング\n */\nexport function toDataType(value: string): DATA_TYPE {\n  switch (value) {\n    case 'images':\n      return DATA_TYPE_SET.IMAGE\n    case 'timeseries':\n      return DATA_TYPE_SET.TIME_SERIES\n    case 'heatmap':\n      return DATA_TYPE_SET.HEAT_MAP\n    case 'roi':\n      return DATA_TYPE_SET.ROI\n    case 'scatter':\n      return DATA_TYPE_SET.SCATTER\n    case 'bar':\n      return DATA_TYPE_SET.BAR\n    case 'html':\n      return DATA_TYPE_SET.HTML\n    case 'histogram':\n      return DATA_TYPE_SET.HISTOGRAM\n    case 'line':\n      return DATA_TYPE_SET.LINE\n    case 'pie':\n      return DATA_TYPE_SET.PIE\n    case 'polar':\n      return DATA_TYPE_SET.POLAR\n    default:\n      throw new Error(`failed to map dataType: ${value}`)\n  }\n}\n","import { RunPostData, RunResultDTO, OutputPathsDTO } from 'api/run/Run'\n\nimport { toDataType } from '../DisplayData/DisplayDataUtils'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport {\n  RunResult,\n  OutputPaths,\n  NODE_RESULT_STATUS,\n  PipelineType,\n  RUN_STATUS,\n  StartedPipeline,\n  NodeResultPending,\n  NodeResultError,\n  NodeResultSuccess,\n  NodeResult,\n} from './PipelineType'\n\nexport function isNodeResultPending(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultPending {\n  return nodeResult.status === NODE_RESULT_STATUS.PENDING\n}\n\nexport function isNodeResultSuccess(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultSuccess {\n  return nodeResult.status === NODE_RESULT_STATUS.SUCCESS\n}\n\nexport function isNodeResultError(\n  nodeResult: NodeResult,\n): nodeResult is NodeResultError {\n  return nodeResult.status === NODE_RESULT_STATUS.ERROR\n}\n\nexport function isStartedPipeline(\n  pipeline: PipelineType,\n): pipeline is StartedPipeline {\n  return (\n    pipeline.status === RUN_STATUS.START_SUCCESS ||\n    pipeline.status === RUN_STATUS.FINISHED ||\n    pipeline.status === RUN_STATUS.ABORTED\n  )\n}\n\nexport function getInitialRunResult(runPostData: RunPostData) {\n  const initialResult: RunResult = {}\n  Object.values(runPostData.nodeDict)\n    .filter(({ data }) => data?.type === NODE_TYPE_SET.ALGORITHM)\n    .forEach(({ id, data }) => {\n      initialResult[id] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: data?.label ?? '',\n      }\n    })\n  return initialResult\n}\n\nexport function convertToRunResult(dto: RunResultDTO) {\n  const result: RunResult = {}\n  Object.entries(dto).forEach(([nodeId, nodeResultDto]) => {\n    const outputPath = nodeResultDto.outputPaths\n    if (nodeResultDto.status === 'success' && outputPath != null) {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.SUCCESS,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n        outputPaths: convertToOutputPath(outputPath),\n      }\n    } else if (nodeResultDto.status === 'running') {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.PENDING,\n        name: nodeResultDto.name,\n      }\n    } else {\n      result[nodeId] = {\n        status: NODE_RESULT_STATUS.ERROR,\n        message: nodeResultDto.message,\n        name: nodeResultDto.name,\n      }\n    }\n  })\n  return result\n}\n\nfunction convertToOutputPath(dto: OutputPathsDTO) {\n  const result: OutputPaths = {}\n  Object.entries(dto).forEach(([functionPath, value]) => {\n    result[functionPath] = {\n      path: value.path,\n      type: toDataType(value.type),\n    }\n  })\n  return result\n}\n","import { RootState } from 'store/store'\n\nimport {\n  NodeResult,\n  NodeResultPending,\n  NodeResultSuccess,\n  RUN_STATUS,\n} from './PipelineType'\nimport {\n  isNodeResultPending,\n  isStartedPipeline,\n  isNodeResultSuccess,\n} from './PipelineUtils'\n\nexport const selectPipelineLatestUid = (state: RootState) => {\n  return state.pipeline.currentPipeline?.uid\n}\n\nexport const selectStartedPipeline = (state: RootState) => {\n  return state.pipeline.run\n}\n\nexport const selectPipelineRunBtn = (state: RootState) => {\n  return state.pipeline.runBtn\n}\n\nexport const selectRunResultPendingList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.values(pipeline.runResult).filter(isNodeResultPending)\n  } else {\n    return []\n  }\n}\n\nexport const selectRunResultPendingNodeIdList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => ({ nodeId, nodeResult }))\n      .filter(isNodeResultPendingAndNodeId)\n      .map(({ nodeId }) => nodeId)\n  } else {\n    return []\n  }\n}\n\nfunction isNodeResultPendingAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultPending\n} {\n  return isNodeResultPending(arg.nodeResult)\n}\n\nexport const selectPipelineStatus = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status\n}\n\nexport const selectPipelineIsCanceled = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.CANCELED\n}\n\nexport const selectPipelineIsStartedSuccess = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  return pipeline.status === RUN_STATUS.START_SUCCESS\n}\n\nexport const selectPipelineNodeResultSuccessList = (state: RootState) => {\n  const pipeline = selectStartedPipeline(state)\n  if (isStartedPipeline(pipeline)) {\n    return Object.entries(pipeline.runResult)\n      .map(([nodeId, nodeResult]) => {\n        return {\n          nodeId,\n          nodeResult,\n        }\n      })\n      .filter(isNodeResultSuccessAndNodeId)\n  } else {\n    return []\n  }\n}\n\n// selectPipelineNodeResultSuccessListの返り値の型を正しく認識させるためだけに作った\nfunction isNodeResultSuccessAndNodeId(arg: {\n  nodeId: string\n  nodeResult: NodeResult\n}): arg is {\n  nodeId: string\n  nodeResult: NodeResultSuccess\n} {\n  return isNodeResultSuccess(arg.nodeResult)\n}\n\nexport const selectPipelineNodeResultStatus =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].status\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultMessage =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      if (Object.keys(pipeline.runResult).includes(nodeId)) {\n        return pipeline.runResult[nodeId].message\n      }\n    }\n    return null\n  }\n\nexport const selectPipelineNodeResultOutputKeyList =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return Object.keys(nodeResult.outputPaths)\n      }\n    }\n    return []\n  }\n\nconst selectPipelineNodeResultOutputPaths =\n  (nodeId: string) => (state: RootState) => {\n    const pipeline = selectStartedPipeline(state)\n    if (isStartedPipeline(pipeline)) {\n      const nodeResult = pipeline.runResult[nodeId]\n      if (\n        Object.keys(pipeline.runResult).includes(nodeId) &&\n        isNodeResultSuccess(nodeResult)\n      ) {\n        return nodeResult.outputPaths\n      }\n    }\n    throw new Error(`key error. nodeId:${nodeId}`)\n  }\n\nexport const selectPipelineNodeResultOutputFilePath =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].path\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n\nexport const selectPipelineNodeResultOutputFileDataType =\n  (nodeId: string, outputKey: string) => (state: RootState) => {\n    const outputPaths = selectPipelineNodeResultOutputPaths(nodeId)(state)\n    if (Object.keys(outputPaths).includes(outputKey)) {\n      return outputPaths[outputKey].type\n    } else {\n      throw new Error(`key error. outputKey:${outputKey}`)\n    }\n  }\n","import { getChildParam } from 'utils/param/ParamUtils'\nimport { RootState } from '../../store'\n\nconst selectSnakemake = (state: RootState) => state.snakemake\nexport const selectSnakemakeParams = (state: RootState) =>\n  selectSnakemake(state).params\n\nexport const selectSnakemakeParamsKeyList = (state: RootState) =>\n  Object.keys(selectSnakemakeParams(state))\n\nexport const selectSnakemakeParam = (paramKey: string) => (state: RootState) =>\n  selectSnakemakeParams(state)[paramKey]\n\nexport const selectSnakemakeParamsValue =\n  (path: string) => (state: RootState) => {\n    const params = selectSnakemakeParams(state)\n    if (params != null) {\n      const target = getChildParam(path, params)\n      return target?.value\n    } else {\n      throw new Error('Param is null')\n    }\n  }\n","export const INPUT_NODE_SLICE_NAME = 'inputNode'\n\nexport const FILE_TYPE_SET = {\n  CSV: 'csv',\n  IMAGE: 'image',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n} as const\n\nexport type FILE_TYPE = typeof FILE_TYPE_SET[keyof typeof FILE_TYPE_SET]\n\nexport type InputNode = {\n  [nodeId: string]: InputNodeType\n}\n\nexport type InputNodeType = CsvInputNode | ImageInputNode | HDF5InputNode\n\ninterface InputNodeBaseType<\n  T extends FILE_TYPE,\n  P extends { [key: string]: unknown },\n> {\n  fileType: T\n  selectedFilePath?: string | string[]\n  param: P\n}\n\nexport type CsvInputParamType = {\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\n\nexport interface CsvInputNode\n  extends InputNodeBaseType<'csv', CsvInputParamType> {\n  selectedFilePath?: string\n}\n\nexport interface ImageInputNode extends InputNodeBaseType<'image', {}> {\n  selectedFilePath?: string[]\n}\n\nexport interface HDF5InputNode extends InputNodeBaseType<'hdf5', {}> {\n  selectedFilePath?: string\n  hdf5Path?: string\n}\n","import {\n  CsvInputNode,\n  ImageInputNode,\n  HDF5InputNode,\n  InputNodeType,\n  FILE_TYPE_SET,\n} from './InputNodeType'\n\nexport function isImageInputNode(\n  inputNode: InputNodeType,\n): inputNode is ImageInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.IMAGE\n}\n\nexport function isCsvInputNode(\n  inputNode: InputNodeType,\n): inputNode is CsvInputNode {\n  return inputNode.fileType === FILE_TYPE_SET.CSV\n}\n\nexport function isHDF5InputNode(\n  inputNode: InputNodeType,\n): inputNode is HDF5InputNode {\n  return inputNode.fileType === FILE_TYPE_SET.HDF5\n}\n","import { RootState } from 'store/store'\nimport {\n  isHDF5InputNode,\n  isCsvInputNode,\n  isImageInputNode,\n} from './InputNodeUtils'\n\nexport const selectInputNode = (state: RootState) => state.inputNode\n\nexport const selectInputNodeById = (nodeId: string) => (state: RootState) =>\n  state.inputNode[nodeId]\n\nexport const selectInputNodeDefined = (nodeId: string) => (state: RootState) =>\n  Object.keys(state.inputNode).includes(nodeId)\n\nexport const selectInputNodeFileType = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).fileType\n\nexport const selectInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) =>\n    selectInputNodeById(nodeId)(state).selectedFilePath\n\nexport const selectCsvInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isCsvInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectImageInputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isImageInputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectHDF5InputNodeSelectedFilePath =\n  (nodeId: string) => (state: RootState) => {\n    const node = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(node)) {\n      return node.selectedFilePath\n    } else {\n      throw new Error('invaid input node type')\n    }\n  }\n\nexport const selectFilePathIsUndefined = (state: RootState) =>\n  Object.keys(state.inputNode).length === 0 ||\n  Object.values(state.inputNode).filter((inputNode) => {\n    if (isHDF5InputNode(inputNode)) {\n      return inputNode.selectedFilePath == null || inputNode.hdf5Path == null\n    } else {\n      const filePath = inputNode.selectedFilePath\n      if (Array.isArray(filePath)) {\n        return filePath.length === 0\n      } else {\n        return filePath == null\n      }\n    }\n  }).length > 0\n\nexport const selectInputNodeParam = (nodeId: string) => (state: RootState) =>\n  selectInputNodeById(nodeId)(state).param\n\nconst selectCsvInputNodeParam = (nodeId: string) => (state: RootState) => {\n  const inputNode = selectInputNodeById(nodeId)(state)\n  if (isCsvInputNode(inputNode)) {\n    return inputNode.param\n  } else {\n    throw new Error(`The InputNode is not CsvInputNode. (nodeId: ${nodeId})`)\n  }\n}\n\nexport const selectCsvInputNodeParamSetHeader =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setHeader\n\nexport const selectCsvInputNodeParamSetIndex =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).setIndex\n\nexport const selectCsvInputNodeParamTranspose =\n  (nodeId: string) => (state: RootState) =>\n    selectCsvInputNodeParam(nodeId)(state).transpose\n\nexport const selectInputNodeHDF5Path =\n  (nodeId: string) => (state: RootState) => {\n    const item = selectInputNodeById(nodeId)(state)\n    if (isHDF5InputNode(item)) {\n      return item.hdf5Path\n    } else {\n      return undefined\n    }\n  }\n","import { Node } from 'react-flow-renderer'\n\nimport {\n  AlgorithmNodePostData,\n  EdgeDict,\n  InputNodePostData,\n  NodeDict,\n  RunPostData,\n} from 'api/run/Run'\n\nimport { RootState } from 'store/store'\n\nimport {\n  selectAlgorithmFunctionPath,\n  selectAlgorithmIsUpdated,\n  selectAlgorithmName,\n  selectAlgorithmParams,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectFlowEdges,\n  selectFlowNodes,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { isAlgorithmNodeData } from 'store/slice/FlowElement/FlowElementUtils'\nimport { selectNwbParams } from 'store/slice/NWB/NWBSelectors'\nimport { selectPipelineNodeResultStatus } from 'store/slice/Pipeline/PipelineSelectors'\nimport { NODE_RESULT_STATUS } from 'store/slice/Pipeline/PipelineType'\nimport { selectSnakemakeParams } from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { NODE_TYPE_SET } from 'store/slice/FlowElement/FlowElementType'\nimport {\n  selectInputNodeFileType,\n  selectInputNodeHDF5Path,\n  selectInputNodeParam,\n  selectInputNodeSelectedFilePath,\n} from 'store/slice/InputNode/InputNodeSelectors'\n\nexport const selectRunPostData = (state: RootState) => {\n  const nwbParam = selectNwbParams(state)\n  const snakemakeParam = selectSnakemakeParams(state)\n  const edgeDictForRun = selectEdgeDictForRun(state)\n  const nodeDictForRun = selectNodeDictForRun(state)\n  const forceRunList = selectForceRunList(state)\n  const runPostData: Omit<RunPostData, 'name'> = {\n    nwbParam,\n    snakemakeParam,\n    edgeDict: edgeDictForRun,\n    nodeDict: nodeDictForRun,\n    forceRunList,\n  }\n  return runPostData\n}\n\n/**\n * 前回の結果で、エラーまたはParamに変更があるnodeのリストを返す\n */\nconst selectForceRunList = (state: RootState) => {\n  const nodes = selectFlowNodes(state)\n  return nodes\n    .filter(isAlgorithmNodeData)\n    .filter((node) => {\n      const isUpdated = selectAlgorithmIsUpdated(node.id)(state)\n      const status = selectPipelineNodeResultStatus(node.id)(state)\n      return isUpdated || status === NODE_RESULT_STATUS.ERROR\n    })\n    .map((node) => ({\n      nodeId: node.id,\n      name: selectAlgorithmName(node.id)(state),\n    }))\n}\n\nconst selectNodeDictForRun = (state: RootState): NodeDict => {\n  const nodes = selectFlowNodes(state)\n  const nodeDict: NodeDict = {}\n  nodes.forEach((node) => {\n    if (isAlgorithmNodeData(node)) {\n      const param = selectAlgorithmParams(node.id)(state) ?? {}\n      const functionPath = selectAlgorithmFunctionPath(node.id)(state)\n      const algorithmNodePostData: Node<AlgorithmNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.ALGORITHM,\n          path: functionPath,\n          param,\n        },\n      }\n      nodeDict[node.id] = algorithmNodePostData\n    } else {\n      const filePath = selectInputNodeSelectedFilePath(node.id)(state)\n      const fileType = selectInputNodeFileType(node.id)(state)\n      const param = selectInputNodeParam(node.id)(state)\n      const hdf5Path = selectInputNodeHDF5Path(node.id)(state)\n      const inputNodePosyData: Node<InputNodePostData> = {\n        ...node,\n        data: {\n          ...node.data,\n          label: node.data?.label ?? '',\n          type: NODE_TYPE_SET.INPUT,\n          path: filePath ?? '',\n          param,\n          hdf5Path: hdf5Path,\n          fileType,\n        },\n      }\n      nodeDict[node.id] = inputNodePosyData\n    }\n  })\n  return nodeDict\n}\n\nconst selectEdgeDictForRun = (state: RootState) => {\n  const edgeDict: EdgeDict = {}\n  selectFlowEdges(state).forEach((edge) => {\n    edgeDict[edge.id] = edge\n  })\n  return edgeDict\n}\n","import axios from 'utils/axios'\nimport type { Edge, Node } from 'react-flow-renderer'\n\nimport { BASE_URL } from 'const/API'\nimport type {\n  AlgorithmNodeData,\n  InputNodeData,\n} from 'store/slice/FlowElement/FlowElementType'\nimport type { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport type { ParamMap } from 'utils/param/ParamType'\n\nexport type RunPostData = {\n  name: string\n  nodeDict: NodeDict\n  edgeDict: EdgeDict\n  nwbParam: ParamMap\n  snakemakeParam: ParamMap\n  forceRunList: { nodeId: string; name: string }[]\n}\n\nexport type NodeDict = {\n  [nodeId: string]: Node<NodePostDataType>\n}\n\nexport type EdgeDict = {\n  [nodeId: string]: Edge\n}\n\nexport type NodePostDataType = AlgorithmNodePostData | InputNodePostData\n\nexport interface InputNodePostData extends InputNodeData {\n  path: string | string[]\n  fileType: FILE_TYPE\n  param?: {\n    [key: string]: unknown\n  }\n  hdf5Path?: string\n}\n\nexport interface AlgorithmNodePostData extends AlgorithmNodeData {\n  path: string\n  param: ParamMap\n}\n\nexport async function runApi(\n  workspaceId: number,\n  data: RunPostData,\n): Promise<string> {\n  const response = await axios.post(`${BASE_URL}/run/${workspaceId}`, data)\n  return response.data\n}\n\nexport async function runByUidApi(\n  workspaceId: number,\n  uid: string,\n  data: Omit<RunPostData, 'name'>,\n): Promise<string> {\n  const response = await axios.post(\n    `${BASE_URL}/run/${workspaceId}/${uid}`,\n    data,\n  )\n  return response.data\n}\n\nexport type RunResultDTO = {\n  [nodeId: string]: {\n    status: string\n    message: string\n    name: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\nexport type OutputPathsDTO = {\n  [outputKey: string]: {\n    path: string\n    type: string\n  }\n}\n\nexport async function runResult(data: {\n  workspaceId: number\n  uid: string\n  pendingNodeIdList: string[]\n}): Promise<RunResultDTO> {\n  const { workspaceId, uid, pendingNodeIdList } = data\n  const response = await axios.post(\n    `${BASE_URL}/run/result/${workspaceId}/${uid}`,\n    {\n      pendingNodeIdList,\n    },\n  )\n  return response.data\n}\n\nexport async function cancelResultApi(data: {\n  workspaceId: number\n  uid: string\n}): Promise<RunResultDTO> {\n  const { workspaceId, uid } = data\n  const response = await axios.post(\n    `${BASE_URL}/run/cancel/${workspaceId}/${uid}`,\n  )\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { ThunkApiConfig } from 'store/store'\nimport { PIPELINE_SLICE_NAME } from './PipelineType'\nimport {\n  runApi,\n  runByUidApi,\n  runResult,\n  RunResultDTO,\n  RunPostData,\n  cancelResultApi,\n} from 'api/run/Run'\nimport {\n  selectPipelineLatestUid,\n  selectRunResultPendingNodeIdList,\n} from './PipelineSelectors'\nimport { selectCurrentWorkspaceId } from '../Workspace/WorkspaceSelector'\n\nexport const run = createAsyncThunk<\n  string,\n  { runPostData: RunPostData },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/run`, async ({ runPostData }, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const responseData = await runApi(workspaceId, runPostData)\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist.')\n  }\n})\n\nexport const runByCurrentUid = createAsyncThunk<\n  string,\n  { runPostData: Omit<RunPostData, 'name'> },\n  ThunkApiConfig\n>(\n  `${PIPELINE_SLICE_NAME}/runByCurrentUid`,\n  async ({ runPostData }, thunkAPI) => {\n    const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n    const currentUid = selectPipelineLatestUid(thunkAPI.getState())\n    if (workspaceId && currentUid != null) {\n      try {\n        const responseData = await runByUidApi(\n          workspaceId,\n          currentUid,\n          runPostData,\n        )\n        return responseData\n      } catch (e) {\n        return thunkAPI.rejectWithValue(e)\n      }\n    } else {\n      return thunkAPI.rejectWithValue(\n        'workspaceId or currentUid dose not exist.',\n      )\n    }\n  },\n)\n\nexport const pollRunResult = createAsyncThunk<\n  RunResultDTO,\n  {\n    uid: string\n  },\n  ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/pollRunResult`, async ({ uid }, thunkAPI) => {\n  const pendingNodeIdList = selectRunResultPendingNodeIdList(\n    thunkAPI.getState(),\n  )\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const responseData = await runResult({\n        workspaceId,\n        uid,\n        pendingNodeIdList,\n      })\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist')\n  }\n})\n\nexport const cancelResult = createAsyncThunk<\n    RunResultDTO,\n    {\n      uid: string\n    },\n    ThunkApiConfig\n>(`${PIPELINE_SLICE_NAME}/cancelResult`, async ({ uid }, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const responseData = await cancelResultApi({\n        workspaceId: workspaceId,\n        uid\n      })\n      return responseData\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist')\n  }\n})\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\nimport { OutputPathsDTO } from 'api/run/Run'\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\nimport { WorkflowConfigDTO } from 'api/workflow/Workflow'\n\nexport type ExperimentsDTO = {\n  [uid: string]: ExperimentDTO\n}\n\nexport type FunctionsDTO = {\n  [nodeId: string]: {\n    name: string\n    success: string\n    unique_id: string\n    hasNWB: boolean\n    message?: string\n    started_at?: string\n    finished_at?: string\n    outputPaths?: OutputPathsDTO\n  }\n}\n\ntype NWBType = {\n  imaging_plane: {\n    imaging_rate: number\n  }\n}\n\nexport type ExperimentDTO = {\n  function: FunctionsDTO\n  name: string\n  success?: EXPERIMENTS_STATUS\n  started_at: string\n  finished_at?: string\n  workspace_id: number\n  unique_id: string\n  hasNWB: boolean\n  nwb: NWBType\n}\n\nexport type FetchExperimentDTO = ExperimentDTO & WorkflowConfigDTO\n\nexport async function getExperimentsApi(\n  workspaceId: number,\n): Promise<ExperimentsDTO> {\n  const response = await axios.get(`${BASE_URL}/experiments/${workspaceId}`)\n  return response.data\n}\n\nexport async function deleteExperimentByUidApi(\n  workspaceId: number,\n  uid: string,\n): Promise<boolean> {\n  const response = await axios.delete(\n    `${BASE_URL}/experiments/${workspaceId}/${uid}`,\n  )\n  return response.data\n}\n\nexport async function deleteExperimentByListApi(\n  workspaceId: number,\n  uidList: Array<string>,\n): Promise<boolean> {\n  const response = await axios.post(\n    `${BASE_URL}/experiments/delete/${workspaceId}`,\n    {\n      uidList,\n    },\n  )\n  return response.data\n}\n\nexport async function downloadExperimentNwbApi(\n  workspaceId: number,\n  uid: string,\n  nodeId?: string,\n) {\n  const path =\n    nodeId != null\n      ? `${BASE_URL}/experiments/download/nwb/${workspaceId}/${uid}/${nodeId}`\n      : `${BASE_URL}/experiments/download/nwb/${workspaceId}/${uid}`\n  const response = await axios.get(path, {\n    responseType: 'blob',\n  })\n  return response.data\n}\n\nexport async function downloadExperimentConfigApi(\n  workspaceId: number,\n  uid: string,\n) {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/download/config/${workspaceId}/${uid}`,\n    {\n      responseType: 'blob',\n    },\n  )\n  return response.data\n}\n\nexport async function fetchExperimentApi(\n  workspace_id: number,\n): Promise<FetchExperimentDTO> {\n  const response = await axios.get(\n    `${BASE_URL}/experiments/fetch/${workspace_id}`,\n  )\n  return response.data\n}\n\nexport async function renameExperiment(\n  workspaceId: number,\n  uid: string,\n  new_name: string,\n) {\n  const response = await axios.patch(\n    `${BASE_URL}/experiments/${workspaceId}/${uid}/rename`,\n    {\n      new_name,\n    },\n  )\n  return response.data\n}\n","export const EXPERIMENTS_SLICE_NAME = 'experiments'\n\nexport type Experiments =\n  | {\n      status: 'fulfilled'\n      experimentList: ExperimentListType\n    }\n  | {\n      status: 'uninitialized'\n    }\n  | {\n      status: 'pending'\n    }\n  | {\n      status: 'error'\n      message?: string\n    }\n\nexport type ExperimentListType = {\n  [uid: string]: ExperimentType\n}\n\nexport type ExperimentType = {\n  uid: string\n  functions: {\n    [nodeId: string]: ExperimentFunction\n  }\n  status?: EXPERIMENTS_STATUS\n  name: string\n  timestamp: string\n  hasNWB: boolean\n  frameRate?: number\n}\n\nexport type ExperimentFunction = {\n  name: string\n  nodeId: string\n  status: EXPERIMENTS_STATUS\n  hasNWB: boolean\n  message?: string\n}\n\nexport type EXPERIMENTS_STATUS = 'success' | 'error' | 'running'\n\nexport interface Experiment {\n  uid: string\n  name: string\n  timestamp: string\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  ExperimentsDTO,\n  FetchExperimentDTO,\n  getExperimentsApi,\n  deleteExperimentByUidApi,\n  deleteExperimentByListApi,\n  fetchExperimentApi,\n} from 'api/experiments/Experiments'\nimport { EXPERIMENTS_SLICE_NAME } from './ExperimentsType'\nimport { selectCurrentWorkspaceId } from '../Workspace/WorkspaceSelector'\nimport { ThunkApiConfig } from 'store/store'\n\nexport const getExperiments = createAsyncThunk<\n  ExperimentsDTO,\n  undefined,\n  ThunkApiConfig\n>(`${EXPERIMENTS_SLICE_NAME}/getExperiments`, async (_, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const response = await getExperimentsApi(workspaceId)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist.')\n  }\n})\n\nexport const deleteExperimentByUid = createAsyncThunk<\n  boolean,\n  string,\n  ThunkApiConfig\n>(`${EXPERIMENTS_SLICE_NAME}/deleteExperimentByUid`, async (uid, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const response = await deleteExperimentByUidApi(workspaceId, uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist.')\n  }\n})\n\nexport const deleteExperimentByList = createAsyncThunk<\n  boolean,\n  string[],\n  ThunkApiConfig\n>(`${EXPERIMENTS_SLICE_NAME}/deleteExperimentByList`, async (uid, thunkAPI) => {\n  const workspaceId = selectCurrentWorkspaceId(thunkAPI.getState())\n  if (workspaceId) {\n    try {\n      const response = await deleteExperimentByListApi(workspaceId, uid)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  } else {\n    return thunkAPI.rejectWithValue('workspace id does not exist.')\n  }\n})\n\nexport const fetchExperiment = createAsyncThunk<FetchExperimentDTO, number>(\n  `${EXPERIMENTS_SLICE_NAME}/fetchExperiment`,\n  async (workspaceId, thunkAPI) => {\n    try {\n      const response = await fetchExperimentApi(workspaceId)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import type {\n  ExperimentDTO,\n  ExperimentsDTO,\n  FunctionsDTO,\n} from 'api/experiments/Experiments'\nimport { RunResultDTO } from 'api/run/Run'\nimport type {\n  ExperimentListType,\n  ExperimentType,\n  ExperimentFunction,\n  EXPERIMENTS_STATUS,\n} from './ExperimentsType'\n\nexport function convertToExperimentListType(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n\nexport function convertToExperimentType(dto: ExperimentDTO): ExperimentType {\n  const functions: { [nodeId: string]: ExperimentFunction } = {}\n  Object.entries(dto.function).forEach(([_, value]) => {\n    const status = convertToExperimentStatus(value.success)\n    functions[value.unique_id] = {\n      name: value.name,\n      nodeId: value.unique_id,\n      status: status,\n      hasNWB: value.hasNWB,\n    }\n    status === 'error' &&\n      value.message &&\n      (functions[value.unique_id].message = value.message)\n  })\n  return {\n    uid: dto.unique_id,\n    timestamp: dto.started_at,\n    status: dto.success,\n    name: dto.name,\n    hasNWB: dto.hasNWB,\n    functions,\n    frameRate: dto.nwb?.imaging_plane.imaging_rate\n  }\n}\n\nfunction convertToExperimentStatus(dto: string): EXPERIMENTS_STATUS {\n  switch (dto) {\n    case 'running':\n      return 'running'\n    case 'success':\n      return 'success'\n    case 'error':\n      return 'error'\n    default:\n      throw new Error('failed to convert to EXPERIMENTS_STATUS')\n  }\n}\n\nexport function convertFunctionsToRunResultDTO(\n  dto: FunctionsDTO,\n): RunResultDTO {\n  const result: RunResultDTO = {}\n  Object.entries(dto).forEach(([nodeId, value]) => {\n    result[nodeId] = {\n      status: value.success,\n      message: value.message ?? '',\n      name: value.name,\n      outputPaths: value.outputPaths,\n    }\n  })\n  return result\n}\n\nexport function convertToFlowChartList(\n  dto: ExperimentsDTO,\n): ExperimentListType {\n  const experimentList: ExperimentListType = {}\n  Object.entries(dto).forEach(([uid, value]) => {\n    experimentList[uid] = convertToExperimentType(value)\n  })\n  return experimentList\n}\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport { EXPERIMENTS_SLICE_NAME, Experiments } from './ExperimentsType'\nimport {\n  getExperiments,\n  deleteExperimentByUid,\n  deleteExperimentByList,\n  fetchExperiment,\n} from './ExperimentsActions'\nimport {\n  convertToExperimentListType,\n  convertToExperimentType,\n} from './ExperimentsUtils'\nimport {\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from '../Pipeline/PipelineActions'\n\nexport const initialState: Experiments = {\n  status: 'uninitialized',\n}\n\nexport const experimentsSlice = createSlice({\n  name: EXPERIMENTS_SLICE_NAME,\n  initialState: initialState as Experiments,\n  reducers: {\n    clearExperiments: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getExperiments.pending, () => {\n        return {\n          status: 'pending',\n        }\n      })\n      .addCase(getExperiments.fulfilled, (state, action) => {\n        const experimentList = convertToExperimentListType(action.payload)\n        return {\n          status: 'fulfilled',\n          experimentList,\n        }\n      })\n      .addCase(getExperiments.rejected, (state, action) => {\n        return {\n          status: 'error',\n          message: action.error.message,\n        }\n      })\n      .addCase(deleteExperimentByUid.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          delete state.experimentList[action.meta.arg]\n        }\n      })\n      .addCase(deleteExperimentByList.fulfilled, (state, action) => {\n        if (action.payload && state.status === 'fulfilled') {\n          action.meta.arg.map((v) => delete state.experimentList[v])\n        }\n      })\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          const uid = action.meta.arg.uid\n          const target = state.experimentList[uid]\n          Object.entries(action.payload).forEach(([nodeId, value]) => {\n            if (value.status === 'success') {\n              target.functions[nodeId].status = 'success'\n            } else if (value.status === 'error') {\n              target.functions[nodeId].status = 'error'\n            }\n          })\n        }\n      })\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        if (state.status === 'fulfilled') {\n          state.experimentList[action.payload.unique_id] =\n            convertToExperimentType(action.payload)\n        }\n      })\n      .addMatcher(isAnyOf(run.fulfilled, runByCurrentUid.fulfilled), () => {\n        return {\n          status: 'uninitialized',\n        }\n      })\n  },\n})\n\nexport const { clearExperiments } = experimentsSlice.actions\nexport default experimentsSlice.reducer\n","import { RootState } from 'store/store'\nimport { EXPERIMENTS_STATUS } from './ExperimentsType'\n\nconst selectExperiments = (state: RootState) => state.experiments\n\nexport const selectExperimentsStatusIsUninitialized = (state: RootState) =>\n  selectExperiments(state).status === 'uninitialized'\n\nexport const selectExperimentsStatusIsPending = (state: RootState) =>\n  selectExperiments(state).status === 'pending'\n\nexport const selectExperimentsStatusIsFulfilled = (state: RootState) =>\n  selectExperiments(state).status === 'fulfilled'\n\nexport const selectExperimentsStatusIsError = (state: RootState) =>\n  selectExperiments(state).status === 'error'\n\nexport const selectExperimentsErrorMessage = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'error') {\n    return experiments.message\n  } else {\n    throw new Error('experiments status is not error')\n  }\n}\n\nexport const selectExperimentList = (state: RootState) => {\n  const experiments = selectExperiments(state)\n  if (experiments.status === 'fulfilled') {\n    return experiments.experimentList\n  } else {\n    throw new Error('experiments status is not fulfilled')\n  }\n}\n\nexport const selectExperimentUidList = (state: RootState) =>\n  Object.keys(selectExperimentList(state))\n\nexport const selectExperiment = (uid: string) => (state: RootState) =>\n  selectExperimentList(state)[uid]\n\nexport const selectExperimentTimeStamp = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).timestamp\n\nexport const selectExperimentName = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).name\n\nexport const selectExperimentHasNWB = (uid: string) => (state: RootState) =>\n  selectExperiment(uid)(state).hasNWB\n\nexport const selectExperimentStatus =\n  (uid: string) =>\n  (state: RootState): EXPERIMENTS_STATUS => {\n    const experiment = selectExperimentList(state)[uid]\n    if (experiment.status) {\n      return experiment.status\n    }\n\n    const functions = selectExperimentList(state)[uid].functions\n    const statusList = Object.values(functions).map((f) => f.status)\n    if (statusList.findIndex((status) => status === 'error') >= 0) {\n      return 'error'\n    } else if (statusList.findIndex((status) => status === 'running') >= 0) {\n      return 'running'\n    } else {\n      return 'success'\n    }\n  }\n\nexport const selectExperimentCheckList =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionNodeIdList =\n  (uid: string) => (state: RootState) =>\n    Object.keys(selectExperimentList(state)[uid].functions)\n\nexport const selectExperimentFunction =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentList(state)[uid].functions[nodeId]\n\nexport const selectExperimentFunctionName =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).name\n\nexport const selectExperimentFunctionStatus =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).status\n\nexport const selectExperimentFunctionHasNWB =\n  (uid: string, nodeId: string) => (state: RootState) =>\n    selectExperimentFunction(uid, nodeId)(state).hasNWB\n\nexport const selectFrameRate = (currentPipelineUid?: string) => (state: RootState) => {\n  if(!currentPipelineUid) return 50\n  return selectExperiment(currentPipelineUid)(state).frameRate || 50\n}\n","import React from 'react'\nimport DoneIcon from '@mui/icons-material/Done'\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline'\nimport HorizontalRuleIcon from '@mui/icons-material/HorizontalRule'\n\nimport { EXPERIMENTS_STATUS } from 'store/slice/Experiments/ExperimentsType'\n\nexport const ExperimentStatusIcon = React.memo<{ status: EXPERIMENTS_STATUS }>(\n  ({ status }) => {\n    switch (status) {\n      case 'error':\n        return <ErrorOutlineIcon color=\"error\" />\n      case 'success':\n        return <DoneIcon color=\"success\" />\n      case 'running':\n        return <HorizontalRuleIcon color=\"inherit\" />\n    }\n  },\n)\n","export function arrayEqualityFn<T>(a: T[], b: T[]) {\n  return a === b || (a.length === b.length && a.every((v, i) => v === b[i]))\n}\n\nexport function twoDimarrayEqualityFn<T>(a: T[][], b: T[][]) {\n  return (\n    a === b ||\n    (a.length === b.length && a.every((v, i) => arrayEqualityFn(v, b[i])))\n  )\n}\n","import React, { useState, useRef } from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport SimCardDownloadOutlinedIcon from '@mui/icons-material/SimCardDownloadOutlined'\nimport { useSelector } from 'react-redux'\nimport {\n  downloadExperimentConfigApi,\n  downloadExperimentNwbApi,\n} from 'api/experiments/Experiments'\n\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\nimport { downloadWorkflowConfigApi } from 'api/workflow/Workflow'\nimport { useSnackbar } from 'notistack'\n\nexport const NWBDownloadButton = React.memo<{\n  name: string\n  nodeId?: string\n  hasNWB: boolean\n}>(({ name, nodeId, hasNWB }) => {\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = async () => {\n    try {\n      const responseData = await downloadExperimentNwbApi(\n        workspaceId!,\n        uid,\n        nodeId,\n      )\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      enqueueSnackbar('File not found', { variant: 'error' })\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick} color=\"primary\" disabled={!hasNWB}>\n        <SimCardDownloadOutlinedIcon />\n      </IconButton>\n      <a href={url} download={`nwb_${name}.nwb`} className=\"hidden\" ref={ref}>\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n\nexport const SnakemakeDownloadButton = React.memo(() => {\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = async () => {\n    try {\n      const responseData = await downloadExperimentConfigApi(workspaceId!, uid)\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      enqueueSnackbar('File not found', { variant: 'error' })\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick}>\n        <SimCardDownloadOutlinedIcon color=\"primary\" />\n      </IconButton>\n      <a\n        href={url}\n        download={`snakemake_${workspaceId}.yaml`}\n        className=\"hidden\"\n        ref={ref}\n      >\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n\nexport const WorkflowDownloadButton = React.memo(() => {\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const ref = useRef<HTMLAnchorElement | null>(null)\n  const [url, setFileUrl] = useState<string>()\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = async () => {\n    try {\n      const responseData = await downloadWorkflowConfigApi(workspaceId!, uid)\n      const url = URL.createObjectURL(new Blob([responseData]))\n      setFileUrl(url)\n      ref.current?.click()\n      URL.revokeObjectURL(url)\n    } catch (error) {\n      enqueueSnackbar('File not found', { variant: 'error' })\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={onClick}>\n        <SimCardDownloadOutlinedIcon color=\"primary\" />\n      </IconButton>\n      <a\n        href={url}\n        download={`workflow_${workspaceId}.yaml`}\n        className=\"hidden\"\n        ref={ref}\n      >\n        {/* 警告が出るので空文字を入れておく */}{' '}\n      </a>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport Collapse from '@mui/material/Collapse'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell from '@mui/material/TableCell'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport Typography from '@mui/material/Typography'\n\nimport { ExperimentUidContext } from './ExperimentTable'\nimport {\n  selectExperimentFunctionHasNWB,\n  selectExperimentFunctionName,\n  selectExperimentFunctionNodeIdList,\n  selectExperimentFunctionStatus,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { NWBDownloadButton } from './Button/DownloadButton'\n\nexport const CollapsibleTable = React.memo<{\n  open: boolean\n}>(({ open }) => {\n  return (\n    <TableRow>\n      <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={11}>\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <Box margin={1}>\n            <Typography variant=\"h6\" gutterBottom component=\"div\">\n              Details\n            </Typography>\n            <Table size=\"small\" aria-label=\"purchases\">\n              <Head />\n              <Body />\n            </Table>\n          </Box>\n        </Collapse>\n      </TableCell>\n    </TableRow>\n  )\n})\n\nconst Head = React.memo(() => {\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell>Function</TableCell>\n        <TableCell>nodeID</TableCell>\n        <TableCell>Success</TableCell>\n        <TableCell>NWB</TableCell>\n      </TableRow>\n    </TableHead>\n  )\n})\n\nconst Body = React.memo(() => {\n  const uid = React.useContext(ExperimentUidContext)\n  const nodeIdList = useSelector(\n    selectExperimentFunctionNodeIdList(uid),\n    arrayEqualityFn,\n  )\n  return (\n    <TableBody>\n      {nodeIdList.map((nodeId) => (\n        <TableRowOfFunction nodeId={nodeId} />\n      ))}\n    </TableBody>\n  )\n})\n\nconst TableRowOfFunction = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const uid = React.useContext(ExperimentUidContext)\n  const name = useSelector(selectExperimentFunctionName(uid, nodeId))\n  const status = useSelector(selectExperimentFunctionStatus(uid, nodeId))\n  const hasNWB = useSelector(selectExperimentFunctionHasNWB(uid, nodeId))\n\n  return (\n    <TableRow key={nodeId}>\n      <TableCell component=\"th\" scope=\"row\">\n        {name}\n      </TableCell>\n      <TableCell>{nodeId}</TableCell>\n      <TableCell>\n        <ExperimentStatusIcon status={status} />\n      </TableCell>\n      <TableCell>\n        <NWBDownloadButton name={name} nodeId={nodeId} hasNWB={hasNWB} />\n      </TableCell>\n    </TableRow>\n  )\n})\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport { fetchExperiment } from '../Experiments/ExperimentsActions'\nimport {\n  reproduceWorkflow,\n  importWorkflowConfig,\n} from 'store/slice/Workflow/WorkflowActions'\nimport {\n  cancelResult,\n  pollRunResult,\n  run,\n  runByCurrentUid,\n} from './PipelineActions'\nimport {\n  Pipeline,\n  PIPELINE_SLICE_NAME,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n  RUN_STATUS,\n} from './PipelineType'\n\nimport {\n  getInitialRunResult,\n  convertToRunResult,\n  isNodeResultPending,\n} from './PipelineUtils'\nimport { convertFunctionsToRunResultDTO } from '../Experiments/ExperimentsUtils'\n\nconst initialState: Pipeline = {\n  run: {\n    status: RUN_STATUS.START_UNINITIALIZED,\n  },\n  runBtn: RUN_BTN_OPTIONS.RUN_NEW,\n}\n\nexport const pipelineSlice = createSlice({\n  name: PIPELINE_SLICE_NAME,\n  initialState,\n  reducers: {\n    setRunBtnOption: (\n      state,\n      action: PayloadAction<{\n        runBtnOption: RUN_BTN_TYPE\n      }>,\n    ) => {\n      state.runBtn = action.payload.runBtnOption\n    },\n    clearCurrentPipeline: () => initialState,\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(pollRunResult.fulfilled, (state, action) => {\n        if (state.run.status === RUN_STATUS.START_SUCCESS) {\n          state.run.runResult = {\n            ...state.run.runResult, // pendingのNodeResultはそのままでsuccessもしくはerrorのみ上書き\n            ...convertToRunResult(action.payload),\n          }\n          const runResultPendingList = Object.values(\n            state.run.runResult,\n          ).filter(isNodeResultPending)\n          if (runResultPendingList.length === 0) {\n            // 終了\n            state.run.status = RUN_STATUS.FINISHED\n          }\n        }\n      })\n      .addCase(pollRunResult.rejected, (state, action) => {\n        state.run.status = RUN_STATUS.ABORTED\n      })\n      .addCase(reproduceWorkflow.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.meta.arg.uid,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addCase(importWorkflowConfig.fulfilled, (state, action) => {\n        state.currentPipeline = undefined\n        state.runBtn = RUN_BTN_OPTIONS.RUN_NEW\n        state.run = {\n          status: RUN_STATUS.START_UNINITIALIZED,\n        }\n      })\n      .addCase(fetchExperiment.rejected, () => initialState)\n      .addCase(fetchExperiment.fulfilled, (state, action) => {\n        state.currentPipeline = {\n          uid: action.payload.unique_id,\n        }\n        state.runBtn = RUN_BTN_OPTIONS.RUN_ALREADY\n        state.run = {\n          uid: action.payload.unique_id,\n          status: RUN_STATUS.START_SUCCESS,\n          runResult: {\n            ...convertToRunResult(\n              convertFunctionsToRunResultDTO(action.payload.function),\n            ),\n          },\n          runPostData: {\n            name: action.payload.name,\n            nodeDict: action.payload.nodeDict,\n            edgeDict: action.payload.edgeDict,\n            snakemakeParam: {},\n            nwbParam: {},\n            forceRunList: [],\n          },\n        }\n\n        const runResultPendingList = Object.values(state.run.runResult).filter(\n          isNodeResultPending,\n        )\n        if (runResultPendingList.length === 0) {\n          state.run.status = RUN_STATUS.FINISHED\n        }\n      })\n      .addCase(cancelResult.fulfilled, (state, action) => {\n        state.run.status = RUN_STATUS.CANCELED\n      })\n      .addMatcher(\n        isAnyOf(run.pending, runByCurrentUid.pending),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_PENDING,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          const uid = action.payload\n          state.run = {\n            uid,\n            status: RUN_STATUS.START_SUCCESS,\n            runResult: getInitialRunResult({ name: '', ...runPostData }),\n            runPostData: { name: '', ...runPostData },\n          }\n          state.currentPipeline = {\n            uid: action.payload,\n          }\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.rejected, runByCurrentUid.rejected),\n        (state, action) => {\n          state.run = {\n            status: RUN_STATUS.START_ERROR,\n          }\n        },\n      )\n  },\n})\n\nexport const { setRunBtnOption, clearCurrentPipeline } = pipelineSlice.actions\n\nexport default pipelineSlice.reducer\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport IconButton from '@mui/material/IconButton'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline'\nimport { selectExperimentName } from 'store/slice/Experiments/ExperimentsSelectors'\nimport { deleteExperimentByUid } from 'store/slice/Experiments/ExperimentsActions'\nimport { clearCurrentPipeline } from 'store/slice/Pipeline/PipelineSlice'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineIsStartedSuccess,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\n\nexport const DeleteButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const currentPipelineUid = useSelector(selectPipelineLatestUid)\n  const uid = React.useContext(ExperimentUidContext)\n  const isRunning = useSelector((state: RootState) => {\n    const currentUid = selectPipelineLatestUid(state)\n    const isPending = selectPipelineIsStartedSuccess(state)\n    return uid === currentUid && isPending\n  })\n  const name = useSelector(selectExperimentName(uid))\n  const [open, setOpen] = React.useState(false)\n\n  const onClickOpen = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(deleteExperimentByUid(uid))\n    uid === currentPipelineUid && dispatch(clearCurrentPipeline())\n  }\n  return (\n    <>\n      <IconButton onClick={onClickOpen} disabled={isRunning} color=\"error\">\n        <DeleteOutlineIcon />\n      </IconButton>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete {name}?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type TimeSeriesData = {\n  [key: string]: {\n    [key: string]: number\n  }\n}\n\nexport async function getTimeSeriesInitDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: string[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/inittimedata/${path}`)\n  return response.data\n}\n\nexport async function getTimeSeriesDataByIdApi(\n  path: string,\n  index: string,\n): Promise<{ data: TimeSeriesData; xrange: string[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/timedata/${path}`, {\n    params: {\n      index: index,\n    },\n  })\n  return response.data\n}\n\nexport async function getTimeSeriesAllDataApi(\n  path: string,\n): Promise<{ data: TimeSeriesData; xrange: string[]; std: TimeSeriesData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/alltimedata/${path}`)\n  return response.data\n}\n\nexport type HeatMapData = number[][]\n\nexport async function getHeatMapDataApi(\n  path: string,\n): Promise<{ data: HeatMapData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`)\n  return response.data\n}\n\nexport type ImageData = number[][][]\n\nexport async function getImageDataApi(\n  path: string,\n  params: {\n    workspaceId: number\n    startIndex?: number\n    endIndex?: number\n  },\n): Promise<{ data: ImageData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n    params: {\n      workspace_id: params.workspaceId,\n      start_index: params.startIndex,\n      end_index: params.endIndex,\n    },\n  })\n  return response.data\n}\n\nexport type CsvData = number[][]\n\nexport async function getCsvDataApi(\n  path: string,\n  params: { workspaceId: number },\n): Promise<{ data: CsvData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/csv/${path}`, {\n    params: { workspace_id: params.workspaceId },\n  })\n\n  return response.data\n}\n\nexport type RoiData = number[][][]\n\nexport async function getRoiDataApi(\n  path: string,\n  params: { workspaceId: number },\n): Promise<{ data: RoiData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/image/${path}`, {\n    params: { workspace_id: params.workspaceId },\n  })\n  return response.data\n}\n\nexport type ScatterData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getScatterDataApi(\n  path: string,\n): Promise<{ data: ScatterData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type BarData = {\n  [key: string]: {\n    [key: number]: number\n  }\n}\n\nexport async function getBarDataApi(\n  path: string,\n): Promise<{ data: BarData; columns: string[]; index: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type HTMLData = string\n\nexport async function getHTMLDataApi(\n  path: string,\n): Promise<{ data: HTMLData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/html/${path}`, {})\n  return response.data\n}\n\nexport async function addRoiApi(\n  path: string,\n  data: { posx: number; posy: number; sizex: number; sizey: number },\n): Promise<{ data: HTMLData }> {\n  const response = await axios.post(\n    `${BASE_URL}/outputs/image/${path}/add_roi`,\n    data,\n  )\n  return response.data\n}\n\nexport async function mergeRoiApi(\n  path: string,\n  data: { ids: number[] },\n): Promise<{ data: HTMLData }> {\n  const response = await axios.post(\n    `${BASE_URL}/outputs/image/${path}/merge_roi`,\n    data,\n  )\n  return response.data\n}\n\nexport async function deleteRoiApi(\n  path: string,\n  data: { ids: number[] },\n): Promise<{ data: HTMLData }> {\n  const response = await axios.post(\n    `${BASE_URL}/outputs/image/${path}/delete_roi`,\n    data,\n  )\n  return response.data\n}\n\nexport type LineData = number[][]\n\nexport async function getLineDataApi(\n  path: string,\n): Promise<{ data: LineData; columns: number[]; index: number[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type PolarData = number[][]\n\nexport async function getPolarDataApi(\n  path: string,\n): Promise<{ data: PolarData; columns: number[]; index: number[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type HistogramData = number[][]\n\nexport async function getHistogramDataApi(\n  path: string,\n): Promise<{ data: HistogramData }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n\nexport type PieData = number[][]\n\nexport async function getPieDataApi(\n  path: string,\n): Promise<{ data: PieData; columns: string[] }> {\n  const response = await axios.get(`${BASE_URL}/outputs/data/${path}`, {})\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  TimeSeriesData,\n  CsvData,\n  RoiData,\n  ScatterData,\n  BarData,\n  HTMLData,\n  ImageData,\n  HeatMapData,\n  HistogramData,\n  LineData,\n  PieData,\n  PolarData,\n  getTimeSeriesInitDataApi,\n  getTimeSeriesDataByIdApi,\n  getTimeSeriesAllDataApi,\n  getHeatMapDataApi,\n  getImageDataApi,\n  getCsvDataApi,\n  getRoiDataApi,\n  getScatterDataApi,\n  getBarDataApi,\n  getHTMLDataApi,\n  getHistogramDataApi,\n  getLineDataApi,\n  getPieDataApi,\n  getPolarDataApi,\n} from 'api/outputs/Outputs'\nimport { DISPLAY_DATA_SLICE_NAME } from './DisplayDataType'\n\nexport const getTimeSeriesInitData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: string[]; std: TimeSeriesData },\n  { path: string; itemId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesInitData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesInitDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesDataById = createAsyncThunk<\n  { data: TimeSeriesData; xrange: string[]; std: TimeSeriesData },\n  { path: string; index: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesDataById`,\n  async ({ path, index }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesDataByIdApi(path, index)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getTimeSeriesAllData = createAsyncThunk<\n  { data: TimeSeriesData; xrange: string[]; std: TimeSeriesData },\n  { path: string }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getTimeSeriesAllData`,\n  async ({ path }, thunkAPI) => {\n    try {\n      const response = await getTimeSeriesAllDataApi(path)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getHeatMapData = createAsyncThunk<\n  { data: HeatMapData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHeatMapData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHeatMapDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getImageData = createAsyncThunk<\n  { data: ImageData },\n  { path: string; workspaceId: number; startIndex?: number; endIndex?: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getImageData`,\n  async ({ path, startIndex, endIndex, workspaceId }, thunkAPI) => {\n    try {\n      const response = await getImageDataApi(path, {\n        workspaceId,\n        startIndex,\n        endIndex,\n      })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getCsvData = createAsyncThunk<\n  {\n    data: CsvData\n  },\n  { path: string; workspaceId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getCsvData`,\n  async ({ path, workspaceId }, thunkAPI) => {\n    try {\n      const response = await getCsvDataApi(path, { workspaceId })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getRoiData = createAsyncThunk<\n  { data: RoiData },\n  { path: string; workspaceId: number }\n>(\n  `${DISPLAY_DATA_SLICE_NAME}/getRoiData`,\n  async ({ path, workspaceId }, thunkAPI) => {\n    try {\n      const response = await getRoiDataApi(path, { workspaceId })\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nexport const getScatterData = createAsyncThunk<\n  { data: ScatterData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getScatterData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getScatterDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getBarData = createAsyncThunk<\n  { data: BarData; columns: string[]; index: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getBarData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getBarDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getHTMLData = createAsyncThunk<\n  { data: HTMLData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHTMLData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHTMLDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getHistogramData = createAsyncThunk<\n  { data: HistogramData },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getHistogramData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getHistogramDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getLineData = createAsyncThunk<\n  { data: LineData; columns: number[]; index: number[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getLineData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getLineDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getPieData = createAsyncThunk<\n  { data: PieData; columns: string[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getPieData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getPieDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const getPolarData = createAsyncThunk<\n  { data: PolarData; columns: number[]; index: number[] },\n  { path: string }\n>(`${DISPLAY_DATA_SLICE_NAME}/getPolarData`, async ({ path }, thunkAPI) => {\n  try {\n    const response = await getPolarDataApi(path)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import { RootState } from 'store/store'\n\nconst selectDisplayData = (state: RootState) => state.displayData\n\nexport const selectTimeSeriesData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].data\n\nexport const selectTimeSeriesXrange =\n  (filePath: string) => (state: RootState) =>\n    selectDisplayData(state).timeSeries[filePath].xrange\n\nexport const selectTimeSeriesStd = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).timeSeries[filePath].std\n\nexport const selectTimeSeriesDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).timeSeries).includes(filePath)\n\nexport const selectTimeSeriesDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].pending\n\nexport const selectTimeSeriesDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).timeSeries[filePath].fulfilled\n\nexport const selectTimeSeriesDataError =\n  (filePath: string) => (state: RootState) =>\n    selectTimeSeriesDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).timeSeries[filePath].error\n      : null\n\nexport const selectHeatMapData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].data\n\nexport const selectHeatMapColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].columns\n\nexport const selectHeatMapIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).heatMap[filePath].index\n\nexport const selectHeatMapDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).heatMap).includes(filePath)\n\nexport const selectHeatMapDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].pending\n\nexport const selectHeatMapDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).heatMap[filePath].fulfilled\n\nexport const selectHeatMapDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHeatMapDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).heatMap[filePath].error\n      : null\n\nexport const selectImageData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).image[filePath]\n\nexport const selectImageDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).image).includes(filePath)\n\nexport const selectImageDataError = (filePath: string) => (state: RootState) =>\n  selectImageDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).image[filePath].error\n    : null\n\nexport const selectImageDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].pending\n\nexport const selectImageDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectImageDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).image[filePath].fulfilled\n\nexport const selectImageDataMaxSize =\n  (filePath: string) => (state: RootState) => {\n    if (!selectImageDataIsPending(filePath)(state)) {\n      return selectImageData(filePath)(state).data.length - 1\n    } else {\n      return 0\n    }\n  }\n\nexport const selectActiveImageData =\n  (filePath: string, activeIndex: number) => (state: RootState) => {\n    return selectImageData(filePath)(state).data[activeIndex]\n  }\n\nexport const selectCsvData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).csv[filePath].data\n\nexport const selectCsvDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).csv).includes(filePath)\n\nexport const selectCsvDataError = (filePath: string) => (state: RootState) =>\n  selectCsvDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).csv[filePath].error\n    : null\n\nexport const selectCsvDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].pending\n\nexport const selectCsvDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectCsvDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).csv[filePath].fulfilled\n\nexport const selectRoiData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).roi[filePath]?.data[0] ?? []\n\nexport const selectRoiDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).roi).includes(filePath)\n\nexport const selectRoiDataError = (filePath: string) => (state: RootState) =>\n  selectRoiDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).roi[filePath].error\n    : null\n\nexport const selectRoiDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].pending\n\nexport const selectRoiDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectRoiDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).roi[filePath].fulfilled\n\nexport const selectRoiUniqueList = (filePath: string) => (state: RootState) => {\n  if (selectRoiDataIsFulfilled(filePath)(state)) {\n    return selectDisplayData(state).roi[filePath].roiUniqueList\n  }\n  return null\n}\n\nexport const selectScatterData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).scatter[filePath]?.data ?? []\n\nexport const selectScatterDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).scatter).includes(filePath)\n\nexport const selectScatterDataError =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).scatter[filePath].error\n      : null\n\nexport const selectScatterDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].pending\n\nexport const selectScatterDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectScatterDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).scatter[filePath].fulfilled\n\nexport const selectBarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.data ?? []\n\nexport const selectBarIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).bar[filePath]?.index ?? []\n\nexport const selectBarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).bar).includes(filePath)\n\nexport const selectBarDataError = (filePath: string) => (state: RootState) =>\n  selectBarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).bar[filePath].error\n    : null\n\nexport const selectBarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].pending\n\nexport const selectBarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectBarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).bar[filePath].fulfilled\n\nexport const selectHTMLData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).html[filePath]?.data ?? ''\n\nexport const selectHTMLDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).html).includes(filePath)\n\nexport const selectHTMLDataError = (filePath: string) => (state: RootState) =>\n  selectHTMLDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).html[filePath].error\n    : null\n\nexport const selectHTMLDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].pending\n\nexport const selectHTMLDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHTMLDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).html[filePath].fulfilled\n\nexport const selectHistogramData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).histogram[filePath].data\n\nexport const selectHistogramDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).histogram).includes(filePath)\n\nexport const selectHistogramDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectHistogramDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).histogram[filePath].pending\n\nexport const selectHistogramDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectHistogramDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).histogram[filePath].fulfilled\n\nexport const selectHistogramDataError =\n  (filePath: string) => (state: RootState) =>\n    selectHistogramDataIsInitialized(filePath)(state)\n      ? selectDisplayData(state).histogram[filePath].error\n      : null\nexport const selectLineData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).line[filePath].data\n\nexport const selectLineColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).line[filePath].columns\n\nexport const selectLineIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).line[filePath].index\n\nexport const selectLineDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).line).includes(filePath)\n\nexport const selectLineDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectLineDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).line[filePath].pending\n\nexport const selectLineDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectLineDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).line[filePath].fulfilled\n\nexport const selectLineDataError = (filePath: string) => (state: RootState) =>\n  selectLineDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).line[filePath].error\n    : null\n\nexport const selectPieData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).pie[filePath].data\n\nexport const selectPieColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).pie[filePath].columns\n\nexport const selectPieDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).pie).includes(filePath)\n\nexport const selectPieDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectPieDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).pie[filePath].pending\n\nexport const selectPieDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectPieDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).pie[filePath].fulfilled\n\nexport const selectPieDataError = (filePath: string) => (state: RootState) =>\n  selectPieDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).pie[filePath].error\n    : null\n\nexport const selectPolarData = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).polar[filePath].data\n\nexport const selectPolarColumns = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).polar[filePath].columns\n\nexport const selectPolarIndex = (filePath: string) => (state: RootState) =>\n  selectDisplayData(state).polar[filePath].index\n\nexport const selectPolarDataIsInitialized =\n  (filePath: string) => (state: RootState) =>\n    Object.keys(selectDisplayData(state).polar).includes(filePath)\n\nexport const selectPolarDataIsPending =\n  (filePath: string) => (state: RootState) =>\n    selectPolarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).polar[filePath].pending\n\nexport const selectPolarDataIsFulfilled =\n  (filePath: string) => (state: RootState) =>\n    selectPolarDataIsInitialized(filePath)(state) &&\n    selectDisplayData(state).polar[filePath].fulfilled\n\nexport const selectPolarDataError = (filePath: string) => (state: RootState) =>\n  selectPolarDataIsInitialized(filePath)(state)\n    ? selectDisplayData(state).polar[filePath].error\n    : null\n","import { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\n\nexport const VISUALIZE_ITEM_SLICE_NAME = 'visualaizeItem'\n\nexport type VisualaizeItem = {\n  selectedItemId: number | null\n  items: {\n    [itemId: number | string]: VisualaizeItemType\n  }\n  layout: ItemLayout\n}\n\nexport type ItemLayout = number[][] // itemIdをrow,columnで並べる\n\nexport type VisualaizeItemType = DisplayDataItem\n\nexport interface ItemBaseType<T extends VISUALIZE_ITEM_TYPE> {\n  itemType: T\n  width: number\n  height: number\n}\n\nexport type ColorType = {\n  rgb: string\n  offset: string\n}\n\nexport const VISUALIZE_ITEM_TYPE_SET = {\n  DISPLAY_DATA: 'displayData',\n} as const\n\nexport type VISUALIZE_ITEM_TYPE =\n  typeof VISUALIZE_ITEM_TYPE_SET[keyof typeof VISUALIZE_ITEM_TYPE_SET]\n\nexport type DisplayDataItem =\n  | ImageItem\n  | TimeSeriesItem\n  | HeatMapItem\n  | CsvItem\n  | RoiItem\n  | ScatterItem\n  | BarItem\n  | HDF5Item\n  | HTMLItem\n  | FluoItem\n  | BehaviorItem\n  | HistogramItem\n  | LineItem\n  | PieItem\n  | PolarItem\n\nexport interface DisplayDataItemBaseType extends ItemBaseType<'displayData'> {\n  filePath: string | null\n  nodeId: string | null\n  dataType: DATA_TYPE | null\n  isWorkflowDialog: boolean\n  saveFileName: string\n  saveFormat: string\n}\n\nexport interface ImageItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.IMAGE\n  activeIndex: number\n  startIndex: number\n  endIndex: number\n  showticklabels: boolean\n  zsmooth: string | boolean\n  showline: boolean\n  showgrid: boolean\n  showscale: boolean\n  colors: ColorType[]\n  alpha: number\n  roiItem: RoiItem | null\n  roiAlpha: number\n  duration: number\n  clickedDataId?: string\n}\n\nexport interface TimeSeriesItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.TIME_SERIES\n  offset: boolean\n  span: number\n  showgrid: boolean\n  showline: boolean\n  showticklabels: boolean\n  zeroline: boolean\n  xrange: {\n    left: number | undefined\n    right: number | undefined\n  }\n  rangeUnit: 'frames' | 'time'\n  maxIndex: number\n  refImageItemId: number | null\n  drawOrderList: string[]\n}\n\nexport interface HeatMapItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HEAT_MAP\n  showscale: boolean\n  colors: ColorType[]\n}\nexport interface CsvItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.CSV\n  setHeader: number | null\n  setIndex: boolean\n  transpose: boolean\n}\nexport interface RoiItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.ROI\n  outputKey?: string\n  // colors: ColorType[]\n}\n\nexport interface ScatterItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.SCATTER\n  xIndex: string\n  yIndex: string\n}\n\nexport interface BarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BAR\n  index: string\n}\n\nexport interface HDF5Item extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HDF5\n}\n\nexport interface HTMLItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HTML\n}\n\nexport interface FluoItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.FLUO\n}\n\nexport interface BehaviorItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.BEHAVIOR\n}\n\nexport interface HistogramItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.HISTOGRAM\n  bins: number\n}\n\nexport interface LineItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.LINE\n  selectedIndex: number\n}\n\nexport interface PieItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.PIE\n}\n\nexport interface PolarItem extends DisplayDataItemBaseType {\n  dataType: typeof DATA_TYPE_SET.POLAR\n  selectedIndex: number\n}\n","import { DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  VisualaizeItemType,\n  DisplayDataItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  ImageItem,\n  TimeSeriesItem,\n  HeatMapItem,\n  RoiItem,\n  ScatterItem,\n  CsvItem,\n  BarItem,\n  HistogramItem,\n  LineItem,\n  PieItem,\n  PolarItem,\n} from './VisualizeItemType'\n\nexport function isDisplayDataItem(\n  item: VisualaizeItemType,\n): item is DisplayDataItem {\n  return item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA\n}\n\nexport function isImageItem(item: VisualaizeItemType): item is ImageItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.IMAGE\n  )\n}\n\nexport function isTimeSeriesItem(\n  item: VisualaizeItemType,\n): item is TimeSeriesItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.TIME_SERIES\n  )\n}\n\nexport function isCsvItem(item: VisualaizeItemType): item is CsvItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.CSV\n  )\n}\n\nexport function isHeatMapItem(item: VisualaizeItemType): item is HeatMapItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HEAT_MAP\n  )\n}\n\nexport function isRoiItem(item: VisualaizeItemType): item is RoiItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.ROI\n  )\n}\n\nexport function isScatterItem(item: VisualaizeItemType): item is ScatterItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.SCATTER\n  )\n}\n\nexport function isBarItem(item: VisualaizeItemType): item is BarItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.BAR\n  )\n}\n\nexport function isHistogramItem(\n  item: VisualaizeItemType,\n): item is HistogramItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.HISTOGRAM\n  )\n}\n\nexport function isLineItem(item: VisualaizeItemType): item is LineItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.LINE\n  )\n}\n\nexport function isPieItem(item: VisualaizeItemType): item is PieItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.PIE\n  )\n}\n\nexport function isPolarItem(item: VisualaizeItemType): item is PolarItem {\n  return (\n    item.itemType === VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA &&\n    item.dataType === DATA_TYPE_SET.POLAR\n  )\n}\n","import { RootState } from 'store/store'\nimport {\n  selectRoiData,\n  selectRoiUniqueList,\n  selectTimeSeriesData,\n  selectTimeSeriesDataIsInitialized,\n} from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport {\n  isDisplayDataItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isHeatMapItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n  isHistogramItem,\n  isLineItem,\n  isPolarItem,\n} from './VisualizeItemUtils'\n\nexport const selectSelectedVisualizeItemId = (state: RootState) =>\n  state.visualaizeItem.selectedItemId\n\nexport const selectVisualizeImageItemIdList = (state: RootState) =>\n  Object.keys(state.visualaizeItem.items)\n    .map(Number)\n    .filter((itemId) => {\n      const item = selectVisualizeItemById(itemId)(state)\n      return isImageItem(item) && !item.isWorkflowDialog\n    })\n\nexport const selectVisualizeItems = (state: RootState) =>\n  state.visualaizeItem.items\n\nexport const selectVisualizeItemById = (itemId: number) => (state: RootState) =>\n  state.visualaizeItem.items[itemId]\n\nexport const selectVisualizeItemLayout = (state: RootState) =>\n  state.visualaizeItem.layout\n\nexport const selectVisualizeItemIsWorkflowDialog =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).isWorkflowDialog\n  }\n\nexport const selectVisualizeItemIdForWorkflowDialog =\n  (nodeId: string, filePath: string, dataType: DATA_TYPE) =>\n  (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    let targetItemId: null | number = null\n    for (const [itemId, value] of Object.entries(items)) {\n      if (\n        value.nodeId === nodeId &&\n        value.filePath === filePath &&\n        value.dataType === dataType &&\n        value.isWorkflowDialog\n      ) {\n        targetItemId = Number(itemId)\n      }\n    }\n    return targetItemId\n  }\n\nexport const selectVisualizeItemWidth =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).width\n  }\n\nexport const selectVisualizeItemHeight =\n  (itemId: number) => (state: RootState) => {\n    return selectVisualizeItemById(itemId)(state).height\n  }\n\nexport const selectVisualizeItemType = (itemId: number) => (state: RootState) =>\n  selectVisualizeItemById(itemId)(state).itemType\n\nexport const selectVisualizeDataType =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.dataType\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataNodeId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.nodeId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeDataFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectVisualizeSaveFilename =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFileName\n  }\n\nexport const selectVisualizeSaveFormat =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    return item.saveFormat\n  }\n\nexport const selectImageItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isDisplayDataItem(item)) {\n      return item.filePath\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectRoiItemNodeId = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.nodeId ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemFilePath = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.roiItem?.filePath ?? null\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectRoiItemOutputKeys =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.roiItem?.outputKey ?? null\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowticklabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemZsmooth =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.zsmooth\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemStartIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.startIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemEndIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.endIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemColors = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.colors\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemActiveIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.activeIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemAlpha = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isImageItem(item)) {\n    return item.alpha\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectImageItemRoiAlpha =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.roiAlpha\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemRoiFilePath =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      if (item.roiItem) {\n        return item.roiItem.filePath\n      } else {\n        return null\n      }\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemDuration =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isImageItem(item)) {\n      return item.duration\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemOffset =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.offset\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemSpan =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.span\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowGrid =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showgrid\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemShowTickLabels =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.showticklabels\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemZeroLine =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.zeroline\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemXrange =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.xrange\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemDrawOrderList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.drawOrderList\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectTimeSeriesItemRefImageItemId =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.refImageItemId\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemRefRoiUniqueList =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      if (item.refImageItemId != null) {\n        const imageItem = selectVisualizeItems(state)[item.refImageItemId]\n        if (isImageItem(imageItem) && imageItem.roiItem?.filePath != null) {\n          return selectRoiUniqueList(imageItem.roiItem.filePath)(state)\n        }\n      }\n      return null\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectTimeSeriesItemKeys =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const path = selectTimeSeriesItemFilePath(itemId)(state)\n      if (path != null && selectTimeSeriesDataIsInitialized(path)(state)) {\n        const dataKeys = Object.keys(selectTimeSeriesData(path)(state))\n        const roiUniqueList =\n          selectTimeSeriesItemRefRoiUniqueList(itemId)(state)\n        if (roiUniqueList != null) {\n          return dataKeys.filter((key) => roiUniqueList.includes(key))\n        } else {\n          return dataKeys\n        }\n      } else {\n        return []\n      }\n    }\n    throw new Error('invalid VisualaizeItemType')\n  }\n\nexport const selectRoiItemIndex =\n  (itemId: number, roiFilePath: string | null) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      const maxIdx = item.maxIndex\n      if (maxIdx !== 0) {\n        return maxIdx\n      }\n    }\n\n    if (roiFilePath !== null) {\n      return selectRoiItemMaxNumber(roiFilePath)(state)\n    } else {\n      return 0\n    }\n  }\n\nexport const selectRoiItemMaxNumber =\n  (roiFilePath: string) => (state: RootState) => {\n    const roiData = selectRoiData(roiFilePath)(state)\n    if (roiData.length !== 0) {\n      return Math.max(...roiData.map((arr) => Math.max(...arr)))\n    } else {\n      return 0\n    }\n  }\n\nexport const selectHeatMapItemShowScale =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.showscale\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectHeatMapItemColors =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHeatMapItem(item)) {\n      return item.colors\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemTranspose =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.transpose\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetHeader =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isCsvItem(item)) {\n      return item.setHeader\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectCsvItemSetIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isCsvItem(item)) {\n    return item.setIndex\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectBarItemIndex = (itemId: number) => (state: RootState) => {\n  const item = selectVisualizeItemById(itemId)(state)\n  if (isBarItem(item)) {\n    return item.index\n  } else {\n    throw new Error('invalid VisualaizeItemType')\n  }\n}\n\nexport const selectScatterItemXIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.xIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectScatterItemYIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isScatterItem(item)) {\n      return item.yIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectDisplayDataIsSingle =\n  (itemId: number) => (state: RootState) => {\n    const items = selectVisualizeItems(state)\n    const item = items[itemId]\n    const targetFilePath = item.filePath\n    return (\n      Object.values(items).filter((value) => value.filePath === targetFilePath)\n        .length === 1\n    )\n  }\n\nexport const selectHistogramItemBins =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isHistogramItem(item)) {\n      return item.bins\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectLineItemSelectedIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isLineItem(item)) {\n      return item.selectedIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectPolarItemSelectedIndex =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isPolarItem(item)) {\n      return item.selectedIndex\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n\nexport const selectImageItemRangeUnit =\n  (itemId: number) => (state: RootState) => {\n    const item = selectVisualizeItemById(itemId)(state)\n    if (isTimeSeriesItem(item)) {\n      return item.rangeUnit\n    } else {\n      throw new Error('invalid VisualaizeItemType')\n    }\n  }\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { ThunkApiConfig } from 'store/store'\nimport { getTimeSeriesDataById } from '../DisplayData/DisplayDataActions'\nimport { selectRoiData } from '../DisplayData/DisplayDataSelectors'\nimport { DATA_TYPE } from '../DisplayData/DisplayDataType'\nimport { selectVisualizeItems } from './VisualizeItemSelectors'\nimport { VISUALIZE_ITEM_SLICE_NAME } from './VisualizeItemType'\nimport { isImageItem, isTimeSeriesItem } from './VisualizeItemUtils'\n\nexport const setImageItemClikedDataId = createAsyncThunk<\n  void,\n  { itemId: number; clickedDataId: string },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setImageItemClikedDataId`,\n  ({ itemId, clickedDataId }, thunkAPI) => {\n    const items = selectVisualizeItems(thunkAPI.getState())\n    Object.values(items).forEach((item) => {\n      if (\n        isTimeSeriesItem(item) &&\n        item.filePath != null &&\n        item.refImageItemId === itemId &&\n        !item.drawOrderList.includes(clickedDataId)\n      ) {\n        thunkAPI.dispatch(\n          getTimeSeriesDataById({ path: item.filePath, index: clickedDataId }),\n        )\n      }\n    })\n  },\n)\n\nexport const selectingImageArea = createAsyncThunk<\n  string[],\n  {\n    itemId: number\n    range: {\n      x: number[]\n      y: number[]\n    }\n  },\n  ThunkApiConfig\n>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/selectingImageArea`,\n  ({ itemId, range }, thunkAPI) => {\n    const { x, y } = range\n    const [x1, x2] = x.map(Math.round)\n    const [y1, y2] = y.map(Math.round)\n    const selectedZList: string[] = []\n    const items = selectVisualizeItems(thunkAPI.getState())\n    const imageItem = items[itemId]\n    if (isImageItem(imageItem) && imageItem.roiItem != null) {\n      const roiFilePath = imageItem.roiItem.filePath\n      if (roiFilePath != null) {\n        const roiData = selectRoiData(roiFilePath)(thunkAPI.getState())\n        for (let x = x1; x <= x2; x++) {\n          for (let y = y1; y <= y2; y++) {\n            const z = roiData[y][x]\n            if (z != null) {\n              const zNum = String(z) // indexとidのずれを回避\n              if (!selectedZList.includes(zNum)) {\n                selectedZList.push(zNum)\n              }\n            }\n          }\n        }\n        Object.values(items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            const path = item.filePath\n            selectedZList.forEach((selectedZ) => {\n              thunkAPI.dispatch(\n                getTimeSeriesDataById({\n                  path,\n                  index: String(selectedZ),\n                }),\n              )\n            })\n          }\n        })\n      }\n    }\n    return selectedZList\n  },\n)\n\ntype DeleteOption =\n  | {\n      deleteData: true\n      dataType: DATA_TYPE\n      filePath: string\n    }\n  | { deleteData: false }\n\ntype DeleteDisplayItemArgs = {\n  itemId: number\n} & DeleteOption\n\nexport const deleteDisplayItem = createAction<DeleteDisplayItemArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/deleteDisplayItem`,\n)\n\ntype SetNewDisplayDataPathArgs = {\n  itemId: number\n  filePath: string\n  nodeId: string | null\n  dataType?: DATA_TYPE\n} & (\n  | {\n      deleteData: true\n      prevFilePath: string\n      prevDataType: DATA_TYPE\n    }\n  | { deleteData: false }\n)\n\nexport const setNewDisplayDataPath = createAction<SetNewDisplayDataPathArgs>(\n  `${VISUALIZE_ITEM_SLICE_NAME}/setNewDisplayDataPath`,\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { DATA_TYPE, DATA_TYPE_SET } from '../DisplayData/DisplayDataType'\nimport {\n  deleteDisplayItem,\n  selectingImageArea,\n  setImageItemClikedDataId,\n  setNewDisplayDataPath,\n} from './VisualizeItemActions'\n\nimport {\n  HeatMapItem,\n  ImageItem,\n  CsvItem,\n  TimeSeriesItem,\n  RoiItem,\n  ScatterItem,\n  VisualaizeItem,\n  VISUALIZE_ITEM_TYPE_SET,\n  BarItem,\n  HDF5Item,\n  HTMLItem,\n  FluoItem,\n  BehaviorItem,\n  HistogramItem,\n  LineItem,\n  PieItem,\n  PolarItem,\n  VISUALIZE_ITEM_SLICE_NAME,\n} from './VisualizeItemType'\nimport {\n  isDisplayDataItem,\n  isHeatMapItem,\n  isImageItem,\n  isTimeSeriesItem,\n  isCsvItem,\n  isScatterItem,\n  isBarItem,\n  isHistogramItem,\n  isLineItem,\n  isPolarItem,\n} from './VisualizeItemUtils'\n\nexport const initialState: VisualaizeItem = {\n  items: {},\n  selectedItemId: null,\n  layout: [],\n}\nconst displayDataCommonInitialValue = {\n  itemType: VISUALIZE_ITEM_TYPE_SET.DISPLAY_DATA,\n  filePath: null,\n  nodeId: null,\n  width: 500,\n  height: 500,\n  isWorkflowDialog: false,\n  saveFileName: 'newPlot',\n  saveFormat: 'png',\n}\nconst imageItemInitialValue: ImageItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.IMAGE,\n  startIndex: 1,\n  endIndex: 10,\n  showticklabels: false,\n  showline: true,\n  zsmooth: 'best',\n  showgrid: false,\n  showscale: false,\n  colors: [\n    { rgb: `rgb(0, 0, 0)`, offset: '0' },\n    { rgb: `rgb(255, 255, 255)`, offset: '1.0' },\n  ],\n  activeIndex: 0,\n  alpha: 1.0,\n  roiItem: null,\n  roiAlpha: 1.0,\n  duration: 500,\n}\nconst timeSeriesItemInitialValue: TimeSeriesItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.TIME_SERIES,\n  offset: true,\n  span: 5,\n  showgrid: true,\n  showline: true,\n  showticklabels: true,\n  zeroline: false,\n  xrange: {\n    left: undefined,\n    right: undefined,\n  },\n  rangeUnit: 'frames',\n  maxIndex: 0,\n  drawOrderList: [],\n  refImageItemId: null,\n}\nconst heatMapItemInitialValue: HeatMapItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HEAT_MAP,\n  showscale: true,\n  colors: [\n    { rgb: `rgb(0, 0, 255)`, offset: '0' },\n    { rgb: `rgb(200, 200, 200)`, offset: '0.5' },\n    { rgb: `rgb(255, 0, 0)`, offset: '1.0' },\n  ],\n}\nconst csvItemInitialValue: CsvItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.CSV,\n  setHeader: null,\n  setIndex: false,\n  transpose: false,\n}\nconst roiItemInitialValue: RoiItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.ROI,\n}\nconst scatterItemInitialValue: ScatterItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.SCATTER,\n  xIndex: '0',\n  yIndex: '1',\n}\nconst barItemInitialValue: BarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BAR,\n  index: '0',\n}\nconst hdf5ItemInitialValue: HDF5Item = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HDF5,\n}\nconst htmlItemInitialValue: HTMLItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HTML,\n}\nconst fluoItemInitialValue: FluoItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.FLUO,\n}\nconst behaviorItemInitialValue: BehaviorItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.BEHAVIOR,\n}\nconst histogramItemInitialValue: HistogramItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.HISTOGRAM,\n  bins: 20,\n}\nconst lineItemInitialValue: LineItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.LINE,\n  selectedIndex: 0,\n}\nconst pieItemInitialValue: PieItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.PIE,\n}\nconst polarItemInitialValue: PolarItem = {\n  ...displayDataCommonInitialValue,\n  dataType: DATA_TYPE_SET.POLAR,\n  selectedIndex: 0,\n}\n\nfunction getDisplayDataItemInitialValue(dataType: DATA_TYPE) {\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return imageItemInitialValue\n    case DATA_TYPE_SET.HEAT_MAP:\n      return heatMapItemInitialValue\n    case DATA_TYPE_SET.TIME_SERIES:\n      return timeSeriesItemInitialValue\n    case DATA_TYPE_SET.CSV:\n      return csvItemInitialValue\n    case DATA_TYPE_SET.ROI:\n      return roiItemInitialValue\n    case DATA_TYPE_SET.SCATTER:\n      return scatterItemInitialValue\n    case DATA_TYPE_SET.BAR:\n      return barItemInitialValue\n    case DATA_TYPE_SET.HDF5:\n      return hdf5ItemInitialValue\n    case DATA_TYPE_SET.HTML:\n      return htmlItemInitialValue\n    case DATA_TYPE_SET.FLUO:\n      return fluoItemInitialValue\n    case DATA_TYPE_SET.BEHAVIOR:\n      return behaviorItemInitialValue\n    case DATA_TYPE_SET.HISTOGRAM:\n      return histogramItemInitialValue\n    case DATA_TYPE_SET.LINE:\n      return lineItemInitialValue\n    case DATA_TYPE_SET.PIE:\n      return pieItemInitialValue\n    case DATA_TYPE_SET.POLAR:\n      return polarItemInitialValue\n  }\n}\n\nexport const visualaizeItemSlice = createSlice({\n  name: VISUALIZE_ITEM_SLICE_NAME,\n  initialState,\n  reducers: {\n    changeRangeUnit: (state, action) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.rangeUnit = action.payload.rangeUnit\n      }\n    },\n    pushInitialItemToNewRow: (state) => {\n      const newItemId = addInitialItemFn(state)\n      state.layout.push([newItemId])\n    },\n    insertInitialItemToNextColumn: (state, action: PayloadAction<number>) => {\n      const newItemId = addInitialItemFn(state)\n      const targetItemId = action.payload\n      const targetRowIndex = state.layout.findIndex((row) =>\n        row.includes(targetItemId),\n      )\n      const targetColumnIndex =\n        state.layout[targetRowIndex].indexOf(targetItemId)\n      state.layout[targetRowIndex].splice(targetColumnIndex + 1, 0, newItemId)\n    },\n    addItemForWorkflowDialog: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        filePath: string\n        dataType: DATA_TYPE\n      }>,\n    ) => {\n      const { nodeId, filePath, dataType } = action.payload\n      const maxId = getMaxItemId(state)\n      const newItemId = maxId != null ? maxId + 1 : 0\n      state.items[newItemId] = {\n        ...getDisplayDataItemInitialValue(dataType),\n        isWorkflowDialog: true,\n        nodeId,\n        filePath,\n      }\n    },\n    deleteAllItemForWorkflowDialog: (state) => {\n      const targetItemIdList = Object.entries(state.items)\n        .filter(([itemId, value]) => value.isWorkflowDialog)\n        .map(([itemId, value]) => Number(itemId))\n      targetItemIdList.forEach(\n        (targetItemId) => delete state.items[targetItemId],\n      )\n    },\n    setItemSize: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        width: number\n        height: number\n      }>,\n    ) => {\n      const { itemId, width, height } = action.payload\n      const targetItem = state.items[itemId]\n      targetItem.width = width\n      targetItem.height = height\n    },\n    selectItem: (state, action: PayloadAction<number>) => {\n      state.selectedItemId = action.payload\n    },\n    reset: (state) => {\n      state.items = initialState.items\n      state.layout = initialState.layout\n      state.selectedItemId = initialState.selectedItemId\n    },\n    setRoiItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n        outputKey?: string\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId, outputKey } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        Object.values(state.items).forEach((item) => {\n          if (\n            isTimeSeriesItem(item) &&\n            item.filePath != null &&\n            item.refImageItemId === itemId\n          ) {\n            item.drawOrderList = []\n          }\n        })\n\n        if (targetItem.roiItem != null) {\n          targetItem.roiItem.filePath = filePath\n          targetItem.roiItem.nodeId = nodeId\n          targetItem.roiItem.outputKey = outputKey\n        } else {\n          targetItem.roiItem = {\n            ...roiItemInitialValue,\n            filePath,\n            nodeId,\n            outputKey,\n          }\n        }\n      }\n    },\n    setFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isDisplayDataItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      } else {\n        throw new Error('error')\n      }\n    },\n    setSaveFormat: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFormat: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFormat = action.payload.saveFormat\n    },\n    setSaveFileName: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        saveFileName: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      targetItem.saveFileName = action.payload.saveFileName\n    },\n    setImageItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setTimeSeriesItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    setHeatMapItemFilePath: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        filePath: string\n        nodeId: string | null\n      }>,\n    ) => {\n      const { itemId, filePath, nodeId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.filePath = filePath\n        targetItem.nodeId = nodeId\n      }\n    },\n    resetImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex?: number\n        endIndex?: number\n      }>,\n    ) => {\n      resetImageActiveIndexFn(state, action.payload)\n    },\n    incrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex++\n      }\n    },\n    decrementImageActiveIndex: (\n      state,\n      action: PayloadAction<{ itemId: number }>,\n    ) => {\n      const { itemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex--\n      }\n    },\n    setImageActiveIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        activeIndex: number\n      }>,\n    ) => {\n      const { itemId, activeIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.activeIndex = activeIndex\n      }\n    },\n    setImageItemShowticklabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setImageItemZsmooth: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zsmooth: string | boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.zsmooth = action.payload.zsmooth\n      }\n    },\n    setImageItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setImageItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setImageItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setImageItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setImageItemStartIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        startIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.startIndex = action.payload.startIndex\n      }\n    },\n    setImageItemEndIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        endIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.endIndex = action.payload.endIndex\n      }\n    },\n    setImageItemAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        alpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.alpha = action.payload.alpha\n      }\n    },\n    setImageItemRoiAlpha: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        roiAlpha: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.roiAlpha = action.payload.roiAlpha\n      }\n    },\n    setImageItemDuration: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        duration: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isImageItem(targetItem)) {\n        targetItem.duration = action.payload.duration\n      }\n    },\n    setTimeSeriesItemOffset: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        offset: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.offset = action.payload.offset\n      }\n    },\n    setTimeSeriesItemSpan: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        span: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.span = action.payload.span\n      }\n    },\n    setTimeSeriesItemShowGrid: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showgrid: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showgrid = action.payload.showgrid\n      }\n    },\n    setTimeSeriesItemShowLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showline = action.payload.showline\n      }\n    },\n    setTimeSeriesItemShowTickLabels: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showticklabels: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.showticklabels = action.payload.showticklabels\n      }\n    },\n    setTimeSeriesItemZeroLine: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        zeroline: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.zeroline = action.payload.zeroline\n      }\n    },\n    setTimeSeriesItemXrangeLeft: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        left: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.left = action.payload.left\n      }\n    },\n    setTimeSeriesItemXrangeRight: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        right: number | undefined\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.xrange.right = action.payload.right\n      }\n    },\n    setTimeSeriesItemDrawOrderList: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        drawOrderList: string[]\n      }>,\n    ) => {\n      const { itemId, drawOrderList } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.drawOrderList = drawOrderList\n      }\n    },\n    resetAllOrderList: (state) => {\n      Object.keys(state.items).forEach((id: any) => {\n        const targetItem = state.items[id]\n        if (isTimeSeriesItem(targetItem)) {\n          targetItem.drawOrderList = []\n        }\n      })\n    },\n    setTimeSeriesItemMaxIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        maxIndex: number\n      }>,\n    ) => {\n      const { itemId, maxIndex } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.maxIndex = maxIndex\n      }\n    },\n    setTimeSeriesRefImageItemId: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        refImageItemId: number | null\n      }>,\n    ) => {\n      const { itemId, refImageItemId } = action.payload\n      const targetItem = state.items[itemId]\n      if (isTimeSeriesItem(targetItem)) {\n        targetItem.refImageItemId = refImageItemId ?? null\n        targetItem.drawOrderList = []\n      }\n    },\n    setHeatMapItemShowScale: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        showscale: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.showscale = action.payload.showscale\n      }\n    },\n    setHeatMapItemColors: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        colors: {\n          rgb: string\n          offset: string\n        }[]\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHeatMapItem(targetItem)) {\n        targetItem.colors = action.payload.colors\n      }\n    },\n    setCsvItemTranspose: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        transpose: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.transpose = action.payload.transpose\n      }\n    },\n    setCsvItemSetHeader: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setHeader: number | null\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setHeader = action.payload.setHeader\n      }\n    },\n    setCsvItemSetIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        setIndex: boolean\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isCsvItem(targetItem)) {\n        targetItem.setIndex = action.payload.setIndex\n      }\n    },\n    setScatterItemXIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        xIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.xIndex = action.payload.xIndex\n      }\n    },\n    setScatterItemYIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        yIndex: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isScatterItem(targetItem)) {\n        targetItem.yIndex = action.payload.yIndex\n      }\n    },\n    setBarItemIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        index: string\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isBarItem(targetItem)) {\n        targetItem.index = action.payload.index\n      }\n    },\n    setHistogramItemBins: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        bins: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isHistogramItem(targetItem)) {\n        targetItem.bins = action.payload.bins\n      }\n    },\n    setLineItemSelectedIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        selectedIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isLineItem(targetItem)) {\n        targetItem.selectedIndex = action.payload.selectedIndex\n      }\n    },\n    setPolartemItemSelectedIndex: (\n      state,\n      action: PayloadAction<{\n        itemId: number\n        selectedIndex: number\n      }>,\n    ) => {\n      const targetItem = state.items[action.payload.itemId]\n      if (isPolarItem(targetItem)) {\n        targetItem.selectedIndex = action.payload.selectedIndex\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        const itemId = action.payload.itemId\n\n        if (isImageItem(state.items[itemId])) {\n          Object.values(state.items).forEach((item) => {\n            if (isTimeSeriesItem(item) && item.refImageItemId === itemId) {\n              item.refImageItemId = null\n            }\n          })\n        }\n\n        delete state.items[itemId]\n        if (itemId === state.selectedItemId) {\n          state.selectedItemId = null\n        }\n        state.layout.forEach((row, i) => {\n          const index = row.indexOf(itemId)\n          if (index !== -1) {\n            row.splice(index, 1)\n          }\n          if (row.length === 0) {\n            state.layout.splice(i, 1)\n          }\n        })\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        const { itemId, filePath, nodeId, dataType } = action.payload\n        const targetItem = state.items[itemId]\n        if (isDisplayDataItem(targetItem)) {\n          if (dataType != null) {\n            state.items[itemId] = {\n              ...getDisplayDataItemInitialValue(dataType),\n              width: targetItem.width,\n              height: targetItem.height,\n              filePath,\n              nodeId,\n            }\n          } else {\n            targetItem.filePath = filePath\n            targetItem.nodeId = nodeId\n          }\n        } else {\n          throw new Error('invalid VisualaizeItemType')\n        }\n        resetImageActiveIndexFn(state, { itemId })\n      })\n      .addCase(setImageItemClikedDataId.fulfilled, (state, action) => {\n        const { itemId: imageItemId, clickedDataId } = action.meta.arg\n        const targetItem = state.items[imageItemId]\n        if (isImageItem(targetItem)) {\n          targetItem.clickedDataId = clickedDataId\n        }\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId &&\n              !item.drawOrderList.includes(clickedDataId)\n            ) {\n              item.drawOrderList.push(clickedDataId)\n            }\n          }\n        })\n      })\n      .addCase(selectingImageArea.fulfilled, (state, action) => {\n        const { itemId: imageItemId } = action.meta.arg\n        const selectedZList = action.payload\n        Object.values(state.items).forEach((item) => {\n          if (isTimeSeriesItem(item)) {\n            if (\n              item.refImageItemId != null &&\n              imageItemId === item.refImageItemId\n            ) {\n              item.drawOrderList = selectedZList\n            }\n          }\n        })\n      })\n  },\n})\n\nfunction getMaxItemId(state: VisualaizeItem) {\n  const idList = Object.keys(state.items).map((key) => Number(key))\n  const maxId =\n    idList.length > 0 ? idList.reduce((a, b) => Math.max(a, b)) : null\n  return maxId\n}\n\nfunction addInitialItemFn(state: VisualaizeItem) {\n  const maxId = getMaxItemId(state)\n  const nextId = maxId != null ? maxId + 1 : 0\n  state.items[nextId] = getDisplayDataItemInitialValue(DATA_TYPE_SET.IMAGE)\n  state.selectedItemId = nextId\n  return nextId\n}\n\nfunction resetImageActiveIndexFn(\n  state: VisualaizeItem,\n  args: {\n    itemId: number\n  },\n) {\n  const { itemId } = args\n  const targetItem = state.items[itemId]\n  if (isImageItem(targetItem)) {\n    targetItem.activeIndex = 0\n  }\n}\n\nexport const {\n  changeRangeUnit,\n  pushInitialItemToNewRow,\n  insertInitialItemToNextColumn,\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n  setItemSize,\n  selectItem,\n  setFilePath,\n  setSaveFormat,\n  setSaveFileName,\n  setHeatMapItemFilePath,\n  setImageItemFilePath,\n  setTimeSeriesItemFilePath,\n  setRoiItemFilePath,\n  resetImageActiveIndex,\n  incrementImageActiveIndex,\n  decrementImageActiveIndex,\n  setImageActiveIndex,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowLine,\n  setImageItemShowGrid,\n  setImageItemShowScale,\n  setImageItemColors,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemAlpha,\n  setImageItemRoiAlpha,\n  setImageItemDuration,\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemDrawOrderList,\n  setTimeSeriesItemMaxIndex,\n  setTimeSeriesRefImageItemId,\n  setHeatMapItemShowScale,\n  setHeatMapItemColors,\n  setCsvItemTranspose,\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n  setBarItemIndex,\n  setHistogramItemBins,\n  setLineItemSelectedIndex,\n  setPolartemItemSelectedIndex,\n  resetAllOrderList,\n  reset,\n} = visualaizeItemSlice.actions\n\nexport default visualaizeItemSlice.reducer\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport { useSnackbar } from 'notistack'\nimport { reproduceWorkflow } from 'store/slice/Workflow/WorkflowActions'\nimport { AppDispatch } from 'store/store'\nimport { ExperimentUidContext } from '../ExperimentTable'\nimport ReplyIcon from '@mui/icons-material/Reply'\nimport { reset } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const ReproduceButton = React.memo(() => {\n  const dispatch: AppDispatch = useDispatch()\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = () => {\n    if (workspaceId) {\n      dispatch(reproduceWorkflow({workspaceId, uid}))\n      .unwrap()\n      .then(() => {\n        enqueueSnackbar('Successfully reproduced.', { variant: 'success' })\n        dispatch(reset())\n      })\n      .catch(() => {\n        enqueueSnackbar('Failed to reproduce', { variant: 'error' })\n      })\n    } else {\n      enqueueSnackbar('Workspace id is missing', { variant: 'error' })\n    }\n  }\n  return (\n    <IconButton onClick={onClick}>\n      <ReplyIcon />\n    </IconButton>\n  )\n})\n","import React, { ChangeEvent, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport Box from '@mui/material/Box'\nimport Alert from '@mui/material/Alert'\nimport AlertTitle from '@mui/material/AlertTitle'\nimport IconButton from '@mui/material/IconButton'\nimport Table from '@mui/material/Table'\nimport TableBody from '@mui/material/TableBody'\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\nimport TableContainer from '@mui/material/TableContainer'\nimport TableHead from '@mui/material/TableHead'\nimport TableRow from '@mui/material/TableRow'\nimport TablePagination from '@mui/material/TablePagination'\nimport Paper from '@mui/material/Paper'\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\nimport ReplayIcon from '@mui/icons-material/Replay'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport Checkbox from '@mui/material/Checkbox'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport TableSortLabel from '@mui/material/TableSortLabel'\nimport Typography from '@mui/material/Typography'\n\nimport { CollapsibleTable } from './CollapsibleTable'\nimport {\n  selectExperimentsStatusIsUninitialized,\n  selectExperimentsStatusIsFulfilled,\n  selectExperimentTimeStamp,\n  selectExperimentName,\n  selectExperimentStatus,\n  selectExperimentsStatusIsError,\n  selectExperimentsErrorMessage,\n  selectExperimentList,\n  selectExperimentHasNWB,\n} from 'store/slice/Experiments/ExperimentsSelectors'\nimport {\n  deleteExperimentByList,\n  getExperiments,\n} from 'store/slice/Experiments/ExperimentsActions'\nimport { ExperimentStatusIcon } from './ExperimentStatusIcon'\nimport { Experiment } from 'store/slice/Experiments/ExperimentsType'\nimport { DeleteButton } from './Button/DeleteButton'\nimport {\n  NWBDownloadButton,\n  SnakemakeDownloadButton,\n  WorkflowDownloadButton,\n} from './Button/DownloadButton'\nimport { ReproduceButton } from './Button/ReproduceButton'\nimport { useLocalStorage } from 'components/utils/LocalStorageUtil'\nimport { styled } from '@mui/material/styles'\nimport { renameExperiment } from 'api/experiments/Experiments'\nimport { selectPipelineLatestUid } from 'store/slice/Pipeline/PipelineSelectors'\nimport { clearCurrentPipeline } from 'store/slice/Pipeline/PipelineSlice'\nimport {\n  selectCurrentWorkspaceId,\n  selectIsWorkspaceOwner,\n} from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const ExperimentUidContext = React.createContext<string>('')\n\nexport const ExperimentTable: React.FC = () => {\n  const isUninitialized = useSelector(selectExperimentsStatusIsUninitialized)\n  const isFulfilled = useSelector(selectExperimentsStatusIsFulfilled)\n  const isError = useSelector(selectExperimentsStatusIsError)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (isUninitialized) {\n      dispatch(getExperiments())\n    }\n  }, [dispatch, isUninitialized])\n\n  if (isFulfilled) {\n    return <TableImple />\n  } else if (isError) {\n    return <ExperimentsErrorView />\n  } else {\n    return null\n  }\n}\n\nconst ExperimentsErrorView: React.FC = () => {\n  const message = useSelector(selectExperimentsErrorMessage)\n  return (\n    <Alert severity=\"error\">\n      <AlertTitle>failed to get experiments...</AlertTitle>\n      {message}\n    </Alert>\n  )\n}\n\nconst LOCAL_STORAGE_KEY_PER_PAGE = 'optinist_experiment_table_per_page'\n\nconst TableImple = React.memo(() => {\n  const isOwner = useSelector(selectIsWorkspaceOwner)\n  const currentPipelineUid = useSelector(selectPipelineLatestUid)\n  const experimentList = useSelector(selectExperimentList)\n  const experimentListValues = Object.values(experimentList)\n  const experimentListKeys = Object.keys(experimentList)\n  const dispatch = useDispatch()\n  const onClickReload = () => {\n    dispatch(getExperiments())\n  }\n  const [order, setOrder] = React.useState<Order>('asc')\n  const [sortTarget, setSortTarget] =\n    React.useState<keyof Experiment>('timestamp')\n  const sortHandler =\n    (property: keyof Experiment) => (event: React.MouseEvent<unknown>) => {\n      const isAsc = sortTarget === property && order === 'asc'\n      setOrder(isAsc ? 'desc' : 'asc')\n      setSortTarget(property)\n    }\n\n  const [checkedList, setCheckedList] = useState<string[]>([])\n  const [open, setOpen] = React.useState(false)\n\n  const onCheckBoxClick = (uid: string) => {\n    if (checkedList.includes(uid)) {\n      setCheckedList(checkedList.filter((v) => v !== uid))\n    } else {\n      setCheckedList([...checkedList, uid])\n    }\n  }\n\n  const onChangeAllCheck = (checked: boolean) => {\n    if (checked) {\n      setCheckedList(experimentListValues.map((experiment) => experiment.uid))\n    } else {\n      setCheckedList([])\n    }\n  }\n\n  const recordsIsEmpty = experimentListKeys.length === 0\n\n  const onClickDelete = () => {\n    setOpen(true)\n  }\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    dispatch(deleteExperimentByList(checkedList))\n    checkedList.filter((v) => v === currentPipelineUid).length > 0 &&\n      dispatch(clearCurrentPipeline())\n    setCheckedList([])\n    setOpen(false)\n  }\n\n  const [page, setPage] = React.useState(0)\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage)\n  }\n\n  const [rowsPerPage, setRowsPerPage] = useLocalStorage(\n    LOCAL_STORAGE_KEY_PER_PAGE,\n    10,\n    (value) => {\n      const valueNum = Number(value)\n      return isNaN(valueNum) ? 10 : valueNum\n    },\n  )\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const newValue = parseInt(event.target.value, 10)\n    setRowsPerPage(newValue)\n    setPage(0)\n  }\n\n  // Avoid a layout jump when reaching the last page with empty rows.\n  const emptyRows =\n    page > 0\n      ? Math.max(0, (1 + page) * rowsPerPage - experimentListKeys.length)\n      : 0\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column' }}>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          alignItems: 'center',\n        }}\n      >\n        {!recordsIsEmpty && (\n          <Typography sx={{ flexGrow: 1, m: 1 }}>\n            {checkedList.length} selected\n          </Typography>\n        )}\n        <Button\n          sx={{\n            margin: (theme) => theme.spacing(0, 1, 1, 0),\n          }}\n          variant=\"outlined\"\n          endIcon={<ReplayIcon />}\n          onClick={onClickReload}\n        >\n          Reload\n        </Button>\n        {isOwner && (\n          <Button\n            sx={{\n              marginBottom: (theme) => theme.spacing(1),\n            }}\n            variant=\"outlined\"\n            color=\"error\"\n            endIcon={<DeleteIcon />}\n            onClick={onClickDelete}\n            disabled={checkedList.length === 0}\n          >\n            Delete\n          </Button>\n        )}\n      </Box>\n      <Dialog open={open}>\n        <DialogTitle>Are you sure you want to delete?</DialogTitle>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            Cancel\n          </Button>\n          <Button onClick={onClickOk} variant=\"outlined\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Paper\n        elevation={0}\n        variant=\"outlined\"\n        sx={{\n          flexGlow: 1,\n          height: '100%',\n        }}\n      >\n        <TableContainer component={Paper} elevation={0}>\n          <Table aria-label=\"collapsible table\">\n            <HeadItem\n              order={order}\n              sortHandler={sortHandler}\n              allCheckIndeterminate={\n                checkedList.length !== 0 &&\n                checkedList.length !== Object.keys(experimentList).length\n              }\n              allChecked={\n                checkedList.length === Object.keys(experimentList).length\n              }\n              onChangeAllCheck={onChangeAllCheck}\n              checkboxVisible={!recordsIsEmpty}\n              isOwner={isOwner}\n            />\n            <TableBody>\n              {experimentListValues\n                .sort(getComparator(order, sortTarget))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((expData) => (\n                  <ExperimentUidContext.Provider\n                    value={expData.uid}\n                    key={expData.uid}\n                  >\n                    <RowItem\n                      onCheckBoxClick={onCheckBoxClick}\n                      checked={checkedList.includes(expData.uid)}\n                      isOwner={isOwner}\n                    />\n                  </ExperimentUidContext.Provider>\n                ))}\n              {emptyRows > 0 && (\n                <TableRow\n                  style={{\n                    height: 53 * emptyRows,\n                  }}\n                >\n                  <TableCell colSpan={10} />\n                </TableRow>\n              )}\n              {recordsIsEmpty && (\n                <TableRow>\n                  <TableCell colSpan={10}>\n                    <Typography\n                      sx={{\n                        color: (theme) => theme.palette.text.secondary,\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        height: '300px',\n                        textAlign: 'center',\n                      }}\n                      variant=\"h6\"\n                    >\n                      No Rows...\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={experimentListKeys.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={handleChangePage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </Box>\n  )\n})\n\nconst HeadItem = React.memo<{\n  order: Order\n  sortHandler: any\n  allChecked: boolean\n  onChangeAllCheck: (checked: boolean) => void\n  allCheckIndeterminate: boolean\n  checkboxVisible: boolean\n  isOwner: boolean\n}>(\n  ({\n    order,\n    sortHandler,\n    allChecked,\n    onChangeAllCheck,\n    allCheckIndeterminate,\n    checkboxVisible,\n    isOwner,\n  }) => {\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              sx={{ visibility: checkboxVisible ? 'visible' : 'hidden' }}\n              checked={allChecked}\n              indeterminate={allCheckIndeterminate}\n              onChange={(e) => onChangeAllCheck(e.target.checked)}\n            />\n          </TableCell>\n          <TableCell />\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('timestamp')}\n            >\n              Timestamp\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('uid')}\n            >\n              ID\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>\n            <TableSortLabel\n              active\n              direction={order}\n              onClick={sortHandler('name')}\n            >\n              Name\n            </TableSortLabel>\n          </TableCell>\n          <TableCell>Success</TableCell>\n          <TableCell>Reproduce</TableCell>\n          <TableCell>Workflow</TableCell>\n          <TableCell>Snakemake</TableCell>\n          <TableCell>NWB</TableCell>\n          {isOwner && <TableCell>Delete</TableCell>}\n        </TableRow>\n      </TableHead>\n    )\n  },\n)\n\nconst RowItem = React.memo<{\n  onCheckBoxClick: (uid: string) => void\n  checked: boolean\n  isOwner: boolean\n}>(({ onCheckBoxClick, checked, isOwner }) => {\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const uid = React.useContext(ExperimentUidContext)\n  const timestamp = useSelector(selectExperimentTimeStamp(uid))\n  const status = useSelector(selectExperimentStatus(uid))\n  const name = useSelector(selectExperimentName(uid))\n  const hasNWB = useSelector(selectExperimentHasNWB(uid))\n  const [open, setOpen] = React.useState(false)\n  const [isEdit, setEdit] = useState(false)\n  const [errorEdit, setErrorEdit] = useState('')\n  const [valueEdit, setValueEdit] = useState(name)\n  const dispatch = useDispatch()\n\n  const onBlurEdit = (event: any) => {\n    event.preventDefault()\n    if (errorEdit) return\n    setTimeout(() => {\n      setEdit(false)\n      onSaveNewName()\n    }, 300)\n  }\n\n  const onEdit = (event: any) => {\n    if (isEdit || errorEdit) return\n    event.preventDefault()\n    setEdit(true)\n  }\n\n  const onChangeName = (event: ChangeEvent<HTMLInputElement>) => {\n    let errorEdit = ''\n    if (!event.target.value.trim()) {\n      errorEdit = 'Name is empty'\n    }\n    setErrorEdit(errorEdit)\n    setValueEdit(event.target.value)\n  }\n\n  const onSaveNewName = async () => {\n    if (valueEdit === name || workspaceId === void 0) return\n    await renameExperiment(workspaceId, uid, valueEdit)\n    dispatch(getExperiments())\n  }\n\n  return (\n    <React.Fragment>\n      <TableRow\n        sx={{\n          '& > *': {\n            borderBottom: 'unset',\n          },\n          [`& .${tableCellClasses.root}`]: {\n            borderBottomWidth: 0,\n          },\n        }}\n      >\n        <TableCell padding=\"checkbox\">\n          <Checkbox onChange={() => onCheckBoxClick(uid)} checked={checked} />\n        </TableCell>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {timestamp}\n        </TableCell>\n        <TableCell>{uid}</TableCell>\n        <TableCell sx={{ width: 160, position: 'relative' }} onClick={onEdit}>\n          {!isEdit ? (\n            valueEdit\n          ) : (\n            <>\n              <Input\n                placeholder=\"Name\"\n                error={!!errorEdit}\n                onChange={onChangeName}\n                autoFocus\n                onBlur={onBlurEdit}\n                value={valueEdit}\n              />\n              {errorEdit ? <TextError>{errorEdit}</TextError> : null}\n            </>\n          )}\n        </TableCell>\n        <TableCell>\n          <ExperimentStatusIcon status={status} />\n        </TableCell>\n        <TableCell>\n          <ReproduceButton />\n        </TableCell>\n        <TableCell>\n          <WorkflowDownloadButton />\n        </TableCell>\n        <TableCell>\n          <SnakemakeDownloadButton />\n        </TableCell>\n        <TableCell>\n          <NWBDownloadButton name={uid} hasNWB={hasNWB} />\n        </TableCell>\n        {isOwner &&<TableCell> <DeleteButton /></TableCell>}\n      </TableRow>\n      <CollapsibleTable open={open} />\n    </React.Fragment>\n  )\n})\n\nconst Input = styled('input')<{ error: boolean }>(({ error }) => ({\n  width: '100%',\n  border: 'none',\n  borderBottom: '1px solid',\n  outline: 'none',\n  color: error ? '#d32f2f' : '',\n  borderColor: error ? '#d32f2f' : '',\n}))\n\nconst TextError = styled(Typography)(() => ({\n  color: '#d32f2f',\n  fontSize: 12,\n  height: 12,\n  position: 'absolute',\n  bottom: 12,\n}))\n\ntype Order = 'asc' | 'desc'\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string },\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy)\n}\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1\n  }\n  return 0\n}\n","import React from 'react'\n\nexport function useLocalStorage<T>(\n  storageKey: string,\n  initialValue: T,\n  parseFn: (value: any) => T,\n): [T, React.Dispatch<React.SetStateAction<T>>] {\n  const [value, setValue] = React.useState(() => {\n    const savedStr = localStorage.getItem(storageKey)\n    if (savedStr != null) {\n      return parseFn(JSON.parse(savedStr))\n    }\n    return initialValue\n  })\n  React.useEffect(() => {\n    localStorage.setItem(storageKey, JSON.stringify(value))\n  }, [value, storageKey])\n  return [value, setValue]\n}\n","import React from 'react'\nimport { ExperimentTable } from './ExperimentTable'\nimport { CONTENT_HEIGHT } from 'const/Layout'\n\nconst Experiment = React.memo(() => {\n  return (\n    <div style={{ display: 'flex' }}>\n      <main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flexGrow: 1,\n          minHeight: CONTENT_HEIGHT,\n        }}\n      >\n        <ExperimentTable />\n      </main>\n    </div>\n  )\n})\n\nexport default Experiment\n","import { AlgoListDTO, AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  AlgorithmNodeType,\n  AlgorithmChild,\n  AlgorithmParent,\n  AlgorithmListTree,\n} from './AlgorithmListType'\n\nexport function isAlgoChild(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmChild {\n  return algoNode.type === 'child'\n}\n\nexport function isAlgoParent(\n  algoNode: AlgorithmNodeType,\n): algoNode is AlgorithmParent {\n  return algoNode.type === 'parent'\n}\n\nexport function getAlgoChild(\n  algoList: AlgorithmListTree,\n  algoName: string,\n): AlgorithmChild | null {\n  let result: AlgorithmChild | null = null\n  for (const [name, node] of Object.entries(algoList)) {\n    if (isAlgoChild(node)) {\n      if (name === algoName) {\n        result = node\n      }\n    } else {\n      result = getAlgoChild(node.children, algoName)\n    }\n    if (result != null) {\n      break\n    }\n  }\n  return result\n}\n\nexport function convertToAlgoListType(dto: AlgoListDTO) {\n  const algoList: AlgorithmListTree = {}\n  Object.entries(dto).forEach(([name, value]) => {\n    if (Object.prototype.hasOwnProperty.call(value, 'children')) {\n      algoList[name] = {\n        type: 'parent',\n        children: convertToAlgoListType(\n          (\n            value as {\n              children: AlgoListDTO\n            }\n          ).children as AlgoListDTO,\n        ),\n      }\n    } else {\n      const dto = value as {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n      algoList[name] = {\n        type: 'child',\n        functionPath: dto.path,\n        args: dto.args,\n        returns: dto.returns,\n      }\n    }\n  })\n  return algoList\n}\n","import { RootState } from 'store/store'\nimport { selectAlgorithmName } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport { getAlgoChild } from './AlgorithmListUtils'\n\nexport const selectAlgorithmList = (state: RootState) => state.algorithmList\n\nexport const selectAlgorithmListIsLated = (state: RootState) =>\n  selectAlgorithmList(state).isLatest\n\nexport const selectAlgorithmListTree = (state: RootState) =>\n  selectAlgorithmList(state).tree\n\nexport const selectAlgoArgs = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.args\n  } else {\n    return undefined\n  }\n}\n\nexport const selectAlgoReturns = (nodeId: string) => (state: RootState) => {\n  const algoName = selectAlgorithmName(nodeId)(state)\n  if (algoName != null) {\n    const algoListChild = getAlgoChild(selectAlgorithmListTree(state), algoName)\n    return algoListChild?.returns\n  } else {\n    return undefined\n  }\n}\n","import { AlgorithmInfo } from 'api/algolist/AlgoList'\n\nexport const ALGORITHM_LIST_SLICE_NAME = 'algorithmList'\n\nexport type AlgorithmListType = {\n  isLatest: boolean\n  tree: AlgorithmListTree\n}\n\nexport type AlgorithmListTree = {\n  [algoName: string]: AlgorithmNodeType\n}\n\nexport type AlgorithmNodeType = AlgorithmChild | AlgorithmParent\nexport type AlgorithmChild = {\n  type: 'child'\n  args: AlgorithmInfo[]\n  returns: AlgorithmInfo[]\n  functionPath: string\n}\nexport type AlgorithmParent = {\n  type: 'parent'\n  children: {\n    [name: string]: AlgorithmNodeType\n  }\n}\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type AlgoListDTO = {\n  [name: string]:\n    | {\n        args: AlgorithmInfo[]\n        returns: AlgorithmInfo[]\n        path: string\n      }\n    | { children: AlgoListDTO }\n}\n\nexport type AlgorithmInfo = {\n  name: string\n  type: string\n  isNone?: boolean\n}\n\nexport async function getAlgoListApi(): Promise<AlgoListDTO> {\n  const response = await axios.get(`${BASE_URL}/algolist`)\n  return response.data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { ALGORITHM_LIST_SLICE_NAME } from './AlgorithmListType'\nimport { AlgoListDTO, getAlgoListApi } from 'api/algolist/AlgoList'\n\nexport const getAlgoList = createAsyncThunk<AlgoListDTO, void>(\n  `${ALGORITHM_LIST_SLICE_NAME}/getAlgoList`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoListApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getAlgoParamsApi(algoName: string): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/params/${algoName}`)\n  return response.data\n}\n","import { createAction, createAsyncThunk } from '@reduxjs/toolkit'\nimport { Node } from 'react-flow-renderer'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { FLOW_ELEMENT_SLICE_NAME, NodeData } from './FlowElementType'\nimport { getAlgoParamsApi } from 'api/params/Params'\n\nexport type AddingNodeData = Omit<Node<NodeData>, 'position'> &\n  Partial<Pick<Node<NodeData>, 'position'>>\n\nexport const addAlgorithmNode = createAsyncThunk<\n  ParamDTO,\n  {\n    node: AddingNodeData\n    functionPath: string\n    name: string\n  }\n>(`${FLOW_ELEMENT_SLICE_NAME}/addAlgorithmNode`, async ({ name }, thunkAPI) => {\n  try {\n    const response = await getAlgoParamsApi(name)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n\nexport const addInputNode = createAction<{\n  node: AddingNodeData\n  fileType: FILE_TYPE\n}>(`${FLOW_ELEMENT_SLICE_NAME}/addInputNode`)\n","import { customAlphabet } from 'nanoid/non-secure'\n\nconst nanoid = customAlphabet('0123456789abcdefghijklmnopqrstuvwxyz', 10)\n\nexport const getNanoId = () => {\n  return nanoid()\n}\n","export const INITIAL_IMAGE_ELEMENT_ID = 'input_0'\nexport const INITIAL_IMAGE_ELEMENT_NAME = 'NoName'\n\nexport const INITIAL_ALGO_STYLE: React.CSSProperties = {\n  width: 180,\n  height: 100,\n  padding: 0,\n  borderRadius: 0,\n} as const\n\nexport const INITIAL_DATA_STYLE: React.CSSProperties = {\n  border: '1px solid #777',\n  height: 120,\n} as const\n\nexport const REACT_FLOW_NODE_TYPE_KEY = {\n  ImageFileNode: 'ImageFileNode',\n  CsvFileNode: 'CsvFileNode',\n  HDF5FileNode: 'HDF5FileNode',\n  FluoFileNode: 'FluoFileNode',\n  AlgorithmNode: 'AlgorithmNode',\n  BehaviorFileNode: 'BehaviorFileNode',\n} as const\n\nexport type REACT_FLOW_NODE_TYPE =\n  typeof REACT_FLOW_NODE_TYPE_KEY[keyof typeof REACT_FLOW_NODE_TYPE_KEY]\n","export const DND_ITEM_TYPE_SET = {\n  TREE_ITEM: 'TREE_ITEM',\n} as const\n\nexport type DND_ITEM_TYPE =\n  typeof DND_ITEM_TYPE_SET[keyof typeof DND_ITEM_TYPE_SET]\n\nexport type TreeItemDragObject = {}\n\nexport type TreeItemDropResult = {\n  position?: { x: number; y: number }\n}\n\nexport type TreeItemCollectedProps = {\n  isDragging: boolean\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem, { treeItemClasses } from '@mui/lab/TreeItem'\nimport { styled, Typography } from '@mui/material'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport IconButton from '@mui/material/IconButton'\nimport AddIcon from '@mui/icons-material/Add'\nimport { useDrag } from 'react-dnd'\n\nimport {\n  selectAlgorithmListIsLated,\n  selectAlgorithmListTree,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport {\n  AlgorithmChild,\n  AlgorithmNodeType,\n} from 'store/slice/AlgorithmList/AlgorithmListType'\nimport { isAlgoChild } from 'store/slice/AlgorithmList/AlgorithmListUtils'\nimport { getAlgoList } from 'store/slice/AlgorithmList/AlgorithmListActions'\nimport { FILE_TYPE, FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  NODE_TYPE,\n  NODE_TYPE_SET,\n} from 'store/slice/FlowElement/FlowElementType'\nimport {\n  addAlgorithmNode,\n  addInputNode,\n} from 'store/slice/FlowElement/FlowElementActions'\nimport { getNanoId } from 'utils/nanoid/NanoIdUtils'\nimport { REACT_FLOW_NODE_TYPE, REACT_FLOW_NODE_TYPE_KEY } from 'const/flowchart'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\n\nexport const AlgorithmTreeView = React.memo(() => {\n  const dispatch = useDispatch()\n  const algoList = useSelector(selectAlgorithmListTree)\n  const isLatest = useSelector(selectAlgorithmListIsLated)\n\n  useEffect(() => {\n    if (!isLatest) {\n      dispatch(getAlgoList())\n    }\n  }, [dispatch, isLatest])\n\n  const onAddAlgoNode = React.useCallback(\n    (\n      nodeName: string,\n      functionPath: string,\n      position?: { x: number; y: number },\n    ) => {\n      const name = nodeName\n      const newNode = {\n        id: `${name}_${getNanoId()}`,\n        type: REACT_FLOW_NODE_TYPE_KEY.AlgorithmNode,\n        data: { label: name, type: NODE_TYPE_SET.ALGORITHM },\n        position,\n      }\n      dispatch(\n        addAlgorithmNode({\n          node: newNode,\n          name,\n          functionPath,\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  return (\n    <TreeView\n      sx={{\n        flexGrow: 1,\n        height: '100%',\n      }}\n      defaultCollapseIcon={<ExpandMoreIcon />}\n      defaultExpandIcon={<ChevronRightIcon />}\n    >\n      <TreeItem nodeId=\"Data\" label=\"Data\">\n        <InputNodeComponent\n          fileName={'image'}\n          nodeName={'imageData'}\n          fileType={FILE_TYPE_SET.IMAGE}\n        />\n        <InputNodeComponent\n          fileName={'csv'}\n          nodeName={'csvData'}\n          fileType={FILE_TYPE_SET.CSV}\n        />\n        <InputNodeComponent\n          fileName={'hdf5'}\n          nodeName={'hdf5Data'}\n          fileType={FILE_TYPE_SET.HDF5}\n        />\n        <InputNodeComponent\n          fileName={'fluo'}\n          nodeName={'fluoData'}\n          fileType={FILE_TYPE_SET.FLUO}\n        />\n        <InputNodeComponent\n          fileName={'behavior'}\n          nodeName={'behaviorData'}\n          fileType={FILE_TYPE_SET.BEHAVIOR}\n        />\n      </TreeItem>\n      <TreeItem nodeId=\"Algorithm\" label=\"Algorithm\">\n        {Object.entries(algoList).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            onAddAlgoNode={onAddAlgoNode}\n            key={i.toFixed()}\n          />\n        ))}\n      </TreeItem>\n    </TreeView>\n  )\n})\n\nconst InputNodeComponent = React.memo<{\n  fileName: string\n  nodeName: string\n  fileType: FILE_TYPE\n}>(({ fileName, nodeName, fileType }) => {\n  const dispatch = useDispatch()\n\n  const onAddDataNode = React.useCallback(\n    (\n      nodeType: NODE_TYPE,\n      nodeName: string,\n      fileType: FILE_TYPE,\n      position?: { x: number; y: number },\n    ) => {\n      let reactFlowNodeType: REACT_FLOW_NODE_TYPE | '' = ''\n      switch (fileType) {\n        case FILE_TYPE_SET.CSV:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.CsvFileNode\n          break\n        case FILE_TYPE_SET.IMAGE:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.ImageFileNode\n          fileType = FILE_TYPE_SET.IMAGE\n          break\n        case FILE_TYPE_SET.HDF5:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.HDF5FileNode\n          fileType = FILE_TYPE_SET.HDF5\n          break\n        case FILE_TYPE_SET.FLUO:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.FluoFileNode\n          fileType = FILE_TYPE_SET.FLUO\n          break\n        case FILE_TYPE_SET.BEHAVIOR:\n          reactFlowNodeType = REACT_FLOW_NODE_TYPE_KEY.BehaviorFileNode\n          fileType = FILE_TYPE_SET.BEHAVIOR\n          break\n      }\n      const newNode = {\n        id: `input_${getNanoId()}`,\n        type: reactFlowNodeType,\n        data: { label: nodeName, type: nodeType },\n        position,\n      }\n      dispatch(addInputNode({ node: newNode, fileType }))\n    },\n    [dispatch],\n  )\n\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType, position)\n      },\n      [onAddDataNode, nodeName, fileType],\n    ),\n  )\n\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={fileName}\n      label={\n        <AddButton\n          name={fileName}\n          onClick={() => onAddDataNode(NODE_TYPE_SET.INPUT, nodeName, fileType)}\n        />\n      }\n    />\n  )\n})\n\nconst AlgoNodeComponentRecursive = React.memo<{\n  name: string\n  node: AlgorithmNodeType\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  if (isAlgoChild(node)) {\n    return (\n      <AlgoNodeComponent\n        name={name}\n        node={node}\n        onAddAlgoNode={onAddAlgoNode}\n      />\n    )\n  } else {\n    return (\n      <TreeItem nodeId={name} label={name}>\n        {Object.entries(node.children).map(([name, node], i) => (\n          <AlgoNodeComponentRecursive\n            name={name}\n            node={node}\n            key={i.toFixed()}\n            onAddAlgoNode={onAddAlgoNode}\n          />\n        ))}\n      </TreeItem>\n    )\n  }\n})\n\nconst AlgoNodeComponent = React.memo<{\n  name: string\n  node: AlgorithmChild\n  onAddAlgoNode: (\n    nodeName: string,\n    functionPath: string,\n    position?: { x: number; y: number },\n  ) => void\n}>(({ name, node, onAddAlgoNode }) => {\n  const { isDragging, dragRef } = useLeafItemDrag(\n    React.useCallback(\n      (position) => {\n        onAddAlgoNode(name, node.functionPath, position)\n      },\n      [onAddAlgoNode, name, node],\n    ),\n  )\n  return (\n    <LeafItem\n      ref={dragRef}\n      style={{\n        opacity: isDragging ? 0.6 : 1,\n      }}\n      onFocusCapture={(e) => e.stopPropagation()}\n      nodeId={name}\n      label={\n        <AddButton\n          name={name}\n          onClick={() => onAddAlgoNode(name, node.functionPath)}\n        />\n      }\n    />\n  )\n})\n\nconst AddButton = React.memo<{\n  name: string\n  onClick: () => void\n}>(({ name, onClick }) => {\n  return (\n    <>\n      <IconButton aria-label=\"add\" style={{ padding: 2 }} size=\"large\">\n        <AddIcon onClick={() => onClick()} />\n      </IconButton>\n      <Typography\n        variant=\"inherit\"\n        style={{\n          textOverflow: 'ellipsis',\n          overflow: 'visible',\n          width: '8rem',\n          display: 'inline-block',\n        }}\n      >\n        {name}\n      </Typography>\n    </>\n  )\n})\n\n// 未使用icon分の幅を消す\nconst LeafItem = styled(TreeItem)({\n  // background: 'red',\n  [`& .${treeItemClasses.iconContainer}`]: {\n    margin: 0,\n    width: 0,\n  },\n})\n\nfunction useLeafItemDrag(\n  onDragEnd: (positon: { x: number; y: number }) => void,\n) {\n  const [{ isDragging }, dragRef] = useDrag<\n    TreeItemDragObject,\n    TreeItemDropResult,\n    TreeItemCollectedProps\n  >(\n    () => ({\n      type: DND_ITEM_TYPE_SET.TREE_ITEM,\n      end: (_, monitor) => {\n        const position = monitor.getDropResult()?.position\n        if (monitor.didDrop() && position != null) {\n          onDragEnd(position)\n        }\n      },\n      collect: (monitor) => ({\n        isDragging: monitor.isDragging(),\n      }),\n    }),\n    [onDragEnd],\n  )\n  return { isDragging, dragRef }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nimport { INPUT_NODE_SLICE_NAME } from './InputNodeType'\n\nexport const setInputNodeFilePath = createAction<{\n  nodeId: string\n  filePath: string | string[]\n}>(`${INPUT_NODE_SLICE_NAME}/setInputNodeFilePath`)\n","import type { Node } from 'react-flow-renderer'\nimport {\n  isInputNodeData,\n  isAlgorithmNodeData,\n} from 'store/slice/FlowElement/FlowElementUtils'\nimport type {\n  NodePostDataType,\n  InputNodePostData,\n  AlgorithmNodePostData,\n} from './Run'\n\nexport function isInputNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<InputNodePostData> {\n  return isInputNodeData(node)\n}\n\nexport function isAlgorithmNodePostData(\n  node: Node<NodePostDataType>,\n): node is Node<AlgorithmNodePostData> {\n  return isAlgorithmNodeData(node)\n}\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport const FILE_TREE_TYPE_SET = {\n  IMAGE: 'image',\n  CSV: 'csv',\n  HDF5: 'hdf5',\n  FLUO: 'fluo',\n  BEHAVIOR: 'behavior',\n  ALL: 'all',\n} as const\n\nexport type FILE_TREE_TYPE =\n  typeof FILE_TREE_TYPE_SET[keyof typeof FILE_TREE_TYPE_SET]\n\nexport type TreeNodeTypeDTO = DirNodeDTO | FileNodeDTO\n\nexport interface NodeBaseDTO {\n  path: string\n  name: string\n  isdir: boolean\n}\n\nexport interface DirNodeDTO extends NodeBaseDTO {\n  isdir: true\n  nodes: TreeNodeTypeDTO[]\n}\n\nexport interface FileNodeDTO extends NodeBaseDTO {\n  isdir: false\n}\n\nexport async function getFilesTreeApi(\n  workspaceId: number,\n  fileType: FILE_TREE_TYPE,\n): Promise<TreeNodeTypeDTO[]> {\n  const response = await axios.get(`${BASE_URL}/files/${workspaceId}`, {\n    params: {\n      file_type: fileType,\n    },\n  })\n  return response.data\n}\n\nexport async function uploadFileApi(\n  workspaceId: number,\n  fileName: string,\n  config: {\n    onUploadProgress: (progressEvent: any) => void\n  },\n  formData: FormData,\n): Promise<{ file_path: string }> {\n  const response = await axios.post(\n    `${BASE_URL}/files/${workspaceId}/upload/${fileName}`,\n    formData,\n    config,\n  )\n  return response.data\n}\n","export const FILE_UPLOADER_SLICE_NAME = 'fileUploader'\n\nexport type FileUploader = {\n  [id: string]: FileUploaderType\n}\n\nexport type FileUploaderType = {\n  path?: string\n  fileName?: string\n  isUninitialized: boolean\n  pending: boolean\n  fulfilled: boolean\n  uploadingProgress?: number\n  error?: string\n}\n","import { createAsyncThunk, createAction } from '@reduxjs/toolkit'\nimport { uploadFileApi } from 'api/files/Files'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\n\nimport { FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\n\nexport const setUploadProgress = createAction<{\n  requestId: string\n  progess: number\n  total: number\n}>(`${FILE_UPLOADER_SLICE_NAME}/setUploadProgress`)\n\nexport const uploadFile = createAsyncThunk<\n  {\n    resultPath: string\n  },\n  {\n    workspaceId: number\n    requestId: string\n    nodeId?: string\n    fileName: string\n    formData: FormData\n    fileType?: FILE_TYPE\n  }\n>(\n  `${FILE_UPLOADER_SLICE_NAME}/uploadFile`,\n  async ({ workspaceId, requestId, fileName, formData }, thunkAPI) => {\n    try {\n      const config = getUploadConfig((percent, total) => {\n        thunkAPI.dispatch(\n          setUploadProgress({\n            requestId,\n            progess: percent,\n            total,\n          }),\n        )\n      })\n      const response = await uploadFileApi(\n        workspaceId,\n        fileName,\n        config,\n        formData,\n      )\n      return {\n        resultPath: response.file_path,\n      }\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n\nfunction getUploadConfig(\n  onUpdateProgressFn: (percent: number, totalSize: number) => void,\n) {\n  return {\n    onUploadProgress: function (progressEvent: any) {\n      const percentCompleted = Math.round(\n        (progressEvent.loaded * 100) / progressEvent.total,\n      )\n      onUpdateProgressFn(percentCompleted, progressEvent.total)\n    },\n  }\n}\n","import { createSlice, PayloadAction, isAnyOf } from '@reduxjs/toolkit'\nimport {\n  Node,\n  NodeChange,\n  Edge,\n  EdgeChange,\n  applyNodeChanges,\n  applyEdgeChanges,\n  Position,\n  Transform,\n} from 'react-flow-renderer'\nimport {\n  FLOW_ELEMENT_SLICE_NAME,\n  FlowElement,\n  NODE_TYPE_SET,\n  NodeData,\n  ElementCoord,\n} from './FlowElementType'\nimport {\n  INITIAL_ALGO_STYLE,\n  INITIAL_DATA_STYLE,\n  INITIAL_IMAGE_ELEMENT_ID,\n  INITIAL_IMAGE_ELEMENT_NAME,\n  REACT_FLOW_NODE_TYPE_KEY,\n} from 'const/flowchart'\nimport { fetchExperiment } from '../Experiments/ExperimentsActions'\nimport {\n  reproduceWorkflow,\n  importWorkflowConfig,\n} from 'store/slice/Workflow/WorkflowActions'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { addAlgorithmNode, addInputNode } from './FlowElementActions'\nimport { getLabelByPath } from './FlowElementUtils'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\n\nconst initialNodes: Node<NodeData>[] = [\n  {\n    id: INITIAL_IMAGE_ELEMENT_ID,\n    type: REACT_FLOW_NODE_TYPE_KEY.ImageFileNode,\n    data: {\n      type: NODE_TYPE_SET.INPUT,\n      label: INITIAL_IMAGE_ELEMENT_NAME,\n    },\n    style: INITIAL_DATA_STYLE,\n    position: { x: 50, y: 150 },\n  },\n]\n\nconst initialFlowPosition: Transform = [0, 0, 0.7] // [x, y, zoom]\n\nconst initialElementCoord: ElementCoord = {\n  x: 100,\n  y: 150,\n}\n\nconst initialState: FlowElement = {\n  flowNodes: initialNodes,\n  flowEdges: [],\n  flowPosition: initialFlowPosition,\n  elementCoord: initialElementCoord,\n}\n\nexport const flowElementSlice = createSlice({\n  name: FLOW_ELEMENT_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFlowPosition: (state, action: PayloadAction<Transform>) => {\n      state.flowPosition = action.payload\n    },\n    setFlowNodes: (state, action: PayloadAction<Node[]>) => {\n      state.flowNodes = action.payload\n    },\n    setFlowEdges: (state, action: PayloadAction<Edge[]>) => {\n      state.flowEdges = action.payload\n    },\n    deleteFlowNodes: (state, action: PayloadAction<Node[]>) => {\n      state.flowNodes = applyNodeChanges(\n        action.payload.map((node) => {\n          return { id: node.id, type: 'remove' }\n        }),\n        state.flowNodes,\n      )\n    },\n    setNodesChange: (state, action: PayloadAction<NodeChange[]>) => {\n      state.flowNodes = applyNodeChanges(action.payload, state.flowNodes)\n    },\n    setEdgesChange: (state, action: PayloadAction<EdgeChange[]>) => {\n      state.flowEdges = applyEdgeChanges(action.payload, state.flowEdges)\n    },\n    deleteFlowEdgeById: (state, action: PayloadAction<string>) => {\n      const element = state.flowEdges.find((edge) => edge.id === action.payload)\n      if (element !== undefined) {\n        state.flowEdges = applyEdgeChanges(\n          [{ id: element.id, type: 'remove' }],\n          state.flowEdges,\n        )\n      }\n    },\n    deleteFlowNodeById: (state, action: PayloadAction<string>) => {\n      const element = state.flowNodes.find((node) => node.id === action.payload)\n      if (element !== undefined) {\n        state.flowNodes = applyNodeChanges(\n          [{ id: element.id, type: 'remove' }],\n          state.flowNodes,\n        )\n        state.flowEdges = applyEdgeChanges(\n          state.flowEdges\n            .filter((edge) => {\n              return (\n                edge.source === action.payload || edge.target === action.payload\n              )\n            })\n            .map((edge) => {\n              return { id: edge.id, type: 'remove' }\n            }),\n          state.flowEdges,\n        )\n      }\n    },\n    editFlowNodePositionById: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        coord: {\n          x: number\n          y: number\n        }\n      }>,\n    ) => {\n      let { nodeId, coord } = action.payload\n      const elementIdx = state.flowNodes.findIndex((node) => node.id === nodeId)\n      const targetItem = state.flowNodes[elementIdx]\n      targetItem.position = coord\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        let { node } = action.meta.arg\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_ALGO_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowNodes.push({ ...node, position: node.position })\n        } else {\n          state.flowNodes.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        let { node } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          node = {\n            ...node,\n            style: {\n              ...node.style,\n              ...INITIAL_DATA_STYLE,\n            },\n            targetPosition: Position.Left,\n            sourcePosition: Position.Right,\n          }\n        }\n        if (node.position != null) {\n          state.flowNodes.push({ ...node, position: node.position })\n        } else {\n          state.flowNodes.push({ ...node, position: state.elementCoord })\n          updateElementCoord(state)\n        }\n      })\n      .addCase(setInputNodeFilePath, (state, action) => {\n        let { nodeId, filePath } = action.payload\n        const label = getLabelByPath(filePath)\n        const nodeIdx = state.flowNodes.findIndex((node) => node.id === nodeId)\n        const targetNode = state.flowNodes[nodeIdx]\n        if (targetNode.data != null) {\n          targetNode.data.label = label\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const nodeIdx = state.flowNodes.findIndex(\n            (node) => node.id === nodeId,\n          )\n          const targetNode = state.flowNodes[nodeIdx]\n          if (targetNode.data != null) {\n            targetNode.data.label = getLabelByPath(action.payload.resultPath)\n          }\n        }\n      })\n      .addCase(fetchExperiment.rejected, () => initialState)\n      .addMatcher(\n        isAnyOf(\n          reproduceWorkflow.fulfilled,\n          importWorkflowConfig.fulfilled,\n          fetchExperiment.fulfilled,\n        ),\n        (state, action) => {\n          state.flowPosition = initialFlowPosition\n          state.elementCoord = initialElementCoord\n          state.flowNodes = Object.values(action.payload.nodeDict).map(\n            (node) => {\n              if (isInputNodePostData(node)) {\n                return {\n                  ...node,\n                  data: {\n                    label: node.data?.label ?? '',\n                    type: node.data?.type ?? 'input',\n                  },\n                }\n              } else {\n                return {\n                  ...node,\n                  data: {\n                    label: node.data?.label ?? '',\n                    type: node.data?.type ?? 'algorithm',\n                  },\n                }\n              }\n            },\n          )\n          state.flowEdges = Object.values(action.payload.edgeDict)\n        },\n      ),\n})\n\nfunction getRandomArbitrary(min: number, max: number) {\n  return Math.random() * (max - min) + min\n}\n\nfunction updateElementCoord(state: FlowElement) {\n  const { x } = state.elementCoord\n  if (x > 800) {\n    state.elementCoord.x = 300\n    state.elementCoord.y += 100\n  } else {\n    state.elementCoord.x += 250\n    state.elementCoord.y += getRandomArbitrary(-20, 20)\n  }\n}\n\nexport const {\n  setNodesChange,\n  setEdgesChange,\n  setFlowPosition,\n  setFlowNodes,\n  setFlowEdges,\n  deleteFlowNodes,\n  deleteFlowEdgeById,\n  deleteFlowNodeById,\n  editFlowNodePositionById,\n} = flowElementSlice.actions\n\nexport default flowElementSlice.reducer\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getNWBParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/nwb`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const NWB_SLICE_NAME = 'NWB'\n\nexport type NWBType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getNWBParamsApi } from 'api/nwb/NWB'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { NWB_SLICE_NAME } from './NWBType'\n\nexport const getNWBParams = createAsyncThunk<ParamDTO, void>(\n  `${NWB_SLICE_NAME}/getNWBParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getNWBParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { getNWBParams } from './NWBAction'\nimport { NWBType, NWB_SLICE_NAME } from './NWBType'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\n\nconst initialState: NWBType = {\n  params: {},\n}\n\nexport const nwbSlice = createSlice({\n  name: NWB_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const targetNode = getChildParam(path, state.params)\n      if (targetNode != null) {\n        targetNode.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getNWBParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = nwbSlice.actions\n\nexport default nwbSlice.reducer\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport { fetchExperiment } from '../Experiments/ExperimentsActions'\nimport {\n  reproduceWorkflow,\n  importWorkflowConfig,\n} from 'store/slice/Workflow/WorkflowActions'\nimport {\n  deleteFlowNodes,\n  deleteFlowNodeById,\n} from '../FlowElement/FlowElementSlice'\n\ntype RightDrawer = {\n  open: boolean\n  mode: RIGHT_DRAWER_MODE_TYPE\n  currendNodeId: string | null\n}\n\nexport const RIGHT_DRAWER_MODE = {\n  NONE: 'none',\n  NWB: 'nwb',\n  PARAM_FORM: 'paramForm',\n  SNAKEMAKE: 'snakemake',\n} as const\n\nexport type RIGHT_DRAWER_MODE_TYPE =\n  typeof RIGHT_DRAWER_MODE[keyof typeof RIGHT_DRAWER_MODE]\n\nconst initialState: RightDrawer = {\n  open: false,\n  mode: RIGHT_DRAWER_MODE.NONE,\n  currendNodeId: null,\n}\nexport const rightDrawerSlice = createSlice({\n  name: 'rightDrawer',\n  initialState,\n  reducers: {\n    openRightDrawer: (state, action: PayloadAction<RIGHT_DRAWER_MODE_TYPE>) => {\n      state.open = true\n      state.mode = action.payload\n    },\n    closeRightDrawer: (state) => {\n      state.open = false\n      state.mode = RIGHT_DRAWER_MODE.NONE\n    },\n    toggleParamForm: (state, action: PayloadAction<string>) => {\n      if (\n        state.open &&\n        state.mode === RIGHT_DRAWER_MODE.PARAM_FORM &&\n        state.currendNodeId === action.payload\n      ) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n        state.currendNodeId = null\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.PARAM_FORM\n        state.currendNodeId = action.payload\n      }\n    },\n    toggleNwb: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.NWB) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.NWB\n      }\n      state.currendNodeId = null\n    },\n    toggleSnakemake: (state) => {\n      if (state.open && state.mode === RIGHT_DRAWER_MODE.SNAKEMAKE) {\n        state.open = false\n        state.mode = RIGHT_DRAWER_MODE.NONE\n      } else {\n        state.open = true\n        state.mode = RIGHT_DRAWER_MODE.SNAKEMAKE\n      }\n      state.currendNodeId = null\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteFlowNodes, (state, action) => {\n        if (\n          action.payload.findIndex((elm) => elm.id === state.currendNodeId) > 0\n        ) {\n          state.currendNodeId = null\n        }\n      })\n      .addCase(deleteFlowNodeById, (state, action) => {\n        if (action.payload === state.currendNodeId) {\n          state.currendNodeId = null\n        }\n      })\n\n      .addMatcher(\n        isAnyOf(\n          reproduceWorkflow.fulfilled,\n          importWorkflowConfig.fulfilled,\n          fetchExperiment.fulfilled,\n          fetchExperiment.rejected,\n        ),\n        () => initialState,\n      )\n  },\n})\n\nexport const {\n  toggleParamForm,\n  toggleNwb,\n  toggleSnakemake,\n  openRightDrawer,\n  closeRightDrawer,\n} = rightDrawerSlice.actions\n\nexport default rightDrawerSlice.reducer\n","import MuiAccordion, { AccordionProps } from '@mui/material/Accordion'\nimport { styled } from '@mui/material/styles'\n\nexport const Accordion = styled((props: AccordionProps) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n  border: '1px solid',\n  borderColor: theme.palette.divider,\n  boxShadow: 'none',\n  '&:not(:last-child)': {\n    borderBottom: 0,\n  },\n  '&:before': {\n    display: 'none',\n  },\n}))\n","import React, { useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport Switch from '@mui/material/Switch'\nimport TextField from '@mui/material/TextField'\nimport Box from '@mui/material/Box'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport Typography from '@mui/material/Typography'\n\nimport { isParamChild } from 'utils/param/ParamUtils'\nimport { ParamType } from 'utils/param/ParamType'\nimport { RootState } from 'store/store'\nimport { Accordion } from 'components/common/Accordion'\n\ntype ParamSelectorType = (paramKey: string) => (state: RootState) => ParamType\ntype ParamValueSelectorType = (path: string) => (state: RootState) => unknown\ntype ParamUpdateActionCreatorType = (\n  path: string,\n  newValue: unknown,\n) => AnyAction\n\nexport type CreateParamFormItemComponentProps = {\n  paramSelector: ParamSelectorType\n  paramValueSelector: ParamValueSelectorType\n  paramUpdateActionCreator: ParamUpdateActionCreatorType\n}\n\nexport function createParamFormItemComponent({\n  paramSelector,\n  paramValueSelector,\n  paramUpdateActionCreator,\n}: CreateParamFormItemComponentProps): React.FC<{ paramKey: string }> {\n  function useParamValueUpdate(\n    path: string,\n  ): [unknown, (newValue: unknown) => AnyAction] {\n    const value = useSelector(paramValueSelector(path))\n    const updateParamAction = (newValue: unknown) => {\n      return paramUpdateActionCreator(path, newValue)\n    }\n    return [value, updateParamAction]\n  }\n  const ParamItemForString = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    const isArray = useRef(Array.isArray(value))\n    const onChange = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(updateParamAction(newValue))\n    }\n\n    const onBlur = (\n      e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\n    ) => {\n      const newValue = e.target.value as string\n      dispatch(\n        updateParamAction(\n          newValue\n            .split(',')\n            .filter(Boolean)\n            .map((e) => Number(e)),\n        ),\n      )\n    }\n    return (\n      <TextField\n        value={value}\n        onChange={onChange}\n        multiline\n        onBlur={isArray ? onBlur : undefined}\n      />\n    )\n  })\n  const ParamItemForNumber = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue =\n          event.target.value === '' ? '' : Number(event.target.value)\n        if (typeof newValue === 'number') {\n          dispatch(updateParamAction(newValue))\n        }\n      }\n      return (\n        <TextField\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          value={value}\n          onChange={onChange}\n        />\n      )\n    } else {\n      return null\n    }\n  })\n  const ParamItemForBoolean = React.memo<ParamChildItemProps>(({ path }) => {\n    const dispatch = useDispatch()\n    const [value, updateParamAction] = useParamValueUpdate(path)\n    if (typeof value === 'boolean') {\n      const onChange = () => {\n        dispatch(updateParamAction(!value))\n      }\n      return <Switch checked={value} onChange={onChange} />\n    } else {\n      return null\n    }\n  })\n  const ParamItemForValueType = React.memo<ParamChildItemProps>(({ path }) => {\n    const [value] = useParamValueUpdate(path)\n    if (typeof value === 'number') {\n      return <ParamItemForNumber path={path} />\n    } else if (typeof value === 'string') {\n      return <ParamItemForString path={path} />\n    } else if (typeof value === 'boolean') {\n      return <ParamItemForBoolean path={path} />\n    } else {\n      return <ParamItemForString path={path} />\n    }\n  })\n  const ParamChildItem = React.memo<ParamChildItemProps & { name: string }>(\n    ({ path, name }) => {\n      return (\n        <Box\n          sx={{\n            display: 'flex',\n            marginTop: (theme) => theme.spacing(2),\n            marginBottom: (theme) => theme.spacing(2),\n            alignItems: 'center',\n            overflow: 'scroll',\n          }}\n        >\n          <Box\n            style={{ verticalAlign: 'middle' }}\n            sx={{\n              flexGrow: 1,\n              width: '50%',\n            }}\n          >\n            <Typography style={{ overflow: 'scroll' }}>{name}</Typography>\n          </Box>\n          <Box sx={{ width: '50%' }}>\n            <ParamItemForValueType path={path} />\n          </Box>\n        </Box>\n      )\n    },\n  )\n  const ParamItem = React.memo<ParamItemProps>(({ paramKey, param }) => {\n    if (isParamChild(param)) {\n      return <ParamChildItem path={param.path} name={paramKey} />\n    } else {\n      return (\n        <Accordion>\n          <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            {paramKey}\n          </AccordionSummary>\n          <AccordionDetails>\n            <div>\n              {Object.entries(param.children).map(([paramKey, param], i) => (\n                <ParamItem param={param} paramKey={paramKey} />\n              ))}\n            </div>\n          </AccordionDetails>\n        </Accordion>\n      )\n    }\n  })\n  return React.memo<{ paramKey: string }>(({ paramKey }) => {\n    const param = useSelector(paramSelector(paramKey)) // 一階層目\n    return <ParamItem paramKey={paramKey} param={param} />\n  })\n}\n\ntype ParamItemProps = {\n  paramKey: string\n  param: ParamType\n}\n\ntype ParamChildItemProps = {\n  path: string\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\nimport { updateParam } from 'store/slice/NWB/NWBSlice'\nimport { getNWBParams } from 'store/slice/NWB/NWBAction'\nimport { toggleNwb } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectNwbParam,\n  selectNwbParamsKeyList,\n  selectNwbParamsValue,\n} from 'store/slice/NWB/NWBSelectors'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const NWBSettingButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleNwb())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      NWB setting\n    </Button>\n  )\n})\n\nexport const NWBSettingContents = React.memo(() => {\n  const dispatch = useDispatch()\n\n  const paramKeyList = useSelector(selectNwbParamsKeyList, arrayEqualityFn)\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getNWBParams())\n    }\n  })\n\n  return (\n    <div className=\"nwbParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectNwbParam,\n    paramValueSelector: selectNwbParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\nimport { ParamDTO } from 'utils/param/ParamType'\n\nexport async function getSnakemakeParamsApi(): Promise<ParamDTO> {\n  const response = await axios.get(`${BASE_URL}/snakemake`)\n  return response.data\n}\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const SNAKEMAKE_SLICE_NAME = 'Snakemake'\n\nexport type SnakemakeType = {\n  params: ParamMap\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { getSnakemakeParamsApi } from 'api/snakemake/Snakemake'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nexport const getSnakemakeParams = createAsyncThunk<ParamDTO, void>(\n  `${SNAKEMAKE_SLICE_NAME}/getSnakemakeParams`,\n  async (_, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = getSnakemakeParamsApi()\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport { getSnakemakeParams } from './SnakemakeAction'\nimport { SnakemakeType, SNAKEMAKE_SLICE_NAME } from './SnakemakeType'\n\nconst initialState: SnakemakeType = {\n  params: {},\n}\n\nexport const SnakemakeSlice = createSlice({\n  name: SNAKEMAKE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { path, newValue } = action.payload\n      const target = getChildParam(path, state.params)\n      if (target != null) {\n        target.value = newValue\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getSnakemakeParams.fulfilled, (state, action) => {\n      state.params = convertToParamMap(action.payload)\n    })\n  },\n})\n\nexport const { updateParam } = SnakemakeSlice.actions\n\nexport default SnakemakeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Button from '@mui/material/Button'\nimport TuneIcon from '@mui/icons-material/Tune'\n\nimport { updateParam } from 'store/slice/Snakemake/SnakemakeSlice'\nimport { getSnakemakeParams } from 'store/slice/Snakemake/SnakemakeAction'\nimport { toggleSnakemake } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport {\n  selectSnakemakeParam,\n  selectSnakemakeParamsKeyList,\n  selectSnakemakeParamsValue,\n} from 'store/slice/Snakemake/SnakemakeSelectors'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\n\nexport const SnakemakeButton = React.memo(() => {\n  const dispatch = useDispatch()\n  const handleClick = () => {\n    dispatch(toggleSnakemake())\n  }\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={handleClick}\n      sx={{\n        margin: (theme) => theme.spacing(1),\n      }}\n      endIcon={<TuneIcon />}\n    >\n      Snakemake\n    </Button>\n  )\n})\n\nexport const SnakemakeContents = React.memo(() => {\n  const dispatch = useDispatch()\n  const paramKeyList = useSelector(\n    selectSnakemakeParamsKeyList,\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (paramKeyList.length === 0) {\n      dispatch(getSnakemakeParams())\n    }\n  })\n  return (\n    <div className=\"SnakemakeParam\" style={{ margin: 4 }}>\n      {paramKeyList.map((paramKey, i) => (\n        <ParamItem key={i} paramKey={paramKey} />\n      ))}\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const Component = createParamFormItemComponent({\n    paramSelector: selectSnakemakeParam,\n    paramValueSelector: selectSnakemakeParamsValue,\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Button from '@mui/material/Button'\nimport ButtonGroup from '@mui/material/ButtonGroup'\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'\nimport CloseIcon from '@mui/icons-material/Close'\nimport ClickAwayListener from '@mui/material/ClickAwayListener'\nimport Grow from '@mui/material/Grow'\nimport Paper from '@mui/material/Paper'\nimport Popper from '@mui/material/Popper'\nimport MenuItem from '@mui/material/MenuItem'\nimport MenuList from '@mui/material/MenuList'\nimport TextField from '@mui/material/TextField'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\n\nimport { useSnackbar } from 'notistack'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport {\n  RUN_BTN_LABELS,\n  RUN_BTN_OPTIONS,\n  RUN_BTN_TYPE,\n} from 'store/slice/Pipeline/PipelineType'\nimport {\n  selectPipelineIsStartedSuccess,\n  selectPipelineRunBtn,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { setRunBtnOption } from 'store/slice/Pipeline/PipelineSlice'\n\nexport const RunButtons = React.memo<UseRunPipelineReturnType>((props) => {\n  const {\n    uid,\n    runDisabled,\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    handleCancelPipeline,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n  } = props\n\n  const dispatch = useDispatch()\n\n  const runBtnOption = useSelector(selectPipelineRunBtn)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n\n  const [dialogOpen, setDialogOpen] = React.useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n  const handleClick = () => {\n    let errorMessage: string | null = null\n    if (algorithmNodeNotExist) {\n      errorMessage = 'please add some algorithm nodes to the flowchart'\n    }\n    if (filePathIsUndefined) {\n      errorMessage = 'please select input file'\n    }\n    if (errorMessage != null) {\n      enqueueSnackbar(errorMessage, {\n        variant: 'error',\n      })\n    } else {\n      if (runBtnOption === RUN_BTN_OPTIONS.RUN_NEW) {\n        setDialogOpen(true)\n      } else {\n        handleRunPipelineByUid()\n      }\n    }\n  }\n  const onClickDialogRun = (name: string) => {\n    handleRunPipeline(name)\n    setDialogOpen(false)\n  }\n  const onClickCancel = () => {\n    handleCancelPipeline()\n  }\n  const [menuOpen, setMenuOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLDivElement>(null)\n\n  const handleMenuItemClick = (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    option: RUN_BTN_TYPE,\n  ) => {\n    dispatch(setRunBtnOption({ runBtnOption: option }))\n    setMenuOpen(false)\n  }\n  const handleToggle = () => {\n    setMenuOpen((prevOpen) => !prevOpen)\n  }\n  const handleClose = (event: Event) => {\n    if (\n      anchorRef.current &&\n      anchorRef.current.contains(event.target as HTMLElement)\n    ) {\n      return\n    }\n    setMenuOpen(false)\n  }\n  const uidExists = uid != null\n  return (\n    <>\n      <ButtonGroup\n        sx={{\n          margin: 1,\n        }}\n        variant=\"contained\"\n        ref={anchorRef}\n        disabled={runDisabled}\n      >\n        <Button onClick={handleClick}>{RUN_BTN_LABELS[runBtnOption]}</Button>\n        <Button size=\"small\" onClick={handleToggle}>\n          <ArrowDropDownIcon />\n        </Button>\n      </ButtonGroup>\n      <Popper\n        open={menuOpen}\n        anchorEl={anchorRef.current}\n        role={undefined}\n        transition\n        disablePortal\n      >\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin:\n                placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList>\n                  {Object.values(RUN_BTN_OPTIONS).map((option) => (\n                    <MenuItem\n                      key={option}\n                      disabled={\n                        !uidExists && option === RUN_BTN_OPTIONS.RUN_ALREADY\n                      }\n                      selected={option === runBtnOption}\n                      onClick={(event) => handleMenuItemClick(event, option)}\n                    >\n                      {RUN_BTN_LABELS[option]}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n      <Button\n        disabled={!isStartedSuccess}\n        variant=\"outlined\"\n        endIcon={<CloseIcon />}\n        onClick={onClickCancel}\n        sx={{\n          margin: 1,\n          marginRight: 4,\n        }}\n      >\n        Cancel\n      </Button>\n      <RunDialog\n        open={dialogOpen}\n        handleRun={onClickDialogRun}\n        handleClose={() => setDialogOpen(false)}\n      />\n    </>\n  )\n})\n\nconst RunDialog = React.memo<{\n  open: boolean\n  handleRun: (name: string) => void\n  handleClose: () => void\n}>(({ open, handleClose, handleRun }) => {\n  const [name, setName] = React.useState('New flow')\n  const [error, setError] = React.useState<string | null>(null)\n  const onClickRun = () => {\n    if (name !== '') {\n      handleRun(name)\n    } else {\n      setError('name is empty')\n    }\n  }\n  const onChangeName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    if (event.target.value !== '') {\n      setError(null)\n    }\n  }\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Name and run flowchart</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"name\"\n          autoFocus\n          margin=\"dense\"\n          fullWidth\n          variant=\"standard\"\n          onChange={onChangeName}\n          error={error != null}\n          helperText={error}\n          value={name}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"inherit\" variant=\"outlined\">\n          Cancel\n        </Button>\n        <Button onClick={onClickRun} color=\"primary\" variant=\"outlined\">\n          Run\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n})\n","import { UploadFile } from '@mui/icons-material'\nimport { Button } from '@mui/material'\nimport { useSnackbar } from 'notistack'\nimport React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { reset } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { importWorkflowConfig } from 'store/slice/Workflow/WorkflowActions'\nimport { AppDispatch } from 'store/store'\n\nexport const ImportWorkflowConfigButton = React.memo(() => {\n  const dispatch: AppDispatch = useDispatch()\n  const inputRef = React.useRef<HTMLInputElement>(null)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const onClick = () => {\n    inputRef.current?.click()\n  }\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault()\n    if (event.target.files != null && event.target.files[0] != null) {\n      const file = event.target.files[0]\n      const formData = new FormData()\n      formData.append('file', file)\n      dispatch(importWorkflowConfig({ formData }))\n        .unwrap()\n        .then(() => {\n          enqueueSnackbar('Import success', { variant: 'success' })\n          dispatch(reset())\n        })\n        .catch(() => {\n          enqueueSnackbar('Invalid yaml file', { variant: 'error' })\n        })\n    }\n  }\n\n  return (\n    <Button\n      variant=\"outlined\"\n      onClick={onClick}\n      sx={{ margin: (theme) => theme.spacing(1) }}\n      endIcon={<UploadFile />}\n    >\n      Import\n      <input\n        hidden\n        ref={inputRef}\n        type=\"file\"\n        accept=\".yaml,.yml\"\n        onChange={onChange}\n      />\n    </Button>\n  )\n})\n","import React from 'react'\nimport Box from '@mui/material/Box'\n\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { NWBSettingButton } from './FlowChart/NWB'\nimport { SnakemakeButton } from './FlowChart/Snakemake'\nimport { RunButtons } from './RunButtons'\nimport { Button } from '@mui/material'\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos'\nimport { useNavigate } from 'react-router-dom'\nimport { IS_STANDALONE } from 'const/Mode'\nimport { ImportWorkflowConfigButton } from './FlowChart/ImportWorkflowConfigButton'\n\nexport const ToolBar = React.memo<UseRunPipelineReturnType>((props) => {\n  const navigate = useNavigate()\n  return (\n    <Box\n      style={{\n        position: 'absolute',\n        float: 'right',\n        textAlign: 'right',\n        top: -7,\n        right: 10,\n        zIndex: 4,\n        textTransform: 'none',\n        fontSize: '1rem',\n      }}\n    >\n      { !IS_STANDALONE &&\n        (\n          <Button onClick={() => navigate('/console/workspaces')}>\n            <ArrowBackIosIcon />\n            Workspaces\n          </Button>\n        )\n      }\n      <ImportWorkflowConfigButton />\n      <SnakemakeButton />\n      <NWBSettingButton />\n      <RunButtons {...props} />\n    </Box>\n  )\n})\n","import { useSelector } from 'react-redux'\nimport { selectHandleTypeColor } from 'store/slice/HandleTypeColor/HandleTypeColorSelectors'\n\nexport function useHandleColor(type: string) {\n  const color = useSelector(selectHandleTypeColor(type))\n  return color\n}\n","import { RootState } from '../../store'\n\nexport const selectHandleTypeColor = (key: string) => (state: RootState) => {\n  if (state.handleColor.colorMap[key] != null) {\n    return state.handleColor.colorMap[key]\n  } else {\n    return undefined\n  }\n}\n","import React from 'react'\nimport LinearProgress, {\n  LinearProgressProps,\n} from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\n\nexport const LinearProgressWithLabel = React.memo<\n  LinearProgressProps & { value: number }\n>((props) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box width=\"100%\" mr={1}>\n        <LinearProgress variant=\"determinate\" {...props} />\n      </Box>\n      <Box minWidth={35}>\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  )\n})\n","import { FileUploaderType } from './FileUploaderType'\n\nexport const inistialUploaderState: FileUploaderType = {\n  path: undefined,\n  fileName: undefined,\n  isUninitialized: true,\n  pending: false,\n  fulfilled: false,\n  uploadingProgress: undefined,\n  error: undefined,\n}\n","import { RootState } from 'store/store'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nexport const selectFileUploader = (id: string) => (state: RootState) => {\n  if (Object.keys(state.fileUploader).includes(id)) {\n    return state.fileUploader[id]\n  } else {\n    return inistialUploaderState\n  }\n}\n\nexport const selectUploadFilePath = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).path\n\nexport const selectUploadFileName = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fileName\n\nexport const selectFileUploadIsUninitialized =\n  (id: string) => (state: RootState) =>\n    selectFileUploader(id)(state).isUninitialized\n\nexport const selectFileUploadIsPending = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).pending\n\nexport const selectFileUploadIsFulfilled = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).fulfilled\n\nexport const selectFileUploadProgress = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).uploadingProgress\n\nexport const selectFileUploadError = (id: string) => (state: RootState) =>\n  selectFileUploader(id)(state).error\n","import { nanoid } from '@reduxjs/toolkit'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { uploadFile } from './FileUploaderActions'\nimport {\n  selectFileUploadIsPending,\n  selectUploadFilePath,\n  selectFileUploadIsFulfilled,\n  selectFileUploadProgress,\n  selectFileUploadIsUninitialized,\n  selectFileUploadError,\n} from './FileUploaderSelectors'\nimport { FILE_TYPE } from '../InputNode/InputNodeType'\nimport { selectCurrentWorkspaceId } from '../Workspace/WorkspaceSelector'\n\ntype UseFileUploaderProps = {\n  fileType?: FILE_TYPE\n  nodeId?: string\n}\n\nexport function useFileUploader({ fileType, nodeId }: UseFileUploaderProps) {\n  const dispatch = useDispatch()\n  const id = React.useRef(nanoid())\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const onUploadFile = React.useCallback(\n    (formData: FormData, fileName: string) => {\n      if (workspaceId) {\n        dispatch(\n          uploadFile({\n            workspaceId,\n            requestId: id.current,\n            nodeId,\n            fileName,\n            formData,\n            fileType,\n          }),\n        )\n      } else {\n        throw new Error('workspaceId is undefined')\n      }\n    },\n    [dispatch, workspaceId, fileType, nodeId],\n  )\n  const uninitialized = useSelector(selectFileUploadIsUninitialized(id.current))\n  const filePath = useSelector(selectUploadFilePath(id.current))\n  const pending = useSelector(selectFileUploadIsPending(id.current))\n  const fulfilled = useSelector(selectFileUploadIsFulfilled(id.current))\n  const progress = useSelector(selectFileUploadProgress(id.current))\n  const error = useSelector(selectFileUploadError(id.current))\n  return {\n    filePath,\n    uninitialized,\n    pending,\n    fulfilled,\n    progress,\n    error,\n    onUploadFile,\n  }\n}\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { createContext } from 'react'\n\nexport declare type OpenDialogValue = {\n  filePath: string | string[]\n  open: boolean\n  fileTreeType?: FILE_TREE_TYPE\n  multiSelect: boolean\n  onSelectFile: (path: string | string[]) => void\n}\n\nexport declare type ErrorDialogValue = {\n  anchorElRef: { current: Element | null }\n  message: string\n}\n\nexport const DialogContext = createContext<{\n  onOpen: (nodeId: string) => void\n  onOpenDialogFile: (value: OpenDialogValue) => void\n  onMessageError: (value: ErrorDialogValue) => void\n}>({\n  onOpen: () => null,\n  onOpenDialogFile: () => null,\n  onMessageError: () => null,\n})\n","import React, { useContext } from 'react'\nimport { Button, Typography } from '@mui/material'\nimport ButtonGroup from '@mui/material/ButtonGroup'\n\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { LinearProgressWithLabel } from './LinerProgressWithLabel'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { getLabelByPath } from 'store/slice/FlowElement/FlowElementUtils'\nimport { DialogContext } from 'components/Workspace/FlowChart/DialogContext'\n\nexport const FileSelect = React.memo<{\n  multiSelect?: boolean\n  filePath: string | string[]\n  fileType: FILE_TYPE\n  nodeId?: string\n  onChangeFilePath: (path: string | string[]) => void\n}>(({ multiSelect = false, filePath, nodeId, fileType, onChangeFilePath }) => {\n  const {\n    // filePath: uploadedFilePath,\n    onUploadFile,\n    pending,\n    uninitialized,\n    progress,\n    error,\n  } = useFileUploader({ fileType, nodeId })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n  return (\n    <>\n      {!uninitialized && pending && progress != null && (\n        <div style={{ marginLeft: 2, marginRight: 2 }}>\n          <LinearProgressWithLabel value={progress} />\n        </div>\n      )}\n      <FileSelectImple\n        multiSelect={multiSelect}\n        filePath={filePath}\n        onSelectFile={onChangeFilePath}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={fileType}\n        selectButtonLabel={`Select ${fileType}`}\n      />\n      {error != null && (\n        <Typography variant=\"caption\" color=\"error\">\n          {error}\n        </Typography>\n      )}\n    </>\n  )\n})\n\ntype FileSelectImpleProps = {\n  multiSelect?: boolean\n  filePath: string | string[]\n  onUploadFile: (formData: FormData, fileName: string) => void\n  onSelectFile: (path: string | string[]) => void\n  fileTreeType?: FILE_TREE_TYPE\n  selectButtonLabel?: string\n  uploadButtonLabel?: string\n}\n\nexport const FileSelectImple = React.memo<FileSelectImpleProps>(\n  ({\n    multiSelect = false,\n    filePath,\n    onSelectFile,\n    onUploadFile,\n    fileTreeType,\n    selectButtonLabel,\n    uploadButtonLabel,\n  }) => {\n    const { onOpenDialogFile } = useContext(DialogContext)\n\n    const onFileInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      event.preventDefault()\n      if (event.target.files != null && event.target.files[0] != null) {\n        const file = event.target.files[0]\n        const formData = new FormData()\n        formData.append('file', file)\n        const fileName = file.name\n        onUploadFile(formData, fileName)\n      }\n    }\n    const inputRef = React.useRef<HTMLInputElement>(null)\n    const onClick = () => {\n      if (inputRef.current != null) {\n        inputRef.current.click()\n      }\n    }\n    const accept = getFileInputAccept(fileTreeType)\n    const fileName = getLabelByPath(filePath)\n    return (\n      <div\n        style={{\n          padding: 5,\n        }}\n      >\n        <ButtonGroup size=\"small\" style={{ marginRight: 4 }}>\n          <Button\n            variant=\"outlined\"\n            onClick={() => {\n              onOpenDialogFile({\n                open: true,\n                multiSelect,\n                filePath,\n                fileTreeType,\n                onSelectFile,\n              })\n            }}\n          >\n            {!!selectButtonLabel ? selectButtonLabel : 'Select File'}\n          </Button>\n          <Button onClick={onClick} variant=\"outlined\">\n            {!!uploadButtonLabel ? uploadButtonLabel : 'Load'}\n          </Button>\n        </ButtonGroup>\n        <div>\n          <input\n            ref={inputRef}\n            type=\"file\"\n            onChange={onFileInputChange}\n            accept={accept}\n            style={{\n              visibility: 'hidden',\n              width: 0,\n              height: 0,\n            }}\n          />\n          <Typography className=\"selectFilePath\" variant=\"caption\">\n            {!!fileName ? fileName : 'No file is selected.'}\n          </Typography>\n        </div>\n      </div>\n    )\n  },\n)\n\nfunction getFileInputAccept(fileType: FILE_TREE_TYPE | undefined) {\n  switch (fileType) {\n    case FILE_TREE_TYPE_SET.IMAGE:\n      return '.tif,.tiff'\n    case FILE_TREE_TYPE_SET.CSV:\n      return '.csv'\n    case FILE_TREE_TYPE_SET.HDF5:\n      return '.hdf5,.nwb'\n    default:\n      return undefined\n  }\n}\n","import { Connection } from 'react-flow-renderer'\n\nexport function toHandleId(nodeId: string, name: string, type: string) {\n  return `${nodeId}--${name}--${type}`\n}\n\nexport function getHandleType(handleId: string) {\n  return handleId.split('--')[2]\n}\n\nexport function isValidConnection(connection: Connection) {\n  if (connection.sourceHandle != null && connection.targetHandle != null) {\n    return (\n      getHandleType(connection.sourceHandle) ===\n      getHandleType(connection.targetHandle)\n    )\n  } else {\n    return true\n  }\n}\n","import React, { CSSProperties } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport {\n  selectImageInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { FileSelect } from './FileSelect'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\n// Connection部分のレイアウト\nconst sourceHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  top: 15,\n  border: '1px solid',\n  // borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const ImageFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <ImageFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst ImageFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected: elementSelected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectImageInputNodeSelectedFilePath(nodeId),\n      (a, b) => (a != null && b != null ? arrayEqualityFn(a, b) : a === b),\n    )\n    const onChangeFilePath = (path: string[]) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n\n    const theme = useTheme()\n    const returnType = 'ImageData'\n    const imageColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowNodeById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '250px',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          multiSelect\n          onChangeFilePath={(path) => {\n            if (Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.IMAGE}\n          filePath={filePath ?? []}\n        />\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'image', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: imageColor,\n          }}\n          isValidConnection={isValidConnection}\n        />\n      </div>\n    )\n  },\n)\n","import React, { CSSProperties, useContext } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport {\n  alpha,\n  Typography,\n  useTheme,\n  Tooltip,\n  IconButton,\n  Button,\n  LinearProgress,\n  ButtonGroup,\n} from '@mui/material'\nimport CheckCircleRoundedIcon from '@mui/icons-material/CheckCircleRounded'\nimport ErrorIcon from '@mui/icons-material/Error'\n\nimport { AlgorithmInfo } from 'api/algolist/AlgoList'\nimport {\n  selectAlgoArgs,\n  selectAlgoReturns,\n} from 'store/slice/AlgorithmList/AlgorithmListSelectors'\nimport { selectAlgorithmNodeDefined } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { NodeData } from 'store/slice/FlowElement/FlowElementType'\n\nimport { useHandleColor } from './HandleColorHook'\nimport { toHandleId, isValidConnection } from './FlowChartUtils'\nimport { toggleParamForm } from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultMessage,\n  selectPipelineNodeResultStatus,\n  selectPipelineStatus,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { RootState } from 'store/store'\nimport {\n  NODE_RESULT_STATUS,\n  RUN_STATUS,\n} from 'store/slice/Pipeline/PipelineType'\nimport { DialogContext } from 'components/Workspace/FlowChart/DialogContext'\n\nconst leftHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\nconst rightHandleStyle: CSSProperties = {\n  width: '4%',\n  height: '13%',\n  border: '1px solid',\n  borderRadius: 0,\n}\n\nexport const AlgorithmNode = React.memo<NodeProps<NodeData>>((element) => {\n  const defined = useSelector(selectAlgorithmNodeDefined(element.id))\n  if (defined) {\n    return <AlgorithmNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst AlgorithmNodeImple = React.memo<NodeProps<NodeData>>(\n  ({ id: nodeId, selected: elementSelected, isConnectable, data }) => {\n    const { onOpen } = useContext(DialogContext)\n    const theme = useTheme()\n    const dispatch = useDispatch()\n\n    const onClickParamButton = () => {\n      dispatch(toggleParamForm(nodeId))\n    }\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowNodeById(nodeId))\n    }\n\n    const onClickOutputButton = () => {\n      onOpen(nodeId)\n    }\n\n    const status = useStatus(nodeId)\n\n    return (\n      <div\n        tabIndex={0}\n        style={{\n          width: '100%',\n          height: '110%',\n          background: elementSelected\n            ? alpha(theme.palette.primary.light, 0.15)\n            : undefined,\n          border: '1px solid',\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <AlgoName nodeId={nodeId} data={data} />\n        <ButtonGroup sx={{ mx: 1 }}>\n          <Button size=\"small\" onClick={onClickParamButton}>\n            Param\n          </Button>\n          <Button\n            size=\"small\"\n            onClick={onClickOutputButton}\n            disabled={status !== NODE_RESULT_STATUS.SUCCESS}\n          >\n            Output\n          </Button>\n        </ButtonGroup>\n        <AlgoArgs nodeId={nodeId} />\n        <AlgoReturns nodeId={nodeId} isConnectable={isConnectable} />\n        <Message nodeId={nodeId} />\n      </div>\n    )\n  },\n)\n\nconst AlgoName = React.memo<{\n  nodeId: string\n  data: NodeData\n}>(({ nodeId, data }) => {\n  const theme = useTheme()\n  const status = useStatus(nodeId)\n  const pipelineStatus = useSelector(selectPipelineStatus)\n  return (\n    <div\n      style={{\n        padding: 8,\n        paddingLeft: 8,\n        width: '100%',\n      }}\n      className=\"algoName\"\n    >\n      {pipelineStatus === RUN_STATUS.START_SUCCESS &&\n        status === NODE_RESULT_STATUS.PENDING && <LinearProgress />}\n      <Typography\n        style={{\n          textAlign: 'left',\n          color:\n            status === NODE_RESULT_STATUS.ERROR\n              ? theme.palette.error.main\n              : undefined,\n        }}\n      >\n        {data.label}\n      </Typography>\n    </div>\n  )\n})\n\nconst AlgoArgs = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const algoArgs = useSelector(selectAlgoArgs(nodeId), algoInfoListEqualtyFn)\n\n  return (\n    <>\n      {algoArgs != null\n        ? algoArgs\n            .filter((info) => info.type !== 'params')\n            .map((algoInfo, i) => {\n              return <ArgHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n            })\n        : null}\n    </>\n  )\n})\n\nconst AlgoReturns = React.memo<{\n  nodeId: string\n  isConnectable: boolean\n}>(({ nodeId, isConnectable }) => {\n  const algoReturns = useSelector(\n    selectAlgoReturns(nodeId),\n    algoInfoListEqualtyFn,\n  )\n  return (\n    <>\n      {algoReturns != null ? (\n        algoReturns?.map((algoInfo, i) => {\n          return <ReturnHandle algoInfo={algoInfo} i={i} nodeId={nodeId} />\n        })\n      ) : (\n        // algoReturns.lengthが0の場合の応急処置\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={`${nodeId}`}\n          style={{\n            ...rightHandleStyle,\n            top: 15,\n          }}\n          isConnectable={isConnectable}\n        />\n      )}\n    </>\n  )\n})\n\ntype HandleProps = {\n  algoInfo: AlgorithmInfo\n  nodeId: string\n  i: number\n}\n\nfunction hexToRgb(hex: string | undefined, isNone: boolean | undefined) {\n  if (hex !== undefined) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n    if (result !== null) {\n      if (isNone) {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 0.55)`\n      } else {\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(\n          result[2],\n          16,\n        )}, ${parseInt(result[3], 16)}, 1)`\n      }\n    } else {\n      return undefined\n    }\n  } else {\n    return undefined\n  }\n}\n\nconst ArgHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type, isNone }, nodeId, i }) => {\n    const hex_color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    const rgb_color = hexToRgb(hex_color, isNone)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"target\"\n        position={Position.Left}\n        id={id}\n        style={{\n          ...leftHandleStyle,\n          background: rgb_color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"left-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst ReturnHandle = React.memo<HandleProps>(\n  ({ algoInfo: { name, type }, nodeId, i }) => {\n    const color = useHandleColor(type)\n    const id = toHandleId(nodeId, name, type)\n    const [isHover, setHover] = React.useState(false)\n    return (\n      <Handle\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n        key={i.toFixed()}\n        type=\"source\"\n        position={Position.Right}\n        id={id}\n        style={{\n          ...rightHandleStyle,\n          background: color,\n          top: i * 25 + 15,\n        }}\n        isValidConnection={isValidConnection}\n      >\n        <Tooltip\n          title={\n            <>\n              <Typography color=\"inherit\">name: {name}</Typography>\n              <Typography color=\"inherit\">type: {type}</Typography>\n            </>\n          }\n          open={isHover}\n          placement=\"right-end\"\n          arrow\n        >\n          <div />\n        </Tooltip>\n      </Handle>\n    )\n  },\n)\n\nconst Message = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const status = useStatus(nodeId)\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const errorMsg = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultMessage(nodeId)(state) ?? null\n      : null,\n  )\n\n  const anchorElRef = React.useRef<HTMLButtonElement | null>(null)\n  const theme = useTheme()\n  const { onMessageError } = useContext(DialogContext)\n\n  if (status === NODE_RESULT_STATUS.ERROR) {\n    return (\n      <IconButton\n        ref={anchorElRef}\n        onClick={() => {\n          onMessageError({ anchorElRef, message: errorMsg as string })\n        }}\n        size=\"small\"\n        style={{ color: theme.palette.error.main, float: 'right' }}\n      >\n        <ErrorIcon />\n      </IconButton>\n    )\n  } else if (status === NODE_RESULT_STATUS.SUCCESS) {\n    return <CheckCircleRoundedIcon color=\"success\" sx={{ float: 'right' }} />\n  } else {\n    return null\n  }\n})\n\nfunction algoInfoListEqualtyFn(\n  a: AlgorithmInfo[] | undefined,\n  b: AlgorithmInfo[] | undefined,\n) {\n  if (a != null && b != null) {\n    return (\n      a === b ||\n      (a.length === b.length &&\n        a.every((v, i) => v.type === b[i].type && v.name === b[i].name))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction useStatus(nodeId: string) {\n  const latestUid = useSelector(selectPipelineLatestUid)\n  const status = useSelector((state: RootState) =>\n    latestUid != null\n      ? selectPipelineNodeResultStatus(nodeId)(state)\n      : 'uninitialized',\n  )\n  return status\n}\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\nimport { isInputNodePostData } from 'api/run/RunUtils'\nimport { INITIAL_IMAGE_ELEMENT_ID } from 'const/flowchart'\nimport { fetchExperiment } from '../Experiments/ExperimentsActions'\nimport {\n  reproduceWorkflow,\n  importWorkflowConfig,\n} from 'store/slice/Workflow/WorkflowActions'\nimport { uploadFile } from '../FileUploader/FileUploaderActions'\nimport { addInputNode } from '../FlowElement/FlowElementActions'\nimport {\n  deleteFlowNodes,\n  deleteFlowNodeById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { setInputNodeFilePath } from './InputNodeActions'\nimport {\n  CsvInputParamType,\n  FILE_TYPE_SET,\n  InputNode,\n  INPUT_NODE_SLICE_NAME,\n} from './InputNodeType'\nimport { isCsvInputNode, isHDF5InputNode } from './InputNodeUtils'\n\nconst initialState: InputNode = {\n  [INITIAL_IMAGE_ELEMENT_ID]: {\n    fileType: FILE_TYPE_SET.IMAGE,\n    param: {},\n  },\n}\n\nexport const inputNodeSlice = createSlice({\n  name: INPUT_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    deleteInputNode(state, action: PayloadAction<string>) {\n      delete state[action.payload]\n    },\n    setCsvInputNodeParam(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        param: CsvInputParamType\n      }>,\n    ) {\n      const { nodeId, param } = action.payload\n      const inputNode = state[nodeId]\n      if (isCsvInputNode(inputNode)) {\n        inputNode.param = param\n      }\n    },\n    setInputNodeHDF5Path(\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n      }>,\n    ) {\n      const { nodeId, path } = action.payload\n      const item = state[nodeId]\n      if (isHDF5InputNode(item)) {\n        item.hdf5Path = path\n      }\n    },\n  },\n  extraReducers: (builder) =>\n    builder\n      .addCase(setInputNodeFilePath, (state, action) => {\n        const { nodeId, filePath } = action.payload\n        const targetNode = state[nodeId]\n        targetNode.selectedFilePath = filePath\n        if (isHDF5InputNode(targetNode)) {\n          targetNode.hdf5Path = undefined\n        }\n      })\n      .addCase(addInputNode, (state, action) => {\n        const { node, fileType } = action.payload\n        if (node.data?.type === NODE_TYPE_SET.INPUT) {\n          switch (fileType) {\n            case FILE_TYPE_SET.CSV:\n              state[node.id] = {\n                fileType,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.IMAGE:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.HDF5:\n              state[node.id] = {\n                fileType,\n                param: {},\n              }\n              break\n            case FILE_TYPE_SET.FLUO:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n            case FILE_TYPE_SET.BEHAVIOR:\n              state[node.id] = {\n                fileType: FILE_TYPE_SET.CSV,\n                param: {\n                  setHeader: null,\n                  setIndex: false,\n                  transpose: false,\n                },\n              }\n              break\n          }\n        }\n      })\n      .addCase(deleteFlowNodes, (state, action) => {\n        action.payload.forEach((node) => {\n          if (node.data?.type === NODE_TYPE_SET.INPUT) {\n            delete state[node.id]\n          }\n        })\n      })\n      .addCase(deleteFlowNodeById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        if (nodeId != null) {\n          const { resultPath } = action.payload\n          const target = state[nodeId]\n          if (target.fileType === FILE_TYPE_SET.IMAGE) {\n            target.selectedFilePath = [resultPath]\n          } else {\n            target.selectedFilePath = resultPath\n          }\n        }\n      })\n      .addCase(fetchExperiment.rejected, () => initialState)\n      .addCase(importWorkflowConfig.fulfilled, (_, action) => {\n        const newState: InputNode = {}\n        Object.values(action.payload.nodeDict)\n          .filter(isInputNodePostData)\n          .forEach((node) => {\n            if (node.data != null) {\n              if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.IMAGE,\n                  param: {},\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.CSV,\n                  param: node.data.param as CsvInputParamType,\n                }\n              } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                newState[node.id] = {\n                  fileType: FILE_TYPE_SET.HDF5,\n                  param: {},\n                }\n              }\n            }\n          })\n        return newState\n      })\n      .addMatcher(\n        isAnyOf(reproduceWorkflow.fulfilled, fetchExperiment.fulfilled),\n        (_, action) => {\n          const newState: InputNode = {}\n          Object.values(action.payload.nodeDict)\n            .filter(isInputNodePostData)\n            .forEach((node) => {\n              if (node.data != null) {\n                if (node.data.fileType === FILE_TYPE_SET.IMAGE) {\n                  newState[node.id] = {\n                    fileType: FILE_TYPE_SET.IMAGE,\n                    selectedFilePath: node.data.path as string[],\n                    param: {},\n                  }\n                } else if (node.data.fileType === FILE_TYPE_SET.CSV) {\n                  newState[node.id] = {\n                    fileType: FILE_TYPE_SET.CSV,\n                    selectedFilePath: node.data.path as string,\n                    param: node.data.param as CsvInputParamType,\n                  }\n                } else if (node.data.fileType === FILE_TYPE_SET.HDF5) {\n                  newState[node.id] = {\n                    fileType: FILE_TYPE_SET.HDF5,\n                    hdf5Path: node.data.hdf5Path,\n                    selectedFilePath: node.data.path as string,\n                    param: {},\n                  }\n                }\n              }\n            })\n          return newState\n        },\n      ),\n})\n\nexport const { setCsvInputNodeParam, setInputNodeHDF5Path } =\n  inputNodeSlice.actions\n\nexport default inputNodeSlice.reducer\n","import React from 'react'\nimport { DATA_TYPE } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const DisplayDataContext = React.createContext<{\n  nodeId: string | null\n  filePath: string\n  dataType: DATA_TYPE\n  itemId: number\n}>({ nodeId: '', filePath: '', dataType: 'csv', itemId: NaN })\n","import React from 'react'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectCsvData,\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { CsvData } from 'api/outputs/Outputs'\nimport { DataGrid, GridColDef } from '@mui/x-data-grid'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const CsvPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (workspaceId && !isInitialized) {\n      dispatch(getCsvData({ path, workspaceId }))\n    }\n  }, [dispatch, isInitialized, path, workspaceId])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <CsvPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst CsvPlotImple = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  return (\n    <PresentationalCsvPlot\n      path={path}\n      transpose={transpose}\n      setHeader={setHeader}\n      setIndex={setIndex}\n    />\n  )\n})\n\n/**\n * CsvFileNodeの設定時に表示するプレビューでも使用することを想定\n *\n * DisplayDataContextに依存しない\n */\nexport const PresentationalCsvPlot = React.memo<{\n  path: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ path, transpose, setIndex, setHeader }) => {\n  const data = useSelector(\n    selectCsvData(path),\n    (a: CsvData | undefined, b: CsvData | undefined) => {\n      if (a != null && b != null) {\n        return twoDimarrayEqualityFn(a, b)\n      } else {\n        return a === undefined && b === undefined\n      }\n    },\n  )\n\n  const csvData = React.useMemo(() => {\n    if (transpose) {\n      return data[0].map((col, i) => data.map((row) => row[i]))\n    }\n    return data\n  }, [data, transpose])\n\n  const header: GridColDef[] = React.useMemo(() => {\n    const headerData = () => {\n      if (setHeader === null) {\n        return csvData[0]\n      } else {\n        if (setHeader >= csvData.length) {\n          return csvData[csvData.length - 1]\n        } else {\n          return csvData[setHeader]\n        }\n      }\n    }\n\n    if (setIndex) {\n      return [\n        { field: 'col0', headerName: 'index', width: 150 },\n        ...headerData().map((value, idx) => {\n          return {\n            field: `col${idx + 1}`,\n            headerName: `${setHeader === null ? idx : value}`,\n            width: 150,\n          }\n        }),\n      ]\n    } else {\n      return headerData().map((value, idx) => {\n        return {\n          field: `col${idx + 1}`,\n          headerName: `${setHeader === null ? idx : value}`,\n          width: 150,\n        }\n      })\n    }\n  }, [csvData, setHeader, setIndex])\n  const rows = csvData\n    .map((row, row_id) => {\n      let rowObj = Object.fromEntries(\n        [row_id, ...row].map((value, index) => {\n          return [`col${index}`, value]\n        }),\n      )\n      rowObj['id'] = row_id\n      return rowObj\n    })\n    .filter(\n      (value, idx) =>\n        setHeader === null || (setHeader !== null && idx > setHeader),\n    )\n\n  return (\n    <div style={{ height: 300, width: '100%' }}>\n      <DataGrid rows={rows} columns={header} />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\nimport {\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogActions,\n  Switch,\n  FormControlLabel,\n  TextField,\n  Box,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeParamSetHeader,\n  selectCsvInputNodeParamSetIndex,\n  selectCsvInputNodeParamTranspose,\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setCsvInputNodeParam } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectCsvDataError,\n  selectCsvDataIsFulfilled,\n  selectCsvDataIsInitialized,\n  selectCsvDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getCsvData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { PresentationalCsvPlot } from 'components/Workspace/Visualize/Plot/CsvPlot'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const CsvFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <CsvFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst CsvFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowNodeById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'csv', 'CsvData')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nexport const ParamSettingDialog = React.memo<{\n  nodeId: string\n  filePath: string\n}>(({ nodeId, filePath }) => {\n  const [open, setOpen] = React.useState(false)\n  // OK時のみStoreに反映させるため一時的な値をuseStateで保持しておく。\n  // useStateの初期値はselectorで取得。\n  const [setHeader, setSetHeader] = React.useState(\n    useSelector(selectCsvInputNodeParamSetHeader(nodeId)),\n  )\n  const [setIndex, setSetIndex] = React.useState(\n    useSelector(selectCsvInputNodeParamSetIndex(nodeId)),\n  )\n  const [transpose, setTranspose] = React.useState(\n    useSelector(selectCsvInputNodeParamTranspose(nodeId)),\n  )\n  const dispatch = useDispatch()\n  const onClickCancel = () => {\n    setOpen(false)\n  }\n  const onClickOk = () => {\n    setOpen(false)\n    dispatch(\n      setCsvInputNodeParam({\n        nodeId,\n        param: { setHeader, setIndex, transpose },\n      }),\n    )\n  }\n\n  return (\n    <>\n      <Button onClick={() => setOpen(true)}>Settings</Button>\n      <Dialog open={open}>\n        <DialogTitle>Csv Setting</DialogTitle>\n        <DialogContent dividers>\n          <Box sx={{ display: 'flex', p: 1, m: 1, alignItems: 'flex-start' }}>\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={transpose}\n                  onChange={(event) => setTranspose(event.target.checked)}\n                />\n              }\n              label=\"Transpose\"\n            />\n            <TextField\n              label=\"header\"\n              sx={{\n                width: 100,\n                margin: (theme) => theme.spacing(0, 1, 0, 1),\n              }}\n              type=\"number\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={(event) => {\n                const value = Number(event.target.value)\n                if (value >= 0) {\n                  setSetHeader(value)\n                }\n              }}\n              value={setHeader}\n            />\n            <FormControlLabel\n              sx={{ margin: (theme) => theme.spacing(0, 1, 0, 1) }}\n              control={\n                <Switch\n                  checked={setIndex}\n                  onChange={(event) => setSetIndex(event.target.checked)}\n                />\n              }\n              label=\"Set Index\"\n            />\n          </Box>\n          <Typography variant=\"h6\">Preview</Typography>\n          <CsvPreview\n            filePath={filePath}\n            transpose={transpose}\n            setHeader={setHeader}\n            setIndex={setIndex}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onClickCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onClickOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst CsvPreview = React.memo<{\n  filePath: string\n  transpose: boolean\n  setHeader: number | null\n  setIndex: boolean\n}>(({ filePath: path, ...otherProps }) => {\n  const isInitialized = useSelector(selectCsvDataIsInitialized(path))\n  const isPending = useSelector(selectCsvDataIsPending(path))\n  const isFulfilled = useSelector(selectCsvDataIsFulfilled(path))\n  const error = useSelector(selectCsvDataError(path))\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (workspaceId && !isInitialized) {\n      dispatch(getCsvData({ path, workspaceId }))\n    }\n  }, [dispatch, isInitialized, path, workspaceId])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PresentationalCsvPlot path={path} {...otherProps} />\n  } else {\n    return null\n  }\n})\n","import { RootState } from '../../store'\n\nexport const selectHDF5 = (state: RootState) => {\n  if (state.hdf5 != null) {\n    return state.hdf5\n  } else {\n    return undefined\n  }\n}\n\nexport const selectHDF5Nodes = () => (state: RootState) =>\n  selectHDF5(state)?.tree\n\nexport const selectHDF5IsLoading = () => (state: RootState) =>\n  selectHDF5(state)?.isLoading ?? false\n","import axios from 'utils/axios'\n\nimport { BASE_URL } from 'const/API'\n\nexport type HDF5TreeDTO = HDF5DirDTO | HDF5FileDTO\n\nexport interface HDF5DirDTO {\n  isDir: true\n  name: string\n  nodes: HDF5TreeDTO[]\n  path: string\n}\n\nexport interface HDF5FileDTO {\n  isDir: false\n  name: string\n  shape: [number]\n  path: string\n  nbytes: string\n}\n\nexport async function getHDF5TreeApi(\n  path: string,\n  workspaceId: number,\n): Promise<HDF5TreeDTO[]> {\n  const response = await axios.get(\n    `${BASE_URL}/hdf5/${path}?workspace_id=${workspaceId}`,\n  )\n  return response.data\n}\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nexport const HDF5_SLICE_NAME = 'hdf5'\n\nexport interface HDF5Tree {\n  isLoading: boolean\n  tree: HDF5TreeNodeType[]\n}\n\nexport type HDF5TreeNodeType = HDF5TreeDTO\n\nexport const HDF5_TYPE_SET = {\n  ALL: 'all',\n} as const\n\nexport type HDF5_TYPE = typeof HDF5_TYPE_SET[keyof typeof HDF5_TYPE_SET]\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getHDF5TreeApi, HDF5TreeDTO } from 'api/hdf5/HDF5'\n\nimport { HDF5_SLICE_NAME } from './HDF5Type'\n\nexport const getHDF5Tree = createAsyncThunk<\n  HDF5TreeDTO[],\n  { path: string; workspaceId: number }\n>(`${HDF5_SLICE_NAME}/getHDF5Tree`, async ({ path, workspaceId }, thunkAPI) => {\n  try {\n    const response = await getHDF5TreeApi(path, workspaceId)\n    return response\n  } catch (e) {\n    return thunkAPI.rejectWithValue(e)\n  }\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\n\nimport { alpha, useTheme } from '@mui/material/styles'\nimport Dialog from '@mui/material/Dialog'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectHDF5InputNodeSelectedFilePath,\n  selectInputNodeDefined,\n  selectInputNodeHDF5Path,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeHDF5Path } from 'store/slice/InputNode/InputNodeSlice'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectHDF5IsLoading,\n  selectHDF5Nodes,\n} from 'store/slice/HDF5/HDF5Selectors'\nimport { getHDF5Tree } from 'store/slice/HDF5/HDF5Action'\nimport { HDF5TreeNodeType } from 'store/slice/HDF5/HDF5Type'\nimport { Typography } from '@mui/material'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const HDF5FileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <HDF5FileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst HDF5FileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowNodeById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.HDF5}\n        filePath={filePath ?? ''}\n      />\n      {filePath !== undefined && <ItemSelect nodeId={nodeId} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'hdf5', 'HDF5Data')}\n        style={sourceHandleStyle}\n      />\n    </div>\n  )\n})\n\nconst ItemSelect = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [open, setOpen] = React.useState(false)\n\n  const structureFileName = useSelector(selectInputNodeHDF5Path(nodeId))\n\n  return (\n    <>\n      <Button variant=\"outlined\" size=\"small\" onClick={() => setOpen(true)}>\n        {'Structure'}\n      </Button>\n      <Typography className=\"selectFilePath\" variant=\"caption\">\n        {!!structureFileName ? structureFileName : 'No structure is selected.'}\n      </Typography>\n\n      <Dialog open={open} onClose={() => setOpen(false)} fullWidth>\n        <DialogTitle>{'Select File'}</DialogTitle>\n        <Structure nodeId={nodeId} />\n        <DialogActions>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"inherit\"\n            variant=\"outlined\"\n          >\n            cancel\n          </Button>\n          <Button\n            onClick={() => setOpen(false)}\n            color=\"primary\"\n            variant=\"outlined\"\n            autoFocus\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n})\n\nconst Structure = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const theme = useTheme()\n  return (\n    <DialogContent dividers>\n      <div\n        style={{\n          height: 300,\n          overflow: 'auto',\n          marginBottom: theme.spacing(1),\n          border: '1px solid',\n          padding: theme.spacing(1),\n          borderColor: theme.palette.divider,\n        }}\n      >\n        <FileTreeView nodeId={nodeId} />\n      </div>\n    </DialogContent>\n  )\n})\n\nconst FileTreeView = React.memo<{\n  nodeId: string\n}>(({ nodeId }) => {\n  const [tree, isLoading] = useHDF5Tree(nodeId)\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView>\n        {tree?.map((node) => (\n          <TreeNode node={node} nodeId={nodeId} />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: HDF5TreeNodeType\n  nodeId: string\n}>(({ node, nodeId }) => {\n  const dispatch = useDispatch()\n\n  const onClickFile = (path: string) => {\n    dispatch(setInputNodeHDF5Path({ nodeId, path }))\n  }\n\n  if (node.isDir) {\n    // Directory\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={node.name}\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode node={childNode} key={i} nodeId={nodeId} />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    // File\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={node.name + `   (shape=${node.shape}, nbytes=${node.nbytes})`}\n        onClick={() => onClickFile(node.path)}\n      />\n    )\n  }\n})\n\nfunction useHDF5Tree(\n  nodeId: string,\n): [HDF5TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectHDF5Nodes())\n  const isLoading = useSelector(selectHDF5IsLoading())\n  const filePath = useSelector(selectHDF5InputNodeSelectedFilePath(nodeId))\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  React.useEffect(() => {\n    if (workspaceId && !isLoading && filePath) {\n      dispatch(getHDF5Tree({ path: filePath, workspaceId }))\n    }\n  }, [workspaceId, isLoading, filePath, dispatch])\n  return [tree, isLoading]\n}\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const FluoFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <FluoFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst FluoFileNodeImple = React.memo<NodeProps>(({ id: nodeId, selected }) => {\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n  const onChangeFilePath = (path: string) => {\n    dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n  }\n  const theme = useTheme()\n  const returnType = 'FluoData'\n  const fluoColor = useHandleColor(returnType)\n\n  const onClickDeleteIcon = () => {\n    dispatch(deleteFlowNodeById(nodeId))\n  }\n\n  return (\n    <div\n      style={{\n        height: '100%',\n        width: '230px',\n        background: selected\n          ? alpha(theme.palette.primary.light, 0.1)\n          : undefined,\n      }}\n    >\n      <button\n        className=\"flowbutton\"\n        onClick={onClickDeleteIcon}\n        style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n      >\n        ×\n      </button>\n      <FileSelect\n        nodeId={nodeId}\n        onChangeFilePath={(path) => {\n          if (!Array.isArray(path)) {\n            onChangeFilePath(path)\n          }\n        }}\n        fileType={FILE_TYPE_SET.CSV}\n        filePath={filePath ?? ''}\n      />\n      {!!filePath && <ParamSettingDialog nodeId={nodeId} filePath={filePath} />}\n      <Handle\n        type=\"source\"\n        position={Position.Right}\n        id={toHandleId(nodeId, 'fluo', returnType)}\n        style={{\n          ...sourceHandleStyle,\n          background: fluoColor,\n        }}\n      />\n    </div>\n  )\n})\n","import React, { CSSProperties } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Handle, Position, NodeProps } from 'react-flow-renderer'\nimport { alpha, useTheme } from '@mui/material/styles'\n\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport {\n  selectCsvInputNodeSelectedFilePath,\n  selectInputNodeDefined,\n} from 'store/slice/InputNode/InputNodeSelectors'\nimport { setInputNodeFilePath } from 'store/slice/InputNode/InputNodeActions'\nimport { toHandleId } from './FlowChartUtils'\nimport { FileSelect } from './FileSelect'\nimport { deleteFlowNodeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport { useHandleColor } from './HandleColorHook'\nimport { ParamSettingDialog } from './CsvFileNode'\n\nconst sourceHandleStyle: CSSProperties = {\n  width: 8,\n  height: 15,\n  top: 15,\n  border: '1px solid',\n  borderColor: '#555',\n  borderRadius: 0,\n}\n\nexport const BehaviorFileNode = React.memo<NodeProps>((element) => {\n  const defined = useSelector(selectInputNodeDefined(element.id))\n  if (defined) {\n    return <BehaviorFileNodeImple {...element} />\n  } else {\n    return null\n  }\n})\n\nconst BehaviorFileNodeImple = React.memo<NodeProps>(\n  ({ id: nodeId, selected }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(selectCsvInputNodeSelectedFilePath(nodeId))\n    const onChangeFilePath = (path: string) => {\n      dispatch(setInputNodeFilePath({ nodeId, filePath: path }))\n    }\n    const theme = useTheme()\n    const returnType = 'BehaviorData'\n    const behaviorColor = useHandleColor(returnType)\n\n    const onClickDeleteIcon = () => {\n      dispatch(deleteFlowNodeById(nodeId))\n    }\n\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '230px',\n          background: selected\n            ? alpha(theme.palette.primary.light, 0.1)\n            : undefined,\n        }}\n      >\n        <button\n          className=\"flowbutton\"\n          onClick={onClickDeleteIcon}\n          style={{ color: 'black', position: 'absolute', top: -10, right: 10 }}\n        >\n          ×\n        </button>\n        <FileSelect\n          nodeId={nodeId}\n          onChangeFilePath={(path) => {\n            if (!Array.isArray(path)) {\n              onChangeFilePath(path)\n            }\n          }}\n          fileType={FILE_TYPE_SET.CSV}\n          filePath={filePath ?? ''}\n        />\n        {!!filePath && (\n          <ParamSettingDialog nodeId={nodeId} filePath={filePath} />\n        )}\n        <Handle\n          type=\"source\"\n          position={Position.Right}\n          id={toHandleId(nodeId, 'behavior', returnType)}\n          style={{\n            ...sourceHandleStyle,\n            background: behaviorColor,\n          }}\n        />\n      </div>\n    )\n  },\n)\n","import { ImageFileNode } from 'components/Workspace/FlowChart/FlowChartNode/ImageFileNode'\nimport { AlgorithmNode } from 'components/Workspace/FlowChart/FlowChartNode/AlgorithmNode'\nimport { CsvFileNode } from 'components/Workspace/FlowChart/FlowChartNode/CsvFileNode'\nimport { HDF5FileNode } from 'components/Workspace/FlowChart/FlowChartNode/HDF5FileNode'\nimport { FluoFileNode } from 'components/Workspace/FlowChart/FlowChartNode/FluoFileNode'\nimport { BehaviorFileNode } from 'components/Workspace/FlowChart/FlowChartNode/BehaviorFileNode'\n\nimport { CustomEdge } from 'components/Workspace/FlowChart/CustomEdge'\n\nexport const reactFlowNodeTypes = {\n  ImageFileNode,\n  CsvFileNode,\n  HDF5FileNode,\n  AlgorithmNode,\n  FluoFileNode,\n  BehaviorFileNode,\n} as const\n\nexport const reactFlowEdgeTypes = {\n  buttonedge: CustomEdge,\n} as const\n","import { useDispatch } from 'react-redux'\nimport { EdgeProps, getBezierPath, getEdgeCenter } from 'react-flow-renderer'\nimport { deleteFlowEdgeById } from 'store/slice/FlowElement/FlowElementSlice'\nimport 'style/flowbutton.css'\n\nconst foreignObjectSize = 40\n\nexport const CustomEdge: React.FC<EdgeProps> = ({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  markerEnd,\n}) => {\n  const edgePath = getBezierPath({\n    sourceX,\n    sourceY,\n    sourcePosition,\n    targetX,\n    targetY,\n    targetPosition,\n  })\n\n  const [edgeCenterX, edgeCenterY] = getEdgeCenter({\n    sourceX,\n    sourceY,\n    targetX,\n    targetY,\n  })\n\n  const dispatch = useDispatch()\n\n  const onEdgeClick = () => {\n    dispatch(deleteFlowEdgeById(id))\n  }\n\n  return (\n    <>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={edgePath}\n        markerEnd={markerEnd}\n      />\n      <foreignObject\n        width={foreignObjectSize}\n        height={foreignObjectSize}\n        x={edgeCenterX - foreignObjectSize / 2}\n        y={edgeCenterY - foreignObjectSize / 2}\n        className=\"edgebutton-foreignobject\"\n      >\n        <button className=\"flowbutton\" onClick={onEdgeClick}>\n          ×\n        </button>\n      </foreignObject>\n    </>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectHeatMapColumns,\n  selectHeatMapData,\n  selectHeatMapDataError,\n  selectHeatMapDataIsFulfilled,\n  selectHeatMapDataIsInitialized,\n  selectHeatMapDataIsPending,\n  selectHeatMapIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHeatMapData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const HeatMapPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHeatMapDataIsPending(path))\n  const isInitialized = useSelector(selectHeatMapDataIsInitialized(path))\n  const error = useSelector(selectHeatMapDataError(path))\n  const isFulfilled = useSelector(selectHeatMapDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHeatMapData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HeatMapImple />\n  } else {\n    return null\n  }\n})\n\nconst HeatMapImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const heatMapData = useSelector(selectHeatMapData(path), heatMapDataEqualtyFn)\n  const columns = useSelector(selectHeatMapColumns(path))\n  const index = useSelector(selectHeatMapIndex(path))\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const colorscale = useSelector(selectHeatMapItemColors(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      heatMapData != null\n        ? [\n            {\n              z: heatMapData,\n              x: columns,\n              y: index,\n              type: 'heatmap',\n              name: 'heatmap',\n              colorscale: colorscale.map((value) => {\n                let offset: number = parseFloat(value.offset)\n                const offsets: number[] = colorscale.map((v) => {\n                  return parseFloat(v.offset)\n                })\n                // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n                if (offset === Math.max(...offsets)) {\n                  offset = 1.0\n                }\n                if (offset === Math.min(...offsets)) {\n                  offset = 0.0\n                }\n                return [offset, value.rgb]\n              }),\n              hoverongaps: false,\n              showlegend: true,\n              showscale: showscale,\n            },\n          ]\n        : [],\n    [heatMapData, showscale, colorscale, columns, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction heatMapDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, {\n  useCallback,\n  useEffect,\n  useState,\n  MouseEvent,\n  useRef,\n} from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { RootState } from 'store/store'\nimport {\n  Datum,\n  LayoutAxis,\n  PlotData,\n  PlotMouseEvent,\n  PlotSelectionEvent,\n} from 'plotly.js'\nimport createColormap from 'colormap'\nimport { Button, LinearProgress, TextField, Typography } from '@mui/material'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Switch from '@mui/material/Switch'\nimport Slider from '@mui/material/Slider'\nimport Box from '@mui/material/Box'\nimport { styled } from '@mui/material/styles'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport { DisplayDataContext } from '../DataContext'\n\nimport {\n  selectImageDataError,\n  selectImageDataIsInitialized,\n  selectImageDataIsPending,\n  selectImageDataIsFulfilled,\n  selectActiveImageData,\n  selectRoiData,\n  selectImageDataMaxSize,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getImageData,\n  getRoiData,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowLine,\n  selectImageItemShowGrid,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemActiveIndex,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectRoiItemFilePath,\n  selectRoiItemIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemDuration,\n  selectVisualizeItemWidth,\n  selectVisualizeItemHeight,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n  selectImageItemAlpha,\n  selectRoiItemOutputKeys,\n  selectVisualizeItems,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  incrementImageActiveIndex,\n  resetAllOrderList,\n  setImageActiveIndex,\n  setImageItemDuration,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  selectingImageArea,\n  setImageItemClikedDataId,\n} from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { addRoiApi, deleteRoiApi, mergeRoiApi } from 'api/outputs/Outputs'\nimport { isTimeSeriesItem } from 'store/slice/VisualizeItem/VisualizeItemUtils'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\ninterface PointClick {\n  x: number\n  y: number\n  z: number\n}\n\nconst WIDTH_CHARTJS = 321\nconst INIT_WIDTH_ROI = 30\n\nconst initSizeDrag = {\n  width: INIT_WIDTH_ROI,\n  height: INIT_WIDTH_ROI,\n  left: Math.floor((WIDTH_CHARTJS - INIT_WIDTH_ROI) / 2),\n  top: Math.floor((WIDTH_CHARTJS - INIT_WIDTH_ROI) / 2),\n}\n\nenum PositionDrag {\n  'LEFT' = 'LEFT',\n  'RIGHT' = 'RIGHT',\n  'BOTTOM' = 'BOTTOM',\n  'TOP' = 'TOP',\n}\n\nconst sChart = 320\n\nexport const ImagePlot = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const isPending = useSelector(selectImageDataIsPending(path))\n  const isInitialized = useSelector(selectImageDataIsInitialized(path))\n  const isFulfilled = useSelector(selectImageDataIsFulfilled(path))\n  const error = useSelector(selectImageDataError(path))\n\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (workspaceId) {\n      if (!isInitialized) {\n        dispatch(\n          getImageData({\n            path,\n            workspaceId,\n            startIndex: startIndex ?? 1,\n            endIndex: endIndex ?? 10,\n          }),\n        )\n      }\n      if (roiFilePath != null) {\n        dispatch(getRoiData({ path: roiFilePath, workspaceId }))\n      }\n    }\n  }, [\n    dispatch,\n    isInitialized,\n    path,\n    workspaceId,\n    startIndex,\n    endIndex,\n    roiFilePath,\n  ])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ImagePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ImagePlotImple = React.memo(() => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const activeIndex = useSelector(selectImageItemActiveIndex(itemId))\n  return <ImagePlotChart activeIndex={activeIndex} />\n})\n\nconst ImagePlotChart = React.memo<{\n  activeIndex: number\n}>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(\n    selectActiveImageData(path, activeIndex),\n    imageDataEqualtyFn,\n  )\n  const roiFilePath = useSelector(selectRoiItemFilePath(itemId))\n\n  const roiData = useSelector(\n    (state: RootState) =>\n      roiFilePath != null ? selectRoiData(roiFilePath)(state) : [],\n    imageDataEqualtyFn,\n  )\n\n  const [isAddRoi, setIsAddRoi] = useState(false)\n  const [loadingApi, setLoadingApi] = useState(false)\n\n  const [roiDataState, setRoiDataState] = useState(roiData)\n\n  const [pointClick, setPointClick] = useState<PointClick[]>([])\n\n  const itemsVisual = useSelector(selectVisualizeItems)\n\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const colorscale = useSelector(selectImageItemColors(itemId))\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const timeDataMaxIndex = useSelector(selectRoiItemIndex(itemId, roiFilePath))\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const [sizeDrag, setSizeDrag] = useState(initSizeDrag)\n\n  const [startDragAddRoi, setStartDragAddRoi] = useState(false)\n  const [positionDrag, setChangeSize] = useState<PositionDrag | undefined>()\n\n  const outputKey: string | null = useSelector(selectRoiItemOutputKeys(itemId))\n\n  const refPageXSize = useRef(0)\n  const refPageYSize = useRef(0)\n\n  const colorscaleRoi = createColormap({\n    colormap: 'jet',\n    nshades: 100, //timeDataMaxIndex >= 6 ? timeDataMaxIndex : 6,\n    format: 'rgba',\n    alpha: 1.0,\n  })\n\n  useEffect(() => {\n    setRoiDataState(roiData)\n  }, [roiData])\n\n  useEffect(() => {\n    onCancel()\n    onCancelAdd()\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [outputKey, roiFilePath])\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'images',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          const rgb = value.rgb\n            .replace(/[^0-9,]/g, '')\n            .split(',')\n            .map((x) => Number(x))\n          const hex = rgba2hex(rgb, alpha)\n          return [offset, hex]\n        }),\n        // hoverinfo: isAddRoi || pointClick.length ? 'none' : undefined,\n        hoverongaps: false,\n        showscale: showscale,\n        zsmooth: zsmooth, // ['best', 'fast', false]\n      },\n      {\n        z: roiDataState,\n        type: 'heatmap',\n        name: 'roi',\n        hovertemplate: isAddRoi ? 'none' : 'cell id: %{z}',\n        // hoverinfo: isAddRoi || pointClick.length ? 'none' : undefined,\n        colorscale: [...Array(timeDataMaxIndex)].map((_, i) => {\n          const new_i = Math.floor(((i % 10) * 10 + i / 10) % 100)\n          const offset: number = i / (timeDataMaxIndex - 1)\n          const rgba = colorscaleRoi[new_i]\n          const hex = rgba2hex(rgba, roiAlpha)\n          return [offset, hex]\n        }),\n        zmin: 0,\n        zmax: timeDataMaxIndex,\n        hoverongaps: false,\n        zsmooth: false,\n        showscale: false,\n      },\n    ],\n    [\n      imageData,\n      roiDataState,\n      zsmooth,\n      showscale,\n      colorscale,\n      colorscaleRoi,\n      timeDataMaxIndex,\n      roiAlpha,\n      alpha,\n      isAddRoi,\n    ],\n  )\n\n  const [selectMode, setSelectMode] = React.useState(false)\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSelectMode(event.target.checked)\n  }\n  // debounceでイベントを間引きする。onSelectedはそれっぽい名前だが動かなかった。\n  const onSelecting = debounce((event: PlotSelectionEvent) => {\n    if (event.range != null) {\n      dispatch(selectingImageArea({ itemId, range: event.range }))\n    }\n  })\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 130,\n      margin: {\n        t: 30, // top\n        l: 100, // left\n        b: 20, // bottom\n      },\n      dragmode: selectMode ? 'select' : 'pan',\n      xaxis: {\n        autorange: true,\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n        showticklabels: showticklabels,\n      },\n      yaxis: {\n        automargin: true,\n        autorange: 'reversed',\n        showgrid: showgrid,\n        showline: showline,\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n        showticklabels: showticklabels, // todo\n      },\n    }),\n    //eslint-disable-next-line react-hooks/exhaustive-deps\n    [showgrid, showline, showticklabels, width, height, selectMode, isAddRoi],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n      // scale: number;\n      // format: 'png' | 'svg' | 'jpeg' | 'webp';\n      // height: number;\n      // width: number;\n    },\n  }\n\n  const onChartClick = (event: PlotMouseEvent) => {\n    const point: PlotDatum = event.points[0] as PlotDatum\n    if (point.curveNumber >= 1 && outputKey === 'cell_roi') {\n      setSelectRoi({\n        x: Number(point.x),\n        y: Number(point.y),\n        z: Number(point.z),\n      })\n    }\n    if (point.curveNumber >= 1 && point.z > 0) {\n      dispatch(\n        setImageItemClikedDataId({\n          itemId,\n          clickedDataId: point.z.toString(),\n        }),\n      )\n    }\n  }\n\n  const setSelectRoi = (point: PointClick) => {\n    if (!point.z) return\n    const newPoints = [...pointClick, point]\n    const newRoi = roiDataState.map((roi) => {\n      return roi.map((element) => {\n        if (newPoints.some((p) => p.z === element)) {\n          return 0\n        }\n        return element\n      })\n    })\n    setPointClick([...pointClick, point])\n    setRoiDataState(newRoi)\n  }\n\n  const onCancel = () => {\n    setPointClick([])\n    setRoiDataState(roiData)\n  }\n\n  const addRoi = () => {\n    setIsAddRoi(true)\n  }\n\n  const onCancelAdd = () => {\n    setIsAddRoi(false)\n    setSizeDrag(initSizeDrag)\n    setChangeSize(undefined)\n  }\n\n  const onMouseDownDragAddRoi = () => {\n    setStartDragAddRoi(true)\n  }\n\n  const onMouseUpDragAddRoi = () => {\n    setStartDragAddRoi(false)\n    setChangeSize(undefined)\n  }\n\n  const onMouseDownSize = (position: PositionDrag, event: MouseEvent) => {\n    setChangeSize(position)\n    refPageXSize.current = event.pageX\n    refPageYSize.current = event.pageY\n  }\n\n  const onMouseMoveAddRoi = (event: MouseEvent<HTMLDivElement>) => {\n    const { pageX, pageY } = event\n    let newSizeDrag\n    if (startDragAddRoi) {\n      const { y } = event.currentTarget.getBoundingClientRect()\n      let newX = sizeDrag.left + (pageX - refPageXSize.current)\n      let newY = Math.ceil(pageY - y - 15) - window.scrollY\n\n      if (newX < 0) newX = 0\n      else if (newX + sizeDrag.width > sChart) newX = sChart - sizeDrag.width\n      if (newY < 0) newY = 0\n      else if (newY + sizeDrag.height > sChart) newY = sChart - sizeDrag.height\n      newSizeDrag = { ...sizeDrag, left: newX, top: newY }\n    } else if (positionDrag === PositionDrag.LEFT) {\n      const newWidth = sizeDrag.width - (pageX - refPageXSize.current)\n      const newLeft = sizeDrag.left + (pageX - refPageXSize.current)\n      if (newWidth < 10 || newLeft < 1) return\n      newSizeDrag = { ...sizeDrag, width: newWidth, left: newLeft }\n    } else if (positionDrag === PositionDrag.RIGHT) {\n      const newWidth = sizeDrag.width + (pageX - refPageXSize.current)\n      if (newWidth < 10 || newWidth > sChart - sizeDrag.left) return\n      newSizeDrag = { ...sizeDrag, width: newWidth }\n    } else if (positionDrag === PositionDrag.BOTTOM) {\n      const newHeight = sizeDrag.height + (pageY - refPageYSize.current)\n      if (newHeight < 10 || newHeight > sChart - sizeDrag.top) return\n      newSizeDrag = { ...sizeDrag, height: newHeight }\n    } else if (positionDrag === PositionDrag.TOP) {\n      const newHeight = sizeDrag.height - (pageY - refPageYSize.current)\n      const newTop = sizeDrag.top + (pageY - refPageYSize.current)\n      if (newHeight < 10 || newTop < 1) return\n      newSizeDrag = { ...sizeDrag, height: newHeight, top: newTop }\n    }\n    if (newSizeDrag) setSizeDrag({ ...sizeDrag, ...newSizeDrag })\n    refPageXSize.current = pageX\n    refPageYSize.current = pageY\n  }\n\n  const addRoiSubmit = async () => {\n    if (!roiFilePath || loadingApi) return\n    setLoadingApi(true)\n    const sizeX = roiDataState[0].length - 1\n    const sizeY = roiDataState.length - 1\n    const xAdd = Number(((sizeDrag.width + 2) / (sChart / sizeX)).toFixed(1))\n    const yAdd = Number(((sizeDrag.height + 2) / (sChart / sizeY)).toFixed(1))\n    const x = Number((sizeDrag.left / (sChart / sizeX)).toFixed(1))\n    const y = Number((sizeDrag.top / (sChart / sizeY)).toFixed(1))\n\n    const pointCenter = {\n      posx: x + Math.floor(xAdd / 2),\n      posy: y + Math.floor(yAdd / 2),\n      sizex: xAdd,\n      sizey: yAdd,\n    }\n    dispatch(resetAllOrderList())\n    try {\n      await addRoiApi(roiFilePath, pointCenter)\n    } catch {}\n    setLoadingApi(false)\n    onCancelAdd()\n    workspaceId && dispatch(getRoiData({ path: roiFilePath, workspaceId }))\n    resetTimeSeries()\n  }\n\n  const onMergeRoi = async () => {\n    if (!roiFilePath || loadingApi) return\n    setLoadingApi(true)\n    dispatch(resetAllOrderList())\n    try {\n      await mergeRoiApi(roiFilePath, {\n        ids: pointClick.map((point) => point.z - 1),\n      })\n    } catch {}\n    setLoadingApi(false)\n    onCancel()\n    workspaceId && dispatch(getRoiData({ path: roiFilePath, workspaceId }))\n    resetTimeSeries()\n  }\n\n  const onDeleteRoi = async () => {\n    if (!roiFilePath || loadingApi) return\n    setLoadingApi(true)\n    dispatch(resetAllOrderList())\n    try {\n      await deleteRoiApi(roiFilePath, {\n        ids: pointClick.map((point) => point.z - 1),\n      })\n    } catch {}\n    setLoadingApi(false)\n    onCancel()\n    workspaceId && dispatch(getRoiData({ path: roiFilePath, workspaceId }))\n    resetTimeSeries()\n  }\n\n  const resetTimeSeries = () => {\n    if (itemsVisual) {\n      Object.keys(itemsVisual).forEach((item) => {\n        if (isTimeSeriesItem(itemsVisual[item])) {\n          dispatch(\n            getTimeSeriesInitData({\n              path: itemsVisual[item].filePath as string,\n              itemId: Number(item),\n            }),\n          )\n        }\n      })\n    }\n  }\n\n  const renderActionRoi = () => {\n    if (!roiDataState?.length || outputKey !== 'cell_roi') return null\n    if (!isAddRoi) {\n      return <LinkDiv onClick={addRoi}>Add ROI</LinkDiv>\n    }\n    return (\n      <BoxDiv>\n        <LinkDiv\n          style={{\n            opacity: loadingApi ? 0.5 : 1,\n            cursor: loadingApi ? 'progress' : 'pointer',\n          }}\n          onClick={addRoiSubmit}\n        >\n          OK\n        </LinkDiv>\n        <LinkDiv\n          style={{\n            opacity: loadingApi ? 0.5 : 1,\n            cursor: loadingApi ? 'progress' : 'pointer',\n          }}\n          onClick={onCancelAdd}\n        >\n          Cancel\n        </LinkDiv>\n      </BoxDiv>\n    )\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, mt: 1 }}>\n          <PlayBack activeIndex={activeIndex} />\n        </Box>\n        <FormControlLabel\n          sx={{ ml: 1 }}\n          control={<Switch checked={selectMode} onChange={handleChange} />}\n          label=\"drag select\"\n        />\n      </Box>\n      <Box sx={{ minHeight: 5.5 }}>\n        {pointClick.length ? (\n          <>\n            <BoxDiv>\n              <span>ROI Selecteds: [{String(pointClick.map((e) => e.z))}]</span>\n            </BoxDiv>\n            <BoxDiv>\n              {pointClick.length >= 2 ? (\n                <LinkDiv\n                  sx={{ ml: 0, opacity: loadingApi ? 0.5 : 1 }}\n                  onClick={onMergeRoi}\n                >\n                  Merge ROI\n                </LinkDiv>\n              ) : null}\n              <LinkDiv\n                sx={{ color: '#F84E1B', opacity: loadingApi ? 0.5 : 1 }}\n                onClick={onDeleteRoi}\n              >\n                Delete ROI\n              </LinkDiv>\n              <LinkDiv\n                sx={{ opacity: loadingApi ? 0.5 : 1 }}\n                onClick={onCancel}\n              >\n                Cancel\n              </LinkDiv>\n            </BoxDiv>\n          </>\n        ) : (\n          renderActionRoi()\n        )}\n      </Box>\n      <div style={{ position: 'relative' }}>\n        <PlotlyChart\n          data={data}\n          layout={layout}\n          config={config}\n          onClick={onChartClick}\n          onSelecting={onSelecting}\n        />\n        {isAddRoi ? (\n          <DivAddRoi>\n            <DivSvg\n              onMouseLeave={onMouseUpDragAddRoi}\n              onMouseMove={onMouseMoveAddRoi}\n              onMouseUp={onMouseUpDragAddRoi}\n            >\n              <DivDrag style={sizeDrag}>\n                <DragCenter\n                  onMouseDown={onMouseDownDragAddRoi}\n                  style={{\n                    width: sizeDrag.width - 1,\n                    height: sizeDrag.height - 1,\n                    cursor: !startDragAddRoi ? 'grab' : 'grabbing',\n                  }}\n                />\n                <DragSizeLeft\n                  onMouseDown={(event) =>\n                    onMouseDownSize(PositionDrag.LEFT, event)\n                  }\n                />\n                <DragSizeRight\n                  onMouseDown={(event) => {\n                    onMouseDownSize(PositionDrag.RIGHT, event)\n                  }}\n                />\n                <DragSizeTop\n                  onMouseDown={(event) => {\n                    onMouseDownSize(PositionDrag.TOP, event)\n                  }}\n                />\n                <DragSizeBottom\n                  onMouseDown={(event) => {\n                    onMouseDownSize(PositionDrag.BOTTOM, event)\n                  }}\n                />\n              </DivDrag>\n            </DivSvg>\n          </DivAddRoi>\n        ) : null}\n      </div>\n    </div>\n  )\n})\n\nconst PlayBack = React.memo<{ activeIndex: number }>(({ activeIndex }) => {\n  const dispatch = useDispatch()\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const maxSize = useSelector(selectImageDataMaxSize(path))\n  const startIndex = useSelector(selectImageItemStartIndex(itemId))\n  const endIndex = useSelector(selectImageItemEndIndex(itemId))\n  const duration = useSelector(selectImageItemDuration(itemId))\n\n  const onSliderChange = (\n    event: Event,\n    value: number | number[],\n    activeThumb: number,\n  ) => {\n    if (typeof value === 'number') {\n      const newIndex = value - startIndex\n      if (newIndex >= 0 && newIndex !== activeIndex) {\n        dispatch(setImageActiveIndex({ itemId, activeIndex: newIndex }))\n      }\n    }\n  }\n\n  const intervalRef = React.useRef<null | NodeJS.Timeout>(null)\n\n  useEffect(() => {\n    if (intervalRef.current !== null) {\n      if (activeIndex >= maxSize) {\n        clearInterval(intervalRef.current)\n        intervalRef.current = null\n      }\n    }\n  }, [activeIndex, maxSize])\n\n  const onPlayClick = useCallback(() => {\n    if (activeIndex >= maxSize) {\n      dispatch(setImageActiveIndex({ itemId, activeIndex: 0 }))\n    }\n    if (maxSize > 1 && intervalRef.current === null) {\n      intervalRef.current = setInterval(() => {\n        dispatch(incrementImageActiveIndex({ itemId }))\n      }, duration)\n    }\n  }, [activeIndex, maxSize, dispatch, duration, itemId])\n\n  const onPauseClick = () => {\n    if (intervalRef.current !== null) {\n      clearInterval(intervalRef.current)\n      intervalRef.current = null\n    }\n  }\n\n  const onDurationChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue =\n        event.target.value === '' ? '' : Number(event.target.value)\n      if (typeof newValue === 'number') {\n        dispatch(setImageItemDuration({ itemId, duration: newValue }))\n      }\n    },\n    [dispatch, itemId],\n  )\n  return (\n    <>\n      <Button sx={{ mt: 1.5 }} variant=\"outlined\" onClick={onPlayClick}>\n        Play\n      </Button>\n      <Button sx={{ mt: 1.5, ml: 1 }} variant=\"outlined\" onClick={onPauseClick}>\n        Pause\n      </Button>\n      <TextField\n        sx={{ width: 100, ml: 2 }}\n        label=\"Duration [msec]\"\n        type=\"number\"\n        inputProps={{\n          step: 100,\n          min: 0,\n          max: 1000,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onDurationChange}\n        value={duration}\n      />\n      <Slider\n        aria-label=\"Custom marks\"\n        defaultValue={20}\n        value={startIndex + activeIndex}\n        valueLabelDisplay=\"auto\"\n        step={1}\n        marks\n        min={startIndex}\n        max={maxSize === 0 ? 0 : endIndex}\n        onChange={onSliderChange}\n      />\n    </>\n  )\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\ninterface PlotDatum {\n  curveNumber: number\n  data: PlotData\n  customdata: Datum\n  pointIndex: number\n  pointNumber: number\n  x: Datum\n  xaxis: LayoutAxis\n  y: Datum\n  yaxis: LayoutAxis\n  z: number\n}\n\nfunction rgba2hex(rgba: number[], alpha: number) {\n  const r = rgba[0]\n  const g = rgba[1]\n  const b = rgba[2]\n  const a = alpha\n\n  var outParts = [\n    r.toString(16),\n    g.toString(16),\n    b.toString(16),\n    Math.round(a * 255)\n      .toString(16)\n      .substring(0, 2),\n  ]\n\n  // Pad single-digit output values\n  outParts.forEach(function (part, i) {\n    if (part.length === 1) {\n      outParts[i] = '0' + part\n    }\n  })\n\n  return `#${outParts.join('')}`\n}\n\nfunction debounce<T extends (...args: any[]) => unknown>(\n  callback: T,\n  delay = 500,\n): (...args: Parameters<T>) => void {\n  let timeoutId: NodeJS.Timeout\n  return (...args) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => callback(...args), delay)\n  }\n}\n\nconst BoxDiv = styled('div')({\n  mt: 1,\n  display: 'flex',\n  alignItems: 'center',\n  listStyle: 'none',\n  padding: 0,\n  margin: 0,\n})\n\nconst LinkDiv = styled('div')({\n  marginLeft: 16,\n  textDecoration: 'underline',\n  cursor: 'pointer',\n  color: '#1155cc',\n  zIndex: 999,\n  position: 'relative',\n})\n\nconst DivAddRoi = styled('div')({\n  width: '100%',\n  height: '100%',\n  position: 'absolute',\n  left: 0,\n  top: 0,\n  borderRadius: 100,\n})\n\nconst DivSvg = styled('div')({\n  width: 321,\n  height: 321,\n  marginTop: 30,\n  marginLeft: 99,\n  position: 'relative',\n})\n\nconst DivDrag = styled('div')({\n  border: '1px solid #ffffff',\n  position: 'absolute',\n  borderRadius: 100,\n})\n\nconst DragCenter = styled('div')({\n  borderRadius: 100,\n  cursor: 'grab',\n})\n\nconst DragSize = styled('div')({\n  width: 3,\n  height: 3,\n  borderRadius: 100,\n  position: 'absolute',\n  background: '#fff',\n})\n\nconst DragSizeLeft = styled(DragSize)({\n  top: `calc(50% - 1px)`,\n  left: -2,\n  cursor: 'ew-resize',\n})\n\nconst DragSizeRight = styled(DragSize)({\n  top: `calc(50% - 1px)`,\n  right: -2,\n  cursor: 'ew-resize',\n})\n\nconst DragSizeTop = styled(DragSize)({\n  top: -2,\n  right: `calc(50% - 1px)`,\n  cursor: 'ns-resize',\n})\n\nconst DragSizeBottom = styled(DragSize)({\n  bottom: -2,\n  right: `calc(50% - 1px)`,\n  cursor: 'ns-resize',\n})\n","import React from 'react'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DisplayDataContext } from '../DataContext'\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\nimport {\n  selectRoiData,\n  selectRoiDataError,\n  selectRoiDataIsFulfilled,\n  selectRoiDataIsInitialized,\n  selectRoiDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { LinearProgress, Typography } from '@mui/material'\nimport { getRoiData } from 'store/slice/DisplayData/DisplayDataActions'\nimport createColormap from 'colormap'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const RoiPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const isPending = useSelector(selectRoiDataIsPending(path))\n  const isInitialized = useSelector(selectRoiDataIsInitialized(path))\n  const isFulfilled = useSelector(selectRoiDataIsFulfilled(path))\n  const error = useSelector(selectRoiDataError(path))\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n\n  const dispatch = useDispatch()\n  React.useEffect(() => {\n    if (workspaceId && !isInitialized) {\n      dispatch(getRoiData({ path, workspaceId }))\n    }\n  }, [dispatch, isInitialized, path, workspaceId])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <RoiPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst RoiPlotImple = React.memo<{}>(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const imageData = useSelector(selectRoiData(path), imageDataEqualtyFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const colorscale: ColorType[] = createColormap({\n    colormap: 'jet',\n    nshades: 10,\n    format: 'hex',\n    alpha: 1,\n  }).map((v, idx) => {\n    return { rgb: v, offset: String(idx / 9) }\n  })\n\n  const data = React.useMemo(\n    () => [\n      {\n        z: imageData,\n        type: 'heatmap',\n        name: 'roi',\n        colorscale: colorscale.map((value) => {\n          let offset: number = parseFloat(value.offset)\n          const offsets: number[] = colorscale.map((v) => {\n            return parseFloat(v.offset)\n          })\n          // plotlyは端[0.0, 1.0]がないとダメなので、その設定\n          if (offset === Math.max(...offsets)) {\n            offset = 1.0\n          }\n          if (offset === Math.min(...offsets)) {\n            offset = 0.0\n          }\n          return [offset, value.rgb]\n        }),\n        hoverongaps: false,\n        // zsmooth: zsmooth, // ['best', 'fast', false]\n        zsmooth: false,\n        showlegend: true,\n      },\n    ],\n    [imageData, colorscale],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 50,\n      margin: {\n        t: 30, // top\n        l: 120, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      xaxis: {\n        autorange: true,\n        zeroline: false,\n        autotick: true,\n        ticks: '',\n      },\n      yaxis: {\n        autorange: 'reversed',\n        zeroline: false,\n        autotick: true, // todo\n        ticks: '',\n      },\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n  return <PlotlyChart data={data} layout={layout} config={config} />\n})\n\nfunction imageDataEqualtyFn(\n  a: number[][] | undefined,\n  b: number[][] | undefined,\n) {\n  if (a != null && b != null) {\n    return twoDimarrayEqualityFn(a, b)\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectScatterData,\n  selectScatterDataError,\n  selectScatterDataIsFulfilled,\n  selectScatterDataIsInitialized,\n  selectScatterDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getScatterData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { ScatterData } from 'api/outputs/Outputs'\nimport {\n  selectScatterItemXIndex,\n  selectScatterItemYIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setScatterItemXIndex,\n  setScatterItemYIndex,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const ScatterPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectScatterDataIsPending(path))\n  const isInitialized = useSelector(selectScatterDataIsInitialized(path))\n  const error = useSelector(selectScatterDataError(path))\n  const isFulfilled = useSelector(selectScatterDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getScatterData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <ScatterPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst ScatterPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  const scatterData = useSelector(\n    selectScatterData(path),\n    scatterDataEqualityFn,\n  )\n\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: scatterData[xIndex],\n        y: scatterData[yIndex],\n        type: 'scatter',\n        mode: 'markers', //'markers+text',\n        text: Object.keys(scatterData[xIndex]),\n        textposition: 'top center',\n        textfont: {\n          family: 'Raleway, sans-serif',\n        },\n        marker: {\n          size: 5,\n          color: Object.keys(scatterData[xIndex]),\n        },\n      },\n    ],\n    [scatterData, xIndex, yIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      xaxis: {\n        title: {\n          text: `x: ${xIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n      yaxis: {\n        title: {\n          text: `y: ${yIndex}`,\n          font: {\n            family: 'Courier New, monospace',\n            size: 18,\n            color: '#7f7f7f',\n          },\n        },\n      },\n    }),\n    [xIndex, yIndex, width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <XIndex dataKeys={Object.keys(scatterData)} />\n          <YIndex dataKeys={Object.keys(scatterData)} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst XIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const xIndex = useSelector(selectScatterItemXIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemXIndex({\n        itemId,\n        xIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>xIndex</InputLabel>\n      <Select label=\"smooth\" value={xIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst YIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const yIndex = useSelector(selectScatterItemYIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setScatterItemYIndex({\n        itemId,\n        yIndex: event.target.value,\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>yIndex</InputLabel>\n      <Select label=\"smooth\" value={yIndex} onChange={handleChange}>\n        {dataKeys.map((x) => (\n          <MenuItem value={x}>{x}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction scatterDataEqualityFn(\n  a: ScatterData | undefined,\n  b: ScatterData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React, {useEffect, useState} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { LegendClickEvent } from 'plotly.js'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectTimeSeriesData,\n  selectTimeSeriesDataError,\n  selectTimeSeriesDataIsFulfilled,\n  selectTimeSeriesDataIsInitialized,\n  selectTimeSeriesDataIsPending,\n  selectTimeSeriesStd,\n  selectTimeSeriesXrange,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport {\n  getTimeSeriesDataById,\n  getTimeSeriesInitData,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { TimeSeriesData } from 'api/outputs/Outputs'\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectTimeSeriesItemKeys,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n  selectImageItemRangeUnit,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport createColormap from 'colormap'\nimport { setTimeSeriesItemDrawOrderList } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { selectFrameRate } from \"../../../../store/slice/Experiments/ExperimentsSelectors\";\nimport {selectPipelineLatestUid} from \"../../../../store/slice/Pipeline/PipelineSelectors\";\n\nexport const TimeSeriesPlot = React.memo(() => {\n  const { itemId, filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectTimeSeriesDataIsPending(path))\n  const isInitialized = useSelector(selectTimeSeriesDataIsInitialized(path))\n  const error = useSelector(selectTimeSeriesDataError(path))\n  const isFulfilled = useSelector(selectTimeSeriesDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getTimeSeriesInitData({ path, itemId }))\n    }\n  }, [dispatch, isInitialized, path, itemId])\n\n  if (!isInitialized) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isPending || isFulfilled) {\n    return <TimeSeriesPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst TimeSeriesPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n\n  // 0番のデータとkeysだけをとってくる\n  const dispatch = useDispatch()\n  const timeSeriesData = useSelector(\n    selectTimeSeriesData(path),\n    timeSeriesDataEqualityFn,\n  )\n\n  const dataXrange = useSelector(selectTimeSeriesXrange(path))\n  const dataStd = useSelector(selectTimeSeriesStd(path))\n  const rangeUnit = useSelector(selectImageItemRangeUnit(itemId))\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n  const xrange = useSelector(selectTimeSeriesItemXrange(itemId))\n  const drawOrderList = useSelector(selectTimeSeriesItemDrawOrderList(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const dataKeys = useSelector(selectTimeSeriesItemKeys(itemId))\n\n  const [newDataXrange, setNewDataXrange] = useState<string[]>(dataXrange)\n  const [newTimeSeriesData, setNewTimeSeriesData] = useState(timeSeriesData)\n  const currentPipelineUid = useSelector(selectPipelineLatestUid)\n  const frameRate = useSelector(selectFrameRate(currentPipelineUid))\n\n  useEffect(() => {\n    let seriesData: any = {}\n    drawOrderList.forEach((key) => {\n      seriesData[key] = timeSeriesData[key]\n    })\n    if(rangeUnit === 'time' && timeSeriesData && Object.keys(timeSeriesData).length > 0) {\n      let newSeriesData: any = {}\n      Object.keys(seriesData).forEach(key => {\n        newSeriesData[key] = {}\n        Object.keys(seriesData[key]).forEach((keyTime) => {\n          const newKeyTime =  Number(keyTime) / frameRate\n          newSeriesData[key][newKeyTime] = seriesData[key][keyTime]\n        })\n      })\n      setNewDataXrange(dataXrange.map(data => String(Number(data) / frameRate)))\n      setNewTimeSeriesData(newSeriesData)\n    }\n    else {\n      setNewDataXrange(dataXrange)\n      setNewTimeSeriesData(seriesData)\n    }\n    //eslint-disable-next-line\n  }, [rangeUnit, dataXrange, timeSeriesData, drawOrderList])\n\n  const colorScale = createColormap({\n    colormap: 'jet',\n    nshades: 100, //maxIndex >= 6 ? maxIndex : 6,\n    format: 'hex',\n    alpha: 1,\n  })\n\n  const data = React.useMemo(() => {\n    return Object.fromEntries(\n      dataKeys.map((key) => {\n      let y = newDataXrange.map((x) => newTimeSeriesData[key]?.[x])\n      const i = Number(key) - 1\n      const new_i = Math.floor((i % 10) * 10 + i / 10) % 100\n      if (drawOrderList.includes(key) && offset) {\n        const activeIdx: number = drawOrderList.findIndex((v) => v === key)\n        const mean: number = y.reduce((a, b) => a + b) / y.length\n        const std: number =\n          span *\n          Math.sqrt(y.reduce((a, b) => a + Math.pow(b - mean, 2)) / y.length)\n        y = y.map((value) => (value - mean) / (std + 1e-10) + activeIdx)\n      }\n\n      return [\n        key,\n        {\n          name: key,\n          x: newDataXrange,\n          y: y,\n          visible: drawOrderList.includes(key) ? true : 'legendonly',\n          line: { color: colorScale[new_i] },\n          error_y: {\n            type: 'data',\n            array:\n              !offset && Object.keys(dataStd).includes(key)\n                ? Object.values(dataStd[key])\n                : null,\n            visible: true,\n          },\n        },\n      ]\n    }),\n    )\n  }, [\n    drawOrderList,\n    offset,\n    span,\n    colorScale,\n    dataStd,\n    dataKeys,\n    newDataXrange,\n    newTimeSeriesData,\n  ])\n\n  const annotations = React.useMemo(() => {\n    const range = rangeUnit === 'time' ? frameRate : 1\n    return drawOrderList.map((value) => {\n      return {\n        x: Number((newDataXrange.length - 1) / range) + newDataXrange.length / (10 * range),\n        y: data[value].y[newDataXrange.length - 1],\n        xref: 'x',\n        yref: 'y',\n        text: `cell: ${value}`,\n        arrowhead: 1,\n        ax: 0,\n        ay: -10,\n      }\n    })\n  }, [data, drawOrderList, newDataXrange, rangeUnit, frameRate])\n\n  const layout = React.useMemo(\n    () => ({\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n      width: width,\n      height: height - 50,\n      xaxis: {\n        title: {\n          text: rangeUnit,\n        },\n        titlefont: {\n          size: 12,\n          color: 'black',\n        },\n        tickfont: {\n          size: 10,\n          color: 'black',\n        },\n        range: rangeUnit === 'frames' ? [xrange.left, xrange.right] :\n          [typeof xrange.left !== 'undefined' ? xrange.left / frameRate : -2.5 ,\n            typeof xrange.right !== 'undefined' ? xrange.right / frameRate : (dataXrange.length / frameRate) + 6.8],\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      yaxis: {\n        showgrid: showgrid,\n        showline: showline,\n        showticklabels: showticklabels,\n        zeroline: zeroline,\n      },\n      annotations: annotations,\n    }),\n    [\n      xrange,\n      showgrid,\n      showline,\n      showticklabels,\n      zeroline,\n      annotations,\n      width,\n      height,\n      rangeUnit,\n      dataXrange,\n      frameRate\n    ],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  const onLegendClick = (event: LegendClickEvent) => {\n    const clickNumber = dataKeys[event.curveNumber]\n\n\n    const newDrawOrderList = drawOrderList.includes(clickNumber)\n      ? drawOrderList.filter((value) => value !== clickNumber)\n      : [...drawOrderList, clickNumber]\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    // set DisplayNumbers\n    if (!drawOrderList.includes(clickNumber)) {\n      dispatch(getTimeSeriesDataById({ path, index: clickNumber }))\n    }\n\n    return false\n  }\n\n  return (\n    <PlotlyChart\n      data={Object.values(data)}\n      layout={layout}\n      config={config}\n      onLegendClick={onLegendClick}\n    />\n  )\n})\n\nfunction timeSeriesDataEqualityFn(\n  a: TimeSeriesData | undefined,\n  b: TimeSeriesData | undefined,\n) {\n  if (a != null && b != null) {\n    const aArray = Object.entries(a)\n    const bArray = Object.entries(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every(([aKey, aValue], i) => {\n          const [bKey, bValue] = bArray[i]\n          return bKey === aKey && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n\nfunction nestEqualityFun(\n  a: {\n    [key: number]: number\n  },\n  b: {\n    [key: number]: number\n  },\n) {\n  const aArray = Object.entries(a)\n  const bArray = Object.entries(b)\n  return (\n    a === b ||\n    (aArray.length === bArray.length &&\n      aArray.every(([aKey, aValue], i) => {\n        const [bKey, bValue] = bArray[i]\n        return bKey === aKey && bValue === aValue\n      }))\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Typography from '@mui/material/Typography'\nimport Box from '@mui/material/Box'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectBarData,\n  selectBarDataError,\n  selectBarDataIsFulfilled,\n  selectBarDataIsInitialized,\n  selectBarDataIsPending,\n  selectBarIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getBarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { BarData } from 'api/outputs/Outputs'\nimport {\n  selectBarItemIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setBarItemIndex } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const BarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectBarDataIsPending(path))\n  const isInitialized = useSelector(selectBarDataIsInitialized(path))\n  const error = useSelector(selectBarDataError(path))\n  const isFulfilled = useSelector(selectBarDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getBarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <BarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst BarPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const barData = useSelector(selectBarData(path), barDataEqualityFn)\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const index = useSelector(selectBarItemIndex(itemId))\n  const dataKeys = useSelector(selectBarIndex(path))\n\n  const data = React.useMemo(\n    () => [\n      {\n        x: Object.keys(barData[index]),\n        y: Object.values(barData[index]),\n        type: 'bar',\n      },\n    ],\n    [barData, index],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      dragmode: 'pan',\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n\n  const config = {\n    displayModeBar: true,\n    // scrollZoom: true,\n    responsive: true,\n    toImageButtonOptions: {\n      format: saveFormat,\n      filename: saveFileName,\n    },\n  }\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <SelectIndex dataKeys={dataKeys} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} config={config} />\n    </div>\n  )\n})\n\nconst SelectIndex = React.memo<{\n  dataKeys: string[]\n}>(({ dataKeys }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const index = useSelector(selectBarItemIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(\n      setBarItemIndex({\n        itemId,\n        index: event.target.value,\n      }),\n    )\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>index</InputLabel>\n      <Select label=\"smooth\" value={`${index}`} onChange={handleChange}>\n        {dataKeys.map((v, i) => (\n          <MenuItem value={i}>{v}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nfunction barDataEqualityFn(a: BarData | undefined, b: BarData | undefined) {\n  if (a != null && b != null) {\n    const aArray = Object.keys(a)\n    const bArray = Object.keys(b)\n    return (\n      a === b ||\n      (aArray.length === bArray.length &&\n        aArray.every((aKey, i) => {\n          const bKey = bArray[i]\n          return bKey === aKey // && nestEqualityFun(bValue, aValue)\n        }))\n    )\n  } else {\n    return a === undefined && b === undefined\n  }\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { LinearProgress, Typography } from '@mui/material'\n\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHTMLData,\n  selectHTMLDataError,\n  selectHTMLDataIsFulfilled,\n  selectHTMLDataIsInitialized,\n  selectHTMLDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHTMLData } from 'store/slice/DisplayData/DisplayDataActions'\n\nexport const HTMLPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHTMLDataIsPending(path))\n  const isInitialized = useSelector(selectHTMLDataIsInitialized(path))\n  const error = useSelector(selectHTMLDataError(path))\n  const isFulfilled = useSelector(selectHTMLDataIsFulfilled(path))\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHTMLData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HTMLPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HTMLPlotImple = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const htmlData = useSelector(selectHTMLData(path))\n\n  return (\n    <div\n      dangerouslySetInnerHTML={{ __html: htmlData }}\n      style={{\n        overflow: 'scroll',\n        display: 'flex',\n        height: '90%',\n      }}\n    />\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectHistogramData,\n  selectHistogramDataError,\n  selectHistogramDataIsFulfilled,\n  selectHistogramDataIsInitialized,\n  selectHistogramDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getHistogramData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  Box,\n  FormControl,\n  Input,\n  InputLabel,\n  LinearProgress,\n  Typography,\n} from '@mui/material'\nimport {\n  selectHistogramItemBins,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setHistogramItemBins } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const HistogramPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectHistogramDataIsPending(path))\n  const isInitialized = useSelector(selectHistogramDataIsInitialized(path))\n  const error = useSelector(selectHistogramDataError(path))\n  const isFulfilled = useSelector(selectHistogramDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getHistogramData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <HistogramPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst HistogramPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const histogramData = useSelector(selectHistogramData(path))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const bins = useSelector(selectHistogramItemBins(itemId))\n\n  const data = React.useMemo(\n    () =>\n      histogramData != null\n        ? [\n            {\n              x: histogramData[0],\n              type: 'histogram',\n              autobinx: false,\n              xbins: {\n                size:\n                  (Math.max(...histogramData[0]) -\n                    Math.min(...histogramData[0])) /\n                  (bins - 1),\n              },\n            },\n          ]\n        : [],\n    [histogramData, bins],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n    }),\n    [width, height],\n  )\n\n  return (\n    <div>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <InputBins />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} />\n    </div>\n  )\n})\n\nconst InputBins = React.memo(() => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const bins = useSelector(selectHistogramItemBins(itemId))\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      setHistogramItemBins({ itemId, bins: parseInt(event.target.value) }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>bins</InputLabel>\n      <Input type=\"number\" value={bins} onChange={handleChange} />\n    </FormControl>\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectLineColumns,\n  selectLineData,\n  selectLineDataError,\n  selectLineDataIsFulfilled,\n  selectLineDataIsInitialized,\n  selectLineDataIsPending,\n  selectLineIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getLineData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  Box,\n  FormControl,\n  InputLabel,\n  LinearProgress,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Typography,\n} from '@mui/material'\nimport {\n  selectLineItemSelectedIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setLineItemSelectedIndex } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nexport const LinePlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectLineDataIsPending(path))\n  const isInitialized = useSelector(selectLineDataIsInitialized(path))\n  const error = useSelector(selectLineDataError(path))\n  const isFulfilled = useSelector(selectLineDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getLineData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <LinePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst LinePlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const lineData = useSelector(selectLineData(path))\n  const columns = useSelector(selectLineColumns(path))\n  const index = useSelector(selectLineIndex(path))\n  const selectedIndex = useSelector(selectLineItemSelectedIndex(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      lineData != null\n        ? [\n            {\n              x: columns,\n              y: lineData[selectedIndex],\n            },\n          ]\n        : [],\n    [lineData, columns, selectedIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n      xaxis: {\n        tickvals: columns,\n      },\n    }),\n    [width, height, columns],\n  )\n\n  return (\n    <>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <LineItemIndexSelect index={index} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} />\n    </>\n  )\n})\n\nconst LineItemIndexSelect = React.memo<{ index: number[] }>(({ index }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const selectedIndex = useSelector(selectLineItemSelectedIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<number>) => {\n    dispatch(\n      setLineItemSelectedIndex({\n        itemId,\n        selectedIndex: Number(event.target.value),\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>index</InputLabel>\n      <Select label=\"smooth\" value={selectedIndex} onChange={handleChange}>\n        {index.map((_, i) => (\n          <MenuItem key={i} value={i}>\n            {i}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectPieColumns,\n  selectPieData,\n  selectPieDataError,\n  selectPieDataIsFulfilled,\n  selectPieDataIsInitialized,\n  selectPieDataIsPending,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getPieData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { LinearProgress, Typography } from '@mui/material'\nimport {\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nexport const PiePlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectPieDataIsPending(path))\n  const isInitialized = useSelector(selectPieDataIsInitialized(path))\n  const error = useSelector(selectPieDataError(path))\n  const isFulfilled = useSelector(selectPieDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getPieData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PiePlotImple />\n  } else {\n    return null\n  }\n})\n\nconst PiePlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const pieData = useSelector(selectPieData(path))\n  const columns = useSelector(selectPieColumns(path))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      pieData != null\n        ? [\n            {\n              values: pieData[0],\n              labels: columns,\n              type: 'pie',\n              sort: false,\n              direction: 'clockwise',\n            },\n          ]\n        : [],\n    [pieData, columns],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n      xaxis: {\n        tickvals: columns,\n      },\n    }),\n    [width, height, columns],\n  )\n\n  return <PlotlyChart data={data} layout={layout} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport PlotlyChart from 'react-plotlyjs-ts'\nimport { DisplayDataContext } from '../DataContext'\nimport {\n  selectPolarColumns,\n  selectPolarData,\n  selectPolarDataError,\n  selectPolarDataIsFulfilled,\n  selectPolarDataIsInitialized,\n  selectPolarDataIsPending,\n  selectPolarIndex,\n} from 'store/slice/DisplayData/DisplayDataSelectors'\nimport { getPolarData } from 'store/slice/DisplayData/DisplayDataActions'\nimport {\n  Box,\n  FormControl,\n  InputLabel,\n  LinearProgress,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Typography,\n} from '@mui/material'\nimport {\n  selectPolarItemSelectedIndex,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { setPolartemItemSelectedIndex } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const PolarPlot = React.memo(() => {\n  const { filePath: path } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const isPending = useSelector(selectPolarDataIsPending(path))\n  const isInitialized = useSelector(selectPolarDataIsInitialized(path))\n  const error = useSelector(selectPolarDataError(path))\n  const isFulfilled = useSelector(selectPolarDataIsFulfilled(path))\n\n  React.useEffect(() => {\n    if (!isInitialized) {\n      dispatch(getPolarData({ path }))\n    }\n  }, [dispatch, isInitialized, path])\n\n  if (isPending) {\n    return <LinearProgress />\n  } else if (error != null) {\n    return <Typography color=\"error\">{error}</Typography>\n  } else if (isFulfilled) {\n    return <PolarPlotImple />\n  } else {\n    return null\n  }\n})\n\nconst PolarPlotImple = React.memo(() => {\n  const { filePath: path, itemId } = React.useContext(DisplayDataContext)\n  const polarData = useSelector(selectPolarData(path))\n  const columns = useSelector(selectPolarColumns(path))\n  const index = useSelector(selectPolarIndex(path))\n  const selectedIndex = useSelector(selectPolarItemSelectedIndex(itemId))\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n\n  const data = React.useMemo(\n    () =>\n      polarData != null\n        ? [\n            {\n              type: 'scatterpolar',\n              mode: 'lines+markae',\n              theta: [...columns, columns[0]],\n              r: [...polarData[selectedIndex], polarData[selectedIndex][0]],\n            },\n          ]\n        : [],\n    [polarData, columns, selectedIndex],\n  )\n\n  const layout = React.useMemo(\n    () => ({\n      width: width,\n      height: height - 120,\n      dragmode: 'pan',\n      margin: {\n        t: 60, // top\n        l: 50, // left\n        b: 30, // bottom\n      },\n      autosize: true,\n      xaxis: {\n        tickvals: columns,\n      },\n    }),\n    [width, height, columns],\n  )\n\n  return (\n    <>\n      <Box sx={{ display: 'flex' }}>\n        <Box sx={{ flexGrow: 1, ml: 1 }}>\n          <PolarItemIndexSelect index={index} />\n        </Box>\n      </Box>\n      <PlotlyChart data={data} layout={layout} />\n    </>\n  )\n})\n\nconst PolarItemIndexSelect = React.memo<{ index: number[] }>(({ index }) => {\n  const { itemId } = React.useContext(DisplayDataContext)\n  const dispatch = useDispatch()\n  const selectedIndex = useSelector(selectPolarItemSelectedIndex(itemId))\n\n  const handleChange = (event: SelectChangeEvent<number>) => {\n    dispatch(\n      setPolartemItemSelectedIndex({\n        itemId,\n        selectedIndex: Number(event.target.value),\n      }),\n    )\n  }\n\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>index</InputLabel>\n      <Select label=\"smooth\" value={selectedIndex} onChange={handleChange}>\n        {index.map((_, i) => (\n          <MenuItem key={i} value={i}>\n            {i}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport {\n  selectVisualizeDataFilePath,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { DisplayDataContext } from './DataContext'\nimport { HeatMapPlot } from './Plot/HeatMapPlot'\nimport { ImagePlot } from './Plot/ImagePlot'\nimport { RoiPlot } from './Plot/RoiPlot'\nimport { ScatterPlot } from './Plot/ScatterPlot'\nimport { CsvPlot } from './Plot/CsvPlot'\nimport { TimeSeriesPlot } from './Plot/TimeSeriesPlot'\nimport { BarPlot } from './Plot/BarPlot'\nimport { HTMLPlot } from './Plot/HTMLPlot'\nimport { HistogramPlot } from './Plot/HistogramPlot'\nimport { LinePlot } from './Plot/LinePlot'\nimport { PiePlot } from './Plot/PiePlot'\nimport { PolarPlot } from './Plot/PolarPlot'\n\nexport const DisplayDataItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const nodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  if (filePath != null && dataType != null) {\n    return (\n      <DisplayDataContext.Provider\n        value={{ nodeId, filePath, dataType, itemId }}\n      >\n        <DisplayPlot dataType={dataType} />\n      </DisplayDataContext.Provider>\n    )\n  } else {\n    return <div>Please select item correctly.</div>\n  }\n})\n\nconst DisplayPlot = React.memo<{\n  dataType: DATA_TYPE\n}>(({ dataType }) => {\n  switch (dataType) {\n    case DATA_TYPE_SET.CSV:\n      return <CsvPlot />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesPlot />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatMapPlot />\n    case DATA_TYPE_SET.IMAGE:\n      return <ImagePlot />\n    case DATA_TYPE_SET.ROI:\n      return <RoiPlot />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterPlot />\n    case DATA_TYPE_SET.BAR:\n      return <BarPlot />\n    case DATA_TYPE_SET.HTML:\n      return <HTMLPlot />\n    case DATA_TYPE_SET.HISTOGRAM:\n      return <HistogramPlot />\n    case DATA_TYPE_SET.LINE:\n      return <LinePlot />\n    case DATA_TYPE_SET.PIE:\n      return <PiePlot />\n    case DATA_TYPE_SET.POLAR:\n      return <PolarPlot />\n    default:\n      return null\n  }\n})\n","import { useDispatch, useSelector } from 'react-redux'\nimport Tabs, { tabsClasses } from '@mui/material/Tabs'\nimport Tab from '@mui/material/Tab'\nimport Dialog from '@mui/material/Dialog'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport DialogContent from '@mui/material/DialogContent'\nimport IconButton from '@mui/material/IconButton'\nimport CloseIcon from '@mui/icons-material/Close'\nimport Box from '@mui/material/Box'\nimport React from 'react'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { selectAlgorithmName } from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  selectPipelineNodeResultOutputKeyList,\n  selectPipelineNodeResultOutputFileDataType,\n  selectPipelineNodeResultOutputFilePath,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { selectVisualizeItemIdForWorkflowDialog } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  addItemForWorkflowDialog,\n  deleteAllItemForWorkflowDialog,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { DisplayDataItem } from 'components/Workspace/Visualize/DisplayDataItem'\n\nexport const AlgorithmOutputDialog = React.memo<{\n  open: boolean\n  onClose: () => void\n  nodeId: string\n}>(({ open, onClose, nodeId }) => {\n  const dispatch = useDispatch()\n  const closeFn = () => {\n    onClose()\n    dispatch(deleteAllItemForWorkflowDialog())\n  }\n  return (\n    <Dialog open={open} onClose={closeFn} fullWidth>\n      <TitleWithCloseButton onClose={closeFn} nodeId={nodeId} />\n      <DialogContent\n        dividers\n        sx={{\n          pt: 1,\n          px: 2,\n        }}\n      >\n        {open && <OutputViewer nodeId={nodeId} />}\n      </DialogContent>\n    </Dialog>\n  )\n})\n\nconst TitleWithCloseButton = React.memo<{\n  onClose: () => void\n  nodeId: string\n}>(({ nodeId, onClose }) => {\n  const nodeName = useSelector(selectAlgorithmName(nodeId))\n  return (\n    <DialogTitle sx={{ m: 0, p: 2 }}>\n      Output of {nodeName}\n      <IconButton\n        onClick={onClose}\n        sx={{\n          position: 'absolute',\n          right: 8,\n          top: 10,\n        }}\n      >\n        <CloseIcon />\n      </IconButton>\n    </DialogTitle>\n  )\n})\n\nconst OutputViewer = React.memo<{ nodeId: string }>(({ nodeId }) => {\n  const outputKeyList = useSelector(\n    selectPipelineNodeResultOutputKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  const [selectedOutoutKey, setSelectedOutputKey] = React.useState(\n    outputKeyList[0],\n  )\n  return (\n    <>\n      <OutputSelectTabs\n        outputKeyList={outputKeyList}\n        selectedOutoutKey={selectedOutoutKey}\n        onSelectOutput={setSelectedOutputKey}\n      />\n      <DisplayDataView nodeId={nodeId} outputKey={selectedOutoutKey} />\n    </>\n  )\n})\n\nconst OutputSelectTabs = React.memo<{\n  selectedOutoutKey: string\n  outputKeyList: string[]\n  onSelectOutput: (selectedKey: string) => void\n}>(({ selectedOutoutKey, outputKeyList, onSelectOutput }) => {\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\n    onSelectOutput(newValue)\n  }\n  return (\n    <Tabs\n      value={selectedOutoutKey}\n      onChange={handleChange}\n      variant=\"scrollable\"\n      scrollButtons=\"auto\"\n      sx={{\n        [`& .${tabsClasses.scrollButtons}`]: {\n          '&.Mui-disabled': { opacity: 0.3 },\n        },\n      }}\n    >\n      {outputKeyList.map((outputKey) => (\n        <Tab\n          value={outputKey}\n          label={outputKey}\n          sx={{\n            textTransform: 'none',\n          }}\n        />\n      ))}\n    </Tabs>\n  )\n})\n\nconst DisplayDataView = React.memo<{ nodeId: string; outputKey: string }>(\n  ({ nodeId, outputKey }) => {\n    const dispatch = useDispatch()\n    const filePath = useSelector(\n      selectPipelineNodeResultOutputFilePath(nodeId, outputKey),\n    )\n    const dataType = useSelector(\n      selectPipelineNodeResultOutputFileDataType(nodeId, outputKey),\n    )\n    const itemId = useSelector(\n      selectVisualizeItemIdForWorkflowDialog(nodeId, filePath, dataType),\n    )\n    React.useEffect(() => {\n      if (itemId === null) {\n        dispatch(addItemForWorkflowDialog({ nodeId, filePath, dataType }))\n      }\n    }, [dispatch, nodeId, filePath, dataType, itemId])\n    return (\n      <Box\n        sx={{\n          mx: 1,\n          my: 2,\n        }}\n      >\n        {itemId != null && <DisplayDataItem itemId={itemId} />}\n      </Box>\n    )\n  },\n)\n","import { FILE_TREE_TYPE } from 'api/files/Files'\nimport { RootState } from '../../store'\n\nexport const selectFilesTree =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) => {\n    if (state.filesTree[fileType] != null) {\n      return state.filesTree[fileType]\n    } else {\n      return undefined\n    }\n  }\n\nexport const selectFilesTreeNodes =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.tree\n\nexport const selectFilesIsLatest =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLatest ?? false\n\nexport const selectFilesIsLoading =\n  (fileType: FILE_TREE_TYPE) => (state: RootState) =>\n    selectFilesTree(fileType)(state)?.isLoading ?? false\n","export const FILES_TREE_SLICE_NAME = 'filesTree'\n\nexport type TreeNodeType = DirNode | FileNode\n\nexport interface NodeBase {\n  path: string\n  name: string\n  isDir: boolean\n}\n\nexport interface DirNode extends NodeBase {\n  isDir: true\n  nodes: TreeNodeType[]\n}\n\nexport interface FileNode extends NodeBase {\n  isDir: false\n}\n\nexport interface FilesTree {\n  [fileType: string]: {\n    isLatest: boolean\n    isLoading: boolean\n    tree: TreeNodeType[]\n  }\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  FILE_TREE_TYPE,\n  getFilesTreeApi,\n  TreeNodeTypeDTO,\n} from 'api/files/Files'\n\nimport { FILES_TREE_SLICE_NAME } from './FilesTreeType'\n\nexport const getFilesTree = createAsyncThunk<\n  TreeNodeTypeDTO[],\n  { workspaceId: number; fileType: FILE_TREE_TYPE }\n>(\n  `${FILES_TREE_SLICE_NAME}/getFilesTree`,\n  async ({ workspaceId, fileType }, thunkAPI) => {\n    try {\n      const response = await getFilesTreeApi(workspaceId, fileType)\n      return response\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e)\n    }\n  },\n)\n","import { TreeNodeTypeDTO } from 'api/files/Files'\nimport { TreeNodeType } from './FilesTreeType'\n\nexport function convertToTreeNodeType(dto: TreeNodeTypeDTO[]): TreeNodeType[] {\n  return dto.map((node) =>\n    node.isdir\n      ? {\n          path: node.path,\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n        }\n      : {\n          path: node.path,\n          name: node.name,\n          isDir: false,\n        },\n  )\n}\n\nexport function isDirNodeByPath(path: string, tree: TreeNodeType[]): boolean {\n  const node = getNodeByPath(path, tree)\n  if (node != null) {\n    return node.isDir\n  } else {\n    throw new Error(`failed to get node: ${path}`)\n  }\n}\n\nexport function getNodeByPath(\n  path: string,\n  tree: TreeNodeType[],\n): TreeNodeType | null {\n  let targetNode: TreeNodeType | null = null\n  for (const node of tree) {\n    if (path === node.path) {\n      targetNode = node\n      break\n    } else {\n      if (node.isDir) {\n        targetNode = getNodeByPath(path, node.nodes)\n        if (targetNode != null) {\n          break\n        }\n      }\n    }\n  }\n  return targetNode\n}\n","import Dialog from '@mui/material/Dialog'\nimport { useDispatch, useSelector } from 'react-redux'\nimport TreeView from '@mui/lab/TreeView'\nimport TreeItem from '@mui/lab/TreeItem'\nimport FolderIcon from '@mui/icons-material/Folder'\nimport InsertDriveFileOutlinedIcon from '@mui/icons-material/InsertDriveFileOutlined'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport Typography from '@mui/material/Typography'\nimport LinearProgress from '@mui/material/LinearProgress'\nimport Button from '@mui/material/Button'\nimport Checkbox, { CheckboxProps } from '@mui/material/Checkbox'\n\nimport Box from '@mui/material/Box'\nimport { useTheme } from '@mui/material/styles'\nimport React from 'react'\n\nimport {\n  selectFilesIsLatest,\n  selectFilesIsLoading,\n  selectFilesTreeNodes,\n} from 'store/slice/FilesTree/FilesTreeSelectors'\nimport { getFilesTree } from 'store/slice/FilesTree/FilesTreeAction'\nimport { FILE_TREE_TYPE, FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { TreeNodeType } from 'store/slice/FilesTree/FilesTreeType'\nimport {\n  getNodeByPath,\n  isDirNodeByPath,\n} from 'store/slice/FilesTree/FilesTreeUtils'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\ntype FileSelectDialogProps = {\n  initialFilePath: string[] | string\n  onClickOk: (path: string[] | string) => void\n  fileType?: FILE_TREE_TYPE\n  title?: string\n  open: boolean\n  onClickCancel: () => void\n  multiSelect: boolean\n}\n\nexport const FileSelectDialog = React.memo<FileSelectDialogProps>(\n  function FileSelectDialog({\n    open,\n    initialFilePath,\n    onClickCancel,\n    onClickOk,\n    title,\n    fileType = FILE_TREE_TYPE_SET.ALL,\n    multiSelect,\n  }) {\n    React.useEffect(() => {\n      setSelectedFilePath(initialFilePath)\n    }, [initialFilePath])\n    const [selectedFilePath, setSelectedFilePath] =\n      React.useState(initialFilePath)\n    const onCancel = () => {\n      setSelectedFilePath(initialFilePath) // 選択内容を反映させない\n      onClickCancel()\n    }\n    const onOk = () => {\n      onClickOk(selectedFilePath)\n    }\n    const theme = useTheme()\n    return (\n      <Dialog open={open} fullWidth>\n        <DialogTitle>{title ?? 'Select File'}</DialogTitle>\n        <DialogContent dividers>\n          <div\n            style={{\n              height: 300,\n              overflow: 'auto',\n              marginBottom: theme.spacing(1),\n              border: '1px solid',\n              padding: theme.spacing(1),\n              borderColor: theme.palette.divider,\n            }}\n          >\n            <FileTreeView\n              setSelectedFilePath={setSelectedFilePath}\n              multiSelect={multiSelect}\n              fileType={fileType}\n              selectedFilePath={selectedFilePath}\n            />\n          </div>\n          <Typography variant=\"subtitle1\">Select File</Typography>\n          <FilePathSelectedListView path={selectedFilePath} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={onCancel} variant=\"outlined\" color=\"inherit\">\n            cancel\n          </Button>\n          <Button onClick={onOk} color=\"primary\" variant=\"outlined\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    )\n  },\n)\n\nconst FileTreeView = React.memo<{\n  setSelectedFilePath: (path: string[] | string) => void\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  fileType: FILE_TREE_TYPE\n}>(({ setSelectedFilePath, selectedFilePath, fileType, multiSelect }) => {\n  const [tree, isLoading] = useFileTree(fileType)\n  const onNodeSelectHandler = (\n    event: React.SyntheticEvent,\n    nodeIds: Array<string> | string,\n  ) => {\n    if (!multiSelect && tree != null) {\n      // multiSelectがfalseの場合、ディレクトリは選択しない\n      const path = nodeIds as string\n      if (!isDirNodeByPath(path, tree)) {\n        setSelectedFilePath(path)\n      }\n    }\n  }\n  // multiSelectでチェックボックスを使用する時用のハンドラ\n  const onCheckFile = (path: string) => {\n    if (Array.isArray(selectedFilePath)) {\n      if (selectedFilePath.includes(path)) {\n        setSelectedFilePath(\n          selectedFilePath.filter((selectedPath) => path !== selectedPath),\n        )\n      } else {\n        setSelectedFilePath(selectedFilePath.concat(path))\n      }\n    }\n  }\n  const onCheckDir = (path: string, checked: boolean) => {\n    if (tree != null && Array.isArray(selectedFilePath)) {\n      const node = getNodeByPath(path, tree)\n      if (node != null && node.isDir) {\n        const childrenFilePathList = node.nodes\n          .filter((node) => !node.isDir)\n          .map((node) => node.path)\n        if (checked) {\n          setSelectedFilePath(\n            // concat時の重複を削除\n            Array.from(new Set(selectedFilePath.concat(childrenFilePathList))),\n          )\n        } else {\n          setSelectedFilePath(\n            selectedFilePath.filter(\n              (selectedPath) => !childrenFilePathList.includes(selectedPath),\n            ),\n          )\n        }\n      }\n    }\n  }\n  return (\n    <div>\n      {isLoading && <LinearProgress />}\n      <TreeView\n        disableSelection={multiSelect}\n        multiSelect={multiSelect}\n        onNodeSelect={onNodeSelectHandler}\n      >\n        {tree?.map((node) => (\n          <TreeNode\n            node={node}\n            selectedFilePath={selectedFilePath}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeView>\n    </div>\n  )\n})\n\nconst TreeNode = React.memo<{\n  node: TreeNodeType\n  selectedFilePath: string[] | string\n  multiSelect: boolean\n  onCheckFile: (path: string) => void\n  onCheckDir: (path: string, checked: boolean) => void\n}>(({ node, selectedFilePath, multiSelect, onCheckDir, onCheckFile }) => {\n  if (node.isDir) {\n    const allChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => selectedFilePath.includes(filePath))\n    const allNotChecked =\n      Array.isArray(selectedFilePath) &&\n      node.nodes\n        .filter((node) => !node.isDir)\n        .map((node) => node.path)\n        .every((filePath) => !selectedFilePath.includes(filePath))\n    const indeterminate = !(allChecked || allNotChecked)\n    return (\n      <TreeItem\n        icon={<FolderIcon htmlColor=\"skyblue\" />}\n        nodeId={node.path}\n        label={\n          multiSelect && node.nodes.filter((node) => !node.isDir).length > 0 ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                indeterminate,\n                checked: allChecked,\n                onClick: (e) => {\n                  e.stopPropagation() // on/offのクリックにつられてTreeを開閉させないようにする\n                },\n                onChange: (e) => onCheckDir(node.path, e.target.checked),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n      >\n        {node.nodes.map((childNode, i) => (\n          <TreeNode\n            node={childNode}\n            selectedFilePath={selectedFilePath}\n            key={i}\n            multiSelect={multiSelect}\n            onCheckDir={onCheckDir}\n            onCheckFile={onCheckFile}\n          />\n        ))}\n      </TreeItem>\n    )\n  } else {\n    return (\n      <TreeItem\n        icon={<InsertDriveFileOutlinedIcon fontSize=\"small\" />}\n        nodeId={node.path}\n        label={\n          multiSelect ? (\n            <TreeItemLabel\n              label={node.name}\n              checkboxProps={{\n                checked:\n                  Array.isArray(selectedFilePath) &&\n                  selectedFilePath.includes(node.path),\n                onChange: () => onCheckFile(node.path),\n              }}\n            />\n          ) : (\n            node.name\n          )\n        }\n        onClick={() => onCheckFile(node.path)}\n      />\n    )\n  }\n})\n\nconst TreeItemLabel = React.memo<{\n  label: string\n  checkboxProps: CheckboxProps\n}>(({ label, checkboxProps }) => {\n  return (\n    <Box display=\"flex\" alignItems=\"center\">\n      <Box flexGrow={1}>{label}</Box>\n      <Box>\n        <Checkbox\n          {...checkboxProps}\n          disableRipple\n          size=\"small\"\n          sx={{\n            marginRight: '4px',\n            padding: '2px',\n          }}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectedListView = React.memo<{ path: string | string[] }>(\n  ({ path }) => {\n    return (\n      <Typography variant=\"subtitle2\">\n        {!!path\n          ? Array.isArray(path)\n            ? path.map((text) => <li>{text}</li>)\n            : path\n          : '---'}\n      </Typography>\n    )\n  },\n)\n\nfunction useFileTree(\n  fileType: FILE_TREE_TYPE,\n): [TreeNodeType[] | undefined, boolean] {\n  const dispatch = useDispatch()\n  const tree = useSelector(selectFilesTreeNodes(fileType))\n  const isLatest = useSelector(selectFilesIsLatest(fileType))\n  const isLoading = useSelector(selectFilesIsLoading(fileType))\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  React.useEffect(() => {\n    if (workspaceId && !isLatest && !isLoading) {\n      dispatch(getFilesTree({workspaceId, fileType}))\n    }\n  }, [workspaceId, isLatest, isLoading, fileType, dispatch])\n  return [tree, isLoading]\n}\n","import React, { DragEvent, MouseEvent, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  Controls,\n  Connection,\n  Edge,\n  Node,\n  OnNodesChange,\n  OnEdgesChange,\n  ReactFlowInstance,\n  OnMove,\n  Viewport,\n} from 'react-flow-renderer'\nimport { useDrop } from 'react-dnd'\n\nimport 'style/flow.css'\nimport {\n  editFlowNodePositionById,\n  setEdgesChange,\n  setFlowEdges,\n  setFlowPosition,\n  setNodesChange,\n} from 'store/slice/FlowElement/FlowElementSlice'\nimport {\n  selectFlowEdges,\n  selectFlowNodes,\n  selectFlowPosition,\n} from 'store/slice/FlowElement/FlowElementSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { ToolBar } from 'components/Workspace/ToolBar'\nimport {\n  reactFlowEdgeTypes,\n  reactFlowNodeTypes,\n} from './FlowChartNode/ReactFlowNodeTypesConst'\nimport {\n  DND_ITEM_TYPE_SET,\n  TreeItemCollectedProps,\n  TreeItemDragObject,\n  TreeItemDropResult,\n} from './DnDItemType'\nimport { AlgorithmOutputDialog } from './FlowChartNode/AlgorithmOutputDialog'\nimport {\n  DialogContext,\n  ErrorDialogValue,\n  OpenDialogValue,\n} from 'components/Workspace/FlowChart/DialogContext'\nimport { FileSelectDialog } from 'components/common/FileSelectDialog'\nimport { FormHelperText, Popover } from '@mui/material'\n\nconst initDialogFile = {\n  filePath: '',\n  open: false,\n  fileTreeType: undefined,\n  multiSelect: false,\n  onSelectFile: () => null,\n}\n\nexport const ReactFlowComponent = React.memo<UseRunPipelineReturnType>(\n  (props) => {\n    const flowNodes = useSelector(selectFlowNodes)\n    const flowEdges = useSelector(selectFlowEdges)\n    const dispatch = useDispatch()\n    const [dialogNodeId, setDialogNodeId] = useState('')\n    const [dialogFile, setDialogFile] =\n      useState<OpenDialogValue>(initDialogFile)\n    const [messageError, setMessageError] = useState<ErrorDialogValue>({\n      anchorElRef: { current: null },\n      message: '',\n    })\n\n    const onConnect = (params: Connection | Edge) => {\n      dispatch(\n        setFlowEdges(\n          addEdge(\n            {\n              ...params,\n              animated: false,\n              style: { width: 5 },\n              type: 'buttonedge',\n            },\n            flowEdges,\n          ),\n        ),\n      )\n    }\n\n    const onNodesChange: OnNodesChange = (changes) =>\n      dispatch(setNodesChange(changes))\n    const onEdgesChange: OnEdgesChange = (changes) =>\n      dispatch(setEdgesChange(changes))\n\n    const onDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'move'\n    }\n\n    const onNodeDragStop = (event: MouseEvent, node: Node) => {\n      dispatch(\n        editFlowNodePositionById({\n          nodeId: node.id,\n          coord: { x: node.position.x, y: node.position.y },\n        }),\n      )\n    }\n\n    const flowPosition = useSelector(selectFlowPosition)\n\n    const onMoveEnd: OnMove = (event, viewport: Viewport) => {\n      if (event !== undefined) {\n        dispatch(setFlowPosition([viewport.x, viewport.y, viewport.zoom]))\n      }\n    }\n\n    const [reactFlowInstance, setReactFlowInstance] =\n      React.useState<ReactFlowInstance>()\n\n    const onInit = (reactFlowInstance: ReactFlowInstance) =>\n      setReactFlowInstance(reactFlowInstance)\n\n    const wrapparRef = React.useRef<HTMLDivElement>(null)\n    const [, drop] = useDrop<\n      TreeItemDragObject,\n      TreeItemDropResult,\n      TreeItemCollectedProps\n    >(\n      () => ({\n        accept: DND_ITEM_TYPE_SET.TREE_ITEM,\n        drop: (_, monitor) => {\n          let position: TreeItemDropResult['position'] = undefined\n          const monitorOffset = monitor.getClientOffset()\n          if (\n            wrapparRef.current != null &&\n            monitorOffset != null &&\n            reactFlowInstance != null\n          ) {\n            position = reactFlowInstance.project({\n              x: monitorOffset.x - wrapparRef.current.offsetLeft - 40,\n              y: monitorOffset.y - wrapparRef.current.offsetTop - 40,\n            })\n          }\n          return { position }\n        },\n      }),\n      [reactFlowInstance],\n    )\n    return (\n      <div className=\"flow\">\n        <DialogContext.Provider\n          value={{\n            onOpen: setDialogNodeId,\n            onOpenDialogFile: setDialogFile,\n            onMessageError: setMessageError,\n          }}\n        >\n          <ReactFlowProvider>\n            <div className=\"reactflow-wrapper\" ref={wrapparRef}>\n              <ReactFlow\n                ref={drop}\n                nodes={flowNodes}\n                edges={flowEdges}\n                onNodesChange={onNodesChange}\n                onEdgesChange={onEdgesChange}\n                onConnect={onConnect}\n                onInit={onInit}\n                onDragOver={onDragOver}\n                onNodeDragStop={onNodeDragStop}\n                nodeTypes={reactFlowNodeTypes}\n                edgeTypes={reactFlowEdgeTypes}\n                defaultPosition={[flowPosition[0], flowPosition[1]]}\n                defaultZoom={flowPosition[2]}\n                onMoveEnd={onMoveEnd}\n              >\n                <ToolBar {...props} />\n                <Controls />\n              </ReactFlow>\n            </div>\n          </ReactFlowProvider>\n          {dialogNodeId && (\n            <AlgorithmOutputDialog\n              nodeId={dialogNodeId}\n              open\n              onClose={() => setDialogNodeId('')}\n            />\n          )}\n          {dialogFile.open && (\n            <FileSelectDialog\n              multiSelect={dialogFile.multiSelect}\n              initialFilePath={dialogFile.filePath}\n              open={dialogFile.open}\n              onClickOk={(path) => {\n                dialogFile.onSelectFile(path)\n                setDialogFile(initDialogFile)\n              }}\n              onClickCancel={() => {\n                setDialogFile(initDialogFile)\n              }}\n              fileType={dialogFile.fileTreeType}\n            />\n          )}\n          {messageError?.message && (\n            <Popover\n              open\n              anchorEl={messageError.anchorElRef.current}\n              onClose={() =>\n                setMessageError({\n                  anchorElRef: { current: null },\n                  message: '',\n                })\n              }\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              transformOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n            >\n              <div style={{ margin: 8 }}>\n                <FormHelperText error={true}>\n                  {messageError.message}\n                </FormHelperText>\n              </div>\n            </Popover>\n          )}\n        </DialogContext.Provider>\n      </div>\n    )\n  },\n)\n","import { RootState } from 'store/store'\n\nexport const selectRightDrawerIsOpen = (state: RootState) =>\n  state.rightDrawer.open\n\nexport const selectRightDrawerMode = (state: RootState) =>\n  state.rightDrawer.mode\n\nexport const selectRightDrawerCurrentNodeId = (state: RootState) =>\n  state.rightDrawer.currendNodeId\n","import { ParamMap } from 'utils/param/ParamType'\n\nexport const ALGORITHM_NODE_SLICE_NAME = 'algorithmNode'\n\nexport type AlgorithmNode = {\n  [nodeId: string]: AlgrithmNodeType\n}\n\ntype AlgrithmNodeType = {\n  functionPath: string\n  name: string\n  params: ParamMap | null\n  isUpdated: boolean\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport { getAlgoParamsApi } from 'api/params/Params'\nimport { ParamDTO } from 'utils/param/ParamType'\nimport { ALGORITHM_NODE_SLICE_NAME } from './AlgorithmNodeType'\n\nexport const getAlgoParams = createAsyncThunk<\n  ParamDTO,\n  { nodeId: string; algoName: string }\n>(\n  `${ALGORITHM_NODE_SLICE_NAME}/getAlgoParams`,\n  async ({ algoName }, thunkAPI) => {\n    const { rejectWithValue } = thunkAPI\n    try {\n      const response = await getAlgoParamsApi(algoName)\n      return response\n    } catch (e) {\n      return rejectWithValue(e)\n    }\n  },\n)\n","import { createSlice, isAnyOf, PayloadAction } from '@reduxjs/toolkit'\n\nimport { convertToParamMap, getChildParam } from 'utils/param/ParamUtils'\nimport {\n  deleteFlowNodes,\n  deleteFlowNodeById,\n} from '../FlowElement/FlowElementSlice'\nimport { NODE_TYPE_SET } from '../FlowElement/FlowElementType'\nimport { fetchExperiment } from '../Experiments/ExperimentsActions'\nimport {\n  reproduceWorkflow,\n  importWorkflowConfig,\n} from 'store/slice/Workflow/WorkflowActions'\nimport { getAlgoParams } from './AlgorithmNodeActions'\nimport { ALGORITHM_NODE_SLICE_NAME, AlgorithmNode } from './AlgorithmNodeType'\nimport { isAlgorithmNodePostData } from 'api/run/RunUtils'\nimport { run, runByCurrentUid } from '../Pipeline/PipelineActions'\nimport { addAlgorithmNode } from '../FlowElement/FlowElementActions'\n\nconst initialState: AlgorithmNode = {}\n\nexport const algorithmNodeSlice = createSlice({\n  name: ALGORITHM_NODE_SLICE_NAME,\n  initialState,\n  reducers: {\n    updateParam: (\n      state,\n      action: PayloadAction<{\n        nodeId: string\n        path: string\n        newValue: unknown\n      }>,\n    ) => {\n      const { nodeId, path, newValue } = action.payload\n      const param = state[nodeId].params\n      if (param != null) {\n        const target = getChildParam(path, param)\n        if (target != null) {\n          target.value = newValue\n          state[nodeId].isUpdated = true\n        }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getAlgoParams.fulfilled, (state, action) => {\n        const { nodeId } = action.meta.arg\n        state[nodeId].params = convertToParamMap(action.payload)\n      })\n      .addCase(addAlgorithmNode.fulfilled, (state, action) => {\n        const { node, functionPath, name } = action.meta.arg\n        const params = action.payload\n        if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n          state[node.id] = {\n            functionPath,\n            name,\n            params: convertToParamMap(params),\n            isUpdated: false,\n          }\n        }\n      })\n      .addCase(deleteFlowNodes, (state, action) => {\n        action.payload.forEach((node) => {\n          if (node.data?.type === NODE_TYPE_SET.ALGORITHM) {\n            delete state[node.id]\n          }\n        })\n      })\n      .addCase(deleteFlowNodeById, (state, action) => {\n        if (Object.keys(state).includes(action.payload)) {\n          delete state[action.payload]\n        }\n      })\n      .addMatcher(\n        isAnyOf(\n          reproduceWorkflow.fulfilled,\n          importWorkflowConfig.fulfilled,\n          fetchExperiment.fulfilled,\n        ),\n        (_, action) => {\n          const newState: AlgorithmNode = {}\n          Object.values(action.payload.nodeDict)\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              if (node.data != null) {\n                newState[node.id] = {\n                  name: node.data.label,\n                  functionPath: node.data.path,\n                  params: node.data.param,\n                  isUpdated: false,\n                }\n              }\n            })\n          return newState\n        },\n      )\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => {\n          const runPostData = action.meta.arg.runPostData\n          Object.values(runPostData.nodeDict)\n            .filter(isAlgorithmNodePostData)\n            .forEach((node) => {\n              state[node.id].isUpdated = false\n            })\n        },\n      )\n  },\n})\n\nexport const { updateParam } = algorithmNodeSlice.actions\nexport default algorithmNodeSlice.reducer\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Typography from '@mui/material/Typography'\n\nimport {\n  selectAlgorithmName,\n  selectAlgorithmParamsExit,\n  selectAlgorithmParamsKeyList,\n  selectAlgorithmParamsValue,\n  selectAlgorithmParam,\n} from 'store/slice/AlgorithmNode/AlgorithmNodeSelectors'\nimport { updateParam } from 'store/slice/AlgorithmNode/AlgorithmNodeSlice'\nimport { getAlgoParams } from 'store/slice/AlgorithmNode/AlgorithmNodeActions'\nimport { createParamFormItemComponent } from 'components/common/ParamFormItemCreator'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { ParamFormContext } from './RightDrawer'\n\nexport const AlgorithmParamForm = React.memo(() => {\n  const nodeId = React.useContext(ParamFormContext)\n  const dispatch = useDispatch()\n  const algoName = useSelector(selectAlgorithmName(nodeId))\n  const algoParamIsLoaded = useSelector(selectAlgorithmParamsExit(nodeId))\n  const paramKeyList = useSelector(\n    selectAlgorithmParamsKeyList(nodeId),\n    arrayEqualityFn,\n  )\n  useEffect(() => {\n    if (!algoParamIsLoaded) {\n      dispatch(getAlgoParams({ nodeId, algoName }))\n    }\n  }, [dispatch, nodeId, algoName, algoParamIsLoaded])\n  return (\n    <div style={{ padding: 8 }}>\n      <Typography variant=\"h5\">{algoName}</Typography>\n      <div style={{ paddingLeft: 8 }}>\n        {paramKeyList.map((paramKey) => (\n          <ParamItem key={paramKey} paramKey={paramKey} />\n        ))}\n      </div>\n    </div>\n  )\n})\n\nconst ParamItem = React.memo<{ paramKey: string }>(({ paramKey }) => {\n  const nodeId = React.useContext(ParamFormContext)\n  const Component = createParamFormItemComponent({\n    paramSelector: (paramKey) => selectAlgorithmParam(nodeId, paramKey),\n    paramValueSelector: (path) => selectAlgorithmParamsValue(nodeId, path),\n    paramUpdateActionCreator: (path, newValue) =>\n      updateParam({ nodeId, path, newValue }),\n  })\n  return <Component paramKey={paramKey} />\n})\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Drawer, { drawerClasses } from '@mui/material/Drawer'\nimport Toolbar from '@mui/material/Toolbar'\nimport Typography from '@mui/material/Typography'\nimport Divider from '@mui/material/Divider'\nimport IconButton from '@mui/material/IconButton'\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight'\nimport Box from '@mui/material/Box'\nimport {\n  selectRightDrawerCurrentNodeId,\n  selectRightDrawerIsOpen,\n  selectRightDrawerMode,\n} from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport {\n  closeRightDrawer,\n  RIGHT_DRAWER_MODE,\n} from 'store/slice/RightDrawer/RightDrawerSlice'\nimport { NWBSettingContents } from './NWB'\nimport { RootState } from 'store/store'\nimport { AlgorithmParamForm } from './AlgorithmParamForm'\nimport { SnakemakeContents } from './Snakemake'\nimport { RIGHT_DRAWER_WIDTH } from 'const/Layout'\n\nconst RightDrawer: React.FC = () => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  const dispatch = useDispatch()\n  const onClick = () => dispatch(closeRightDrawer())\n  const title = useSelector((state: RootState) => {\n    const mode = selectRightDrawerMode(state)\n    switch (mode) {\n      case RIGHT_DRAWER_MODE.NWB:\n        return 'NWB Setting'\n      case RIGHT_DRAWER_MODE.PARAM_FORM:\n        return 'Param From'\n      case RIGHT_DRAWER_MODE.SNAKEMAKE:\n        return 'Snakemake'\n      default:\n        return 'none'\n    }\n  })\n  return (\n    <StyledDrawer open={open} anchor=\"right\" variant=\"persistent\">\n      <Toolbar />\n      <Box display=\"flex\" alignItems=\"center\">\n        <IconButton color=\"inherit\" onClick={onClick} size=\"large\">\n          <ChevronRightIcon />\n        </IconButton>\n        <Typography variant=\"h6\">{title}</Typography>\n      </Box>\n      <Divider />\n      <MainContents>\n        <Contents />\n      </MainContents>\n    </StyledDrawer>\n  )\n}\n\nconst Contents: React.FC = () => {\n  const mode = useSelector(selectRightDrawerMode)\n  switch (mode) {\n    case RIGHT_DRAWER_MODE.NWB:\n      return <NWBSettingContents />\n    case RIGHT_DRAWER_MODE.PARAM_FORM:\n      return <ParamFormConetent />\n    case RIGHT_DRAWER_MODE.SNAKEMAKE:\n      return <SnakemakeContents />\n    default:\n      return null\n  }\n}\n\n/**\n * nodeId\n */\nexport const ParamFormContext = React.createContext<string>('')\n\nconst ParamFormConetent: React.FC = () => {\n  const nodeId = useSelector(selectRightDrawerCurrentNodeId)\n  if (nodeId != null) {\n    return (\n      <ParamFormContext.Provider value={nodeId}>\n        <AlgorithmParamForm />\n      </ParamFormContext.Provider>\n    )\n  } else {\n    return null\n  }\n}\n\nconst StyledDrawer = styled(Drawer)({\n  width: RIGHT_DRAWER_WIDTH,\n  flexShrink: 0,\n  [`& .${drawerClasses.paper}`]: {\n    width: RIGHT_DRAWER_WIDTH,\n  },\n})\n\nconst MainContents = styled('main')({\n  height: '100%',\n})\n\nexport default RightDrawer\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectPipelineLatestUid } from 'store/slice/Pipeline/PipelineSelectors'\nimport { Divider, Typography, Grid } from '@mui/material'\nimport {\n  selectExperimentName,\n  selectExperimentsStatusIsFulfilled,\n} from 'store/slice/Experiments/ExperimentsSelectors'\n\nexport const CurrentPipelineInfo: React.FC = () => {\n  const uid = useSelector(selectPipelineLatestUid)\n  const isFulFilled = useSelector(selectExperimentsStatusIsFulfilled)\n\n  return (\n    <>\n      {uid && (\n        <>\n          <Grid container paddingX={2} paddingBottom={1}>\n            <ExperimentUidInfo uid={uid} />\n            {isFulFilled && <ExperimentNameInfo uid={uid} />}\n          </Grid>\n          <Divider />\n        </>\n      )}\n    </>\n  )\n}\n\nconst ExperimentUidInfo = React.memo<{ uid: string }>(({ uid }) => {\n  return <LabelValueGridRow label=\"ID\" value={uid} />\n})\n\nconst ExperimentNameInfo = React.memo<{ uid: string }>(({ uid }) => {\n  const name = useSelector(selectExperimentName(uid))\n  return <LabelValueGridRow label=\"NAME\" value={name} />\n})\n\nconst LabelValueGridRow = React.memo<{ label: string; value: string }>(\n  ({ label, value }) => {\n    return (\n      <>\n        <Grid item xs={4}>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {label}:\n          </Typography>\n        </Grid>\n        <Grid item xs={8}>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            {value}\n          </Typography>\n        </Grid>\n      </>\n    )\n  },\n)\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nimport { AlgorithmTreeView } from './TreeView'\nimport { ReactFlowComponent } from './ReactFlowComponent'\nimport RightDrawer from './RightDrawer'\nimport { selectRightDrawerIsOpen } from 'store/slice/RightDrawer/RightDrawerSelectors'\nimport { UseRunPipelineReturnType } from 'store/slice/Pipeline/PipelineHook'\nimport { CurrentPipelineInfo } from 'components/common/CurrentPipelineInfo'\nimport { CONTENT_HEIGHT, DRAWER_WIDTH, RIGHT_DRAWER_WIDTH } from 'const/Layout'\nimport { Box } from '@mui/material'\nimport { grey } from '@mui/material/colors'\n\nconst FlowChart = React.memo<UseRunPipelineReturnType>((props) => {\n  const open = useSelector(selectRightDrawerIsOpen)\n  return (\n    <RootDiv>\n      <DndProvider backend={HTML5Backend}>\n        <Box\n          sx={{\n            width: DRAWER_WIDTH,\n          }}\n          borderRight={1}\n          borderColor={grey[300]}\n        >\n          <CurrentPipelineInfo />\n          <DrawerContents>\n            <AlgorithmTreeView />\n          </DrawerContents>\n        </Box>\n\n        <MainContents open={open}>\n          <ReactFlowComponent {...props} />\n        </MainContents>\n      </DndProvider>\n      <RightDrawer />\n    </RootDiv>\n  )\n})\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n})\n\nconst DrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')<{ open: boolean }>(\n  ({ theme }) => ({\n    flexDirection: 'column',\n    flexGrow: 1,\n    minHeight: CONTENT_HEIGHT,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -RIGHT_DRAWER_WIDTH,\n  }),\n  ({ open, theme }) =>\n    open\n      ? {\n          transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n          marginRight: 0,\n        }\n      : undefined,\n)\n\nexport default FlowChart\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { styled } from '@mui/material/styles'\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport AddIcon from '@mui/icons-material/Add'\nimport Button from '@mui/material/Button'\nimport { pushInitialItemToNewRow } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nexport const VisualizeItemAddButton: React.FC = () => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(pushInitialItemToNewRow())\n  }\n  return (\n    <StyledPaper elevation={1} variant=\"outlined\">\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        height=\"100%\"\n      >\n        <StyledButton onClick={onClick}>\n          <AddIcon fontSize=\"large\" color=\"primary\" />\n        </StyledButton>\n      </Box>\n    </StyledPaper>\n  )\n}\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  width: 260,\n  height: 255,\n  border: 'dashed',\n  borderWidth: 2,\n  borderColor: theme.palette.divider,\n  margin: theme.spacing(1),\n}))\n\nconst StyledButton = styled(Button)({\n  width: '100%',\n  height: '100%',\n})\n","import React from 'react'\n\nexport function useMouseDragHandler(\n  onMouseDown: (event: React.MouseEvent) => {\n    onMouseMove: (this: Document, event: MouseEvent) => void\n    onMouseUp: (this: Document, event: MouseEvent) => void\n  },\n  dependencies: React.DependencyList,\n) {\n  return React.useCallback(\n    (event: React.MouseEvent) => {\n      const { onMouseMove, onMouseUp } = onMouseDown(event)\n      document.addEventListener('mousemove', onMouseMove)\n      document.addEventListener(\n        'mouseup',\n        (event) => {\n          document.removeEventListener('mousemove', onMouseMove)\n          onMouseUp.call(document, event)\n        },\n        { once: true },\n      )\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [dependencies],\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport IconButton from '@mui/material/IconButton'\nimport Menu from '@mui/material/Menu'\nimport MenuItem from '@mui/material/MenuItem'\nimport ListItemText from '@mui/material/ListItemText'\nimport ListItemIcon from '@mui/material/ListItemIcon'\nimport MoreVertIcon from '@mui/icons-material/MoreVert'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport AddIcon from '@mui/icons-material/Add'\nimport {\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { insertInitialItemToNextColumn } from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { deleteDisplayItem } from 'store/slice/VisualizeItem/VisualizeItemActions'\n\nexport const DisplayDataItemLayoutMenuIcon = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onClickDeleteMenu = () => {\n    // visualize Itemで同じpathのデータ個数を調べて、1だったら、displayも削除\n    dispatch(\n      deleteDisplayItem(\n        isSingleData && filePath != null && dataType != null\n          ? { itemId, deleteData: true, filePath, dataType }\n          : { itemId, deleteData: false },\n      ),\n    )\n  }\n  const onClickInsertMenu = () => {\n    dispatch(insertInitialItemToNextColumn(itemId))\n  }\n  return (\n    <PresentationalLayoutMenuIcon\n      onClickDeleteMenu={onClickDeleteMenu}\n      onClickInsertMenu={onClickInsertMenu}\n    />\n  )\n})\n\nconst PresentationalLayoutMenuIcon = React.memo<{\n  onClickDeleteMenu: () => void\n  onClickInsertMenu: () => void\n}>(({ onClickDeleteMenu, onClickInsertMenu }) => {\n  const [open, setOpen] = React.useState(false)\n  const anchorRef = React.useRef<HTMLButtonElement>(null)\n  const onClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.stopPropagation() // 親divのonClickを反応させないため\n    setOpen((prevOpen) => !prevOpen)\n  }\n  const onClose = () => {\n    setOpen(false)\n  }\n  const onClickDeleteMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickDeleteMenu()\n    setOpen(false)\n  }\n  const onClickInsertMenuFn: React.MouseEventHandler<HTMLLIElement> = (e) => {\n    e.stopPropagation()\n    onClickInsertMenu()\n    setOpen(false)\n  }\n  return (\n    <>\n      <IconButton ref={anchorRef} onClick={onClick}>\n        <MoreVertIcon />\n      </IconButton>\n      <Menu anchorEl={anchorRef.current} open={open} onClose={onClose}>\n        <MenuItem onClick={onClickInsertMenuFn}>\n          <ListItemIcon>\n            <AddIcon />\n          </ListItemIcon>\n          <ListItemText>Insert into next column</ListItemText>\n        </MenuItem>\n        <MenuItem onClick={onClickDeleteMenuFn}>\n          <ListItemIcon>\n            <DeleteIcon />\n          </ListItemIcon>\n          <ListItemText>Delete</ListItemText>\n        </MenuItem>\n      </Menu>\n    </>\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport FormControl from '@mui/material/FormControl'\nimport MenuItem from '@mui/material/MenuItem'\nimport InputLabel from '@mui/material/InputLabel'\nimport FormHelperText from '@mui/material/FormHelperText'\nimport Select from '@mui/material/Select'\nimport ListSubheader from '@mui/material/ListSubheader'\n\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { FILE_TYPE } from 'store/slice/InputNode/InputNodeType'\nimport { RootState } from 'store/store'\nimport { selectInputNode } from 'store/slice/InputNode/InputNodeSelectors'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { selectNodeLabelById } from 'store/slice/FlowElement/FlowElementSelectors'\nimport {\n  selectPipelineLatestUid,\n  selectPipelineNodeResultSuccessList,\n} from 'store/slice/Pipeline/PipelineSelectors'\nimport { getFileName } from 'store/slice/FlowElement/FlowElementUtils'\n\nexport const FilePathSelect: React.FC<{\n  dataType?: DATA_TYPE\n  selectedNodeId: string | null\n  selectedFilePath: string | null\n  onSelect: (nodeId: string, filePath: string, dataType: DATA_TYPE, outputKey?: string) => void\n  label?: string\n}> = ({ dataType, selectedNodeId, selectedFilePath, onSelect, label }) => {\n  const inputNodeFilePathInfoList = useSelector(\n    (state: RootState) => {\n      const inputNodes = selectInputNode(state)\n      return Object.entries(inputNodes)\n        .map(([nodeId, inputNode]) => ({\n          nodeId,\n          filePath: inputNode.selectedFilePath,\n          fileType: inputNode.fileType,\n          dataType: toDataTypeFromFileType(inputNode.fileType),\n          nodeName: selectNodeLabelById(nodeId)(state),\n        }))\n        .filter(({ filePath }) => filePath != null)\n        .filter(({ dataType: inputNodeDataType }) =>\n          dataType != null ? inputNodeDataType === dataType : true,\n        )\n    },\n    // todo 比較関数\n  )\n\n  const latestUid = useSelector(selectPipelineLatestUid)\n\n  const algorithmNodeOutputPathInfoList = useSelector((state: RootState) => {\n    if (latestUid != null) {\n      const runResult = selectPipelineNodeResultSuccessList(state)\n      return runResult.map(({ nodeId, nodeResult }) => {\n        return {\n          nodeId,\n          nodeName: selectNodeLabelById(nodeId)(state),\n          paths: Object.entries(nodeResult.outputPaths)\n            .map(([outputKey, value]) => {\n              return {\n                outputKey,\n                filePath: value.path,\n                type: value.type,\n              }\n            })\n            .filter(({ type }) =>\n              dataType != null ? type === dataType : true,\n            ),\n        }\n      })\n    } else {\n      return []\n    }\n  })\n\n  const [open, setOpen] = React.useState(false)\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  const onSelectHandle = (\n    nodeId: string,\n    filePath: string,\n    dataType: DATA_TYPE,\n    outputKey?: string\n  ) => {\n    onSelect(nodeId, filePath, dataType, outputKey)\n    handleClose()\n  }\n\n  const menuItemList: React.ReactElement[] = []\n  inputNodeFilePathInfoList.forEach((pathInfo) => {\n    const filePath = pathInfo.filePath\n    if (Array.isArray(filePath)) {\n      filePath.forEach((pathElm) => {\n        menuItemList.push(\n          <MenuItem\n            value={`${pathInfo.nodeId}/${pathElm}`}\n            onClick={() =>\n              onSelectHandle(pathInfo.nodeId, pathElm ?? '', pathInfo.dataType)\n            }\n            key={pathInfo.nodeId}\n          >\n            {getFileName(pathElm)}\n          </MenuItem>,\n        )\n      })\n    } else {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${pathInfo.filePath}`}\n          onClick={() =>\n            onSelectHandle(pathInfo.nodeId, filePath ?? '', pathInfo.dataType)\n          }\n          key={pathInfo.nodeId}\n        >\n          {pathInfo.nodeName}\n        </MenuItem>,\n      )\n    }\n  })\n  algorithmNodeOutputPathInfoList.forEach((pathInfo) => {\n    menuItemList.push(<ListSubheader>{pathInfo.nodeName}</ListSubheader>)\n    pathInfo.paths.forEach((outputPath, i) => {\n      menuItemList.push(\n        <MenuItem\n          value={`${pathInfo.nodeId}/${outputPath.filePath}`}\n          onClick={() =>\n            onSelectHandle(\n              pathInfo.nodeId,\n              outputPath.filePath,\n              outputPath.type,\n              outputPath.outputKey\n            )\n          }\n          key={`${pathInfo.nodeId}/${outputPath.filePath}`}\n        >\n          {outputPath.outputKey}\n        </MenuItem>,\n      )\n    })\n  })\n\n  return (\n    <FormControl style={{ minWidth: 150, maxWidth: 220 }} variant=\"standard\">\n      <InputLabel>{!!label ? label : 'Select Item'}</InputLabel>\n      <Select\n        value={`${selectedNodeId}/${selectedFilePath}`}\n        open={open}\n        onClose={handleClose}\n        onOpen={handleOpen}\n      >\n        {menuItemList}\n      </Select>\n      {inputNodeFilePathInfoList.length +\n        algorithmNodeOutputPathInfoList.length ===\n        0 && <FormHelperText error={true}>no data</FormHelperText>}\n    </FormControl>\n  )\n}\n\nfunction toDataTypeFromFileType(fileType: FILE_TYPE) {\n  switch (fileType) {\n    case FILE_TYPE_SET.IMAGE:\n      return DATA_TYPE_SET.IMAGE\n    case FILE_TYPE_SET.CSV:\n      return DATA_TYPE_SET.CSV\n    case FILE_TYPE_SET.HDF5:\n      return DATA_TYPE_SET.HDF5\n    case FILE_TYPE_SET.FLUO:\n      return DATA_TYPE_SET.FLUO\n    case FILE_TYPE_SET.BEHAVIOR:\n      return DATA_TYPE_SET.BEHAVIOR\n  }\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\nimport Paper from '@mui/material/Paper'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport FormControl from '@mui/material/FormControl'\n\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { RootState } from 'store/store'\nimport {\n  selectDisplayDataIsSingle,\n  selectImageItemFilePath,\n  selectRoiItemFilePath,\n  selectRoiItemNodeId,\n  selectSelectedVisualizeItemId,\n  selectTimeSeriesItemRefImageItemId,\n  selectVisualizeDataNodeId,\n  selectVisualizeDataType,\n  selectVisualizeImageItemIdList,\n  selectVisualizeItemHeight,\n  selectVisualizeItemWidth,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  selectItem,\n  setItemSize,\n  setRoiItemFilePath,\n  setTimeSeriesRefImageItemId,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { useMouseDragHandler } from 'components/utils/MouseDragUtil'\nimport { DisplayDataItemLayoutMenuIcon } from './VisualizeItemLayoutMenuIcon'\nimport { DisplayDataItem } from './DisplayDataItem'\nimport { FilePathSelect } from './FilePathSelect'\n\nexport const VisualizeItem = React.memo<{ itemId: number }>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const onClick = () => {\n    dispatch(selectItem(itemId))\n  }\n  const isSelected = useSelector(\n    (state: RootState) => selectSelectedVisualizeItemId(state) === itemId,\n  )\n  const { size, onMouseDownX, onMouseDownY, onMouseDownXY } =\n    useItemDragResize(itemId)\n  return (\n    <Box sx={{ m: 1, display: 'flex', flexDirection: 'row' }}>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Paper\n          variant=\"outlined\"\n          key={itemId}\n          onClick={onClick}\n          sx={{\n            width: `${size.width}px`,\n            minHeight: `${size.height}px`,\n            p: 1,\n            borderColor: (theme) =>\n              isSelected ? theme.palette.primary.light : undefined,\n          }}\n        >\n          <ItemHeader itemId={itemId} />\n          <DisplayDataItem itemId={itemId} />\n        </Paper>\n        <Box\n          sx={{\n            display: 'flex',\n          }}\n        >\n          <Box\n            sx={{\n              flexGrow: 1,\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              cursor: 'row-resize',\n            }}\n            onMouseDown={onMouseDownY}\n          />\n          <Box\n            sx={{\n              position: 'relative',\n              top: '-2px',\n              height: '4px',\n              width: '12px',\n              cursor: 'nwse-resize',\n            }}\n            onMouseDown={onMouseDownXY}\n          />\n        </Box>\n      </Box>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <Box\n          sx={{\n            flexGrow: 1,\n            position: 'relative',\n            left: '-2px',\n            width: '4px',\n            cursor: 'col-resize',\n          }}\n          onMouseDown={onMouseDownX}\n        />\n        <Box\n          sx={{\n            position: 'relative',\n            height: '12px',\n            width: '4px',\n            left: '-2px',\n            cursor: 'nwse-resize',\n          }}\n          onMouseDown={onMouseDownXY}\n        />\n      </Box>\n    </Box>\n  )\n})\n\nconst ItemHeader = React.memo<{ itemId: number }>(({ itemId }) => {\n  const itemDataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <Box display=\"flex\" justifyContent=\"flex-end\">\n      <Box flexGrow={1}>\n        <>ID: {itemId}</>\n        <FilePathSelectItem itemId={itemId} />\n      </Box>\n      {itemDataType === DATA_TYPE_SET.TIME_SERIES && (\n        <Box flexGrow={1}>\n          <RefImageItemIdSelect itemId={itemId} />\n        </Box>\n      )}\n      {itemDataType === DATA_TYPE_SET.IMAGE && (\n        <Box flexGrow={1}>\n          <RoiSelect itemId={itemId} />\n        </Box>\n      )}\n      <Box>\n        <DisplayDataItemLayoutMenuIcon itemId={itemId} />\n      </Box>\n    </Box>\n  )\n})\n\nconst FilePathSelectItem = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  const selectedNodeId = useSelector(selectVisualizeDataNodeId(itemId))\n  const selectedFilePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFilePath = (\n    nodeId: string,\n    newFilePath: string,\n    newDataType: DATA_TYPE,\n  ) => {\n    const basePayload = {\n      itemId,\n      nodeId,\n      filePath: newFilePath,\n      dataType: newDataType,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && selectedFilePath != null\n          ? {\n            ...basePayload,\n            deleteData: true,\n            prevDataType: dataType,\n            prevFilePath: selectedFilePath,\n          }\n          : {\n            ...basePayload,\n            deleteData: false,\n          },\n      ),\n    )\n  }\n\n  return (\n    <FilePathSelect\n      selectedNodeId={selectedNodeId}\n      selectedFilePath={selectedFilePath}\n      onSelect={onSelectFilePath}\n    />\n  )\n})\n\nconst RefImageItemIdSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const itemIdList = useSelector(\n    selectVisualizeImageItemIdList,\n    arrayEqualityFn,\n  )\n  const onChangeRefImageItemId = (event: SelectChangeEvent) => {\n    const value = Number(event.target.value)\n    dispatch(\n      setTimeSeriesRefImageItemId({\n        itemId,\n        refImageItemId: isNaN(value) ? null : value,\n      }),\n    )\n  }\n  const selectedRefImageItemId = useSelector(\n    selectTimeSeriesItemRefImageItemId(itemId),\n  )\n  return (\n    <FormControl fullWidth variant=\"standard\">\n      <InputLabel>ref image</InputLabel>\n      <Select\n        value={String(selectedRefImageItemId)}\n        onChange={onChangeRefImageItemId}\n      >\n        <MenuItem value={undefined}>{'None'}</MenuItem>\n        {itemIdList.map((value) => (\n          <MenuItem value={value}>{value}</MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n})\n\nconst MIN_WIDTH = 200\nconst MIN_HEIFHT = 150\n\nfunction useItemDragResize(itemId: number) {\n  const dispatch = useDispatch()\n  const width = useSelector(selectVisualizeItemWidth(itemId))\n  const height = useSelector(selectVisualizeItemHeight(itemId))\n  const [movingSize, setMovingSize] = React.useState({ width, height })\n  const onCommitSize = React.useCallback(\n    (size: { width: number; height: number }) =>\n      dispatch(setItemSize({ itemId, ...size })),\n    [dispatch, itemId],\n  )\n  const onMouseDownX = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          setMovingSize((size) => ({ ...size, width: movingWidth }))\n          movingX = moveEvent.screenX\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, width: movingWidth })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownY = useMouseDragHandler(\n    (downEvent) => {\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize((size) => ({ ...size, height: movingHeight }))\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ ...movingSize, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  const onMouseDownXY = useMouseDragHandler(\n    (downEvent) => {\n      let movingX = downEvent.screenX\n      let movingWidth = movingSize.width\n      let movingY = downEvent.screenY\n      let movingHeight = movingSize.height\n      return {\n        onMouseMove: (moveEvent) => {\n          const newWidth = movingWidth + (moveEvent.screenX - movingX)\n          movingWidth = newWidth >= MIN_WIDTH ? newWidth : MIN_WIDTH\n          const newHeight = movingHeight + (moveEvent.screenY - movingY)\n          movingHeight = newHeight >= MIN_HEIFHT ? newHeight : MIN_HEIFHT\n          setMovingSize({ width: movingWidth, height: movingHeight })\n          movingX = moveEvent.screenX\n          movingY = moveEvent.screenY\n        },\n        onMouseUp: () => {\n          onCommitSize({ width: movingWidth, height: movingHeight })\n        },\n      }\n    },\n    [movingSize, onCommitSize],\n  )\n  return {\n    size: movingSize,\n    onMouseDownX,\n    onMouseDownY,\n    onMouseDownXY,\n  }\n}\n\nconst RoiSelect = React.memo<{\n  itemId: number\n}>(({ itemId }) => {\n  const dispatch = useDispatch()\n  const roiItemNodeId = useSelector(selectRoiItemNodeId(itemId))\n  const roiItemFilePath = useSelector(selectRoiItemFilePath(itemId))\n  const onSelectRoiFilePath = (nodeId: string, filePath: string, dataType: string, outputKey?: string) => {\n    dispatch(setRoiItemFilePath({ itemId, nodeId, filePath, outputKey }))\n  }\n  return (\n    <FilePathSelect\n      selectedFilePath={roiItemFilePath}\n      selectedNodeId={roiItemNodeId}\n      onSelect={onSelectRoiFilePath}\n      dataType={DATA_TYPE_SET.ROI}\n      label={'Select Roi'}\n    />\n  )\n})\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Box from '@mui/material/Box'\n\nimport { twoDimarrayEqualityFn } from 'utils/EqualityUtils'\n\nimport { selectVisualizeItemLayout } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n\nimport { VisualizeItemAddButton } from './VisualizeItemAddButton'\nimport { VisualizeItem } from './VisualizeItem'\n\nexport const FlexItemList: React.FC = () => {\n  const layout = useSelector(selectVisualizeItemLayout, twoDimarrayEqualityFn)\n  return (\n    <Box display=\"flex\" flexWrap=\"wrap\" flexDirection=\"column\" p={1} m={1}>\n      {layout.map((row) => (\n        <Box display=\"flex\" flexDirection=\"row\">\n          {row.map((itemId) => (\n            <VisualizeItem itemId={itemId} key={itemId} />\n          ))}\n        </Box>\n      ))}\n      <VisualizeItemAddButton />\n    </Box>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { GradientPickerPopover } from 'react-linear-gradient-picker'\nimport { SketchPicker } from 'react-color'\nimport { PALETTE_COLOR_SHAPE_TYPE } from 'react-linear-gradient-picker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const GradientColorPicker = React.memo<{\n  colors: { rgb: string; offset: string }[]\n  dispatchSetColor: (colorCode: ColorType[]) => void\n}>(({ colors, dispatchSetColor }) => {\n  const palette: PALETTE_COLOR_SHAPE_TYPE[] = colors.map((value) => {\n    return {\n      offset: value.offset,\n      color: value.rgb,\n    }\n  })\n\n  const onPaletteChange = (palette: PALETTE_COLOR_SHAPE_TYPE[]) => {\n    const colorCode = palette.map((value) => {\n      const color = value.color\n      const rgbStr = color.replace(/[^0-9,]/g, '').split(',')\n      const rgb = {\n        r: Number(rgbStr[0]),\n        g: Number(rgbStr[1]),\n        b: Number(rgbStr[2]),\n      }\n      return {\n        rgb: `rgb(${rgb.r}, ${rgb.g}, ${rgb.b})`,\n        offset: value.offset,\n      }\n    })\n    dispatchSetColor(colorCode)\n  }\n\n  const [open, setOpen] = useState(false)\n\n  return (\n    <GradientPickerPopover\n      open={open}\n      setOpen={() => setOpen(!open)}\n      // showAnglePicker={true}\n      width={150}\n      maxStops={10}\n      paletteHeight={25}\n      palette={palette}\n      onPaletteChange={onPaletteChange}\n      flatStyle={true}\n    >\n      <WrappedSketchPicker />\n    </GradientPickerPopover>\n  )\n})\n\ntype WrapperPropTypes = {\n  onSelect?: (color: string, opacity?: number) => void\n  color?: string\n}\n\nconst WrappedSketchPicker: React.FC<WrapperPropTypes> = ({\n  onSelect,\n  color,\n}) => {\n  return (\n    <SketchPicker\n      color={color}\n      width=\"150px\"\n      // styles={{width: \"10px\"}}\n      onChange={(c) => {\n        const { r, g, b, a } = c.rgb\n        onSelect?.(`rgb(${r}, ${g}, ${b})`, a)\n      }}\n    />\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\nimport TextField from '@mui/material/TextField'\n\nimport {\n  selectVisualizeSaveFilename,\n  selectVisualizeSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setSaveFileName,\n  setSaveFormat,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\n\nexport const SaveFig: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const saveFileName = useSelector(selectVisualizeSaveFilename(itemId))\n  const saveFormat = useSelector(selectVisualizeSaveFormat(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string>) => {\n    dispatch(setSaveFormat({ itemId, saveFormat: event.target.value }))\n  }\n  const onChangeFileName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(setSaveFileName({ itemId, saveFileName: event.target.value }))\n  }\n\n  return (\n    <>\n      <h3>SaveFig</h3>\n      <FormControl\n        variant=\"standard\"\n        sx={{ minWidth: 120, width: '100%', marginBottom: 1 }}\n      >\n        <InputLabel>format</InputLabel>\n        <Select label=\"smooth\" value={saveFormat} onChange={handleChange}>\n          <MenuItem value={'svg'}>svg</MenuItem>\n          <MenuItem value={'png'}>png</MenuItem>\n          <MenuItem value={'jpeg'}>jpeg</MenuItem>\n          <MenuItem value={'webp'}>webp</MenuItem>\n        </Select>\n      </FormControl>\n      <TextField\n        style={{ width: '100%' }}\n        label={'Filename'}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeFileName}\n        value={saveFileName}\n      />\n    </>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Switch from '@mui/material/Switch'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport Select, { SelectChangeEvent } from '@mui/material/Select'\nimport InputLabel from '@mui/material/InputLabel'\nimport MenuItem from '@mui/material/MenuItem'\nimport FormControl from '@mui/material/FormControl'\n\nimport {\n  selectImageItemShowGrid,\n  selectImageItemShowLine,\n  selectImageItemShowticklabels,\n  selectImageItemZsmooth,\n  selectImageItemShowScale,\n  selectImageItemColors,\n  selectImageItemStartIndex,\n  selectImageItemEndIndex,\n  selectImageItemRoiAlpha,\n  selectImageItemFilePath,\n  selectDisplayDataIsSingle,\n  selectImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\n\nimport {\n  setImageItemShowGrid,\n  setImageItemShowLine,\n  setImageItemShowticklabels,\n  setImageItemZsmooth,\n  setImageItemShowScale,\n  setImageItemStartIndex,\n  setImageItemEndIndex,\n  setImageItemColors,\n  resetImageActiveIndex,\n  setImageItemRoiAlpha,\n  setImageItemAlpha,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\n\nimport 'react-linear-gradient-picker/dist/index.css'\nimport { FileSelectImple } from 'components/Workspace/FlowChart/FlowChartNode/FileSelect'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { Box, TextField } from '@mui/material'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\nimport Button from '@mui/material/Button'\nimport { getImageData } from 'store/slice/DisplayData/DisplayDataActions'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { SaveFig } from './SaveFig'\nimport { selectCurrentWorkspaceId } from 'store/slice/Workspace/WorkspaceSelector'\n\nexport const ImageItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectImageFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.IMAGE,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.IMAGE })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  const colors = useSelector(selectImageItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setImageItemColors({ itemId, colors: colorCode }))\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectImageFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.IMAGE}\n        selectButtonLabel=\"Select Image\"\n      />\n      <StartEndIndex />\n      <Showticklabels />\n      <ShowLine />\n      <ShowGrid />\n      <ShowScale />\n      <Zsmooth />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <Alpha />\n      <RoiAlpha />\n      <SaveFig />\n    </div>\n  )\n}\n\nconst Showticklabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectImageItemShowticklabels(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setImageItemShowticklabels({ itemId, showticklabels: !showticklabels }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"Showticklabels\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectImageItemShowLine(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"ShowLine\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectImageItemShowGrid(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"ShowGrid\"\n    />\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectImageItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setImageItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"ShowScale\"\n    />\n  )\n}\n\nconst Zsmooth: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zsmooth = useSelector(selectImageItemZsmooth(itemId))\n  const dispatch = useDispatch()\n  const handleChange = (event: SelectChangeEvent<string | boolean>) => {\n    dispatch(setImageItemZsmooth({ itemId, zsmooth: event.target.value }))\n  }\n  return (\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n      <InputLabel>smooth</InputLabel>\n      <Select label=\"smooth\" value={zsmooth} onChange={handleChange}>\n        <MenuItem value={'best'}>best</MenuItem>\n        <MenuItem value={'fast'}>fast</MenuItem>\n        <MenuItem value={'false'}>False</MenuItem>\n      </Select>\n    </FormControl>\n  )\n}\n\nconst Alpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const alpha = useSelector(selectImageItemAlpha(itemId))\n  const inputError = !(alpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemAlpha({ itemId, alpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        style={{ width: '100%' }}\n        label={'image alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={alpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst RoiAlpha: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const roiAlpha = useSelector(selectImageItemRoiAlpha(itemId))\n  const inputError = !(roiAlpha > 0)\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      dispatch(setImageItemRoiAlpha({ itemId, roiAlpha: newValue }))\n    }\n  }\n  return (\n    <>\n      <TextField\n        style={{ width: '100%' }}\n        label={'roi alpha'}\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 0.1,\n          min: 0,\n          max: 1.0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChange}\n        value={roiAlpha}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n    </>\n  )\n}\n\nconst StartEndIndex: React.FC = () => {\n  const workspaceId = useSelector(selectCurrentWorkspaceId)\n  const itemId = React.useContext(SelectedItemIdContext)\n  const [startIndex, onChangeStartIndex] = React.useState(\n    useSelector(selectImageItemStartIndex(itemId)),\n  )\n  const [endIndex, onChangeEndIndex] = React.useState(\n    useSelector(selectImageItemEndIndex(itemId)),\n  )\n  const inputError = !(startIndex > 0)\n  const dispatch = useDispatch()\n  const onStartChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeStartIndex(newValue)\n    }\n  }\n  const onEndChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number') {\n      onChangeEndIndex(newValue)\n    }\n  }\n\n  const filePath = useSelector(selectImageItemFilePath(itemId))\n  const onClickButton = () => {\n    if (startIndex > 0) {\n      dispatch(setImageItemStartIndex({ itemId, startIndex }))\n      dispatch(setImageItemEndIndex({ itemId, endIndex }))\n      dispatch(resetImageActiveIndex({ itemId, startIndex, endIndex }))\n      if (workspaceId && filePath !== null) {\n        dispatch(\n          getImageData({\n            workspaceId,\n            path: filePath,\n            startIndex: startIndex ?? 1,\n            endIndex: endIndex ?? 10,\n          }),\n        )\n      }\n    }\n  }\n\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'flex-start' }}>\n      <TextField\n        error={inputError}\n        type=\"number\"\n        inputProps={{\n          step: 1,\n          min: 0,\n        }}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onStartChange}\n        value={startIndex}\n        helperText={inputError ? 'index > 0' : undefined}\n      />\n      ~\n      <TextField\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onEndChange}\n        value={endIndex}\n      />\n      <Button\n        size=\"small\"\n        className=\"ctrl_btn\"\n        variant=\"contained\"\n        onClick={onClickButton}\n      >\n        load\n      </Button>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FileSelectImple } from 'components/Workspace/FlowChart/FlowChartNode/FileSelect'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  selectCsvItemSetHeader,\n  selectCsvItemSetIndex,\n  selectCsvItemTranspose,\n  selectDisplayDataIsSingle,\n  selectVisualizeDataFilePath,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setCsvItemSetHeader,\n  setCsvItemSetIndex,\n  setCsvItemTranspose,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { FormControlLabel, Switch, TextField } from '@mui/material'\nimport { setNewDisplayDataPath } from 'store/slice/VisualizeItem/VisualizeItemActions'\nimport { DATA_TYPE_SET } from 'store/slice/DisplayData/DisplayDataType'\n\nexport const CsvItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const filePath = useSelector(selectVisualizeDataFilePath(itemId))\n  const dispatch = useDispatch()\n  const isSingleData = useSelector(selectDisplayDataIsSingle(itemId))\n  const onSelectFile = (newPath: string) => {\n    const basePayload = {\n      itemId,\n      nodeId: null,\n      filePath: newPath,\n    }\n    dispatch(\n      setNewDisplayDataPath(\n        isSingleData && filePath != null\n          ? {\n              ...basePayload,\n              deleteData: true,\n              prevDataType: DATA_TYPE_SET.CSV,\n              prevFilePath: filePath,\n            }\n          : {\n              ...basePayload,\n              deleteData: false,\n            },\n      ),\n    )\n  }\n  const { onUploadFile } = useFileUploader({ fileType: FILE_TYPE_SET.CSV })\n  const onUploadFileHandle = (formData: FormData, fileName: string) => {\n    onUploadFile(formData, fileName)\n  }\n\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <FileSelectImple\n        filePath={filePath ?? ''}\n        onSelectFile={(path) => !Array.isArray(path) && onSelectFile(path)}\n        onUploadFile={onUploadFileHandle}\n        fileTreeType={FILE_TREE_TYPE_SET.CSV}\n        selectButtonLabel=\"Select CSV\"\n      />\n      <Transpose />\n      <SetHeader />\n      <SetIndex />\n    </div>\n  )\n}\n\nconst Transpose: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const transpose = useSelector(selectCsvItemTranspose(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemTranspose({ itemId, transpose: !transpose }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={transpose} onChange={toggleChecked} />}\n      label=\"transpose\"\n    />\n  )\n}\n\nconst SetHeader: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setHeader = useSelector(selectCsvItemSetHeader(itemId))\n\n  const dispatch = useDispatch()\n  const onChangeSetHeader = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value === '' ? null : Number(event.target.value)\n    if (newValue === null || newValue >= 0) {\n      dispatch(setCsvItemSetHeader({ itemId, setHeader: newValue }))\n    }\n  }\n\n  return (\n    <>\n      <TextField\n        label=\"header\"\n        sx={{\n          width: 100,\n          margin: (theme) => theme.spacing(0, 1, 0, 1),\n        }}\n        type=\"number\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        onChange={onChangeSetHeader}\n        value={setHeader}\n      />\n    </>\n  )\n}\n\nconst SetIndex: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const setIndex = useSelector(selectCsvItemSetIndex(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setCsvItemSetIndex({ itemId, setIndex: !setIndex }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={setIndex} onChange={toggleChecked} />}\n      label=\"setIndex\"\n    />\n  )\n}\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FormControlLabel, Switch } from '@mui/material'\nimport {\n  selectHeatMapItemColors,\n  selectHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  setHeatMapItemColors,\n  setHeatMapItemShowScale,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport { GradientColorPicker } from './GradientColorPicker'\nimport { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\nimport { SaveFig } from './SaveFig'\n\nexport const HeatmapItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  const colors = useSelector(selectHeatMapItemColors(itemId))\n  const dispathSetColor = (colorCode: ColorType[]) => {\n    dispatch(setHeatMapItemColors({ itemId, colors: colorCode }))\n  }\n  return (\n    <>\n      <ShowScale />\n      <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} />\n      <SaveFig />\n    </>\n  )\n}\n\nconst ShowScale: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showscale = useSelector(selectHeatMapItemShowScale(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setHeatMapItemShowScale({ itemId, showscale: !showscale }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showscale} onChange={toggleChecked} />}\n      label=\"showscale\"\n    />\n  )\n}\n","import React, {useEffect, useState} from 'react'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {\n  AccordionDetails,\n  AccordionSummary,\n  FormControlLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from '@mui/material'\nimport Box from '@mui/material/Box'\nimport Checkbox from '@mui/material/Checkbox'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\n\nimport {\n  selectTimeSeriesItemDrawOrderList,\n  selectTimeSeriesItemOffset,\n  selectTimeSeriesItemShowGrid,\n  selectTimeSeriesItemShowLine,\n  selectTimeSeriesItemShowTickLabels,\n  selectTimeSeriesItemSpan,\n  selectTimeSeriesItemXrange,\n  selectTimeSeriesItemZeroLine,\n  selectTimeSeriesItemFilePath,\n  selectTimeSeriesItemKeys,\n  selectImageItemRangeUnit,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport { SelectedItemIdContext } from '../VisualizeItemEditor'\nimport {\n  setTimeSeriesItemOffset,\n  setTimeSeriesItemShowGrid,\n  setTimeSeriesItemShowLine,\n  setTimeSeriesItemShowTickLabels,\n  setTimeSeriesItemSpan,\n  setTimeSeriesItemXrangeLeft,\n  setTimeSeriesItemXrangeRight,\n  setTimeSeriesItemZeroLine,\n  setTimeSeriesItemDrawOrderList,\n  changeRangeUnit,\n} from 'store/slice/VisualizeItem/VisualizeItemSlice'\nimport {\n  getTimeSeriesAllData,\n  getTimeSeriesDataById,\n} from 'store/slice/DisplayData/DisplayDataActions'\nimport { arrayEqualityFn } from 'utils/EqualityUtils'\nimport { Accordion } from 'components/common/Accordion'\n\nimport { SaveFig } from './SaveFig'\nimport { selectFrameRate }  from \"../../../../store/slice/Experiments/ExperimentsSelectors\";\nimport {selectPipelineLatestUid} from \"../../../../store/slice/Pipeline/PipelineSelectors\";\n\nexport const TimeSeriesItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <Offset />\n      <Span />\n      <ShowGrid />\n      <ShowLine />\n      <ShowTickLabels />\n      <ZeroLine />\n      <SelectValue />\n      <Xrange />\n      <LegendSelect />\n      <SaveFig />\n    </div>\n  )\n}\n\nconst Offset: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const offset = useSelector(selectTimeSeriesItemOffset(itemId))\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemOffset({ itemId, offset: !offset }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={offset} onChange={toggleChecked} />}\n      label=\"offset\"\n    />\n  )\n}\n\nconst Span: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const span = useSelector(selectTimeSeriesItemSpan(itemId))\n\n  const dispatch = useDispatch()\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newValue === 'number' && newValue > 0) {\n      dispatch(setTimeSeriesItemSpan({ itemId, span: newValue }))\n    }\n  }\n  return (\n    <FormControlLabel\n      control={\n        <TextField\n          type=\"number\"\n          style={{ width: '6vw' }}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          onChange={onChange}\n          value={span}\n        />\n      }\n      label=\"offset std\"\n    />\n  )\n}\n\nconst ShowGrid: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showgrid = useSelector(selectTimeSeriesItemShowGrid(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowGrid({ itemId, showgrid: !showgrid }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showgrid} onChange={toggleChecked} />}\n      label=\"showgrid\"\n    />\n  )\n}\n\nconst ShowLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showline = useSelector(selectTimeSeriesItemShowLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemShowLine({ itemId, showline: !showline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showline} onChange={toggleChecked} />}\n      label=\"showline\"\n    />\n  )\n}\n\nconst ShowTickLabels: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const showticklabels = useSelector(selectTimeSeriesItemShowTickLabels(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(\n      setTimeSeriesItemShowTickLabels({\n        itemId,\n        showticklabels: !showticklabels,\n      }),\n    )\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={showticklabels} onChange={toggleChecked} />}\n      label=\"showticklabels\"\n    />\n  )\n}\n\nconst ZeroLine: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const zeroline = useSelector(selectTimeSeriesItemZeroLine(itemId))\n\n  const dispatch = useDispatch()\n  const toggleChecked = () => {\n    dispatch(setTimeSeriesItemZeroLine({ itemId, zeroline: !zeroline }))\n  }\n  return (\n    <FormControlLabel\n      control={<Switch checked={zeroline} onChange={toggleChecked} />}\n      label=\"zeroline\"\n    />\n  )\n}\n\nconst SelectValue: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const value = useSelector(selectImageItemRangeUnit(itemId))\n  const dispatch = useDispatch()\n  const onChangeValue = async (e: any) => {\n    dispatch(changeRangeUnit({itemId: itemId, rangeUnit: e.target.value}))\n  }\n  return (\n    <Box sx={{marginBottom: 2}}>\n      <p>range unit</p>\n      <Select\n        sx={{width: '100%'}}\n        value={value}\n        onChange={onChangeValue}\n      >\n        <MenuItem value={'frames'}>Frames</MenuItem>\n        <MenuItem value={'time'}>Time</MenuItem>\n      </Select>\n    </Box>\n  )\n}\n\nconst Xrange: React.FC = () => {\n  const currentPipelineUid = useSelector(selectPipelineLatestUid)\n  const itemId = React.useContext(SelectedItemIdContext)\n  const frameRate = useSelector(selectFrameRate(currentPipelineUid))\n  const rangeUnit = useSelector(selectImageItemRangeUnit(itemId))\n  const xrangeSelector = useSelector(selectTimeSeriesItemXrange(itemId))\n\n  const [xrange, setXrange] = useState(xrangeSelector)\n\n  useEffect(() => {\n    if(Object.keys(xrange).length < 1) return\n    rangeUnit === 'frames' ? setXrange(xrangeSelector) : setXrange({left: Number(xrangeSelector.left)/ frameRate, right: Number(xrangeSelector.right) / frameRate})\n  //eslint-disable-next-line\n  }, [JSON.stringify(rangeUnit), JSON.stringify(xrangeSelector)])\n\n  const dispatch = useDispatch()\n  const onChangeLeft = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newLeft = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newLeft === 'number') {\n      dispatch(setTimeSeriesItemXrangeLeft({ itemId, left: rangeUnit === 'frames' ? newLeft : newLeft * frameRate }))\n    }\n  }\n  const onChangeRight = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newRight = event.target.value === '' ? '' : Number(event.target.value)\n    if (typeof newRight === 'number') {\n      dispatch(setTimeSeriesItemXrangeRight({ itemId, right: rangeUnit === 'frames' ? newRight : newRight * frameRate }))\n    }\n  }\n\n  return (\n    <FormControlLabel\n      control={\n        <>\n          <TextField\n            label=\"left\"\n            style={{ width: 50 }}\n            type=\"number\"\n            inputProps={{\n              step: 1,\n              min: 0,\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeLeft}\n            value={xrange.left ?? ''}\n            defaultValue={undefined}\n          />\n          <TextField\n            label=\"right\"\n            style={{ width: 50 }}\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={onChangeRight}\n            value={xrange.right ?? ''}\n          />\n        </>\n      }\n      label=\"\"\n    />\n  )\n}\n\nconst LegendSelect: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dispatch = useDispatch()\n  // const drawIndexMap = useSelector(selectTimeSeriesItemDrawIndexMap(itemId))\n  const dataKeys = useSelector(\n    selectTimeSeriesItemKeys(itemId),\n    arrayEqualityFn,\n  )\n  const drawOrderList = useSelector(\n    selectTimeSeriesItemDrawOrderList(itemId),\n    arrayEqualityFn,\n  )\n  const filePath = useSelector(selectTimeSeriesItemFilePath(itemId))\n\n  const allHandleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: event.target.checked ? dataKeys : [],\n      }),\n    )\n\n    if (event.target.checked && filePath !== null) {\n      dispatch(getTimeSeriesAllData({ path: filePath }))\n    }\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const index = event.target.value\n    const newDrawOrderList = event.target.checked\n      ? [...drawOrderList, index]\n      : drawOrderList.filter((value) => value !== index)\n\n    dispatch(\n      setTimeSeriesItemDrawOrderList({\n        itemId,\n        drawOrderList: newDrawOrderList,\n      }),\n    )\n\n    if (filePath !== null) {\n      dispatch(getTimeSeriesDataById({ path: filePath, index: index }))\n    }\n  }\n\n  const drawIndexMap = Object.fromEntries(\n    dataKeys.map((v) => {\n      if (drawOrderList.includes(v)) {\n        return [v, true]\n      } else {\n        return [v, false]\n      }\n    }),\n  )\n\n  const children = (\n    <Box sx={{ display: 'flex', flexDirection: 'column', ml: 3 }}>\n      {dataKeys.map((key) => (\n        <FormControlLabel\n          key={`${key}`}\n          label={`Index ${key}`}\n          control={\n            <Checkbox\n              checked={drawIndexMap[key]}\n              onChange={handleChange}\n              value={key}\n            />\n          }\n        />\n      ))}\n    </Box>\n  )\n\n  return (\n    <Accordion sx={{ mt: 2 }} TransitionProps={{ unmountOnExit: true }}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        Legend select\n      </AccordionSummary>\n      <AccordionDetails>\n        <>\n          <FormControlLabel\n            label=\"All Check\"\n            control={\n              <Checkbox\n                checked={Object.values(drawIndexMap).every((v) => {\n                  return v\n                })}\n                onChange={allHandleChange}\n              />\n            }\n          />\n          {children}\n        </>\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","import React from 'react'\n// import { useSelector, useDispatch } from 'react-redux'\n// import { SelectedItemIdContext } from '../VisualizeItemEditor'\n// import { selectRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSelectors'\n// import { setRoiItemColors } from 'store/slice/VisualizeItem/VisualizeItemSlice'\n// import { useFileUploader } from 'store/slice/FileUploader/FileUploaderHook'\n// import { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n// import { ColorType } from 'store/slice/VisualizeItem/VisualizeItemType'\n\nexport const RoiItemEditor: React.FC = () => {\n  // const itemId = React.useContext(SelectedItemIdContext)\n  // const dispatch = useDispatch()\n  // const { onUploadFile } = useFileUploader(FILE_TYPE_SET.CSV)\n  // const onUploadFileHandle = (formData: FormData, fileName: string) => {\n  //   onUploadFile(formData, fileName)\n  // }\n\n  // const colors = useSelector(selectRoiItemColors(itemId))\n  // const dispathSetColor = (colorCode: ColorType[]) => {\n  //   dispatch(setRoiItemColors({ itemId, colors: colorCode }))\n  // }\n\n  return (\n    <>\n      {/* <GradientColorPicker /> */}\n      {/* <GradientColorPicker colors={colors} dispatchSetColor={dispathSetColor} /> */}\n    </>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const ScatterItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const BarItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const HistogramItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const LineItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const PieItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { SaveFig } from './SaveFig'\n\nexport const PolarItemEditor: React.FC = () => {\n  return (\n    <div style={{ margin: '10px', padding: 10 }}>\n      <SaveFig />\n    </div>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Box from '@mui/material/Box'\nimport {\n  selectSelectedVisualizeItemId,\n  selectVisualizeDataType,\n} from 'store/slice/VisualizeItem/VisualizeItemSelectors'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n} from 'store/slice/DisplayData/DisplayDataType'\nimport { ImageItemEditor } from './Editor/ImageItemEditor'\nimport { CsvItemEditor } from './Editor/CsvItemEditor'\nimport { HeatmapItemEditor } from './Editor/HeatmapItemEditor'\nimport { TimeSeriesItemEditor } from './Editor/TimeSeriesItemEditor'\nimport { RoiItemEditor } from './Editor/RoiItemEditor'\nimport { ScatterItemEditor } from './Editor/ScatterItemEditor'\nimport { BarItemEditor } from './Editor/BarItemEditor'\nimport { HistogramItemEditor } from './Editor/HistogramItemEditor'\nimport { LineItemEditor } from './Editor/LineItemEditor'\nimport { PieItemEditor } from './Editor/PieItemEditor'\nimport { PolarItemEditor } from './Editor/PolarItemEditor'\n\nexport const VisualizeItemEditor = () => {\n  const selectedItemId = useSelector(selectSelectedVisualizeItemId)\n  return (\n    <>\n      {selectedItemId != null ? (\n        <SelectedItemIdContext.Provider value={selectedItemId}>\n          <Box m={1}>\n            <DisplayDataItemEditor />\n          </Box>\n        </SelectedItemIdContext.Provider>\n      ) : (\n        'Please select item...'\n      )}\n    </>\n  )\n}\n\nexport const SelectedItemIdContext = React.createContext<number>(NaN)\n\nconst DisplayDataItemEditor: React.FC = () => {\n  const itemId = React.useContext(SelectedItemIdContext)\n  const dataType = useSelector(selectVisualizeDataType(itemId))\n  return (\n    <div style={{ marginTop: 8 }}>\n      <DisplayEditor dataType={dataType} />\n    </div>\n  )\n}\n\nconst DisplayEditor: React.FC<{\n  dataType: DATA_TYPE | null\n}> = ({ dataType }) => {\n  /* 他のtypeのEditorも必要になったら追加する */\n  switch (dataType) {\n    case DATA_TYPE_SET.IMAGE:\n      return <ImageItemEditor />\n    case DATA_TYPE_SET.CSV:\n      return <CsvItemEditor />\n    case DATA_TYPE_SET.HEAT_MAP:\n      return <HeatmapItemEditor />\n    case DATA_TYPE_SET.TIME_SERIES:\n      return <TimeSeriesItemEditor />\n    case DATA_TYPE_SET.ROI:\n      return <RoiItemEditor />\n    case DATA_TYPE_SET.SCATTER:\n      return <ScatterItemEditor />\n    case DATA_TYPE_SET.BAR:\n      return <BarItemEditor />\n    case DATA_TYPE_SET.HTML:\n      return <div>html editor</div>\n    case DATA_TYPE_SET.HISTOGRAM:\n      return <HistogramItemEditor />\n    case DATA_TYPE_SET.LINE:\n      return <LineItemEditor />\n    case DATA_TYPE_SET.PIE:\n      return <PieItemEditor />\n    case DATA_TYPE_SET.POLAR:\n      return <PolarItemEditor />\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport { styled } from '@mui/material/styles'\nimport { FlexItemList } from './FlexItemList'\nimport { VisualizeItemEditor } from './VisualizeItemEditor'\nimport { CurrentPipelineInfo } from 'components/common/CurrentPipelineInfo'\nimport { CONTENT_HEIGHT, DRAWER_WIDTH } from 'const/Layout'\nimport { Box } from '@mui/material'\nimport { grey } from '@mui/material/colors'\n\nconst Visualize: React.FC = () => {\n  return (\n    <RootDiv>\n      <Box\n        sx={{\n          width: DRAWER_WIDTH,\n        }}\n        borderRight={1}\n        borderColor={grey[300]}\n      >\n        <CurrentPipelineInfo />\n        <StyledDrawerContents>\n          <VisualizeItemEditor />\n        </StyledDrawerContents>\n      </Box>\n\n      <MainContents>\n        <FlexItemList />\n      </MainContents>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')({\n  display: 'flex',\n})\n\nconst StyledDrawerContents = styled('div')({\n  overflow: 'auto',\n})\n\nconst MainContents = styled('main')({\n  display: 'flex',\n  flexDirection: 'column',\n  flexGrow: 1,\n  minHeight: CONTENT_HEIGHT\n})\n\nexport default Visualize\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Box } from '@mui/material'\nimport { styled } from '@mui/material/styles'\nimport { useRunPipeline } from 'store/slice/Pipeline/PipelineHook'\nimport Experiment from 'components/Workspace/Experiment/Experiment'\nimport FlowChart from 'components/Workspace/FlowChart/FlowChart'\nimport Visualize from 'components/Workspace/Visualize/Visualize'\nimport { selectActiveTab } from 'store/slice/Workspace/WorkspaceSelector'\n\nconst Workspace: React.FC = () => {\n  const runPipeline = useRunPipeline() // タブ切り替えによって結果取得処理が止まってしまうのを回避するため、タブの親レイヤーで呼び出している\n  const activeTab = useSelector(selectActiveTab)\n\n  return (\n    <RootDiv>\n      <TabPanel value={activeTab} index={0}>\n        <FlowChart {...runPipeline} />\n      </TabPanel>\n      <TabPanel value={activeTab} index={1}>\n        <Visualize />\n      </TabPanel>\n      <TabPanel value={activeTab} index={2}>\n        <Experiment />\n      </TabPanel>\n    </RootDiv>\n  )\n}\n\nconst RootDiv = styled('div')(({ theme }) => ({\n  flexGrow: 1,\n  backgroundColor: theme.palette.background.paper,\n  height: '100%',\n}))\n\ninterface TabPanelProps {\n  children?: React.ReactNode\n  index: number\n  value: number\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      style={{ height: 'calc(100% - 58px)' }}\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box sx={{ height: '100%' }}>{children}</Box>}\n    </div>\n  )\n}\n\nexport default Workspace\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { selectRunPostData } from 'store/slice/Run/RunSelectors'\nimport {\n  selectPipelineIsCanceled,\n  selectPipelineIsStartedSuccess,\n  selectPipelineLatestUid,\n  selectPipelineStatus,\n} from './PipelineSelectors'\nimport {\n  run,\n  pollRunResult,\n  runByCurrentUid,\n  cancelResult,\n} from './PipelineActions'\nimport { selectFilePathIsUndefined } from '../InputNode/InputNodeSelectors'\nimport { selectAlgorithmNodeNotExist } from '../AlgorithmNode/AlgorithmNodeSelectors'\nimport {\n  fetchExperiment,\n  getExperiments,\n} from '../Experiments/ExperimentsActions'\nimport { useSnackbar, VariantType } from 'notistack'\nimport { RUN_STATUS } from './PipelineType'\nimport { useLocation, useNavigate, useParams } from 'react-router-dom'\nimport { IS_STANDALONE, STANDALONE_WORKSPACE_ID } from 'const/Mode'\nimport {\n  clearCurrentWorkspace,\n  setActiveTab,\n  setCurrentWorkspace,\n} from '../Workspace/WorkspaceSlice'\nimport { clearExperiments } from '../Experiments/ExperimentsSlice'\nimport { AppDispatch } from 'store/store'\nimport { getWorkspace } from 'store/slice/Workspace/WorkspaceActions'\nimport { selectIsWorkspaceOwner } from '../Workspace/WorkspaceSelector'\n\nconst POLLING_INTERVAL = 5000\n\nexport type UseRunPipelineReturnType = ReturnType<typeof useRunPipeline>\n\nexport function useRunPipeline() {\n  const dispatch = useDispatch()\n  const appDispatch: AppDispatch = useDispatch()\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  const { workspaceId } = useParams<{ workspaceId: string }>()\n  const _workspaceId = Number(workspaceId)\n\n  React.useEffect(() => {\n    if (IS_STANDALONE) {\n      dispatch(setCurrentWorkspace(STANDALONE_WORKSPACE_ID))\n      dispatch(fetchExperiment(STANDALONE_WORKSPACE_ID))\n    } else {\n      appDispatch(getWorkspace({ id: _workspaceId }))\n        .unwrap()\n        .then((_) => {\n          dispatch(fetchExperiment(_workspaceId))\n          const selectedTab = location.state?.tab\n          selectedTab && dispatch(setActiveTab(selectedTab))\n        })\n        .catch((_) => {\n          navigate('/console/workspaces')\n        })\n    }\n    return () => {\n      dispatch(clearExperiments())\n      dispatch(clearCurrentWorkspace())\n    }\n  }, [dispatch, appDispatch, navigate, _workspaceId, location.state])\n\n  const uid = useSelector(selectPipelineLatestUid)\n  const isCanceled = useSelector(selectPipelineIsCanceled)\n  const isStartedSuccess = useSelector(selectPipelineIsStartedSuccess)\n  const isOwner = useSelector(selectIsWorkspaceOwner)\n  const runDisabled = isOwner ? isStartedSuccess : true\n\n  const filePathIsUndefined = useSelector(selectFilePathIsUndefined)\n  const algorithmNodeNotExist = useSelector(selectAlgorithmNodeNotExist)\n  const runPostData = useSelector(selectRunPostData)\n  const handleRunPipeline = React.useCallback(\n    (name: string) => {\n      dispatch(run({ runPostData: { name, ...runPostData, forceRunList: [] } }))\n    },\n    [dispatch, runPostData],\n  )\n  const handleClickVariant = (variant: VariantType, mess: string) => {\n    enqueueSnackbar(mess, { variant })\n  }\n  const handleRunPipelineByUid = React.useCallback(() => {\n    dispatch(runByCurrentUid({ runPostData }))\n  }, [dispatch, runPostData])\n  const handleCancelPipeline = React.useCallback(async () => {\n    if (uid != null) {\n      const data = await dispatch(cancelResult({ uid }))\n      if ((data as any).error) {\n        handleClickVariant(\n          'error',\n          'Failed to cancel workflow. Please try again.',\n        )\n      }\n    }\n    //eslint-disable-next-line\n  }, [dispatch, uid])\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (isStartedSuccess && !isCanceled && uid != null) {\n        dispatch(pollRunResult({ uid: uid }))\n      }\n    }, POLLING_INTERVAL)\n    return () => {\n      clearInterval(intervalId)\n    }\n  }, [dispatch, uid, isCanceled, isStartedSuccess])\n  const status = useSelector(selectPipelineStatus)\n  const { enqueueSnackbar } = useSnackbar()\n  // タブ移動による再レンダリングするたびにスナックバーが実行されてしまう挙動を回避するために前回の値を保持\n  const [prevStatus, setPrevStatus] = React.useState(status)\n  React.useEffect(() => {\n    if (prevStatus !== status) {\n      if (status === RUN_STATUS.FINISHED) {\n        enqueueSnackbar('Finished', { variant: 'success' })\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.START_SUCCESS) {\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.ABORTED) {\n        enqueueSnackbar('Aborted', { variant: 'error' })\n        dispatch(getExperiments())\n      } else if (status === RUN_STATUS.CANCELED) {\n        enqueueSnackbar('Workflow canceled.', { variant: 'success' })\n        dispatch(getExperiments())\n      }\n      setPrevStatus(status)\n    }\n  }, [dispatch, status, prevStatus, enqueueSnackbar])\n  return {\n    filePathIsUndefined,\n    algorithmNodeNotExist,\n    uid,\n    status,\n    runDisabled,\n    handleRunPipeline,\n    handleRunPipelineByUid,\n    handleCancelPipeline,\n  }\n}\n","export const IS_STANDALONE = !(process.env.REACT_APP_IS_STANDALONE === 'false')\nexport const STANDALONE_WORKSPACE_ID = 1\n","import React from 'react'\nimport IconButton from '@mui/material/IconButton'\nimport Close from '@mui/icons-material/Close'\nimport { SnackbarProvider, SnackbarKey, useSnackbar } from 'notistack'\nimport { BrowserRouter, Navigate, Route, Routes } from 'react-router-dom'\nimport Layout from 'components/Layout'\nimport Dashboard from 'pages/Dashboard'\nimport Account from 'pages/Account'\nimport AccountManager from 'pages/AccountManager'\nimport AccountDelete from 'pages/AccountDelete'\nimport Login from 'pages/Login'\nimport ResetPassword from 'pages/ResetPassword'\nimport Workspaces from 'pages/Workspace'\nimport Workspace from 'pages/Workspace/Workspace'\nimport { IS_STANDALONE } from 'const/Mode'\n\nconst App: React.FC = () => {\n  return (\n    <SnackbarProvider\n      maxSnack={5}\n      action={(snackbarKey) => (\n        <SnackbarCloseButton snackbarKey={snackbarKey} />\n      )}\n    >\n      <BrowserRouter>\n        <Layout>\n          {IS_STANDALONE ? (\n            <Routes>\n              <Route path=\"/\" element={<Workspace />} />\n              <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\n            </Routes>\n          ) : (\n            <Routes>\n              <Route path=\"/\" element={<Navigate replace to=\"/console\" />} />\n              <Route path=\"/account-deleted\" element={<AccountDelete />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/reset-password\" element={<ResetPassword />} />\n              <Route path=\"/console\" element={<Dashboard />} />\n              <Route path=\"/console/account\" element={<Account />} />\n              <Route path=\"/console/account-manager\" element={<AccountManager />} />\n              <Route path=\"/console/workspaces\">\n                <Route path=\"\" element={<Workspaces />} />\n                <Route path=\":workspaceId\" element={<Workspace />} />\n              </Route>\n              <Route path=\"/console/*\" element={<Navigate replace to=\"/console\" />} />\n              <Route path=\"*\" element={<Navigate replace to=\"/\" />} />\n            </Routes>\n          )}\n        </Layout>\n      </BrowserRouter>\n    </SnackbarProvider>\n  )\n}\n\nconst SnackbarCloseButton: React.FC<{ snackbarKey: SnackbarKey }> = ({\n  snackbarKey,\n}) => {\n  const { closeSnackbar } = useSnackbar()\n  return (\n    <IconButton onClick={() => closeSnackbar(snackbarKey)} size=\"large\">\n      <Close style={{ color: 'white' }} />\n    </IconButton>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  ALGORITHM_LIST_SLICE_NAME,\n  AlgorithmListType,\n} from './AlgorithmListType'\nimport { getAlgoList } from './AlgorithmListActions'\nimport { convertToAlgoListType } from './AlgorithmListUtils'\n\nexport const initialState: AlgorithmListType = {\n  isLatest: false,\n  tree: {},\n}\n\nexport const algorithmListSlice = createSlice({\n  name: ALGORITHM_LIST_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(getAlgoList.fulfilled, (state, action) => {\n      state.tree = convertToAlgoListType(action.payload)\n      state.isLatest = true\n    })\n  },\n})\n\nexport default algorithmListSlice.reducer\n","import { createSlice, isAnyOf } from '@reduxjs/toolkit'\nimport {\n  DATA_TYPE,\n  DATA_TYPE_SET,\n  DisplayData,\n  DISPLAY_DATA_SLICE_NAME,\n} from './DisplayDataType'\nimport {\n  getCsvData,\n  getHeatMapData,\n  getImageData,\n  getTimeSeriesDataById,\n  getTimeSeriesAllData,\n  getRoiData,\n  getScatterData,\n  getBarData,\n  getHTMLData,\n  getTimeSeriesInitData,\n  getHistogramData,\n  getLineData,\n  getPieData,\n  getPolarData,\n} from './DisplayDataActions'\nimport {\n  deleteDisplayItem,\n  setNewDisplayDataPath,\n} from '../VisualizeItem/VisualizeItemActions'\nimport { run, runByCurrentUid } from 'store/slice/Pipeline/PipelineActions'\nconst initialState: DisplayData = {\n  timeSeries: {},\n  heatMap: {},\n  image: {},\n  csv: {},\n  roi: {},\n  scatter: {},\n  bar: {},\n  html: {},\n  histogram: {},\n  line: {},\n  pie: {},\n  polar: {},\n}\n\nexport const displayDataSlice = createSlice({\n  name: DISPLAY_DATA_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(deleteDisplayItem, (state, action) => {\n        if (action.payload.deleteData) {\n          const { filePath, dataType } = action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(setNewDisplayDataPath, (state, action) => {\n        if (action.payload.deleteData) {\n          const { prevDataType: dataType, prevFilePath: filePath } =\n            action.payload\n          deleteDisplayDataFn(state, filePath, dataType)\n        }\n      })\n      .addCase(getTimeSeriesDataById.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesDataById.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesDataById.fulfilled, (state, action) => {\n        const { path, index } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].data[index] = action.payload.data[index]\n        if (action.payload.std[index] !== undefined) {\n          state.timeSeries[path].std[index] = action.payload.std[index]\n        }\n      })\n      .addCase(getTimeSeriesAllData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesAllData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesAllData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        if (action.payload.std !== undefined) {\n          state.timeSeries[path].std = action.payload.std\n        }\n      })\n      .addCase(getTimeSeriesInitData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        if (!state.timeSeries.hasOwnProperty(path)) {\n          state.timeSeries[path] = {\n            type: 'timeSeries',\n            xrange: [],\n            data: {},\n            std: {},\n            pending: true,\n            fulfilled: false,\n            error: null,\n          }\n        } else {\n          state.timeSeries[path].pending = true\n          state.timeSeries[path].fulfilled = false\n          state.timeSeries[path].error = null\n        }\n      })\n      .addCase(getTimeSeriesInitData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path] = {\n          type: 'timeSeries',\n          xrange: [],\n          data: {},\n          std: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getTimeSeriesInitData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.timeSeries[path].pending = false\n        state.timeSeries[path].fulfilled = true\n        state.timeSeries[path].error = null\n\n        state.timeSeries[path].xrange = action.payload.xrange\n        state.timeSeries[path].data = action.payload.data\n        state.timeSeries[path].std = action.payload.std\n      })\n      .addCase(getHeatMapData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHeatMapData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: [],\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHeatMapData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.heatMap[path] = {\n          type: 'heatMap',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHistogramData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.histogram[path] = {\n          type: 'histogram',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHistogramData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.histogram[path] = {\n          type: 'histogram',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getHistogramData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.histogram[path] = {\n          type: 'histogram',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getLineData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.line[path] = {\n          type: 'line',\n          data: [],\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getLineData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.line[path] = {\n          type: 'line',\n          data: [],\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getLineData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.line[path] = {\n          type: 'line',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getPieData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.pie[path] = {\n          type: 'pie',\n          data: [],\n          columns: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getPieData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.pie[path] = {\n          type: 'pie',\n          data: [],\n          columns: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getPieData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.pie[path] = {\n          type: 'pie',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getPolarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.polar[path] = {\n          type: 'polar',\n          data: [],\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getPolarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.polar[path] = {\n          type: 'polar',\n          data: [],\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getPolarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.polar[path] = {\n          type: 'polar',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getImageData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getImageData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.image[path] = {\n          type: 'image',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getCsvData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getCsvData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.csv[path] = {\n          type: 'csv',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getRoiData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getRoiData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        const { data } = action.payload\n\n        // 計算\n        const roi1Ddata: number[] = data[0]\n          .map((row) =>\n            Array.from(new Set(row.filter((value) => value != null))),\n          )\n          .flat()\n        const roiUniqueIdList = Array.from(new Set(roi1Ddata))\n          .sort((n1, n2) => n1 - n2)\n          .map(String)\n\n        state.roi[path] = {\n          type: 'roi',\n          data: data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n          roiUniqueList: roiUniqueIdList,\n        }\n      })\n      .addCase(getRoiData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.roi[path] = {\n          type: 'roi',\n          data: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n          roiUniqueList: [],\n        }\n      })\n      .addCase(getScatterData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getScatterData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.scatter[path] = {\n          type: 'scatter',\n          data: {},\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getBarData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: {},\n          columns: [],\n          index: [],\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addCase(getBarData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.bar[path] = {\n          type: 'bar',\n          data: action.payload.data,\n          columns: action.payload.columns,\n          index: action.payload.index,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.pending, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: true,\n          fulfilled: false,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.fulfilled, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: action.payload.data,\n          pending: false,\n          fulfilled: true,\n          error: null,\n        }\n      })\n      .addCase(getHTMLData.rejected, (state, action) => {\n        const { path } = action.meta.arg\n        state.html[path] = {\n          type: 'html',\n          data: '',\n          pending: false,\n          fulfilled: false,\n          error: action.error.message ?? 'rejected',\n        }\n      })\n      .addMatcher(\n        isAnyOf(run.fulfilled, runByCurrentUid.fulfilled),\n        (state, action) => initialState,\n      )\n  },\n})\n\nfunction deleteDisplayDataFn(\n  state: DisplayData,\n  filePath: string,\n  dataType: DATA_TYPE,\n) {\n  if (dataType === DATA_TYPE_SET.IMAGE) {\n    delete state.image[filePath]\n  } else if (dataType === DATA_TYPE_SET.TIME_SERIES) {\n    delete state.timeSeries[filePath]\n  } else if (dataType === DATA_TYPE_SET.CSV) {\n    delete state.csv[filePath]\n  } else if (dataType === DATA_TYPE_SET.HEAT_MAP) {\n    delete state.heatMap[filePath]\n    // } else if (dataType === DATA_TYPE_SET.ROI) {\n    //   delete state.roi[filePath]\n  } else if (dataType === DATA_TYPE_SET.SCATTER) {\n    delete state.scatter[filePath]\n  } else if (dataType === DATA_TYPE_SET.BAR) {\n    delete state.bar[filePath]\n  } else if (dataType === DATA_TYPE_SET.HTML) {\n    delete state.html[filePath]\n  } else if (dataType === DATA_TYPE_SET.HISTOGRAM) {\n    delete state.histogram[filePath]\n  } else if (dataType === DATA_TYPE_SET.LINE) {\n    delete state.line[filePath]\n  } else if (dataType === DATA_TYPE_SET.PIE) {\n    delete state.pie[filePath]\n  } else if (dataType === DATA_TYPE_SET.POLAR) {\n    delete state.polar[filePath]\n  }\n}\n\nexport default displayDataSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { FileUploader, FILE_UPLOADER_SLICE_NAME } from './FileUploaderType'\nimport { setUploadProgress, uploadFile } from './FileUploaderActions'\nimport { inistialUploaderState } from './FileUploaderInitlalState'\n\nconst initialState: FileUploader = {}\n\nexport const fileUploaderSlice = createSlice({\n  name: FILE_UPLOADER_SLICE_NAME,\n  initialState,\n  reducers: {\n    setFileUploaderStateById(state, action: PayloadAction<string>) {\n      state[action.payload] = inistialUploaderState\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(setUploadProgress, (state, action) => {\n        const { progess, requestId } = action.payload\n        state[requestId].uploadingProgress = progess\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileName, requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          fileName,\n          isUninitialized: false,\n          pending: true,\n          fulfilled: false,\n          uploadingProgress: 0,\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { requestId } = action.meta.arg\n        const { resultPath } = action.payload\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          path: resultPath,\n          pending: false,\n          fulfilled: true,\n        }\n      })\n      .addCase(uploadFile.rejected, (state, action) => {\n        const { requestId } = action.meta.arg\n        const currentState = state[requestId]\n        state[requestId] = {\n          ...currentState,\n          pending: false,\n          fulfilled: false,\n          error: action.error.message,\n        }\n      })\n  },\n})\n\nexport const { setFileUploaderStateById } = fileUploaderSlice.actions\n\nexport default fileUploaderSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { FILE_TREE_TYPE_SET } from 'api/files/Files'\nimport { uploadFile } from 'store/slice/FileUploader/FileUploaderActions'\nimport { FILE_TYPE_SET } from 'store/slice/InputNode/InputNodeType'\n\nimport { getFilesTree } from './FilesTreeAction'\nimport { FilesTree, FILES_TREE_SLICE_NAME } from './FilesTreeType'\nimport { convertToTreeNodeType } from './FilesTreeUtils'\n\nexport const initialState: FilesTree = {}\nexport const filesTreeSlice = createSlice({\n  name: FILES_TREE_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getFilesTree.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        state[fileType] = {\n          isLoading: true,\n          isLatest: false,\n          tree: [],\n        }\n      })\n      .addCase(getFilesTree.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        state[fileType].tree = convertToTreeNodeType(action.payload)\n        state[fileType].isLatest = true\n        state[fileType].isLoading = false\n      })\n      .addCase(uploadFile.pending, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          if (state[FILE_TREE_TYPE_SET.IMAGE] != null) {\n            state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.IMAGE] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          if (state[FILE_TREE_TYPE_SET.CSV] != null) {\n            state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.CSV] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          if (state[FILE_TREE_TYPE_SET.HDF5] != null) {\n            state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.HDF5] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        } else {\n          if (state[FILE_TREE_TYPE_SET.ALL] != null) {\n            state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n          } else {\n            state[FILE_TREE_TYPE_SET.ALL] = {\n              isLoading: false,\n              isLatest: false,\n              tree: [],\n            }\n          }\n        }\n      })\n      .addCase(uploadFile.fulfilled, (state, action) => {\n        const { fileType } = action.meta.arg\n        if (fileType === FILE_TYPE_SET.IMAGE) {\n          state[FILE_TREE_TYPE_SET.IMAGE].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.CSV) {\n          state[FILE_TREE_TYPE_SET.CSV].isLatest = false\n        } else if (fileType === FILE_TYPE_SET.HDF5) {\n          state[FILE_TREE_TYPE_SET.HDF5].isLatest = false\n        } else {\n          state[FILE_TREE_TYPE_SET.ALL].isLatest = false\n        }\n      })\n  },\n})\n\nexport default filesTreeSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport * as MuiColors from '@mui/material/colors'\n\nexport type HandleTypeColor = {\n  colorMap: { [type: string]: string }\n  /**\n   * HANDLE_COLOR_PRESET_MAPのkey\n   */\n  nextKey: number\n}\n\nconst initialState: HandleTypeColor = {\n  colorMap: {\n    ImageData: MuiColors.red[500],\n    IscellData: MuiColors.indigo[500],\n    TimeSeriesData: MuiColors.yellow[500],\n    Suite2pData: MuiColors.green[500],\n    FluoData: MuiColors.orange[500],\n    BehaviorData: MuiColors.yellow[500],\n  },\n  nextKey: 0,\n}\n\nconst SLICE_NAME = 'handleTypeColor'\n\nexport const handleTypeColorSlice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {},\n})\n\nexport default handleTypeColorSlice.reducer\n","import { HDF5TreeDTO } from 'api/hdf5/HDF5'\nimport { HDF5TreeNodeType } from './HDF5Type'\n\nexport function convertToTreeNodeType(dto: HDF5TreeDTO[]): HDF5TreeNodeType[] {\n  return dto.map((node) =>\n    node.isDir\n      ? {\n          name: node.name,\n          isDir: true,\n          nodes: convertToTreeNodeType(node.nodes),\n          path: node.path,\n        }\n      : {\n          name: node.name,\n          isDir: false,\n          shape: node.shape,\n          path: node.path,\n          nbytes: node.nbytes,\n        },\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nimport { getHDF5Tree } from './HDF5Action'\nimport { HDF5Tree, HDF5_SLICE_NAME } from './HDF5Type'\nimport { convertToTreeNodeType } from './HDF5Utils'\n\nconst initialState: HDF5Tree = {\n  isLoading: false,\n  tree: [],\n}\nexport const HDF5Slice = createSlice({\n  name: HDF5_SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getHDF5Tree.pending, (state, action) => {\n        state = {\n          isLoading: true,\n          tree: [],\n        }\n      })\n      .addCase(getHDF5Tree.fulfilled, (state, action) => {\n        state.tree = convertToTreeNodeType(action.payload)\n        state.isLoading = false\n      })\n  },\n})\n\nexport default HDF5Slice.reducer\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit'\nimport {\n  algorithmListReducer,\n  algorithmNodeReducer,\n  displayDataReducer,\n  fileUploaderReducer,\n  flowElementReducer,\n  inputNodeReducer,\n  nwbReducer,\n  filesTreeReducer,\n  handleTypeColorReducer,\n  rightDrawerReducer,\n  visualaizeItemReducer,\n  snakemakeReducer,\n  pipelineReducer,\n  hdf5Reducer,\n  experimentsReducer,\n  workspaceReducer,\n  userReducer,\n} from './slice'\n\nexport const rootReducer = combineReducers({\n  algorithmList: algorithmListReducer,\n  algorithmNode: algorithmNodeReducer,\n  displayData: displayDataReducer,\n  fileUploader: fileUploaderReducer,\n  flowElement: flowElementReducer,\n  inputNode: inputNodeReducer,\n  handleColor: handleTypeColorReducer,\n  filesTree: filesTreeReducer,\n  nwb: nwbReducer,\n  rightDrawer: rightDrawerReducer,\n  visualaizeItem: visualaizeItemReducer,\n  snakemake: snakemakeReducer,\n  pipeline: pipelineReducer,\n  hdf5: hdf5Reducer,\n  experiments: experimentsReducer,\n  workspace: workspaceReducer,\n  user: userReducer,\n})\n\nexport const store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\nexport type ThunkApiConfig<T = unknown, PendingMeta = unknown> = {\n  state: RootState\n  dispatch: AppDispatch\n  rejectValue: T\n  penfingMeta: PendingMeta\n}\n","import { createTheme } from '@mui/material/styles'\n\nexport const theme = createTheme({\n  components: {\n    MuiTextField: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiSelect: {\n      defaultProps: {\n        variant: 'standard',\n      },\n    },\n    MuiDialog: {\n      defaultProps: {\n        disableEscapeKeyDown: true,\n      },\n    },\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { Provider } from 'react-redux'\nimport { store } from 'store/store'\n\nimport { ThemeProvider } from '@mui/material/styles'\nimport { theme } from './Theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}
